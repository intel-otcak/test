From 55d53716968159547fd830a5de4da9ce533dd63e Mon Sep 17 00:00:00 2001
From: Pengpeng Cui <pengpengx.cui@intel.com>
Date: Thu, 29 Jan 2015 18:15:48 +0800
Subject: [PATCH 243/255] atomisp2: css2401 and
 2401_legacy-irci_master_20150128_1925

Merge CSS2.1 for css2401 and 2401_legacy
for irci_master_20150128_1925 firmware tag

Change-Id: I2d0bf4c05c16afc2cb27989af0a47743d9023ec3
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-19614
Signed-off-by: Pengpeng Cui <pengpengx.cui@intel.com>
Reviewed-on: https://icggerrit.ir.intel.com/38459
Approver: Wei Tao <wei.tao@intel.com>
Reviewed-by: Wei Tao <wei.tao@intel.com>
---
 .../camera/pipe/src/pipe_binarydesc.c              |   1 +
 .../css2401a0_legacy_v21/css_api_version.h         |   6 +-
 .../ia_css_isp_configs.h                           |   4 +-
 .../ia_css_isp_params.c                            |   9 +-
 .../pci/atomisp2/css2401a0_legacy_v21/ia_css.h     |   4 +-
 .../css2401a0_legacy_v21/ia_css_host_data.h        |   4 +-
 .../atomisp2/css2401a0_legacy_v21/ia_css_pipe.h    |  13 +-
 .../css2401a0_legacy_v21/ia_css_pipe_public.h      |   8 +-
 .../atomisp2/css2401a0_legacy_v21/ia_css_types.h   |   4 +-
 .../css2401a0_legacy_v21/ia_css_version_data.h     |   2 +-
 .../isp/kernels/fc/fc_1.0/ia_css_formats.host.c    |  15 +-
 .../isp/kernels/fc/fc_1.0/ia_css_formats.host.h    |   8 +-
 .../isp/kernels/hdr/ia_css_hdr.host.c              |   4 +-
 .../isp/kernels/hdr/ia_css_hdr.host.h              |   4 +-
 .../isp/kernels/hdr/ia_css_hdr_param.h             |   4 +-
 .../isp/kernels/hdr/ia_css_hdr_types.h             |   4 +-
 .../io_ls/bayer_io_ls/ia_css_bayer_io_param.h      |   4 +-
 .../io_ls/bayer_io_ls/ia_css_bayer_io_types.h      |   4 +-
 .../io_ls/plane_io_ls/ia_css_plane_io_param.h      |  39 +
 .../io_ls/plane_io_ls/ia_css_plane_io_types.h      |  46 ++
 .../io_ls/yuv420_io_ls/ia_css_yuv420_io_param.h    |  30 +
 .../io_ls/yuv420_io_ls/ia_css_yuv420_io_types.h    |  30 +
 .../isp/kernels/xnr/xnrvideo4/ia_css_xnr4.host.c   |  15 +-
 .../xnr/xnrvideo4/ia_css_xnr4_output_blend.host.c  |  47 ++
 .../xnr/xnrvideo4/ia_css_xnr4_output_blend.host.h  |  39 +
 .../xnr/xnrvideo4/ia_css_xnr4_output_blend_param.h |  47 ++
 .../xnr/xnrvideo4/ia_css_xnr4_output_blend_types.h |  35 +
 .../isp/kernels/xnr/xnrvideo4/ia_css_xnr4_param.h  |   2 +
 .../isp/kernels/xnr/xnrvideo4/ia_css_xnr4_types.h  |   2 +
 .../xnr/xnrvideo4/ia_css_xnr4_upsample_param.h     |   6 +-
 .../isp/modes/interface/input_buf.isp.h            |   5 +
 .../isp/modes/interface/isp_const.h                |  19 +-
 .../runtime/binary/interface/ia_css_binary.h       |   4 +-
 .../css2401a0_legacy_v21/runtime/timer/src/timer.c |  32 +
 .../pci/atomisp2/css2401a0_legacy_v21/sh_css.c     | 595 +++++++++-------
 .../atomisp2/css2401a0_legacy_v21/sh_css_defs.h    |   2 +-
 .../css2401a0_legacy_v21/sh_css_firmware.c         |   4 +-
 .../css2401a0_legacy_v21/sh_css_internal.h         |  14 +-
 .../atomisp2/css2401a0_legacy_v21/sh_css_params.c  |   3 +
 .../pci/atomisp2/css2401a0_legacy_v21/spmem_dump.c | 780 ++++++++++----------
 .../camera/pipe/src/pipe_binarydesc.c              |   1 +
 .../pci/atomisp2/css2401a0_v21/css_api_version.h   |   6 +-
 .../ia_css_isp_configs.h                           |   4 +-
 .../ia_css_isp_params.c                            |   9 +-
 .../media/pci/atomisp2/css2401a0_v21/ia_css.h      |   4 +-
 .../pci/atomisp2/css2401a0_v21/ia_css_host_data.h  |   4 +-
 .../media/pci/atomisp2/css2401a0_v21/ia_css_pipe.h |  13 +-
 .../atomisp2/css2401a0_v21/ia_css_pipe_public.h    |   8 +-
 .../pci/atomisp2/css2401a0_v21/ia_css_types.h      |   4 +-
 .../atomisp2/css2401a0_v21/ia_css_version_data.h   |   2 +-
 .../isp/kernels/fc/fc_1.0/ia_css_formats.host.c    |  15 +-
 .../isp/kernels/fc/fc_1.0/ia_css_formats.host.h    |   8 +-
 .../isp/kernels/hdr/ia_css_hdr.host.c              |   4 +-
 .../isp/kernels/hdr/ia_css_hdr.host.h              |   4 +-
 .../isp/kernels/hdr/ia_css_hdr_param.h             |   4 +-
 .../isp/kernels/hdr/ia_css_hdr_types.h             |   4 +-
 .../io_ls/bayer_io_ls/ia_css_bayer_io_param.h      |   4 +-
 .../io_ls/bayer_io_ls/ia_css_bayer_io_types.h      |   4 +-
 .../io_ls/plane_io_ls/ia_css_plane_io_param.h      |  39 +
 .../io_ls/plane_io_ls/ia_css_plane_io_types.h      |  46 ++
 .../io_ls/yuv420_io_ls/ia_css_yuv420_io_param.h    |  30 +
 .../io_ls/yuv420_io_ls/ia_css_yuv420_io_types.h    |  30 +
 .../isp/kernels/xnr/xnrvideo4/ia_css_xnr4.host.c   |  15 +-
 .../xnr/xnrvideo4/ia_css_xnr4_output_blend.host.c  |  47 ++
 .../xnr/xnrvideo4/ia_css_xnr4_output_blend.host.h  |  39 +
 .../xnr/xnrvideo4/ia_css_xnr4_output_blend_param.h |  47 ++
 .../xnr/xnrvideo4/ia_css_xnr4_output_blend_types.h |  35 +
 .../isp/kernels/xnr/xnrvideo4/ia_css_xnr4_param.h  |   2 +
 .../isp/kernels/xnr/xnrvideo4/ia_css_xnr4_types.h  |   2 +
 .../xnr/xnrvideo4/ia_css_xnr4_upsample_param.h     |   6 +-
 .../isp/modes/interface/input_buf.isp.h            |   5 +
 .../css2401a0_v21/isp/modes/interface/isp_const.h  |  19 +-
 .../runtime/binary/interface/ia_css_binary.h       |   4 +-
 .../css2401a0_v21/runtime/timer/src/timer.c        |  32 +
 .../media/pci/atomisp2/css2401a0_v21/sh_css.c      | 595 +++++++++-------
 .../media/pci/atomisp2/css2401a0_v21/sh_css_defs.h |   2 +-
 .../pci/atomisp2/css2401a0_v21/sh_css_firmware.c   |   4 +-
 .../pci/atomisp2/css2401a0_v21/sh_css_internal.h   |  14 +-
 .../pci/atomisp2/css2401a0_v21/sh_css_params.c     |   3 +
 .../media/pci/atomisp2/css2401a0_v21/spmem_dump.c  | 782 ++++++++++-----------
 80 files changed, 2417 insertions(+), 1381 deletions(-)
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/io_ls/plane_io_ls/ia_css_plane_io_param.h
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/io_ls/plane_io_ls/ia_css_plane_io_types.h
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/io_ls/yuv420_io_ls/ia_css_yuv420_io_param.h
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/io_ls/yuv420_io_ls/ia_css_yuv420_io_types.h
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend.host.c
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend.host.h
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend_param.h
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend_types.h
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/runtime/timer/src/timer.c
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/io_ls/plane_io_ls/ia_css_plane_io_param.h
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/io_ls/plane_io_ls/ia_css_plane_io_types.h
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/io_ls/yuv420_io_ls/ia_css_yuv420_io_param.h
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/io_ls/yuv420_io_ls/ia_css_yuv420_io_types.h
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend.host.c
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend.host.h
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend_param.h
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend_types.h
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/runtime/timer/src/timer.c

diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/camera/pipe/src/pipe_binarydesc.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/camera/pipe/src/pipe_binarydesc.c
index 0f5b2c5..20af57c 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/camera/pipe/src/pipe_binarydesc.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/camera/pipe/src/pipe_binarydesc.c
@@ -539,6 +539,7 @@ void ia_css_pipe_get_capturepp_binarydesc(
 	IA_CSS_LEAVE_PRIVATE("");
 }
 
+/* lookup table for high quality primary binaries */
 static unsigned int primary_hq_binary_modes[NUM_PRIMARY_HQ_STAGES] =
 {
 	IA_CSS_BINARY_MODE_PRIMARY_HQ_STAGE0,
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/css_api_version.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/css_api_version.h
index da39a1c..cb7a000 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/css_api_version.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/css_api_version.h
@@ -35,7 +35,7 @@ The version string has four dot-separated numbers, read left to right:
 
 */
 
-#define CSS_API_VERSION_STRING	"2.1.10.5"
+#define CSS_API_VERSION_STRING	"2.1.10.6"
 
 /*
 Change log
@@ -246,6 +246,10 @@ v2.1.10.5 (5 changes parallel), change the pipe version type from integer to enu
 v2.1.10.5 (2 changes parallel), Added public interface for setting the scaler LUT.
 - Added the public struct to output system and modified the global config struct.
 
+v2.1.10.6, new API getter functions for gdc in buffer information
+- ia_css_pipe_get_dvs_filter() added
+- ia_css_pipe_get_gdc_in_buffer_info() added
+
 */
 
 #endif /*__CSS_API_VERSION_H*/
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/hive_isp_css_2401_system_generated/ia_css_isp_configs.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/hive_isp_css_2401_system_generated/ia_css_isp_configs.h
index 0bc7fc0..ec3fb636 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/hive_isp_css_2401_system_generated/ia_css_isp_configs.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/hive_isp_css_2401_system_generated/ia_css_isp_configs.h
@@ -13,11 +13,9 @@
  */
 
 #ifdef IA_CSS_INCLUDE_CONFIGURATIONS
-#include "isp/kernels/copy_output/copy_output_1.0/ia_css_copy_output.host.h"
 #include "isp/kernels/crop/crop_1.0/ia_css_crop.host.h"
 #include "isp/kernels/dvs/dvs_1.0/ia_css_dvs.host.h"
 #include "isp/kernels/fpn/fpn_1.0/ia_css_fpn.host.h"
-#include "isp/kernels/iterator/iterator_1.0/ia_css_iterator.host.h"
 #include "isp/kernels/ob/ob_1.0/ia_css_ob.host.h"
 #include "isp/kernels/output/output_1.0/ia_css_output.host.h"
 #include "isp/kernels/qplane/qplane_2/ia_css_qplane.host.h"
@@ -26,6 +24,8 @@
 #include "isp/kernels/s3a/s3a_1.0/ia_css_s3a.host.h"
 #include "isp/kernels/tnr/tnr_1.0/ia_css_tnr.host.h"
 #include "isp/kernels/vf/vf_1.0/ia_css_vf.host.h"
+#include "isp/kernels/iterator/iterator_1.0/ia_css_iterator.host.h"
+#include "isp/kernels/copy_output/copy_output_1.0/ia_css_copy_output.host.h"
 #endif /* IA_CSS_INCLUDE_CONFIGURATIONS */
 /* Generated code: do not edit or commmit. */
 
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/hive_isp_css_2401_system_generated/ia_css_isp_params.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/hive_isp_css_2401_system_generated/ia_css_isp_params.c
index c5c85ac..b00a812 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/hive_isp_css_2401_system_generated/ia_css_isp_params.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/hive_isp_css_2401_system_generated/ia_css_isp_params.c
@@ -29,7 +29,6 @@
 #include "isp/kernels/de/de_1.0/ia_css_de.host.h"
 #include "isp/kernels/de/de_2/ia_css_de2.host.h"
 #include "isp/kernels/dp/dp_1.0/ia_css_dp.host.h"
-#include "isp/kernels/fc/fc_1.0/ia_css_formats.host.h"
 #include "isp/kernels/fixedbds/fixedbds_1.0/ia_css_fixedbds.host.h"
 #include "isp/kernels/fpn/fpn_1.0/ia_css_fpn.host.h"
 #include "isp/kernels/gc/gc_1.0/ia_css_gc.host.h"
@@ -39,7 +38,6 @@
 #include "isp/kernels/ob/ob_1.0/ia_css_ob.host.h"
 #include "isp/kernels/ob/ob2/ia_css_ob2.host.h"
 #include "isp/kernels/output/output_1.0/ia_css_output.host.h"
-#include "isp/kernels/iefd2_6/ia_css_iefd2_6.host.h"
 #include "isp/kernels/raw_aa_binning/raw_aa_binning_1.0/ia_css_raa.host.h"
 #include "isp/kernels/s3a/s3a_1.0/ia_css_s3a.host.h"
 #include "isp/kernels/sc/sc_1.0/ia_css_sc.host.h"
@@ -50,17 +48,14 @@
 #include "isp/kernels/wb/wb_1.0/ia_css_wb.host.h"
 #include "isp/kernels/xnr/xnr_1.0/ia_css_xnr.host.h"
 #include "isp/kernels/xnr/xnr_3.0/ia_css_xnr3.host.h"
-#include "isp/kernels/xnr/xnrvideo4/ia_css_xnrvideo4.host.h"
-#include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4.host.h"
-#include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_downsample.host.h"
-#include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_radial_metric.host.h"
 #include "isp/kernels/ynr/ynr_1.0/ia_css_ynr.host.h"
 #include "isp/kernels/ynr/ynr_2/ia_css_ynr2.host.h"
+#include "isp/kernels/fc/fc_1.0/ia_css_formats.host.h"
 #include "isp/kernels/tdf/tdf_1.0/ia_css_tdf.host.h"
+#include "isp/kernels/iefd2_6/ia_css_iefd2_6.host.h"
 #include "isp/kernels/dpc2/ia_css_dpc2.host.h"
 #include "isp/kernels/eed1_8/ia_css_eed1_8.host.h"
 #include "isp/kernels/bnlm/ia_css_bnlm.host.h"
-#include "isp/kernels/io_ls/bayer_io_ls/ia_css_bayer_io.host.h"
 #include "isp/kernels/conversion/conversion_1.0/ia_css_conversion.host.h"
 /* Generated code: do not edit or commmit. */
 
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css.h
index 7291d90..4cfde80 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150122_0200 */
-/* Release Version: irci_master_20150122_0200 */
+/* Release Version: irci_master_20150128_1925 */
+/* Release Version: irci_master_20150128_1925 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_host_data.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_host_data.h
index b4c2c02..0b05799 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_host_data.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_host_data.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150122_0200 */
-/* Release Version: irci_master_20150122_0200 */
+/* Release Version: irci_master_20150128_1925 */
+/* Release Version: irci_master_20150128_1925 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_pipe.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_pipe.h
index e7223b1..9c62f91 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_pipe.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_pipe.h
@@ -47,11 +47,10 @@ struct ia_css_preview_settings {
 
 struct ia_css_capture_settings {
 	struct ia_css_binary copy_binary;
-	struct ia_css_binary primary_binary;
-	/* primary_hq_binary(high quality primary) is used for ISP2.6.1 HQ still
-	 * capture pipe. In this pipe, primary binary is splitted to multiple
-	 * stages due to the high computation load. */
-	struct ia_css_binary primary_hq_binary[NUM_PRIMARY_HQ_STAGES];
+	/* we extend primary binary to multiple stages because in ISP2.6.1
+	 * the computation load is too high to fit in one single binary. */
+	struct ia_css_binary primary_binary[MAX_NUM_PRIMARY_STAGES];
+	unsigned int num_primary_stage;
 	struct ia_css_binary pre_isp_binary;
 	struct ia_css_binary anr_gdc_binary;
 	struct ia_css_binary post_isp_binary;
@@ -66,8 +65,8 @@ struct ia_css_capture_settings {
 #define IA_CSS_DEFAULT_CAPTURE_SETTINGS \
 { \
 	IA_CSS_BINARY_DEFAULT_SETTINGS,	/* copy_binary */\
-	IA_CSS_BINARY_DEFAULT_SETTINGS,	/* primary_binary */\
-	{IA_CSS_BINARY_DEFAULT_SETTINGS},	/* primary_hq_binary */\
+	{IA_CSS_BINARY_DEFAULT_SETTINGS},	/* primary_binary */\
+	0,				/* num_primary_stage */\
 	IA_CSS_BINARY_DEFAULT_SETTINGS,	/* pre_isp_binary */\
 	IA_CSS_BINARY_DEFAULT_SETTINGS,	/* anr_gdc_binary */\
 	IA_CSS_BINARY_DEFAULT_SETTINGS,	/* post_isp_binary */\
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_pipe_public.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_pipe_public.h
index 3186c0b..0d66b24 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_pipe_public.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_pipe_public.h
@@ -124,6 +124,10 @@ struct ia_css_pipe_config {
 	     to false. In some use cases this provides better performance. */
 	struct ia_css_isp_config *p_isp_config;
 	/**< Pointer to ISP configuration */
+	struct ia_css_resolution gdc_in_buffer_res;
+	/**< GDC in buffer resolution. */
+	struct ia_css_point gdc_in_buffer_offset;
+	/**< GDC in buffer offset - indicates the pixel coordinates of the first valid pixel inside the buffer */
 };
 
 /**
@@ -149,7 +153,9 @@ struct ia_css_pipe_config {
 	-1,					/* acc_num_execs */ \
 	false,					/* enable_dz */ \
 	false,					/* enable_dpc */ \
-	NULL					/* p_isp_config */\
+	NULL,					/* p_isp_config */\
+	{ 0, 0 },				/* gdc_in_buffer_res */ \
+	{ 0, 0 }				/* gdc_in_buffer_offset */ \
 }
 
 /** Pipe info, this struct describes properties of a pipe after it's stream has
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_types.h
index 6f804b3..056ec8e 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_types.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150122_0200 */
-/* Release Version: irci_master_20150122_0200 */
+/* Release Version: irci_master_20150128_1925 */
+/* Release Version: irci_master_20150128_1925 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_version_data.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_version_data.h
index 674306b..3ed5adc 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_version_data.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_version_data.h
@@ -22,7 +22,7 @@
 #define __IA_CSS_VERSION_DATA_H
 
 
-#define CSS_VERSION_STRING "REL:20150122_04.4_0257; API:2.1.10.5; GIT:irci_20150121_1500__b6e2cf#b6e2cf097b446439a5d3733cc823f130ce5d882b; SDK:/nfs/iir/disks/iir_hivepackages_003/iir_hivepkgs_disk017/Css_Mizuchi/packages/Css_Mizuchi/int_css_mizuchi_20140829_1053; USER:viedifw; "
+#define CSS_VERSION_STRING "REL:20150128_05.3_2000; API:2.1.10.6; GIT:scci_20150128_0106_#7472445671f4b07d126c6c563208e8e73389dc89; SDK:/nfs/iir/disks/iir_hivepackages_003/iir_hivepkgs_disk017/Css_Mizuchi/packages/Css_Mizuchi/int_css_mizuchi_20140829_1053; USER:viedifw; "
 
 
 #endif
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/fc/fc_1.0/ia_css_formats.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/fc/fc_1.0/ia_css_formats.host.c
index 9b41b00..94631ee 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/fc/fc_1.0/ia_css_formats.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/fc/fc_1.0/ia_css_formats.host.c
@@ -15,10 +15,12 @@
 #include "ia_css_formats.host.h"
 #include "ia_css_types.h"
 #include "sh_css_defs.h"
-#include "ia_css_debug.h"
-//#include "sh_css_frac.h"
-
 
+/*#include "sh_css_frac.h"*/
+#ifndef IA_CSS_NO_DEBUG
+/* FIXME: See BZ 4427 */
+#include "ia_css_debug.h"
+#endif
 
 const struct ia_css_formats_config default_formats_config = {
 	1
@@ -33,7 +35,8 @@ ia_css_formats_encode(
 	(void)size;
 	to->video_full_range_flag = from->video_full_range_flag;
 }
-
+#ifndef IA_CSS_NO_DEBUG
+/* FIXME: See BZ 4427 */
 void
 ia_css_formats_dump(
 	const struct sh_css_isp_formats_params *formats,
@@ -43,7 +46,10 @@ ia_css_formats_dump(
 	ia_css_debug_dtrace(level, "\t%-32s = %d\n",
 			"video_full_range_flag", formats->video_full_range_flag);
 }
+#endif
 
+#ifndef IA_CSS_NO_DEBUG
+/* FIXME: See BZ 4427 */
 void
 ia_css_formats_debug_dtrace(
 	const struct ia_css_formats_config *config,
@@ -53,3 +59,4 @@ ia_css_formats_debug_dtrace(
 		"config.video_full_range_flag=%d\n",
 		config->video_full_range_flag);
 }
+#endif
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/fc/fc_1.0/ia_css_formats.host.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/fc/fc_1.0/ia_css_formats.host.h
index ea8bec8..8a90cd8 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/fc/fc_1.0/ia_css_formats.host.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/fc/fc_1.0/ia_css_formats.host.h
@@ -25,15 +25,21 @@ ia_css_formats_encode(
 	struct sh_css_isp_formats_params *to,
 	const struct ia_css_formats_config *from,
 	unsigned size);
-
+#ifndef IA_CSS_NO_DEBUG
+/* FIXME: See BZ 4427 */
 void
 ia_css_formats_dump(
 	const struct sh_css_isp_formats_params *formats,
 	unsigned level);
+#endif
 
+#ifndef IA_CSS_NO_DEBUG
+/* FIXME: See BZ 4427 */
 void
 ia_css_formats_debug_dtrace(
 	const struct ia_css_formats_config *formats,
 	unsigned level);
+#endif /*IA_CSS_NO_DEBUG*/
 
 #endif /* __IA_CSS_FORMATS_HOST_H */
+
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr.host.c
index 9cccd3b..fe4ee99 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr.host.c
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150122_0200 */
-/* Release Version: irci_master_20150122_0200 */
+/* Release Version: irci_master_20150128_1925 */
+/* Release Version: irci_master_20150128_1925 */
 /*
  * INTEL CONFIDENTIAL
  *
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr.host.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr.host.h
index 81ae9c1..033557c 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr.host.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr.host.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150122_0200 */
-/* Release Version: irci_master_20150122_0200 */
+/* Release Version: irci_master_20150128_1925 */
+/* Release Version: irci_master_20150128_1925 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr_param.h
index 5f8f61d..a059bdf 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr_param.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150122_0200 */
-/* Release Version: irci_master_20150122_0200 */
+/* Release Version: irci_master_20150128_1925 */
+/* Release Version: irci_master_20150128_1925 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr_types.h
index 8d61340..e3568c5 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr_types.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150122_0200 */
-/* Release Version: irci_master_20150122_0200 */
+/* Release Version: irci_master_20150128_1925 */
+/* Release Version: irci_master_20150128_1925 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/io_ls/bayer_io_ls/ia_css_bayer_io_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/io_ls/bayer_io_ls/ia_css_bayer_io_param.h
index 8b4fbf0..ecf86bd 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/io_ls/bayer_io_ls/ia_css_bayer_io_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/io_ls/bayer_io_ls/ia_css_bayer_io_param.h
@@ -15,13 +15,15 @@
 #ifndef __IA_CSS_BAYER_IO_PARAM
 #define __IA_CSS_BAYER_IO_PARAM
 
+#include "ia_css_bayer_io_types.h"
+
 struct bayer_io_configuration {
 	unsigned base_address;
 	unsigned width;
 	unsigned height;
 	unsigned stride;
 	unsigned ddr_elems_per_word;
-	unsigned dma_channel;
+	unsigned dma_channel[NUM_BAYER_DMA_CHANNELS];
 };
 
 #endif /* __IA_CSS_BAYER_IO_PARAM */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/io_ls/bayer_io_ls/ia_css_bayer_io_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/io_ls/bayer_io_ls/ia_css_bayer_io_types.h
index a85f536..77e1787 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/io_ls/bayer_io_ls/ia_css_bayer_io_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/io_ls/bayer_io_ls/ia_css_bayer_io_types.h
@@ -16,13 +16,15 @@
 #ifndef __IA_CSS_BAYER_IO_TYPES_H
 #define __IA_CSS_BAYER_IO_TYPES_H
 
+#define NUM_BAYER_DMA_CHANNELS 1
+
 struct ia_css_bayer_io_config {
 	unsigned base_address;
 	unsigned width;
 	unsigned height;
 	unsigned stride;
 	unsigned ddr_elems_per_word;
-	unsigned dma_channel;
+	unsigned dma_channel[NUM_BAYER_DMA_CHANNELS];
 };
 
 #endif /* __IA_CSS_BAYER_IO_TYPES_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/io_ls/plane_io_ls/ia_css_plane_io_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/io_ls/plane_io_ls/ia_css_plane_io_param.h
new file mode 100644
index 0000000..dce2b0b
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/io_ls/plane_io_ls/ia_css_plane_io_param.h
@@ -0,0 +1,39 @@
+/*
+ * INTEL CONFIDENTIAL
+ *
+ * Copyright (C) 2010 - 2015 Intel Corporation.
+ * All Rights Reserved.
+ *
+ * The source code contained or described herein and all documents
+ * related to the source code ("Material") are owned by Intel Corporation
+ * or licensors. Title to the Material remains with Intel
+ * Corporation or its licensors. The Material contains trade
+ * secrets and proprietary and confidential information of Intel or its
+ * licensors. The Material is protected by worldwide copyright
+ * and trade secret laws and treaty provisions. No part of the Material may
+ * be used, copied, reproduced, modified, published, uploaded, posted,
+ * transmitted, distributed, or disclosed in any way without Intel's prior
+ * express written permission.
+ *
+ * No License under any patent, copyright, trade secret or other intellectual
+ * property right is granted to or conferred upon you by disclosure or
+ * delivery of the Materials, either expressly, by implication, inducement,
+ * estoppel or otherwise. Any license under such intellectual property rights
+ * must be express and approved by Intel in writing.
+ */
+
+#ifndef __IA_CSS_PLANE_IO_PARAM_H
+#define __IA_CSS_PLANE_IO_PARAM_H
+
+#include "ia_css_plane_io_types.h"
+
+struct sh_css_plane_io_config {
+	unsigned base_address;
+	unsigned width;
+	unsigned height;
+	unsigned stride;
+	unsigned ddr_elems_per_word;
+	unsigned dma_channel[PLANE_IO_LS_NUM_DMA_CHANNELS];
+};
+
+#endif /* __IA_CSS_PLANE_IO_PARAM_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/io_ls/plane_io_ls/ia_css_plane_io_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/io_ls/plane_io_ls/ia_css_plane_io_types.h
new file mode 100644
index 0000000..c11b540
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/io_ls/plane_io_ls/ia_css_plane_io_types.h
@@ -0,0 +1,46 @@
+/*
+ * INTEL CONFIDENTIAL
+ *
+ * Copyright (C) 2010 - 2015 Intel Corporation.
+ * All Rights Reserved.
+ *
+ * The source code contained or described herein and all documents
+ * related to the source code ("Material") are owned by Intel Corporation
+ * or licensors. Title to the Material remains with Intel
+ * Corporation or its licensors. The Material contains trade
+ * secrets and proprietary and confidential information of Intel or its
+ * licensors. The Material is protected by worldwide copyright
+ * and trade secret laws and treaty provisions. No part of the Material may
+ * be used, copied, reproduced, modified, published, uploaded, posted,
+ * transmitted, distributed, or disclosed in any way without Intel's prior
+ * express written permission.
+ *
+ * No License under any patent, copyright, trade secret or other intellectual
+ * property right is granted to or conferred upon you by disclosure or
+ * delivery of the Materials, either expressly, by implication, inducement,
+ * estoppel or otherwise. Any license under such intellectual property rights
+ * must be express and approved by Intel in writing.
+ */
+
+#ifndef __IA_CSS_PLANE_IO_TYPES_H
+#define __IA_CSS_PLANE_IO_TYPES_H
+
+#define PLANE_IO_LS_NUM_PLANES       3
+#define PLANE_IO_LS_NUM_DMA_CHANNELS 1
+
+struct plane_io_config {
+	unsigned base_address;
+	unsigned width;
+	unsigned height;
+	unsigned stride;
+	unsigned ddr_elems_per_word;
+	unsigned dma_channel[PLANE_IO_LS_NUM_DMA_CHANNELS];
+};
+
+struct ia_css_plane_io_config {
+	struct plane_io_config get_plane_io_config[PLANE_IO_LS_NUM_PLANES];
+	struct plane_io_config put_plane_io_config[PLANE_IO_LS_NUM_PLANES];
+};
+
+#endif /* __IA_CSS_PLANE_IO_TYPES_H */
+
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/io_ls/yuv420_io_ls/ia_css_yuv420_io_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/io_ls/yuv420_io_ls/ia_css_yuv420_io_param.h
new file mode 100644
index 0000000..5453a19
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/io_ls/yuv420_io_ls/ia_css_yuv420_io_param.h
@@ -0,0 +1,30 @@
+/*
+ * Support for Intel Camera Imaging ISP subsystem.
+ * Copyright (c) 2015, Intel Corporation.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms and conditions of the GNU General Public License,
+ * version 2, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ */
+
+#ifndef __IA_CSS_YUV420_IO_PARAM
+#define __IA_CSS_YUV420_IO_PARAM
+
+#define NUM_YUV420_DMA_CHANNELS 2
+
+struct ia_css_yuv420_io_params {
+	unsigned base_address;
+	unsigned width;
+	unsigned height;
+	unsigned stride;
+	unsigned ddr_elems_per_word;
+	unsigned dma_channel[NUM_YUV420_DMA_CHANNELS];
+};
+
+
+#endif
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/io_ls/yuv420_io_ls/ia_css_yuv420_io_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/io_ls/yuv420_io_ls/ia_css_yuv420_io_types.h
new file mode 100644
index 0000000..5c01e3a
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/io_ls/yuv420_io_ls/ia_css_yuv420_io_types.h
@@ -0,0 +1,30 @@
+/*
+ * Support for Intel Camera Imaging ISP subsystem.
+ * Copyright (c) 2015, Intel Corporation.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms and conditions of the GNU General Public License,
+ * version 2, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ */
+
+#ifndef __IA_CSS_YUV420_IO_TYPES
+#define __IA_CSS_YUV420_IO_TYPES
+
+#define NUM_YUV420_DMA_CHANNELS 2
+
+struct ia_css_yuv420_io_config {
+	unsigned base_address;
+	unsigned width;
+	unsigned height;
+	unsigned stride;
+	unsigned ddr_elems_per_word;
+	unsigned dma_channel[NUM_YUV420_DMA_CHANNELS];
+};
+
+
+#endif
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4.host.c
index 59a4c2d..049b6d0 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4.host.c
@@ -32,7 +32,7 @@
 #include "ia_css_xnr4.host.h"
 #include "ia_css_xnr4_downsample.host.h"
 #include "ia_css_xnr4_radial_metric.host.h"
-
+#include "ia_css_xnr4_output_blend.host.h"
 
 void
 ia_css_xnr4_encode(
@@ -43,12 +43,17 @@ ia_css_xnr4_encode(
 	(void)size;
 	/* encode down sample parameters */
 	ia_css_xnr4_downsample_encode(&to->xnr4_downsample,
-				      &from->xnr4_downsample_config,
-				      sizeof(struct ia_css_xnr4_downsample_config));
+			&from->xnr4_downsample_config,
+			sizeof(struct ia_css_xnr4_downsample_config));
 	/* encode radial metric parameters */
 	ia_css_xnr4_radial_metric_encode(&to->xnr4_radial_metric,
-					 &from->xnr4_radial_metric_config,
-					 sizeof(struct ia_css_xnr4_radial_metric_config));
+			&from->xnr4_radial_metric_config,
+			sizeof(struct ia_css_xnr4_radial_metric_config));
+	/* encode output blend parameters */
+	ia_css_xnr4_output_blend_encode(&to->xnr4_output_blend,
+			&from->xnr4_output_blend_config,
+			sizeof(struct ia_css_xnr4_output_blend_config));
+
 }
 
 
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend.host.c
new file mode 100644
index 0000000..ee171f4
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend.host.c
@@ -0,0 +1,47 @@
+/*
+ * INTEL CONFIDENTIAL
+ *
+ * Copyright (C) 2010 - 2015 Intel Corporation.
+ * All Rights Reserved.
+ *
+ * The source code contained or described herein and all documents
+ * related to the source code ("Material") are owned by Intel Corporation
+ * or licensors. Title to the Material remains with Intel
+ * Corporation or its licensors. The Material contains trade
+ * secrets and proprietary and confidential information of Intel or its
+ * licensors. The Material is protected by worldwide copyright
+ * and trade secret laws and treaty provisions. No part of the Material may
+ * be used, copied, reproduced, modified, published, uploaded, posted,
+ * transmitted, distributed, or disclosed in any way without Intel's prior
+ * express written permission.
+ *
+ * No License under any patent, copyright, trade secret or other intellectual
+ * property right is granted to or conferred upon you by disclosure or
+ * delivery of the Materials, either expressly, by implication, inducement,
+ * estoppel or otherwise. Any license under such intellectual property rights
+ * must be express and approved by Intel in writing.
+ */
+
+#include "ia_css_types.h"
+#include "sh_css_defs.h"
+#ifndef IA_CSS_NO_DEBUG
+#include "ia_css_debug.h"
+#endif
+#include "sh_css_frac.h"
+
+#include "ia_css_xnr4_output_blend.host.h"
+
+const struct ia_css_xnr4_output_blend_config default_xnr4_output_blend_config = {
+	0, /* Output blend bypass value - luma */
+	0 /* Output blend bypass value - chroma */
+};
+
+void ia_css_xnr4_output_blend_encode(
+	struct sh_css_isp_xnr4_output_blend_params *to,
+	const struct ia_css_xnr4_output_blend_config *from,
+	unsigned size)
+{
+	(void)size;
+	to->m_bypass_mf_y  = from->m_bypass_mf_y;
+	to->m_bypass_mf_c  = from->m_bypass_mf_c;
+}
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend.host.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend.host.h
new file mode 100644
index 0000000..9046b89
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend.host.h
@@ -0,0 +1,39 @@
+/*
+ * INTEL CONFIDENTIAL
+ *
+ * Copyright (C) 2010 - 2015 Intel Corporation.
+ * All Rights Reserved.
+ *
+ * The source code contained or described herein and all documents
+ * related to the source code ("Material") are owned by Intel Corporation
+ * or licensors. Title to the Material remains with Intel
+ * Corporation or its licensors. The Material contains trade
+ * secrets and proprietary and confidential information of Intel or its
+ * licensors. The Material is protected by worldwide copyright
+ * and trade secret laws and treaty provisions. No part of the Material may
+ * be used, copied, reproduced, modified, published, uploaded, posted,
+ * transmitted, distributed, or disclosed in any way without Intel's prior
+ * express written permission.
+ *
+ * No License under any patent, copyright, trade secret or other intellectual
+ * property right is granted to or conferred upon you by disclosure or
+ * delivery of the Materials, either expressly, by implication, inducement,
+ * estoppel or otherwise. Any license under such intellectual property rights
+ * must be express and approved by Intel in writing.
+ */
+#ifndef __IA_CSS_XNR4_OUTPUT_BLEND_HOST_H
+#define __IA_CSS_XNR4_OUTPUT_BLEND_HOST_H
+
+#include "ia_css_xnr4_output_blend_types.h"
+#include "ia_css_xnr4_output_blend_param.h"
+
+extern const struct ia_css_xnr4_output_blend_config default_xnr4_output_blend_config;
+
+void
+ia_css_xnr4_output_blend_encode(
+	struct sh_css_isp_xnr4_output_blend_params *to,
+	const struct ia_css_xnr4_output_blend_config *from,
+	unsigned size);
+
+#endif /* __IA_CSS_XNR4_OUTPUT_BLEND_HOST_H */
+
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend_param.h
new file mode 100644
index 0000000..93a9c80
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend_param.h
@@ -0,0 +1,47 @@
+/*
+ * INTEL CONFIDENTIAL
+ *
+ * Copyright (C) 2010 - 2015 Intel Corporation.
+ * All Rights Reserved.
+ *
+ * The source code contained or described herein and all documents
+ * related to the source code ("Material") are owned by Intel Corporation
+ * or licensors. Title to the Material remains with Intel
+ * Corporation or its licensors. The Material contains trade
+ * secrets and proprietary and confidential information of Intel or its
+ * licensors. The Material is protected by worldwide copyright
+ * and trade secret laws and treaty provisions. No part of the Material may
+ * be used, copied, reproduced, modified, published, uploaded, posted,
+ * transmitted, distributed, or disclosed in any way without Intel's prior
+ * express written permission.
+ *
+ * No License under any patent, copyright, trade secret or other intellectual
+ * property right is granted to or conferred upon you by disclosure or
+ * delivery of the Materials, either expressly, by implication, inducement,
+ * estoppel or otherwise. Any license under such intellectual property rights
+ * must be express and approved by Intel in writing.
+ */
+#ifndef __IA_CSS_XNR4_OUTPUT_BLEND_PARAM_H
+#define __IA_CSS_XNR4_OUTPUT_BLEND_PARAM_H
+
+#include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_common_param.h"
+#include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_upsample_param.h"
+
+/* Output Blend Subkernel Configuration */
+
+/* TODO: get the delay from JBL */
+#define XNR4_JBL_VER_DELAY			(3)
+#define XNR4_JBL_HOR_DELAY			(1)
+
+#define XNR4_OUTPUT_BLEND_VER_DELAY		((XNR4_JBL_VER_DELAY * XNR4_LUMA_DS_FACTOR) + \
+						(XNR4_UPSCALE_VER_DELAY * XNR4_LUMA_DS_FACTOR))
+#define XNR4_OUTPUT_BLEND_HOR_DELAY		((XNR4_JBL_HOR_DELAY * XNR4_LUMA_DS_FACTOR) + \
+						(XNR4_UPSCALE_HOR_DELAY * XNR4_LUMA_DS_FACTOR))
+
+/* XNR4 Output Blend Parameters */
+struct sh_css_isp_xnr4_output_blend_params {
+	uint16_t m_bypass_mf_y; /* Output blend bypass value - luma */
+	uint16_t m_bypass_mf_c; /* Output blend bypass value - chroma */
+};
+
+#endif /* __IA_CSS_XNR4_RADIAL_METRIC_PARAM_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend_types.h
new file mode 100644
index 0000000..edd1622
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend_types.h
@@ -0,0 +1,35 @@
+/*
+ * INTEL CONFIDENTIAL
+ *
+ * Copyright (C) 2010 - 2015 Intel Corporation.
+ * All Rights Reserved.
+ *
+ * The source code contained or described herein and all documents
+ * related to the source code ("Material") are owned by Intel Corporation
+ * or licensors. Title to the Material remains with Intel
+ * Corporation or its licensors. The Material contains trade
+ * secrets and proprietary and confidential information of Intel or its
+ * licensors. The Material is protected by worldwide copyright
+ * and trade secret laws and treaty provisions. No part of the Material may
+ * be used, copied, reproduced, modified, published, uploaded, posted,
+ * transmitted, distributed, or disclosed in any way without Intel's prior
+ * express written permission.
+ *
+ * No License under any patent, copyright, trade secret or other intellectual
+ * property right is granted to or conferred upon you by disclosure or
+ * delivery of the Materials, either expressly, by implication, inducement,
+ * estoppel or otherwise. Any license under such intellectual property rights
+ * must be express and approved by Intel in writing.
+ */
+#ifndef __IA_CSS_XNR4_OUTPUT_BLEND_TYPES_H
+#define __IA_CSS_XNR4_OUTPUT_BLEND_TYPES_H
+
+#include "ia_css_xnr4_output_blend_param.h"
+
+/* XNR4 output blend configuration  */
+struct ia_css_xnr4_output_blend_config {
+	uint16_t m_bypass_mf_y; /* Output blend bypass value - luma */
+	uint16_t m_bypass_mf_c; /* Output blend bypass value - chroma */
+};
+
+#endif /* __IA_CSS_XNR4_OUTPUT_BLEND_TYPES_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_param.h
index 8b0396b..6fbf095 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_param.h
@@ -28,11 +28,13 @@
 #include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_upsample_param.h"
 #include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_edge_metric_param.h"
 #include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_radial_metric_param.h"
+#include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend_param.h"
 
 /* XNR4 Parameters */
 struct sh_css_isp_xnr4_params {
 	struct sh_css_isp_xnr4_downsample_params xnr4_downsample;
 	struct sh_css_isp_xnr4_radial_metric_params xnr4_radial_metric;
+	struct sh_css_isp_xnr4_output_blend_params xnr4_output_blend;
 };
 
 #endif /* __IA_CSS_XNR4_PARAM_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_types.h
index 2b2a1d6a..d5ea1da 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_types.h
@@ -26,10 +26,12 @@
 
 #include "ia_css_xnr4_downsample_types.h"
 #include "ia_css_xnr4_radial_metric_types.h"
+#include "ia_css_xnr4_output_blend_types.h"
 
 struct ia_css_xnr4_config {
 	struct ia_css_xnr4_downsample_config xnr4_downsample_config;
 	struct ia_css_xnr4_radial_metric_config xnr4_radial_metric_config;
+	struct ia_css_xnr4_output_blend_config xnr4_output_blend_config;
 };
 
 #endif /* __IA_CSS_XNR4_TYPES_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_upsample_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_upsample_param.h
index f843328..c49dc67 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_upsample_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_upsample_param.h
@@ -21,8 +21,8 @@
  * estoppel or otherwise. Any license under such intellectual property rights
  * must be express and approved by Intel in writing.
  */
-#ifndef _XNR4_UPSAMPLE_PARAM_H_
-#define _XNR4_UPSAMPLE_PARAM_H_
+#ifndef _IA_CSS_XNR4_UPSAMPLE_PARAM_H_
+#define _IA_CSS_XNR4_UPSAMPLE_PARAM_H_
 
 #include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_downsample_param.h"
 
@@ -67,4 +67,4 @@
 
 
 
-#endif /*_XNR4_UPSAMPLE_PARAM_H_ */
+#endif /*_IA_CSS_XNR4_UPSAMPLE_PARAM_H_ */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/modes/interface/input_buf.isp.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/modes/interface/input_buf.isp.h
index fb4aa77..a60b38e 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/modes/interface/input_buf.isp.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/modes/interface/input_buf.isp.h
@@ -38,7 +38,12 @@
 typedef struct {
   tmemvectoru  raw[INPUT_BUF_HEIGHT][INPUT_BUF_LINES][MAX_VECTORS_PER_INPUT_LINE_CONT]; /* 2 bayer lines */
   /* Two more lines for SP raw copy efficiency */
+#ifndef ENABLE_REDUCED_INPUT_BUFFER
+  /* "Workaround" solution in the case that space needed vmem exceeds the size of the vmem. */
+  /* Since in theory this buffer is not needed for IPU 2.2/2.3,  */
+  /* the workaround solution will not be needed (and the whole buffer) after the code refactoring. */
   tmemvectoru _raw[INPUT_BUF_HEIGHT][INPUT_BUF_LINES][MAX_VECTORS_PER_INPUT_LINE_CONT]; /* 2 bayer lines */
+#endif
 } input_line_type;
 #else /* ENABLE CONTINUOUS == 0 */
 typedef struct {
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/modes/interface/isp_const.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/modes/interface/isp_const.h
index 28cc177..1f2bf67 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/modes/interface/isp_const.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/modes/interface/isp_const.h
@@ -103,15 +103,16 @@
 #define SH_CSS_BINARY_ID_VIDEO_CONT_BDS_300_600_ISP2_MIN 47
 #define SH_CSS_BINARY_ID_VIDEO_CONT_DPC_BDS150_ISP2_MIN 48
 #define SH_CSS_BINARY_ID_VIDEO_CONT_BDS150_ISP2_MIN   49
-#define SH_CSS_BINARY_ID_VIDEO_CONT_BDS200_ISP2_MIN   50
-#define SH_CSS_BINARY_ID_VIDEO_CONT_NOBDS_ISP2_MIN    51
-#define SH_CSS_BINARY_ID_VIDEO_DZ_ISP2_MIN      52
-#define SH_CSS_BINARY_ID_VIDEO_DZ_ISP2          53
-#define SH_CSS_BINARY_ID_VIDEO_LP_ISP2          54
-#define SH_CSS_BINARY_ID_RESERVED1              55
-#define SH_CSS_BINARY_ID_ACCELERATION           56
-#define SH_CSS_BINARY_ID_PRE_DE_ISP2            57
-#define SH_CSS_BINARY_ID_KERNEL_TEST_LOAD_STORE 58
+#define SH_CSS_BINARY_ID_VIDEO_CONT_DPC_BDS200_ISP2_MIN   50
+#define SH_CSS_BINARY_ID_VIDEO_CONT_BDS200_ISP2_MIN   51
+#define SH_CSS_BINARY_ID_VIDEO_CONT_NOBDS_ISP2_MIN    52
+#define SH_CSS_BINARY_ID_VIDEO_DZ_ISP2_MIN      53
+#define SH_CSS_BINARY_ID_VIDEO_DZ_ISP2          54
+#define SH_CSS_BINARY_ID_VIDEO_LP_ISP2          55
+#define SH_CSS_BINARY_ID_RESERVED1              56
+#define SH_CSS_BINARY_ID_ACCELERATION           57
+#define SH_CSS_BINARY_ID_PRE_DE_ISP2            58
+#define SH_CSS_BINARY_ID_KERNEL_TEST_LOAD_STORE 59
 
 /* skycam product pipelines */
 #define SH_CSS_BINARY_ID_PRIMARY                            101
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/runtime/binary/interface/ia_css_binary.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/runtime/binary/interface/ia_css_binary.h
index 85ae48b..37fc509 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/runtime/binary/interface/ia_css_binary.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/runtime/binary/interface/ia_css_binary.h
@@ -45,7 +45,9 @@
 #define IA_CSS_BINARY_MODE_PRIMARY_HQ_STAGE5    16
 #define IA_CSS_BINARY_NUM_MODES       17
 
-#define NUM_PRIMARY_HQ_STAGES 6
+#define MAX_NUM_PRIMARY_STAGES 6
+#define NUM_PRIMARY_HQ_STAGES  6  /* number of primary stages for ISP2.6.1 high quality pipe */
+#define NUM_PRIMARY_STAGES     1  /* number of primary satges for ISP1/ISP2.2 pipe */
 
 /* Indicate where binaries can read input from */
 #define IA_CSS_BINARY_INPUT_SENSOR   0
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/runtime/timer/src/timer.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/runtime/timer/src/timer.c
new file mode 100644
index 0000000..75215fd
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/runtime/timer/src/timer.c
@@ -0,0 +1,32 @@
+/*
+ * Support for Intel Camera Imaging ISP subsystem.
+ * Copyright (c) 2015, Intel Corporation.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms and conditions of the GNU General Public License,
+ * version 2, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ */
+
+#include <type_support.h>		/* for uint32_t */
+#include "ia_css_timer.h" /*struct ia_css_clock_tick */
+#include "sh_css_legacy.h" /* IA_CSS_PIPE_ID_NUM*/
+#include "gp_timer.h" /*gp_timer_read()*/
+#include "assert_support.h"
+
+enum ia_css_err
+ia_css_timer_get_current_tick(
+	struct ia_css_clock_tick *curr_ts) {
+
+	assert(curr_ts !=  NULL);
+	if (curr_ts == NULL) {
+		return IA_CSS_ERR_INVALID_ARGUMENTS;
+	}
+	curr_ts->ticks = (clock_value_t)gp_timer_read(GP_TIMER_SEL);
+	return IA_CSS_SUCCESS;
+}
+
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css.c
index 2de7ec8..2e9b18d 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css.c
@@ -185,20 +185,20 @@ static bool fw_explicitly_loaded = false;
  */
 static enum ia_css_err
 allocate_delay_frames(enum ia_css_pipe_id mode,
-	       	      struct ia_css_video_settings *mycs_video,
-	              struct ia_css_capture_settings *mycs_capture,
-	              unsigned int dvs_frame_delay);
+		struct ia_css_video_settings *mycs_video,
+		struct ia_css_capture_settings *mycs_capture,
+		unsigned int dvs_frame_delay);
 
 static enum ia_css_err
 sh_css_pipe_start(struct ia_css_stream *stream);
 
 static enum ia_css_err
 ia_css_pipe_load_extension(struct ia_css_pipe *pipe,
-			   struct ia_css_fw_info *firmware);
+		struct ia_css_fw_info *firmware);
 
 static void
 ia_css_pipe_unload_extension(struct ia_css_pipe *pipe,
-			     struct ia_css_fw_info *firmware);
+		struct ia_css_fw_info *firmware);
 static void
 ia_css_reset_defaults(struct sh_css* css);
 
@@ -208,6 +208,8 @@ sh_css_init_host_sp_control_vars(void);
 static void
 sh_css_mmu_set_page_table_base_index(hrt_data base_index);
 
+static enum ia_css_err set_num_primary_stages(unsigned int *num, unsigned int version);
+
 static bool
 need_capture_pp(const struct ia_css_pipe *pipe);
 
@@ -315,16 +317,13 @@ create_host_acc_pipeline(struct ia_css_pipe *pipe);
 static unsigned int
 sh_css_get_sw_interrupt_value(unsigned int irq);
 
-static bool
-ia_css_binary_is_3a(const struct ia_css_binary *s3a_binary);
-
-static bool
-ia_css_binary_is_dvs(const struct ia_css_binary *dvs_binary);
-
 static struct ia_css_binary *ia_css_pipe_get_shading_correction_binary(const struct ia_css_pipe *pipe);
 
 static struct ia_css_binary *
-ia_css_pipe_get_binary(const struct ia_css_pipe *pipe);
+ia_css_pipe_get_s3a_binary(const struct ia_css_pipe *pipe);
+
+static struct ia_css_binary *
+ia_css_pipe_get_sdis_binary(const struct ia_css_pipe *pipe);
 
 void
 ia_css_get_acc_configs(
@@ -339,6 +338,8 @@ static enum ia_css_err set_config_on_frame_enqueue(struct ia_css_frame_info *inf
 #ifdef USE_INPUT_SYSTEM_VERSION_2401
 static unsigned int get_crop_lines_for_bayer_order(const struct ia_css_stream_config *config);
 static unsigned int get_crop_columns_for_bayer_order(const struct ia_css_stream_config *config);
+static void get_pipe_extra_pixel(struct ia_css_pipe *pipe,
+		unsigned int *extra_row, unsigned int *extra_column);
 #endif
 
 #if defined(HAS_SEC_SP)
@@ -2736,8 +2737,6 @@ alloc_continuous_frames(
 	bool continuous;
 	unsigned int i, idx;
 	unsigned int num_frames;
-	unsigned int left_cropping = 0, top_cropping;
-	uint8_t raw_binning = 0;
 	struct ia_css_pipe *capture_pipe = NULL;
 
 	IA_CSS_ENTER_PRIVATE("pipe = %p, init_time = %d", pipe, init_time);
@@ -2761,15 +2760,9 @@ alloc_continuous_frames(
 	}
 
 	if (pipe_id == IA_CSS_PIPE_ID_PREVIEW) {
-		left_cropping = pipe->pipe_settings.preview.preview_binary.info->sp.pipeline.left_cropping;
-		top_cropping = pipe->pipe_settings.preview.preview_binary.info->sp.pipeline.top_cropping;
 		ref_info = pipe->pipe_settings.preview.preview_binary.in_frame_info;
-		raw_binning = pipe->pipe_settings.preview.preview_binary.info->sp.enable.raw_binning;
 	} else if (pipe_id == IA_CSS_PIPE_ID_VIDEO) {
-		left_cropping = pipe->pipe_settings.video.video_binary.info->sp.pipeline.left_cropping;
-		top_cropping = pipe->pipe_settings.video.video_binary.info->sp.pipeline.top_cropping;
 		ref_info = pipe->pipe_settings.video.video_binary.in_frame_info;
-		raw_binning = pipe->pipe_settings.video.video_binary.info->sp.enable.raw_binning;
 	}
 	else {
 		/* should not happen */
@@ -3344,6 +3337,53 @@ get_crop_columns_for_bayer_order (
 	return 0;
 }
 
+/* This function is to get the sum of all extra pixels in addition to the effective
+ * input, it includes dvs envelop and filter run-in */
+static void get_pipe_extra_pixel(struct ia_css_pipe *pipe,
+		unsigned int *extra_row, unsigned int *extra_column)
+{
+	enum ia_css_pipe_id pipe_id = pipe->mode;
+	unsigned int left_cropping = 0, top_cropping = 0;
+	unsigned int i;
+	struct ia_css_resolution dvs_env = pipe->config.dvs_envelope;
+
+	/* The dvs envelope info may not be correctly sent down via pipe config
+	 * The check is made and the correct value is populated in the binary info
+	 * Use this value when computing crop, else excess lines may get trimmed
+	 */
+	switch (pipe_id) {
+	case IA_CSS_PIPE_ID_PREVIEW:
+		if (pipe->pipe_settings.preview.preview_binary.info) {
+			left_cropping = pipe->pipe_settings.preview.preview_binary.info->sp.pipeline.left_cropping;
+			top_cropping = pipe->pipe_settings.preview.preview_binary.info->sp.pipeline.top_cropping;
+		}
+		dvs_env = pipe->pipe_settings.preview.preview_binary.dvs_envelope;
+		break;
+	case IA_CSS_PIPE_ID_VIDEO:
+		if (pipe->pipe_settings.video.video_binary.info) {
+			left_cropping = pipe->pipe_settings.video.video_binary.info->sp.pipeline.left_cropping;
+			top_cropping = pipe->pipe_settings.video.video_binary.info->sp.pipeline.top_cropping;
+		}
+		dvs_env = pipe->pipe_settings.video.video_binary.dvs_envelope;
+		break;
+	case IA_CSS_PIPE_ID_CAPTURE:
+		for (i = 0; i < pipe->pipe_settings.capture.num_primary_stage; i++) {
+			if (pipe->pipe_settings.capture.primary_binary[i].info) {
+				left_cropping += pipe->pipe_settings.capture.primary_binary[i].info->sp.pipeline.left_cropping;
+				top_cropping += pipe->pipe_settings.capture.primary_binary[i].info->sp.pipeline.top_cropping;
+			}
+			dvs_env.width += pipe->pipe_settings.capture.primary_binary[i].dvs_envelope.width;
+			dvs_env.height += pipe->pipe_settings.capture.primary_binary[i].dvs_envelope.height;
+		}
+		break;
+	default:
+		break;
+	}
+
+	*extra_row = top_cropping + dvs_env.height;
+	*extra_column = left_cropping + dvs_env.width;
+}
+
 void
 ia_css_get_crop_offsets (
     struct ia_css_pipe *pipe,
@@ -3353,10 +3393,7 @@ ia_css_get_crop_offsets (
 	unsigned int column = 0;
 	struct ia_css_resolution *input_res;
 	struct ia_css_resolution *effective_res;
-	struct ia_css_resolution *dvs_env;
-	enum ia_css_pipe_id pipe_id;
-	unsigned int left_cropping = 0, top_cropping = 0;
-	const struct ia_css_binary_xinfo *info;
+	unsigned int extra_row = 0, extra_col = 0;
 	unsigned int min_reqd_height, min_reqd_width;
 
 	assert(pipe != NULL);
@@ -3365,40 +3402,13 @@ ia_css_get_crop_offsets (
 
 	input_res = &pipe->stream->config.input_config.input_res;
 	effective_res = &pipe->stream->config.input_config.effective_res;
-	pipe_id = pipe->mode;
-
-	/* The dvs envelope info may not be correctly sent down via pipe config
-	 * The check is made and the correct value is populated in the binary info
-	 * Use this value when computing crop, else excess lines may get trimmed
-	 */
 
-	switch (pipe_id) {
-	case IA_CSS_PIPE_ID_PREVIEW:
-		info = pipe->pipe_settings.preview.preview_binary.info;
-		dvs_env = &pipe->pipe_settings.preview.preview_binary.dvs_envelope;
-		break;
-	case IA_CSS_PIPE_ID_VIDEO:
-		info = pipe->pipe_settings.video.video_binary.info;
-		dvs_env = &pipe->pipe_settings.video.video_binary.dvs_envelope;
-		break;
-	case IA_CSS_PIPE_ID_CAPTURE:
-		info = pipe->pipe_settings.capture.primary_binary.info;
-		dvs_env = &pipe->pipe_settings.capture.primary_binary.dvs_envelope;
-		break;
-	default:
-		dvs_env = &pipe->config.dvs_envelope;
-		info = NULL;
-	}
-
-	if (info != NULL) {
-		left_cropping = info->sp.pipeline.left_cropping;
-		top_cropping = info->sp.pipeline.top_cropping;
-	}
+	get_pipe_extra_pixel(pipe, &extra_row, &extra_col);
 
 	in_frame->raw_bayer_order = pipe->stream->config.input_config.bayer_order;
 
-	min_reqd_height = effective_res->height + top_cropping + dvs_env->height;
-	min_reqd_width = effective_res->width + left_cropping + dvs_env->width;
+	min_reqd_height = effective_res->height + extra_row;
+	min_reqd_width = effective_res->width + extra_col;
 
 	if (input_res->height > min_reqd_height) {
 		row = (input_res->height - min_reqd_height) / 2;
@@ -5082,23 +5092,21 @@ sh_css_pipe_get_grid_info(struct ia_css_pipe *pipe,
 {
 	enum ia_css_err err = IA_CSS_SUCCESS;
 	struct ia_css_binary *binary = NULL;
-	bool is_3a_binary = false;
-	bool is_dvs_binary = false;
 
 	assert(pipe != NULL);
 	assert(info != NULL);
 	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE, "sh_css_pipe_get_grid_info() enter:\n");
 
-	binary = ia_css_pipe_get_binary(pipe);
-	is_3a_binary = ia_css_binary_is_3a(binary);
-	is_dvs_binary = ia_css_binary_is_dvs(binary);
+	binary = ia_css_pipe_get_s3a_binary(pipe);
 
-	if (is_3a_binary == true)
+	if (binary)
 		ia_css_binary_3a_grid_info(binary, info, pipe);
 	else
 		memset(&info->s3a_grid, 0, sizeof(info->s3a_grid));
 
-	if (is_dvs_binary == true)
+	binary = ia_css_pipe_get_sdis_binary(pipe);
+
+	if (binary)
 		ia_css_binary_dvs_grid_info(binary, info, pipe);
 	else
 		memset(&info->dvs_grid, 0, sizeof(info->dvs_grid));
@@ -5639,6 +5647,29 @@ static bool need_capture_pp(
 	return false;
 }
 
+static enum ia_css_err set_num_primary_stages(unsigned int *num, unsigned int version)
+{
+	enum ia_css_err err = IA_CSS_SUCCESS;
+
+	if (num == NULL)
+		return IA_CSS_ERR_INVALID_ARGUMENTS;
+
+	switch (version) {
+	case IA_CSS_PIPE_VERSION_2_6_1:
+		*num = NUM_PRIMARY_HQ_STAGES;
+		break;
+	case IA_CSS_PIPE_VERSION_2_2:
+	case IA_CSS_PIPE_VERSION_1:
+		*num = NUM_PRIMARY_STAGES;
+		break;
+	default:
+		err = IA_CSS_ERR_INVALID_ARGUMENTS;
+		break;
+	}
+
+	return err;
+}
+
 static enum ia_css_err load_primary_binaries(
 	struct ia_css_pipe *pipe)
 {
@@ -5679,18 +5710,28 @@ static enum ia_css_err load_primary_binaries(
 	pipe_out_info = &pipe->output_info[0];
 	pipe_vf_out_info = &pipe->vf_output_info[0];
 
-	if (mycs->primary_binary.info)
+	if (mycs->primary_binary[0].info)
 		return IA_CSS_SUCCESS;
 
+	err = set_num_primary_stages(&mycs->num_primary_stage, pipe->config.isp_pipe_version);
+	if (err != IA_CSS_SUCCESS) {
+		IA_CSS_LEAVE_ERR_PRIVATE(err);
+		return err;
+	}
+
 	if (pipe->enable_viewfinder[IA_CSS_PIPE_OUTPUT_STAGE_0]) {
 		err = ia_css_util_check_vf_out_info(pipe_out_info, pipe_vf_out_info);
-		if (err != IA_CSS_SUCCESS)
+		if (err != IA_CSS_SUCCESS) {
+			IA_CSS_LEAVE_ERR_PRIVATE(err);
 			return err;
+		}
 	}
 	else{
 		err = ia_css_frame_check_info(pipe_out_info);
-		if (err != IA_CSS_SUCCESS)
+		if (err != IA_CSS_SUCCESS) {
+			IA_CSS_LEAVE_ERR_PRIVATE(err);
 			return err;
+		}
 	}
 	need_pp = need_capture_pp(pipe);
 
@@ -5746,19 +5787,23 @@ static enum ia_css_err load_primary_binaries(
 			pipe_out_info,
 			NULL,
 			&cas_scaler_descr);
-		if (err != IA_CSS_SUCCESS)
+		if (err != IA_CSS_SUCCESS) {
+			IA_CSS_LEAVE_ERR_PRIVATE(err);
 			return err;
+		}
 		mycs->num_yuv_scaler = cas_scaler_descr.num_stage;
 		mycs->yuv_scaler_binary = sh_css_calloc(cas_scaler_descr.num_stage,
 			sizeof(struct ia_css_binary));
 		if (mycs->yuv_scaler_binary == NULL) {
 			err = IA_CSS_ERR_CANNOT_ALLOCATE_MEMORY;
+			IA_CSS_LEAVE_ERR_PRIVATE(err);
 			return err;
 		}
 		mycs->is_output_stage = sh_css_calloc(cas_scaler_descr.num_stage,
 			sizeof(bool));
 		if (mycs->is_output_stage == NULL) {
 			err = IA_CSS_ERR_CANNOT_ALLOCATE_MEMORY;
+			IA_CSS_LEAVE_ERR_PRIVATE(err);
 			return err;
 		}
 		for (i = 0; i < cas_scaler_descr.num_stage; i++) {
@@ -5775,8 +5820,10 @@ static enum ia_css_err load_primary_binaries(
 #endif
 			err = ia_css_binary_find(&yuv_scaler_descr,
 						&mycs->yuv_scaler_binary[i]);
-			if (err != IA_CSS_SUCCESS)
+			if (err != IA_CSS_SUCCESS) {
+				IA_CSS_LEAVE_ERR_PRIVATE(err);
 				return err;
+			}
 		}
 		ia_css_pipe_destroy_cas_scaler_desc(&cas_scaler_descr);
 
@@ -5797,44 +5844,33 @@ static enum ia_css_err load_primary_binaries(
 #endif
 		err = ia_css_binary_find(&capture_pp_descr,
 					&mycs->capture_pp_binary);
-		if (err != IA_CSS_SUCCESS)
+		if (err != IA_CSS_SUCCESS) {
+			IA_CSS_LEAVE_ERR_PRIVATE(err);
 			return err;
+		}
 	} else {
 		prim_out_info = *pipe_out_info;
 	}
 
 	/* Primary */
-	if (pipe->config.isp_pipe_version == IA_CSS_PIPE_VERSION_2_6_1) {
-		struct ia_css_binary_descr prim_hq_descr[NUM_PRIMARY_HQ_STAGES];
-
-		for (i = 0; i < NUM_PRIMARY_HQ_STAGES; i++) {
-			if (pipe->enable_viewfinder[IA_CSS_PIPE_OUTPUT_STAGE_0]){
-				ia_css_pipe_get_primary_binarydesc(pipe, &prim_hq_descr[i], &prim_in_info, &prim_out_info, &vf_info, i);
-			}
-			else{
-				ia_css_pipe_get_primary_binarydesc(pipe, &prim_hq_descr[i], &prim_in_info, &prim_out_info, NULL, i);
-			}
-
-			err = ia_css_binary_find(&prim_hq_descr[i], &mycs->primary_hq_binary[i]);
-			if (err != IA_CSS_SUCCESS)
-				return err;
-		}
-	} else {
-		struct ia_css_binary_descr prim_descr;
+	{
+		struct ia_css_binary_descr prim_descr[MAX_NUM_PRIMARY_STAGES];
 
-		if (pipe->enable_viewfinder[IA_CSS_PIPE_OUTPUT_STAGE_0]){
-			ia_css_pipe_get_primary_binarydesc(pipe, &prim_descr, &prim_in_info, &prim_out_info, &vf_info, 0);
-		}
-		else{
-			ia_css_pipe_get_primary_binarydesc(pipe, &prim_descr, &prim_in_info, &prim_out_info, NULL, 0);
-		}
+		for (i = 0; i < mycs->num_primary_stage; i++) {
+			struct ia_css_frame_info *local_vf_info = NULL;
+			if (pipe->enable_viewfinder[IA_CSS_PIPE_OUTPUT_STAGE_0] && (i == mycs->num_primary_stage - 1))
+				local_vf_info = &vf_info;
+			ia_css_pipe_get_primary_binarydesc(pipe, &prim_descr[i], &prim_in_info, &prim_out_info, local_vf_info, i);
 #if defined(HAS_RES_MGR)
 			bds_out_info.res = pipe->config.bayer_ds_out_res;
-			prim_descr.bds_out_info = &bds_out_info;
+			prim_descr[i].bds_out_info = &bds_out_info;
 #endif
-		err = ia_css_binary_find(&prim_descr, &mycs->primary_binary);
-		if (err != IA_CSS_SUCCESS)
-			return err;
+			err = ia_css_binary_find(&prim_descr[i], &mycs->primary_binary[i]);
+			if (err != IA_CSS_SUCCESS) {
+				IA_CSS_LEAVE_ERR_PRIVATE(err);
+				return err;
+			}
+		}
 	}
 
 	/* Viewfinder post-processing */
@@ -5843,7 +5879,7 @@ static enum ia_css_err load_primary_binaries(
 		    &mycs->capture_pp_binary.vf_frame_info;
 	} else {
 		vf_pp_in_info =
-		    &mycs->primary_binary.vf_frame_info;
+		    &mycs->primary_binary[mycs->num_primary_stage - 1].vf_frame_info;
 	}
 
 /*
@@ -5862,14 +5898,16 @@ static enum ia_css_err load_primary_binaries(
 		struct ia_css_binary_descr vf_pp_descr;
 
 		ia_css_pipe_get_vfpp_binarydesc(pipe,
-			&vf_pp_descr, vf_pp_in_info, pipe_vf_out_info);
+				&vf_pp_descr, vf_pp_in_info, pipe_vf_out_info);
 #if defined(HAS_RES_MGR)
-			bds_out_info.res = pipe->config.bayer_ds_out_res;
-			vf_pp_descr.bds_out_info = &bds_out_info;
+		bds_out_info.res = pipe->config.bayer_ds_out_res;
+		vf_pp_descr.bds_out_info = &bds_out_info;
 #endif
 		err = ia_css_binary_find(&vf_pp_descr, &mycs->vf_pp_binary);
-		if (err != IA_CSS_SUCCESS)
+		if (err != IA_CSS_SUCCESS) {
+			IA_CSS_LEAVE_ERR_PRIVATE(err);
 			return err;
+		}
 	}
 #endif
 	err = allocate_delay_frames(pipe->mode, NULL, mycs, pipe->dvs_frame_delay);
@@ -5889,10 +5927,12 @@ static enum ia_css_err load_primary_binaries(
 	/* ISP Copy */
 	if (need_isp_copy_binary) {
 		err = load_copy_binary(pipe,
-				       &mycs->copy_binary,
-				       &mycs->primary_binary);
-		if (err != IA_CSS_SUCCESS)
+				&mycs->copy_binary,
+				&mycs->primary_binary[0]);
+		if (err != IA_CSS_SUCCESS) {
+			IA_CSS_LEAVE_ERR_PRIVATE(err);
 			return err;
+		}
 	}
 
 	return IA_CSS_SUCCESS;
@@ -5900,29 +5940,29 @@ static enum ia_css_err load_primary_binaries(
 
 static enum ia_css_err
 allocate_delay_frames(enum ia_css_pipe_id mode,
-	       	      struct ia_css_video_settings *mycs_video,
-	              struct ia_css_capture_settings *mycs_capture,
-	              unsigned int dvs_frame_delay)
+		struct ia_css_video_settings *mycs_video,
+		struct ia_css_capture_settings *mycs_capture,
+		unsigned int dvs_frame_delay)
 {
 	unsigned int num_delay_frames = 0, i = 0;
 	struct ia_css_frame_info ref_info;
 	enum ia_css_err err = IA_CSS_SUCCESS;
 
 	if (mode == IA_CSS_PIPE_ID_CAPTURE) {
-		#if defined (IS_ISP_2500_SYSTEM)
-			ref_info               = mycs_capture->primary_binary.internal_frame_info;
-			ref_info.format        = IA_CSS_FRAME_FORMAT_YUV420_16;
-			ref_info.raw_bit_depth = SH_CSS_REF_BIT_DEPTH;
-		#else
-			return err;
-		#endif
+#if defined (IS_ISP_2500_SYSTEM)
+		ref_info               = mycs_capture->primary_binary[0].internal_frame_info;
+		ref_info.format        = IA_CSS_FRAME_FORMAT_YUV420_16;
+		ref_info.raw_bit_depth = SH_CSS_REF_BIT_DEPTH;
+#else
+		return err;
+#endif
 	} else if (mode == IA_CSS_PIPE_ID_VIDEO) {
 		ref_info               = mycs_video->video_binary.internal_frame_info;
-		#if defined (IS_ISP_2500_SYSTEM)
-			ref_info.format        = IA_CSS_FRAME_FORMAT_YUV420_16;
-		#else
-			ref_info.format        = IA_CSS_FRAME_FORMAT_YUV420;
-		#endif
+#if defined (IS_ISP_2500_SYSTEM)
+		ref_info.format        = IA_CSS_FRAME_FORMAT_YUV420_16;
+#else
+		ref_info.format        = IA_CSS_FRAME_FORMAT_YUV420;
+#endif
 		ref_info.raw_bit_depth = SH_CSS_REF_BIT_DEPTH;
 	} else {
 		return IA_CSS_ERR_INVALID_ARGUMENTS;
@@ -5942,20 +5982,20 @@ allocate_delay_frames(enum ia_css_pipe_id mode,
 	for (i = 0; i < num_delay_frames; i++) {
 		if (mode == IA_CSS_PIPE_ID_CAPTURE)
 			err = ia_css_frame_allocate_from_info(&mycs_capture->delay_frames[i],
-						      		&ref_info);
+					&ref_info);
 		else if (mode == IA_CSS_PIPE_ID_VIDEO)
 			err = ia_css_frame_allocate_from_info(&mycs_video->delay_frames[i],
-						      		&ref_info);
+					&ref_info);
 
 		if (err != IA_CSS_SUCCESS)
 			return err;
 
-	#ifdef HRT_CSIM
+#ifdef HRT_CSIM
 		if (mode == IA_CSS_PIPE_ID_CAPTURE)
-				ia_css_frame_zero(mycs_capture->delay_frames[i]);
+			ia_css_frame_zero(mycs_capture->delay_frames[i]);
 		else if (mode == IA_CSS_PIPE_ID_VIDEO)
 			ia_css_frame_zero(mycs_video->delay_frames[i]);
-	#endif
+#endif
 	}
 
 	return IA_CSS_SUCCESS;
@@ -6254,8 +6294,10 @@ static enum ia_css_err load_capture_binaries(
 	assert(pipe != NULL);
 	assert(pipe->mode == IA_CSS_PIPE_ID_CAPTURE || pipe->mode == IA_CSS_PIPE_ID_COPY);
 
-	if (pipe->pipe_settings.capture.primary_binary.info)
+	if (pipe->pipe_settings.capture.primary_binary[0].info) {
+		IA_CSS_LEAVE_ERR_PRIVATE(IA_CSS_SUCCESS);
 		return IA_CSS_SUCCESS;
+	}
 
 	/* in primary, advanced,low light or bayer,
 						the input format must be raw */
@@ -6264,8 +6306,10 @@ static enum ia_css_err load_capture_binaries(
 		pipe->config.default_capture_config.mode == IA_CSS_CAPTURE_MODE_BAYER ||
 		pipe->config.default_capture_config.mode == IA_CSS_CAPTURE_MODE_LOW_LIGHT;
 	err = ia_css_util_check_input(&pipe->stream->config, must_be_raw, false);
-	if (err != IA_CSS_SUCCESS)
+	if (err != IA_CSS_SUCCESS) {
+		IA_CSS_LEAVE_ERR_PRIVATE(err);
 		return err;
+	}
 	if (copy_on_sp(pipe) &&
 	    pipe->stream->config.input_config.format == IA_CSS_STREAM_FORMAT_BINARY_8) {
 		ia_css_frame_info_init(
@@ -6274,6 +6318,7 @@ static enum ia_css_err load_capture_binaries(
 			1,
 			IA_CSS_FRAME_FORMAT_BINARY_8,
 			0);
+		IA_CSS_LEAVE_ERR_PRIVATE(IA_CSS_SUCCESS);
 		return IA_CSS_SUCCESS;
 	}
 
@@ -6298,9 +6343,12 @@ static enum ia_css_err load_capture_binaries(
 		err = load_low_light_binaries(pipe);
 		break;
 	}
-	if (err != IA_CSS_SUCCESS)
+	if (err != IA_CSS_SUCCESS) {
+		IA_CSS_LEAVE_ERR_PRIVATE(err);
 		return err;
+	}
 
+	IA_CSS_LEAVE_ERR_PRIVATE(err);
 	return err;
 }
 
@@ -6315,7 +6363,8 @@ unload_capture_binaries(struct ia_css_pipe *pipe)
 		return IA_CSS_ERR_INVALID_ARGUMENTS;
 	}
 	ia_css_binary_unload(&pipe->pipe_settings.capture.copy_binary);
-	ia_css_binary_unload(&pipe->pipe_settings.capture.primary_binary);
+	for (i = 0; i < MAX_NUM_PRIMARY_STAGES; i++)
+		ia_css_binary_unload(&pipe->pipe_settings.capture.primary_binary[i]);
 	ia_css_binary_unload(&pipe->pipe_settings.capture.pre_isp_binary);
 	ia_css_binary_unload(&pipe->pipe_settings.capture.anr_gdc_binary);
 	ia_css_binary_unload(&pipe->pipe_settings.capture.post_isp_binary);
@@ -7346,8 +7395,7 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
 	struct ia_css_pipeline_stage *current_stage = NULL;
 	struct ia_css_pipeline_stage *yuv_scaler_stage = NULL;
 	struct ia_css_binary *copy_binary,
-			     *primary_binary,
-			     *primary_hq_binary[NUM_PRIMARY_HQ_STAGES],
+			     *primary_binary[MAX_NUM_PRIMARY_STAGES],
 			     *vf_pp_binary,
 			     *pre_isp_binary,
 			     *anr_gdc_binary,
@@ -7369,7 +7417,7 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
 	bool online = false;
 	bool continuous = false;
 #endif
-	unsigned int i, num_yuv_scaler;
+	unsigned int i, num_yuv_scaler, num_primary_stage;
 	bool need_yuv_pp = false;
 	bool *is_output_stage = NULL;
 
@@ -7404,8 +7452,10 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
 #endif
 	if (need_in_frameinfo_memory) {
 		err = init_in_frameinfo_memory_defaults(pipe, &me->in_frame, IA_CSS_FRAME_FORMAT_RAW);
-		if (err != IA_CSS_SUCCESS)
+		if (err != IA_CSS_SUCCESS) {
+			IA_CSS_LEAVE_ERR_PRIVATE(err);
 			return err;
+		}
 
 		in_frame = &me->in_frame;
 	} else {
@@ -7413,8 +7463,10 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
 	}
 
 	err = init_out_frameinfo_defaults(pipe, &me->out_frame[0], 0);
-	if (err != IA_CSS_SUCCESS)
+	if (err != IA_CSS_SUCCESS) {
+		IA_CSS_LEAVE_ERR_PRIVATE(err);
 		return err;
+	}
 	out_frame = &me->out_frame[0];
 
 	/* Construct vf_frame info (only in case we have VF) */
@@ -7431,9 +7483,13 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
 	}
 
 	copy_binary       = &pipe->pipe_settings.capture.copy_binary;
-	primary_binary    = &pipe->pipe_settings.capture.primary_binary;
-	for (i = 0; i < NUM_PRIMARY_HQ_STAGES; i++) {
-		primary_hq_binary[i] = &pipe->pipe_settings.capture.primary_hq_binary[i];
+	num_primary_stage = pipe->pipe_settings.capture.num_primary_stage;
+	if ((num_primary_stage == 0) && (mode == IA_CSS_CAPTURE_MODE_PRIMARY)) {
+		IA_CSS_LEAVE_ERR_PRIVATE(IA_CSS_ERR_INTERNAL_ERROR);
+		return IA_CSS_ERR_INTERNAL_ERROR;
+	}
+	for (i = 0; i < num_primary_stage; i++) {
+		primary_binary[i] = &pipe->pipe_settings.capture.primary_binary[i];
 	}
 	vf_pp_binary      = &pipe->pipe_settings.capture.vf_pp_binary;
 	pre_isp_binary    = &pipe->pipe_settings.capture.pre_isp_binary;
@@ -7474,55 +7530,29 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
 		err = ia_css_pipeline_create_and_add_stage(me,
 			&stage_desc,
 			&current_stage);
-		if (err != IA_CSS_SUCCESS)
+		if (err != IA_CSS_SUCCESS) {
+			IA_CSS_LEAVE_ERR_PRIVATE(err);
 			return err;
+		}
 	} else if (pipe->stream->config.continuous) {
 		in_frame = pipe->stream->last_pipe->continuous_frames[0];
 	}
 
 	if (mode == IA_CSS_CAPTURE_MODE_PRIMARY) {
 		unsigned int frm;
-		if (pipe->config.isp_pipe_version == IA_CSS_PIPE_VERSION_2_6_1) {
-			ia_css_pipe_util_set_output_frames(out_frames, 0, NULL);
-			ia_css_pipe_get_generic_stage_desc(&stage_desc, primary_hq_binary[0],
-					out_frames, in_frame, NULL);
-			err = ia_css_pipeline_create_and_add_stage(me,
-				&stage_desc,
-				NULL);
-			if (err != IA_CSS_SUCCESS)
-				return err;
-
-			for (i = 1; i < NUM_PRIMARY_HQ_STAGES - 1; i++) {
-				ia_css_pipe_util_set_output_frames(out_frames, 0, NULL);
-				ia_css_pipe_get_generic_stage_desc(&stage_desc, primary_hq_binary[i],
-					out_frames, NULL, NULL);
-				err = ia_css_pipeline_create_and_add_stage(me,
-					&stage_desc,
-					NULL);
-				if (err != IA_CSS_SUCCESS)
-					return err;
-			}
-
-			if(need_pp) {
-				ia_css_pipe_util_set_output_frames(out_frames, 0, NULL);
-			} else {
-				ia_css_pipe_util_set_output_frames(out_frames, 0, out_frame);
-			}
-			ia_css_pipe_get_generic_stage_desc(&stage_desc, primary_hq_binary[NUM_PRIMARY_HQ_STAGES - 1],
-					out_frames, NULL, NULL);
-
-			err = ia_css_pipeline_create_and_add_stage(me,
-				&stage_desc,
-				&current_stage);
-			if (err != IA_CSS_SUCCESS)
-				return err;
-		} else {
-			if(need_pp) {
-				ia_css_pipe_util_set_output_frames(out_frames, 0, NULL);
-			} else {
-				ia_css_pipe_util_set_output_frames(out_frames, 0, out_frame);
-			}
+		struct ia_css_frame *local_in_frame = NULL;
+		struct ia_css_frame *local_out_frame = NULL;
 
+		for (i = 0; i < num_primary_stage; i++) {
+			if (i == 0)
+				local_in_frame = in_frame;
+			else
+				local_in_frame = NULL;
+			if (!need_pp && (i == num_primary_stage - 1))
+				local_out_frame = out_frame;
+			else
+				local_out_frame = NULL;
+			ia_css_pipe_util_set_output_frames(out_frames, 0, local_out_frame);
 /*
  * WARNING: The #if def flag has been added below as a
  * temporary solution to solve the problem of enabling the
@@ -7534,23 +7564,20 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
  * solution.
  * */
 #if defined (IS_ISP_2500_SYSTEM)
-			ia_css_pipe_get_generic_stage_desc(&stage_desc, primary_binary,
-					out_frames, in_frame, vf_frame);
+			ia_css_pipe_get_generic_stage_desc(&stage_desc, primary_binary[i],
+					out_frames, local_in_frame, vf_frame);
 #else
-			ia_css_pipe_get_generic_stage_desc(&stage_desc, primary_binary,
-					out_frames, in_frame, NULL);
+			ia_css_pipe_get_generic_stage_desc(&stage_desc, primary_binary[i],
+				out_frames, local_in_frame, NULL);
 #endif
 			err = ia_css_pipeline_create_and_add_stage(me,
 				&stage_desc,
 				&current_stage);
-			if (err != IA_CSS_SUCCESS)
+			if (err != IA_CSS_SUCCESS) {
+				IA_CSS_LEAVE_ERR_PRIVATE(err);
 				return err;
-			/* If we use copy iso primary,
-			   the input must be yuv iso raw */
-			current_stage->args.copy_vf =
-				primary_binary->info->sp.pipeline.mode ==
-				IA_CSS_BINARY_MODE_COPY;
-			current_stage->args.copy_output = current_stage->args.copy_vf;
+			}
+		}
 #if defined(IS_ISP_2500_SYSTEM)
 /*
  * In the Skycam project, in the capture flow, delay frames
@@ -7565,8 +7592,13 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
 				pipe->pipe_settings.capture.delay_frames[frm];
 		}
 #endif
-		(void) frm;
-		}
+		(void)frm;
+		/* If we use copy iso primary,
+		   the input must be yuv iso raw */
+		current_stage->args.copy_vf =
+			primary_binary[0]->info->sp.pipeline.mode ==
+			IA_CSS_BINARY_MODE_COPY;
+		current_stage->args.copy_output = current_stage->args.copy_vf;
 	} else if (mode == IA_CSS_CAPTURE_MODE_ADVANCED ||
 	           mode == IA_CSS_CAPTURE_MODE_LOW_LIGHT) {
 		ia_css_pipe_util_set_output_frames(out_frames, 0, NULL);
@@ -7574,15 +7606,19 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
 			out_frames, in_frame, NULL);
 		err = ia_css_pipeline_create_and_add_stage(me,
 				&stage_desc, NULL);
-		if (err != IA_CSS_SUCCESS)
+		if (err != IA_CSS_SUCCESS) {
+			IA_CSS_LEAVE_ERR_PRIVATE(err);
 			return err;
+		}
 		ia_css_pipe_util_set_output_frames(out_frames, 0, NULL);
 		ia_css_pipe_get_generic_stage_desc(&stage_desc, anr_gdc_binary,
 			out_frames, NULL, NULL);
 		err = ia_css_pipeline_create_and_add_stage(me,
 				&stage_desc, NULL);
-		if (err != IA_CSS_SUCCESS)
+		if (err != IA_CSS_SUCCESS) {
+			IA_CSS_LEAVE_ERR_PRIVATE(err);
 			return err;
+		}
 
 		if(need_pp) {
 			ia_css_pipe_util_set_output_frames(out_frames, 0, NULL);
@@ -7596,8 +7632,10 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
 
 		err = ia_css_pipeline_create_and_add_stage(me,
 				&stage_desc, &current_stage);
-		if (err != IA_CSS_SUCCESS)
+		if (err != IA_CSS_SUCCESS) {
+			IA_CSS_LEAVE_ERR_PRIVATE(err);
 			return err;
+		}
 	} else if (mode == IA_CSS_CAPTURE_MODE_BAYER) {
 		ia_css_pipe_util_set_output_frames(out_frames, 0, out_frame);
 		ia_css_pipe_get_generic_stage_desc(&stage_desc, pre_isp_binary,
@@ -7605,8 +7643,10 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
 		err = ia_css_pipeline_create_and_add_stage(me,
 			&stage_desc,
 			NULL);
-		if (err != IA_CSS_SUCCESS)
+		if (err != IA_CSS_SUCCESS) {
+			IA_CSS_LEAVE_ERR_PRIVATE(err);
 			return err;
+		}
 	}
 
 	if (need_pp) {
@@ -7614,8 +7654,10 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
 		err = add_capture_pp_stage(pipe, me, in_frame, need_yuv_pp ? NULL : out_frame,
 					   capture_pp_binary,
 					   &current_stage);
-		if (err != IA_CSS_SUCCESS)
+		if (err != IA_CSS_SUCCESS) {
+			IA_CSS_LEAVE_ERR_PRIVATE(err);
 			return err;
+		}
 	}
 
 	if (need_yuv_pp && current_stage) {
@@ -7632,8 +7674,10 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
 						   NULL,
 						   &yuv_scaler_binary[i],
 						   &yuv_scaler_stage);
-			if (err != IA_CSS_SUCCESS)
+			if (err != IA_CSS_SUCCESS) {
+				IA_CSS_LEAVE_ERR_PRIVATE(err);
 				return err;
+			}
 			/* we use output port 1 as internal output port */
 			tmp_in_frame = yuv_scaler_stage->args.out_frame[1];
 		}
@@ -7653,8 +7697,10 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
 		in_frame = current_stage->args.out_vf_frame;
 		err = add_vf_pp_stage(pipe, in_frame, vf_frame, vf_pp_binary,
 				      &current_stage);
-		if (err != IA_CSS_SUCCESS)
+		if (err != IA_CSS_SUCCESS) {
+			IA_CSS_LEAVE_ERR_PRIVATE(err);
 			return err;
+		}
 	}
 #endif
 	ia_css_pipeline_finalize_stages(&pipe->pipeline, pipe->stream->config.continuous);
@@ -9404,7 +9450,6 @@ ia_css_stream_get_3a_binary(const struct ia_css_stream *stream)
 {
 	struct ia_css_pipe *pipe;
 	struct ia_css_binary *s3a_binary = NULL;
-	bool is_3a_bianry = false;
 
 	assert(stream != NULL);
 
@@ -9417,13 +9462,9 @@ ia_css_stream_get_3a_binary(const struct ia_css_stream *stream)
 			pipe = stream->pipes[1];
 	}
 
-	s3a_binary = ia_css_pipe_get_binary(pipe);
-	is_3a_bianry = ia_css_binary_is_3a(s3a_binary);
+	s3a_binary = ia_css_pipe_get_s3a_binary(pipe);
 
-	if(is_3a_bianry == true)
-		return s3a_binary;
-
-	return NULL;
+	return s3a_binary;
 }
 
 
@@ -9462,8 +9503,16 @@ ia_css_pipe_get_shading_correction_binary(const struct ia_css_pipe *pipe)
 		binary = (struct ia_css_binary *)&pipe->pipe_settings.video.video_binary;
 		break;
 	case IA_CSS_PIPE_MODE_CAPTURE:
-		if (pipe->config.default_capture_config.mode == IA_CSS_CAPTURE_MODE_PRIMARY)
-			binary = (struct ia_css_binary *)&pipe->pipe_settings.capture.primary_binary;
+		if (pipe->config.default_capture_config.mode == IA_CSS_CAPTURE_MODE_PRIMARY) {
+			unsigned int i;
+
+			for (i = 0; i < pipe->pipe_settings.capture.num_primary_stage; i++) {
+				if (pipe->pipe_settings.capture.primary_binary[i].info->sp.enable.sc) {
+					binary = (struct ia_css_binary *)&pipe->pipe_settings.capture.primary_binary[i];
+					break;
+				}
+			}
+		}
 		else if (pipe->config.default_capture_config.mode == IA_CSS_CAPTURE_MODE_BAYER)
 			binary = (struct ia_css_binary *)&pipe->pipe_settings.capture.pre_isp_binary;
 		else if (pipe->config.default_capture_config.mode == IA_CSS_CAPTURE_MODE_ADVANCED ||
@@ -9485,7 +9534,7 @@ ia_css_pipe_get_shading_correction_binary(const struct ia_css_pipe *pipe)
 }
 
 static struct ia_css_binary *
-ia_css_pipe_get_binary(const struct ia_css_pipe *pipe)
+ia_css_pipe_get_s3a_binary(const struct ia_css_pipe *pipe)
 {
 	struct ia_css_binary *binary = NULL;
 
@@ -9499,8 +9548,15 @@ ia_css_pipe_get_binary(const struct ia_css_pipe *pipe)
 			binary = (struct ia_css_binary*)&pipe->pipe_settings.video.video_binary;
 			break;
 		case IA_CSS_PIPE_MODE_CAPTURE:
-			if (pipe->config.default_capture_config.mode == IA_CSS_CAPTURE_MODE_PRIMARY)
-				binary = (struct ia_css_binary *)&pipe->pipe_settings.capture.primary_binary;
+			if (pipe->config.default_capture_config.mode == IA_CSS_CAPTURE_MODE_PRIMARY) {
+				unsigned int i;
+				for (i = 0; i < pipe->pipe_settings.capture.num_primary_stage; i++) {
+					if (pipe->pipe_settings.capture.primary_binary[i].info->sp.enable.s3a) {
+						binary = (struct ia_css_binary *)&pipe->pipe_settings.capture.primary_binary[i];
+						break;
+					}
+				}
+			}
 			else if (pipe->config.default_capture_config.mode == IA_CSS_CAPTURE_MODE_BAYER)
 				binary = (struct ia_css_binary *)&pipe->pipe_settings.capture.pre_isp_binary;
 			else if (pipe->config.default_capture_config.mode == IA_CSS_CAPTURE_MODE_ADVANCED ||
@@ -9516,57 +9572,112 @@ ia_css_pipe_get_binary(const struct ia_css_pipe *pipe)
 		default:
 			break;
 	}
+
+	if (binary && !binary->info->sp.enable.s3a)
+		binary = NULL;
+
         return binary;
 }
 
-static bool
-ia_css_binary_is_3a(const struct ia_css_binary * s3a_binary)
+static struct ia_css_binary *
+ia_css_pipe_get_sdis_binary(const struct ia_css_pipe *pipe)
 {
-	if (s3a_binary && s3a_binary->info->sp.enable.s3a)
-		return true;
+	struct ia_css_binary *binary = NULL;
 
-	return false;
-}
+	assert(pipe != NULL);
 
-static bool
-ia_css_binary_is_dvs(const struct ia_css_binary * dvs_binary)
-{
+	switch (pipe->config.mode) {
+		case IA_CSS_PIPE_MODE_VIDEO:
+			binary = (struct ia_css_binary*)&pipe->pipe_settings.video.video_binary;
+			break;
+		default:
+			break;
+	}
 
 #ifdef IS_ISP_2500_SYSTEM
-	if (dvs_binary && dvs_binary->info->sp.enable.dvs_stats)
-		return true;
+	if (binary && !binary->info->sp.enable.dvs_stats)
 #else
-	if (dvs_binary && dvs_binary->info->sp.enable.dis)
-		return true;
+	if (binary && !binary->info->sp.enable.dis)
 #endif
+		binary = NULL;
 
-	return false;
+        return binary;
 }
 
 #if defined(IS_ISP_2500_SYSTEM)
-void ia_css_pipe_get_bds_resolution(const struct ia_css_pipe *pipe, struct ia_css_resolution *res)
+enum ia_css_err
+ia_css_pipe_get_bds_resolution(const struct ia_css_pipe *pipe, struct ia_css_resolution *res)
 {
-	assert(pipe != NULL);
+	enum ia_css_err err = IA_CSS_SUCCESS;
 
-	*res = pipe->bds_output_info.res;
+	if (pipe == NULL || res == NULL) {
+		IA_CSS_ERROR("Invalid args: pipe %x res %x", pipe, res);
+		err = IA_CSS_ERR_INVALID_ARGUMENTS;
+	} else {
+		*res = pipe->bds_output_info.res;
+	}
+	return err;
 }
 
-void
+enum ia_css_err
 ia_css_pipe_get_bds_aligned_resolution(const struct ia_css_pipe *pipe, struct ia_css_resolution *res)
 {
-	assert(pipe != NULL);
+	enum ia_css_err err = IA_CSS_SUCCESS;
+
+	if (pipe == NULL || res == NULL) {
+		IA_CSS_ERROR("Invalid args: pipe %x res %x", pipe, res);
+		err = IA_CSS_ERR_INVALID_ARGUMENTS;
+	} else {
+		ia_css_pipe_get_bds_resolution(pipe, res);
+		res->width = CEIL_MUL(res->width, ISP_VMEM_ALIGN);
+	}
+	return err;
+}
 
-	ia_css_pipe_get_bds_resolution(pipe, res);
-	res->width = CEIL_MUL(res->width, ISP_VMEM_ALIGN);
+enum ia_css_err
+ia_css_pipe_get_dvs_envelope(const struct ia_css_pipe *pipe, struct ia_css_resolution *res)
+{
+	enum ia_css_err err = IA_CSS_SUCCESS;
 
+	if (pipe == NULL || res == NULL) {
+		IA_CSS_ERROR("Invalid args: pipe %x res %x", pipe, res);
+		err = IA_CSS_ERR_INVALID_ARGUMENTS;
+	} else {
+		*res = pipe->config.dvs_envelope;
+	}
+	return err;
 }
 
+enum ia_css_err
+ia_css_pipe_get_dvs_filter(const struct ia_css_pipe *pipe, struct ia_css_resolution *res)
+{
+	enum ia_css_err err = IA_CSS_SUCCESS;
 
-void ia_css_pipe_get_dvs_envelope(const struct ia_css_pipe *pipe, struct ia_css_resolution *res)
+	if (pipe == NULL || res == NULL) {
+		IA_CSS_ERROR("Invalid args: pipe %x res %x", pipe, res);
+		err = IA_CSS_ERR_INVALID_ARGUMENTS;
+	} else {
+		res->width = res->height = SH_CSS_MIN_DVS_ENVELOPE; /* MIN DVS ENV is the filter size used by GDC */
+	}
+	return err;
+}
+
+enum ia_css_err
+ia_css_pipe_get_gdc_in_buffer_info(const struct ia_css_pipe *pipe,
+		struct ia_css_resolution *res,
+		struct ia_css_point *offset)
 {
-	assert(pipe != NULL);
+	enum ia_css_err err = IA_CSS_SUCCESS;
 
-	*res = pipe->config.dvs_envelope;
+	if (pipe == NULL || res == NULL || offset == NULL) {
+		IA_CSS_ERROR("Invalid args: pipe %x res %x offset %x", pipe, res, offset);
+		err = IA_CSS_ERR_INVALID_ARGUMENTS;
+	} else {
+		ia_css_pipe_get_bds_resolution(pipe, res);
+		offset->x = 0;
+		offset->y = 0;
+	}
+	return err;
 }
 #endif
 
@@ -9847,6 +9958,8 @@ void ia_css_pipe_map_queue(struct ia_css_pipe *pipe, bool map)
 			pipe->pipe_settings.preview.preview_binary.info->sp.enable.s3a)
 			ia_css_queue_map(thread_id, IA_CSS_BUFFER_TYPE_3A_STATISTICS, map);
 	} else if (pipe->mode == IA_CSS_PIPE_ID_CAPTURE) {
+		unsigned int i;
+
 		if (need_input_queue)
 			ia_css_queue_map(thread_id, IA_CSS_BUFFER_TYPE_INPUT_FRAME, map);
 		ia_css_queue_map(thread_id, IA_CSS_BUFFER_TYPE_OUTPUT_FRAME, map);
@@ -9856,11 +9969,21 @@ void ia_css_pipe_map_queue(struct ia_css_pipe *pipe, bool map)
 #if defined SH_CSS_ENABLE_METADATA
 		ia_css_queue_map(thread_id, IA_CSS_BUFFER_TYPE_METADATA, map);
 #endif
-		if ((pipe->pipe_settings.capture.primary_binary.info &&
-			pipe->pipe_settings.capture.primary_binary.info->sp.enable.s3a) ||
-			(pipe->pipe_settings.capture.pre_isp_binary.info &&
-			pipe->pipe_settings.capture.pre_isp_binary.info->sp.enable.s3a))
-			ia_css_queue_map(thread_id, IA_CSS_BUFFER_TYPE_3A_STATISTICS, map);
+		if (pipe->config.default_capture_config.mode == IA_CSS_CAPTURE_MODE_PRIMARY) {
+			for (i = 0; i < pipe->pipe_settings.capture.num_primary_stage; i++) {
+				if (pipe->pipe_settings.capture.primary_binary[i].info &&
+					pipe->pipe_settings.capture.primary_binary[i].info->sp.enable.s3a) {
+					ia_css_queue_map(thread_id, IA_CSS_BUFFER_TYPE_3A_STATISTICS, map);
+					break;
+				}
+			}
+		} else if (pipe->config.default_capture_config.mode == IA_CSS_CAPTURE_MODE_ADVANCED ||
+				 pipe->config.default_capture_config.mode == IA_CSS_CAPTURE_MODE_LOW_LIGHT ||
+				 pipe->config.default_capture_config.mode == IA_CSS_CAPTURE_MODE_BAYER) {
+			if (pipe->pipe_settings.capture.pre_isp_binary.info &&
+				pipe->pipe_settings.capture.pre_isp_binary.info->sp.enable.s3a)
+				ia_css_queue_map(thread_id, IA_CSS_BUFFER_TYPE_3A_STATISTICS, map);
+		}
 	} else if (pipe->mode == IA_CSS_PIPE_ID_VIDEO) {
 		if (need_input_queue)
 			ia_css_queue_map(thread_id, IA_CSS_BUFFER_TYPE_INPUT_FRAME, map);
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_defs.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_defs.h
index b5af3cd..9548829 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_defs.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_defs.h
@@ -363,7 +363,7 @@ RGB[0,8191],coef[-8192,8191] -> RGB[0,8191]
 #ifdef IS_ISP_2500_SYSTEM
 #define SH_CSS_MAX_STAGES 3 /* 2 stages for split isp pipelin, 1 for scaling */
 #else
-#define SH_CSS_MAX_STAGES 6 /* copy, preisp, anr, postisp, capture_pp, vf_pp */
+#define SH_CSS_MAX_STAGES 8 /* primary_stage[1-6], capture_pp, vf_pp */
 #endif
 
 /* For CSI2+ input system, it requires extra paddinga from vmem */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_firmware.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_firmware.c
index 88075c5..c05883a 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_firmware.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_firmware.c
@@ -47,10 +47,10 @@ struct fw_param {
 /* Warning: same order as SH_CSS_BINARY_ID_* */
 static struct firmware_header *firmware_header;
 
-/* The string STR(irci_master_20150122_0200) is a place holder
+/* The string STR(irci_master_20150128_1925) is a place holder
  * which will be replaced with the actual RELEASE_VERSION
  * during package generation. Please do not modify  */
-static const char *release_version = STR(irci_master_20150122_0200);
+static const char *release_version = STR(irci_master_20150128_1925);
 
 #define MAX_FW_REL_VER_NAME	300
 static char FW_rel_ver_name[MAX_FW_REL_VER_NAME] = "---";
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_internal.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_internal.h
index 60600c3..ccebd57 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_internal.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_internal.h
@@ -1098,14 +1098,22 @@ void
 sh_css_invalidate_shading_tables(struct ia_css_stream *stream);
 
 #if defined(IS_ISP_2500_SYSTEM)
-void
+enum ia_css_err
 ia_css_pipe_get_bds_resolution(const struct ia_css_pipe *pipe, struct ia_css_resolution *res);
 
-void
+enum ia_css_err
 ia_css_pipe_get_bds_aligned_resolution(const struct ia_css_pipe *pipe, struct ia_css_resolution *res);
 
-void
+enum ia_css_err
 ia_css_pipe_get_dvs_envelope(const struct ia_css_pipe *pipe, struct ia_css_resolution *res);
+
+enum ia_css_err
+ia_css_pipe_get_dvs_filter(const struct ia_css_pipe *pipe, struct ia_css_resolution *filter_res);
+
+enum ia_css_err
+ia_css_pipe_get_gdc_in_buffer_info(const struct ia_css_pipe *pipe,
+		struct ia_css_resolution *res,
+		struct ia_css_point *offset);
 #endif
 
 struct ia_css_pipeline *
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_params.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_params.c
index a2239f2..4617c6a 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_params.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_params.c
@@ -97,6 +97,7 @@
 
 #if defined(IS_ISP_2500_SYSTEM)
 #include "product_specific.host.h"
+#include "components/ob/sc_ob_1.0/host/obgrid.host.h"
 #include "components/stats_3a/src/stats_3a_private.h"
 #include "components/acc_cluster/acc_lace_stat/lace_stat_private.h"
 #include "components/acc_cluster/acc_lace_stat/host/lace_stat.host.h"
@@ -3390,6 +3391,7 @@ sh_css_init_isp_params_from_global(struct ia_css_stream *stream,
 
 		ia_css_set_sdis2_config(params, &stream_params->dvs2_coefs);
 		params->dvs2_coef_table_changed = stream_params->dvs2_coef_table_changed;
+		params->sensor_binning = stream_params->sensor_binning;
 #endif /* !defined(IS_ISP_2500_SYSTEM) */
 	}
 
@@ -3555,6 +3557,7 @@ ia_css_stream_isp_parameters_uninit(struct ia_css_stream *stream)
 
 #if defined(IS_ISP_2500_SYSTEM)
 	destroy_acc_cluster(stream);
+	stripe_table_release();
 #endif
 
 	/* Free up theDVS table memory blocks before recomputing new table */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/spmem_dump.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/spmem_dump.c
index b06e72a..02c20e3 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/spmem_dump.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/spmem_dump.c
@@ -22,9 +22,9 @@
 
 #define _hrt_cell_load_program_sp(proc) _hrt_cell_load_program_embedded(proc, sp)
 
-/* function input_system_acquisition_stop: AF0 */
+/* function input_system_acquisition_stop: ADA */
 
-/* function longjmp: 64A2 */
+/* function longjmp: 64C5 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_HIVE_IF_SRST_MASK
@@ -38,64 +38,64 @@
 #define HIVE_ADDR_sp_HIVE_IF_SRST_MASK 0x1CC
 #define HIVE_SIZE_sp_HIVE_IF_SRST_MASK 16
 
-/* function tmpmem_init_dmem: 623F */
+/* function tmpmem_init_dmem: 6262 */
 
-/* function ia_css_isys_sp_token_map_receive_ack: 5B8B */
+/* function ia_css_isys_sp_token_map_receive_ack: 5BAE */
 
-/* function ia_css_dmaproxy_sp_set_addr_B: 300E */
+/* function ia_css_dmaproxy_sp_set_addr_B: 3031 */
 
 /* function debug_buffer_set_ddr_addr: DD */
 
-/* function receiver_port_reg_load: AD4 */
+/* function receiver_port_reg_load: ABE */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_vbuf_mipi
 #define HIVE_MEM_vbuf_mipi scalar_processor_2400_dmem
-#define HIVE_ADDR_vbuf_mipi 0x61C4
+#define HIVE_ADDR_vbuf_mipi 0x62C4
 #define HIVE_SIZE_vbuf_mipi 12
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_vbuf_mipi scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_vbuf_mipi 0x61C4
+#define HIVE_ADDR_sp_vbuf_mipi 0x62C4
 #define HIVE_SIZE_sp_vbuf_mipi 12
 
-/* function ia_css_event_sp_decode: 31E3 */
+/* function ia_css_event_sp_decode: 3206 */
 
-/* function ia_css_queue_get_size: 44A6 */
+/* function ia_css_queue_get_size: 44CB */
 
-/* function ia_css_queue_load: 4AE7 */
+/* function ia_css_queue_load: 4B0C */
 
-/* function setjmp: 64AB */
+/* function setjmp: 64CE */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_sp2host_isys_event_queue
 #define HIVE_MEM_sem_for_sp2host_isys_event_queue scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_sp2host_isys_event_queue 0x4540
+#define HIVE_ADDR_sem_for_sp2host_isys_event_queue 0x4640
 #define HIVE_SIZE_sem_for_sp2host_isys_event_queue 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_sp2host_isys_event_queue scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_sp2host_isys_event_queue 0x4540
+#define HIVE_ADDR_sp_sem_for_sp2host_isys_event_queue 0x4640
 #define HIVE_SIZE_sp_sem_for_sp2host_isys_event_queue 20
 
-/* function ia_css_dmaproxy_sp_wait_for_ack: 69D9 */
+/* function ia_css_dmaproxy_sp_wait_for_ack: 69FC */
 
-/* function ia_css_sp_rawcopy_func: 4D0D */
+/* function ia_css_sp_rawcopy_func: 4D31 */
 
-/* function ia_css_tagger_buf_sp_pop_marked: 2762 */
+/* function ia_css_tagger_buf_sp_pop_marked: 2772 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_stage
 #define HIVE_MEM_isp_stage scalar_processor_2400_dmem
-#define HIVE_ADDR_isp_stage 0x5AA8
+#define HIVE_ADDR_isp_stage 0x5BA8
 #define HIVE_SIZE_isp_stage 832
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isp_stage scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_stage 0x5AA8
+#define HIVE_ADDR_sp_isp_stage 0x5BA8
 #define HIVE_SIZE_sp_isp_stage 832
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -110,32 +110,32 @@
 #define HIVE_ADDR_sp_vbuf_raw 0x2F4
 #define HIVE_SIZE_sp_vbuf_raw 4
 
-/* function ia_css_sp_bin_copy_func: 4C33 */
+/* function ia_css_sp_bin_copy_func: 4C58 */
 
-/* function ia_css_queue_item_store: 4835 */
+/* function ia_css_queue_item_store: 485A */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_metadata_bufs
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_metadata_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_metadata_bufs 0x495C
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_metadata_bufs 0x4A5C
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_metadata_bufs 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_metadata_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_metadata_bufs 0x495C
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_metadata_bufs 0x4A5C
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_metadata_bufs 20
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_buffer_bufs
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_buffer_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_buffer_bufs 0x4970
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_buffer_bufs 0x4A70
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_buffer_bufs 160
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_buffer_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_buffer_bufs 0x4970
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_buffer_bufs 0x4A70
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_buffer_bufs 160
 
 /* function sp_start_isp: 45D */
@@ -143,110 +143,110 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_binary_group
 #define HIVE_MEM_sp_binary_group scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_binary_group 0x5E98
+#define HIVE_ADDR_sp_binary_group 0x5F98
 #define HIVE_SIZE_sp_binary_group 32
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_binary_group scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_binary_group 0x5E98
+#define HIVE_ADDR_sp_sp_binary_group 0x5F98
 #define HIVE_SIZE_sp_sp_binary_group 32
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_sw_state
 #define HIVE_MEM_sp_sw_state scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sw_state 0x6154
+#define HIVE_ADDR_sp_sw_state 0x6254
 #define HIVE_SIZE_sp_sw_state 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_sw_state scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_sw_state 0x6154
+#define HIVE_ADDR_sp_sp_sw_state 0x6254
 #define HIVE_SIZE_sp_sp_sw_state 4
 
-/* function ia_css_thread_sp_main: D6D */
+/* function ia_css_thread_sp_main: D57 */
 
-/* function ia_css_ispctrl_sp_init_internal_buffers: 33E9 */
+/* function ia_css_ispctrl_sp_init_internal_buffers: 340C */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp2host_psys_event_queue_handle
 #define HIVE_MEM_sp2host_psys_event_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp2host_psys_event_queue_handle 0x4A10
+#define HIVE_ADDR_sp2host_psys_event_queue_handle 0x4B10
 #define HIVE_SIZE_sp2host_psys_event_queue_handle 12
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp2host_psys_event_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp2host_psys_event_queue_handle 0x4A10
+#define HIVE_ADDR_sp_sp2host_psys_event_queue_handle 0x4B10
 #define HIVE_SIZE_sp_sp2host_psys_event_queue_handle 12
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_sp2host_psys_event_queue
 #define HIVE_MEM_sem_for_sp2host_psys_event_queue scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_sp2host_psys_event_queue 0x4554
+#define HIVE_ADDR_sem_for_sp2host_psys_event_queue 0x4654
 #define HIVE_SIZE_sem_for_sp2host_psys_event_queue 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_sp2host_psys_event_queue scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_sp2host_psys_event_queue 0x4554
+#define HIVE_ADDR_sp_sem_for_sp2host_psys_event_queue 0x4654
 #define HIVE_SIZE_sp_sem_for_sp2host_psys_event_queue 20
 
-/* function ia_css_tagger_sp_propagate_frame: 2279 */
+/* function ia_css_tagger_sp_propagate_frame: 2289 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_stop_copy_preview
 #define HIVE_MEM_sp_stop_copy_preview scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_stop_copy_preview 0x6138
+#define HIVE_ADDR_sp_stop_copy_preview 0x6238
 #define HIVE_SIZE_sp_stop_copy_preview 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_stop_copy_preview scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_stop_copy_preview 0x6138
+#define HIVE_ADDR_sp_sp_stop_copy_preview 0x6238
 #define HIVE_SIZE_sp_sp_stop_copy_preview 4
 
-/* function input_system_reg_load: B29 */
+/* function input_system_reg_load: B13 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_vbuf_handles
 #define HIVE_MEM_vbuf_handles scalar_processor_2400_dmem
-#define HIVE_ADDR_vbuf_handles 0x61D0
+#define HIVE_ADDR_vbuf_handles 0x62D0
 #define HIVE_SIZE_vbuf_handles 960
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_vbuf_handles scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_vbuf_handles 0x61D0
+#define HIVE_ADDR_sp_vbuf_handles 0x62D0
 #define HIVE_SIZE_sp_vbuf_handles 960
 
-/* function ia_css_queue_store: 499B */
+/* function ia_css_queue_store: 49C0 */
 
-/* function ia_css_sp_flash_register: 297C */
+/* function ia_css_sp_flash_register: 298C */
 
-/* function ia_css_sp_rawcopy_dummy_function: 5319 */
+/* function ia_css_sp_rawcopy_dummy_function: 533C */
 
-/* function ia_css_isys_sp_backend_create: 57FE */
+/* function ia_css_isys_sp_backend_create: 5821 */
 
-/* function ia_css_pipeline_sp_init: 1791 */
+/* function ia_css_pipeline_sp_init: 179A */
 
-/* function ia_css_tagger_sp_configure: 2176 */
+/* function ia_css_tagger_sp_configure: 2186 */
 
-/* function ia_css_ispctrl_sp_end_binary: 322C */
+/* function ia_css_ispctrl_sp_end_binary: 324F */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_h_pipe_private_per_frame_ddr_ptrs
 #define HIVE_MEM_ia_css_bufq_sp_h_pipe_private_per_frame_ddr_ptrs scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_h_pipe_private_per_frame_ddr_ptrs 0x4A1C
+#define HIVE_ADDR_ia_css_bufq_sp_h_pipe_private_per_frame_ddr_ptrs 0x4B1C
 #define HIVE_SIZE_ia_css_bufq_sp_h_pipe_private_per_frame_ddr_ptrs 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_h_pipe_private_per_frame_ddr_ptrs scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_h_pipe_private_per_frame_ddr_ptrs 0x4A1C
+#define HIVE_ADDR_sp_ia_css_bufq_sp_h_pipe_private_per_frame_ddr_ptrs 0x4B1C
 #define HIVE_SIZE_sp_ia_css_bufq_sp_h_pipe_private_per_frame_ddr_ptrs 20
 
-/* function receiver_port_reg_store: ADB */
+/* function receiver_port_reg_store: AC5 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_event_is_pending_mask
@@ -263,114 +263,114 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cb_elems_frame
 #define HIVE_MEM_sp_all_cb_elems_frame scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_all_cb_elems_frame 0x4568
+#define HIVE_ADDR_sp_all_cb_elems_frame 0x4668
 #define HIVE_SIZE_sp_all_cb_elems_frame 16
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_all_cb_elems_frame scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_all_cb_elems_frame 0x4568
+#define HIVE_ADDR_sp_sp_all_cb_elems_frame 0x4668
 #define HIVE_SIZE_sp_sp_all_cb_elems_frame 16
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp2host_isys_event_queue_handle
 #define HIVE_MEM_sp2host_isys_event_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp2host_isys_event_queue_handle 0x4A30
+#define HIVE_ADDR_sp2host_isys_event_queue_handle 0x4B30
 #define HIVE_SIZE_sp2host_isys_event_queue_handle 12
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp2host_isys_event_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp2host_isys_event_queue_handle 0x4A30
+#define HIVE_ADDR_sp_sp2host_isys_event_queue_handle 0x4B30
 #define HIVE_SIZE_sp_sp2host_isys_event_queue_handle 12
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_host_sp_com
 #define HIVE_MEM_host_sp_com scalar_processor_2400_dmem
-#define HIVE_ADDR_host_sp_com 0x400C
+#define HIVE_ADDR_host_sp_com 0x40E4
 #define HIVE_SIZE_host_sp_com 220
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_host_sp_com scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_host_sp_com 0x400C
+#define HIVE_ADDR_sp_host_sp_com 0x40E4
 #define HIVE_SIZE_sp_host_sp_com 220
 
-/* function ia_css_queue_get_free_space: 45FA */
+/* function ia_css_queue_get_free_space: 461F */
 
-/* function exec_image_pipe: 6C1 */
+/* function exec_image_pipe: 6C4 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_init_dmem_data
 #define HIVE_MEM_sp_init_dmem_data scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_init_dmem_data 0x6158
+#define HIVE_ADDR_sp_init_dmem_data 0x6258
 #define HIVE_SIZE_sp_init_dmem_data 24
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_init_dmem_data scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_init_dmem_data 0x6158
+#define HIVE_ADDR_sp_sp_init_dmem_data 0x6258
 #define HIVE_SIZE_sp_sp_init_dmem_data 24
 
-/* function ia_css_sp_metadata_start: 55DB */
+/* function ia_css_sp_metadata_start: 55FE */
 
-/* function ia_css_bufq_sp_init_buffer_queues: 29EB */
+/* function ia_css_bufq_sp_init_buffer_queues: 29FB */
 
-/* function ia_css_pipeline_sp_stop: 1774 */
+/* function ia_css_pipeline_sp_stop: 177D */
 
-/* function ia_css_tagger_sp_connect_pipes: 25EB */
+/* function ia_css_tagger_sp_connect_pipes: 25FB */
 
-/* function sp_isys_copy_wait: 70A */
+/* function sp_isys_copy_wait: 70D */
 
 /* function is_isp_debug_buffer_full: 337 */
 
-/* function ia_css_dmaproxy_sp_configure_channel_from_info: 2F91 */
+/* function ia_css_dmaproxy_sp_configure_channel_from_info: 2FB4 */
 
-/* function encode_and_post_timer_event: A29 */
+/* function encode_and_post_timer_event: A2C */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_per_frame_data
 #define HIVE_MEM_sp_per_frame_data scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_per_frame_data 0x40E8
+#define HIVE_ADDR_sp_per_frame_data 0x41C0
 #define HIVE_SIZE_sp_per_frame_data 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_per_frame_data scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_per_frame_data 0x40E8
+#define HIVE_ADDR_sp_sp_per_frame_data 0x41C0
 #define HIVE_SIZE_sp_sp_per_frame_data 4
 
-/* function ia_css_rmgr_sp_vbuf_dequeue: 5F9B */
+/* function ia_css_rmgr_sp_vbuf_dequeue: 5FBE */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_host2sp_psys_event_queue_handle
 #define HIVE_MEM_host2sp_psys_event_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_host2sp_psys_event_queue_handle 0x4A3C
+#define HIVE_ADDR_host2sp_psys_event_queue_handle 0x4B3C
 #define HIVE_SIZE_host2sp_psys_event_queue_handle 12
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_host2sp_psys_event_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_host2sp_psys_event_queue_handle 0x4A3C
+#define HIVE_ADDR_sp_host2sp_psys_event_queue_handle 0x4B3C
 #define HIVE_SIZE_sp_host2sp_psys_event_queue_handle 12
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_xmem_bin_addr
 #define HIVE_MEM_xmem_bin_addr scalar_processor_2400_dmem
-#define HIVE_ADDR_xmem_bin_addr 0x40EC
+#define HIVE_ADDR_xmem_bin_addr 0x41C4
 #define HIVE_SIZE_xmem_bin_addr 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_xmem_bin_addr scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_xmem_bin_addr 0x40EC
+#define HIVE_ADDR_sp_xmem_bin_addr 0x41C4
 #define HIVE_SIZE_sp_xmem_bin_addr 4
 
-/* function tmr_clock_init: ABE */
+/* function tmr_clock_init: 13E9 */
 
-/* function ia_css_pipeline_sp_run: 13F5 */
+/* function ia_css_pipeline_sp_run: 13F8 */
 
-/* function memcpy: 654B */
+/* function memcpy: 656E */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_GP_DEVICE_BASE
@@ -396,49 +396,49 @@
 #define HIVE_ADDR_sp_ia_css_thread_sp_ready_queue 0x1E4
 #define HIVE_SIZE_sp_ia_css_thread_sp_ready_queue 12
 
-/* function input_system_reg_store: B30 */
+/* function input_system_reg_store: B1A */
 
-/* function ia_css_isys_sp_frontend_start: 5A14 */
+/* function ia_css_isys_sp_frontend_start: 5A37 */
 
-/* function ia_css_uds_sp_scale_params: 6255 */
+/* function ia_css_uds_sp_scale_params: 6278 */
 
-/* function ia_css_circbuf_increase_size: E52 */
+/* function ia_css_circbuf_increase_size: E3C */
 
-/* function __divu: 64C9 */
+/* function __divu: 64EC */
 
-/* function ia_css_thread_sp_get_state: C95 */
+/* function ia_css_thread_sp_get_state: C7F */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_cont_capt_stop
 #define HIVE_MEM_sem_for_cont_capt_stop scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_cont_capt_stop 0x4578
+#define HIVE_ADDR_sem_for_cont_capt_stop 0x4678
 #define HIVE_SIZE_sem_for_cont_capt_stop 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_cont_capt_stop scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_cont_capt_stop 0x4578
+#define HIVE_ADDR_sp_sem_for_cont_capt_stop 0x4678
 #define HIVE_SIZE_sp_sem_for_cont_capt_stop 20
 
-/* function thread_fiber_sp_main: E4B */
+/* function thread_fiber_sp_main: E35 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_isp_pipe_thread
 #define HIVE_MEM_sp_isp_pipe_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_pipe_thread 0x46BC
+#define HIVE_ADDR_sp_isp_pipe_thread 0x47BC
 #define HIVE_SIZE_sp_isp_pipe_thread 340
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_isp_pipe_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_isp_pipe_thread 0x46BC
+#define HIVE_ADDR_sp_sp_isp_pipe_thread 0x47BC
 #define HIVE_SIZE_sp_sp_isp_pipe_thread 340
 
-/* function ia_css_parambuf_sp_handle_parameter_sets: 1295 */
+/* function ia_css_parambuf_sp_handle_parameter_sets: 127F */
 
-/* function ia_css_spctrl_sp_set_state: 560A */
+/* function ia_css_spctrl_sp_set_state: 562D */
 
-/* function ia_css_thread_sem_sp_signal: 6710 */
+/* function ia_css_thread_sem_sp_signal: 6733 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_IRQ_BASE
@@ -464,13 +464,13 @@
 #define HIVE_ADDR_sp_TIMED_CTRL_BASE 0x40
 #define HIVE_SIZE_sp_TIMED_CTRL_BASE 4
 
-/* function ia_css_isys_sp_isr: 6B8A */
+/* function ia_css_isys_sp_isr: 6BAD */
 
-/* function ia_css_isys_sp_generate_exp_id: 5DAC */
+/* function ia_css_isys_sp_generate_exp_id: 5DCF */
 
-/* function ia_css_rmgr_sp_init: 5E96 */
+/* function ia_css_rmgr_sp_init: 5EB9 */
 
-/* function ia_css_thread_sem_sp_init: 67E1 */
+/* function ia_css_thread_sem_sp_init: 6804 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_is_isp_requested
@@ -487,24 +487,24 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_reading_cb_frame
 #define HIVE_MEM_sem_for_reading_cb_frame scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_reading_cb_frame 0x458C
+#define HIVE_ADDR_sem_for_reading_cb_frame 0x468C
 #define HIVE_SIZE_sem_for_reading_cb_frame 40
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_reading_cb_frame scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_reading_cb_frame 0x458C
+#define HIVE_ADDR_sp_sem_for_reading_cb_frame 0x468C
 #define HIVE_SIZE_sp_sem_for_reading_cb_frame 40
 
-/* function ia_css_dmaproxy_sp_execute: 2EF9 */
+/* function ia_css_dmaproxy_sp_execute: 2F1C */
 
-/* function ia_css_queue_is_empty: 44E1 */
+/* function ia_css_queue_is_empty: 4506 */
 
-/* function ia_css_pipeline_sp_has_stopped: 176A */
+/* function ia_css_pipeline_sp_has_stopped: 1773 */
 
-/* function ia_css_circbuf_extract: F52 */
+/* function ia_css_circbuf_extract: F3C */
 
-/* function ia_css_tagger_buf_sp_is_locked_from_start: 28A9 */
+/* function ia_css_tagger_buf_sp_is_locked_from_start: 28B9 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_current_sp_thread
@@ -518,11 +518,11 @@
 #define HIVE_ADDR_sp_current_sp_thread 0x1E0
 #define HIVE_SIZE_sp_current_sp_thread 4
 
-/* function ia_css_spctrl_sp_get_spid: 5611 */
+/* function ia_css_spctrl_sp_get_spid: 5634 */
 
-/* function ia_css_dmaproxy_sp_read_byte_addr: 6A07 */
+/* function ia_css_dmaproxy_sp_read_byte_addr: 6A2A */
 
-/* function ia_css_rmgr_sp_uninit: 5E8F */
+/* function ia_css_rmgr_sp_uninit: 5EB2 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_threads_stack
@@ -536,22 +536,22 @@
 #define HIVE_ADDR_sp_sp_threads_stack 0x168
 #define HIVE_SIZE_sp_sp_threads_stack 28
 
-/* function ia_css_circbuf_peek: F34 */
+/* function ia_css_circbuf_peek: F1E */
 
-/* function ia_css_parambuf_sp_wait_for_in_param: 105D */
+/* function ia_css_parambuf_sp_wait_for_in_param: 1047 */
 
-/* function ia_css_isys_sp_token_map_get_exp_id: 5C74 */
+/* function ia_css_isys_sp_token_map_get_exp_id: 5C97 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cb_elems_param
 #define HIVE_MEM_sp_all_cb_elems_param scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_all_cb_elems_param 0x45B4
+#define HIVE_ADDR_sp_all_cb_elems_param 0x46B4
 #define HIVE_SIZE_sp_all_cb_elems_param 16
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_all_cb_elems_param scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_all_cb_elems_param 0x45B4
+#define HIVE_ADDR_sp_sp_all_cb_elems_param 0x46B4
 #define HIVE_SIZE_sp_sp_all_cb_elems_param 16
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -569,105 +569,105 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cbs_frame_desc
 #define HIVE_MEM_sp_all_cbs_frame_desc scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_all_cbs_frame_desc 0x45C4
+#define HIVE_ADDR_sp_all_cbs_frame_desc 0x46C4
 #define HIVE_SIZE_sp_all_cbs_frame_desc 8
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_all_cbs_frame_desc scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_all_cbs_frame_desc 0x45C4
+#define HIVE_ADDR_sp_sp_all_cbs_frame_desc 0x46C4
 #define HIVE_SIZE_sp_sp_all_cbs_frame_desc 8
 
-/* function sp_isys_copy_func_v2: 703 */
+/* function sp_isys_copy_func_v2: 706 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_reading_cb_param
 #define HIVE_MEM_sem_for_reading_cb_param scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_reading_cb_param 0x45CC
+#define HIVE_ADDR_sem_for_reading_cb_param 0x46CC
 #define HIVE_SIZE_sem_for_reading_cb_param 40
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_reading_cb_param scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_reading_cb_param 0x45CC
+#define HIVE_ADDR_sp_sem_for_reading_cb_param 0x46CC
 #define HIVE_SIZE_sp_sem_for_reading_cb_param 40
 
-/* function ia_css_queue_get_used_space: 45AE */
+/* function ia_css_queue_get_used_space: 45D3 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_cont_capt_start
 #define HIVE_MEM_sem_for_cont_capt_start scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_cont_capt_start 0x45F4
+#define HIVE_ADDR_sem_for_cont_capt_start 0x46F4
 #define HIVE_SIZE_sem_for_cont_capt_start 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_cont_capt_start scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_cont_capt_start 0x45F4
+#define HIVE_ADDR_sp_sem_for_cont_capt_start 0x46F4
 #define HIVE_SIZE_sp_sem_for_cont_capt_start 20
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_tmp_heap
 #define HIVE_MEM_tmp_heap scalar_processor_2400_dmem
-#define HIVE_ADDR_tmp_heap 0x5EB8
+#define HIVE_ADDR_tmp_heap 0x5FB8
 #define HIVE_SIZE_tmp_heap 640
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_tmp_heap scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_tmp_heap 0x5EB8
+#define HIVE_ADDR_sp_tmp_heap 0x5FB8
 #define HIVE_SIZE_sp_tmp_heap 640
 
-/* function ia_css_rmgr_sp_get_num_vbuf: 6197 */
+/* function ia_css_rmgr_sp_get_num_vbuf: 61BA */
 
-/* function ia_css_ispctrl_sp_output_compute_dma_info: 3B57 */
+/* function ia_css_ispctrl_sp_output_compute_dma_info: 3B7C */
 
-/* function ia_css_tagger_sp_lock_exp_id: 1FA4 */
+/* function ia_css_tagger_sp_lock_exp_id: 1FAE */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_s3a_bufs
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_s3a_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_s3a_bufs 0x4A48
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_s3a_bufs 0x4B48
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_s3a_bufs 60
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_s3a_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_s3a_bufs 0x4A48
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_s3a_bufs 0x4B48
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_s3a_bufs 60
 
-/* function ia_css_queue_is_full: 4645 */
+/* function ia_css_queue_is_full: 466A */
 
 /* function debug_buffer_init_isp: E4 */
 
-/* function ia_css_isys_sp_frontend_uninit: 59CE */
+/* function ia_css_isys_sp_frontend_uninit: 59F1 */
 
-/* function ia_css_tagger_sp_exp_id_is_locked: 1EF2 */
+/* function ia_css_tagger_sp_exp_id_is_locked: 1EFC */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_rmgr_sp_mipi_frame_sem
 #define HIVE_MEM_ia_css_rmgr_sp_mipi_frame_sem scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_rmgr_sp_mipi_frame_sem 0x6590
+#define HIVE_ADDR_ia_css_rmgr_sp_mipi_frame_sem 0x6690
 #define HIVE_SIZE_ia_css_rmgr_sp_mipi_frame_sem 60
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_rmgr_sp_mipi_frame_sem scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_rmgr_sp_mipi_frame_sem 0x6590
+#define HIVE_ADDR_sp_ia_css_rmgr_sp_mipi_frame_sem 0x6690
 #define HIVE_SIZE_sp_ia_css_rmgr_sp_mipi_frame_sem 60
 
-/* function ia_css_rmgr_sp_refcount_dump: 5F76 */
+/* function ia_css_rmgr_sp_refcount_dump: 5F99 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_isp_parameters_id
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_isp_parameters_id scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_isp_parameters_id 0x4A84
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_isp_parameters_id 0x4B84
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_isp_parameters_id 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_isp_parameters_id scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_isp_parameters_id 0x4A84
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_isp_parameters_id 0x4B84
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_isp_parameters_id 20
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -682,61 +682,61 @@
 #define HIVE_ADDR_sp_sp_pipe_threads 0x154
 #define HIVE_SIZE_sp_sp_pipe_threads 20
 
-/* function sp_event_proxy_func: 718 */
+/* function sp_event_proxy_func: 71B */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_host2sp_isys_event_queue_handle
 #define HIVE_MEM_host2sp_isys_event_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_host2sp_isys_event_queue_handle 0x4A98
+#define HIVE_ADDR_host2sp_isys_event_queue_handle 0x4B98
 #define HIVE_SIZE_host2sp_isys_event_queue_handle 12
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_host2sp_isys_event_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_host2sp_isys_event_queue_handle 0x4A98
+#define HIVE_ADDR_sp_host2sp_isys_event_queue_handle 0x4B98
 #define HIVE_SIZE_sp_host2sp_isys_event_queue_handle 12
 
-/* function ia_css_thread_sp_yield: 6689 */
+/* function ia_css_thread_sp_yield: 66AC */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cbs_param_desc
 #define HIVE_MEM_sp_all_cbs_param_desc scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_all_cbs_param_desc 0x4608
+#define HIVE_ADDR_sp_all_cbs_param_desc 0x4708
 #define HIVE_SIZE_sp_all_cbs_param_desc 8
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_all_cbs_param_desc scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_all_cbs_param_desc 0x4608
+#define HIVE_ADDR_sp_sp_all_cbs_param_desc 0x4708
 #define HIVE_SIZE_sp_sp_all_cbs_param_desc 8
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_dmaproxy_sp_invalidate_tlb
 #define HIVE_MEM_ia_css_dmaproxy_sp_invalidate_tlb scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_dmaproxy_sp_invalidate_tlb 0x5A9C
+#define HIVE_ADDR_ia_css_dmaproxy_sp_invalidate_tlb 0x5B9C
 #define HIVE_SIZE_ia_css_dmaproxy_sp_invalidate_tlb 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_dmaproxy_sp_invalidate_tlb scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_dmaproxy_sp_invalidate_tlb 0x5A9C
+#define HIVE_ADDR_sp_ia_css_dmaproxy_sp_invalidate_tlb 0x5B9C
 #define HIVE_SIZE_sp_ia_css_dmaproxy_sp_invalidate_tlb 4
 
-/* function ia_css_thread_sp_fork: D22 */
+/* function ia_css_thread_sp_fork: D0C */
 
-/* function ia_css_tagger_sp_destroy: 25F5 */
+/* function ia_css_tagger_sp_destroy: 2605 */
 
-/* function ia_css_dmaproxy_sp_vmem_read: 2E99 */
+/* function ia_css_dmaproxy_sp_vmem_read: 2EBC */
 
-/* function ia_css_ifmtr_sp_init: 5DFD */
+/* function ia_css_ifmtr_sp_init: 5E20 */
 
-/* function initialize_sp_group: 6D1 */
+/* function initialize_sp_group: 6D4 */
 
-/* function ia_css_thread_sp_init: D4E */
+/* function ia_css_thread_sp_init: D38 */
 
-/* function ia_css_isys_sp_reset_exp_id: 5DA4 */
+/* function ia_css_isys_sp_reset_exp_id: 5DC7 */
 
-/* function ia_css_ispctrl_sp_set_stream_base_addr: 421F */
+/* function ia_css_ispctrl_sp_set_stream_base_addr: 4244 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ISP_DMEM_BASE
@@ -762,7 +762,7 @@
 #define HIVE_ADDR_sp_SP_DMEM_BASE 0x4
 #define HIVE_SIZE_sp_SP_DMEM_BASE 4
 
-/* function ia_css_dmaproxy_sp_read: 2F0F */
+/* function ia_css_dmaproxy_sp_read: 2F32 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_raw_copy_line_count
@@ -779,27 +779,27 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_host2sp_tag_cmd_queue_handle
 #define HIVE_MEM_host2sp_tag_cmd_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_host2sp_tag_cmd_queue_handle 0x4AA4
+#define HIVE_ADDR_host2sp_tag_cmd_queue_handle 0x4BA4
 #define HIVE_SIZE_host2sp_tag_cmd_queue_handle 12
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_host2sp_tag_cmd_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_host2sp_tag_cmd_queue_handle 0x4AA4
+#define HIVE_ADDR_sp_host2sp_tag_cmd_queue_handle 0x4BA4
 #define HIVE_SIZE_sp_host2sp_tag_cmd_queue_handle 12
 
-/* function ia_css_queue_peek: 4524 */
+/* function ia_css_queue_peek: 4549 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_flash_sp_frame_cnt
 #define HIVE_MEM_ia_css_flash_sp_frame_cnt scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_flash_sp_frame_cnt 0x4950
+#define HIVE_ADDR_ia_css_flash_sp_frame_cnt 0x4A50
 #define HIVE_SIZE_ia_css_flash_sp_frame_cnt 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_flash_sp_frame_cnt scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_flash_sp_frame_cnt 0x4950
+#define HIVE_ADDR_sp_ia_css_flash_sp_frame_cnt 0x4A50
 #define HIVE_SIZE_sp_ia_css_flash_sp_frame_cnt 4
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -817,24 +817,24 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_thread
 #define HIVE_MEM_isp_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_isp_thread 0x5DE8
+#define HIVE_ADDR_isp_thread 0x5EE8
 #define HIVE_SIZE_isp_thread 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isp_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_thread 0x5DE8
+#define HIVE_ADDR_sp_isp_thread 0x5EE8
 #define HIVE_SIZE_sp_isp_thread 4
 
-/* function encode_and_post_sp_event_non_blocking: A71 */
+/* function encode_and_post_sp_event_non_blocking: A74 */
 
-/* function ia_css_isys_sp_frontend_destroy: 5AA6 */
+/* function ia_css_isys_sp_frontend_destroy: 5AC9 */
 
 /* function is_ddr_debug_buffer_full: 2CC */
 
-/* function ia_css_isys_sp_frontend_stop: 59E6 */
+/* function ia_css_isys_sp_frontend_stop: 5A09 */
 
-/* function ia_css_isys_sp_token_map_init: 5D42 */
+/* function ia_css_isys_sp_token_map_init: 5D65 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_threads_fiber
@@ -848,98 +848,98 @@
 #define HIVE_ADDR_sp_sp_threads_fiber 0x1A0
 #define HIVE_SIZE_sp_sp_threads_fiber 28
 
-/* function encode_and_post_sp_event: 9FA */
+/* function encode_and_post_sp_event: 9FD */
 
 /* function debug_enqueue_ddr: EE */
 
-/* function ia_css_rmgr_sp_refcount_init_vbuf: 5F31 */
+/* function ia_css_rmgr_sp_refcount_init_vbuf: 5F54 */
 
-/* function dmaproxy_sp_read_write: 6A92 */
+/* function dmaproxy_sp_read_write: 6AB5 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_dmaproxy_isp_dma_cmd_buffer
 #define HIVE_MEM_ia_css_dmaproxy_isp_dma_cmd_buffer scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_dmaproxy_isp_dma_cmd_buffer 0x5AA0
+#define HIVE_ADDR_ia_css_dmaproxy_isp_dma_cmd_buffer 0x5BA0
 #define HIVE_SIZE_ia_css_dmaproxy_isp_dma_cmd_buffer 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_dmaproxy_isp_dma_cmd_buffer scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_dmaproxy_isp_dma_cmd_buffer 0x5AA0
+#define HIVE_ADDR_sp_ia_css_dmaproxy_isp_dma_cmd_buffer 0x5BA0
 #define HIVE_SIZE_sp_ia_css_dmaproxy_isp_dma_cmd_buffer 4
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_host2sp_buffer_queue_handle
 #define HIVE_MEM_host2sp_buffer_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_host2sp_buffer_queue_handle 0x4AB0
+#define HIVE_ADDR_host2sp_buffer_queue_handle 0x4BB0
 #define HIVE_SIZE_host2sp_buffer_queue_handle 480
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_host2sp_buffer_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_host2sp_buffer_queue_handle 0x4AB0
+#define HIVE_ADDR_sp_host2sp_buffer_queue_handle 0x4BB0
 #define HIVE_SIZE_sp_host2sp_buffer_queue_handle 480
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_flash_sp_in_service
 #define HIVE_MEM_ia_css_flash_sp_in_service scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_flash_sp_in_service 0x30E8
+#define HIVE_ADDR_ia_css_flash_sp_in_service 0x3178
 #define HIVE_SIZE_ia_css_flash_sp_in_service 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_flash_sp_in_service scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_flash_sp_in_service 0x30E8
+#define HIVE_ADDR_sp_ia_css_flash_sp_in_service 0x3178
 #define HIVE_SIZE_sp_ia_css_flash_sp_in_service 4
 
-/* function ia_css_dmaproxy_sp_process: 6809 */
+/* function ia_css_dmaproxy_sp_process: 682C */
 
-/* function ia_css_tagger_buf_sp_mark_from_end: 2956 */
+/* function ia_css_tagger_buf_sp_mark_from_end: 2966 */
 
-/* function ia_css_isys_sp_backend_rcv_acquire_ack: 56B3 */
+/* function ia_css_isys_sp_backend_rcv_acquire_ack: 56D6 */
 
-/* function ia_css_isys_sp_backend_pre_acquire_request: 56C9 */
+/* function ia_css_isys_sp_backend_pre_acquire_request: 56EC */
 
-/* function ia_css_ispctrl_sp_init_cs: 3319 */
+/* function ia_css_ispctrl_sp_init_cs: 333C */
 
-/* function ia_css_spctrl_sp_init: 561F */
+/* function ia_css_spctrl_sp_init: 5642 */
 
-/* function sp_event_proxy_init: 72D */
+/* function sp_event_proxy_init: 730 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_previous_clock_tick
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_previous_clock_tick scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_previous_clock_tick 0x4C90
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_previous_clock_tick 0x4D90
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_previous_clock_tick 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_previous_clock_tick scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_previous_clock_tick 0x4C90
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_previous_clock_tick 0x4D90
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_previous_clock_tick 20
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_output
 #define HIVE_MEM_sp_output scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_output 0x40F0
+#define HIVE_ADDR_sp_output 0x41C8
 #define HIVE_SIZE_sp_output 16
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_output scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_output 0x40F0
+#define HIVE_ADDR_sp_sp_output 0x41C8
 #define HIVE_SIZE_sp_sp_output 16
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_sems_for_host2sp_buf_queues
 #define HIVE_MEM_ia_css_bufq_sp_sems_for_host2sp_buf_queues scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_sems_for_host2sp_buf_queues 0x4CA4
+#define HIVE_ADDR_ia_css_bufq_sp_sems_for_host2sp_buf_queues 0x4DA4
 #define HIVE_SIZE_ia_css_bufq_sp_sems_for_host2sp_buf_queues 800
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_sems_for_host2sp_buf_queues scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_sems_for_host2sp_buf_queues 0x4CA4
+#define HIVE_ADDR_sp_ia_css_bufq_sp_sems_for_host2sp_buf_queues 0x4DA4
 #define HIVE_SIZE_sp_ia_css_bufq_sp_sems_for_host2sp_buf_queues 800
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -966,52 +966,52 @@
 #define HIVE_ADDR_sp_INPUT_FORMATTER_BASE 0x4C
 #define HIVE_SIZE_sp_INPUT_FORMATTER_BASE 16
 
-/* function sp_dma_proxy_reset_channels: 314D */
+/* function sp_dma_proxy_reset_channels: 3170 */
 
-/* function ia_css_isys_sp_backend_acquire: 57D4 */
+/* function ia_css_isys_sp_backend_acquire: 57F7 */
 
-/* function ia_css_tagger_sp_update_size: 26D7 */
+/* function ia_css_tagger_sp_update_size: 26E7 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_host_sp_queue
 #define HIVE_MEM_ia_css_bufq_host_sp_queue scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_host_sp_queue 0x4FC4
+#define HIVE_ADDR_ia_css_bufq_host_sp_queue 0x50C4
 #define HIVE_SIZE_ia_css_bufq_host_sp_queue 2008
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_host_sp_queue scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_host_sp_queue 0x4FC4
+#define HIVE_ADDR_sp_ia_css_bufq_host_sp_queue 0x50C4
 #define HIVE_SIZE_sp_ia_css_bufq_host_sp_queue 2008
 
-/* function thread_fiber_sp_create: DBA */
+/* function thread_fiber_sp_create: DA4 */
 
-/* function ia_css_dmaproxy_sp_set_increments: 2FFB */
+/* function ia_css_dmaproxy_sp_set_increments: 301E */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_writing_cb_frame
 #define HIVE_MEM_sem_for_writing_cb_frame scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_writing_cb_frame 0x4610
+#define HIVE_ADDR_sem_for_writing_cb_frame 0x4710
 #define HIVE_SIZE_sem_for_writing_cb_frame 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_writing_cb_frame scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_writing_cb_frame 0x4610
+#define HIVE_ADDR_sp_sem_for_writing_cb_frame 0x4710
 #define HIVE_SIZE_sp_sem_for_writing_cb_frame 20
 
-/* function receiver_reg_store: AE9 */
+/* function receiver_reg_store: AD3 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_writing_cb_param
 #define HIVE_MEM_sem_for_writing_cb_param scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_writing_cb_param 0x4624
+#define HIVE_ADDR_sem_for_writing_cb_param 0x4724
 #define HIVE_SIZE_sem_for_writing_cb_param 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_writing_cb_param scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_writing_cb_param 0x4624
+#define HIVE_ADDR_sp_sem_for_writing_cb_param 0x4724
 #define HIVE_SIZE_sp_sem_for_writing_cb_param 20
 
 /* function sp_start_isp_entry: 453 */
@@ -1022,49 +1022,49 @@
 #endif
 #define HIVE_ADDR_sp_sp_start_isp_entry 0x453
 
-/* function ia_css_tagger_buf_sp_unmark_all: 28EF */
+/* function ia_css_tagger_buf_sp_unmark_all: 28FF */
 
-/* function ia_css_tagger_buf_sp_unmark_from_start: 2930 */
+/* function ia_css_tagger_buf_sp_unmark_from_start: 2940 */
 
-/* function ia_css_dmaproxy_sp_channel_acquire: 3179 */
+/* function ia_css_dmaproxy_sp_channel_acquire: 319C */
 
-/* function ia_css_rmgr_sp_add_num_vbuf: 6173 */
+/* function ia_css_rmgr_sp_add_num_vbuf: 6196 */
 
-/* function ia_css_isys_sp_token_map_create: 5D8B */
+/* function ia_css_isys_sp_token_map_create: 5DAE */
 
-/* function __ia_css_dmaproxy_sp_wait_for_ack_text: 2E65 */
+/* function __ia_css_dmaproxy_sp_wait_for_ack_text: 2E88 */
 
-/* function ia_css_bufq_sp_is_dynamic_buffer: 2D4E */
+/* function ia_css_bufq_sp_is_dynamic_buffer: 2D71 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_group
 #define HIVE_MEM_sp_group scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_group 0x4100
-#define HIVE_SIZE_sp_group 1084
+#define HIVE_ADDR_sp_group 0x41D8
+#define HIVE_SIZE_sp_group 1124
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_group scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_group 0x4100
-#define HIVE_SIZE_sp_sp_group 1084
+#define HIVE_ADDR_sp_sp_group 0x41D8
+#define HIVE_SIZE_sp_sp_group 1124
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_event_proxy_thread
 #define HIVE_MEM_sp_event_proxy_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_event_proxy_thread 0x4810
+#define HIVE_ADDR_sp_event_proxy_thread 0x4910
 #define HIVE_SIZE_sp_event_proxy_thread 68
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_event_proxy_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_event_proxy_thread 0x4810
+#define HIVE_ADDR_sp_sp_event_proxy_thread 0x4910
 #define HIVE_SIZE_sp_sp_event_proxy_thread 68
 
-/* function ia_css_thread_sp_kill: CE8 */
+/* function ia_css_thread_sp_kill: CD2 */
 
-/* function ia_css_tagger_sp_create: 269A */
+/* function ia_css_tagger_sp_create: 26AA */
 
-/* function tmpmem_acquire_dmem: 6220 */
+/* function tmpmem_acquire_dmem: 6243 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_MMU_BASE
@@ -1078,39 +1078,39 @@
 #define HIVE_ADDR_sp_MMU_BASE 0x24
 #define HIVE_SIZE_sp_MMU_BASE 8
 
-/* function ia_css_dmaproxy_sp_channel_release: 3165 */
+/* function ia_css_dmaproxy_sp_channel_release: 3188 */
 
-/* function ia_css_dmaproxy_sp_is_idle: 3145 */
+/* function ia_css_dmaproxy_sp_is_idle: 3168 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_qos_start
 #define HIVE_MEM_sem_for_qos_start scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_qos_start 0x4638
+#define HIVE_ADDR_sem_for_qos_start 0x4738
 #define HIVE_SIZE_sem_for_qos_start 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_qos_start scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_qos_start 0x4638
+#define HIVE_ADDR_sp_sem_for_qos_start 0x4738
 #define HIVE_SIZE_sp_sem_for_qos_start 20
 
-/* function isp_hmem_load: B67 */
+/* function isp_hmem_load: B51 */
 
-/* function ia_css_eventq_sp_send: 31BB */
+/* function ia_css_eventq_sp_send: 31DE */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_isys_sp_error_cnt
 #define HIVE_MEM_ia_css_isys_sp_error_cnt scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_isys_sp_error_cnt 0x617C
+#define HIVE_ADDR_ia_css_isys_sp_error_cnt 0x627C
 #define HIVE_SIZE_ia_css_isys_sp_error_cnt 16
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_isys_sp_error_cnt scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_isys_sp_error_cnt 0x617C
+#define HIVE_ADDR_sp_ia_css_isys_sp_error_cnt 0x627C
 #define HIVE_SIZE_sp_ia_css_isys_sp_error_cnt 16
 
-/* function ia_css_tagger_buf_sp_unlock_from_start: 2865 */
+/* function ia_css_tagger_buf_sp_unlock_from_start: 2875 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_debug_buffer_ddr_address
@@ -1124,31 +1124,31 @@
 #define HIVE_ADDR_sp_debug_buffer_ddr_address 0xBC
 #define HIVE_SIZE_sp_debug_buffer_ddr_address 4
 
-/* function sp_isys_copy_request: 711 */
+/* function sp_isys_copy_request: 714 */
 
-/* function ia_css_rmgr_sp_refcount_retain_vbuf: 600B */
+/* function ia_css_rmgr_sp_refcount_retain_vbuf: 602E */
 
-/* function ia_css_thread_sp_set_priority: CE0 */
+/* function ia_css_thread_sp_set_priority: CCA */
 
-/* function sizeof_hmem: C0E */
+/* function sizeof_hmem: BF8 */
 
-/* function tmpmem_release_dmem: 620F */
+/* function tmpmem_release_dmem: 6232 */
 
 /* function cnd_input_system_cfg: 392 */
 
-/* function __ia_css_sp_rawcopy_func_critical: 6B13 */
+/* function __ia_css_sp_rawcopy_func_critical: 6B36 */
 
-/* function ia_css_dmaproxy_sp_set_width_exception: 2FE6 */
+/* function ia_css_dmaproxy_sp_set_width_exception: 3009 */
 
-/* function sp_event_assert: 8AE */
+/* function sp_event_assert: 8B1 */
 
-/* function ia_css_flash_sp_init_internal_params: 29E0 */
+/* function ia_css_flash_sp_init_internal_params: 29F0 */
 
-/* function ia_css_tagger_buf_sp_pop_unmarked_and_unlocked: 26F5 */
+/* function ia_css_tagger_buf_sp_pop_unmarked_and_unlocked: 2705 */
 
-/* function __modu: 650F */
+/* function __modu: 6532 */
 
-/* function ia_css_dmaproxy_sp_init_isp_vector: 2E6B */
+/* function ia_css_dmaproxy_sp_init_isp_vector: 2E8E */
 
 /* function isp_vamem_store: 0 */
 
@@ -1164,20 +1164,20 @@
 #define HIVE_ADDR_sp_GDC_BASE 0x44
 #define HIVE_SIZE_sp_GDC_BASE 8
 
-/* function ia_css_queue_local_init: 480F */
+/* function ia_css_queue_local_init: 4834 */
 
-/* function sp_event_proxy_callout_func: 65A1 */
+/* function sp_event_proxy_callout_func: 65C4 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_thread_sp_num_ready_threads
 #define HIVE_MEM_ia_css_thread_sp_num_ready_threads scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_thread_sp_num_ready_threads 0x489C
+#define HIVE_ADDR_ia_css_thread_sp_num_ready_threads 0x499C
 #define HIVE_SIZE_ia_css_thread_sp_num_ready_threads 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_thread_sp_num_ready_threads scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_thread_sp_num_ready_threads 0x489C
+#define HIVE_ADDR_sp_ia_css_thread_sp_num_ready_threads 0x499C
 #define HIVE_SIZE_sp_ia_css_thread_sp_num_ready_threads 4
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -1192,27 +1192,27 @@
 #define HIVE_ADDR_sp_sp_threads_stack_size 0x184
 #define HIVE_SIZE_sp_sp_threads_stack_size 28
 
-/* function ia_css_ispctrl_sp_isp_done_row_striping: 3B3D */
+/* function ia_css_ispctrl_sp_isp_done_row_striping: 3B62 */
 
-/* function __ia_css_isys_sp_isr_text: 5AD0 */
+/* function __ia_css_isys_sp_isr_text: 5AF3 */
 
-/* function ia_css_queue_dequeue: 468D */
+/* function ia_css_queue_dequeue: 46B2 */
 
-/* function ia_css_dmaproxy_sp_configure_channel: 6A1E */
+/* function ia_css_dmaproxy_sp_configure_channel: 6A41 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_current_thread_fiber_sp
 #define HIVE_MEM_current_thread_fiber_sp scalar_processor_2400_dmem
-#define HIVE_ADDR_current_thread_fiber_sp 0x48A4
+#define HIVE_ADDR_current_thread_fiber_sp 0x49A4
 #define HIVE_SIZE_current_thread_fiber_sp 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_current_thread_fiber_sp scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_current_thread_fiber_sp 0x48A4
+#define HIVE_ADDR_sp_current_thread_fiber_sp 0x49A4
 #define HIVE_SIZE_sp_current_thread_fiber_sp 4
 
-/* function ia_css_circbuf_pop: FE2 */
+/* function ia_css_circbuf_pop: FCC */
 
 /* function irq_raise_set_token: B6 */
 
@@ -1228,83 +1228,83 @@
 #define HIVE_ADDR_sp_GPIO_BASE 0x3C
 #define HIVE_SIZE_sp_GPIO_BASE 4
 
-/* function ia_css_pipeline_acc_stage_enable: 174A */
+/* function ia_css_pipeline_acc_stage_enable: 1751 */
 
-/* function ia_css_tagger_sp_unlock_exp_id: 1F17 */
+/* function ia_css_tagger_sp_unlock_exp_id: 1F21 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_ph
 #define HIVE_MEM_isp_ph scalar_processor_2400_dmem
-#define HIVE_ADDR_isp_ph 0x618C
+#define HIVE_ADDR_isp_ph 0x628C
 #define HIVE_SIZE_isp_ph 28
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isp_ph scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_ph 0x618C
+#define HIVE_ADDR_sp_isp_ph 0x628C
 #define HIVE_SIZE_sp_isp_ph 28
 
-/* function ia_css_isys_sp_token_map_flush: 5CD0 */
+/* function ia_css_isys_sp_token_map_flush: 5CF3 */
 
-/* function ia_css_ispctrl_sp_init_ds: 3478 */
+/* function ia_css_ispctrl_sp_init_ds: 349B */
 
-/* function get_xmem_base_addr_raw: 3812 */
+/* function get_xmem_base_addr_raw: 3835 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cbs_param
 #define HIVE_MEM_sp_all_cbs_param scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_all_cbs_param 0x464C
+#define HIVE_ADDR_sp_all_cbs_param 0x474C
 #define HIVE_SIZE_sp_all_cbs_param 16
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_all_cbs_param scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_all_cbs_param 0x464C
+#define HIVE_ADDR_sp_sp_all_cbs_param 0x474C
 #define HIVE_SIZE_sp_sp_all_cbs_param 16
 
-/* function ia_css_circbuf_create: 1030 */
+/* function ia_css_circbuf_create: 101A */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_sp_group
 #define HIVE_MEM_sem_for_sp_group scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_sp_group 0x465C
+#define HIVE_ADDR_sem_for_sp_group 0x475C
 #define HIVE_SIZE_sem_for_sp_group 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_sp_group scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_sp_group 0x465C
+#define HIVE_ADDR_sp_sem_for_sp_group 0x475C
 #define HIVE_SIZE_sp_sem_for_sp_group 20
 
-/* function ia_css_framebuf_sp_wait_for_in_frame: 619E */
+/* function ia_css_framebuf_sp_wait_for_in_frame: 61C1 */
 
-/* function ia_css_sp_rawcopy_tag_frame: 5236 */
+/* function ia_css_sp_rawcopy_tag_frame: 5259 */
 
-/* function isp_hmem_clear: B37 */
+/* function isp_hmem_clear: B21 */
 
-/* function ia_css_framebuf_sp_release_in_frame: 61E1 */
+/* function ia_css_framebuf_sp_release_in_frame: 6204 */
 
-/* function ia_css_isys_sp_backend_snd_acquire_request: 5726 */
+/* function ia_css_isys_sp_backend_snd_acquire_request: 5749 */
 
-/* function ia_css_isys_sp_token_map_is_full: 5B57 */
+/* function ia_css_isys_sp_token_map_is_full: 5B7A */
 
-/* function input_system_acquisition_run: B0B */
+/* function input_system_acquisition_run: AF5 */
 
-/* function ia_css_ispctrl_sp_start_binary: 32F7 */
+/* function ia_css_ispctrl_sp_start_binary: 331A */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_h_pipe_private_ddr_ptrs
 #define HIVE_MEM_ia_css_bufq_sp_h_pipe_private_ddr_ptrs scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 0x579C
+#define HIVE_ADDR_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 0x589C
 #define HIVE_SIZE_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 0x579C
+#define HIVE_ADDR_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 0x589C
 #define HIVE_SIZE_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 20
 
-/* function ia_css_eventq_sp_recv: 318D */
+/* function ia_css_eventq_sp_recv: 31B0 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_pool
@@ -1318,9 +1318,9 @@
 #define HIVE_ADDR_sp_isp_pool 0x2E8
 #define HIVE_SIZE_sp_isp_pool 4
 
-/* function ia_css_rmgr_sp_rel_gen: 5ED8 */
+/* function ia_css_rmgr_sp_rel_gen: 5EFB */
 
-/* function css_get_frame_processing_time_end: 1EE2 */
+/* function css_get_frame_processing_time_end: 1EEC */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_event_any_pending_mask
@@ -1334,13 +1334,13 @@
 #define HIVE_ADDR_sp_event_any_pending_mask 0x300
 #define HIVE_SIZE_sp_event_any_pending_mask 8
 
-/* function ia_css_isys_sp_backend_push: 56DD */
+/* function ia_css_isys_sp_backend_push: 5700 */
 
 /* function sh_css_decode_tag_descr: 352 */
 
 /* function debug_enqueue_isp: 27B */
 
-/* function ia_css_spctrl_sp_uninit: 5618 */
+/* function ia_css_spctrl_sp_uninit: 563B */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_HIVE_IF_SWITCH_CODE
@@ -1357,34 +1357,34 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_dis_bufs
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_dis_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_dis_bufs 0x57B0
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_dis_bufs 0x58B0
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_dis_bufs 140
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_dis_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_dis_bufs 0x57B0
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_dis_bufs 0x58B0
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_dis_bufs 140
 
-/* function ia_css_tagger_buf_sp_lock_from_start: 2887 */
+/* function ia_css_tagger_buf_sp_lock_from_start: 2897 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_isp_idle
 #define HIVE_MEM_sem_for_isp_idle scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_isp_idle 0x4670
+#define HIVE_ADDR_sem_for_isp_idle 0x4770
 #define HIVE_SIZE_sem_for_isp_idle 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_isp_idle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_isp_idle 0x4670
+#define HIVE_ADDR_sp_sem_for_isp_idle 0x4770
 #define HIVE_SIZE_sp_sem_for_isp_idle 20
 
-/* function ia_css_dmaproxy_sp_write_byte_addr: 2EC8 */
+/* function ia_css_dmaproxy_sp_write_byte_addr: 2EEB */
 
-/* function ia_css_dmaproxy_sp_init: 2E3F */
+/* function ia_css_dmaproxy_sp_init: 2E62 */
 
-/* function ia_css_bufq_sp_release_dynamic_buf_clock_tick: 2A72 */
+/* function ia_css_bufq_sp_release_dynamic_buf_clock_tick: 2A82 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ISP_VAMEM_BASE
@@ -1401,46 +1401,46 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_rawcopy_sp_tagger
 #define HIVE_MEM_ia_css_rawcopy_sp_tagger scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_rawcopy_sp_tagger 0x613C
+#define HIVE_ADDR_ia_css_rawcopy_sp_tagger 0x623C
 #define HIVE_SIZE_ia_css_rawcopy_sp_tagger 24
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_rawcopy_sp_tagger scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_rawcopy_sp_tagger 0x613C
+#define HIVE_ADDR_sp_ia_css_rawcopy_sp_tagger 0x623C
 #define HIVE_SIZE_sp_ia_css_rawcopy_sp_tagger 24
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_exp_ids
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_exp_ids scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_exp_ids 0x583C
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_exp_ids 0x593C
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_exp_ids 70
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_exp_ids scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_exp_ids 0x583C
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_exp_ids 0x593C
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_exp_ids 70
 
-/* function ia_css_queue_item_load: 4901 */
+/* function ia_css_queue_item_load: 4926 */
 
-/* function ia_css_spctrl_sp_get_state: 5603 */
+/* function ia_css_spctrl_sp_get_state: 5626 */
 
-/* function ia_css_isys_sp_token_map_uninit: 5CED */
+/* function ia_css_isys_sp_token_map_uninit: 5D10 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_callout_sp_thread
 #define HIVE_MEM_callout_sp_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_callout_sp_thread 0x4898
+#define HIVE_ADDR_callout_sp_thread 0x4998
 #define HIVE_SIZE_callout_sp_thread 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_callout_sp_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_callout_sp_thread 0x4898
+#define HIVE_ADDR_sp_callout_sp_thread 0x4998
 #define HIVE_SIZE_sp_callout_sp_thread 4
 
-/* function thread_fiber_sp_init: E41 */
+/* function thread_fiber_sp_init: E2B */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_SP_PMEM_BASE
@@ -1454,53 +1454,53 @@
 #define HIVE_ADDR_sp_SP_PMEM_BASE 0x0
 #define HIVE_SIZE_sp_SP_PMEM_BASE 4
 
-/* function ia_css_isys_sp_token_map_snd_acquire_req: 5C5D */
+/* function ia_css_isys_sp_token_map_snd_acquire_req: 5C80 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_isp_input_stream_format
 #define HIVE_MEM_sp_isp_input_stream_format scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_input_stream_format 0x3FF0
+#define HIVE_ADDR_sp_isp_input_stream_format 0x40C8
 #define HIVE_SIZE_sp_isp_input_stream_format 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_isp_input_stream_format scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_isp_input_stream_format 0x3FF0
+#define HIVE_ADDR_sp_sp_isp_input_stream_format 0x40C8
 #define HIVE_SIZE_sp_sp_isp_input_stream_format 20
 
-/* function __mod: 64FB */
+/* function __mod: 651E */
 
-/* function ia_css_dmaproxy_sp_init_dmem_channel: 2F29 */
+/* function ia_css_dmaproxy_sp_init_dmem_channel: 2F4C */
 
-/* function ia_css_thread_sp_join: D11 */
+/* function ia_css_thread_sp_join: CFB */
 
-/* function ia_css_dmaproxy_sp_add_command: 6AFD */
+/* function ia_css_dmaproxy_sp_add_command: 6B20 */
 
-/* function ia_css_sp_metadata_thread_func: 54B7 */
+/* function ia_css_sp_metadata_thread_func: 54DA */
 
-/* function __sp_event_proxy_func_critical: 658E */
+/* function __sp_event_proxy_func_critical: 65B1 */
 
-/* function ia_css_sp_metadata_wait: 55CA */
+/* function ia_css_sp_metadata_wait: 55ED */
 
-/* function ia_css_circbuf_peek_from_start: F16 */
+/* function ia_css_circbuf_peek_from_start: F00 */
 
-/* function ia_css_event_sp_encode: 3218 */
+/* function ia_css_event_sp_encode: 323B */
 
-/* function ia_css_thread_sp_run: D84 */
+/* function ia_css_thread_sp_run: D6E */
 
-/* function sp_isys_copy_func: 6F3 */
+/* function sp_isys_copy_func: 6F6 */
 
-/* function ia_css_isys_sp_backend_flush: 5746 */
+/* function ia_css_isys_sp_backend_flush: 5769 */
 
-/* function ia_css_isys_sp_backend_frame_exists: 5662 */
+/* function ia_css_isys_sp_backend_frame_exists: 5685 */
 
-/* function ia_css_sp_isp_param_init_isp_memories: 438A */
+/* function ia_css_sp_isp_param_init_isp_memories: 43AF */
 
-/* function register_isr: 8A6 */
+/* function register_isr: 8A9 */
 
 /* function irq_raise: C8 */
 
-/* function ia_css_dmaproxy_sp_mmu_invalidate: 2E06 */
+/* function ia_css_dmaproxy_sp_mmu_invalidate: 2E29 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_HIVE_IF_SRST_ADDRESS
@@ -1514,27 +1514,27 @@
 #define HIVE_ADDR_sp_HIVE_IF_SRST_ADDRESS 0x1BC
 #define HIVE_SIZE_sp_HIVE_IF_SRST_ADDRESS 16
 
-/* function pipeline_sp_initialize_stage: 1869 */
+/* function pipeline_sp_initialize_stage: 1872 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_isys_sp_frontend_states
 #define HIVE_MEM_ia_css_isys_sp_frontend_states scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_isys_sp_frontend_states 0x6170
+#define HIVE_ADDR_ia_css_isys_sp_frontend_states 0x6270
 #define HIVE_SIZE_ia_css_isys_sp_frontend_states 12
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_isys_sp_frontend_states scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_isys_sp_frontend_states 0x6170
+#define HIVE_ADDR_sp_ia_css_isys_sp_frontend_states 0x6270
 #define HIVE_SIZE_sp_ia_css_isys_sp_frontend_states 12
 
-/* function ia_css_dmaproxy_sp_read_byte_addr_mmio: 69F0 */
+/* function ia_css_dmaproxy_sp_read_byte_addr_mmio: 6A13 */
 
-/* function ia_css_ispctrl_sp_done_ds: 345F */
+/* function ia_css_ispctrl_sp_done_ds: 3482 */
 
-/* function ia_css_sp_isp_param_get_mem_inits: 4365 */
+/* function ia_css_sp_isp_param_get_mem_inits: 438A */
 
-/* function ia_css_parambuf_sp_init_buffer_queues: 13DB */
+/* function ia_css_parambuf_sp_init_buffer_queues: 13C5 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_vbuf_pfp_spref
@@ -1548,7 +1548,7 @@
 #define HIVE_ADDR_sp_vbuf_pfp_spref 0x2F0
 #define HIVE_SIZE_sp_vbuf_pfp_spref 4
 
-/* function input_system_cfg: ACD */
+/* function input_system_cfg: AB7 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ISP_HMEM_BASE
@@ -1565,132 +1565,132 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_frames
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_frames scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_frames 0x5884
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_frames 0x5984
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_frames 280
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_frames scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_frames 0x5884
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_frames 0x5984
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_frames 280
 
-/* function ia_css_isys_sp_backend_release: 57BB */
+/* function ia_css_isys_sp_backend_release: 57DE */
 
-/* function ia_css_isys_sp_backend_destroy: 57E5 */
+/* function ia_css_isys_sp_backend_destroy: 5808 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp2host_buffer_queue_handle
 #define HIVE_MEM_sp2host_buffer_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp2host_buffer_queue_handle 0x599C
+#define HIVE_ADDR_sp2host_buffer_queue_handle 0x5A9C
 #define HIVE_SIZE_sp2host_buffer_queue_handle 96
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp2host_buffer_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp2host_buffer_queue_handle 0x599C
+#define HIVE_ADDR_sp_sp2host_buffer_queue_handle 0x5A9C
 #define HIVE_SIZE_sp_sp2host_buffer_queue_handle 96
 
-/* function ia_css_isys_sp_token_map_check_mipi_frame_size: 5C21 */
+/* function ia_css_isys_sp_token_map_check_mipi_frame_size: 5C44 */
 
-/* function ia_css_ispctrl_sp_init_isp_vars: 4084 */
+/* function ia_css_ispctrl_sp_init_isp_vars: 40A9 */
 
-/* function ia_css_isys_sp_frontend_has_empty_mipi_buffer_cb: 5837 */
+/* function ia_css_isys_sp_frontend_has_empty_mipi_buffer_cb: 585A */
 
-/* function sp_warning: 8D8 */
+/* function sp_warning: 8DB */
 
-/* function ia_css_rmgr_sp_vbuf_enqueue: 5FCB */
+/* function ia_css_rmgr_sp_vbuf_enqueue: 5FEE */
 
-/* function ia_css_tagger_sp_tag_exp_id: 200E */
+/* function ia_css_tagger_sp_tag_exp_id: 2018 */
 
-/* function ia_css_dmaproxy_sp_write: 2EDF */
+/* function ia_css_dmaproxy_sp_write: 2F02 */
 
-/* function ia_css_parambuf_sp_release_in_param: 125B */
+/* function ia_css_parambuf_sp_release_in_param: 1245 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_irq_sw_interrupt_token
 #define HIVE_MEM_irq_sw_interrupt_token scalar_processor_2400_dmem
-#define HIVE_ADDR_irq_sw_interrupt_token 0x3FEC
+#define HIVE_ADDR_irq_sw_interrupt_token 0x40C4
 #define HIVE_SIZE_irq_sw_interrupt_token 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_irq_sw_interrupt_token scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_irq_sw_interrupt_token 0x3FEC
+#define HIVE_ADDR_sp_irq_sw_interrupt_token 0x40C4
 #define HIVE_SIZE_sp_irq_sw_interrupt_token 4
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_isp_addresses
 #define HIVE_MEM_sp_isp_addresses scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_addresses 0x5DEC
+#define HIVE_ADDR_sp_isp_addresses 0x5EEC
 #define HIVE_SIZE_sp_isp_addresses 172
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_isp_addresses scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_isp_addresses 0x5DEC
+#define HIVE_ADDR_sp_sp_isp_addresses 0x5EEC
 #define HIVE_SIZE_sp_sp_isp_addresses 172
 
-/* function ia_css_rmgr_sp_acq_gen: 5EF0 */
+/* function ia_css_rmgr_sp_acq_gen: 5F13 */
 
-/* function receiver_reg_load: AE2 */
+/* function receiver_reg_load: ACC */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isps
 #define HIVE_MEM_isps scalar_processor_2400_dmem
-#define HIVE_ADDR_isps 0x61A8
+#define HIVE_ADDR_isps 0x62A8
 #define HIVE_SIZE_isps 28
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isps scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isps 0x61A8
+#define HIVE_ADDR_sp_isps 0x62A8
 #define HIVE_SIZE_sp_isps 28
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_host_sp_queues_initialized
 #define HIVE_MEM_host_sp_queues_initialized scalar_processor_2400_dmem
-#define HIVE_ADDR_host_sp_queues_initialized 0x4004
+#define HIVE_ADDR_host_sp_queues_initialized 0x40DC
 #define HIVE_SIZE_host_sp_queues_initialized 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_host_sp_queues_initialized scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_host_sp_queues_initialized 0x4004
+#define HIVE_ADDR_sp_host_sp_queues_initialized 0x40DC
 #define HIVE_SIZE_sp_host_sp_queues_initialized 4
 
-/* function ia_css_queue_uninit: 47CD */
+/* function ia_css_queue_uninit: 47F2 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_ispctrl_sp_isp_started
 #define HIVE_MEM_ia_css_ispctrl_sp_isp_started scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_ispctrl_sp_isp_started 0x5AA4
+#define HIVE_ADDR_ia_css_ispctrl_sp_isp_started 0x5BA4
 #define HIVE_SIZE_ia_css_ispctrl_sp_isp_started 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_ispctrl_sp_isp_started scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_ispctrl_sp_isp_started 0x5AA4
+#define HIVE_ADDR_sp_ia_css_ispctrl_sp_isp_started 0x5BA4
 #define HIVE_SIZE_sp_ia_css_ispctrl_sp_isp_started 4
 
-/* function ia_css_bufq_sp_release_dynamic_buf: 2AC6 */
+/* function ia_css_bufq_sp_release_dynamic_buf: 2AD6 */
 
-/* function ia_css_dmaproxy_sp_set_height_exception: 2FD7 */
+/* function ia_css_dmaproxy_sp_set_height_exception: 2FFA */
 
-/* function ia_css_dmaproxy_sp_init_vmem_channel: 2F5C */
+/* function ia_css_dmaproxy_sp_init_vmem_channel: 2F7F */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_num_ready_threads
 #define HIVE_MEM_num_ready_threads scalar_processor_2400_dmem
-#define HIVE_ADDR_num_ready_threads 0x48A0
+#define HIVE_ADDR_num_ready_threads 0x49A0
 #define HIVE_SIZE_num_ready_threads 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_num_ready_threads scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_num_ready_threads 0x48A0
+#define HIVE_ADDR_sp_num_ready_threads 0x49A0
 #define HIVE_SIZE_sp_num_ready_threads 4
 
-/* function ia_css_dmaproxy_sp_write_byte_addr_mmio: 2EB1 */
+/* function ia_css_dmaproxy_sp_write_byte_addr_mmio: 2ED4 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_vbuf_spref
@@ -1707,64 +1707,64 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_metadata_thread
 #define HIVE_MEM_sp_metadata_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_metadata_thread 0x4854
+#define HIVE_ADDR_sp_metadata_thread 0x4954
 #define HIVE_SIZE_sp_metadata_thread 68
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_metadata_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_metadata_thread 0x4854
+#define HIVE_ADDR_sp_sp_metadata_thread 0x4954
 #define HIVE_SIZE_sp_sp_metadata_thread 68
 
-/* function ia_css_queue_enqueue: 4717 */
+/* function ia_css_queue_enqueue: 473C */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_flash_sp_request
 #define HIVE_MEM_ia_css_flash_sp_request scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_flash_sp_request 0x4954
+#define HIVE_ADDR_ia_css_flash_sp_request 0x4A54
 #define HIVE_SIZE_ia_css_flash_sp_request 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_flash_sp_request scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_flash_sp_request 0x4954
+#define HIVE_ADDR_sp_ia_css_flash_sp_request 0x4A54
 #define HIVE_SIZE_sp_ia_css_flash_sp_request 4
 
-/* function ia_css_dmaproxy_sp_vmem_write: 2E82 */
+/* function ia_css_dmaproxy_sp_vmem_write: 2EA5 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_tagger_frames
 #define HIVE_MEM_tagger_frames scalar_processor_2400_dmem
-#define HIVE_ADDR_tagger_frames 0x48A8
+#define HIVE_ADDR_tagger_frames 0x49A8
 #define HIVE_SIZE_tagger_frames 168
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_tagger_frames scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_tagger_frames 0x48A8
+#define HIVE_ADDR_sp_tagger_frames 0x49A8
 #define HIVE_SIZE_sp_tagger_frames 168
 
-/* function ia_css_isys_sp_token_map_snd_capture_req: 5C7F */
+/* function ia_css_isys_sp_token_map_snd_capture_req: 5CA2 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_reading_if
 #define HIVE_MEM_sem_for_reading_if scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_reading_if 0x4684
+#define HIVE_ADDR_sem_for_reading_if 0x4784
 #define HIVE_SIZE_sem_for_reading_if 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_reading_if scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_reading_if 0x4684
+#define HIVE_ADDR_sp_sem_for_reading_if 0x4784
 #define HIVE_SIZE_sp_sem_for_reading_if 20
 
-/* function sp_generate_interrupts: 957 */
+/* function sp_generate_interrupts: 95A */
 
-/* function ia_css_pipeline_sp_start: 177C */
+/* function ia_css_pipeline_sp_start: 1785 */
 
-/* function ia_css_sp_rawcopy_init: 4CF5 */
+/* function ia_css_sp_rawcopy_init: 4D19 */
 
-/* function tmr_clock_read: AB4 */
+/* function tmr_clock_read: 13DF */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ISP_BAMEM_BASE
@@ -1778,55 +1778,55 @@
 #define HIVE_ADDR_sp_ISP_BAMEM_BASE 0x2F8
 #define HIVE_SIZE_sp_ISP_BAMEM_BASE 4
 
-/* function ia_css_isys_sp_frontend_rcv_capture_ack: 58E6 */
+/* function ia_css_isys_sp_frontend_rcv_capture_ack: 5909 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_sems_for_sp2host_buf_queues
 #define HIVE_MEM_ia_css_bufq_sp_sems_for_sp2host_buf_queues scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_sems_for_sp2host_buf_queues 0x59FC
+#define HIVE_ADDR_ia_css_bufq_sp_sems_for_sp2host_buf_queues 0x5AFC
 #define HIVE_SIZE_ia_css_bufq_sp_sems_for_sp2host_buf_queues 160
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues 0x59FC
+#define HIVE_ADDR_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues 0x5AFC
 #define HIVE_SIZE_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues 160
 
-/* function css_get_frame_processing_time_start: 1EEA */
+/* function css_get_frame_processing_time_start: 1EF4 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cbs_frame
 #define HIVE_MEM_sp_all_cbs_frame scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_all_cbs_frame 0x4698
+#define HIVE_ADDR_sp_all_cbs_frame 0x4798
 #define HIVE_SIZE_sp_all_cbs_frame 16
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_all_cbs_frame scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_all_cbs_frame 0x4698
+#define HIVE_ADDR_sp_sp_all_cbs_frame 0x4798
 #define HIVE_SIZE_sp_sp_all_cbs_frame 16
 
-/* function thread_sp_queue_print: DA1 */
+/* function thread_sp_queue_print: D8B */
 
-/* function sp_notify_eof: 903 */
+/* function sp_notify_eof: 906 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_str2mem
 #define HIVE_MEM_sem_for_str2mem scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_str2mem 0x46A8
+#define HIVE_ADDR_sem_for_str2mem 0x47A8
 #define HIVE_SIZE_sem_for_str2mem 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_str2mem scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_str2mem 0x46A8
+#define HIVE_ADDR_sp_sem_for_str2mem 0x47A8
 #define HIVE_SIZE_sp_sem_for_str2mem 20
 
-/* function ia_css_tagger_buf_sp_is_marked_from_start: 28CC */
+/* function ia_css_tagger_buf_sp_is_marked_from_start: 28DC */
 
-/* function ia_css_bufq_sp_acquire_dynamic_buf: 2C7B */
+/* function ia_css_bufq_sp_acquire_dynamic_buf: 2C8B */
 
-/* function ia_css_circbuf_destroy: 1027 */
+/* function ia_css_circbuf_destroy: 1011 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ISP_PMEM_BASE
@@ -1840,41 +1840,41 @@
 #define HIVE_ADDR_sp_ISP_PMEM_BASE 0xC
 #define HIVE_SIZE_sp_ISP_PMEM_BASE 4
 
-/* function ia_css_sp_isp_param_mem_load: 42F8 */
+/* function ia_css_sp_isp_param_mem_load: 431D */
 
-/* function __div: 64B3 */
+/* function __div: 64D6 */
 
-/* function ia_css_isys_sp_frontend_create: 5AB7 */
+/* function ia_css_isys_sp_frontend_create: 5ADA */
 
-/* function ia_css_rmgr_sp_refcount_release_vbuf: 5FEA */
+/* function ia_css_rmgr_sp_refcount_release_vbuf: 600D */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_flash_sp_in_use
 #define HIVE_MEM_ia_css_flash_sp_in_use scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_flash_sp_in_use 0x4958
+#define HIVE_ADDR_ia_css_flash_sp_in_use 0x4A58
 #define HIVE_SIZE_ia_css_flash_sp_in_use 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_flash_sp_in_use scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_flash_sp_in_use 0x4958
+#define HIVE_ADDR_sp_ia_css_flash_sp_in_use 0x4A58
 #define HIVE_SIZE_sp_ia_css_flash_sp_in_use 4
 
-/* function ia_css_thread_sem_sp_wait: 675B */
+/* function ia_css_thread_sem_sp_wait: 677E */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_sleep_mode
 #define HIVE_MEM_sp_sleep_mode scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sleep_mode 0x4008
+#define HIVE_ADDR_sp_sleep_mode 0x40E0
 #define HIVE_SIZE_sp_sleep_mode 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_sleep_mode scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_sleep_mode 0x4008
+#define HIVE_ADDR_sp_sp_sleep_mode 0x40E0
 #define HIVE_SIZE_sp_sp_sleep_mode 4
 
-/* function ia_css_tagger_buf_sp_push: 27E5 */
+/* function ia_css_tagger_buf_sp_push: 27F5 */
 
 /* function mmu_invalidate_cache: D3 */
 
@@ -1890,18 +1890,18 @@
 #define HIVE_ADDR_sp_sp_max_cb_elems 0x14C
 #define HIVE_SIZE_sp_sp_max_cb_elems 8
 
-/* function ia_css_queue_remote_init: 47EF */
+/* function ia_css_queue_remote_init: 4814 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_stop_req
 #define HIVE_MEM_isp_stop_req scalar_processor_2400_dmem
-#define HIVE_ADDR_isp_stop_req 0x453C
+#define HIVE_ADDR_isp_stop_req 0x463C
 #define HIVE_SIZE_isp_stop_req 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isp_stop_req scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_stop_req 0x453C
+#define HIVE_ADDR_sp_isp_stop_req 0x463C
 #define HIVE_SIZE_sp_isp_stop_req 4
 
 #define HIVE_ICACHE_sp_critical_SEGMENT_START 0
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/camera/pipe/src/pipe_binarydesc.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/camera/pipe/src/pipe_binarydesc.c
index 0f5b2c5..20af57c 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/camera/pipe/src/pipe_binarydesc.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/camera/pipe/src/pipe_binarydesc.c
@@ -539,6 +539,7 @@ void ia_css_pipe_get_capturepp_binarydesc(
 	IA_CSS_LEAVE_PRIVATE("");
 }
 
+/* lookup table for high quality primary binaries */
 static unsigned int primary_hq_binary_modes[NUM_PRIMARY_HQ_STAGES] =
 {
 	IA_CSS_BINARY_MODE_PRIMARY_HQ_STAGE0,
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/css_api_version.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/css_api_version.h
index da39a1c..cb7a000 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/css_api_version.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/css_api_version.h
@@ -35,7 +35,7 @@ The version string has four dot-separated numbers, read left to right:
 
 */
 
-#define CSS_API_VERSION_STRING	"2.1.10.5"
+#define CSS_API_VERSION_STRING	"2.1.10.6"
 
 /*
 Change log
@@ -246,6 +246,10 @@ v2.1.10.5 (5 changes parallel), change the pipe version type from integer to enu
 v2.1.10.5 (2 changes parallel), Added public interface for setting the scaler LUT.
 - Added the public struct to output system and modified the global config struct.
 
+v2.1.10.6, new API getter functions for gdc in buffer information
+- ia_css_pipe_get_dvs_filter() added
+- ia_css_pipe_get_gdc_in_buffer_info() added
+
 */
 
 #endif /*__CSS_API_VERSION_H*/
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/hive_isp_css_2401_system_csi2p_generated/ia_css_isp_configs.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/hive_isp_css_2401_system_csi2p_generated/ia_css_isp_configs.h
index 0bc7fc0..ec3fb636 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/hive_isp_css_2401_system_csi2p_generated/ia_css_isp_configs.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/hive_isp_css_2401_system_csi2p_generated/ia_css_isp_configs.h
@@ -13,11 +13,9 @@
  */
 
 #ifdef IA_CSS_INCLUDE_CONFIGURATIONS
-#include "isp/kernels/copy_output/copy_output_1.0/ia_css_copy_output.host.h"
 #include "isp/kernels/crop/crop_1.0/ia_css_crop.host.h"
 #include "isp/kernels/dvs/dvs_1.0/ia_css_dvs.host.h"
 #include "isp/kernels/fpn/fpn_1.0/ia_css_fpn.host.h"
-#include "isp/kernels/iterator/iterator_1.0/ia_css_iterator.host.h"
 #include "isp/kernels/ob/ob_1.0/ia_css_ob.host.h"
 #include "isp/kernels/output/output_1.0/ia_css_output.host.h"
 #include "isp/kernels/qplane/qplane_2/ia_css_qplane.host.h"
@@ -26,6 +24,8 @@
 #include "isp/kernels/s3a/s3a_1.0/ia_css_s3a.host.h"
 #include "isp/kernels/tnr/tnr_1.0/ia_css_tnr.host.h"
 #include "isp/kernels/vf/vf_1.0/ia_css_vf.host.h"
+#include "isp/kernels/iterator/iterator_1.0/ia_css_iterator.host.h"
+#include "isp/kernels/copy_output/copy_output_1.0/ia_css_copy_output.host.h"
 #endif /* IA_CSS_INCLUDE_CONFIGURATIONS */
 /* Generated code: do not edit or commmit. */
 
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/hive_isp_css_2401_system_csi2p_generated/ia_css_isp_params.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/hive_isp_css_2401_system_csi2p_generated/ia_css_isp_params.c
index c5c85ac..b00a812 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/hive_isp_css_2401_system_csi2p_generated/ia_css_isp_params.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/hive_isp_css_2401_system_csi2p_generated/ia_css_isp_params.c
@@ -29,7 +29,6 @@
 #include "isp/kernels/de/de_1.0/ia_css_de.host.h"
 #include "isp/kernels/de/de_2/ia_css_de2.host.h"
 #include "isp/kernels/dp/dp_1.0/ia_css_dp.host.h"
-#include "isp/kernels/fc/fc_1.0/ia_css_formats.host.h"
 #include "isp/kernels/fixedbds/fixedbds_1.0/ia_css_fixedbds.host.h"
 #include "isp/kernels/fpn/fpn_1.0/ia_css_fpn.host.h"
 #include "isp/kernels/gc/gc_1.0/ia_css_gc.host.h"
@@ -39,7 +38,6 @@
 #include "isp/kernels/ob/ob_1.0/ia_css_ob.host.h"
 #include "isp/kernels/ob/ob2/ia_css_ob2.host.h"
 #include "isp/kernels/output/output_1.0/ia_css_output.host.h"
-#include "isp/kernels/iefd2_6/ia_css_iefd2_6.host.h"
 #include "isp/kernels/raw_aa_binning/raw_aa_binning_1.0/ia_css_raa.host.h"
 #include "isp/kernels/s3a/s3a_1.0/ia_css_s3a.host.h"
 #include "isp/kernels/sc/sc_1.0/ia_css_sc.host.h"
@@ -50,17 +48,14 @@
 #include "isp/kernels/wb/wb_1.0/ia_css_wb.host.h"
 #include "isp/kernels/xnr/xnr_1.0/ia_css_xnr.host.h"
 #include "isp/kernels/xnr/xnr_3.0/ia_css_xnr3.host.h"
-#include "isp/kernels/xnr/xnrvideo4/ia_css_xnrvideo4.host.h"
-#include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4.host.h"
-#include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_downsample.host.h"
-#include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_radial_metric.host.h"
 #include "isp/kernels/ynr/ynr_1.0/ia_css_ynr.host.h"
 #include "isp/kernels/ynr/ynr_2/ia_css_ynr2.host.h"
+#include "isp/kernels/fc/fc_1.0/ia_css_formats.host.h"
 #include "isp/kernels/tdf/tdf_1.0/ia_css_tdf.host.h"
+#include "isp/kernels/iefd2_6/ia_css_iefd2_6.host.h"
 #include "isp/kernels/dpc2/ia_css_dpc2.host.h"
 #include "isp/kernels/eed1_8/ia_css_eed1_8.host.h"
 #include "isp/kernels/bnlm/ia_css_bnlm.host.h"
-#include "isp/kernels/io_ls/bayer_io_ls/ia_css_bayer_io.host.h"
 #include "isp/kernels/conversion/conversion_1.0/ia_css_conversion.host.h"
 /* Generated code: do not edit or commmit. */
 
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css.h
index 7291d90..4cfde80 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150122_0200 */
-/* Release Version: irci_master_20150122_0200 */
+/* Release Version: irci_master_20150128_1925 */
+/* Release Version: irci_master_20150128_1925 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_host_data.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_host_data.h
index b4c2c02..0b05799 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_host_data.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_host_data.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150122_0200 */
-/* Release Version: irci_master_20150122_0200 */
+/* Release Version: irci_master_20150128_1925 */
+/* Release Version: irci_master_20150128_1925 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_pipe.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_pipe.h
index e7223b1..9c62f91 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_pipe.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_pipe.h
@@ -47,11 +47,10 @@ struct ia_css_preview_settings {
 
 struct ia_css_capture_settings {
 	struct ia_css_binary copy_binary;
-	struct ia_css_binary primary_binary;
-	/* primary_hq_binary(high quality primary) is used for ISP2.6.1 HQ still
-	 * capture pipe. In this pipe, primary binary is splitted to multiple
-	 * stages due to the high computation load. */
-	struct ia_css_binary primary_hq_binary[NUM_PRIMARY_HQ_STAGES];
+	/* we extend primary binary to multiple stages because in ISP2.6.1
+	 * the computation load is too high to fit in one single binary. */
+	struct ia_css_binary primary_binary[MAX_NUM_PRIMARY_STAGES];
+	unsigned int num_primary_stage;
 	struct ia_css_binary pre_isp_binary;
 	struct ia_css_binary anr_gdc_binary;
 	struct ia_css_binary post_isp_binary;
@@ -66,8 +65,8 @@ struct ia_css_capture_settings {
 #define IA_CSS_DEFAULT_CAPTURE_SETTINGS \
 { \
 	IA_CSS_BINARY_DEFAULT_SETTINGS,	/* copy_binary */\
-	IA_CSS_BINARY_DEFAULT_SETTINGS,	/* primary_binary */\
-	{IA_CSS_BINARY_DEFAULT_SETTINGS},	/* primary_hq_binary */\
+	{IA_CSS_BINARY_DEFAULT_SETTINGS},	/* primary_binary */\
+	0,				/* num_primary_stage */\
 	IA_CSS_BINARY_DEFAULT_SETTINGS,	/* pre_isp_binary */\
 	IA_CSS_BINARY_DEFAULT_SETTINGS,	/* anr_gdc_binary */\
 	IA_CSS_BINARY_DEFAULT_SETTINGS,	/* post_isp_binary */\
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_pipe_public.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_pipe_public.h
index 3186c0b..0d66b24 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_pipe_public.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_pipe_public.h
@@ -124,6 +124,10 @@ struct ia_css_pipe_config {
 	     to false. In some use cases this provides better performance. */
 	struct ia_css_isp_config *p_isp_config;
 	/**< Pointer to ISP configuration */
+	struct ia_css_resolution gdc_in_buffer_res;
+	/**< GDC in buffer resolution. */
+	struct ia_css_point gdc_in_buffer_offset;
+	/**< GDC in buffer offset - indicates the pixel coordinates of the first valid pixel inside the buffer */
 };
 
 /**
@@ -149,7 +153,9 @@ struct ia_css_pipe_config {
 	-1,					/* acc_num_execs */ \
 	false,					/* enable_dz */ \
 	false,					/* enable_dpc */ \
-	NULL					/* p_isp_config */\
+	NULL,					/* p_isp_config */\
+	{ 0, 0 },				/* gdc_in_buffer_res */ \
+	{ 0, 0 }				/* gdc_in_buffer_offset */ \
 }
 
 /** Pipe info, this struct describes properties of a pipe after it's stream has
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_types.h
index 6f804b3..056ec8e 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_types.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150122_0200 */
-/* Release Version: irci_master_20150122_0200 */
+/* Release Version: irci_master_20150128_1925 */
+/* Release Version: irci_master_20150128_1925 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_version_data.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_version_data.h
index 0f9a858..e0beb40 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_version_data.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_version_data.h
@@ -22,7 +22,7 @@
 #define __IA_CSS_VERSION_DATA_H
 
 
-#define CSS_VERSION_STRING "REL:20150122_04.4_0239; API:2.1.10.5; GIT:irci_20150121_1500__b6e2cf#b6e2cf097b446439a5d3733cc823f130ce5d882b; SDK:/nfs/iir/disks/iir_hivepackages_003/iir_hivepkgs_disk017/Css_Mizuchi/packages/Css_Mizuchi/int_css_mizuchi_20140829_1053; USER:viedifw; "
+#define CSS_VERSION_STRING "REL:20150128_05.3_2018; API:2.1.10.6; GIT:scci_20150128_0106_#7472445671f4b07d126c6c563208e8e73389dc89; SDK:/nfs/iir/disks/iir_hivepackages_003/iir_hivepkgs_disk017/Css_Mizuchi/packages/Css_Mizuchi/int_css_mizuchi_20140829_1053; USER:viedifw; "
 
 
 #endif
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/fc/fc_1.0/ia_css_formats.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/fc/fc_1.0/ia_css_formats.host.c
index 9b41b00..94631ee 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/fc/fc_1.0/ia_css_formats.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/fc/fc_1.0/ia_css_formats.host.c
@@ -15,10 +15,12 @@
 #include "ia_css_formats.host.h"
 #include "ia_css_types.h"
 #include "sh_css_defs.h"
-#include "ia_css_debug.h"
-//#include "sh_css_frac.h"
-
 
+/*#include "sh_css_frac.h"*/
+#ifndef IA_CSS_NO_DEBUG
+/* FIXME: See BZ 4427 */
+#include "ia_css_debug.h"
+#endif
 
 const struct ia_css_formats_config default_formats_config = {
 	1
@@ -33,7 +35,8 @@ ia_css_formats_encode(
 	(void)size;
 	to->video_full_range_flag = from->video_full_range_flag;
 }
-
+#ifndef IA_CSS_NO_DEBUG
+/* FIXME: See BZ 4427 */
 void
 ia_css_formats_dump(
 	const struct sh_css_isp_formats_params *formats,
@@ -43,7 +46,10 @@ ia_css_formats_dump(
 	ia_css_debug_dtrace(level, "\t%-32s = %d\n",
 			"video_full_range_flag", formats->video_full_range_flag);
 }
+#endif
 
+#ifndef IA_CSS_NO_DEBUG
+/* FIXME: See BZ 4427 */
 void
 ia_css_formats_debug_dtrace(
 	const struct ia_css_formats_config *config,
@@ -53,3 +59,4 @@ ia_css_formats_debug_dtrace(
 		"config.video_full_range_flag=%d\n",
 		config->video_full_range_flag);
 }
+#endif
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/fc/fc_1.0/ia_css_formats.host.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/fc/fc_1.0/ia_css_formats.host.h
index ea8bec8..8a90cd8 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/fc/fc_1.0/ia_css_formats.host.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/fc/fc_1.0/ia_css_formats.host.h
@@ -25,15 +25,21 @@ ia_css_formats_encode(
 	struct sh_css_isp_formats_params *to,
 	const struct ia_css_formats_config *from,
 	unsigned size);
-
+#ifndef IA_CSS_NO_DEBUG
+/* FIXME: See BZ 4427 */
 void
 ia_css_formats_dump(
 	const struct sh_css_isp_formats_params *formats,
 	unsigned level);
+#endif
 
+#ifndef IA_CSS_NO_DEBUG
+/* FIXME: See BZ 4427 */
 void
 ia_css_formats_debug_dtrace(
 	const struct ia_css_formats_config *formats,
 	unsigned level);
+#endif /*IA_CSS_NO_DEBUG*/
 
 #endif /* __IA_CSS_FORMATS_HOST_H */
+
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr.host.c
index 9cccd3b..fe4ee99 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr.host.c
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150122_0200 */
-/* Release Version: irci_master_20150122_0200 */
+/* Release Version: irci_master_20150128_1925 */
+/* Release Version: irci_master_20150128_1925 */
 /*
  * INTEL CONFIDENTIAL
  *
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr.host.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr.host.h
index 81ae9c1..033557c 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr.host.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr.host.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150122_0200 */
-/* Release Version: irci_master_20150122_0200 */
+/* Release Version: irci_master_20150128_1925 */
+/* Release Version: irci_master_20150128_1925 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr_param.h
index 5f8f61d..a059bdf 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr_param.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150122_0200 */
-/* Release Version: irci_master_20150122_0200 */
+/* Release Version: irci_master_20150128_1925 */
+/* Release Version: irci_master_20150128_1925 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr_types.h
index 8d61340..e3568c5 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr_types.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150122_0200 */
-/* Release Version: irci_master_20150122_0200 */
+/* Release Version: irci_master_20150128_1925 */
+/* Release Version: irci_master_20150128_1925 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/io_ls/bayer_io_ls/ia_css_bayer_io_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/io_ls/bayer_io_ls/ia_css_bayer_io_param.h
index 8b4fbf0..ecf86bd 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/io_ls/bayer_io_ls/ia_css_bayer_io_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/io_ls/bayer_io_ls/ia_css_bayer_io_param.h
@@ -15,13 +15,15 @@
 #ifndef __IA_CSS_BAYER_IO_PARAM
 #define __IA_CSS_BAYER_IO_PARAM
 
+#include "ia_css_bayer_io_types.h"
+
 struct bayer_io_configuration {
 	unsigned base_address;
 	unsigned width;
 	unsigned height;
 	unsigned stride;
 	unsigned ddr_elems_per_word;
-	unsigned dma_channel;
+	unsigned dma_channel[NUM_BAYER_DMA_CHANNELS];
 };
 
 #endif /* __IA_CSS_BAYER_IO_PARAM */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/io_ls/bayer_io_ls/ia_css_bayer_io_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/io_ls/bayer_io_ls/ia_css_bayer_io_types.h
index a85f536..77e1787 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/io_ls/bayer_io_ls/ia_css_bayer_io_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/io_ls/bayer_io_ls/ia_css_bayer_io_types.h
@@ -16,13 +16,15 @@
 #ifndef __IA_CSS_BAYER_IO_TYPES_H
 #define __IA_CSS_BAYER_IO_TYPES_H
 
+#define NUM_BAYER_DMA_CHANNELS 1
+
 struct ia_css_bayer_io_config {
 	unsigned base_address;
 	unsigned width;
 	unsigned height;
 	unsigned stride;
 	unsigned ddr_elems_per_word;
-	unsigned dma_channel;
+	unsigned dma_channel[NUM_BAYER_DMA_CHANNELS];
 };
 
 #endif /* __IA_CSS_BAYER_IO_TYPES_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/io_ls/plane_io_ls/ia_css_plane_io_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/io_ls/plane_io_ls/ia_css_plane_io_param.h
new file mode 100644
index 0000000..dce2b0b
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/io_ls/plane_io_ls/ia_css_plane_io_param.h
@@ -0,0 +1,39 @@
+/*
+ * INTEL CONFIDENTIAL
+ *
+ * Copyright (C) 2010 - 2015 Intel Corporation.
+ * All Rights Reserved.
+ *
+ * The source code contained or described herein and all documents
+ * related to the source code ("Material") are owned by Intel Corporation
+ * or licensors. Title to the Material remains with Intel
+ * Corporation or its licensors. The Material contains trade
+ * secrets and proprietary and confidential information of Intel or its
+ * licensors. The Material is protected by worldwide copyright
+ * and trade secret laws and treaty provisions. No part of the Material may
+ * be used, copied, reproduced, modified, published, uploaded, posted,
+ * transmitted, distributed, or disclosed in any way without Intel's prior
+ * express written permission.
+ *
+ * No License under any patent, copyright, trade secret or other intellectual
+ * property right is granted to or conferred upon you by disclosure or
+ * delivery of the Materials, either expressly, by implication, inducement,
+ * estoppel or otherwise. Any license under such intellectual property rights
+ * must be express and approved by Intel in writing.
+ */
+
+#ifndef __IA_CSS_PLANE_IO_PARAM_H
+#define __IA_CSS_PLANE_IO_PARAM_H
+
+#include "ia_css_plane_io_types.h"
+
+struct sh_css_plane_io_config {
+	unsigned base_address;
+	unsigned width;
+	unsigned height;
+	unsigned stride;
+	unsigned ddr_elems_per_word;
+	unsigned dma_channel[PLANE_IO_LS_NUM_DMA_CHANNELS];
+};
+
+#endif /* __IA_CSS_PLANE_IO_PARAM_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/io_ls/plane_io_ls/ia_css_plane_io_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/io_ls/plane_io_ls/ia_css_plane_io_types.h
new file mode 100644
index 0000000..c11b540
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/io_ls/plane_io_ls/ia_css_plane_io_types.h
@@ -0,0 +1,46 @@
+/*
+ * INTEL CONFIDENTIAL
+ *
+ * Copyright (C) 2010 - 2015 Intel Corporation.
+ * All Rights Reserved.
+ *
+ * The source code contained or described herein and all documents
+ * related to the source code ("Material") are owned by Intel Corporation
+ * or licensors. Title to the Material remains with Intel
+ * Corporation or its licensors. The Material contains trade
+ * secrets and proprietary and confidential information of Intel or its
+ * licensors. The Material is protected by worldwide copyright
+ * and trade secret laws and treaty provisions. No part of the Material may
+ * be used, copied, reproduced, modified, published, uploaded, posted,
+ * transmitted, distributed, or disclosed in any way without Intel's prior
+ * express written permission.
+ *
+ * No License under any patent, copyright, trade secret or other intellectual
+ * property right is granted to or conferred upon you by disclosure or
+ * delivery of the Materials, either expressly, by implication, inducement,
+ * estoppel or otherwise. Any license under such intellectual property rights
+ * must be express and approved by Intel in writing.
+ */
+
+#ifndef __IA_CSS_PLANE_IO_TYPES_H
+#define __IA_CSS_PLANE_IO_TYPES_H
+
+#define PLANE_IO_LS_NUM_PLANES       3
+#define PLANE_IO_LS_NUM_DMA_CHANNELS 1
+
+struct plane_io_config {
+	unsigned base_address;
+	unsigned width;
+	unsigned height;
+	unsigned stride;
+	unsigned ddr_elems_per_word;
+	unsigned dma_channel[PLANE_IO_LS_NUM_DMA_CHANNELS];
+};
+
+struct ia_css_plane_io_config {
+	struct plane_io_config get_plane_io_config[PLANE_IO_LS_NUM_PLANES];
+	struct plane_io_config put_plane_io_config[PLANE_IO_LS_NUM_PLANES];
+};
+
+#endif /* __IA_CSS_PLANE_IO_TYPES_H */
+
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/io_ls/yuv420_io_ls/ia_css_yuv420_io_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/io_ls/yuv420_io_ls/ia_css_yuv420_io_param.h
new file mode 100644
index 0000000..5453a19
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/io_ls/yuv420_io_ls/ia_css_yuv420_io_param.h
@@ -0,0 +1,30 @@
+/*
+ * Support for Intel Camera Imaging ISP subsystem.
+ * Copyright (c) 2015, Intel Corporation.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms and conditions of the GNU General Public License,
+ * version 2, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ */
+
+#ifndef __IA_CSS_YUV420_IO_PARAM
+#define __IA_CSS_YUV420_IO_PARAM
+
+#define NUM_YUV420_DMA_CHANNELS 2
+
+struct ia_css_yuv420_io_params {
+	unsigned base_address;
+	unsigned width;
+	unsigned height;
+	unsigned stride;
+	unsigned ddr_elems_per_word;
+	unsigned dma_channel[NUM_YUV420_DMA_CHANNELS];
+};
+
+
+#endif
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/io_ls/yuv420_io_ls/ia_css_yuv420_io_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/io_ls/yuv420_io_ls/ia_css_yuv420_io_types.h
new file mode 100644
index 0000000..5c01e3a
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/io_ls/yuv420_io_ls/ia_css_yuv420_io_types.h
@@ -0,0 +1,30 @@
+/*
+ * Support for Intel Camera Imaging ISP subsystem.
+ * Copyright (c) 2015, Intel Corporation.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms and conditions of the GNU General Public License,
+ * version 2, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ */
+
+#ifndef __IA_CSS_YUV420_IO_TYPES
+#define __IA_CSS_YUV420_IO_TYPES
+
+#define NUM_YUV420_DMA_CHANNELS 2
+
+struct ia_css_yuv420_io_config {
+	unsigned base_address;
+	unsigned width;
+	unsigned height;
+	unsigned stride;
+	unsigned ddr_elems_per_word;
+	unsigned dma_channel[NUM_YUV420_DMA_CHANNELS];
+};
+
+
+#endif
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4.host.c
index 59a4c2d..049b6d0 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4.host.c
@@ -32,7 +32,7 @@
 #include "ia_css_xnr4.host.h"
 #include "ia_css_xnr4_downsample.host.h"
 #include "ia_css_xnr4_radial_metric.host.h"
-
+#include "ia_css_xnr4_output_blend.host.h"
 
 void
 ia_css_xnr4_encode(
@@ -43,12 +43,17 @@ ia_css_xnr4_encode(
 	(void)size;
 	/* encode down sample parameters */
 	ia_css_xnr4_downsample_encode(&to->xnr4_downsample,
-				      &from->xnr4_downsample_config,
-				      sizeof(struct ia_css_xnr4_downsample_config));
+			&from->xnr4_downsample_config,
+			sizeof(struct ia_css_xnr4_downsample_config));
 	/* encode radial metric parameters */
 	ia_css_xnr4_radial_metric_encode(&to->xnr4_radial_metric,
-					 &from->xnr4_radial_metric_config,
-					 sizeof(struct ia_css_xnr4_radial_metric_config));
+			&from->xnr4_radial_metric_config,
+			sizeof(struct ia_css_xnr4_radial_metric_config));
+	/* encode output blend parameters */
+	ia_css_xnr4_output_blend_encode(&to->xnr4_output_blend,
+			&from->xnr4_output_blend_config,
+			sizeof(struct ia_css_xnr4_output_blend_config));
+
 }
 
 
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend.host.c
new file mode 100644
index 0000000..ee171f4
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend.host.c
@@ -0,0 +1,47 @@
+/*
+ * INTEL CONFIDENTIAL
+ *
+ * Copyright (C) 2010 - 2015 Intel Corporation.
+ * All Rights Reserved.
+ *
+ * The source code contained or described herein and all documents
+ * related to the source code ("Material") are owned by Intel Corporation
+ * or licensors. Title to the Material remains with Intel
+ * Corporation or its licensors. The Material contains trade
+ * secrets and proprietary and confidential information of Intel or its
+ * licensors. The Material is protected by worldwide copyright
+ * and trade secret laws and treaty provisions. No part of the Material may
+ * be used, copied, reproduced, modified, published, uploaded, posted,
+ * transmitted, distributed, or disclosed in any way without Intel's prior
+ * express written permission.
+ *
+ * No License under any patent, copyright, trade secret or other intellectual
+ * property right is granted to or conferred upon you by disclosure or
+ * delivery of the Materials, either expressly, by implication, inducement,
+ * estoppel or otherwise. Any license under such intellectual property rights
+ * must be express and approved by Intel in writing.
+ */
+
+#include "ia_css_types.h"
+#include "sh_css_defs.h"
+#ifndef IA_CSS_NO_DEBUG
+#include "ia_css_debug.h"
+#endif
+#include "sh_css_frac.h"
+
+#include "ia_css_xnr4_output_blend.host.h"
+
+const struct ia_css_xnr4_output_blend_config default_xnr4_output_blend_config = {
+	0, /* Output blend bypass value - luma */
+	0 /* Output blend bypass value - chroma */
+};
+
+void ia_css_xnr4_output_blend_encode(
+	struct sh_css_isp_xnr4_output_blend_params *to,
+	const struct ia_css_xnr4_output_blend_config *from,
+	unsigned size)
+{
+	(void)size;
+	to->m_bypass_mf_y  = from->m_bypass_mf_y;
+	to->m_bypass_mf_c  = from->m_bypass_mf_c;
+}
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend.host.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend.host.h
new file mode 100644
index 0000000..9046b89
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend.host.h
@@ -0,0 +1,39 @@
+/*
+ * INTEL CONFIDENTIAL
+ *
+ * Copyright (C) 2010 - 2015 Intel Corporation.
+ * All Rights Reserved.
+ *
+ * The source code contained or described herein and all documents
+ * related to the source code ("Material") are owned by Intel Corporation
+ * or licensors. Title to the Material remains with Intel
+ * Corporation or its licensors. The Material contains trade
+ * secrets and proprietary and confidential information of Intel or its
+ * licensors. The Material is protected by worldwide copyright
+ * and trade secret laws and treaty provisions. No part of the Material may
+ * be used, copied, reproduced, modified, published, uploaded, posted,
+ * transmitted, distributed, or disclosed in any way without Intel's prior
+ * express written permission.
+ *
+ * No License under any patent, copyright, trade secret or other intellectual
+ * property right is granted to or conferred upon you by disclosure or
+ * delivery of the Materials, either expressly, by implication, inducement,
+ * estoppel or otherwise. Any license under such intellectual property rights
+ * must be express and approved by Intel in writing.
+ */
+#ifndef __IA_CSS_XNR4_OUTPUT_BLEND_HOST_H
+#define __IA_CSS_XNR4_OUTPUT_BLEND_HOST_H
+
+#include "ia_css_xnr4_output_blend_types.h"
+#include "ia_css_xnr4_output_blend_param.h"
+
+extern const struct ia_css_xnr4_output_blend_config default_xnr4_output_blend_config;
+
+void
+ia_css_xnr4_output_blend_encode(
+	struct sh_css_isp_xnr4_output_blend_params *to,
+	const struct ia_css_xnr4_output_blend_config *from,
+	unsigned size);
+
+#endif /* __IA_CSS_XNR4_OUTPUT_BLEND_HOST_H */
+
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend_param.h
new file mode 100644
index 0000000..93a9c80
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend_param.h
@@ -0,0 +1,47 @@
+/*
+ * INTEL CONFIDENTIAL
+ *
+ * Copyright (C) 2010 - 2015 Intel Corporation.
+ * All Rights Reserved.
+ *
+ * The source code contained or described herein and all documents
+ * related to the source code ("Material") are owned by Intel Corporation
+ * or licensors. Title to the Material remains with Intel
+ * Corporation or its licensors. The Material contains trade
+ * secrets and proprietary and confidential information of Intel or its
+ * licensors. The Material is protected by worldwide copyright
+ * and trade secret laws and treaty provisions. No part of the Material may
+ * be used, copied, reproduced, modified, published, uploaded, posted,
+ * transmitted, distributed, or disclosed in any way without Intel's prior
+ * express written permission.
+ *
+ * No License under any patent, copyright, trade secret or other intellectual
+ * property right is granted to or conferred upon you by disclosure or
+ * delivery of the Materials, either expressly, by implication, inducement,
+ * estoppel or otherwise. Any license under such intellectual property rights
+ * must be express and approved by Intel in writing.
+ */
+#ifndef __IA_CSS_XNR4_OUTPUT_BLEND_PARAM_H
+#define __IA_CSS_XNR4_OUTPUT_BLEND_PARAM_H
+
+#include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_common_param.h"
+#include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_upsample_param.h"
+
+/* Output Blend Subkernel Configuration */
+
+/* TODO: get the delay from JBL */
+#define XNR4_JBL_VER_DELAY			(3)
+#define XNR4_JBL_HOR_DELAY			(1)
+
+#define XNR4_OUTPUT_BLEND_VER_DELAY		((XNR4_JBL_VER_DELAY * XNR4_LUMA_DS_FACTOR) + \
+						(XNR4_UPSCALE_VER_DELAY * XNR4_LUMA_DS_FACTOR))
+#define XNR4_OUTPUT_BLEND_HOR_DELAY		((XNR4_JBL_HOR_DELAY * XNR4_LUMA_DS_FACTOR) + \
+						(XNR4_UPSCALE_HOR_DELAY * XNR4_LUMA_DS_FACTOR))
+
+/* XNR4 Output Blend Parameters */
+struct sh_css_isp_xnr4_output_blend_params {
+	uint16_t m_bypass_mf_y; /* Output blend bypass value - luma */
+	uint16_t m_bypass_mf_c; /* Output blend bypass value - chroma */
+};
+
+#endif /* __IA_CSS_XNR4_RADIAL_METRIC_PARAM_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend_types.h
new file mode 100644
index 0000000..edd1622
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend_types.h
@@ -0,0 +1,35 @@
+/*
+ * INTEL CONFIDENTIAL
+ *
+ * Copyright (C) 2010 - 2015 Intel Corporation.
+ * All Rights Reserved.
+ *
+ * The source code contained or described herein and all documents
+ * related to the source code ("Material") are owned by Intel Corporation
+ * or licensors. Title to the Material remains with Intel
+ * Corporation or its licensors. The Material contains trade
+ * secrets and proprietary and confidential information of Intel or its
+ * licensors. The Material is protected by worldwide copyright
+ * and trade secret laws and treaty provisions. No part of the Material may
+ * be used, copied, reproduced, modified, published, uploaded, posted,
+ * transmitted, distributed, or disclosed in any way without Intel's prior
+ * express written permission.
+ *
+ * No License under any patent, copyright, trade secret or other intellectual
+ * property right is granted to or conferred upon you by disclosure or
+ * delivery of the Materials, either expressly, by implication, inducement,
+ * estoppel or otherwise. Any license under such intellectual property rights
+ * must be express and approved by Intel in writing.
+ */
+#ifndef __IA_CSS_XNR4_OUTPUT_BLEND_TYPES_H
+#define __IA_CSS_XNR4_OUTPUT_BLEND_TYPES_H
+
+#include "ia_css_xnr4_output_blend_param.h"
+
+/* XNR4 output blend configuration  */
+struct ia_css_xnr4_output_blend_config {
+	uint16_t m_bypass_mf_y; /* Output blend bypass value - luma */
+	uint16_t m_bypass_mf_c; /* Output blend bypass value - chroma */
+};
+
+#endif /* __IA_CSS_XNR4_OUTPUT_BLEND_TYPES_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_param.h
index 8b0396b..6fbf095 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_param.h
@@ -28,11 +28,13 @@
 #include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_upsample_param.h"
 #include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_edge_metric_param.h"
 #include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_radial_metric_param.h"
+#include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend_param.h"
 
 /* XNR4 Parameters */
 struct sh_css_isp_xnr4_params {
 	struct sh_css_isp_xnr4_downsample_params xnr4_downsample;
 	struct sh_css_isp_xnr4_radial_metric_params xnr4_radial_metric;
+	struct sh_css_isp_xnr4_output_blend_params xnr4_output_blend;
 };
 
 #endif /* __IA_CSS_XNR4_PARAM_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_types.h
index 2b2a1d6a..d5ea1da 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_types.h
@@ -26,10 +26,12 @@
 
 #include "ia_css_xnr4_downsample_types.h"
 #include "ia_css_xnr4_radial_metric_types.h"
+#include "ia_css_xnr4_output_blend_types.h"
 
 struct ia_css_xnr4_config {
 	struct ia_css_xnr4_downsample_config xnr4_downsample_config;
 	struct ia_css_xnr4_radial_metric_config xnr4_radial_metric_config;
+	struct ia_css_xnr4_output_blend_config xnr4_output_blend_config;
 };
 
 #endif /* __IA_CSS_XNR4_TYPES_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_upsample_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_upsample_param.h
index f843328..c49dc67 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_upsample_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_upsample_param.h
@@ -21,8 +21,8 @@
  * estoppel or otherwise. Any license under such intellectual property rights
  * must be express and approved by Intel in writing.
  */
-#ifndef _XNR4_UPSAMPLE_PARAM_H_
-#define _XNR4_UPSAMPLE_PARAM_H_
+#ifndef _IA_CSS_XNR4_UPSAMPLE_PARAM_H_
+#define _IA_CSS_XNR4_UPSAMPLE_PARAM_H_
 
 #include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_downsample_param.h"
 
@@ -67,4 +67,4 @@
 
 
 
-#endif /*_XNR4_UPSAMPLE_PARAM_H_ */
+#endif /*_IA_CSS_XNR4_UPSAMPLE_PARAM_H_ */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/modes/interface/input_buf.isp.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/modes/interface/input_buf.isp.h
index fb4aa77..a60b38e 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/modes/interface/input_buf.isp.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/modes/interface/input_buf.isp.h
@@ -38,7 +38,12 @@
 typedef struct {
   tmemvectoru  raw[INPUT_BUF_HEIGHT][INPUT_BUF_LINES][MAX_VECTORS_PER_INPUT_LINE_CONT]; /* 2 bayer lines */
   /* Two more lines for SP raw copy efficiency */
+#ifndef ENABLE_REDUCED_INPUT_BUFFER
+  /* "Workaround" solution in the case that space needed vmem exceeds the size of the vmem. */
+  /* Since in theory this buffer is not needed for IPU 2.2/2.3,  */
+  /* the workaround solution will not be needed (and the whole buffer) after the code refactoring. */
   tmemvectoru _raw[INPUT_BUF_HEIGHT][INPUT_BUF_LINES][MAX_VECTORS_PER_INPUT_LINE_CONT]; /* 2 bayer lines */
+#endif
 } input_line_type;
 #else /* ENABLE CONTINUOUS == 0 */
 typedef struct {
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/modes/interface/isp_const.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/modes/interface/isp_const.h
index 28cc177..1f2bf67 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/modes/interface/isp_const.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/modes/interface/isp_const.h
@@ -103,15 +103,16 @@
 #define SH_CSS_BINARY_ID_VIDEO_CONT_BDS_300_600_ISP2_MIN 47
 #define SH_CSS_BINARY_ID_VIDEO_CONT_DPC_BDS150_ISP2_MIN 48
 #define SH_CSS_BINARY_ID_VIDEO_CONT_BDS150_ISP2_MIN   49
-#define SH_CSS_BINARY_ID_VIDEO_CONT_BDS200_ISP2_MIN   50
-#define SH_CSS_BINARY_ID_VIDEO_CONT_NOBDS_ISP2_MIN    51
-#define SH_CSS_BINARY_ID_VIDEO_DZ_ISP2_MIN      52
-#define SH_CSS_BINARY_ID_VIDEO_DZ_ISP2          53
-#define SH_CSS_BINARY_ID_VIDEO_LP_ISP2          54
-#define SH_CSS_BINARY_ID_RESERVED1              55
-#define SH_CSS_BINARY_ID_ACCELERATION           56
-#define SH_CSS_BINARY_ID_PRE_DE_ISP2            57
-#define SH_CSS_BINARY_ID_KERNEL_TEST_LOAD_STORE 58
+#define SH_CSS_BINARY_ID_VIDEO_CONT_DPC_BDS200_ISP2_MIN   50
+#define SH_CSS_BINARY_ID_VIDEO_CONT_BDS200_ISP2_MIN   51
+#define SH_CSS_BINARY_ID_VIDEO_CONT_NOBDS_ISP2_MIN    52
+#define SH_CSS_BINARY_ID_VIDEO_DZ_ISP2_MIN      53
+#define SH_CSS_BINARY_ID_VIDEO_DZ_ISP2          54
+#define SH_CSS_BINARY_ID_VIDEO_LP_ISP2          55
+#define SH_CSS_BINARY_ID_RESERVED1              56
+#define SH_CSS_BINARY_ID_ACCELERATION           57
+#define SH_CSS_BINARY_ID_PRE_DE_ISP2            58
+#define SH_CSS_BINARY_ID_KERNEL_TEST_LOAD_STORE 59
 
 /* skycam product pipelines */
 #define SH_CSS_BINARY_ID_PRIMARY                            101
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/runtime/binary/interface/ia_css_binary.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/runtime/binary/interface/ia_css_binary.h
index 85ae48b..37fc509 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/runtime/binary/interface/ia_css_binary.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/runtime/binary/interface/ia_css_binary.h
@@ -45,7 +45,9 @@
 #define IA_CSS_BINARY_MODE_PRIMARY_HQ_STAGE5    16
 #define IA_CSS_BINARY_NUM_MODES       17
 
-#define NUM_PRIMARY_HQ_STAGES 6
+#define MAX_NUM_PRIMARY_STAGES 6
+#define NUM_PRIMARY_HQ_STAGES  6  /* number of primary stages for ISP2.6.1 high quality pipe */
+#define NUM_PRIMARY_STAGES     1  /* number of primary satges for ISP1/ISP2.2 pipe */
 
 /* Indicate where binaries can read input from */
 #define IA_CSS_BINARY_INPUT_SENSOR   0
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/runtime/timer/src/timer.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/runtime/timer/src/timer.c
new file mode 100644
index 0000000..75215fd
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/runtime/timer/src/timer.c
@@ -0,0 +1,32 @@
+/*
+ * Support for Intel Camera Imaging ISP subsystem.
+ * Copyright (c) 2015, Intel Corporation.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms and conditions of the GNU General Public License,
+ * version 2, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ */
+
+#include <type_support.h>		/* for uint32_t */
+#include "ia_css_timer.h" /*struct ia_css_clock_tick */
+#include "sh_css_legacy.h" /* IA_CSS_PIPE_ID_NUM*/
+#include "gp_timer.h" /*gp_timer_read()*/
+#include "assert_support.h"
+
+enum ia_css_err
+ia_css_timer_get_current_tick(
+	struct ia_css_clock_tick *curr_ts) {
+
+	assert(curr_ts !=  NULL);
+	if (curr_ts == NULL) {
+		return IA_CSS_ERR_INVALID_ARGUMENTS;
+	}
+	curr_ts->ticks = (clock_value_t)gp_timer_read(GP_TIMER_SEL);
+	return IA_CSS_SUCCESS;
+}
+
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css.c
index 2de7ec8..2e9b18d 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css.c
@@ -185,20 +185,20 @@ static bool fw_explicitly_loaded = false;
  */
 static enum ia_css_err
 allocate_delay_frames(enum ia_css_pipe_id mode,
-	       	      struct ia_css_video_settings *mycs_video,
-	              struct ia_css_capture_settings *mycs_capture,
-	              unsigned int dvs_frame_delay);
+		struct ia_css_video_settings *mycs_video,
+		struct ia_css_capture_settings *mycs_capture,
+		unsigned int dvs_frame_delay);
 
 static enum ia_css_err
 sh_css_pipe_start(struct ia_css_stream *stream);
 
 static enum ia_css_err
 ia_css_pipe_load_extension(struct ia_css_pipe *pipe,
-			   struct ia_css_fw_info *firmware);
+		struct ia_css_fw_info *firmware);
 
 static void
 ia_css_pipe_unload_extension(struct ia_css_pipe *pipe,
-			     struct ia_css_fw_info *firmware);
+		struct ia_css_fw_info *firmware);
 static void
 ia_css_reset_defaults(struct sh_css* css);
 
@@ -208,6 +208,8 @@ sh_css_init_host_sp_control_vars(void);
 static void
 sh_css_mmu_set_page_table_base_index(hrt_data base_index);
 
+static enum ia_css_err set_num_primary_stages(unsigned int *num, unsigned int version);
+
 static bool
 need_capture_pp(const struct ia_css_pipe *pipe);
 
@@ -315,16 +317,13 @@ create_host_acc_pipeline(struct ia_css_pipe *pipe);
 static unsigned int
 sh_css_get_sw_interrupt_value(unsigned int irq);
 
-static bool
-ia_css_binary_is_3a(const struct ia_css_binary *s3a_binary);
-
-static bool
-ia_css_binary_is_dvs(const struct ia_css_binary *dvs_binary);
-
 static struct ia_css_binary *ia_css_pipe_get_shading_correction_binary(const struct ia_css_pipe *pipe);
 
 static struct ia_css_binary *
-ia_css_pipe_get_binary(const struct ia_css_pipe *pipe);
+ia_css_pipe_get_s3a_binary(const struct ia_css_pipe *pipe);
+
+static struct ia_css_binary *
+ia_css_pipe_get_sdis_binary(const struct ia_css_pipe *pipe);
 
 void
 ia_css_get_acc_configs(
@@ -339,6 +338,8 @@ static enum ia_css_err set_config_on_frame_enqueue(struct ia_css_frame_info *inf
 #ifdef USE_INPUT_SYSTEM_VERSION_2401
 static unsigned int get_crop_lines_for_bayer_order(const struct ia_css_stream_config *config);
 static unsigned int get_crop_columns_for_bayer_order(const struct ia_css_stream_config *config);
+static void get_pipe_extra_pixel(struct ia_css_pipe *pipe,
+		unsigned int *extra_row, unsigned int *extra_column);
 #endif
 
 #if defined(HAS_SEC_SP)
@@ -2736,8 +2737,6 @@ alloc_continuous_frames(
 	bool continuous;
 	unsigned int i, idx;
 	unsigned int num_frames;
-	unsigned int left_cropping = 0, top_cropping;
-	uint8_t raw_binning = 0;
 	struct ia_css_pipe *capture_pipe = NULL;
 
 	IA_CSS_ENTER_PRIVATE("pipe = %p, init_time = %d", pipe, init_time);
@@ -2761,15 +2760,9 @@ alloc_continuous_frames(
 	}
 
 	if (pipe_id == IA_CSS_PIPE_ID_PREVIEW) {
-		left_cropping = pipe->pipe_settings.preview.preview_binary.info->sp.pipeline.left_cropping;
-		top_cropping = pipe->pipe_settings.preview.preview_binary.info->sp.pipeline.top_cropping;
 		ref_info = pipe->pipe_settings.preview.preview_binary.in_frame_info;
-		raw_binning = pipe->pipe_settings.preview.preview_binary.info->sp.enable.raw_binning;
 	} else if (pipe_id == IA_CSS_PIPE_ID_VIDEO) {
-		left_cropping = pipe->pipe_settings.video.video_binary.info->sp.pipeline.left_cropping;
-		top_cropping = pipe->pipe_settings.video.video_binary.info->sp.pipeline.top_cropping;
 		ref_info = pipe->pipe_settings.video.video_binary.in_frame_info;
-		raw_binning = pipe->pipe_settings.video.video_binary.info->sp.enable.raw_binning;
 	}
 	else {
 		/* should not happen */
@@ -3344,6 +3337,53 @@ get_crop_columns_for_bayer_order (
 	return 0;
 }
 
+/* This function is to get the sum of all extra pixels in addition to the effective
+ * input, it includes dvs envelop and filter run-in */
+static void get_pipe_extra_pixel(struct ia_css_pipe *pipe,
+		unsigned int *extra_row, unsigned int *extra_column)
+{
+	enum ia_css_pipe_id pipe_id = pipe->mode;
+	unsigned int left_cropping = 0, top_cropping = 0;
+	unsigned int i;
+	struct ia_css_resolution dvs_env = pipe->config.dvs_envelope;
+
+	/* The dvs envelope info may not be correctly sent down via pipe config
+	 * The check is made and the correct value is populated in the binary info
+	 * Use this value when computing crop, else excess lines may get trimmed
+	 */
+	switch (pipe_id) {
+	case IA_CSS_PIPE_ID_PREVIEW:
+		if (pipe->pipe_settings.preview.preview_binary.info) {
+			left_cropping = pipe->pipe_settings.preview.preview_binary.info->sp.pipeline.left_cropping;
+			top_cropping = pipe->pipe_settings.preview.preview_binary.info->sp.pipeline.top_cropping;
+		}
+		dvs_env = pipe->pipe_settings.preview.preview_binary.dvs_envelope;
+		break;
+	case IA_CSS_PIPE_ID_VIDEO:
+		if (pipe->pipe_settings.video.video_binary.info) {
+			left_cropping = pipe->pipe_settings.video.video_binary.info->sp.pipeline.left_cropping;
+			top_cropping = pipe->pipe_settings.video.video_binary.info->sp.pipeline.top_cropping;
+		}
+		dvs_env = pipe->pipe_settings.video.video_binary.dvs_envelope;
+		break;
+	case IA_CSS_PIPE_ID_CAPTURE:
+		for (i = 0; i < pipe->pipe_settings.capture.num_primary_stage; i++) {
+			if (pipe->pipe_settings.capture.primary_binary[i].info) {
+				left_cropping += pipe->pipe_settings.capture.primary_binary[i].info->sp.pipeline.left_cropping;
+				top_cropping += pipe->pipe_settings.capture.primary_binary[i].info->sp.pipeline.top_cropping;
+			}
+			dvs_env.width += pipe->pipe_settings.capture.primary_binary[i].dvs_envelope.width;
+			dvs_env.height += pipe->pipe_settings.capture.primary_binary[i].dvs_envelope.height;
+		}
+		break;
+	default:
+		break;
+	}
+
+	*extra_row = top_cropping + dvs_env.height;
+	*extra_column = left_cropping + dvs_env.width;
+}
+
 void
 ia_css_get_crop_offsets (
     struct ia_css_pipe *pipe,
@@ -3353,10 +3393,7 @@ ia_css_get_crop_offsets (
 	unsigned int column = 0;
 	struct ia_css_resolution *input_res;
 	struct ia_css_resolution *effective_res;
-	struct ia_css_resolution *dvs_env;
-	enum ia_css_pipe_id pipe_id;
-	unsigned int left_cropping = 0, top_cropping = 0;
-	const struct ia_css_binary_xinfo *info;
+	unsigned int extra_row = 0, extra_col = 0;
 	unsigned int min_reqd_height, min_reqd_width;
 
 	assert(pipe != NULL);
@@ -3365,40 +3402,13 @@ ia_css_get_crop_offsets (
 
 	input_res = &pipe->stream->config.input_config.input_res;
 	effective_res = &pipe->stream->config.input_config.effective_res;
-	pipe_id = pipe->mode;
-
-	/* The dvs envelope info may not be correctly sent down via pipe config
-	 * The check is made and the correct value is populated in the binary info
-	 * Use this value when computing crop, else excess lines may get trimmed
-	 */
 
-	switch (pipe_id) {
-	case IA_CSS_PIPE_ID_PREVIEW:
-		info = pipe->pipe_settings.preview.preview_binary.info;
-		dvs_env = &pipe->pipe_settings.preview.preview_binary.dvs_envelope;
-		break;
-	case IA_CSS_PIPE_ID_VIDEO:
-		info = pipe->pipe_settings.video.video_binary.info;
-		dvs_env = &pipe->pipe_settings.video.video_binary.dvs_envelope;
-		break;
-	case IA_CSS_PIPE_ID_CAPTURE:
-		info = pipe->pipe_settings.capture.primary_binary.info;
-		dvs_env = &pipe->pipe_settings.capture.primary_binary.dvs_envelope;
-		break;
-	default:
-		dvs_env = &pipe->config.dvs_envelope;
-		info = NULL;
-	}
-
-	if (info != NULL) {
-		left_cropping = info->sp.pipeline.left_cropping;
-		top_cropping = info->sp.pipeline.top_cropping;
-	}
+	get_pipe_extra_pixel(pipe, &extra_row, &extra_col);
 
 	in_frame->raw_bayer_order = pipe->stream->config.input_config.bayer_order;
 
-	min_reqd_height = effective_res->height + top_cropping + dvs_env->height;
-	min_reqd_width = effective_res->width + left_cropping + dvs_env->width;
+	min_reqd_height = effective_res->height + extra_row;
+	min_reqd_width = effective_res->width + extra_col;
 
 	if (input_res->height > min_reqd_height) {
 		row = (input_res->height - min_reqd_height) / 2;
@@ -5082,23 +5092,21 @@ sh_css_pipe_get_grid_info(struct ia_css_pipe *pipe,
 {
 	enum ia_css_err err = IA_CSS_SUCCESS;
 	struct ia_css_binary *binary = NULL;
-	bool is_3a_binary = false;
-	bool is_dvs_binary = false;
 
 	assert(pipe != NULL);
 	assert(info != NULL);
 	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE, "sh_css_pipe_get_grid_info() enter:\n");
 
-	binary = ia_css_pipe_get_binary(pipe);
-	is_3a_binary = ia_css_binary_is_3a(binary);
-	is_dvs_binary = ia_css_binary_is_dvs(binary);
+	binary = ia_css_pipe_get_s3a_binary(pipe);
 
-	if (is_3a_binary == true)
+	if (binary)
 		ia_css_binary_3a_grid_info(binary, info, pipe);
 	else
 		memset(&info->s3a_grid, 0, sizeof(info->s3a_grid));
 
-	if (is_dvs_binary == true)
+	binary = ia_css_pipe_get_sdis_binary(pipe);
+
+	if (binary)
 		ia_css_binary_dvs_grid_info(binary, info, pipe);
 	else
 		memset(&info->dvs_grid, 0, sizeof(info->dvs_grid));
@@ -5639,6 +5647,29 @@ static bool need_capture_pp(
 	return false;
 }
 
+static enum ia_css_err set_num_primary_stages(unsigned int *num, unsigned int version)
+{
+	enum ia_css_err err = IA_CSS_SUCCESS;
+
+	if (num == NULL)
+		return IA_CSS_ERR_INVALID_ARGUMENTS;
+
+	switch (version) {
+	case IA_CSS_PIPE_VERSION_2_6_1:
+		*num = NUM_PRIMARY_HQ_STAGES;
+		break;
+	case IA_CSS_PIPE_VERSION_2_2:
+	case IA_CSS_PIPE_VERSION_1:
+		*num = NUM_PRIMARY_STAGES;
+		break;
+	default:
+		err = IA_CSS_ERR_INVALID_ARGUMENTS;
+		break;
+	}
+
+	return err;
+}
+
 static enum ia_css_err load_primary_binaries(
 	struct ia_css_pipe *pipe)
 {
@@ -5679,18 +5710,28 @@ static enum ia_css_err load_primary_binaries(
 	pipe_out_info = &pipe->output_info[0];
 	pipe_vf_out_info = &pipe->vf_output_info[0];
 
-	if (mycs->primary_binary.info)
+	if (mycs->primary_binary[0].info)
 		return IA_CSS_SUCCESS;
 
+	err = set_num_primary_stages(&mycs->num_primary_stage, pipe->config.isp_pipe_version);
+	if (err != IA_CSS_SUCCESS) {
+		IA_CSS_LEAVE_ERR_PRIVATE(err);
+		return err;
+	}
+
 	if (pipe->enable_viewfinder[IA_CSS_PIPE_OUTPUT_STAGE_0]) {
 		err = ia_css_util_check_vf_out_info(pipe_out_info, pipe_vf_out_info);
-		if (err != IA_CSS_SUCCESS)
+		if (err != IA_CSS_SUCCESS) {
+			IA_CSS_LEAVE_ERR_PRIVATE(err);
 			return err;
+		}
 	}
 	else{
 		err = ia_css_frame_check_info(pipe_out_info);
-		if (err != IA_CSS_SUCCESS)
+		if (err != IA_CSS_SUCCESS) {
+			IA_CSS_LEAVE_ERR_PRIVATE(err);
 			return err;
+		}
 	}
 	need_pp = need_capture_pp(pipe);
 
@@ -5746,19 +5787,23 @@ static enum ia_css_err load_primary_binaries(
 			pipe_out_info,
 			NULL,
 			&cas_scaler_descr);
-		if (err != IA_CSS_SUCCESS)
+		if (err != IA_CSS_SUCCESS) {
+			IA_CSS_LEAVE_ERR_PRIVATE(err);
 			return err;
+		}
 		mycs->num_yuv_scaler = cas_scaler_descr.num_stage;
 		mycs->yuv_scaler_binary = sh_css_calloc(cas_scaler_descr.num_stage,
 			sizeof(struct ia_css_binary));
 		if (mycs->yuv_scaler_binary == NULL) {
 			err = IA_CSS_ERR_CANNOT_ALLOCATE_MEMORY;
+			IA_CSS_LEAVE_ERR_PRIVATE(err);
 			return err;
 		}
 		mycs->is_output_stage = sh_css_calloc(cas_scaler_descr.num_stage,
 			sizeof(bool));
 		if (mycs->is_output_stage == NULL) {
 			err = IA_CSS_ERR_CANNOT_ALLOCATE_MEMORY;
+			IA_CSS_LEAVE_ERR_PRIVATE(err);
 			return err;
 		}
 		for (i = 0; i < cas_scaler_descr.num_stage; i++) {
@@ -5775,8 +5820,10 @@ static enum ia_css_err load_primary_binaries(
 #endif
 			err = ia_css_binary_find(&yuv_scaler_descr,
 						&mycs->yuv_scaler_binary[i]);
-			if (err != IA_CSS_SUCCESS)
+			if (err != IA_CSS_SUCCESS) {
+				IA_CSS_LEAVE_ERR_PRIVATE(err);
 				return err;
+			}
 		}
 		ia_css_pipe_destroy_cas_scaler_desc(&cas_scaler_descr);
 
@@ -5797,44 +5844,33 @@ static enum ia_css_err load_primary_binaries(
 #endif
 		err = ia_css_binary_find(&capture_pp_descr,
 					&mycs->capture_pp_binary);
-		if (err != IA_CSS_SUCCESS)
+		if (err != IA_CSS_SUCCESS) {
+			IA_CSS_LEAVE_ERR_PRIVATE(err);
 			return err;
+		}
 	} else {
 		prim_out_info = *pipe_out_info;
 	}
 
 	/* Primary */
-	if (pipe->config.isp_pipe_version == IA_CSS_PIPE_VERSION_2_6_1) {
-		struct ia_css_binary_descr prim_hq_descr[NUM_PRIMARY_HQ_STAGES];
-
-		for (i = 0; i < NUM_PRIMARY_HQ_STAGES; i++) {
-			if (pipe->enable_viewfinder[IA_CSS_PIPE_OUTPUT_STAGE_0]){
-				ia_css_pipe_get_primary_binarydesc(pipe, &prim_hq_descr[i], &prim_in_info, &prim_out_info, &vf_info, i);
-			}
-			else{
-				ia_css_pipe_get_primary_binarydesc(pipe, &prim_hq_descr[i], &prim_in_info, &prim_out_info, NULL, i);
-			}
-
-			err = ia_css_binary_find(&prim_hq_descr[i], &mycs->primary_hq_binary[i]);
-			if (err != IA_CSS_SUCCESS)
-				return err;
-		}
-	} else {
-		struct ia_css_binary_descr prim_descr;
+	{
+		struct ia_css_binary_descr prim_descr[MAX_NUM_PRIMARY_STAGES];
 
-		if (pipe->enable_viewfinder[IA_CSS_PIPE_OUTPUT_STAGE_0]){
-			ia_css_pipe_get_primary_binarydesc(pipe, &prim_descr, &prim_in_info, &prim_out_info, &vf_info, 0);
-		}
-		else{
-			ia_css_pipe_get_primary_binarydesc(pipe, &prim_descr, &prim_in_info, &prim_out_info, NULL, 0);
-		}
+		for (i = 0; i < mycs->num_primary_stage; i++) {
+			struct ia_css_frame_info *local_vf_info = NULL;
+			if (pipe->enable_viewfinder[IA_CSS_PIPE_OUTPUT_STAGE_0] && (i == mycs->num_primary_stage - 1))
+				local_vf_info = &vf_info;
+			ia_css_pipe_get_primary_binarydesc(pipe, &prim_descr[i], &prim_in_info, &prim_out_info, local_vf_info, i);
 #if defined(HAS_RES_MGR)
 			bds_out_info.res = pipe->config.bayer_ds_out_res;
-			prim_descr.bds_out_info = &bds_out_info;
+			prim_descr[i].bds_out_info = &bds_out_info;
 #endif
-		err = ia_css_binary_find(&prim_descr, &mycs->primary_binary);
-		if (err != IA_CSS_SUCCESS)
-			return err;
+			err = ia_css_binary_find(&prim_descr[i], &mycs->primary_binary[i]);
+			if (err != IA_CSS_SUCCESS) {
+				IA_CSS_LEAVE_ERR_PRIVATE(err);
+				return err;
+			}
+		}
 	}
 
 	/* Viewfinder post-processing */
@@ -5843,7 +5879,7 @@ static enum ia_css_err load_primary_binaries(
 		    &mycs->capture_pp_binary.vf_frame_info;
 	} else {
 		vf_pp_in_info =
-		    &mycs->primary_binary.vf_frame_info;
+		    &mycs->primary_binary[mycs->num_primary_stage - 1].vf_frame_info;
 	}
 
 /*
@@ -5862,14 +5898,16 @@ static enum ia_css_err load_primary_binaries(
 		struct ia_css_binary_descr vf_pp_descr;
 
 		ia_css_pipe_get_vfpp_binarydesc(pipe,
-			&vf_pp_descr, vf_pp_in_info, pipe_vf_out_info);
+				&vf_pp_descr, vf_pp_in_info, pipe_vf_out_info);
 #if defined(HAS_RES_MGR)
-			bds_out_info.res = pipe->config.bayer_ds_out_res;
-			vf_pp_descr.bds_out_info = &bds_out_info;
+		bds_out_info.res = pipe->config.bayer_ds_out_res;
+		vf_pp_descr.bds_out_info = &bds_out_info;
 #endif
 		err = ia_css_binary_find(&vf_pp_descr, &mycs->vf_pp_binary);
-		if (err != IA_CSS_SUCCESS)
+		if (err != IA_CSS_SUCCESS) {
+			IA_CSS_LEAVE_ERR_PRIVATE(err);
 			return err;
+		}
 	}
 #endif
 	err = allocate_delay_frames(pipe->mode, NULL, mycs, pipe->dvs_frame_delay);
@@ -5889,10 +5927,12 @@ static enum ia_css_err load_primary_binaries(
 	/* ISP Copy */
 	if (need_isp_copy_binary) {
 		err = load_copy_binary(pipe,
-				       &mycs->copy_binary,
-				       &mycs->primary_binary);
-		if (err != IA_CSS_SUCCESS)
+				&mycs->copy_binary,
+				&mycs->primary_binary[0]);
+		if (err != IA_CSS_SUCCESS) {
+			IA_CSS_LEAVE_ERR_PRIVATE(err);
 			return err;
+		}
 	}
 
 	return IA_CSS_SUCCESS;
@@ -5900,29 +5940,29 @@ static enum ia_css_err load_primary_binaries(
 
 static enum ia_css_err
 allocate_delay_frames(enum ia_css_pipe_id mode,
-	       	      struct ia_css_video_settings *mycs_video,
-	              struct ia_css_capture_settings *mycs_capture,
-	              unsigned int dvs_frame_delay)
+		struct ia_css_video_settings *mycs_video,
+		struct ia_css_capture_settings *mycs_capture,
+		unsigned int dvs_frame_delay)
 {
 	unsigned int num_delay_frames = 0, i = 0;
 	struct ia_css_frame_info ref_info;
 	enum ia_css_err err = IA_CSS_SUCCESS;
 
 	if (mode == IA_CSS_PIPE_ID_CAPTURE) {
-		#if defined (IS_ISP_2500_SYSTEM)
-			ref_info               = mycs_capture->primary_binary.internal_frame_info;
-			ref_info.format        = IA_CSS_FRAME_FORMAT_YUV420_16;
-			ref_info.raw_bit_depth = SH_CSS_REF_BIT_DEPTH;
-		#else
-			return err;
-		#endif
+#if defined (IS_ISP_2500_SYSTEM)
+		ref_info               = mycs_capture->primary_binary[0].internal_frame_info;
+		ref_info.format        = IA_CSS_FRAME_FORMAT_YUV420_16;
+		ref_info.raw_bit_depth = SH_CSS_REF_BIT_DEPTH;
+#else
+		return err;
+#endif
 	} else if (mode == IA_CSS_PIPE_ID_VIDEO) {
 		ref_info               = mycs_video->video_binary.internal_frame_info;
-		#if defined (IS_ISP_2500_SYSTEM)
-			ref_info.format        = IA_CSS_FRAME_FORMAT_YUV420_16;
-		#else
-			ref_info.format        = IA_CSS_FRAME_FORMAT_YUV420;
-		#endif
+#if defined (IS_ISP_2500_SYSTEM)
+		ref_info.format        = IA_CSS_FRAME_FORMAT_YUV420_16;
+#else
+		ref_info.format        = IA_CSS_FRAME_FORMAT_YUV420;
+#endif
 		ref_info.raw_bit_depth = SH_CSS_REF_BIT_DEPTH;
 	} else {
 		return IA_CSS_ERR_INVALID_ARGUMENTS;
@@ -5942,20 +5982,20 @@ allocate_delay_frames(enum ia_css_pipe_id mode,
 	for (i = 0; i < num_delay_frames; i++) {
 		if (mode == IA_CSS_PIPE_ID_CAPTURE)
 			err = ia_css_frame_allocate_from_info(&mycs_capture->delay_frames[i],
-						      		&ref_info);
+					&ref_info);
 		else if (mode == IA_CSS_PIPE_ID_VIDEO)
 			err = ia_css_frame_allocate_from_info(&mycs_video->delay_frames[i],
-						      		&ref_info);
+					&ref_info);
 
 		if (err != IA_CSS_SUCCESS)
 			return err;
 
-	#ifdef HRT_CSIM
+#ifdef HRT_CSIM
 		if (mode == IA_CSS_PIPE_ID_CAPTURE)
-				ia_css_frame_zero(mycs_capture->delay_frames[i]);
+			ia_css_frame_zero(mycs_capture->delay_frames[i]);
 		else if (mode == IA_CSS_PIPE_ID_VIDEO)
 			ia_css_frame_zero(mycs_video->delay_frames[i]);
-	#endif
+#endif
 	}
 
 	return IA_CSS_SUCCESS;
@@ -6254,8 +6294,10 @@ static enum ia_css_err load_capture_binaries(
 	assert(pipe != NULL);
 	assert(pipe->mode == IA_CSS_PIPE_ID_CAPTURE || pipe->mode == IA_CSS_PIPE_ID_COPY);
 
-	if (pipe->pipe_settings.capture.primary_binary.info)
+	if (pipe->pipe_settings.capture.primary_binary[0].info) {
+		IA_CSS_LEAVE_ERR_PRIVATE(IA_CSS_SUCCESS);
 		return IA_CSS_SUCCESS;
+	}
 
 	/* in primary, advanced,low light or bayer,
 						the input format must be raw */
@@ -6264,8 +6306,10 @@ static enum ia_css_err load_capture_binaries(
 		pipe->config.default_capture_config.mode == IA_CSS_CAPTURE_MODE_BAYER ||
 		pipe->config.default_capture_config.mode == IA_CSS_CAPTURE_MODE_LOW_LIGHT;
 	err = ia_css_util_check_input(&pipe->stream->config, must_be_raw, false);
-	if (err != IA_CSS_SUCCESS)
+	if (err != IA_CSS_SUCCESS) {
+		IA_CSS_LEAVE_ERR_PRIVATE(err);
 		return err;
+	}
 	if (copy_on_sp(pipe) &&
 	    pipe->stream->config.input_config.format == IA_CSS_STREAM_FORMAT_BINARY_8) {
 		ia_css_frame_info_init(
@@ -6274,6 +6318,7 @@ static enum ia_css_err load_capture_binaries(
 			1,
 			IA_CSS_FRAME_FORMAT_BINARY_8,
 			0);
+		IA_CSS_LEAVE_ERR_PRIVATE(IA_CSS_SUCCESS);
 		return IA_CSS_SUCCESS;
 	}
 
@@ -6298,9 +6343,12 @@ static enum ia_css_err load_capture_binaries(
 		err = load_low_light_binaries(pipe);
 		break;
 	}
-	if (err != IA_CSS_SUCCESS)
+	if (err != IA_CSS_SUCCESS) {
+		IA_CSS_LEAVE_ERR_PRIVATE(err);
 		return err;
+	}
 
+	IA_CSS_LEAVE_ERR_PRIVATE(err);
 	return err;
 }
 
@@ -6315,7 +6363,8 @@ unload_capture_binaries(struct ia_css_pipe *pipe)
 		return IA_CSS_ERR_INVALID_ARGUMENTS;
 	}
 	ia_css_binary_unload(&pipe->pipe_settings.capture.copy_binary);
-	ia_css_binary_unload(&pipe->pipe_settings.capture.primary_binary);
+	for (i = 0; i < MAX_NUM_PRIMARY_STAGES; i++)
+		ia_css_binary_unload(&pipe->pipe_settings.capture.primary_binary[i]);
 	ia_css_binary_unload(&pipe->pipe_settings.capture.pre_isp_binary);
 	ia_css_binary_unload(&pipe->pipe_settings.capture.anr_gdc_binary);
 	ia_css_binary_unload(&pipe->pipe_settings.capture.post_isp_binary);
@@ -7346,8 +7395,7 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
 	struct ia_css_pipeline_stage *current_stage = NULL;
 	struct ia_css_pipeline_stage *yuv_scaler_stage = NULL;
 	struct ia_css_binary *copy_binary,
-			     *primary_binary,
-			     *primary_hq_binary[NUM_PRIMARY_HQ_STAGES],
+			     *primary_binary[MAX_NUM_PRIMARY_STAGES],
 			     *vf_pp_binary,
 			     *pre_isp_binary,
 			     *anr_gdc_binary,
@@ -7369,7 +7417,7 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
 	bool online = false;
 	bool continuous = false;
 #endif
-	unsigned int i, num_yuv_scaler;
+	unsigned int i, num_yuv_scaler, num_primary_stage;
 	bool need_yuv_pp = false;
 	bool *is_output_stage = NULL;
 
@@ -7404,8 +7452,10 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
 #endif
 	if (need_in_frameinfo_memory) {
 		err = init_in_frameinfo_memory_defaults(pipe, &me->in_frame, IA_CSS_FRAME_FORMAT_RAW);
-		if (err != IA_CSS_SUCCESS)
+		if (err != IA_CSS_SUCCESS) {
+			IA_CSS_LEAVE_ERR_PRIVATE(err);
 			return err;
+		}
 
 		in_frame = &me->in_frame;
 	} else {
@@ -7413,8 +7463,10 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
 	}
 
 	err = init_out_frameinfo_defaults(pipe, &me->out_frame[0], 0);
-	if (err != IA_CSS_SUCCESS)
+	if (err != IA_CSS_SUCCESS) {
+		IA_CSS_LEAVE_ERR_PRIVATE(err);
 		return err;
+	}
 	out_frame = &me->out_frame[0];
 
 	/* Construct vf_frame info (only in case we have VF) */
@@ -7431,9 +7483,13 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
 	}
 
 	copy_binary       = &pipe->pipe_settings.capture.copy_binary;
-	primary_binary    = &pipe->pipe_settings.capture.primary_binary;
-	for (i = 0; i < NUM_PRIMARY_HQ_STAGES; i++) {
-		primary_hq_binary[i] = &pipe->pipe_settings.capture.primary_hq_binary[i];
+	num_primary_stage = pipe->pipe_settings.capture.num_primary_stage;
+	if ((num_primary_stage == 0) && (mode == IA_CSS_CAPTURE_MODE_PRIMARY)) {
+		IA_CSS_LEAVE_ERR_PRIVATE(IA_CSS_ERR_INTERNAL_ERROR);
+		return IA_CSS_ERR_INTERNAL_ERROR;
+	}
+	for (i = 0; i < num_primary_stage; i++) {
+		primary_binary[i] = &pipe->pipe_settings.capture.primary_binary[i];
 	}
 	vf_pp_binary      = &pipe->pipe_settings.capture.vf_pp_binary;
 	pre_isp_binary    = &pipe->pipe_settings.capture.pre_isp_binary;
@@ -7474,55 +7530,29 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
 		err = ia_css_pipeline_create_and_add_stage(me,
 			&stage_desc,
 			&current_stage);
-		if (err != IA_CSS_SUCCESS)
+		if (err != IA_CSS_SUCCESS) {
+			IA_CSS_LEAVE_ERR_PRIVATE(err);
 			return err;
+		}
 	} else if (pipe->stream->config.continuous) {
 		in_frame = pipe->stream->last_pipe->continuous_frames[0];
 	}
 
 	if (mode == IA_CSS_CAPTURE_MODE_PRIMARY) {
 		unsigned int frm;
-		if (pipe->config.isp_pipe_version == IA_CSS_PIPE_VERSION_2_6_1) {
-			ia_css_pipe_util_set_output_frames(out_frames, 0, NULL);
-			ia_css_pipe_get_generic_stage_desc(&stage_desc, primary_hq_binary[0],
-					out_frames, in_frame, NULL);
-			err = ia_css_pipeline_create_and_add_stage(me,
-				&stage_desc,
-				NULL);
-			if (err != IA_CSS_SUCCESS)
-				return err;
-
-			for (i = 1; i < NUM_PRIMARY_HQ_STAGES - 1; i++) {
-				ia_css_pipe_util_set_output_frames(out_frames, 0, NULL);
-				ia_css_pipe_get_generic_stage_desc(&stage_desc, primary_hq_binary[i],
-					out_frames, NULL, NULL);
-				err = ia_css_pipeline_create_and_add_stage(me,
-					&stage_desc,
-					NULL);
-				if (err != IA_CSS_SUCCESS)
-					return err;
-			}
-
-			if(need_pp) {
-				ia_css_pipe_util_set_output_frames(out_frames, 0, NULL);
-			} else {
-				ia_css_pipe_util_set_output_frames(out_frames, 0, out_frame);
-			}
-			ia_css_pipe_get_generic_stage_desc(&stage_desc, primary_hq_binary[NUM_PRIMARY_HQ_STAGES - 1],
-					out_frames, NULL, NULL);
-
-			err = ia_css_pipeline_create_and_add_stage(me,
-				&stage_desc,
-				&current_stage);
-			if (err != IA_CSS_SUCCESS)
-				return err;
-		} else {
-			if(need_pp) {
-				ia_css_pipe_util_set_output_frames(out_frames, 0, NULL);
-			} else {
-				ia_css_pipe_util_set_output_frames(out_frames, 0, out_frame);
-			}
+		struct ia_css_frame *local_in_frame = NULL;
+		struct ia_css_frame *local_out_frame = NULL;
 
+		for (i = 0; i < num_primary_stage; i++) {
+			if (i == 0)
+				local_in_frame = in_frame;
+			else
+				local_in_frame = NULL;
+			if (!need_pp && (i == num_primary_stage - 1))
+				local_out_frame = out_frame;
+			else
+				local_out_frame = NULL;
+			ia_css_pipe_util_set_output_frames(out_frames, 0, local_out_frame);
 /*
  * WARNING: The #if def flag has been added below as a
  * temporary solution to solve the problem of enabling the
@@ -7534,23 +7564,20 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
  * solution.
  * */
 #if defined (IS_ISP_2500_SYSTEM)
-			ia_css_pipe_get_generic_stage_desc(&stage_desc, primary_binary,
-					out_frames, in_frame, vf_frame);
+			ia_css_pipe_get_generic_stage_desc(&stage_desc, primary_binary[i],
+					out_frames, local_in_frame, vf_frame);
 #else
-			ia_css_pipe_get_generic_stage_desc(&stage_desc, primary_binary,
-					out_frames, in_frame, NULL);
+			ia_css_pipe_get_generic_stage_desc(&stage_desc, primary_binary[i],
+				out_frames, local_in_frame, NULL);
 #endif
 			err = ia_css_pipeline_create_and_add_stage(me,
 				&stage_desc,
 				&current_stage);
-			if (err != IA_CSS_SUCCESS)
+			if (err != IA_CSS_SUCCESS) {
+				IA_CSS_LEAVE_ERR_PRIVATE(err);
 				return err;
-			/* If we use copy iso primary,
-			   the input must be yuv iso raw */
-			current_stage->args.copy_vf =
-				primary_binary->info->sp.pipeline.mode ==
-				IA_CSS_BINARY_MODE_COPY;
-			current_stage->args.copy_output = current_stage->args.copy_vf;
+			}
+		}
 #if defined(IS_ISP_2500_SYSTEM)
 /*
  * In the Skycam project, in the capture flow, delay frames
@@ -7565,8 +7592,13 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
 				pipe->pipe_settings.capture.delay_frames[frm];
 		}
 #endif
-		(void) frm;
-		}
+		(void)frm;
+		/* If we use copy iso primary,
+		   the input must be yuv iso raw */
+		current_stage->args.copy_vf =
+			primary_binary[0]->info->sp.pipeline.mode ==
+			IA_CSS_BINARY_MODE_COPY;
+		current_stage->args.copy_output = current_stage->args.copy_vf;
 	} else if (mode == IA_CSS_CAPTURE_MODE_ADVANCED ||
 	           mode == IA_CSS_CAPTURE_MODE_LOW_LIGHT) {
 		ia_css_pipe_util_set_output_frames(out_frames, 0, NULL);
@@ -7574,15 +7606,19 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
 			out_frames, in_frame, NULL);
 		err = ia_css_pipeline_create_and_add_stage(me,
 				&stage_desc, NULL);
-		if (err != IA_CSS_SUCCESS)
+		if (err != IA_CSS_SUCCESS) {
+			IA_CSS_LEAVE_ERR_PRIVATE(err);
 			return err;
+		}
 		ia_css_pipe_util_set_output_frames(out_frames, 0, NULL);
 		ia_css_pipe_get_generic_stage_desc(&stage_desc, anr_gdc_binary,
 			out_frames, NULL, NULL);
 		err = ia_css_pipeline_create_and_add_stage(me,
 				&stage_desc, NULL);
-		if (err != IA_CSS_SUCCESS)
+		if (err != IA_CSS_SUCCESS) {
+			IA_CSS_LEAVE_ERR_PRIVATE(err);
 			return err;
+		}
 
 		if(need_pp) {
 			ia_css_pipe_util_set_output_frames(out_frames, 0, NULL);
@@ -7596,8 +7632,10 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
 
 		err = ia_css_pipeline_create_and_add_stage(me,
 				&stage_desc, &current_stage);
-		if (err != IA_CSS_SUCCESS)
+		if (err != IA_CSS_SUCCESS) {
+			IA_CSS_LEAVE_ERR_PRIVATE(err);
 			return err;
+		}
 	} else if (mode == IA_CSS_CAPTURE_MODE_BAYER) {
 		ia_css_pipe_util_set_output_frames(out_frames, 0, out_frame);
 		ia_css_pipe_get_generic_stage_desc(&stage_desc, pre_isp_binary,
@@ -7605,8 +7643,10 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
 		err = ia_css_pipeline_create_and_add_stage(me,
 			&stage_desc,
 			NULL);
-		if (err != IA_CSS_SUCCESS)
+		if (err != IA_CSS_SUCCESS) {
+			IA_CSS_LEAVE_ERR_PRIVATE(err);
 			return err;
+		}
 	}
 
 	if (need_pp) {
@@ -7614,8 +7654,10 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
 		err = add_capture_pp_stage(pipe, me, in_frame, need_yuv_pp ? NULL : out_frame,
 					   capture_pp_binary,
 					   &current_stage);
-		if (err != IA_CSS_SUCCESS)
+		if (err != IA_CSS_SUCCESS) {
+			IA_CSS_LEAVE_ERR_PRIVATE(err);
 			return err;
+		}
 	}
 
 	if (need_yuv_pp && current_stage) {
@@ -7632,8 +7674,10 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
 						   NULL,
 						   &yuv_scaler_binary[i],
 						   &yuv_scaler_stage);
-			if (err != IA_CSS_SUCCESS)
+			if (err != IA_CSS_SUCCESS) {
+				IA_CSS_LEAVE_ERR_PRIVATE(err);
 				return err;
+			}
 			/* we use output port 1 as internal output port */
 			tmp_in_frame = yuv_scaler_stage->args.out_frame[1];
 		}
@@ -7653,8 +7697,10 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
 		in_frame = current_stage->args.out_vf_frame;
 		err = add_vf_pp_stage(pipe, in_frame, vf_frame, vf_pp_binary,
 				      &current_stage);
-		if (err != IA_CSS_SUCCESS)
+		if (err != IA_CSS_SUCCESS) {
+			IA_CSS_LEAVE_ERR_PRIVATE(err);
 			return err;
+		}
 	}
 #endif
 	ia_css_pipeline_finalize_stages(&pipe->pipeline, pipe->stream->config.continuous);
@@ -9404,7 +9450,6 @@ ia_css_stream_get_3a_binary(const struct ia_css_stream *stream)
 {
 	struct ia_css_pipe *pipe;
 	struct ia_css_binary *s3a_binary = NULL;
-	bool is_3a_bianry = false;
 
 	assert(stream != NULL);
 
@@ -9417,13 +9462,9 @@ ia_css_stream_get_3a_binary(const struct ia_css_stream *stream)
 			pipe = stream->pipes[1];
 	}
 
-	s3a_binary = ia_css_pipe_get_binary(pipe);
-	is_3a_bianry = ia_css_binary_is_3a(s3a_binary);
+	s3a_binary = ia_css_pipe_get_s3a_binary(pipe);
 
-	if(is_3a_bianry == true)
-		return s3a_binary;
-
-	return NULL;
+	return s3a_binary;
 }
 
 
@@ -9462,8 +9503,16 @@ ia_css_pipe_get_shading_correction_binary(const struct ia_css_pipe *pipe)
 		binary = (struct ia_css_binary *)&pipe->pipe_settings.video.video_binary;
 		break;
 	case IA_CSS_PIPE_MODE_CAPTURE:
-		if (pipe->config.default_capture_config.mode == IA_CSS_CAPTURE_MODE_PRIMARY)
-			binary = (struct ia_css_binary *)&pipe->pipe_settings.capture.primary_binary;
+		if (pipe->config.default_capture_config.mode == IA_CSS_CAPTURE_MODE_PRIMARY) {
+			unsigned int i;
+
+			for (i = 0; i < pipe->pipe_settings.capture.num_primary_stage; i++) {
+				if (pipe->pipe_settings.capture.primary_binary[i].info->sp.enable.sc) {
+					binary = (struct ia_css_binary *)&pipe->pipe_settings.capture.primary_binary[i];
+					break;
+				}
+			}
+		}
 		else if (pipe->config.default_capture_config.mode == IA_CSS_CAPTURE_MODE_BAYER)
 			binary = (struct ia_css_binary *)&pipe->pipe_settings.capture.pre_isp_binary;
 		else if (pipe->config.default_capture_config.mode == IA_CSS_CAPTURE_MODE_ADVANCED ||
@@ -9485,7 +9534,7 @@ ia_css_pipe_get_shading_correction_binary(const struct ia_css_pipe *pipe)
 }
 
 static struct ia_css_binary *
-ia_css_pipe_get_binary(const struct ia_css_pipe *pipe)
+ia_css_pipe_get_s3a_binary(const struct ia_css_pipe *pipe)
 {
 	struct ia_css_binary *binary = NULL;
 
@@ -9499,8 +9548,15 @@ ia_css_pipe_get_binary(const struct ia_css_pipe *pipe)
 			binary = (struct ia_css_binary*)&pipe->pipe_settings.video.video_binary;
 			break;
 		case IA_CSS_PIPE_MODE_CAPTURE:
-			if (pipe->config.default_capture_config.mode == IA_CSS_CAPTURE_MODE_PRIMARY)
-				binary = (struct ia_css_binary *)&pipe->pipe_settings.capture.primary_binary;
+			if (pipe->config.default_capture_config.mode == IA_CSS_CAPTURE_MODE_PRIMARY) {
+				unsigned int i;
+				for (i = 0; i < pipe->pipe_settings.capture.num_primary_stage; i++) {
+					if (pipe->pipe_settings.capture.primary_binary[i].info->sp.enable.s3a) {
+						binary = (struct ia_css_binary *)&pipe->pipe_settings.capture.primary_binary[i];
+						break;
+					}
+				}
+			}
 			else if (pipe->config.default_capture_config.mode == IA_CSS_CAPTURE_MODE_BAYER)
 				binary = (struct ia_css_binary *)&pipe->pipe_settings.capture.pre_isp_binary;
 			else if (pipe->config.default_capture_config.mode == IA_CSS_CAPTURE_MODE_ADVANCED ||
@@ -9516,57 +9572,112 @@ ia_css_pipe_get_binary(const struct ia_css_pipe *pipe)
 		default:
 			break;
 	}
+
+	if (binary && !binary->info->sp.enable.s3a)
+		binary = NULL;
+
         return binary;
 }
 
-static bool
-ia_css_binary_is_3a(const struct ia_css_binary * s3a_binary)
+static struct ia_css_binary *
+ia_css_pipe_get_sdis_binary(const struct ia_css_pipe *pipe)
 {
-	if (s3a_binary && s3a_binary->info->sp.enable.s3a)
-		return true;
+	struct ia_css_binary *binary = NULL;
 
-	return false;
-}
+	assert(pipe != NULL);
 
-static bool
-ia_css_binary_is_dvs(const struct ia_css_binary * dvs_binary)
-{
+	switch (pipe->config.mode) {
+		case IA_CSS_PIPE_MODE_VIDEO:
+			binary = (struct ia_css_binary*)&pipe->pipe_settings.video.video_binary;
+			break;
+		default:
+			break;
+	}
 
 #ifdef IS_ISP_2500_SYSTEM
-	if (dvs_binary && dvs_binary->info->sp.enable.dvs_stats)
-		return true;
+	if (binary && !binary->info->sp.enable.dvs_stats)
 #else
-	if (dvs_binary && dvs_binary->info->sp.enable.dis)
-		return true;
+	if (binary && !binary->info->sp.enable.dis)
 #endif
+		binary = NULL;
 
-	return false;
+        return binary;
 }
 
 #if defined(IS_ISP_2500_SYSTEM)
-void ia_css_pipe_get_bds_resolution(const struct ia_css_pipe *pipe, struct ia_css_resolution *res)
+enum ia_css_err
+ia_css_pipe_get_bds_resolution(const struct ia_css_pipe *pipe, struct ia_css_resolution *res)
 {
-	assert(pipe != NULL);
+	enum ia_css_err err = IA_CSS_SUCCESS;
 
-	*res = pipe->bds_output_info.res;
+	if (pipe == NULL || res == NULL) {
+		IA_CSS_ERROR("Invalid args: pipe %x res %x", pipe, res);
+		err = IA_CSS_ERR_INVALID_ARGUMENTS;
+	} else {
+		*res = pipe->bds_output_info.res;
+	}
+	return err;
 }
 
-void
+enum ia_css_err
 ia_css_pipe_get_bds_aligned_resolution(const struct ia_css_pipe *pipe, struct ia_css_resolution *res)
 {
-	assert(pipe != NULL);
+	enum ia_css_err err = IA_CSS_SUCCESS;
+
+	if (pipe == NULL || res == NULL) {
+		IA_CSS_ERROR("Invalid args: pipe %x res %x", pipe, res);
+		err = IA_CSS_ERR_INVALID_ARGUMENTS;
+	} else {
+		ia_css_pipe_get_bds_resolution(pipe, res);
+		res->width = CEIL_MUL(res->width, ISP_VMEM_ALIGN);
+	}
+	return err;
+}
 
-	ia_css_pipe_get_bds_resolution(pipe, res);
-	res->width = CEIL_MUL(res->width, ISP_VMEM_ALIGN);
+enum ia_css_err
+ia_css_pipe_get_dvs_envelope(const struct ia_css_pipe *pipe, struct ia_css_resolution *res)
+{
+	enum ia_css_err err = IA_CSS_SUCCESS;
 
+	if (pipe == NULL || res == NULL) {
+		IA_CSS_ERROR("Invalid args: pipe %x res %x", pipe, res);
+		err = IA_CSS_ERR_INVALID_ARGUMENTS;
+	} else {
+		*res = pipe->config.dvs_envelope;
+	}
+	return err;
 }
 
+enum ia_css_err
+ia_css_pipe_get_dvs_filter(const struct ia_css_pipe *pipe, struct ia_css_resolution *res)
+{
+	enum ia_css_err err = IA_CSS_SUCCESS;
 
-void ia_css_pipe_get_dvs_envelope(const struct ia_css_pipe *pipe, struct ia_css_resolution *res)
+	if (pipe == NULL || res == NULL) {
+		IA_CSS_ERROR("Invalid args: pipe %x res %x", pipe, res);
+		err = IA_CSS_ERR_INVALID_ARGUMENTS;
+	} else {
+		res->width = res->height = SH_CSS_MIN_DVS_ENVELOPE; /* MIN DVS ENV is the filter size used by GDC */
+	}
+	return err;
+}
+
+enum ia_css_err
+ia_css_pipe_get_gdc_in_buffer_info(const struct ia_css_pipe *pipe,
+		struct ia_css_resolution *res,
+		struct ia_css_point *offset)
 {
-	assert(pipe != NULL);
+	enum ia_css_err err = IA_CSS_SUCCESS;
 
-	*res = pipe->config.dvs_envelope;
+	if (pipe == NULL || res == NULL || offset == NULL) {
+		IA_CSS_ERROR("Invalid args: pipe %x res %x offset %x", pipe, res, offset);
+		err = IA_CSS_ERR_INVALID_ARGUMENTS;
+	} else {
+		ia_css_pipe_get_bds_resolution(pipe, res);
+		offset->x = 0;
+		offset->y = 0;
+	}
+	return err;
 }
 #endif
 
@@ -9847,6 +9958,8 @@ void ia_css_pipe_map_queue(struct ia_css_pipe *pipe, bool map)
 			pipe->pipe_settings.preview.preview_binary.info->sp.enable.s3a)
 			ia_css_queue_map(thread_id, IA_CSS_BUFFER_TYPE_3A_STATISTICS, map);
 	} else if (pipe->mode == IA_CSS_PIPE_ID_CAPTURE) {
+		unsigned int i;
+
 		if (need_input_queue)
 			ia_css_queue_map(thread_id, IA_CSS_BUFFER_TYPE_INPUT_FRAME, map);
 		ia_css_queue_map(thread_id, IA_CSS_BUFFER_TYPE_OUTPUT_FRAME, map);
@@ -9856,11 +9969,21 @@ void ia_css_pipe_map_queue(struct ia_css_pipe *pipe, bool map)
 #if defined SH_CSS_ENABLE_METADATA
 		ia_css_queue_map(thread_id, IA_CSS_BUFFER_TYPE_METADATA, map);
 #endif
-		if ((pipe->pipe_settings.capture.primary_binary.info &&
-			pipe->pipe_settings.capture.primary_binary.info->sp.enable.s3a) ||
-			(pipe->pipe_settings.capture.pre_isp_binary.info &&
-			pipe->pipe_settings.capture.pre_isp_binary.info->sp.enable.s3a))
-			ia_css_queue_map(thread_id, IA_CSS_BUFFER_TYPE_3A_STATISTICS, map);
+		if (pipe->config.default_capture_config.mode == IA_CSS_CAPTURE_MODE_PRIMARY) {
+			for (i = 0; i < pipe->pipe_settings.capture.num_primary_stage; i++) {
+				if (pipe->pipe_settings.capture.primary_binary[i].info &&
+					pipe->pipe_settings.capture.primary_binary[i].info->sp.enable.s3a) {
+					ia_css_queue_map(thread_id, IA_CSS_BUFFER_TYPE_3A_STATISTICS, map);
+					break;
+				}
+			}
+		} else if (pipe->config.default_capture_config.mode == IA_CSS_CAPTURE_MODE_ADVANCED ||
+				 pipe->config.default_capture_config.mode == IA_CSS_CAPTURE_MODE_LOW_LIGHT ||
+				 pipe->config.default_capture_config.mode == IA_CSS_CAPTURE_MODE_BAYER) {
+			if (pipe->pipe_settings.capture.pre_isp_binary.info &&
+				pipe->pipe_settings.capture.pre_isp_binary.info->sp.enable.s3a)
+				ia_css_queue_map(thread_id, IA_CSS_BUFFER_TYPE_3A_STATISTICS, map);
+		}
 	} else if (pipe->mode == IA_CSS_PIPE_ID_VIDEO) {
 		if (need_input_queue)
 			ia_css_queue_map(thread_id, IA_CSS_BUFFER_TYPE_INPUT_FRAME, map);
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_defs.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_defs.h
index b5af3cd..9548829 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_defs.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_defs.h
@@ -363,7 +363,7 @@ RGB[0,8191],coef[-8192,8191] -> RGB[0,8191]
 #ifdef IS_ISP_2500_SYSTEM
 #define SH_CSS_MAX_STAGES 3 /* 2 stages for split isp pipelin, 1 for scaling */
 #else
-#define SH_CSS_MAX_STAGES 6 /* copy, preisp, anr, postisp, capture_pp, vf_pp */
+#define SH_CSS_MAX_STAGES 8 /* primary_stage[1-6], capture_pp, vf_pp */
 #endif
 
 /* For CSI2+ input system, it requires extra paddinga from vmem */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_firmware.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_firmware.c
index 88075c5..c05883a 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_firmware.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_firmware.c
@@ -47,10 +47,10 @@ struct fw_param {
 /* Warning: same order as SH_CSS_BINARY_ID_* */
 static struct firmware_header *firmware_header;
 
-/* The string STR(irci_master_20150122_0200) is a place holder
+/* The string STR(irci_master_20150128_1925) is a place holder
  * which will be replaced with the actual RELEASE_VERSION
  * during package generation. Please do not modify  */
-static const char *release_version = STR(irci_master_20150122_0200);
+static const char *release_version = STR(irci_master_20150128_1925);
 
 #define MAX_FW_REL_VER_NAME	300
 static char FW_rel_ver_name[MAX_FW_REL_VER_NAME] = "---";
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_internal.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_internal.h
index 60600c3..ccebd57 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_internal.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_internal.h
@@ -1098,14 +1098,22 @@ void
 sh_css_invalidate_shading_tables(struct ia_css_stream *stream);
 
 #if defined(IS_ISP_2500_SYSTEM)
-void
+enum ia_css_err
 ia_css_pipe_get_bds_resolution(const struct ia_css_pipe *pipe, struct ia_css_resolution *res);
 
-void
+enum ia_css_err
 ia_css_pipe_get_bds_aligned_resolution(const struct ia_css_pipe *pipe, struct ia_css_resolution *res);
 
-void
+enum ia_css_err
 ia_css_pipe_get_dvs_envelope(const struct ia_css_pipe *pipe, struct ia_css_resolution *res);
+
+enum ia_css_err
+ia_css_pipe_get_dvs_filter(const struct ia_css_pipe *pipe, struct ia_css_resolution *filter_res);
+
+enum ia_css_err
+ia_css_pipe_get_gdc_in_buffer_info(const struct ia_css_pipe *pipe,
+		struct ia_css_resolution *res,
+		struct ia_css_point *offset);
 #endif
 
 struct ia_css_pipeline *
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_params.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_params.c
index a2239f2..4617c6a 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_params.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_params.c
@@ -97,6 +97,7 @@
 
 #if defined(IS_ISP_2500_SYSTEM)
 #include "product_specific.host.h"
+#include "components/ob/sc_ob_1.0/host/obgrid.host.h"
 #include "components/stats_3a/src/stats_3a_private.h"
 #include "components/acc_cluster/acc_lace_stat/lace_stat_private.h"
 #include "components/acc_cluster/acc_lace_stat/host/lace_stat.host.h"
@@ -3390,6 +3391,7 @@ sh_css_init_isp_params_from_global(struct ia_css_stream *stream,
 
 		ia_css_set_sdis2_config(params, &stream_params->dvs2_coefs);
 		params->dvs2_coef_table_changed = stream_params->dvs2_coef_table_changed;
+		params->sensor_binning = stream_params->sensor_binning;
 #endif /* !defined(IS_ISP_2500_SYSTEM) */
 	}
 
@@ -3555,6 +3557,7 @@ ia_css_stream_isp_parameters_uninit(struct ia_css_stream *stream)
 
 #if defined(IS_ISP_2500_SYSTEM)
 	destroy_acc_cluster(stream);
+	stripe_table_release();
 #endif
 
 	/* Free up theDVS table memory blocks before recomputing new table */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/spmem_dump.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/spmem_dump.c
index cf4c113..0832e03 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/spmem_dump.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/spmem_dump.c
@@ -22,53 +22,53 @@
 
 #define _hrt_cell_load_program_sp(proc) _hrt_cell_load_program_embedded(proc, sp)
 
-/* function longjmp: 640A */
+/* function longjmp: 6456 */
 
-/* function tmpmem_init_dmem: 61A7 */
+/* function tmpmem_init_dmem: 61F3 */
 
-/* function ia_css_dmaproxy_sp_set_addr_B: 38CA */
+/* function ia_css_dmaproxy_sp_set_addr_B: 3915 */
 
 /* function debug_buffer_set_ddr_addr: DD */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_vbuf_mipi
 #define HIVE_MEM_vbuf_mipi scalar_processor_2400_dmem
-#define HIVE_ADDR_vbuf_mipi 0x7240
+#define HIVE_ADDR_vbuf_mipi 0x7340
 #define HIVE_SIZE_vbuf_mipi 12
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_vbuf_mipi scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_vbuf_mipi 0x7240
+#define HIVE_ADDR_sp_vbuf_mipi 0x7340
 #define HIVE_SIZE_sp_vbuf_mipi 12
 
-/* function ia_css_event_sp_decode: 3A9F */
+/* function ia_css_event_sp_decode: 3AEA */
 
-/* function ia_css_queue_get_size: 4D58 */
+/* function ia_css_queue_get_size: 4DA5 */
 
-/* function ia_css_queue_load: 5399 */
+/* function ia_css_queue_load: 53E6 */
 
-/* function setjmp: 6413 */
+/* function setjmp: 645F */
 
-/* function ia_css_pipeline_sp_sfi_get_current_frame: 26B2 */
+/* function ia_css_pipeline_sp_sfi_get_current_frame: 26C4 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_sp2host_isys_event_queue
 #define HIVE_MEM_sem_for_sp2host_isys_event_queue scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_sp2host_isys_event_queue 0x561C
+#define HIVE_ADDR_sem_for_sp2host_isys_event_queue 0x571C
 #define HIVE_SIZE_sem_for_sp2host_isys_event_queue 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_sp2host_isys_event_queue scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_sp2host_isys_event_queue 0x561C
+#define HIVE_ADDR_sp_sem_for_sp2host_isys_event_queue 0x571C
 #define HIVE_SIZE_sp_sem_for_sp2host_isys_event_queue 20
 
-/* function ia_css_dmaproxy_sp_wait_for_ack: 695F */
+/* function ia_css_dmaproxy_sp_wait_for_ack: 69AB */
 
-/* function ia_css_sp_rawcopy_func: 5504 */
+/* function ia_css_sp_rawcopy_func: 5551 */
 
-/* function ia_css_tagger_buf_sp_pop_marked: 303C */
+/* function ia_css_tagger_buf_sp_pop_marked: 3074 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_N_CSI_RX_BE_SID_WIDTH
@@ -85,13 +85,13 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_stage
 #define HIVE_MEM_isp_stage scalar_processor_2400_dmem
-#define HIVE_ADDR_isp_stage 0x6B40
+#define HIVE_ADDR_isp_stage 0x6C40
 #define HIVE_SIZE_isp_stage 832
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isp_stage scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_stage 0x6B40
+#define HIVE_ADDR_sp_isp_stage 0x6C40
 #define HIVE_SIZE_sp_isp_stage 832
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -106,34 +106,34 @@
 #define HIVE_ADDR_sp_vbuf_raw 0x37C
 #define HIVE_SIZE_sp_vbuf_raw 4
 
-/* function ia_css_sp_bin_copy_func: 54E5 */
+/* function ia_css_sp_bin_copy_func: 5532 */
 
-/* function ia_css_queue_item_store: 50E7 */
+/* function ia_css_queue_item_store: 5134 */
 
-/* function input_system_reset: 128E */
+/* function input_system_reset: 1278 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_metadata_bufs
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_metadata_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_metadata_bufs 0x59F4
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_metadata_bufs 0x5AF4
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_metadata_bufs 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_metadata_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_metadata_bufs 0x59F4
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_metadata_bufs 0x5AF4
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_metadata_bufs 20
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_buffer_bufs
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_buffer_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_buffer_bufs 0x5A08
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_buffer_bufs 0x5B08
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_buffer_bufs 160
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_buffer_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_buffer_bufs 0x5A08
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_buffer_bufs 0x5B08
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_buffer_bufs 160
 
 /* function sp_start_isp: 39C */
@@ -141,108 +141,108 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_binary_group
 #define HIVE_MEM_sp_binary_group scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_binary_group 0x6F30
+#define HIVE_ADDR_sp_binary_group 0x7030
 #define HIVE_SIZE_sp_binary_group 32
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_binary_group scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_binary_group 0x6F30
+#define HIVE_ADDR_sp_sp_binary_group 0x7030
 #define HIVE_SIZE_sp_sp_binary_group 32
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_sw_state
 #define HIVE_MEM_sp_sw_state scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sw_state 0x71EC
+#define HIVE_ADDR_sp_sw_state 0x72EC
 #define HIVE_SIZE_sp_sw_state 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_sw_state scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_sw_state 0x71EC
+#define HIVE_ADDR_sp_sp_sw_state 0x72EC
 #define HIVE_SIZE_sp_sp_sw_state 4
 
-/* function ia_css_thread_sp_main: 13FF */
+/* function ia_css_thread_sp_main: 13E9 */
 
-/* function ia_css_ispctrl_sp_init_internal_buffers: 3CA5 */
+/* function ia_css_ispctrl_sp_init_internal_buffers: 3CF0 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp2host_psys_event_queue_handle
 #define HIVE_MEM_sp2host_psys_event_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp2host_psys_event_queue_handle 0x5AA8
+#define HIVE_ADDR_sp2host_psys_event_queue_handle 0x5BA8
 #define HIVE_SIZE_sp2host_psys_event_queue_handle 12
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp2host_psys_event_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp2host_psys_event_queue_handle 0x5AA8
+#define HIVE_ADDR_sp_sp2host_psys_event_queue_handle 0x5BA8
 #define HIVE_SIZE_sp_sp2host_psys_event_queue_handle 12
 
-/* function pixelgen_unit_test: E70 */
+/* function pixelgen_unit_test: E5A */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_sp2host_psys_event_queue
 #define HIVE_MEM_sem_for_sp2host_psys_event_queue scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_sp2host_psys_event_queue 0x5630
+#define HIVE_ADDR_sem_for_sp2host_psys_event_queue 0x5730
 #define HIVE_SIZE_sem_for_sp2host_psys_event_queue 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_sp2host_psys_event_queue scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_sp2host_psys_event_queue 0x5630
+#define HIVE_ADDR_sp_sem_for_sp2host_psys_event_queue 0x5730
 #define HIVE_SIZE_sp_sem_for_sp2host_psys_event_queue 20
 
-/* function ia_css_tagger_sp_propagate_frame: 2B53 */
+/* function ia_css_tagger_sp_propagate_frame: 2B8B */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_stop_copy_preview
 #define HIVE_MEM_sp_stop_copy_preview scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_stop_copy_preview 0x71D0
+#define HIVE_ADDR_sp_stop_copy_preview 0x72D0
 #define HIVE_SIZE_sp_stop_copy_preview 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_stop_copy_preview scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_stop_copy_preview 0x71D0
+#define HIVE_ADDR_sp_sp_stop_copy_preview 0x72D0
 #define HIVE_SIZE_sp_sp_stop_copy_preview 4
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_vbuf_handles
 #define HIVE_MEM_vbuf_handles scalar_processor_2400_dmem
-#define HIVE_ADDR_vbuf_handles 0x724C
+#define HIVE_ADDR_vbuf_handles 0x734C
 #define HIVE_SIZE_vbuf_handles 960
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_vbuf_handles scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_vbuf_handles 0x724C
+#define HIVE_ADDR_sp_vbuf_handles 0x734C
 #define HIVE_SIZE_sp_vbuf_handles 960
 
-/* function ia_css_queue_store: 524D */
+/* function ia_css_queue_store: 529A */
 
-/* function ia_css_sp_flash_register: 3256 */
+/* function ia_css_sp_flash_register: 328E */
 
-/* function ia_css_sp_rawcopy_dummy_function: 594E */
+/* function ia_css_sp_rawcopy_dummy_function: 599A */
 
-/* function ia_css_pipeline_sp_init: 1F35 */
+/* function ia_css_pipeline_sp_init: 1F44 */
 
-/* function ia_css_tagger_sp_configure: 2A50 */
+/* function ia_css_tagger_sp_configure: 2A88 */
 
-/* function ia_css_ispctrl_sp_end_binary: 3AE8 */
+/* function ia_css_ispctrl_sp_end_binary: 3B33 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_h_pipe_private_per_frame_ddr_ptrs
 #define HIVE_MEM_ia_css_bufq_sp_h_pipe_private_per_frame_ddr_ptrs scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_h_pipe_private_per_frame_ddr_ptrs 0x5AB4
+#define HIVE_ADDR_ia_css_bufq_sp_h_pipe_private_per_frame_ddr_ptrs 0x5BB4
 #define HIVE_SIZE_ia_css_bufq_sp_h_pipe_private_per_frame_ddr_ptrs 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_h_pipe_private_per_frame_ddr_ptrs scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_h_pipe_private_per_frame_ddr_ptrs 0x5AB4
+#define HIVE_ADDR_sp_ia_css_bufq_sp_h_pipe_private_per_frame_ddr_ptrs 0x5BB4
 #define HIVE_SIZE_sp_ia_css_bufq_sp_h_pipe_private_per_frame_ddr_ptrs 20
 
-/* function pixelgen_tpg_run: F26 */
+/* function pixelgen_tpg_run: F10 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_event_is_pending_mask
@@ -259,70 +259,70 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cb_elems_frame
 #define HIVE_MEM_sp_all_cb_elems_frame scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_all_cb_elems_frame 0x5644
+#define HIVE_ADDR_sp_all_cb_elems_frame 0x5744
 #define HIVE_SIZE_sp_all_cb_elems_frame 16
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_all_cb_elems_frame scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_all_cb_elems_frame 0x5644
+#define HIVE_ADDR_sp_sp_all_cb_elems_frame 0x5744
 #define HIVE_SIZE_sp_sp_all_cb_elems_frame 16
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp2host_isys_event_queue_handle
 #define HIVE_MEM_sp2host_isys_event_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp2host_isys_event_queue_handle 0x5AC8
+#define HIVE_ADDR_sp2host_isys_event_queue_handle 0x5BC8
 #define HIVE_SIZE_sp2host_isys_event_queue_handle 12
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp2host_isys_event_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp2host_isys_event_queue_handle 0x5AC8
+#define HIVE_ADDR_sp_sp2host_isys_event_queue_handle 0x5BC8
 #define HIVE_SIZE_sp_sp2host_isys_event_queue_handle 12
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_host_sp_com
 #define HIVE_MEM_host_sp_com scalar_processor_2400_dmem
-#define HIVE_ADDR_host_sp_com 0x3D40
+#define HIVE_ADDR_host_sp_com 0x3E18
 #define HIVE_SIZE_host_sp_com 220
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_host_sp_com scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_host_sp_com 0x3D40
+#define HIVE_ADDR_sp_host_sp_com 0x3E18
 #define HIVE_SIZE_sp_host_sp_com 220
 
-/* function ia_css_queue_get_free_space: 4EAC */
+/* function ia_css_queue_get_free_space: 4EF9 */
 
-/* function exec_image_pipe: 5E3 */
+/* function exec_image_pipe: 5E6 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_init_dmem_data
 #define HIVE_MEM_sp_init_dmem_data scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_init_dmem_data 0x71F0
+#define HIVE_ADDR_sp_init_dmem_data 0x72F0
 #define HIVE_SIZE_sp_init_dmem_data 24
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_init_dmem_data scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_init_dmem_data 0x71F0
+#define HIVE_ADDR_sp_sp_init_dmem_data 0x72F0
 #define HIVE_SIZE_sp_sp_init_dmem_data 24
 
-/* function ia_css_sp_metadata_start: 5A28 */
+/* function ia_css_sp_metadata_start: 5A74 */
 
-/* function ia_css_bufq_sp_init_buffer_queues: 32A7 */
+/* function ia_css_bufq_sp_init_buffer_queues: 32DF */
 
-/* function ia_css_pipeline_sp_stop: 1F18 */
+/* function ia_css_pipeline_sp_stop: 1F27 */
 
-/* function ia_css_tagger_sp_connect_pipes: 2EC5 */
+/* function ia_css_tagger_sp_connect_pipes: 2EFD */
 
-/* function sp_isys_copy_wait: 641 */
+/* function sp_isys_copy_wait: 644 */
 
 /* function is_isp_debug_buffer_full: 337 */
 
-/* function ia_css_dmaproxy_sp_configure_channel_from_info: 384D */
+/* function ia_css_dmaproxy_sp_configure_channel_from_info: 3898 */
 
-/* function encode_and_post_timer_event: A97 */
+/* function encode_and_post_timer_event: A9A */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_input_system_bz2788_active
@@ -351,46 +351,46 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_per_frame_data
 #define HIVE_MEM_sp_per_frame_data scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_per_frame_data 0x3E1C
+#define HIVE_ADDR_sp_per_frame_data 0x3EF4
 #define HIVE_SIZE_sp_per_frame_data 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_per_frame_data scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_per_frame_data 0x3E1C
+#define HIVE_ADDR_sp_sp_per_frame_data 0x3EF4
 #define HIVE_SIZE_sp_sp_per_frame_data 4
 
-/* function ia_css_rmgr_sp_vbuf_dequeue: 5F03 */
+/* function ia_css_rmgr_sp_vbuf_dequeue: 5F4F */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_host2sp_psys_event_queue_handle
 #define HIVE_MEM_host2sp_psys_event_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_host2sp_psys_event_queue_handle 0x5AD4
+#define HIVE_ADDR_host2sp_psys_event_queue_handle 0x5BD4
 #define HIVE_SIZE_host2sp_psys_event_queue_handle 12
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_host2sp_psys_event_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_host2sp_psys_event_queue_handle 0x5AD4
+#define HIVE_ADDR_sp_host2sp_psys_event_queue_handle 0x5BD4
 #define HIVE_SIZE_sp_host2sp_psys_event_queue_handle 12
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_xmem_bin_addr
 #define HIVE_MEM_xmem_bin_addr scalar_processor_2400_dmem
-#define HIVE_ADDR_xmem_bin_addr 0x3E20
+#define HIVE_ADDR_xmem_bin_addr 0x3EF8
 #define HIVE_SIZE_xmem_bin_addr 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_xmem_bin_addr scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_xmem_bin_addr 0x3E20
+#define HIVE_ADDR_sp_xmem_bin_addr 0x3EF8
 #define HIVE_SIZE_sp_xmem_bin_addr 4
 
-/* function tmr_clock_init: B2C */
+/* function tmr_clock_init: 16E3 */
 
-/* function ia_css_pipeline_sp_run: 1A8E */
+/* function ia_css_pipeline_sp_run: 1A91 */
 
-/* function memcpy: 64B3 */
+/* function memcpy: 64FF */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_N_ISYS2401_DMA_CHANNEL_PROCS
@@ -428,26 +428,26 @@
 #define HIVE_ADDR_sp_ia_css_thread_sp_ready_queue 0x27C
 #define HIVE_SIZE_sp_ia_css_thread_sp_ready_queue 12
 
-/* function stream2mmio_send_command: E12 */
+/* function stream2mmio_send_command: DFC */
 
-/* function ia_css_uds_sp_scale_params: 61BD */
+/* function ia_css_uds_sp_scale_params: 6209 */
 
-/* function ia_css_circbuf_increase_size: 14E4 */
+/* function ia_css_circbuf_increase_size: 14CE */
 
-/* function __divu: 6431 */
+/* function __divu: 647D */
 
-/* function ia_css_thread_sp_get_state: 1327 */
+/* function ia_css_thread_sp_get_state: 1311 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_cont_capt_stop
 #define HIVE_MEM_sem_for_cont_capt_stop scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_cont_capt_stop 0x5654
+#define HIVE_ADDR_sem_for_cont_capt_stop 0x5754
 #define HIVE_SIZE_sem_for_cont_capt_stop 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_cont_capt_stop scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_cont_capt_stop 0x5654
+#define HIVE_ADDR_sp_sem_for_cont_capt_stop 0x5754
 #define HIVE_SIZE_sp_sem_for_cont_capt_stop 20
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -462,25 +462,25 @@
 #define HIVE_ADDR_sp_N_SHORT_PACKET_LUT_ENTRIES 0x1B0
 #define HIVE_SIZE_sp_N_SHORT_PACKET_LUT_ENTRIES 12
 
-/* function thread_fiber_sp_main: 14DD */
+/* function thread_fiber_sp_main: 14C7 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_isp_pipe_thread
 #define HIVE_MEM_sp_isp_pipe_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_pipe_thread 0x5798
+#define HIVE_ADDR_sp_isp_pipe_thread 0x5898
 #define HIVE_SIZE_sp_isp_pipe_thread 340
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_isp_pipe_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_isp_pipe_thread 0x5798
+#define HIVE_ADDR_sp_sp_isp_pipe_thread 0x5898
 #define HIVE_SIZE_sp_sp_isp_pipe_thread 340
 
-/* function ia_css_parambuf_sp_handle_parameter_sets: 1927 */
+/* function ia_css_parambuf_sp_handle_parameter_sets: 192A */
 
-/* function ia_css_spctrl_sp_set_state: 5A44 */
+/* function ia_css_spctrl_sp_set_state: 5A90 */
 
-/* function ia_css_thread_sem_sp_signal: 6696 */
+/* function ia_css_thread_sem_sp_signal: 66E2 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_IRQ_BASE
@@ -494,7 +494,7 @@
 #define HIVE_ADDR_sp_IRQ_BASE 0x2C
 #define HIVE_SIZE_sp_IRQ_BASE 16
 
-/* function ia_css_virtual_isys_sp_isr_init: 5AE3 */
+/* function ia_css_virtual_isys_sp_isr_init: 5B2F */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_TIMED_CTRL_BASE
@@ -508,11 +508,11 @@
 #define HIVE_ADDR_sp_TIMED_CTRL_BASE 0x40
 #define HIVE_SIZE_sp_TIMED_CTRL_BASE 4
 
-/* function ia_css_isys_sp_generate_exp_id: 5D93 */
+/* function ia_css_isys_sp_generate_exp_id: 5DDF */
 
-/* function ia_css_rmgr_sp_init: 5DFE */
+/* function ia_css_rmgr_sp_init: 5E4A */
 
-/* function ia_css_thread_sem_sp_init: 6767 */
+/* function ia_css_thread_sem_sp_init: 67B3 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_is_isp_requested
@@ -529,26 +529,26 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_reading_cb_frame
 #define HIVE_MEM_sem_for_reading_cb_frame scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_reading_cb_frame 0x5668
+#define HIVE_ADDR_sem_for_reading_cb_frame 0x5768
 #define HIVE_SIZE_sem_for_reading_cb_frame 40
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_reading_cb_frame scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_reading_cb_frame 0x5668
+#define HIVE_ADDR_sp_sem_for_reading_cb_frame 0x5768
 #define HIVE_SIZE_sp_sem_for_reading_cb_frame 40
 
-/* function ia_css_dmaproxy_sp_execute: 37B5 */
+/* function ia_css_dmaproxy_sp_execute: 3800 */
 
-/* function csi_rx_backend_rst: CEE */
+/* function csi_rx_backend_rst: CD8 */
 
-/* function ia_css_queue_is_empty: 4D93 */
+/* function ia_css_queue_is_empty: 4DE0 */
 
-/* function ia_css_pipeline_sp_has_stopped: 1F0E */
+/* function ia_css_pipeline_sp_has_stopped: 1F1D */
 
-/* function ia_css_circbuf_extract: 15E4 */
+/* function ia_css_circbuf_extract: 15CE */
 
-/* function ia_css_tagger_buf_sp_is_locked_from_start: 3183 */
+/* function ia_css_tagger_buf_sp_is_locked_from_start: 31BB */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_current_sp_thread
@@ -562,11 +562,11 @@
 #define HIVE_ADDR_sp_current_sp_thread 0x278
 #define HIVE_SIZE_sp_current_sp_thread 4
 
-/* function ia_css_spctrl_sp_get_spid: 5A4B */
+/* function ia_css_spctrl_sp_get_spid: 5A97 */
 
-/* function ia_css_dmaproxy_sp_read_byte_addr: 698D */
+/* function ia_css_dmaproxy_sp_read_byte_addr: 69D9 */
 
-/* function ia_css_rmgr_sp_uninit: 5DF7 */
+/* function ia_css_rmgr_sp_uninit: 5E43 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_threads_stack
@@ -592,20 +592,20 @@
 #define HIVE_ADDR_sp_N_STREAM2MMIO_SID_PROCS 0x21C
 #define HIVE_SIZE_sp_N_STREAM2MMIO_SID_PROCS 12
 
-/* function ia_css_circbuf_peek: 15C6 */
+/* function ia_css_circbuf_peek: 15B0 */
 
-/* function ia_css_parambuf_sp_wait_for_in_param: 16EF */
+/* function ia_css_parambuf_sp_wait_for_in_param: 16F2 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cb_elems_param
 #define HIVE_MEM_sp_all_cb_elems_param scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_all_cb_elems_param 0x5690
+#define HIVE_ADDR_sp_all_cb_elems_param 0x5790
 #define HIVE_SIZE_sp_all_cb_elems_param 16
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_all_cb_elems_param scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_all_cb_elems_param 0x5690
+#define HIVE_ADDR_sp_sp_all_cb_elems_param 0x5790
 #define HIVE_SIZE_sp_sp_all_cb_elems_param 16
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -623,103 +623,103 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cbs_frame_desc
 #define HIVE_MEM_sp_all_cbs_frame_desc scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_all_cbs_frame_desc 0x56A0
+#define HIVE_ADDR_sp_all_cbs_frame_desc 0x57A0
 #define HIVE_SIZE_sp_all_cbs_frame_desc 8
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_all_cbs_frame_desc scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_all_cbs_frame_desc 0x56A0
+#define HIVE_ADDR_sp_sp_all_cbs_frame_desc 0x57A0
 #define HIVE_SIZE_sp_sp_all_cbs_frame_desc 8
 
-/* function sp_isys_copy_func_v2: 626 */
+/* function sp_isys_copy_func_v2: 629 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_reading_cb_param
 #define HIVE_MEM_sem_for_reading_cb_param scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_reading_cb_param 0x56A8
+#define HIVE_ADDR_sem_for_reading_cb_param 0x57A8
 #define HIVE_SIZE_sem_for_reading_cb_param 40
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_reading_cb_param scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_reading_cb_param 0x56A8
+#define HIVE_ADDR_sp_sem_for_reading_cb_param 0x57A8
 #define HIVE_SIZE_sp_sem_for_reading_cb_param 40
 
-/* function ia_css_queue_get_used_space: 4E60 */
+/* function ia_css_queue_get_used_space: 4EAD */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_cont_capt_start
 #define HIVE_MEM_sem_for_cont_capt_start scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_cont_capt_start 0x56D0
+#define HIVE_ADDR_sem_for_cont_capt_start 0x57D0
 #define HIVE_SIZE_sem_for_cont_capt_start 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_cont_capt_start scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_cont_capt_start 0x56D0
+#define HIVE_ADDR_sp_sem_for_cont_capt_start 0x57D0
 #define HIVE_SIZE_sp_sem_for_cont_capt_start 20
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_tmp_heap
 #define HIVE_MEM_tmp_heap scalar_processor_2400_dmem
-#define HIVE_ADDR_tmp_heap 0x6F50
+#define HIVE_ADDR_tmp_heap 0x7050
 #define HIVE_SIZE_tmp_heap 640
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_tmp_heap scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_tmp_heap 0x6F50
+#define HIVE_ADDR_sp_tmp_heap 0x7050
 #define HIVE_SIZE_sp_tmp_heap 640
 
-/* function ia_css_rmgr_sp_get_num_vbuf: 60FF */
+/* function ia_css_rmgr_sp_get_num_vbuf: 614B */
 
-/* function ia_css_ispctrl_sp_output_compute_dma_info: 4409 */
+/* function ia_css_ispctrl_sp_output_compute_dma_info: 4456 */
 
-/* function ia_css_tagger_sp_lock_exp_id: 287E */
+/* function ia_css_tagger_sp_lock_exp_id: 28B0 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_s3a_bufs
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_s3a_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_s3a_bufs 0x5AE0
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_s3a_bufs 0x5BE0
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_s3a_bufs 60
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_s3a_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_s3a_bufs 0x5AE0
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_s3a_bufs 0x5BE0
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_s3a_bufs 60
 
-/* function ia_css_queue_is_full: 4EF7 */
+/* function ia_css_queue_is_full: 4F44 */
 
 /* function debug_buffer_init_isp: E4 */
 
-/* function ia_css_tagger_sp_exp_id_is_locked: 27CC */
+/* function ia_css_tagger_sp_exp_id_is_locked: 27FE */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_rmgr_sp_mipi_frame_sem
 #define HIVE_MEM_ia_css_rmgr_sp_mipi_frame_sem scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_rmgr_sp_mipi_frame_sem 0x760C
+#define HIVE_ADDR_ia_css_rmgr_sp_mipi_frame_sem 0x770C
 #define HIVE_SIZE_ia_css_rmgr_sp_mipi_frame_sem 60
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_rmgr_sp_mipi_frame_sem scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_rmgr_sp_mipi_frame_sem 0x760C
+#define HIVE_ADDR_sp_ia_css_rmgr_sp_mipi_frame_sem 0x770C
 #define HIVE_SIZE_sp_ia_css_rmgr_sp_mipi_frame_sem 60
 
-/* function ia_css_rmgr_sp_refcount_dump: 5EDE */
+/* function ia_css_rmgr_sp_refcount_dump: 5F2A */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_isp_parameters_id
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_isp_parameters_id scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_isp_parameters_id 0x5B1C
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_isp_parameters_id 0x5C1C
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_isp_parameters_id 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_isp_parameters_id scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_isp_parameters_id 0x5B1C
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_isp_parameters_id 0x5C1C
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_isp_parameters_id 20
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -734,53 +734,53 @@
 #define HIVE_ADDR_sp_sp_pipe_threads 0x154
 #define HIVE_SIZE_sp_sp_pipe_threads 20
 
-/* function sp_event_proxy_func: 780 */
+/* function sp_event_proxy_func: 783 */
 
-/* function ibuf_ctrl_run: D87 */
+/* function ibuf_ctrl_run: D71 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_host2sp_isys_event_queue_handle
 #define HIVE_MEM_host2sp_isys_event_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_host2sp_isys_event_queue_handle 0x5B30
+#define HIVE_ADDR_host2sp_isys_event_queue_handle 0x5C30
 #define HIVE_SIZE_host2sp_isys_event_queue_handle 12
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_host2sp_isys_event_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_host2sp_isys_event_queue_handle 0x5B30
+#define HIVE_ADDR_sp_host2sp_isys_event_queue_handle 0x5C30
 #define HIVE_SIZE_sp_host2sp_isys_event_queue_handle 12
 
-/* function ia_css_thread_sp_yield: 660F */
+/* function ia_css_thread_sp_yield: 665B */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cbs_param_desc
 #define HIVE_MEM_sp_all_cbs_param_desc scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_all_cbs_param_desc 0x56E4
+#define HIVE_ADDR_sp_all_cbs_param_desc 0x57E4
 #define HIVE_SIZE_sp_all_cbs_param_desc 8
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_all_cbs_param_desc scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_all_cbs_param_desc 0x56E4
+#define HIVE_ADDR_sp_sp_all_cbs_param_desc 0x57E4
 #define HIVE_SIZE_sp_sp_all_cbs_param_desc 8
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_dmaproxy_sp_invalidate_tlb
 #define HIVE_MEM_ia_css_dmaproxy_sp_invalidate_tlb scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_dmaproxy_sp_invalidate_tlb 0x6B34
+#define HIVE_ADDR_ia_css_dmaproxy_sp_invalidate_tlb 0x6C34
 #define HIVE_SIZE_ia_css_dmaproxy_sp_invalidate_tlb 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_dmaproxy_sp_invalidate_tlb scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_dmaproxy_sp_invalidate_tlb 0x6B34
+#define HIVE_ADDR_sp_ia_css_dmaproxy_sp_invalidate_tlb 0x6C34
 #define HIVE_SIZE_sp_ia_css_dmaproxy_sp_invalidate_tlb 4
 
-/* function ia_css_thread_sp_fork: 13B4 */
+/* function ia_css_thread_sp_fork: 139E */
 
-/* function ia_css_tagger_sp_destroy: 2ECF */
+/* function ia_css_tagger_sp_destroy: 2F07 */
 
-/* function ia_css_dmaproxy_sp_vmem_read: 3755 */
+/* function ia_css_dmaproxy_sp_vmem_read: 37A0 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_N_LONG_PACKET_LUT_ENTRIES
@@ -794,13 +794,13 @@
 #define HIVE_ADDR_sp_N_LONG_PACKET_LUT_ENTRIES 0x1BC
 #define HIVE_SIZE_sp_N_LONG_PACKET_LUT_ENTRIES 12
 
-/* function initialize_sp_group: 5F3 */
+/* function initialize_sp_group: 5F6 */
 
-/* function ia_css_thread_sp_init: 13E0 */
+/* function ia_css_thread_sp_init: 13CA */
 
-/* function ia_css_isys_sp_reset_exp_id: 5D8A */
+/* function ia_css_isys_sp_reset_exp_id: 5DD6 */
 
-/* function ia_css_ispctrl_sp_set_stream_base_addr: 4AD1 */
+/* function ia_css_ispctrl_sp_set_stream_base_addr: 4B1E */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ISP_DMEM_BASE
@@ -826,11 +826,11 @@
 #define HIVE_ADDR_sp_SP_DMEM_BASE 0x4
 #define HIVE_SIZE_sp_SP_DMEM_BASE 4
 
-/* function ibuf_ctrl_transfer: D6F */
+/* function ibuf_ctrl_transfer: D59 */
 
-/* function ia_css_dmaproxy_sp_read: 37CB */
+/* function ia_css_dmaproxy_sp_read: 3816 */
 
-/* function virtual_isys_stream_is_capture_done: 5B07 */
+/* function virtual_isys_stream_is_capture_done: 5B53 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_raw_copy_line_count
@@ -847,27 +847,27 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_host2sp_tag_cmd_queue_handle
 #define HIVE_MEM_host2sp_tag_cmd_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_host2sp_tag_cmd_queue_handle 0x5B3C
+#define HIVE_ADDR_host2sp_tag_cmd_queue_handle 0x5C3C
 #define HIVE_SIZE_host2sp_tag_cmd_queue_handle 12
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_host2sp_tag_cmd_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_host2sp_tag_cmd_queue_handle 0x5B3C
+#define HIVE_ADDR_sp_host2sp_tag_cmd_queue_handle 0x5C3C
 #define HIVE_SIZE_sp_host2sp_tag_cmd_queue_handle 12
 
-/* function ia_css_queue_peek: 4DD6 */
+/* function ia_css_queue_peek: 4E23 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_flash_sp_frame_cnt
 #define HIVE_MEM_ia_css_flash_sp_frame_cnt scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_flash_sp_frame_cnt 0x59E8
+#define HIVE_ADDR_ia_css_flash_sp_frame_cnt 0x5AE8
 #define HIVE_SIZE_ia_css_flash_sp_frame_cnt 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_flash_sp_frame_cnt scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_flash_sp_frame_cnt 0x59E8
+#define HIVE_ADDR_sp_ia_css_flash_sp_frame_cnt 0x5AE8
 #define HIVE_SIZE_sp_ia_css_flash_sp_frame_cnt 4
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -882,21 +882,21 @@
 #define HIVE_ADDR_sp_event_can_send_token_mask 0x88
 #define HIVE_SIZE_sp_event_can_send_token_mask 44
 
-/* function csi_rx_frontend_stop: C19 */
+/* function csi_rx_frontend_stop: C03 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_thread
 #define HIVE_MEM_isp_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_isp_thread 0x6E80
+#define HIVE_ADDR_isp_thread 0x6F80
 #define HIVE_SIZE_isp_thread 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isp_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_thread 0x6E80
+#define HIVE_ADDR_sp_isp_thread 0x6F80
 #define HIVE_SIZE_sp_isp_thread 4
 
-/* function encode_and_post_sp_event_non_blocking: ADF */
+/* function encode_and_post_sp_event_non_blocking: AE2 */
 
 /* function is_ddr_debug_buffer_full: 2CC */
 
@@ -912,99 +912,99 @@
 #define HIVE_ADDR_sp_sp_threads_fiber 0x198
 #define HIVE_SIZE_sp_sp_threads_fiber 24
 
-/* function encode_and_post_sp_event: A68 */
+/* function encode_and_post_sp_event: A6B */
 
 /* function debug_enqueue_ddr: EE */
 
-/* function ia_css_rmgr_sp_refcount_init_vbuf: 5E99 */
+/* function ia_css_rmgr_sp_refcount_init_vbuf: 5EE5 */
 
-/* function dmaproxy_sp_read_write: 6A18 */
+/* function dmaproxy_sp_read_write: 6A64 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_dmaproxy_isp_dma_cmd_buffer
 #define HIVE_MEM_ia_css_dmaproxy_isp_dma_cmd_buffer scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_dmaproxy_isp_dma_cmd_buffer 0x6B38
+#define HIVE_ADDR_ia_css_dmaproxy_isp_dma_cmd_buffer 0x6C38
 #define HIVE_SIZE_ia_css_dmaproxy_isp_dma_cmd_buffer 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_dmaproxy_isp_dma_cmd_buffer scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_dmaproxy_isp_dma_cmd_buffer 0x6B38
+#define HIVE_ADDR_sp_ia_css_dmaproxy_isp_dma_cmd_buffer 0x6C38
 #define HIVE_SIZE_sp_ia_css_dmaproxy_isp_dma_cmd_buffer 4
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_host2sp_buffer_queue_handle
 #define HIVE_MEM_host2sp_buffer_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_host2sp_buffer_queue_handle 0x5B48
+#define HIVE_ADDR_host2sp_buffer_queue_handle 0x5C48
 #define HIVE_SIZE_host2sp_buffer_queue_handle 480
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_host2sp_buffer_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_host2sp_buffer_queue_handle 0x5B48
+#define HIVE_ADDR_sp_host2sp_buffer_queue_handle 0x5C48
 #define HIVE_SIZE_sp_host2sp_buffer_queue_handle 480
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_flash_sp_in_service
 #define HIVE_MEM_ia_css_flash_sp_in_service scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_flash_sp_in_service 0x2FC4
+#define HIVE_ADDR_ia_css_flash_sp_in_service 0x3054
 #define HIVE_SIZE_ia_css_flash_sp_in_service 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_flash_sp_in_service scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_flash_sp_in_service 0x2FC4
+#define HIVE_ADDR_sp_ia_css_flash_sp_in_service 0x3054
 #define HIVE_SIZE_sp_ia_css_flash_sp_in_service 4
 
-/* function ia_css_dmaproxy_sp_process: 678F */
+/* function ia_css_dmaproxy_sp_process: 67DB */
 
-/* function ia_css_tagger_buf_sp_mark_from_end: 3230 */
+/* function ia_css_tagger_buf_sp_mark_from_end: 3268 */
 
-/* function ia_css_ispctrl_sp_init_cs: 3BD5 */
+/* function ia_css_ispctrl_sp_init_cs: 3C20 */
 
-/* function ia_css_spctrl_sp_init: 5A59 */
+/* function ia_css_spctrl_sp_init: 5AA5 */
 
-/* function sp_event_proxy_init: 795 */
+/* function sp_event_proxy_init: 798 */
 
-/* function input_system_input_port_close: 10A3 */
+/* function input_system_input_port_close: 108D */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_previous_clock_tick
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_previous_clock_tick scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_previous_clock_tick 0x5D28
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_previous_clock_tick 0x5E28
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_previous_clock_tick 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_previous_clock_tick scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_previous_clock_tick 0x5D28
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_previous_clock_tick 0x5E28
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_previous_clock_tick 20
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_output
 #define HIVE_MEM_sp_output scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_output 0x3E24
+#define HIVE_ADDR_sp_output 0x3EFC
 #define HIVE_SIZE_sp_output 16
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_output scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_output 0x3E24
+#define HIVE_ADDR_sp_sp_output 0x3EFC
 #define HIVE_SIZE_sp_sp_output 16
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_sems_for_host2sp_buf_queues
 #define HIVE_MEM_ia_css_bufq_sp_sems_for_host2sp_buf_queues scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_sems_for_host2sp_buf_queues 0x5D3C
+#define HIVE_ADDR_ia_css_bufq_sp_sems_for_host2sp_buf_queues 0x5E3C
 #define HIVE_SIZE_ia_css_bufq_sp_sems_for_host2sp_buf_queues 800
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_sems_for_host2sp_buf_queues scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_sems_for_host2sp_buf_queues 0x5D3C
+#define HIVE_ADDR_sp_ia_css_bufq_sp_sems_for_host2sp_buf_queues 0x5E3C
 #define HIVE_SIZE_sp_ia_css_bufq_sp_sems_for_host2sp_buf_queues 800
 
-/* function pixelgen_prbs_config: E9B */
+/* function pixelgen_prbs_config: E85 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ISP_CTRL_BASE
@@ -1030,53 +1030,53 @@
 #define HIVE_ADDR_sp_INPUT_FORMATTER_BASE 0x4C
 #define HIVE_SIZE_sp_INPUT_FORMATTER_BASE 16
 
-/* function sp_dma_proxy_reset_channels: 3A09 */
+/* function sp_dma_proxy_reset_channels: 3A54 */
 
-/* function ia_css_tagger_sp_update_size: 2FB1 */
+/* function ia_css_tagger_sp_update_size: 2FE9 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_host_sp_queue
 #define HIVE_MEM_ia_css_bufq_host_sp_queue scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_host_sp_queue 0x605C
+#define HIVE_ADDR_ia_css_bufq_host_sp_queue 0x615C
 #define HIVE_SIZE_ia_css_bufq_host_sp_queue 2008
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_host_sp_queue scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_host_sp_queue 0x605C
+#define HIVE_ADDR_sp_ia_css_bufq_host_sp_queue 0x615C
 #define HIVE_SIZE_sp_ia_css_bufq_host_sp_queue 2008
 
-/* function thread_fiber_sp_create: 144C */
+/* function thread_fiber_sp_create: 1436 */
 
-/* function ia_css_dmaproxy_sp_set_increments: 38B7 */
+/* function ia_css_dmaproxy_sp_set_increments: 3902 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_writing_cb_frame
 #define HIVE_MEM_sem_for_writing_cb_frame scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_writing_cb_frame 0x56EC
+#define HIVE_ADDR_sem_for_writing_cb_frame 0x57EC
 #define HIVE_SIZE_sem_for_writing_cb_frame 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_writing_cb_frame scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_writing_cb_frame 0x56EC
+#define HIVE_ADDR_sp_sem_for_writing_cb_frame 0x57EC
 #define HIVE_SIZE_sp_sem_for_writing_cb_frame 20
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_writing_cb_param
 #define HIVE_MEM_sem_for_writing_cb_param scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_writing_cb_param 0x5700
+#define HIVE_ADDR_sem_for_writing_cb_param 0x5800
 #define HIVE_SIZE_sem_for_writing_cb_param 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_writing_cb_param scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_writing_cb_param 0x5700
+#define HIVE_ADDR_sp_sem_for_writing_cb_param 0x5800
 #define HIVE_SIZE_sp_sem_for_writing_cb_param 20
 
-/* function pixelgen_tpg_is_done: F15 */
+/* function pixelgen_tpg_is_done: EFF */
 
-/* function ia_css_isys_stream_capture_indication: 5C0D */
+/* function ia_css_isys_stream_capture_indication: 5C59 */
 
 /* function sp_start_isp_entry: 392 */
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -1086,51 +1086,51 @@
 #endif
 #define HIVE_ADDR_sp_sp_start_isp_entry 0x392
 
-/* function ia_css_tagger_buf_sp_unmark_all: 31C9 */
+/* function ia_css_tagger_buf_sp_unmark_all: 3201 */
 
-/* function ia_css_tagger_buf_sp_unmark_from_start: 320A */
+/* function ia_css_tagger_buf_sp_unmark_from_start: 3242 */
 
-/* function ia_css_dmaproxy_sp_channel_acquire: 3A35 */
+/* function ia_css_dmaproxy_sp_channel_acquire: 3A80 */
 
-/* function ia_css_rmgr_sp_add_num_vbuf: 60DB */
+/* function ia_css_rmgr_sp_add_num_vbuf: 6127 */
 
-/* function ibuf_ctrl_config: D93 */
+/* function ibuf_ctrl_config: D7D */
 
-/* function ia_css_isys_stream_stop: 5C85 */
+/* function ia_css_isys_stream_stop: 5CD1 */
 
-/* function __ia_css_dmaproxy_sp_wait_for_ack_text: 3721 */
+/* function __ia_css_dmaproxy_sp_wait_for_ack_text: 376C */
 
-/* function ia_css_bufq_sp_is_dynamic_buffer: 360A */
+/* function ia_css_bufq_sp_is_dynamic_buffer: 3655 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_group
 #define HIVE_MEM_sp_group scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_group 0x3E34
-#define HIVE_SIZE_sp_group 6116
+#define HIVE_ADDR_sp_group 0x3F0C
+#define HIVE_SIZE_sp_group 6156
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_group scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_group 0x3E34
-#define HIVE_SIZE_sp_sp_group 6116
+#define HIVE_ADDR_sp_sp_group 0x3F0C
+#define HIVE_SIZE_sp_sp_group 6156
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_event_proxy_thread
 #define HIVE_MEM_sp_event_proxy_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_event_proxy_thread 0x58EC
+#define HIVE_ADDR_sp_event_proxy_thread 0x59EC
 #define HIVE_SIZE_sp_event_proxy_thread 68
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_event_proxy_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_event_proxy_thread 0x58EC
+#define HIVE_ADDR_sp_sp_event_proxy_thread 0x59EC
 #define HIVE_SIZE_sp_sp_event_proxy_thread 68
 
-/* function ia_css_thread_sp_kill: 137A */
+/* function ia_css_thread_sp_kill: 1364 */
 
-/* function ia_css_tagger_sp_create: 2F74 */
+/* function ia_css_tagger_sp_create: 2FAC */
 
-/* function tmpmem_acquire_dmem: 6188 */
+/* function tmpmem_acquire_dmem: 61D4 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_MMU_BASE
@@ -1144,29 +1144,29 @@
 #define HIVE_ADDR_sp_MMU_BASE 0x24
 #define HIVE_SIZE_sp_MMU_BASE 8
 
-/* function ia_css_dmaproxy_sp_channel_release: 3A21 */
+/* function ia_css_dmaproxy_sp_channel_release: 3A6C */
 
-/* function pixelgen_prbs_run: E89 */
+/* function pixelgen_prbs_run: E73 */
 
-/* function ia_css_dmaproxy_sp_is_idle: 3A01 */
+/* function ia_css_dmaproxy_sp_is_idle: 3A4C */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_qos_start
 #define HIVE_MEM_sem_for_qos_start scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_qos_start 0x5714
+#define HIVE_ADDR_sem_for_qos_start 0x5814
 #define HIVE_SIZE_sem_for_qos_start 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_qos_start scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_qos_start 0x5714
+#define HIVE_ADDR_sp_sem_for_qos_start 0x5814
 #define HIVE_SIZE_sp_sem_for_qos_start 20
 
-/* function isp_hmem_load: B6B */
+/* function isp_hmem_load: B55 */
 
-/* function ia_css_eventq_sp_send: 3A77 */
+/* function ia_css_eventq_sp_send: 3AC2 */
 
-/* function ia_css_tagger_buf_sp_unlock_from_start: 313F */
+/* function ia_css_tagger_buf_sp_unlock_from_start: 3177 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_debug_buffer_ddr_address
@@ -1180,33 +1180,33 @@
 #define HIVE_ADDR_sp_debug_buffer_ddr_address 0xBC
 #define HIVE_SIZE_sp_debug_buffer_ddr_address 4
 
-/* function sp_isys_copy_request: 6E0 */
+/* function sp_isys_copy_request: 6E3 */
 
-/* function ia_css_rmgr_sp_refcount_retain_vbuf: 5F73 */
+/* function ia_css_rmgr_sp_refcount_retain_vbuf: 5FBF */
 
-/* function ia_css_thread_sp_set_priority: 1372 */
+/* function ia_css_thread_sp_set_priority: 135C */
 
-/* function sizeof_hmem: C12 */
+/* function sizeof_hmem: BFC */
 
-/* function input_system_channel_open: 1249 */
+/* function input_system_channel_open: 1233 */
 
-/* function pixelgen_tpg_stop: F03 */
+/* function pixelgen_tpg_stop: EED */
 
-/* function tmpmem_release_dmem: 6177 */
+/* function tmpmem_release_dmem: 61C3 */
 
-/* function ia_css_dmaproxy_sp_set_width_exception: 38A2 */
+/* function ia_css_dmaproxy_sp_set_width_exception: 38ED */
 
-/* function sp_event_assert: 91C */
+/* function sp_event_assert: 91F */
 
-/* function ia_css_flash_sp_init_internal_params: 329C */
+/* function ia_css_flash_sp_init_internal_params: 32D4 */
 
-/* function ia_css_tagger_buf_sp_pop_unmarked_and_unlocked: 2FCF */
+/* function ia_css_tagger_buf_sp_pop_unmarked_and_unlocked: 3007 */
 
-/* function __modu: 6477 */
+/* function __modu: 64C3 */
 
-/* function ia_css_dmaproxy_sp_init_isp_vector: 3727 */
+/* function ia_css_dmaproxy_sp_init_isp_vector: 3772 */
 
-/* function input_system_channel_transfer: 1232 */
+/* function input_system_channel_transfer: 121C */
 
 /* function isp_vamem_store: 0 */
 
@@ -1222,20 +1222,20 @@
 #define HIVE_ADDR_sp_GDC_BASE 0x44
 #define HIVE_SIZE_sp_GDC_BASE 8
 
-/* function ia_css_queue_local_init: 50C1 */
+/* function ia_css_queue_local_init: 510E */
 
-/* function sp_event_proxy_callout_func: 6544 */
+/* function sp_event_proxy_callout_func: 6590 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_thread_sp_num_ready_threads
 #define HIVE_MEM_ia_css_thread_sp_num_ready_threads scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_thread_sp_num_ready_threads 0x5934
+#define HIVE_ADDR_ia_css_thread_sp_num_ready_threads 0x5A34
 #define HIVE_SIZE_ia_css_thread_sp_num_ready_threads 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_thread_sp_num_ready_threads scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_thread_sp_num_ready_threads 0x5934
+#define HIVE_ADDR_sp_ia_css_thread_sp_num_ready_threads 0x5A34
 #define HIVE_SIZE_sp_ia_css_thread_sp_num_ready_threads 4
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -1250,29 +1250,29 @@
 #define HIVE_ADDR_sp_sp_threads_stack_size 0x180
 #define HIVE_SIZE_sp_sp_threads_stack_size 24
 
-/* function ia_css_ispctrl_sp_isp_done_row_striping: 43EF */
+/* function ia_css_ispctrl_sp_isp_done_row_striping: 443C */
 
-/* function __ia_css_virtual_isys_sp_isr_text: 5A9C */
+/* function __ia_css_virtual_isys_sp_isr_text: 5AE8 */
 
-/* function ia_css_queue_dequeue: 4F3F */
+/* function ia_css_queue_dequeue: 4F8C */
 
-/* function ia_css_dmaproxy_sp_configure_channel: 69A4 */
+/* function ia_css_dmaproxy_sp_configure_channel: 69F0 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_current_thread_fiber_sp
 #define HIVE_MEM_current_thread_fiber_sp scalar_processor_2400_dmem
-#define HIVE_ADDR_current_thread_fiber_sp 0x593C
+#define HIVE_ADDR_current_thread_fiber_sp 0x5A3C
 #define HIVE_SIZE_current_thread_fiber_sp 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_current_thread_fiber_sp scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_current_thread_fiber_sp 0x593C
+#define HIVE_ADDR_sp_current_thread_fiber_sp 0x5A3C
 #define HIVE_SIZE_sp_current_thread_fiber_sp 4
 
-/* function ia_css_circbuf_pop: 1674 */
+/* function ia_css_circbuf_pop: 165E */
 
-/* function memset: 64F6 */
+/* function memset: 6542 */
 
 /* function irq_raise_set_token: B6 */
 
@@ -1288,89 +1288,89 @@
 #define HIVE_ADDR_sp_GPIO_BASE 0x3C
 #define HIVE_SIZE_sp_GPIO_BASE 4
 
-/* function pixelgen_prbs_stop: E77 */
+/* function pixelgen_prbs_stop: E61 */
 
-/* function ia_css_pipeline_acc_stage_enable: 1EEE */
+/* function ia_css_pipeline_acc_stage_enable: 1EFB */
 
-/* function ia_css_tagger_sp_unlock_exp_id: 27F1 */
+/* function ia_css_tagger_sp_unlock_exp_id: 2823 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_ph
 #define HIVE_MEM_isp_ph scalar_processor_2400_dmem
-#define HIVE_ADDR_isp_ph 0x7208
+#define HIVE_ADDR_isp_ph 0x7308
 #define HIVE_SIZE_isp_ph 28
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isp_ph scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_ph 0x7208
+#define HIVE_ADDR_sp_isp_ph 0x7308
 #define HIVE_SIZE_sp_isp_ph 28
 
-/* function ia_css_ispctrl_sp_init_ds: 3D34 */
+/* function ia_css_ispctrl_sp_init_ds: 3D7F */
 
-/* function get_xmem_base_addr_raw: 40C4 */
+/* function get_xmem_base_addr_raw: 410F */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cbs_param
 #define HIVE_MEM_sp_all_cbs_param scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_all_cbs_param 0x5728
+#define HIVE_ADDR_sp_all_cbs_param 0x5828
 #define HIVE_SIZE_sp_all_cbs_param 16
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_all_cbs_param scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_all_cbs_param 0x5728
+#define HIVE_ADDR_sp_sp_all_cbs_param 0x5828
 #define HIVE_SIZE_sp_sp_all_cbs_param 16
 
-/* function pixelgen_tpg_config: F38 */
+/* function pixelgen_tpg_config: F22 */
 
-/* function ia_css_circbuf_create: 16C2 */
+/* function ia_css_circbuf_create: 16AC */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_sp_group
 #define HIVE_MEM_sem_for_sp_group scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_sp_group 0x5738
+#define HIVE_ADDR_sem_for_sp_group 0x5838
 #define HIVE_SIZE_sem_for_sp_group 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_sp_group scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_sp_group 0x5738
+#define HIVE_ADDR_sp_sem_for_sp_group 0x5838
 #define HIVE_SIZE_sp_sem_for_sp_group 20
 
-/* function csi_rx_frontend_run: C2A */
+/* function csi_rx_frontend_run: C14 */
 
-/* function ia_css_framebuf_sp_wait_for_in_frame: 6106 */
+/* function ia_css_framebuf_sp_wait_for_in_frame: 6152 */
 
-/* function ia_css_isys_stream_open: 5D3A */
+/* function ia_css_isys_stream_open: 5D86 */
 
-/* function ia_css_sp_rawcopy_tag_frame: 58C8 */
+/* function ia_css_sp_rawcopy_tag_frame: 5914 */
 
-/* function input_system_channel_configure: 1265 */
+/* function input_system_channel_configure: 124F */
 
-/* function isp_hmem_clear: B3B */
+/* function isp_hmem_clear: B25 */
 
-/* function ia_css_framebuf_sp_release_in_frame: 6149 */
+/* function ia_css_framebuf_sp_release_in_frame: 6195 */
 
-/* function stream2mmio_config: E23 */
+/* function stream2mmio_config: E0D */
 
-/* function ia_css_ispctrl_sp_start_binary: 3BB3 */
+/* function ia_css_ispctrl_sp_start_binary: 3BFE */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_h_pipe_private_ddr_ptrs
 #define HIVE_MEM_ia_css_bufq_sp_h_pipe_private_ddr_ptrs scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 0x6834
+#define HIVE_ADDR_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 0x6934
 #define HIVE_SIZE_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 0x6834
+#define HIVE_ADDR_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 0x6934
 #define HIVE_SIZE_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 20
 
-/* function ia_css_eventq_sp_recv: 3A49 */
+/* function ia_css_eventq_sp_recv: 3A94 */
 
-/* function csi_rx_frontend_config: C82 */
+/* function csi_rx_frontend_config: C6C */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_pool
@@ -1384,9 +1384,9 @@
 #define HIVE_ADDR_sp_isp_pool 0x370
 #define HIVE_SIZE_sp_isp_pool 4
 
-/* function ia_css_rmgr_sp_rel_gen: 5E40 */
+/* function ia_css_rmgr_sp_rel_gen: 5E8C */
 
-/* function css_get_frame_processing_time_end: 27BC */
+/* function css_get_frame_processing_time_end: 27EE */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_event_any_pending_mask
@@ -1400,47 +1400,47 @@
 #define HIVE_ADDR_sp_event_any_pending_mask 0x388
 #define HIVE_SIZE_sp_event_any_pending_mask 8
 
-/* function ia_css_pipeline_sp_get_pipe_io_status: 1A87 */
+/* function ia_css_pipeline_sp_get_pipe_io_status: 1A8A */
 
 /* function sh_css_decode_tag_descr: 352 */
 
 /* function debug_enqueue_isp: 27B */
 
-/* function ia_css_spctrl_sp_uninit: 5A52 */
+/* function ia_css_spctrl_sp_uninit: 5A9E */
 
-/* function csi_rx_backend_run: C70 */
+/* function csi_rx_backend_run: C5A */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_dis_bufs
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_dis_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_dis_bufs 0x6848
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_dis_bufs 0x6948
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_dis_bufs 140
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_dis_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_dis_bufs 0x6848
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_dis_bufs 0x6948
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_dis_bufs 140
 
-/* function ia_css_tagger_buf_sp_lock_from_start: 3161 */
+/* function ia_css_tagger_buf_sp_lock_from_start: 3199 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_isp_idle
 #define HIVE_MEM_sem_for_isp_idle scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_isp_idle 0x574C
+#define HIVE_ADDR_sem_for_isp_idle 0x584C
 #define HIVE_SIZE_sem_for_isp_idle 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_isp_idle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_isp_idle 0x574C
+#define HIVE_ADDR_sp_sem_for_isp_idle 0x584C
 #define HIVE_SIZE_sp_sem_for_isp_idle 20
 
-/* function ia_css_dmaproxy_sp_write_byte_addr: 3784 */
+/* function ia_css_dmaproxy_sp_write_byte_addr: 37CF */
 
-/* function ia_css_dmaproxy_sp_init: 36FB */
+/* function ia_css_dmaproxy_sp_init: 3746 */
 
-/* function ia_css_bufq_sp_release_dynamic_buf_clock_tick: 332E */
+/* function ia_css_bufq_sp_release_dynamic_buf_clock_tick: 3366 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ISP_VAMEM_BASE
@@ -1454,49 +1454,49 @@
 #define HIVE_ADDR_sp_ISP_VAMEM_BASE 0x14
 #define HIVE_SIZE_sp_ISP_VAMEM_BASE 12
 
-/* function input_system_channel_sync: 11AC */
+/* function input_system_channel_sync: 1196 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_rawcopy_sp_tagger
 #define HIVE_MEM_ia_css_rawcopy_sp_tagger scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_rawcopy_sp_tagger 0x71D4
+#define HIVE_ADDR_ia_css_rawcopy_sp_tagger 0x72D4
 #define HIVE_SIZE_ia_css_rawcopy_sp_tagger 24
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_rawcopy_sp_tagger scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_rawcopy_sp_tagger 0x71D4
+#define HIVE_ADDR_sp_ia_css_rawcopy_sp_tagger 0x72D4
 #define HIVE_SIZE_sp_ia_css_rawcopy_sp_tagger 24
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_exp_ids
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_exp_ids scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_exp_ids 0x68D4
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_exp_ids 0x69D4
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_exp_ids 70
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_exp_ids scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_exp_ids 0x68D4
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_exp_ids 0x69D4
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_exp_ids 70
 
-/* function ia_css_queue_item_load: 51B3 */
+/* function ia_css_queue_item_load: 5200 */
 
-/* function ia_css_spctrl_sp_get_state: 5A3D */
+/* function ia_css_spctrl_sp_get_state: 5A89 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_callout_sp_thread
 #define HIVE_MEM_callout_sp_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_callout_sp_thread 0x5930
+#define HIVE_ADDR_callout_sp_thread 0x5A30
 #define HIVE_SIZE_callout_sp_thread 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_callout_sp_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_callout_sp_thread 0x5930
+#define HIVE_ADDR_sp_callout_sp_thread 0x5A30
 #define HIVE_SIZE_sp_callout_sp_thread 4
 
-/* function thread_fiber_sp_init: 14D3 */
+/* function thread_fiber_sp_init: 14BD */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_SP_PMEM_BASE
@@ -1513,50 +1513,50 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_isp_input_stream_format
 #define HIVE_MEM_sp_isp_input_stream_format scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_input_stream_format 0x3D24
+#define HIVE_ADDR_sp_isp_input_stream_format 0x3DFC
 #define HIVE_SIZE_sp_isp_input_stream_format 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_isp_input_stream_format scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_isp_input_stream_format 0x3D24
+#define HIVE_ADDR_sp_sp_isp_input_stream_format 0x3DFC
 #define HIVE_SIZE_sp_sp_isp_input_stream_format 20
 
-/* function __mod: 6463 */
+/* function __mod: 64AF */
 
-/* function ia_css_dmaproxy_sp_init_dmem_channel: 37E5 */
+/* function ia_css_dmaproxy_sp_init_dmem_channel: 3830 */
 
-/* function ia_css_thread_sp_join: 13A3 */
+/* function ia_css_thread_sp_join: 138D */
 
-/* function ia_css_dmaproxy_sp_add_command: 6A83 */
+/* function ia_css_dmaproxy_sp_add_command: 6ACF */
 
-/* function ia_css_sp_metadata_thread_func: 5A36 */
+/* function ia_css_sp_metadata_thread_func: 5A82 */
 
-/* function __sp_event_proxy_func_critical: 6531 */
+/* function __sp_event_proxy_func_critical: 657D */
 
-/* function ia_css_pipeline_sp_wait_for_isys_stream_N: 5BAA */
+/* function ia_css_pipeline_sp_wait_for_isys_stream_N: 5BF6 */
 
-/* function ia_css_sp_metadata_wait: 5A2F */
+/* function ia_css_sp_metadata_wait: 5A7B */
 
-/* function ia_css_circbuf_peek_from_start: 15A8 */
+/* function ia_css_circbuf_peek_from_start: 1592 */
 
-/* function ia_css_event_sp_encode: 3AD4 */
+/* function ia_css_event_sp_encode: 3B1F */
 
-/* function ia_css_thread_sp_run: 1416 */
+/* function ia_css_thread_sp_run: 1400 */
 
-/* function sp_isys_copy_func: 615 */
+/* function sp_isys_copy_func: 618 */
 
-/* function ia_css_sp_isp_param_init_isp_memories: 4C3C */
+/* function ia_css_sp_isp_param_init_isp_memories: 4C89 */
 
-/* function register_isr: 914 */
+/* function register_isr: 917 */
 
 /* function irq_raise: C8 */
 
-/* function ia_css_dmaproxy_sp_mmu_invalidate: 36C2 */
+/* function ia_css_dmaproxy_sp_mmu_invalidate: 370D */
 
-/* function csi_rx_backend_disable: C3C */
+/* function csi_rx_backend_disable: C26 */
 
-/* function pipeline_sp_initialize_stage: 201B */
+/* function pipeline_sp_initialize_stage: 202C */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_N_CSI_RX_FE_CTRL_DLANES
@@ -1570,15 +1570,15 @@
 #define HIVE_ADDR_sp_N_CSI_RX_FE_CTRL_DLANES 0x1C8
 #define HIVE_SIZE_sp_N_CSI_RX_FE_CTRL_DLANES 12
 
-/* function ia_css_dmaproxy_sp_read_byte_addr_mmio: 6976 */
+/* function ia_css_dmaproxy_sp_read_byte_addr_mmio: 69C2 */
 
-/* function ia_css_ispctrl_sp_done_ds: 3D1B */
+/* function ia_css_ispctrl_sp_done_ds: 3D66 */
 
-/* function csi_rx_backend_config: C93 */
+/* function csi_rx_backend_config: C7D */
 
-/* function ia_css_sp_isp_param_get_mem_inits: 4C17 */
+/* function ia_css_sp_isp_param_get_mem_inits: 4C64 */
 
-/* function ia_css_parambuf_sp_init_buffer_queues: 1A6D */
+/* function ia_css_parambuf_sp_init_buffer_queues: 1A70 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_vbuf_pfp_spref
@@ -1607,132 +1607,132 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_frames
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_frames scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_frames 0x691C
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_frames 0x6A1C
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_frames 280
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_frames scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_frames 0x691C
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_frames 0x6A1C
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_frames 280
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp2host_buffer_queue_handle
 #define HIVE_MEM_sp2host_buffer_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp2host_buffer_queue_handle 0x6A34
+#define HIVE_ADDR_sp2host_buffer_queue_handle 0x6B34
 #define HIVE_SIZE_sp2host_buffer_queue_handle 96
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp2host_buffer_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp2host_buffer_queue_handle 0x6A34
+#define HIVE_ADDR_sp_sp2host_buffer_queue_handle 0x6B34
 #define HIVE_SIZE_sp_sp2host_buffer_queue_handle 96
 
-/* function ia_css_ispctrl_sp_init_isp_vars: 4936 */
+/* function ia_css_ispctrl_sp_init_isp_vars: 4983 */
 
-/* function ia_css_isys_stream_start: 5C67 */
+/* function ia_css_isys_stream_start: 5CB3 */
 
-/* function sp_warning: 946 */
+/* function sp_warning: 949 */
 
-/* function ia_css_rmgr_sp_vbuf_enqueue: 5F33 */
+/* function ia_css_rmgr_sp_vbuf_enqueue: 5F7F */
 
-/* function ia_css_tagger_sp_tag_exp_id: 28E8 */
+/* function ia_css_tagger_sp_tag_exp_id: 291A */
 
-/* function ia_css_pipeline_sp_sfi_release_current_frame: 265E */
+/* function ia_css_pipeline_sp_sfi_release_current_frame: 2670 */
 
-/* function ia_css_dmaproxy_sp_write: 379B */
+/* function ia_css_dmaproxy_sp_write: 37E6 */
 
-/* function ia_css_isys_stream_start_async: 5CE1 */
+/* function ia_css_isys_stream_start_async: 5D2D */
 
-/* function ia_css_parambuf_sp_release_in_param: 18ED */
+/* function ia_css_parambuf_sp_release_in_param: 18F0 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_irq_sw_interrupt_token
 #define HIVE_MEM_irq_sw_interrupt_token scalar_processor_2400_dmem
-#define HIVE_ADDR_irq_sw_interrupt_token 0x3D20
+#define HIVE_ADDR_irq_sw_interrupt_token 0x3DF8
 #define HIVE_SIZE_irq_sw_interrupt_token 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_irq_sw_interrupt_token scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_irq_sw_interrupt_token 0x3D20
+#define HIVE_ADDR_sp_irq_sw_interrupt_token 0x3DF8
 #define HIVE_SIZE_sp_irq_sw_interrupt_token 4
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_isp_addresses
 #define HIVE_MEM_sp_isp_addresses scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_addresses 0x6E84
+#define HIVE_ADDR_sp_isp_addresses 0x6F84
 #define HIVE_SIZE_sp_isp_addresses 172
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_isp_addresses scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_isp_addresses 0x6E84
+#define HIVE_ADDR_sp_sp_isp_addresses 0x6F84
 #define HIVE_SIZE_sp_sp_isp_addresses 172
 
-/* function ia_css_rmgr_sp_acq_gen: 5E58 */
+/* function ia_css_rmgr_sp_acq_gen: 5EA4 */
 
-/* function input_system_input_port_open: 10F5 */
+/* function input_system_input_port_open: 10DF */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isps
 #define HIVE_MEM_isps scalar_processor_2400_dmem
-#define HIVE_ADDR_isps 0x7224
+#define HIVE_ADDR_isps 0x7324
 #define HIVE_SIZE_isps 28
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isps scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isps 0x7224
+#define HIVE_ADDR_sp_isps 0x7324
 #define HIVE_SIZE_sp_isps 28
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_host_sp_queues_initialized
 #define HIVE_MEM_host_sp_queues_initialized scalar_processor_2400_dmem
-#define HIVE_ADDR_host_sp_queues_initialized 0x3D38
+#define HIVE_ADDR_host_sp_queues_initialized 0x3E10
 #define HIVE_SIZE_host_sp_queues_initialized 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_host_sp_queues_initialized scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_host_sp_queues_initialized 0x3D38
+#define HIVE_ADDR_sp_host_sp_queues_initialized 0x3E10
 #define HIVE_SIZE_sp_host_sp_queues_initialized 4
 
-/* function ia_css_queue_uninit: 507F */
+/* function ia_css_queue_uninit: 50CC */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_ispctrl_sp_isp_started
 #define HIVE_MEM_ia_css_ispctrl_sp_isp_started scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_ispctrl_sp_isp_started 0x6B3C
+#define HIVE_ADDR_ia_css_ispctrl_sp_isp_started 0x6C3C
 #define HIVE_SIZE_ia_css_ispctrl_sp_isp_started 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_ispctrl_sp_isp_started scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_ispctrl_sp_isp_started 0x6B3C
+#define HIVE_ADDR_sp_ia_css_ispctrl_sp_isp_started 0x6C3C
 #define HIVE_SIZE_sp_ia_css_ispctrl_sp_isp_started 4
 
-/* function ia_css_bufq_sp_release_dynamic_buf: 3382 */
+/* function ia_css_bufq_sp_release_dynamic_buf: 33BA */
 
-/* function ia_css_dmaproxy_sp_set_height_exception: 3893 */
+/* function ia_css_dmaproxy_sp_set_height_exception: 38DE */
 
-/* function ia_css_dmaproxy_sp_init_vmem_channel: 3818 */
+/* function ia_css_dmaproxy_sp_init_vmem_channel: 3863 */
 
-/* function csi_rx_backend_stop: C5F */
+/* function csi_rx_backend_stop: C49 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_num_ready_threads
 #define HIVE_MEM_num_ready_threads scalar_processor_2400_dmem
-#define HIVE_ADDR_num_ready_threads 0x5938
+#define HIVE_ADDR_num_ready_threads 0x5A38
 #define HIVE_SIZE_num_ready_threads 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_num_ready_threads scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_num_ready_threads 0x5938
+#define HIVE_ADDR_sp_num_ready_threads 0x5A38
 #define HIVE_SIZE_sp_num_ready_threads 4
 
-/* function ia_css_dmaproxy_sp_write_byte_addr_mmio: 376D */
+/* function ia_css_dmaproxy_sp_write_byte_addr_mmio: 37B8 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_vbuf_spref
@@ -1746,57 +1746,57 @@
 #define HIVE_ADDR_sp_vbuf_spref 0x374
 #define HIVE_SIZE_sp_vbuf_spref 4
 
-/* function ia_css_queue_enqueue: 4FC9 */
+/* function ia_css_queue_enqueue: 5016 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_flash_sp_request
 #define HIVE_MEM_ia_css_flash_sp_request scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_flash_sp_request 0x59EC
+#define HIVE_ADDR_ia_css_flash_sp_request 0x5AEC
 #define HIVE_SIZE_ia_css_flash_sp_request 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_flash_sp_request scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_flash_sp_request 0x59EC
+#define HIVE_ADDR_sp_ia_css_flash_sp_request 0x5AEC
 #define HIVE_SIZE_sp_ia_css_flash_sp_request 4
 
-/* function ia_css_dmaproxy_sp_vmem_write: 373E */
+/* function ia_css_dmaproxy_sp_vmem_write: 3789 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_tagger_frames
 #define HIVE_MEM_tagger_frames scalar_processor_2400_dmem
-#define HIVE_ADDR_tagger_frames 0x5940
+#define HIVE_ADDR_tagger_frames 0x5A40
 #define HIVE_SIZE_tagger_frames 168
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_tagger_frames scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_tagger_frames 0x5940
+#define HIVE_ADDR_sp_tagger_frames 0x5A40
 #define HIVE_SIZE_sp_tagger_frames 168
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_reading_if
 #define HIVE_MEM_sem_for_reading_if scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_reading_if 0x5760
+#define HIVE_ADDR_sem_for_reading_if 0x5860
 #define HIVE_SIZE_sem_for_reading_if 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_reading_if scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_reading_if 0x5760
+#define HIVE_ADDR_sp_sem_for_reading_if 0x5860
 #define HIVE_SIZE_sp_sem_for_reading_if 20
 
-/* function sp_generate_interrupts: 9C5 */
+/* function sp_generate_interrupts: 9C8 */
 
-/* function ia_css_pipeline_sp_start: 1F20 */
+/* function ia_css_pipeline_sp_start: 1F2F */
 
-/* function csi_rx_backend_enable: C4D */
+/* function csi_rx_backend_enable: C37 */
 
-/* function ia_css_sp_rawcopy_init: 54EC */
+/* function ia_css_sp_rawcopy_init: 5539 */
 
-/* function input_system_input_port_configure: 1147 */
+/* function input_system_input_port_configure: 1131 */
 
-/* function tmr_clock_read: B22 */
+/* function tmr_clock_read: 16D9 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ISP_BAMEM_BASE
@@ -1813,16 +1813,16 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_sems_for_sp2host_buf_queues
 #define HIVE_MEM_ia_css_bufq_sp_sems_for_sp2host_buf_queues scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_sems_for_sp2host_buf_queues 0x6A94
+#define HIVE_ADDR_ia_css_bufq_sp_sems_for_sp2host_buf_queues 0x6B94
 #define HIVE_SIZE_ia_css_bufq_sp_sems_for_sp2host_buf_queues 160
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues 0x6A94
+#define HIVE_ADDR_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues 0x6B94
 #define HIVE_SIZE_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues 160
 
-/* function isys2401_dma_config_legacy: DE8 */
+/* function isys2401_dma_config_legacy: DD2 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ibuf_ctrl_master_ports
@@ -1836,45 +1836,45 @@
 #define HIVE_ADDR_sp_ibuf_ctrl_master_ports 0x20C
 #define HIVE_SIZE_sp_ibuf_ctrl_master_ports 12
 
-/* function css_get_frame_processing_time_start: 27C4 */
+/* function css_get_frame_processing_time_start: 27F6 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cbs_frame
 #define HIVE_MEM_sp_all_cbs_frame scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_all_cbs_frame 0x5774
+#define HIVE_ADDR_sp_all_cbs_frame 0x5874
 #define HIVE_SIZE_sp_all_cbs_frame 16
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_all_cbs_frame scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_all_cbs_frame 0x5774
+#define HIVE_ADDR_sp_sp_all_cbs_frame 0x5874
 #define HIVE_SIZE_sp_sp_all_cbs_frame 16
 
-/* function ia_css_virtual_isys_sp_isr: 6A99 */
+/* function ia_css_virtual_isys_sp_isr: 6AE5 */
 
-/* function thread_sp_queue_print: 1433 */
+/* function thread_sp_queue_print: 141D */
 
-/* function sp_notify_eof: 971 */
+/* function sp_notify_eof: 974 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_str2mem
 #define HIVE_MEM_sem_for_str2mem scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_str2mem 0x5784
+#define HIVE_ADDR_sem_for_str2mem 0x5884
 #define HIVE_SIZE_sem_for_str2mem 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_str2mem scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_str2mem 0x5784
+#define HIVE_ADDR_sp_sem_for_str2mem 0x5884
 #define HIVE_SIZE_sp_sem_for_str2mem 20
 
-/* function ia_css_tagger_buf_sp_is_marked_from_start: 31A6 */
+/* function ia_css_tagger_buf_sp_is_marked_from_start: 31DE */
 
-/* function ia_css_bufq_sp_acquire_dynamic_buf: 3537 */
+/* function ia_css_bufq_sp_acquire_dynamic_buf: 356F */
 
-/* function ia_css_pipeline_sp_sfi_mode_is_enabled: 27B1 */
+/* function ia_css_pipeline_sp_sfi_mode_is_enabled: 27C4 */
 
-/* function ia_css_circbuf_destroy: 16B9 */
+/* function ia_css_circbuf_destroy: 16A3 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ISP_PMEM_BASE
@@ -1888,39 +1888,39 @@
 #define HIVE_ADDR_sp_ISP_PMEM_BASE 0xC
 #define HIVE_SIZE_sp_ISP_PMEM_BASE 4
 
-/* function ia_css_sp_isp_param_mem_load: 4BAA */
+/* function ia_css_sp_isp_param_mem_load: 4BF7 */
 
-/* function __div: 641B */
+/* function __div: 6467 */
 
-/* function ia_css_rmgr_sp_refcount_release_vbuf: 5F52 */
+/* function ia_css_rmgr_sp_refcount_release_vbuf: 5F9E */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_flash_sp_in_use
 #define HIVE_MEM_ia_css_flash_sp_in_use scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_flash_sp_in_use 0x59F0
+#define HIVE_ADDR_ia_css_flash_sp_in_use 0x5AF0
 #define HIVE_SIZE_ia_css_flash_sp_in_use 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_flash_sp_in_use scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_flash_sp_in_use 0x59F0
+#define HIVE_ADDR_sp_ia_css_flash_sp_in_use 0x5AF0
 #define HIVE_SIZE_sp_ia_css_flash_sp_in_use 4
 
-/* function ia_css_thread_sem_sp_wait: 66E1 */
+/* function ia_css_thread_sem_sp_wait: 672D */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_sleep_mode
 #define HIVE_MEM_sp_sleep_mode scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sleep_mode 0x3D3C
+#define HIVE_ADDR_sp_sleep_mode 0x3E14
 #define HIVE_SIZE_sp_sleep_mode 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_sleep_mode scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_sleep_mode 0x3D3C
+#define HIVE_ADDR_sp_sp_sleep_mode 0x3E14
 #define HIVE_SIZE_sp_sp_sleep_mode 4
 
-/* function ia_css_tagger_buf_sp_push: 30BF */
+/* function ia_css_tagger_buf_sp_push: 30F7 */
 
 /* function mmu_invalidate_cache: D3 */
 
@@ -1936,21 +1936,21 @@
 #define HIVE_ADDR_sp_sp_max_cb_elems 0x14C
 #define HIVE_SIZE_sp_sp_max_cb_elems 8
 
-/* function ia_css_queue_remote_init: 50A1 */
+/* function ia_css_queue_remote_init: 50EE */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_stop_req
 #define HIVE_MEM_isp_stop_req scalar_processor_2400_dmem
-#define HIVE_ADDR_isp_stop_req 0x5618
+#define HIVE_ADDR_isp_stop_req 0x5718
 #define HIVE_SIZE_isp_stop_req 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isp_stop_req scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_stop_req 0x5618
+#define HIVE_ADDR_sp_isp_stop_req 0x5718
 #define HIVE_SIZE_sp_isp_stop_req 4
 
-/* function ia_css_pipeline_sp_sfi_request_next_frame: 2674 */
+/* function ia_css_pipeline_sp_sfi_request_next_frame: 2686 */
 
 #define HIVE_ICACHE_sp_critical_SEGMENT_START 0
 #define HIVE_ICACHE_sp_critical_NUM_SEGMENTS  1
-- 
1.9.1

