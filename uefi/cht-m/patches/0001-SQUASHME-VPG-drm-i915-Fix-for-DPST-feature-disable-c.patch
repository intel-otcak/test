From a49856afde19b190db15d3be78521f4415e60ac6 Mon Sep 17 00:00:00 2001
Message-Id: <a49856afde19b190db15d3be78521f4415e60ac6.1440052897.git.chang-joon.lee@intel.com>
From: Praveen Paneri <praveen.paneri@intel.com>
Date: Fri, 14 Aug 2015 12:19:03 +0530
Subject: [PATCH] SQUASHME! [VPG]: drm/i915: Fix for DPST feature disable
 causing suspend failure

This patch fixes the hang issue on system suspend when the DPST
feature is disabled by the user mode.

The register addresses of DPST control registers are different for main
core and lower power cores. To maintain the same behavior across
platforms, common variable is used to hold the register addresses of the
control registers. This variable is populated with the correct register
addresses based on the platform used, during the DPST initialization.

When the property to disable the DPST feature is set, usermode code
ignores calling the kernel init function. The variable to store the
register is not updated. Since the variables is not updated,
access to variables storing the register address is causing the hang
in the suspend path.

This patch adds a check to verify if the kernel is initialized from the
user mode before accessing the registers through the register variables.

This commit can be merged with the following commit which enables DPST.
  Author: sgurram <sudheer.gurram@intel.com>
  Date:   Mon Jan 20 19:00:09 2014 +0530
  Subject: MUST_REBASE [VPG]: drm/i915: Enable DPST on BYT
  Change-Id: I01c036f088ae4b5f65505064a589c16a33642d62

Change-Id: I5c459e6a1dea97fb333d55113e5d792533fb9fd6
Tracked-On: Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-42882
Signed-off-by: sudheer gurram <sudheer.gurram@intel.com>
Signed-off-by: Praveen Paneri <praveen.paneri@intel.com>
---
 drivers/gpu/drm/i915/i915_suspend.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/i915/i915_suspend.c b/drivers/gpu/drm/i915/i915_suspend.c
index 2729fb3..ddd0c86 100644
--- a/drivers/gpu/drm/i915/i915_suspend.c
+++ b/drivers/gpu/drm/i915/i915_suspend.c
@@ -192,6 +192,9 @@ static void i915_restore_vga(struct drm_device *dev)
 
 void i915_save_dpst_regs(struct drm_i915_private *dev_priv)
 {
+	if (!dev_priv->dpst.user_enable)
+		return;
+
 	dev_priv->regfile.saveBLM_HIST_GUARD = I915_READ(dev_priv->dpst.reg.blm_hist_guard);
 	dev_priv->regfile.saveBLM_HIST_CTL = I915_READ(dev_priv->dpst.reg.blm_hist_ctl);
 
@@ -203,6 +206,9 @@ void i915_save_dpst_regs(struct drm_i915_private *dev_priv)
 
 void i915_restore_dpst_regs(struct drm_i915_private *dev_priv)
 {
+        if (!dev_priv->dpst.user_enable)
+                return;
+
 	I915_WRITE(dev_priv->dpst.reg.blm_hist_guard, dev_priv->regfile.saveBLM_HIST_GUARD);
 	I915_WRITE(dev_priv->dpst.reg.blm_hist_ctl, dev_priv->regfile.saveBLM_HIST_CTL);
 }
@@ -323,7 +329,7 @@ static void i915_restore_display(struct drm_device *dev)
 		I915_WRITE(FBC_CONTROL, dev_priv->regfile.saveFBC_CONTROL);
 
 	if (I915_HAS_DPST(dev))
-			i915_restore_dpst_regs(dev_priv);
+		i915_restore_dpst_regs(dev_priv);
 
 	if (!drm_core_check_feature(dev, DRIVER_MODESET))
 		i915_restore_vga(dev);
-- 
1.9.1

