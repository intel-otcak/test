From 5dde9be0e55978dd1d3f88ac673c19e6e4afeff0 Mon Sep 17 00:00:00 2001
From: Chuanxiao Dong <chuanxiao.dong@intel.com>
Date: Mon, 18 May 2015 19:55:35 +0800
Subject: [PATCH] mmc: use async mode for MMC stack

Use async suspend/resume to improve the S3 resuming time

Change-Id: I34b67aa11ad0905c8232f4bd1c11e164e4a6ce05
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-17326
Signed-off-by: Chuanxiao Dong <chuanxiao.dong@intel.com>
Signed-off-by: Kumar P, Mahesh <mahesh.kumar.p@intel.com>
---
 drivers/mmc/card/block.c      |  3 +++
 drivers/mmc/core/host.c       |  3 +++
 drivers/mmc/host/sdhci-acpi.c |  3 +++
 drivers/mmc/host/sdhci.c      | 29 ++++++++++++++++-------------
 4 files changed, 25 insertions(+), 13 deletions(-)

diff --git a/drivers/mmc/card/block.c b/drivers/mmc/card/block.c
index b15573b72381..5bff8f1c7048 100644
--- a/drivers/mmc/card/block.c
+++ b/drivers/mmc/card/block.c
@@ -2950,6 +2950,9 @@ static int mmc_blk_probe(struct mmc_card *card)
 			goto out;
 	}
 
+	/* use async mode for suspend/resume */
+	device_enable_async_suspend(&card->dev);
+
 	pm_runtime_set_autosuspend_delay(&card->dev, 3000);
 	pm_runtime_use_autosuspend(&card->dev);
 
diff --git a/drivers/mmc/core/host.c b/drivers/mmc/core/host.c
index eb1d0394df77..1e322a9f6757 100644
--- a/drivers/mmc/core/host.c
+++ b/drivers/mmc/core/host.c
@@ -545,6 +545,9 @@ int mmc_add_host(struct mmc_host *host)
 	pm_suspend_ignore_children(&host->class_dev, true);
 	pm_runtime_enable(&host->class_dev);
 
+	/* async mode for suspend/resume */
+	device_enable_async_suspend(&host->class_dev);
+
 	mmc_start_host(host);
 	if (!(host->pm_flags & MMC_PM_IGNORE_PM_NOTIFY))
 		register_pm_notifier(&host->pm_notify);
diff --git a/drivers/mmc/host/sdhci-acpi.c b/drivers/mmc/host/sdhci-acpi.c
index a499f03cbfd5..98b640c5f537 100644
--- a/drivers/mmc/host/sdhci-acpi.c
+++ b/drivers/mmc/host/sdhci-acpi.c
@@ -423,6 +423,9 @@ static int sdhci_acpi_probe(struct platform_device *pdev)
 
 	host->mmc->caps2 |= MMC_CAP2_NO_PRESCAN_POWERUP;
 
+	/* use async mode for suspend/resume */
+	device_enable_async_suspend(dev);
+
 	err = sdhci_add_host(host);
 	if (err)
 		goto remove_slot;
diff --git a/drivers/mmc/host/sdhci.c b/drivers/mmc/host/sdhci.c
index 6f3defac10a7..6f59a657f485 100644
--- a/drivers/mmc/host/sdhci.c
+++ b/drivers/mmc/host/sdhci.c
@@ -3527,18 +3527,20 @@ int sdhci_add_host(struct sdhci_host *host)
 #endif
 
 #ifdef SDHCI_USE_LEDS_CLASS
-	snprintf(host->led_name, sizeof(host->led_name),
-		"%s::", mmc_hostname(mmc));
-	host->led.name = host->led_name;
-	host->led.brightness = LED_OFF;
-	host->led.default_trigger = mmc_hostname(mmc);
-	host->led.brightness_set = sdhci_led_control;
-
-	ret = led_classdev_register(mmc_dev(mmc), &host->led);
-	if (ret) {
-		pr_err("%s: Failed to register LED device: %d\n",
-		       mmc_hostname(mmc), ret);
-		goto reset;
+	if (!device_async_suspend_enabled(mmc_dev(mmc))) {
+		snprintf(host->led_name, sizeof(host->led_name),
+			"%s::", mmc_hostname(mmc));
+		host->led.name = host->led_name;
+		host->led.brightness = LED_OFF;
+		host->led.default_trigger = mmc_hostname(mmc);
+		host->led.brightness_set = sdhci_led_control;
+
+		ret = led_classdev_register(mmc_dev(mmc), &host->led);
+		if (ret) {
+			pr_err("%s: Failed to register LED device: %d\n",
+			       mmc_hostname(mmc), ret);
+			goto reset;
+		}
 	}
 #endif
 
@@ -3595,7 +3597,8 @@ void sdhci_remove_host(struct sdhci_host *host, int dead)
 	mmc_remove_host(host->mmc);
 
 #ifdef SDHCI_USE_LEDS_CLASS
-	led_classdev_unregister(&host->led);
+	if (host->led.dev)
+		led_classdev_unregister(&host->led);
 #endif
 
 	if (!dead)
-- 
1.9.1

