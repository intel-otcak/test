From f4d40b47cf6bdec0a62517bc5d4a5935174c5572 Mon Sep 17 00:00:00 2001
From: Andy Ross <andrew.j.ross@intel.com>
Date: Mon, 14 Jul 2014 12:50:39 -0700
Subject: [PATCH 077/117] atomisp_gmin_platform: Support GPIO-driven 2.8v power

The ECS E7 uses an external regulator instead of a PMIC rail.  Allow
for config to specify a GPIO to drive this.

Signed-off-by: Andy Ross <andrew.j.ross@intel.com>
---
 .../x86/platform/intel-mid/atomisp_gmin_platform.c | 31 ++++++++++++++++++++++
 1 file changed, 31 insertions(+)

diff --git a/arch/x86/platform/intel-mid/atomisp_gmin_platform.c b/arch/x86/platform/intel-mid/atomisp_gmin_platform.c
index dd6705a..f20224d 100644
--- a/arch/x86/platform/intel-mid/atomisp_gmin_platform.c
+++ b/arch/x86/platform/intel-mid/atomisp_gmin_platform.c
@@ -9,6 +9,7 @@
 #include <linux/vlv2_plat_clock.h>
 #include <linux/regulator/consumer.h>
 #include <linux/gpio/consumer.h>
+#include <linux/gpio.h>
 #include <linux/platform_device.h>
 #include <linux/atomisp_platform.h>
 #include <linux/atomisp_gmin_platform.h>
@@ -80,6 +81,16 @@ static const struct atomisp_platform_data pdata = {
 };
 
 /*
+ * Something of a hack.  The ECS E7 board drives camera 2.8v from an
+ * external regulator instead of the PMIC.  There's a gmin_CamV2P8
+ * config variable that specifies the GPIO to handle this particular
+ * case, but this needs a broader architecture for handling camera
+ * power.
+ */
+enum { V2P8_GPIO_UNSET = -2, V2P8_GPIO_NONE = -1 };
+static int v2p8_gpio = V2P8_GPIO_UNSET;
+
+/*
  * Legacy/stub behavior copied from upstream platform_camera.c.  The
  * atomisp driver relies on these values being non-NULL in a few
  * places, even though they are hard-coded in all current
@@ -458,11 +469,31 @@ int gmin_v1p8_ctrl(struct v4l2_subdev *subdev, int on)
 int gmin_v2p8_ctrl(struct v4l2_subdev *subdev, int on)
 {
 	struct gmin_subdev *gs = find_gmin_subdev(subdev);
+	int ret;
+
+	if (v2p8_gpio == V2P8_GPIO_UNSET) {
+		v2p8_gpio = gmin_get_var_int(NULL, "V2P8GPIO", V2P8_GPIO_NONE);
+		if (v2p8_gpio != V2P8_GPIO_NONE) {
+			pr_info("atomisp_gmin_platform: 2.8v power on GPIO %d\n",
+				v2p8_gpio);
+			ret = gpio_request(v2p8_gpio, "camera_v2p8");
+			if (!ret)
+				ret = gpio_direction_output(v2p8_gpio, 0);
+			if (ret)
+				pr_err("V2P8 GPIO initialization failed\n");
+		}
+	}
+
 
 	if (gs && gs->v2p8_on == on)
 		return 0;
 	gs->v2p8_on = on;
 
+	if (gs && v2p8_gpio >= 0) {
+		gpio_set_value(v2p8_gpio, on);
+		return 0;
+	}
+
 	if (gs && gs->v2p8_reg) {
 		if (on)
 			return regulator_enable(gs->v2p8_reg);
-- 
1.9.3

