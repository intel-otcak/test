From 6d8033c2359b885c863a2bf13907d642029f79b4 Mon Sep 17 00:00:00 2001
From: Pengpeng Cui <pengpengx.cui@intel.com>
Date: Wed, 9 Dec 2015 19:16:29 +0800
Subject: [PATCH 10/13] atomisp2: css2400 and 2401
 irci_ecr-master_20151208_2222

Merge CSS2.1 for css2400 and 2401_legacy
for irci_ecr-master_20151208_2222 firmware tag

Change-Id: I5e4ff0270821c8a8dbf153d8acc55718e392bfb5
Original-Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-43419
Tracked-On:https://jira01.devtools.intel.com/browse/OAM-13009
Signed-off-by: Pengpeng Cui <pengpengx.cui@intel.com>
Reviewed-on: https://icggerrit.ir.intel.com/89053
Build: Dessert M BXT RVP (SC)
Build: Dessert M COHO (SC)
Build: Dessert M CHT FFD (SC)
Approver: WeiX Meng <weix.meng@intel.com>
Integrator: WeiX Meng <weix.meng@intel.com>
Reviewed-by: WeiX Meng <weix.meng@intel.com>
Reviewed-on: https://android.intel.com:443/450391
---
 .../atomisp2/css/camera/pipe/src/pipe_binarydesc.c | 15 +++++-
 .../media/pci/atomisp2/css/css_api_version.h       |  5 +-
 .../camera/drivers/media/pci/atomisp2/css/ia_css.h |  2 +-
 .../media/pci/atomisp2/css/ia_css_frame_format.h   |  5 +-
 .../drivers/media/pci/atomisp2/css/ia_css_types.h  |  2 +-
 .../media/pci/atomisp2/css/ia_css_version_data.h   |  2 +-
 .../css/isp/kernels/ctc/ctc2/ia_css_ctc2.host.c    |  6 +--
 .../css/isp/kernels/dpc2/ia_css_dpc2.host.c        | 14 ++++--
 .../css/isp/kernels/iefd2_6/ia_css_iefd2_6.host.c  | 57 ++++++++++++++++++++--
 .../isp/kernels/macc/macc1_5/ia_css_macc1_5.host.c | 21 +++++++-
 .../isp/kernels/macc/macc1_5/ia_css_macc1_5.host.h |  6 +++
 .../atomisp2/css/isp/modes/interface/isp_const.h   |  9 ++--
 .../atomisp2/css/isp/modes/interface/isp_exprs.h   |  2 +-
 .../pci/atomisp2/css/runtime/binary/src/binary.c   |  9 ++++
 .../atomisp2/css/runtime/debug/src/ia_css_debug.c  |  6 +--
 .../pci/atomisp2/css/runtime/frame/src/frame.c     |  6 +--
 .../camera/drivers/media/pci/atomisp2/css/sh_css.c |  9 +++-
 .../media/pci/atomisp2/css/sh_css_firmware.c       |  4 +-
 .../drivers/media/pci/atomisp2/css/sh_css_params.c | 44 ++++++-----------
 .../drivers/media/pci/atomisp2/css/sh_css_sp.c     |  6 +--
 20 files changed, 165 insertions(+), 65 deletions(-)

diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/camera/pipe/src/pipe_binarydesc.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/camera/pipe/src/pipe_binarydesc.c
index 9342f92..cb19393 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/camera/pipe/src/pipe_binarydesc.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/camera/pipe/src/pipe_binarydesc.c
@@ -775,8 +775,19 @@ void ia_css_pipe_get_pre_de_binarydesc(
 	assert(out_info != NULL);
 	IA_CSS_ENTER_PRIVATE("");
 
-	*in_info = *out_info;
-	in_info->format = IA_CSS_FRAME_FORMAT_RAW;
+	if (pipe->stream->config.continuous && 
+		pipe->stream->config.pack_raw_pixels) {
+		in_info->res = pipe->config.input_effective_res;
+		in_info->padded_width = in_info->res.width;
+		in_info->format = IA_CSS_FRAME_FORMAT_RAW_PACKED;
+	} else if (pipe->stream->config.continuous) {
+		in_info->res = pipe->config.input_effective_res;
+		in_info->padded_width = in_info->res.width;
+		in_info->format = IA_CSS_FRAME_FORMAT_RAW;
+	} else {
+		*in_info = *out_info;
+		in_info->format = IA_CSS_FRAME_FORMAT_RAW;
+	}
 	in_info->raw_bit_depth = ia_css_pipe_util_pipe_input_format_bpp(pipe);
 	out_infos[0] = out_info;
 	for (i = 1; i < IA_CSS_BINARY_MAX_OUTPUT_PORTS; i++)
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/css_api_version.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/css_api_version.h
index cbee851..3712bc8 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/css_api_version.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/css_api_version.h
@@ -34,7 +34,7 @@ The version string has four dot-separated numbers, read left to right:
 
 */
 
-#define CSS_API_VERSION_STRING	"2.1.20.19"
+#define CSS_API_VERSION_STRING	"2.1.20.20"
 
 /*
 Change log
@@ -463,6 +463,9 @@ v2.1.20.18, Add XNR3_0_11 parameters in ISP configurations
 v2.1.20.19, Add Plane IO parameters in ISP configurations
 - Add Plane IO config in ia_css_isp_config struct
 
+v2.1.20.20, Introduced YCgCo444_16 internal frame format
+- Replace ISP2.7 internal format V444_16 with correct YCgCo444_16
+
 */
 
 #endif /*__CSS_API_VERSION_H*/
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css.h
index d5cb2a9..8e7e84c 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css.h
@@ -1,4 +1,4 @@
-/* Release Version: irci_ecr-master_20151129_1500 */
+/* Release Version: irci_ecr-master_20151208_2222 */
 /**
 Support for Intel Camera Imaging ISP subsystem.
 Copyright (c) 2010 - 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_frame_format.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_frame_format.h
index 9ddade9..bc73067 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_frame_format.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_frame_format.h
@@ -89,12 +89,13 @@ enum ia_css_frame_format {
 	IA_CSS_FRAME_FORMAT_CSI_MIPI_YUV420_10,       /**< 10 bit per Y/U/V. Y odd
 							   line; UYVY interleaved
 							   even line */
-	IA_CSS_FRAME_FORMAT_YUV444_16  /**< 16 bits per plane YUV 444, Y, U, V plane */
+	IA_CSS_FRAME_FORMAT_YCgCo444_16  /**< Internal format for ISP2.7,
+					      16 bits per plane YUV 444, Y, U, V plane */
 };
 
 /* NOTE: IA_CSS_FRAME_FORMAT_NUM was purposely defined outside of enum type ia_css_frame_format, */
 /*       because of issues this would cause with the Clockwork code checking tool.               */
-#define IA_CSS_FRAME_FORMAT_NUM (IA_CSS_FRAME_FORMAT_YUV444_16 + 1)
+#define IA_CSS_FRAME_FORMAT_NUM (IA_CSS_FRAME_FORMAT_YCgCo444_16 + 1)
 
 /** Number of valid output frame formats for ISP **/
 #define IA_CSS_FRAME_OUT_FORMAT_NUM	(IA_CSS_FRAME_FORMAT_RGBA888 + 1)
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_types.h
index f4849e6..bbd95ca 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_types.h
@@ -1,4 +1,4 @@
-/* Release Version: irci_ecr-master_20151129_1500 */
+/* Release Version: irci_ecr-master_20151208_2222 */
 /**
 Support for Intel Camera Imaging ISP subsystem.
 Copyright (c) 2010 - 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_version_data.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_version_data.h
index 3b39794..fc93f71 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_version_data.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_version_data.h
@@ -22,7 +22,7 @@ more details.
 #define __IA_CSS_VERSION_DATA_H
 
 
-#define CSS_VERSION_STRING "REL:20151129_48.0_1936; API:2.1.20.19; GIT:irci___#2e58410246a0bb2dc9397f70d2f1aea35170faff; SDK:; USER:viedifw; "
+#define CSS_VERSION_STRING "REL:20151209_50.3_0448; API:2.1.20.20; GIT:irci___#9f9f22f7c8f6adc59a9dd81b12314b03984d1e68; SDK:; USER:viedifw; "
 
 
 #endif
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/ctc/ctc2/ia_css_ctc2.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/ctc/ctc2/ia_css_ctc2.host.c
index 454c48f..ac5e6c1 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/ctc/ctc2/ia_css_ctc2.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/ctc/ctc2/ia_css_ctc2.host.c
@@ -170,18 +170,18 @@ ia_css_ctc2_debug_dtrace(
 	ia_css_debug_dtrace(level,
 		"config.y_y0=%d, config.y_y1=%d, "
 		"config.y_y2=%d, config.y_y3=%d, "
-		"config.y_y4=%d,  config.y_y5=%d, ",
+		"config.y_y4=%d,  config.y_y5=%d, \n",
 		config->y_y0, config->y_y1,
 		config->y_y2, config->y_y3,
 		config->y_y4, config->y_y5);
 	ia_css_debug_dtrace(level,
 		"config.y_x1=%d, config.y_x2=%d, "
-		"config.y_x3=%d,  config.y_x4=%d, ",
+		"config.y_x3=%d,  config.y_x4=%d, \n",
 		config->y_x1, config->y_x2,
 		config->y_x3, config->y_x4);
 	ia_css_debug_dtrace(level,
 		"config.uv_y0=%d, config.uv_y1=%d, "
-		"config.uv_x0=%d,  config.uv_x1=%d, ",
+		"config.uv_x0=%d,  config.uv_x1=%d, \n",
 		config->uv_y0, config->uv_y1,
 		config->uv_x0, config->uv_x1);
 }
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/dpc2/ia_css_dpc2.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/dpc2/ia_css_dpc2.host.c
index fdadeda..4b7dd0f 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/dpc2/ia_css_dpc2.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/dpc2/ia_css_dpc2.host.c
@@ -15,6 +15,10 @@ more details.
 #include "ia_css_dpc2.host.h"
 #include "assert_support.h"
 
+#ifndef IA_CSS_NO_DEBUG
+#include "ia_css_debug.h"
+#endif
+
 void
 ia_css_dpc2_encode(
 	struct ia_css_isp_dpc2_params *to,
@@ -53,13 +57,17 @@ ia_css_init_dpc2_state(
 }
 
 #ifndef IA_CSS_NO_DEBUG
-/* TODO: AM: This needs a proper implementation. */
 void
 ia_css_dpc2_debug_dtrace(
 	const struct ia_css_dpc2_config *config,
 	unsigned level)
 {
-	(void)config;
-	(void)level;
+	ia_css_debug_dtrace(level,
+		"metric1=%d, metric2=%d, metric3=%d, "
+		"wb_gain_gr=%d, wb_gain_r=%d, "
+		"wb_gain_b=%d, wb_gain_gb=%d\n",
+		config->metric1, config->metric2, config->metric3,
+		config->wb_gain_gr, config->wb_gain_r,
+		config->wb_gain_b, config->wb_gain_gb);
 }
 #endif
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/iefd2_6/ia_css_iefd2_6.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/iefd2_6/ia_css_iefd2_6.host.c
index c5e3a93..2ba52c2 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/iefd2_6/ia_css_iefd2_6.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/iefd2_6/ia_css_iefd2_6.host.c
@@ -188,13 +188,64 @@ ia_css_init_iefd2_6_state(
 }
 
 #ifndef IA_CSS_NO_DEBUG
-/* TODO: AM: This needs a proper implementation. */
 void
 ia_css_iefd2_6_debug_dtrace(
 	const struct ia_css_iefd2_6_config *config,
 	unsigned level)
 {
-	(void)config;
-	(void)level;
+	ia_css_debug_dtrace(level,
+		"horver_diag_coeff=%d, ed_horver_diag_coeff=%d, dir_smooth_enable=%d, dir_metric_update=%d, \n"
+		"\t\tunsharp_c00=%d, unsharp_c01=%d, unsharp_c02=%d, unsharp_c11=%d, unsharp_c12=%d, unsharp_c22=%d, \n"
+		"\t\tunsharp_weight=%d, unsharp_amount=%d, \n"
+		"\t\tcu_dir_sharp_pow=%d, cu_dir_sharp_pow_bright=%d, cu_non_dir_sharp_pow=%d, cu_non_dir_sharp_pow_bright=%d, dir_far_sharp_weight=%d, \n"
+		"\t\trad_cu_dir_sharp_x1=%d, rad_cu_non_dir_sharp_x1=%d, rad_dir_far_sharp_weight=%d, \n"
+		"\t\tsharp_nega_lmt_txt=%d, sharp_posi_lmt_txt=%d, sharp_nega_lmt_dir=%d, sharp_posi_lmt_dir=%d, \n"
+		"\t\tclamp_stitch=%d, rad_enable=%d, rad_x_origin=%d, rad_y_origin=%, rad_nf=%d, rad_inv_r2=%d, \n"
+		"\t\tvssnlm_enable=%d, vssnlm_x0=%d, vssnlm_x1=%d, vssnlm_x2=%d, vssnlm_y1=%d, vssnlm_y2=%d, vssnlm_y3=%d, \n"
+		"\t\tcu_ed_points_x ={%d, %d, %d, %d, %d, %d}, \n"
+		"\t\tcu_ed_slopes_a ={%d, %d, %d, %d, %d}, \n"
+		"\t\tcu_ed_slopes_b ={%d, %d, %d, %d, %d}, \n"
+		"\t\tcu_ed2_points_x={%d, %d}, \n"
+		"\t\tcu_ed2_slopes_a=%d, cu_ed2_slopes_b=%d, \n"
+		"\t\tcu_dir_sharp_points_x    ={%d, %d, %d, %d}, \n"
+		"\t\tcu_dir_sharp_slopes_a    ={%d, %d, %d}, \n"
+		"\t\tcu_dir_sharp_slopes_b    ={%d, %d, %d}, \n"
+		"\t\tcu_non_dir_sharp_points_x={%d, %d, %d, %d}, \n"
+		"\t\tcu_non_dir_sharp_slopes_a={%d, %d, %d}, \n"
+		"\t\tcu_non_dir_sharp_slopes_a={%d, %d, %d}, \n"
+		"\t\tcu_radial_points_x       ={%d, %d, %d, %d, %d, %d}, \n"
+		"\t\tcu_radial_slopes_a       ={%d, %d, %d, %d, %d}, \n"
+		"\t\tcu_radial_slopes_b       ={%d, %d, %d, %d, %d}, \n"
+		"\t\tcu_vssnlm_points_x       ={%d, %d}, \n"
+		"\t\tcu_vssnlm_slopes_a=%d, cu_vssnlm_slopes_b=%d\n",
+		config->horver_diag_coeff, config->ed_horver_diag_coeff,
+		config->dir_smooth_enable, config->dir_metric_update,
+		config->unsharp_c00, config->unsharp_c01, config->unsharp_c02,
+		config->unsharp_c11, config->unsharp_c12, config->unsharp_c22,
+		config->unsharp_weight, config->unsharp_amount,
+		config->cu_dir_sharp_pow, config->cu_dir_sharp_pow_bright, config->cu_non_dir_sharp_pow,
+		config->cu_non_dir_sharp_pow_bright, config->dir_far_sharp_weight,
+		config->rad_cu_dir_sharp_x1, config->rad_cu_non_dir_sharp_x1, config->rad_dir_far_sharp_weight,
+		config->sharp_nega_lmt_txt, config->sharp_posi_lmt_txt,
+		config->sharp_nega_lmt_dir, config->sharp_posi_lmt_dir,
+		config->clamp_stitch, config->rad_enable,
+		config->rad_x_origin, config->rad_y_origin, config->rad_nf, config->rad_inv_r2,
+		config->vssnlm_enable, config->vssnlm_x0, config->vssnlm_x1, config->vssnlm_x2, config->vssnlm_y1, config->vssnlm_y2, config->vssnlm_y3,
+		config->cu_ed_points_x[0], config->cu_ed_points_x[1], config->cu_ed_points_x[2], config->cu_ed_points_x[3], config->cu_ed_points_x[4], config->cu_ed_points_x[5],
+		config->cu_ed_slopes_a[0], config->cu_ed_slopes_a[1], config->cu_ed_slopes_a[2], config->cu_ed_slopes_a[3], config->cu_ed_slopes_a[4],
+		config->cu_ed_slopes_b[0], config->cu_ed_slopes_b[1], config->cu_ed_slopes_b[2], config->cu_ed_slopes_b[3], config->cu_ed_slopes_b[4],
+		config->cu_ed2_points_x[0], config->cu_ed2_points_x[1],
+		config->cu_ed2_slopes_a, config->cu_ed2_slopes_b,
+		config->cu_dir_sharp_points_x[0], config->cu_dir_sharp_points_x[1], config->cu_dir_sharp_points_x[2], config->cu_dir_sharp_points_x[3],
+		config->cu_dir_sharp_slopes_a[0], config->cu_dir_sharp_slopes_a[1], config->cu_dir_sharp_slopes_a[2],
+		config->cu_dir_sharp_slopes_b[0], config->cu_dir_sharp_slopes_b[1], config->cu_dir_sharp_slopes_b[2],
+		config->cu_non_dir_sharp_points_x[0], config->cu_non_dir_sharp_points_x[1], config->cu_non_dir_sharp_points_x[2], config->cu_non_dir_sharp_points_x[3],
+		config->cu_non_dir_sharp_slopes_a[0], config->cu_non_dir_sharp_slopes_a[1], config->cu_non_dir_sharp_slopes_a[2],
+		config->cu_non_dir_sharp_slopes_b[0], config->cu_non_dir_sharp_slopes_b[1], config->cu_non_dir_sharp_slopes_b[2],
+		config->cu_radial_points_x[0], config->cu_radial_points_x[1], config->cu_radial_points_x[2], config->cu_radial_points_x[3], config->cu_radial_points_x[4], config->cu_radial_points_x[5],
+		config->cu_radial_slopes_a[0], config->cu_radial_slopes_a[1], config->cu_radial_slopes_a[2], config->cu_radial_slopes_a[3], config->cu_radial_slopes_a[4],
+		config->cu_radial_slopes_b[0], config->cu_radial_slopes_b[1], config->cu_radial_slopes_b[2], config->cu_radial_slopes_b[3], config->cu_radial_slopes_b[4],
+		config->cu_vssnlm_points_x[0], config->cu_vssnlm_points_x[1],
+		config->cu_vssnlm_slopes_a, config->cu_vssnlm_slopes_b);
 }
 #endif
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/macc/macc1_5/ia_css_macc1_5.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/macc/macc1_5/ia_css_macc1_5.host.c
index 995677b..d2f20b6 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/macc/macc1_5/ia_css_macc1_5.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/macc/macc1_5/ia_css_macc1_5.host.c
@@ -48,10 +48,10 @@ ia_css_macc1_5_vmem_encode(
 
 	(void)size;
 
-	for (k = 0; k < 4; k++)
+	for (k = 0; k < IA_CSS_MACC_NUM_COEFS; k++)
 		for (i = 0; i < IA_CSS_MACC_NUM_AXES; i++) {
 			idx = (idx_map[i] + (k*IA_CSS_MACC_NUM_AXES));
-			j   = 4*i;
+			j   = IA_CSS_MACC_NUM_COEFS*i;
 
 			params->data[0][(idx)] = from->data[j];
 			params->data[1][(idx)] = from->data[j+1];
@@ -71,4 +71,21 @@ ia_css_macc1_5_debug_dtrace(
 		"config.exp=%d\n",
 		config->exp);
 }
+
+void
+ia_css_macc1_5_table_debug_dtrace(
+	const struct ia_css_macc1_5_table *table,
+	unsigned level)
+{
+	int axes, coefs;
+	ia_css_debug_dtrace(level, "macc1_5table=[");
+	for (axes = 0; axes < IA_CSS_MACC_NUM_AXES; axes++) {
+		ia_css_debug_dtrace(level, "{");
+		for (coefs = 0; coefs < IA_CSS_MACC_NUM_COEFS; coefs++) {
+			ia_css_debug_dtrace(level, "%d, ", table->data[axes*IA_CSS_MACC_NUM_COEFS + coefs]);
+		}
+		ia_css_debug_dtrace(level, "}, ");
+	}
+	ia_css_debug_dtrace(level, "]\n");
+}
 #endif
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/macc/macc1_5/ia_css_macc1_5.host.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/macc/macc1_5/ia_css_macc1_5.host.h
index dba9c35..ab6455a 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/macc/macc1_5/ia_css_macc1_5.host.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/macc/macc1_5/ia_css_macc1_5.host.h
@@ -37,5 +37,11 @@ void
 ia_css_macc1_5_debug_dtrace(
 	const struct ia_css_macc1_5_config *config,
 	unsigned level);
+
+void
+ia_css_macc1_5_table_debug_dtrace(
+	const struct ia_css_macc1_5_table *table,
+	unsigned level);
+
 #endif
 #endif /* __IA_CSS_MACC1_5_HOST_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/modes/interface/isp_const.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/modes/interface/isp_const.h
index f57171a..0cc677c 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/modes/interface/isp_const.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/modes/interface/isp_const.h
@@ -213,10 +213,11 @@ more details.
 
 /* ISP 2.7 camera binaries */
 #define SH_CSS_BINARY_ID_PRE_DE_ISP27			    501
-#define SH_CSS_BINARY_ID_PRIMARY_ISP27_STAGE0	            502
-#define SH_CSS_BINARY_ID_PRIMARY_ISP27_STAGE1		    503
-#define SH_CSS_BINARY_ID_PRIMARY_ISP27_STAGE2		    504
-#define SH_CSS_BINARY_ID_CAPTURE_PP_ISP27		    505
+#define SH_CSS_BINARY_ID_CONT_PRE_DE_ISP27		    502
+#define SH_CSS_BINARY_ID_PRIMARY_ISP27_STAGE0	            503
+#define SH_CSS_BINARY_ID_PRIMARY_ISP27_STAGE1		    504
+#define SH_CSS_BINARY_ID_PRIMARY_ISP27_STAGE2		    505
+#define SH_CSS_BINARY_ID_CAPTURE_PP_ISP27		    506
 
 #define XMEM_WIDTH_BITS              HIVE_ISP_DDR_WORD_BITS
 #define XMEM_SHORTS_PER_WORD         (HIVE_ISP_DDR_WORD_BITS/16)
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/modes/interface/isp_exprs.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/modes/interface/isp_exprs.h
index 84b5881..949f431 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/modes/interface/isp_exprs.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/modes/interface/isp_exprs.h
@@ -86,7 +86,7 @@ more details.
 
 #define IMAGEFORMAT_IS_NV11(fmt)		((fmt) == IA_CSS_FRAME_FORMAT_NV11)
 
-#define IMAGEFORMAT_IS_16BIT(fmt)               ((fmt) == IA_CSS_FRAME_FORMAT_YUV420_16 || (fmt) == IA_CSS_FRAME_FORMAT_NV12_16 || (fmt) == IA_CSS_FRAME_FORMAT_YUV422_16 || (fmt) == IA_CSS_FRAME_FORMAT_YUV444_16)
+#define IMAGEFORMAT_IS_16BIT(fmt)               ((fmt) == IA_CSS_FRAME_FORMAT_YUV420_16 || (fmt) == IA_CSS_FRAME_FORMAT_NV12_16 || (fmt) == IA_CSS_FRAME_FORMAT_YUV422_16 || (fmt) == IA_CSS_FRAME_FORMAT_YCgCo444_16)
 
 #endif
 
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/runtime/binary/src/binary.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/runtime/binary/src/binary.c
index 00b5d13..147fbd6 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/runtime/binary/src/binary.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/runtime/binary/src/binary.c
@@ -1393,6 +1393,15 @@ ia_css_binary_find(struct ia_css_binary_descr *descr,
 				candidate->pipeline.isp_pipe_version, isp_pipe_version);
 			continue;
 		}
+		if (mode == IA_CSS_BINARY_MODE_PRE_DE &&
+			isp_pipe_version == IA_CSS_PIPE_VERSION_2_7 &&
+			candidate->enable.continuous != continuous) {
+			ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE,
+				"ia_css_binary_find() [%d] continue: (%d != %d)\n",
+				__LINE__,
+				continuous, candidate->enable.continuous);
+			continue;
+		}
 		if (!candidate->enable.reduced_pipe && enable_reduced_pipe) {
 			ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE,
 				"ia_css_binary_find() [%d] continue: !%d && %d\n",
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/runtime/debug/src/ia_css_debug.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/runtime/debug/src/ia_css_debug.c
index 804695f..a6f14bb 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/runtime/debug/src/ia_css_debug.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/runtime/debug/src/ia_css_debug.c
@@ -387,8 +387,8 @@ static const char *debug_frame_format2str(const enum ia_css_frame_format frame_f
 		return "YUYV";
 	case IA_CSS_FRAME_FORMAT_YUV444:
 		return "YUV444";
-	case IA_CSS_FRAME_FORMAT_YUV444_16:
-		return "YUV444_16";
+	case IA_CSS_FRAME_FORMAT_YCgCo444_16:
+		return "YCgCo444_16";
 	case IA_CSS_FRAME_FORMAT_YUV_LINE:
 		return "YUV_LINE";
 	case IA_CSS_FRAME_FORMAT_RAW:
@@ -1425,7 +1425,7 @@ void ia_css_debug_frame_print(const struct ia_css_frame *frame,
 	case IA_CSS_FRAME_FORMAT_YV16:
 	case IA_CSS_FRAME_FORMAT_YUV420_16:
 	case IA_CSS_FRAME_FORMAT_YUV422_16:
-	case IA_CSS_FRAME_FORMAT_YUV444_16:
+	case IA_CSS_FRAME_FORMAT_YCgCo444_16:
 		ia_css_debug_dtrace(2, "  Y = %p\n",
 				    data + frame->planes.yuv.y.offset);
 		ia_css_debug_dtrace(2, "  U = %p\n",
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/runtime/frame/src/frame.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/runtime/frame/src/frame.c
index 09a1bbf..8f8817d 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/runtime/frame/src/frame.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/runtime/frame/src/frame.c
@@ -400,7 +400,7 @@ enum ia_css_err ia_css_frame_init_planes(struct ia_css_frame *frame)
 	case IA_CSS_FRAME_FORMAT_YUV444:
 		frame_init_yuv_planes(frame, 1, 1, false, 1);
 		break;
-	case IA_CSS_FRAME_FORMAT_YUV444_16:
+	case IA_CSS_FRAME_FORMAT_YCgCo444_16:
 		frame_init_yuv_planes(frame, 1, 1, false, 2);
 		break;
 	case IA_CSS_FRAME_FORMAT_YUV420_16:
@@ -465,7 +465,7 @@ void ia_css_frame_info_set_width(struct ia_css_frame_info *info,
 	else if (info->format == IA_CSS_FRAME_FORMAT_RAW ||
 		 info->format == IA_CSS_FRAME_FORMAT_RAW_PACKED ||
 		 info->format == IA_CSS_FRAME_FORMAT_YUV444 ||
-		 info->format == IA_CSS_FRAME_FORMAT_YUV444_16 ||
+		 info->format == IA_CSS_FRAME_FORMAT_YCgCo444_16 ||
 		 info->format == IA_CSS_FRAME_FORMAT_YUV420_16)
 		info->padded_width = CEIL_MUL(align, 2 * ISP_VEC_NELEMS);
 	else {
@@ -864,7 +864,7 @@ ia_css_elems_bytes_from_info(const struct ia_css_frame_info *info)
 		return 2; /* bytes per pixel */
 	if (info->format == IA_CSS_FRAME_FORMAT_YUV422_16)
 		return 2; /* bytes per pixel */
-	if (info->format == IA_CSS_FRAME_FORMAT_YUV444_16)
+	if (info->format == IA_CSS_FRAME_FORMAT_YCgCo444_16)
 		return 2; /* bytes per pixel */
 	/* Note: Essentially NV12_16 is a 2 bytes per pixel format, this return value is used
 	 * to configure DMA for the output buffer,
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css.c
index de4e0e2..5271ddd 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css.c
@@ -158,7 +158,7 @@ static struct sh_css_hmm_buffer_record hmm_buffer_record[MAX_HMM_BUFFER_NUM];
 static bool fw_explicitly_loaded = false;
 
 static enum ia_css_frame_format primary_hq_stage_out_format[NUM_PRIMARY_HQ27_STAGES] = {
-	IA_CSS_FRAME_FORMAT_YUV444_16,
+	IA_CSS_FRAME_FORMAT_YCgCo444_16,
 	IA_CSS_FRAME_FORMAT_YUV420_16,
 	IA_CSS_FRAME_FORMAT_YUV420
 };
@@ -3639,6 +3639,11 @@ init_out_frameinfo_defaults(struct ia_css_pipe *pipe,
 	ia_css_query_internal_queue_id(IA_CSS_BUFFER_TYPE_OUTPUT_FRAME + idx, thread_id, &queue_id);
 	out_frame->dynamic_queue_id = queue_id;
 	out_frame->buf_type = IA_CSS_BUFFER_TYPE_OUTPUT_FRAME + idx;
+	/* Fix potential division by zero KW issue
+	   raw_bit_depth should have been properly assigned now. Those which containing 0
+	   will not care.*/
+	if (!out_frame->info.raw_bit_depth)
+		out_frame->info.raw_bit_depth = 1;
 	err = ia_css_frame_init_planes(out_frame);
 
 	return err;
@@ -8456,7 +8461,7 @@ sh_css_pipe_get_output_frame_info(struct ia_css_pipe *pipe,
 #endif
 	} else if (pipe->config.isp_pipe_version == IA_CSS_PIPE_VERSION_2_7) {
 		/* Need to set this so the pipegraph can properly display bpp */
-		if (info->format == IA_CSS_FRAME_FORMAT_YUV444_16 ||
+		if (info->format == IA_CSS_FRAME_FORMAT_YCgCo444_16 ||
 		    info->format == IA_CSS_FRAME_FORMAT_YUV420_16)
 			info->raw_bit_depth = 13;
 		else if (info->format == IA_CSS_FRAME_FORMAT_NV12)
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_firmware.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_firmware.c
index 98beefd..b759584 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_firmware.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_firmware.c
@@ -47,10 +47,10 @@ struct fw_param {
 /* Warning: same order as SH_CSS_BINARY_ID_* */
 static struct firmware_header *firmware_header;
 
-/* The string STR(irci_ecr-master_20151129_1500) is a place holder
+/* The string STR(irci_ecr-master_20151208_2222) is a place holder
  * which will be replaced with the actual RELEASE_VERSION
  * during package generation. Please do not modify  */
-static const char *release_version = STR(irci_ecr-master_20151129_1500);
+static const char *release_version = STR(irci_ecr-master_20151208_2222);
 
 #define MAX_FW_REL_VER_NAME	300
 static char FW_rel_ver_name[MAX_FW_REL_VER_NAME] = "---";
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_params.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_params.c
index 32fc444..5331cfb 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_params.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_params.c
@@ -1923,7 +1923,8 @@ sh_css_set_macc1_5_table(struct ia_css_isp_parameters *params,
 
 	assert(params != NULL);
 	params->macc1_5_table = *table;
-	params->config_changed[IA_CSS_MACC_ID] = true;
+	params->config_changed[IA_CSS_MACC1_5_ID] = true;
+	ia_css_macc1_5_table_debug_dtrace(table, IA_CSS_DEBUG_TRACE);
 
 	IA_CSS_LEAVE_PRIVATE("void");
 }
@@ -2850,7 +2851,6 @@ sh_css_init_isp_params_from_config(struct ia_css_pipe *pipe,
 	enum ia_css_err err = IA_CSS_SUCCESS;
 #if !defined(IS_ISP_2500_SYSTEM)
 	bool is_dp_10bpp = true;
-	unsigned isp_pipe_version = ia_css_pipe_get_isp_pipe_version(pipe);
 #endif
 	assert(pipe != NULL);
 
@@ -2875,10 +2875,8 @@ sh_css_init_isp_params_from_config(struct ia_css_pipe *pipe,
 	sh_css_update_shading_table_status(pipe_in, params);
 	sh_css_set_shading_table(pipe->stream, params, config->shading_table);
 	sh_css_set_morph_table(params, config->morph_table);
-	if (isp_pipe_version == SH_CSS_ISP_PIPE_VERSION_2_7)
-		sh_css_set_macc1_5_table(params, config->macc1_5_table);
-	else
-		sh_css_set_macc_table(params, config->macc_table);
+	sh_css_set_macc1_5_table(params, config->macc1_5_table);
+	sh_css_set_macc_table(params, config->macc_table);
 	sh_css_set_gamma_table(params, config->gamma_table);
 	sh_css_set_ctc_table(params, config->ctc_table);
 /* ------ deprecated(bz675) : from ------ */
@@ -2933,9 +2931,6 @@ ia_css_pipe_get_isp_config(struct ia_css_pipe *pipe,
 						   struct ia_css_isp_config *config)
 {
 	struct ia_css_isp_parameters *params = NULL;
-#if !defined(IS_ISP_2500_SYSTEM)
-	unsigned isp_pipe_version = ia_css_pipe_get_isp_pipe_version(pipe);
-#endif
 	assert(config != NULL);
 
 	IA_CSS_ENTER("config=%p", config);
@@ -2952,10 +2947,8 @@ ia_css_pipe_get_isp_config(struct ia_css_pipe *pipe,
 	sh_css_get_baa_config(params, config->baa_config);
 	sh_css_get_pipe_dvs_6axis_config(pipe, params, config->dvs_6axis_config);
 	sh_css_get_dp_config(pipe, params, config->dp_config);
-	if (isp_pipe_version == SH_CSS_ISP_PIPE_VERSION_2_7)
-		sh_css_get_macc1_5_table(params, config->macc1_5_table);
-	else
-		sh_css_get_macc_table(params, config->macc_table);
+	sh_css_get_macc1_5_table(params, config->macc1_5_table);
+	sh_css_get_macc_table(params, config->macc_table);
 	sh_css_get_gamma_table(params, config->gamma_table);
 	sh_css_get_ctc_table(params, config->ctc_table);
 	sh_css_get_dz_config(params, config->dz_config);
@@ -3382,8 +3375,8 @@ sh_css_init_isp_params_from_global(struct ia_css_stream *stream,
 			sh_css_set_macc_table(params, &default_macc_table);
 		else if (isp_pipe_version == SH_CSS_ISP_PIPE_VERSION_2_2)
 			sh_css_set_macc_table(params, &default_macc2_table);
-		else if (isp_pipe_version == SH_CSS_ISP_PIPE_VERSION_2_7)
-			sh_css_set_macc1_5_table(params, &default_macc1_5_table);
+		/* Set ISP2.7 parameters globally */
+		sh_css_set_macc1_5_table(params, &default_macc1_5_table);
 		sh_css_set_gamma_table(params, &default_gamma_table);
 		sh_css_set_ctc_table(params, &default_ctc_table);
 		sh_css_set_baa_config(params, &default_baa_config);
@@ -3432,10 +3425,8 @@ sh_css_init_isp_params_from_global(struct ia_css_stream *stream,
 		ia_css_set_ynr_config(params, &default_ynr_config);
 		ia_css_set_fc_config(params, &default_fc_config);
 		ia_css_set_cnr_config(params, &default_cnr_config);
-		if (isp_pipe_version == SH_CSS_ISP_PIPE_VERSION_2_7)
-			ia_css_set_macc1_5_config(params, &default_macc1_5_config);
-		else
-			ia_css_set_macc_config(params, &default_macc_config);
+		ia_css_set_macc1_5_config(params, &default_macc1_5_config);
+		ia_css_set_macc_config(params, &default_macc_config);
 		ia_css_set_ctc_config(params, &default_ctc_config);
 		ia_css_set_ctc2_config(params, &default_ctc2_config);
 		ia_css_set_aa_config(params, &default_aa_config);
@@ -3483,10 +3474,8 @@ sh_css_init_isp_params_from_global(struct ia_css_stream *stream,
 #if !defined(IS_ISP_2500_SYSTEM)
 		sh_css_set_nr_config(params, &stream_params->nr_config);
 		sh_css_set_ee_config(params, &stream_params->ee_config);
-		if (isp_pipe_version == SH_CSS_ISP_PIPE_VERSION_2_7)
-			sh_css_set_macc1_5_table(params, &stream_params->macc1_5_table);
-		else
-			sh_css_set_macc_table(params, &stream_params->macc_table);
+		sh_css_set_macc1_5_table(params, &stream_params->macc1_5_table);
+		sh_css_set_macc_table(params, &stream_params->macc_table);
 		sh_css_set_gamma_table(params, &stream_params->gc_table);
 		sh_css_set_ctc_table(params, &stream_params->ctc_table);
 		sh_css_set_baa_config(params, &stream_params->bds_config);
@@ -3513,10 +3502,8 @@ sh_css_init_isp_params_from_global(struct ia_css_stream *stream,
 		ia_css_set_ynr_config(params, &stream_params->ynr_config);
 		ia_css_set_fc_config(params, &stream_params->fc_config);
 		ia_css_set_cnr_config(params, &stream_params->cnr_config);
-		if (isp_pipe_version == SH_CSS_ISP_PIPE_VERSION_2_7)
-			ia_css_set_macc1_5_config(params, &stream_params->macc1_5_config);
-		else
-			ia_css_set_macc_config(params, &stream_params->macc_config);
+		ia_css_set_macc1_5_config(params, &stream_params->macc1_5_config);
+		ia_css_set_macc_config(params, &stream_params->macc_config);
 		ia_css_set_ctc_config(params, &stream_params->ctc_config);
 		ia_css_set_ctc2_config(params, &stream_params->ctc2_config);
 		ia_css_set_aa_config(params, &stream_params->aa_config);
@@ -4585,7 +4572,8 @@ sh_css_params_write_to_ddr_internal(
 			params->isp_mem_params_changed[pipe_id][stage->stage_num][IA_CSS_ISP_DMEM] = true;
 		}
 	}
-	if (params->config_changed[IA_CSS_MACC_ID] && binary->info->sp.enable.macc) {
+	if ((params->config_changed[IA_CSS_MACC_ID] ||
+		params->config_changed[IA_CSS_MACC1_5_ID]) && binary->info->sp.enable.macc) {
 		unsigned int i, j, idx;
 		unsigned int idx_map[] = {
 			0, 1, 3, 2, 6, 7, 5, 4, 12, 13, 15, 14, 10, 11, 9, 8};
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_sp.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_sp.c
index 7efcf84..fd97221 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_sp.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_sp.c
@@ -506,7 +506,7 @@ sh_css_copy_frame_to_spframe(struct ia_css_frame_sp *sp_frame_out,
 	case IA_CSS_FRAME_FORMAT_YUV444:
 	case IA_CSS_FRAME_FORMAT_YUV420_16:
 	case IA_CSS_FRAME_FORMAT_YUV422_16:
-	case IA_CSS_FRAME_FORMAT_YUV444_16:
+	case IA_CSS_FRAME_FORMAT_YCgCo444_16:
 	case IA_CSS_FRAME_FORMAT_YV12:
 	case IA_CSS_FRAME_FORMAT_YV16:
 		sp_frame_out->planes.yuv.y.offset =
@@ -556,7 +556,7 @@ set_input_frame_buffer(const struct ia_css_frame *frame)
 	case IA_CSS_FRAME_FORMAT_RAW_PACKED:
 	case IA_CSS_FRAME_FORMAT_RAW:
 	case IA_CSS_FRAME_FORMAT_YUV420:
-	case IA_CSS_FRAME_FORMAT_YUV444_16:
+	case IA_CSS_FRAME_FORMAT_YCgCo444_16:
 	case IA_CSS_FRAME_FORMAT_YUYV:
 	case IA_CSS_FRAME_FORMAT_YUV_LINE:
 	case IA_CSS_FRAME_FORMAT_NV12:
@@ -590,7 +590,7 @@ set_output_frame_buffer(const struct ia_css_frame *frame,
 	case IA_CSS_FRAME_FORMAT_YV16:
 	case IA_CSS_FRAME_FORMAT_YUV420_16:
 	case IA_CSS_FRAME_FORMAT_YUV422_16:
-	case IA_CSS_FRAME_FORMAT_YUV444_16:
+	case IA_CSS_FRAME_FORMAT_YCgCo444_16:
 	case IA_CSS_FRAME_FORMAT_NV11:
 	case IA_CSS_FRAME_FORMAT_NV12:
 	case IA_CSS_FRAME_FORMAT_NV12_16:
-- 
1.9.1

