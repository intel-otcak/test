From 720dfa4e4cd6aea9f151443b52cba71fa6da3bee Mon Sep 17 00:00:00 2001
From: Emmanuel Berthier <emmanuel.berthier@intel.com>
Date: Tue, 23 Jun 2015 13:15:03 +0200
Subject: [PATCH] [DEBUG] Add DEBUG_PANIC_ON_BAD_PAGE config switch

Define a new CONFIG to be able to disable the Panic on User builds.

Change-Id: I3b38bafa4efe6ecd88d11c60f830a6767464eeab
Tracked-On: https://jira01.devtools.intel.com/browse/AKP-1919
Signed-off-by: Emmanuel Berthier <emmanuel.berthier@intel.com>
---
 mm/Kconfig      | 6 ++++++
 mm/page_alloc.c | 3 +++
 2 files changed, 9 insertions(+)

Index: linux/mm/Kconfig
===================================================================
--- linux.orig/mm/Kconfig	2015-06-25 16:47:00.513250053 -0700
+++ linux/mm/Kconfig	2015-06-25 16:47:00.509250024 -0700
@@ -581,6 +581,12 @@
 	  You can check speed with zsmalloc benchmark:
 	  https://github.com/spartacus06/zsmapbench
 
+config DEBUG_PANIC_ON_BAD_PAGE
+	bool "Panic on Bad Page"
+	default n
+	help
+	  Generate a panic in case of Bad Page error detection.
+
 config MAX_STACK_SIZE_MB
 	int "Maximum user stack size for 32-bit processes (MB)"
 	default 80
Index: linux/mm/page_alloc.c
===================================================================
--- linux.orig/mm/page_alloc.c	2015-06-25 16:47:00.513250053 -0700
+++ linux/mm/page_alloc.c	2015-06-25 16:47:55.249644875 -0700
@@ -351,8 +351,9 @@
 	/* Leave bad fields for debug, except PageBuddy could make trouble */
 	page_mapcount_reset(page); /* remove PageBuddy */
 	add_taint(TAINT_BAD_PAGE, LOCKDEP_NOW_UNRELIABLE);
-
+#ifdef CONFIG_DEBUG_PANIC_ON_BAD_PAGE
 	panic("Bad page");
+#endif
 }
 
 /*
