From 0206d9c78165d264393a28706044420848d0aaf3 Mon Sep 17 00:00:00 2001
From: Zhuang Jin Can <jin.can.zhuang@intel.com>
Date: Fri, 17 Apr 2015 16:29:25 +0800
Subject: [PATCH] xhci: ssic: do not set port to used after resume

Setting port to used is done by xHCI Save & Restore machanism and
should not be managed by driver.

Change-Id: Ibab37ec26feb98676224cfff59d6e34ca7b16683
Signed-off-by: Zhuang Jin Can <jin.can.zhuang@intel.com>
---
 drivers/usb/host/xhci-intel-cap.c | 56 +++++++++++++++++++++------------------
 1 file changed, 30 insertions(+), 26 deletions(-)

diff --git a/drivers/usb/host/xhci-intel-cap.c b/drivers/usb/host/xhci-intel-cap.c
index eb55af2..bb5a7aa 100644
--- a/drivers/usb/host/xhci-intel-cap.c
+++ b/drivers/usb/host/xhci-intel-cap.c
@@ -160,32 +160,6 @@ void xhci_intel_ssic_port_unused(struct xhci_hcd *xhci, bool unused)
 	xhci_dbg(xhci, "ssic port - %s\n", unused ? "unused" : "used");
 
 	ext_start = XHCI_HCC_EXT_CAPS(readl(&xhci->cap_regs->hcc_params));
-	ext_offset = xhci_find_ext_cap_by_id(&xhci->cap_regs->hc_capbase,
-			ext_start << 2, XHCI_EXT_CAPS_INTEL_SSIC);
-
-	if (ext_offset) {
-		reg = &xhci->cap_regs->hc_capbase +
-				((ext_offset + SSIC_PORT_CFG2) >> 2);
-		for (i = 0; i < SSIC_PORT_NUM; i++) {
-			data = readl(reg);
-			data &= ~PROG_DONE;
-			writel(data, reg);
-
-			data = readl(reg);
-			if (unused)
-				data |= SSIC_PORT_UNUSED;
-			else
-				data &= ~SSIC_PORT_UNUSED;
-			writel(data, reg);
-
-			data = readl(reg);
-			data |= PROG_DONE;
-			writel(data, reg);
-
-			reg += SSIC_PORT_CFG2_OFFSET;
-		}
-	} else
-		xhci_err(xhci, "intel ssic ext caps not found\n");
 
 	/* WORKAROUND: Register Bank Valid bit is lost after controller enters
 	 * D3, need to set it back, otherwise SSIC RRAP commands can't be sent
@@ -209,6 +183,36 @@ void xhci_intel_ssic_port_unused(struct xhci_hcd *xhci, bool unused)
 
 			reg += SSIC_ACCESS_CTRL_OFFSET;
 		}
+
+		/* Setting SSIC ports to "used" will be done by xHCI
+		 * Save & Restore, so return here.
+		 */
+		return;
 	}
+
+	ext_offset = xhci_find_ext_cap_by_id(&xhci->cap_regs->hc_capbase,
+			ext_start << 2, XHCI_EXT_CAPS_INTEL_SSIC);
+
+	if (ext_offset) {
+		reg = &xhci->cap_regs->hc_capbase +
+				((ext_offset + SSIC_PORT_CFG2) >> 2);
+		for (i = 0; i < SSIC_PORT_NUM; i++) {
+			data = readl(reg);
+			data &= ~PROG_DONE;
+			writel(data, reg);
+
+			data = readl(reg);
+			data |= SSIC_PORT_UNUSED;
+			writel(data, reg);
+
+			data = readl(reg);
+			data |= PROG_DONE;
+			writel(data, reg);
+
+			reg += SSIC_PORT_CFG2_OFFSET;
+		}
+	} else
+		xhci_err(xhci, "intel ssic ext caps not found\n");
+
 }
 EXPORT_SYMBOL_GPL(xhci_intel_ssic_port_unused);
-- 
1.9.1

