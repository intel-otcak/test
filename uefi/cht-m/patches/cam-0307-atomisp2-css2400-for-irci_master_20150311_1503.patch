From bfb456981f343b49fcfd0e675d65ab18ccb5d82c Mon Sep 17 00:00:00 2001
From: Pengpeng Cui <pengpengx.cui@intel.com>
Date: Thu, 12 Mar 2015 18:44:00 +0800
Subject: [PATCH 303/307] atomisp2: css2400 for irci_master_20150311_1503

Merge CSS2.1 for css2400  for
irci_master_20150311_1503 firmware

Change-Id: I1bc4b95c2883afdee6b71bf0804759178cfd13a8
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-25619
Signed-off-by: Pengpeng Cui <pengpengx.cui@intel.com>
Signed-off-by: Tao Wei <wei.tao@intel.com>
Reviewed-on: https://icggerrit.ir.intel.com/45983
Reviewed-by: Tian Shu Qiu <tian.shu.qiu@intel.com>
---
 .../camera/pipe/interface/ia_css_pipe_binarydesc.h |  11 +
 .../atomisp2/css/camera/pipe/src/pipe_binarydesc.c |   2 +-
 .../pci/atomisp2/css/css_2400_system/spmem_dump.c  | 482 ++++++++++-----------
 .../css/css_2401_csi2p_system/spmem_dump.c         | 438 +++++++++----------
 .../pci/atomisp2/css/css_2401_system/spmem_dump.c  | 482 ++++++++++-----------
 .../media/pci/atomisp2/css/css_api_version.h       |  26 +-
 .../atomisp2/css/hive_isp_css_common/host/gdc.c    |  33 ++
 .../css/hive_isp_css_include/host/gdc_public.h     |  10 +
 .../camera/drivers/media/pci/atomisp2/css/ia_css.h |   2 +-
 .../media/pci/atomisp2/css/ia_css_acc_types.h      |   9 +
 .../media/pci/atomisp2/css/ia_css_host_data.h      |   2 +-
 .../drivers/media/pci/atomisp2/css/ia_css_pipe.h   |   4 +
 .../drivers/media/pci/atomisp2/css/ia_css_types.h  |   2 +-
 .../media/pci/atomisp2/css/ia_css_version_data.h   |   2 +-
 .../css/isp/kernels/dvs/dvs_1.0/ia_css_dvs.host.c  |  29 +-
 .../css/isp/kernels/dvs/dvs_1.0/ia_css_dvs.host.h  |   4 +-
 .../atomisp2/css/isp/kernels/hdr/ia_css_hdr.host.c |   2 +-
 .../atomisp2/css/isp/kernels/hdr/ia_css_hdr.host.h |   2 +-
 .../css/isp/kernels/hdr/ia_css_hdr_param.h         |   2 +-
 .../css/isp/kernels/hdr/ia_css_hdr_types.h         |   2 +-
 .../css/isp/kernels/pdaf/ia_css_pdaf.host.c        |  67 ++-
 .../css/isp/kernels/pdaf/ia_css_pdaf.host.h        |  12 +-
 .../css/isp/kernels/pdaf/ia_css_pdaf_param.h       |  41 +-
 .../css/isp/kernels/pdaf/ia_css_pdaf_types.h       |  33 +-
 .../css/isp/kernels/xnr/xnr_3.0/ia_css_xnr3.host.c |  55 ++-
 .../isp/kernels/xnr/xnr_3.0/ia_css_xnr3_param.h    |  14 +-
 .../isp/kernels/xnr/xnr_3.0/ia_css_xnr3_types.h    |  25 +-
 .../atomisp2/css/isp/modes/interface/isp_const.h   |   1 +
 .../pci/atomisp2/css/runtime/binary/src/binary.c   |   2 +-
 .../css/runtime/spctrl/interface/ia_css_spctrl.h   |   2 +
 .../pci/atomisp2/css/runtime/spctrl/src/spctrl.c   |   5 +
 .../camera/drivers/media/pci/atomisp2/css/sh_css.c | 115 ++++-
 .../media/pci/atomisp2/css/sh_css_firmware.c       |  50 ++-
 .../media/pci/atomisp2/css/sh_css_firmware.h       |   3 +
 .../media/pci/atomisp2/css/sh_css_internal.h       |  13 +-
 .../media/pci/atomisp2/css/sh_css_param_dvs.c      | 139 +++---
 .../drivers/media/pci/atomisp2/css/sh_css_params.c | 237 ++++++----
 37 files changed, 1407 insertions(+), 953 deletions(-)

diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/camera/pipe/interface/ia_css_pipe_binarydesc.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/camera/pipe/interface/ia_css_pipe_binarydesc.h
index b5b0e60..616789d9 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/camera/pipe/interface/ia_css_pipe_binarydesc.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/camera/pipe/interface/ia_css_pipe_binarydesc.h
@@ -282,5 +282,16 @@ extern void ia_css_pipe_get_ldc_binarydesc(
 	struct ia_css_frame_info *in_info,
 	struct ia_css_frame_info *out_info);
 
+/** @brief Calculates the required BDS factor
+ *
+ * @param[in] input_res
+ * @param[in] output_res
+ * @param[in/out] bds_factor
+ * @return	IA_CSS_SUCCESS or error code upon error.
+ */
+enum ia_css_err binarydesc_calculate_bds_factor(
+	struct ia_css_resolution input_res,
+	struct ia_css_resolution output_res,
+	unsigned int *bds_factor);
 
 #endif /* __IA_CSS_PIPE_BINARYDESC_H__ */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/camera/pipe/src/pipe_binarydesc.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/camera/pipe/src/pipe_binarydesc.c
index 79996e2..23867ef 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/camera/pipe/src/pipe_binarydesc.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/camera/pipe/src/pipe_binarydesc.c
@@ -160,7 +160,7 @@ enum ia_css_err sh_css_bds_factor_get_numerator_denominator(
 	return IA_CSS_ERR_INVALID_ARGUMENTS;
 }
 
-static enum ia_css_err binarydesc_calculate_bds_factor(
+enum ia_css_err binarydesc_calculate_bds_factor(
 	struct ia_css_resolution input_res,
 	struct ia_css_resolution output_res,
 	unsigned int *bds_factor)
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/css_2400_system/spmem_dump.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/css_2400_system/spmem_dump.c
index fa49920..5f5ae51 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/css_2400_system/spmem_dump.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/css_2400_system/spmem_dump.c
@@ -24,7 +24,7 @@
 
 /* function input_system_acquisition_stop: ADE */
 
-/* function longjmp: 6868 */
+/* function longjmp: 6884 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_HIVE_IF_SRST_MASK
@@ -38,11 +38,11 @@
 #define HIVE_ADDR_sp_HIVE_IF_SRST_MASK 0x1C8
 #define HIVE_SIZE_sp_HIVE_IF_SRST_MASK 16
 
-/* function tmpmem_init_dmem: 659A */
+/* function tmpmem_init_dmem: 65B6 */
 
-/* function ia_css_isys_sp_token_map_receive_ack: 5EDE */
+/* function ia_css_isys_sp_token_map_receive_ack: 5EFA */
 
-/* function ia_css_dmaproxy_sp_set_addr_B: 3294 */
+/* function ia_css_dmaproxy_sp_set_addr_B: 32B0 */
 
 /* function debug_buffer_set_ddr_addr: DD */
 
@@ -51,22 +51,22 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_vbuf_mipi
 #define HIVE_MEM_vbuf_mipi scalar_processor_2400_dmem
-#define HIVE_ADDR_vbuf_mipi 0x630C
+#define HIVE_ADDR_vbuf_mipi 0x631C
 #define HIVE_SIZE_vbuf_mipi 12
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_vbuf_mipi scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_vbuf_mipi 0x630C
+#define HIVE_ADDR_sp_vbuf_mipi 0x631C
 #define HIVE_SIZE_sp_vbuf_mipi 12
 
-/* function ia_css_event_sp_decode: 3485 */
+/* function ia_css_event_sp_decode: 34A1 */
 
-/* function ia_css_queue_get_size: 47FE */
+/* function ia_css_queue_get_size: 481A */
 
-/* function ia_css_queue_load: 4E3F */
+/* function ia_css_queue_load: 4E5B */
 
-/* function setjmp: 6871 */
+/* function setjmp: 688D */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_sp2host_isys_event_queue
@@ -80,22 +80,22 @@
 #define HIVE_ADDR_sp_sem_for_sp2host_isys_event_queue 0x4684
 #define HIVE_SIZE_sp_sem_for_sp2host_isys_event_queue 20
 
-/* function ia_css_dmaproxy_sp_wait_for_ack: 6E21 */
+/* function ia_css_dmaproxy_sp_wait_for_ack: 6E3D */
 
-/* function ia_css_sp_rawcopy_func: 5064 */
+/* function ia_css_sp_rawcopy_func: 5080 */
 
-/* function ia_css_tagger_buf_sp_pop_marked: 2929 */
+/* function ia_css_tagger_buf_sp_pop_marked: 2942 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_stage
 #define HIVE_MEM_isp_stage scalar_processor_2400_dmem
-#define HIVE_ADDR_isp_stage 0x5BF0
+#define HIVE_ADDR_isp_stage 0x5C00
 #define HIVE_SIZE_isp_stage 832
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isp_stage scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_stage 0x5BF0
+#define HIVE_ADDR_sp_isp_stage 0x5C00
 #define HIVE_SIZE_sp_isp_stage 832
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -110,9 +110,9 @@
 #define HIVE_ADDR_sp_vbuf_raw 0x2F0
 #define HIVE_SIZE_sp_vbuf_raw 4
 
-/* function ia_css_sp_bin_copy_func: 4F8B */
+/* function ia_css_sp_bin_copy_func: 4FA7 */
 
-/* function ia_css_queue_item_store: 4B8D */
+/* function ia_css_queue_item_store: 4BA9 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_metadata_bufs
@@ -143,30 +143,30 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_binary_group
 #define HIVE_MEM_sp_binary_group scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_binary_group 0x5FE0
+#define HIVE_ADDR_sp_binary_group 0x5FF0
 #define HIVE_SIZE_sp_binary_group 32
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_binary_group scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_binary_group 0x5FE0
+#define HIVE_ADDR_sp_sp_binary_group 0x5FF0
 #define HIVE_SIZE_sp_sp_binary_group 32
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_sw_state
 #define HIVE_MEM_sp_sw_state scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sw_state 0x629C
+#define HIVE_ADDR_sp_sw_state 0x62AC
 #define HIVE_SIZE_sp_sw_state 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_sw_state scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_sw_state 0x629C
+#define HIVE_ADDR_sp_sp_sw_state 0x62AC
 #define HIVE_SIZE_sp_sp_sw_state 4
 
 /* function ia_css_thread_sp_main: D5B */
 
-/* function ia_css_ispctrl_sp_init_internal_buffers: 368B */
+/* function ia_css_ispctrl_sp_init_internal_buffers: 36A7 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp2host_psys_event_queue_handle
@@ -192,18 +192,18 @@
 #define HIVE_ADDR_sp_sem_for_sp2host_psys_event_queue 0x4698
 #define HIVE_SIZE_sp_sem_for_sp2host_psys_event_queue 20
 
-/* function ia_css_tagger_sp_propagate_frame: 23C9 */
+/* function ia_css_tagger_sp_propagate_frame: 23E2 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_stop_copy_preview
 #define HIVE_MEM_sp_stop_copy_preview scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_stop_copy_preview 0x6280
+#define HIVE_ADDR_sp_stop_copy_preview 0x6290
 #define HIVE_SIZE_sp_stop_copy_preview 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_stop_copy_preview scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_stop_copy_preview 0x6280
+#define HIVE_ADDR_sp_sp_stop_copy_preview 0x6290
 #define HIVE_SIZE_sp_sp_stop_copy_preview 4
 
 /* function input_system_reg_load: B17 */
@@ -211,28 +211,28 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_vbuf_handles
 #define HIVE_MEM_vbuf_handles scalar_processor_2400_dmem
-#define HIVE_ADDR_vbuf_handles 0x6318
+#define HIVE_ADDR_vbuf_handles 0x6328
 #define HIVE_SIZE_vbuf_handles 960
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_vbuf_handles scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_vbuf_handles 0x6318
+#define HIVE_ADDR_sp_vbuf_handles 0x6328
 #define HIVE_SIZE_sp_vbuf_handles 960
 
-/* function ia_css_queue_store: 4CF3 */
+/* function ia_css_queue_store: 4D0F */
 
-/* function ia_css_sp_flash_register: 2B97 */
+/* function ia_css_sp_flash_register: 2BB0 */
 
-/* function ia_css_sp_rawcopy_dummy_function: 566C */
+/* function ia_css_sp_rawcopy_dummy_function: 5688 */
 
-/* function ia_css_isys_sp_backend_create: 5B51 */
+/* function ia_css_isys_sp_backend_create: 5B6D */
 
-/* function ia_css_pipeline_sp_init: 181A */
+/* function ia_css_pipeline_sp_init: 1833 */
 
-/* function ia_css_tagger_sp_configure: 22B9 */
+/* function ia_css_tagger_sp_configure: 22D2 */
 
-/* function ia_css_ispctrl_sp_end_binary: 34CE */
+/* function ia_css_ispctrl_sp_end_binary: 34EA */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_h_pipe_private_per_frame_ddr_ptrs
@@ -296,35 +296,35 @@
 #define HIVE_ADDR_sp_host_sp_com 0x4114
 #define HIVE_SIZE_sp_host_sp_com 220
 
-/* function ia_css_queue_get_free_space: 4952 */
+/* function ia_css_queue_get_free_space: 496E */
 
 /* function exec_image_pipe: 6C4 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_init_dmem_data
 #define HIVE_MEM_sp_init_dmem_data scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_init_dmem_data 0x62A0
+#define HIVE_ADDR_sp_init_dmem_data 0x62B0
 #define HIVE_SIZE_sp_init_dmem_data 24
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_init_dmem_data scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_init_dmem_data 0x62A0
+#define HIVE_ADDR_sp_sp_init_dmem_data 0x62B0
 #define HIVE_SIZE_sp_sp_init_dmem_data 24
 
-/* function ia_css_sp_metadata_start: 592E */
+/* function ia_css_sp_metadata_start: 594A */
 
-/* function ia_css_bufq_sp_init_buffer_queues: 2C06 */
+/* function ia_css_bufq_sp_init_buffer_queues: 2C1F */
 
-/* function ia_css_pipeline_sp_stop: 17FD */
+/* function ia_css_pipeline_sp_stop: 1816 */
 
-/* function ia_css_tagger_sp_connect_pipes: 2792 */
+/* function ia_css_tagger_sp_connect_pipes: 27AB */
 
 /* function sp_isys_copy_wait: 70D */
 
 /* function is_isp_debug_buffer_full: 337 */
 
-/* function ia_css_dmaproxy_sp_configure_channel_from_info: 3217 */
+/* function ia_css_dmaproxy_sp_configure_channel_from_info: 3233 */
 
 /* function encode_and_post_timer_event: A30 */
 
@@ -340,7 +340,7 @@
 #define HIVE_ADDR_sp_sp_per_frame_data 0x41F0
 #define HIVE_SIZE_sp_sp_per_frame_data 4
 
-/* function ia_css_rmgr_sp_vbuf_dequeue: 62EE */
+/* function ia_css_rmgr_sp_vbuf_dequeue: 630A */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_host2sp_psys_event_queue_handle
@@ -366,11 +366,11 @@
 #define HIVE_ADDR_sp_xmem_bin_addr 0x41F4
 #define HIVE_SIZE_sp_xmem_bin_addr 4
 
-/* function tmr_clock_init: 65BA */
+/* function tmr_clock_init: 65D6 */
 
-/* function ia_css_pipeline_sp_run: 13FC */
+/* function ia_css_pipeline_sp_run: 1403 */
 
-/* function memcpy: 6911 */
+/* function memcpy: 692D */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_GP_DEVICE_BASE
@@ -398,13 +398,13 @@
 
 /* function input_system_reg_store: B1E */
 
-/* function ia_css_isys_sp_frontend_start: 5D67 */
+/* function ia_css_isys_sp_frontend_start: 5D83 */
 
-/* function ia_css_uds_sp_scale_params: 661A */
+/* function ia_css_uds_sp_scale_params: 6636 */
 
 /* function ia_css_circbuf_increase_size: E40 */
 
-/* function __divu: 688F */
+/* function __divu: 68AB */
 
 /* function ia_css_thread_sp_get_state: C83 */
 
@@ -436,9 +436,9 @@
 
 /* function ia_css_parambuf_sp_handle_parameter_sets: 128A */
 
-/* function ia_css_spctrl_sp_set_state: 595D */
+/* function ia_css_spctrl_sp_set_state: 5979 */
 
-/* function ia_css_thread_sem_sp_signal: 6B11 */
+/* function ia_css_thread_sem_sp_signal: 6B2D */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_IRQ_BASE
@@ -464,13 +464,13 @@
 #define HIVE_ADDR_sp_TIMED_CTRL_BASE 0x40
 #define HIVE_SIZE_sp_TIMED_CTRL_BASE 4
 
-/* function ia_css_isys_sp_isr: 6FF6 */
+/* function ia_css_isys_sp_isr: 7012 */
 
-/* function ia_css_isys_sp_generate_exp_id: 60FF */
+/* function ia_css_isys_sp_generate_exp_id: 611B */
 
-/* function ia_css_rmgr_sp_init: 61E9 */
+/* function ia_css_rmgr_sp_init: 6205 */
 
-/* function ia_css_thread_sem_sp_init: 6BE2 */
+/* function ia_css_thread_sem_sp_init: 6BFE */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_is_isp_requested
@@ -496,15 +496,15 @@
 #define HIVE_ADDR_sp_sem_for_reading_cb_frame 0x46D0
 #define HIVE_SIZE_sp_sem_for_reading_cb_frame 40
 
-/* function ia_css_dmaproxy_sp_execute: 317F */
+/* function ia_css_dmaproxy_sp_execute: 319B */
 
-/* function ia_css_queue_is_empty: 4839 */
+/* function ia_css_queue_is_empty: 4855 */
 
-/* function ia_css_pipeline_sp_has_stopped: 17F3 */
+/* function ia_css_pipeline_sp_has_stopped: 180C */
 
 /* function ia_css_circbuf_extract: F44 */
 
-/* function ia_css_tagger_buf_sp_is_locked_from_start: 2A78 */
+/* function ia_css_tagger_buf_sp_is_locked_from_start: 2A91 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_current_sp_thread
@@ -518,13 +518,13 @@
 #define HIVE_ADDR_sp_current_sp_thread 0x1DC
 #define HIVE_SIZE_sp_current_sp_thread 4
 
-/* function ia_css_spctrl_sp_get_spid: 5964 */
+/* function ia_css_spctrl_sp_get_spid: 5980 */
 
-/* function ia_css_bufq_sp_reset_buffers: 2C8D */
+/* function ia_css_bufq_sp_reset_buffers: 2CA6 */
 
-/* function ia_css_dmaproxy_sp_read_byte_addr: 6E4F */
+/* function ia_css_dmaproxy_sp_read_byte_addr: 6E6B */
 
-/* function ia_css_rmgr_sp_uninit: 61E2 */
+/* function ia_css_rmgr_sp_uninit: 61FE */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_threads_stack
@@ -542,7 +542,7 @@
 
 /* function ia_css_parambuf_sp_wait_for_in_param: 1053 */
 
-/* function ia_css_isys_sp_token_map_get_exp_id: 5FC7 */
+/* function ia_css_isys_sp_token_map_get_exp_id: 5FE3 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cb_elems_param
@@ -594,7 +594,7 @@
 #define HIVE_ADDR_sp_sem_for_reading_cb_param 0x4710
 #define HIVE_SIZE_sp_sem_for_reading_cb_param 40
 
-/* function ia_css_queue_get_used_space: 4906 */
+/* function ia_css_queue_get_used_space: 4922 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_cont_capt_start
@@ -611,20 +611,20 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_tmp_heap
 #define HIVE_MEM_tmp_heap scalar_processor_2400_dmem
-#define HIVE_ADDR_tmp_heap 0x6000
+#define HIVE_ADDR_tmp_heap 0x6010
 #define HIVE_SIZE_tmp_heap 640
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_tmp_heap scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_tmp_heap 0x6000
+#define HIVE_ADDR_sp_tmp_heap 0x6010
 #define HIVE_SIZE_sp_tmp_heap 640
 
-/* function ia_css_rmgr_sp_get_num_vbuf: 64F2 */
+/* function ia_css_rmgr_sp_get_num_vbuf: 650E */
 
-/* function ia_css_ispctrl_sp_output_compute_dma_info: 3EAF */
+/* function ia_css_ispctrl_sp_output_compute_dma_info: 3ECB */
 
-/* function ia_css_tagger_sp_lock_exp_id: 20A4 */
+/* function ia_css_tagger_sp_lock_exp_id: 20BD */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_s3a_bufs
@@ -638,27 +638,27 @@
 #define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_s3a_bufs 0x4B8C
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_s3a_bufs 60
 
-/* function ia_css_queue_is_full: 499D */
+/* function ia_css_queue_is_full: 49B9 */
 
 /* function debug_buffer_init_isp: E4 */
 
-/* function ia_css_isys_sp_frontend_uninit: 5D21 */
+/* function ia_css_isys_sp_frontend_uninit: 5D3D */
 
-/* function ia_css_tagger_sp_exp_id_is_locked: 1FEA */
+/* function ia_css_tagger_sp_exp_id_is_locked: 2003 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_rmgr_sp_mipi_frame_sem
 #define HIVE_MEM_ia_css_rmgr_sp_mipi_frame_sem scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_rmgr_sp_mipi_frame_sem 0x66D8
+#define HIVE_ADDR_ia_css_rmgr_sp_mipi_frame_sem 0x66E8
 #define HIVE_SIZE_ia_css_rmgr_sp_mipi_frame_sem 60
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_rmgr_sp_mipi_frame_sem scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_rmgr_sp_mipi_frame_sem 0x66D8
+#define HIVE_ADDR_sp_ia_css_rmgr_sp_mipi_frame_sem 0x66E8
 #define HIVE_SIZE_sp_ia_css_rmgr_sp_mipi_frame_sem 60
 
-/* function ia_css_rmgr_sp_refcount_dump: 62C9 */
+/* function ia_css_rmgr_sp_refcount_dump: 62E5 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_isp_parameters_id
@@ -698,7 +698,7 @@
 #define HIVE_ADDR_sp_host2sp_isys_event_queue_handle 0x4BDC
 #define HIVE_SIZE_sp_host2sp_isys_event_queue_handle 12
 
-/* function ia_css_thread_sp_yield: 6A8A */
+/* function ia_css_thread_sp_yield: 6AA6 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cbs_param_desc
@@ -715,32 +715,32 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_dmaproxy_sp_invalidate_tlb
 #define HIVE_MEM_ia_css_dmaproxy_sp_invalidate_tlb scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_dmaproxy_sp_invalidate_tlb 0x5BE0
+#define HIVE_ADDR_ia_css_dmaproxy_sp_invalidate_tlb 0x5BF4
 #define HIVE_SIZE_ia_css_dmaproxy_sp_invalidate_tlb 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_dmaproxy_sp_invalidate_tlb scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_dmaproxy_sp_invalidate_tlb 0x5BE0
+#define HIVE_ADDR_sp_ia_css_dmaproxy_sp_invalidate_tlb 0x5BF4
 #define HIVE_SIZE_sp_ia_css_dmaproxy_sp_invalidate_tlb 4
 
 /* function ia_css_thread_sp_fork: D10 */
 
-/* function ia_css_tagger_sp_destroy: 279C */
+/* function ia_css_tagger_sp_destroy: 27B5 */
 
-/* function ia_css_dmaproxy_sp_vmem_read: 311F */
+/* function ia_css_dmaproxy_sp_vmem_read: 313B */
 
-/* function ia_css_ifmtr_sp_init: 6150 */
+/* function ia_css_ifmtr_sp_init: 616C */
 
 /* function initialize_sp_group: 6D4 */
 
 /* function ia_css_thread_sp_init: D3C */
 
-/* function ia_css_isys_sp_reset_exp_id: 60F7 */
+/* function ia_css_isys_sp_reset_exp_id: 6113 */
 
-/* function qos_scheduler_update_fps: 660A */
+/* function qos_scheduler_update_fps: 6626 */
 
-/* function ia_css_ispctrl_sp_set_stream_base_addr: 4577 */
+/* function ia_css_ispctrl_sp_set_stream_base_addr: 4593 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ISP_DMEM_BASE
@@ -766,7 +766,7 @@
 #define HIVE_ADDR_sp_SP_DMEM_BASE 0x4
 #define HIVE_SIZE_sp_SP_DMEM_BASE 4
 
-/* function ia_css_dmaproxy_sp_read: 3195 */
+/* function ia_css_dmaproxy_sp_read: 31B1 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_raw_copy_line_count
@@ -792,7 +792,7 @@
 #define HIVE_ADDR_sp_host2sp_tag_cmd_queue_handle 0x4BE8
 #define HIVE_SIZE_sp_host2sp_tag_cmd_queue_handle 12
 
-/* function ia_css_queue_peek: 487C */
+/* function ia_css_queue_peek: 4898 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_flash_sp_frame_cnt
@@ -821,24 +821,24 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_thread
 #define HIVE_MEM_isp_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_isp_thread 0x5F30
+#define HIVE_ADDR_isp_thread 0x5F40
 #define HIVE_SIZE_isp_thread 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isp_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_thread 0x5F30
+#define HIVE_ADDR_sp_isp_thread 0x5F40
 #define HIVE_SIZE_sp_isp_thread 4
 
 /* function encode_and_post_sp_event_non_blocking: A78 */
 
-/* function ia_css_isys_sp_frontend_destroy: 5DF9 */
+/* function ia_css_isys_sp_frontend_destroy: 5E15 */
 
 /* function is_ddr_debug_buffer_full: 2CC */
 
-/* function ia_css_isys_sp_frontend_stop: 5D39 */
+/* function ia_css_isys_sp_frontend_stop: 5D55 */
 
-/* function ia_css_isys_sp_token_map_init: 6095 */
+/* function ia_css_isys_sp_token_map_init: 60B1 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_threads_fiber
@@ -856,20 +856,20 @@
 
 /* function debug_enqueue_ddr: EE */
 
-/* function ia_css_rmgr_sp_refcount_init_vbuf: 6284 */
+/* function ia_css_rmgr_sp_refcount_init_vbuf: 62A0 */
 
-/* function dmaproxy_sp_read_write: 6EFE */
+/* function dmaproxy_sp_read_write: 6F1A */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_dmaproxy_isp_dma_cmd_buffer
 #define HIVE_MEM_ia_css_dmaproxy_isp_dma_cmd_buffer scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_dmaproxy_isp_dma_cmd_buffer 0x5BE4
+#define HIVE_ADDR_ia_css_dmaproxy_isp_dma_cmd_buffer 0x5BF8
 #define HIVE_SIZE_ia_css_dmaproxy_isp_dma_cmd_buffer 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_dmaproxy_isp_dma_cmd_buffer scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_dmaproxy_isp_dma_cmd_buffer 0x5BE4
+#define HIVE_ADDR_sp_ia_css_dmaproxy_isp_dma_cmd_buffer 0x5BF8
 #define HIVE_SIZE_sp_ia_css_dmaproxy_isp_dma_cmd_buffer 4
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -896,17 +896,17 @@
 #define HIVE_ADDR_sp_ia_css_flash_sp_in_service 0x3178
 #define HIVE_SIZE_sp_ia_css_flash_sp_in_service 4
 
-/* function ia_css_dmaproxy_sp_process: 6C0A */
+/* function ia_css_dmaproxy_sp_process: 6C26 */
 
-/* function ia_css_tagger_buf_sp_mark_from_end: 2B5C */
+/* function ia_css_tagger_buf_sp_mark_from_end: 2B75 */
 
-/* function ia_css_isys_sp_backend_rcv_acquire_ack: 5A06 */
+/* function ia_css_isys_sp_backend_rcv_acquire_ack: 5A22 */
 
-/* function ia_css_isys_sp_backend_pre_acquire_request: 5A1C */
+/* function ia_css_isys_sp_backend_pre_acquire_request: 5A38 */
 
-/* function ia_css_ispctrl_sp_init_cs: 35BB */
+/* function ia_css_ispctrl_sp_init_cs: 35D7 */
 
-/* function ia_css_spctrl_sp_init: 5972 */
+/* function ia_css_spctrl_sp_init: 598E */
 
 /* function sp_event_proxy_init: 730 */
 
@@ -914,13 +914,13 @@
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_previous_clock_tick
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_previous_clock_tick scalar_processor_2400_dmem
 #define HIVE_ADDR_ia_css_bufq_sp_pipe_private_previous_clock_tick 0x4DD4
-#define HIVE_SIZE_ia_css_bufq_sp_pipe_private_previous_clock_tick 20
+#define HIVE_SIZE_ia_css_bufq_sp_pipe_private_previous_clock_tick 40
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_previous_clock_tick scalar_processor_2400_dmem
 #define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_previous_clock_tick 0x4DD4
-#define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_previous_clock_tick 20
+#define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_previous_clock_tick 40
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_output
@@ -937,13 +937,13 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_sems_for_host2sp_buf_queues
 #define HIVE_MEM_ia_css_bufq_sp_sems_for_host2sp_buf_queues scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_sems_for_host2sp_buf_queues 0x4DE8
+#define HIVE_ADDR_ia_css_bufq_sp_sems_for_host2sp_buf_queues 0x4DFC
 #define HIVE_SIZE_ia_css_bufq_sp_sems_for_host2sp_buf_queues 800
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_sems_for_host2sp_buf_queues scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_sems_for_host2sp_buf_queues 0x4DE8
+#define HIVE_ADDR_sp_ia_css_bufq_sp_sems_for_host2sp_buf_queues 0x4DFC
 #define HIVE_SIZE_sp_ia_css_bufq_sp_sems_for_host2sp_buf_queues 800
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -970,27 +970,27 @@
 #define HIVE_ADDR_sp_INPUT_FORMATTER_BASE 0x4C
 #define HIVE_SIZE_sp_INPUT_FORMATTER_BASE 16
 
-/* function sp_dma_proxy_reset_channels: 33EF */
+/* function sp_dma_proxy_reset_channels: 340B */
 
-/* function ia_css_isys_sp_backend_acquire: 5B27 */
+/* function ia_css_isys_sp_backend_acquire: 5B43 */
 
-/* function ia_css_tagger_sp_update_size: 2890 */
+/* function ia_css_tagger_sp_update_size: 28A9 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_host_sp_queue
 #define HIVE_MEM_ia_css_bufq_host_sp_queue scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_host_sp_queue 0x5108
+#define HIVE_ADDR_ia_css_bufq_host_sp_queue 0x511C
 #define HIVE_SIZE_ia_css_bufq_host_sp_queue 2008
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_host_sp_queue scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_host_sp_queue 0x5108
+#define HIVE_ADDR_sp_ia_css_bufq_host_sp_queue 0x511C
 #define HIVE_SIZE_sp_ia_css_bufq_host_sp_queue 2008
 
 /* function thread_fiber_sp_create: DA8 */
 
-/* function ia_css_dmaproxy_sp_set_increments: 3281 */
+/* function ia_css_dmaproxy_sp_set_increments: 329D */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_writing_cb_frame
@@ -1026,21 +1026,21 @@
 #endif
 #define HIVE_ADDR_sp_sp_start_isp_entry 0x453
 
-/* function ia_css_tagger_buf_sp_unmark_all: 2AE0 */
+/* function ia_css_tagger_buf_sp_unmark_all: 2AF9 */
 
-/* function ia_css_tagger_buf_sp_unmark_from_start: 2B21 */
+/* function ia_css_tagger_buf_sp_unmark_from_start: 2B3A */
 
-/* function ia_css_dmaproxy_sp_channel_acquire: 341B */
+/* function ia_css_dmaproxy_sp_channel_acquire: 3437 */
 
-/* function ia_css_rmgr_sp_add_num_vbuf: 64CE */
+/* function ia_css_rmgr_sp_add_num_vbuf: 64EA */
 
-/* function ia_css_isys_sp_token_map_create: 60DE */
+/* function ia_css_isys_sp_token_map_create: 60FA */
 
-/* function __ia_css_dmaproxy_sp_wait_for_ack_text: 30EB */
+/* function __ia_css_dmaproxy_sp_wait_for_ack_text: 3107 */
 
-/* function ia_css_tagger_sp_acquire_buf_elem: 1FC2 */
+/* function ia_css_tagger_sp_acquire_buf_elem: 1FDB */
 
-/* function ia_css_bufq_sp_is_dynamic_buffer: 2FD4 */
+/* function ia_css_bufq_sp_is_dynamic_buffer: 2FF0 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_group
@@ -1068,9 +1068,9 @@
 
 /* function ia_css_thread_sp_kill: CD6 */
 
-/* function ia_css_tagger_sp_create: 284A */
+/* function ia_css_tagger_sp_create: 2863 */
 
-/* function tmpmem_acquire_dmem: 657B */
+/* function tmpmem_acquire_dmem: 6597 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_MMU_BASE
@@ -1084,9 +1084,9 @@
 #define HIVE_ADDR_sp_MMU_BASE 0x24
 #define HIVE_SIZE_sp_MMU_BASE 8
 
-/* function ia_css_dmaproxy_sp_channel_release: 3407 */
+/* function ia_css_dmaproxy_sp_channel_release: 3423 */
 
-/* function ia_css_dmaproxy_sp_is_idle: 33E7 */
+/* function ia_css_dmaproxy_sp_is_idle: 3403 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_qos_start
@@ -1102,23 +1102,23 @@
 
 /* function isp_hmem_load: B55 */
 
-/* function ia_css_tagger_sp_release_buf_elem: 1F9E */
+/* function ia_css_tagger_sp_release_buf_elem: 1FB7 */
 
-/* function ia_css_eventq_sp_send: 345D */
+/* function ia_css_eventq_sp_send: 3479 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_isys_sp_error_cnt
 #define HIVE_MEM_ia_css_isys_sp_error_cnt scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_isys_sp_error_cnt 0x62C4
+#define HIVE_ADDR_ia_css_isys_sp_error_cnt 0x62D4
 #define HIVE_SIZE_ia_css_isys_sp_error_cnt 16
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_isys_sp_error_cnt scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_isys_sp_error_cnt 0x62C4
+#define HIVE_ADDR_sp_ia_css_isys_sp_error_cnt 0x62D4
 #define HIVE_SIZE_sp_ia_css_isys_sp_error_cnt 16
 
-/* function ia_css_tagger_buf_sp_unlock_from_start: 2A10 */
+/* function ia_css_tagger_buf_sp_unlock_from_start: 2A29 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_debug_buffer_ddr_address
@@ -1134,29 +1134,29 @@
 
 /* function sp_isys_copy_request: 714 */
 
-/* function ia_css_rmgr_sp_refcount_retain_vbuf: 635E */
+/* function ia_css_rmgr_sp_refcount_retain_vbuf: 637A */
 
 /* function ia_css_thread_sp_set_priority: CCE */
 
 /* function sizeof_hmem: BFC */
 
-/* function tmpmem_release_dmem: 656A */
+/* function tmpmem_release_dmem: 6586 */
 
 /* function cnd_input_system_cfg: 392 */
 
-/* function __ia_css_sp_rawcopy_func_critical: 6F7F */
+/* function __ia_css_sp_rawcopy_func_critical: 6F9B */
 
-/* function ia_css_dmaproxy_sp_set_width_exception: 326C */
+/* function ia_css_dmaproxy_sp_set_width_exception: 3288 */
 
 /* function sp_event_assert: 8B1 */
 
-/* function ia_css_flash_sp_init_internal_params: 2BFB */
+/* function ia_css_flash_sp_init_internal_params: 2C14 */
 
-/* function ia_css_tagger_buf_sp_pop_unmarked_and_unlocked: 28C1 */
+/* function ia_css_tagger_buf_sp_pop_unmarked_and_unlocked: 28DA */
 
-/* function __modu: 68D5 */
+/* function __modu: 68F1 */
 
-/* function ia_css_dmaproxy_sp_init_isp_vector: 30F1 */
+/* function ia_css_dmaproxy_sp_init_isp_vector: 310D */
 
 /* function isp_vamem_store: 0 */
 
@@ -1172,11 +1172,11 @@
 #define HIVE_ADDR_sp_GDC_BASE 0x44
 #define HIVE_SIZE_sp_GDC_BASE 8
 
-/* function ia_css_queue_local_init: 4B67 */
+/* function ia_css_queue_local_init: 4B83 */
 
-/* function sp_event_proxy_callout_func: 69A2 */
+/* function sp_event_proxy_callout_func: 69BE */
 
-/* function qos_scheduler_schedule_stage: 65DB */
+/* function qos_scheduler_schedule_stage: 65F7 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_thread_sp_num_ready_threads
@@ -1202,13 +1202,13 @@
 #define HIVE_ADDR_sp_sp_threads_stack_size 0x180
 #define HIVE_SIZE_sp_sp_threads_stack_size 28
 
-/* function ia_css_ispctrl_sp_isp_done_row_striping: 3E95 */
+/* function ia_css_ispctrl_sp_isp_done_row_striping: 3EB1 */
 
-/* function __ia_css_isys_sp_isr_text: 5E23 */
+/* function __ia_css_isys_sp_isr_text: 5E3F */
 
-/* function ia_css_queue_dequeue: 49E5 */
+/* function ia_css_queue_dequeue: 4A01 */
 
-/* function ia_css_dmaproxy_sp_configure_channel: 6E66 */
+/* function ia_css_dmaproxy_sp_configure_channel: 6E82 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_current_thread_fiber_sp
@@ -1224,7 +1224,7 @@
 
 /* function ia_css_circbuf_pop: FD8 */
 
-/* function memset: 6954 */
+/* function memset: 6970 */
 
 /* function irq_raise_set_token: B6 */
 
@@ -1240,27 +1240,27 @@
 #define HIVE_ADDR_sp_GPIO_BASE 0x3C
 #define HIVE_SIZE_sp_GPIO_BASE 4
 
-/* function ia_css_pipeline_acc_stage_enable: 17BE */
+/* function ia_css_pipeline_acc_stage_enable: 17D7 */
 
-/* function ia_css_tagger_sp_unlock_exp_id: 200F */
+/* function ia_css_tagger_sp_unlock_exp_id: 2028 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_ph
 #define HIVE_MEM_isp_ph scalar_processor_2400_dmem
-#define HIVE_ADDR_isp_ph 0x62D4
+#define HIVE_ADDR_isp_ph 0x62E4
 #define HIVE_SIZE_isp_ph 28
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isp_ph scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_ph 0x62D4
+#define HIVE_ADDR_sp_isp_ph 0x62E4
 #define HIVE_SIZE_sp_isp_ph 28
 
-/* function ia_css_isys_sp_token_map_flush: 6023 */
+/* function ia_css_isys_sp_token_map_flush: 603F */
 
-/* function ia_css_ispctrl_sp_init_ds: 371A */
+/* function ia_css_ispctrl_sp_init_ds: 3736 */
 
-/* function get_xmem_base_addr_raw: 3AC5 */
+/* function get_xmem_base_addr_raw: 3AE1 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cbs_param
@@ -1288,35 +1288,35 @@
 #define HIVE_ADDR_sp_sem_for_sp_group 0x47A0
 #define HIVE_SIZE_sp_sem_for_sp_group 20
 
-/* function ia_css_framebuf_sp_wait_for_in_frame: 64F9 */
+/* function ia_css_framebuf_sp_wait_for_in_frame: 6515 */
 
-/* function ia_css_sp_rawcopy_tag_frame: 5589 */
+/* function ia_css_sp_rawcopy_tag_frame: 55A5 */
 
 /* function isp_hmem_clear: B25 */
 
-/* function ia_css_framebuf_sp_release_in_frame: 653C */
+/* function ia_css_framebuf_sp_release_in_frame: 6558 */
 
-/* function ia_css_isys_sp_backend_snd_acquire_request: 5A79 */
+/* function ia_css_isys_sp_backend_snd_acquire_request: 5A95 */
 
-/* function ia_css_isys_sp_token_map_is_full: 5EAA */
+/* function ia_css_isys_sp_token_map_is_full: 5EC6 */
 
 /* function input_system_acquisition_run: AF9 */
 
-/* function ia_css_ispctrl_sp_start_binary: 3599 */
+/* function ia_css_ispctrl_sp_start_binary: 35B5 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_h_pipe_private_ddr_ptrs
 #define HIVE_MEM_ia_css_bufq_sp_h_pipe_private_ddr_ptrs scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 0x58E0
+#define HIVE_ADDR_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 0x58F4
 #define HIVE_SIZE_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 0x58E0
+#define HIVE_ADDR_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 0x58F4
 #define HIVE_SIZE_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 20
 
-/* function ia_css_eventq_sp_recv: 342F */
+/* function ia_css_eventq_sp_recv: 344B */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_pool
@@ -1330,9 +1330,9 @@
 #define HIVE_ADDR_sp_isp_pool 0x2E4
 #define HIVE_SIZE_sp_isp_pool 4
 
-/* function ia_css_rmgr_sp_rel_gen: 622B */
+/* function ia_css_rmgr_sp_rel_gen: 6247 */
 
-/* function css_get_frame_processing_time_end: 1F8E */
+/* function css_get_frame_processing_time_end: 1FA7 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_event_any_pending_mask
@@ -1346,15 +1346,15 @@
 #define HIVE_ADDR_sp_event_any_pending_mask 0x300
 #define HIVE_SIZE_sp_event_any_pending_mask 8
 
-/* function ia_css_isys_sp_backend_push: 5A30 */
+/* function ia_css_isys_sp_backend_push: 5A4C */
 
 /* function sh_css_decode_tag_descr: 352 */
 
 /* function debug_enqueue_isp: 27B */
 
-/* function qos_scheduler_update_stage_budget: 65C9 */
+/* function qos_scheduler_update_stage_budget: 65E5 */
 
-/* function ia_css_spctrl_sp_uninit: 596B */
+/* function ia_css_spctrl_sp_uninit: 5987 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_HIVE_IF_SWITCH_CODE
@@ -1371,16 +1371,16 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_dis_bufs
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_dis_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_dis_bufs 0x58F4
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_dis_bufs 0x5908
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_dis_bufs 140
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_dis_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_dis_bufs 0x58F4
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_dis_bufs 0x5908
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_dis_bufs 140
 
-/* function ia_css_tagger_buf_sp_lock_from_start: 2A44 */
+/* function ia_css_tagger_buf_sp_lock_from_start: 2A5D */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_isp_idle
@@ -1394,11 +1394,11 @@
 #define HIVE_ADDR_sp_sem_for_isp_idle 0x47B4
 #define HIVE_SIZE_sp_sem_for_isp_idle 20
 
-/* function ia_css_dmaproxy_sp_write_byte_addr: 314E */
+/* function ia_css_dmaproxy_sp_write_byte_addr: 316A */
 
-/* function ia_css_dmaproxy_sp_init: 30C5 */
+/* function ia_css_dmaproxy_sp_init: 30E1 */
 
-/* function ia_css_bufq_sp_release_dynamic_buf_clock_tick: 2CCD */
+/* function ia_css_bufq_sp_release_dynamic_buf_clock_tick: 2CE6 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ISP_VAMEM_BASE
@@ -1415,32 +1415,32 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_rawcopy_sp_tagger
 #define HIVE_MEM_ia_css_rawcopy_sp_tagger scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_rawcopy_sp_tagger 0x6284
+#define HIVE_ADDR_ia_css_rawcopy_sp_tagger 0x6294
 #define HIVE_SIZE_ia_css_rawcopy_sp_tagger 24
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_rawcopy_sp_tagger scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_rawcopy_sp_tagger 0x6284
+#define HIVE_ADDR_sp_ia_css_rawcopy_sp_tagger 0x6294
 #define HIVE_SIZE_sp_ia_css_rawcopy_sp_tagger 24
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_exp_ids
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_exp_ids scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_exp_ids 0x5980
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_exp_ids 0x5994
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_exp_ids 70
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_exp_ids scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_exp_ids 0x5980
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_exp_ids 0x5994
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_exp_ids 70
 
-/* function ia_css_queue_item_load: 4C59 */
+/* function ia_css_queue_item_load: 4C75 */
 
-/* function ia_css_spctrl_sp_get_state: 5956 */
+/* function ia_css_spctrl_sp_get_state: 5972 */
 
-/* function ia_css_isys_sp_token_map_uninit: 6040 */
+/* function ia_css_isys_sp_token_map_uninit: 605C */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_callout_sp_thread
@@ -1468,7 +1468,7 @@
 #define HIVE_ADDR_sp_SP_PMEM_BASE 0x0
 #define HIVE_SIZE_sp_SP_PMEM_BASE 4
 
-/* function ia_css_isys_sp_token_map_snd_acquire_req: 5FB0 */
+/* function ia_css_isys_sp_token_map_snd_acquire_req: 5FCC */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_isp_input_stream_format
@@ -1482,39 +1482,39 @@
 #define HIVE_ADDR_sp_sp_isp_input_stream_format 0x40F8
 #define HIVE_SIZE_sp_sp_isp_input_stream_format 20
 
-/* function __mod: 68C1 */
+/* function __mod: 68DD */
 
-/* function ia_css_dmaproxy_sp_init_dmem_channel: 31AF */
+/* function ia_css_dmaproxy_sp_init_dmem_channel: 31CB */
 
 /* function ia_css_thread_sp_join: CFF */
 
-/* function ia_css_dmaproxy_sp_add_command: 6F69 */
+/* function ia_css_dmaproxy_sp_add_command: 6F85 */
 
-/* function ia_css_sp_metadata_thread_func: 580A */
+/* function ia_css_sp_metadata_thread_func: 5826 */
 
-/* function __sp_event_proxy_func_critical: 698F */
+/* function __sp_event_proxy_func_critical: 69AB */
 
-/* function ia_css_sp_metadata_wait: 591D */
+/* function ia_css_sp_metadata_wait: 5939 */
 
 /* function ia_css_circbuf_peek_from_start: F08 */
 
-/* function ia_css_event_sp_encode: 34BA */
+/* function ia_css_event_sp_encode: 34D6 */
 
 /* function ia_css_thread_sp_run: D72 */
 
 /* function sp_isys_copy_func: 6F6 */
 
-/* function ia_css_isys_sp_backend_flush: 5A99 */
+/* function ia_css_isys_sp_backend_flush: 5AB5 */
 
-/* function ia_css_isys_sp_backend_frame_exists: 59B5 */
+/* function ia_css_isys_sp_backend_frame_exists: 59D1 */
 
-/* function ia_css_sp_isp_param_init_isp_memories: 46E2 */
+/* function ia_css_sp_isp_param_init_isp_memories: 46FE */
 
 /* function register_isr: 8A9 */
 
 /* function irq_raise: C8 */
 
-/* function ia_css_dmaproxy_sp_mmu_invalidate: 308C */
+/* function ia_css_dmaproxy_sp_mmu_invalidate: 30A8 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_HIVE_IF_SRST_ADDRESS
@@ -1528,25 +1528,25 @@
 #define HIVE_ADDR_sp_HIVE_IF_SRST_ADDRESS 0x1B8
 #define HIVE_SIZE_sp_HIVE_IF_SRST_ADDRESS 16
 
-/* function pipeline_sp_initialize_stage: 18F2 */
+/* function pipeline_sp_initialize_stage: 190B */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_isys_sp_frontend_states
 #define HIVE_MEM_ia_css_isys_sp_frontend_states scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_isys_sp_frontend_states 0x62B8
+#define HIVE_ADDR_ia_css_isys_sp_frontend_states 0x62C8
 #define HIVE_SIZE_ia_css_isys_sp_frontend_states 12
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_isys_sp_frontend_states scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_isys_sp_frontend_states 0x62B8
+#define HIVE_ADDR_sp_ia_css_isys_sp_frontend_states 0x62C8
 #define HIVE_SIZE_sp_ia_css_isys_sp_frontend_states 12
 
-/* function ia_css_dmaproxy_sp_read_byte_addr_mmio: 6E38 */
+/* function ia_css_dmaproxy_sp_read_byte_addr_mmio: 6E54 */
 
-/* function ia_css_ispctrl_sp_done_ds: 3701 */
+/* function ia_css_ispctrl_sp_done_ds: 371D */
 
-/* function ia_css_sp_isp_param_get_mem_inits: 46BD */
+/* function ia_css_sp_isp_param_get_mem_inits: 46D9 */
 
 /* function ia_css_parambuf_sp_init_buffer_queues: 13D0 */
 
@@ -1579,46 +1579,46 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_frames
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_frames scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_frames 0x59C8
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_frames 0x59DC
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_frames 280
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_frames scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_frames 0x59C8
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_frames 0x59DC
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_frames 280
 
-/* function qos_scheduler_init_stage_budget: 6602 */
+/* function qos_scheduler_init_stage_budget: 661E */
 
-/* function ia_css_isys_sp_backend_release: 5B0E */
+/* function ia_css_isys_sp_backend_release: 5B2A */
 
-/* function ia_css_isys_sp_backend_destroy: 5B38 */
+/* function ia_css_isys_sp_backend_destroy: 5B54 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp2host_buffer_queue_handle
 #define HIVE_MEM_sp2host_buffer_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp2host_buffer_queue_handle 0x5AE0
+#define HIVE_ADDR_sp2host_buffer_queue_handle 0x5AF4
 #define HIVE_SIZE_sp2host_buffer_queue_handle 96
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp2host_buffer_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp2host_buffer_queue_handle 0x5AE0
+#define HIVE_ADDR_sp_sp2host_buffer_queue_handle 0x5AF4
 #define HIVE_SIZE_sp_sp2host_buffer_queue_handle 96
 
-/* function ia_css_isys_sp_token_map_check_mipi_frame_size: 5F74 */
+/* function ia_css_isys_sp_token_map_check_mipi_frame_size: 5F90 */
 
-/* function ia_css_ispctrl_sp_init_isp_vars: 43DC */
+/* function ia_css_ispctrl_sp_init_isp_vars: 43F8 */
 
-/* function ia_css_isys_sp_frontend_has_empty_mipi_buffer_cb: 5B8A */
+/* function ia_css_isys_sp_frontend_has_empty_mipi_buffer_cb: 5BA6 */
 
 /* function sp_warning: 8DC */
 
-/* function ia_css_rmgr_sp_vbuf_enqueue: 631E */
+/* function ia_css_rmgr_sp_vbuf_enqueue: 633A */
 
-/* function ia_css_tagger_sp_tag_exp_id: 2119 */
+/* function ia_css_tagger_sp_tag_exp_id: 2132 */
 
-/* function ia_css_dmaproxy_sp_write: 3165 */
+/* function ia_css_dmaproxy_sp_write: 3181 */
 
 /* function ia_css_parambuf_sp_release_in_param: 1250 */
 
@@ -1637,29 +1637,29 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_isp_addresses
 #define HIVE_MEM_sp_isp_addresses scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_addresses 0x5F34
+#define HIVE_ADDR_sp_isp_addresses 0x5F44
 #define HIVE_SIZE_sp_isp_addresses 172
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_isp_addresses scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_isp_addresses 0x5F34
+#define HIVE_ADDR_sp_sp_isp_addresses 0x5F44
 #define HIVE_SIZE_sp_sp_isp_addresses 172
 
-/* function ia_css_rmgr_sp_acq_gen: 6243 */
+/* function ia_css_rmgr_sp_acq_gen: 625F */
 
 /* function receiver_reg_load: AD0 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isps
 #define HIVE_MEM_isps scalar_processor_2400_dmem
-#define HIVE_ADDR_isps 0x62F0
+#define HIVE_ADDR_isps 0x6300
 #define HIVE_SIZE_isps 28
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isps scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isps 0x62F0
+#define HIVE_ADDR_sp_isps 0x6300
 #define HIVE_SIZE_sp_isps 28
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -1674,25 +1674,25 @@
 #define HIVE_ADDR_sp_host_sp_queues_initialized 0x410C
 #define HIVE_SIZE_sp_host_sp_queues_initialized 4
 
-/* function ia_css_queue_uninit: 4B25 */
+/* function ia_css_queue_uninit: 4B41 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_ispctrl_sp_isp_started
 #define HIVE_MEM_ia_css_ispctrl_sp_isp_started scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_ispctrl_sp_isp_started 0x5BE8
+#define HIVE_ADDR_ia_css_ispctrl_sp_isp_started 0x5BFC
 #define HIVE_SIZE_ia_css_ispctrl_sp_isp_started 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_ispctrl_sp_isp_started scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_ispctrl_sp_isp_started 0x5BE8
+#define HIVE_ADDR_sp_ia_css_ispctrl_sp_isp_started 0x5BFC
 #define HIVE_SIZE_sp_ia_css_ispctrl_sp_isp_started 4
 
-/* function ia_css_bufq_sp_release_dynamic_buf: 2D39 */
+/* function ia_css_bufq_sp_release_dynamic_buf: 2D52 */
 
-/* function ia_css_dmaproxy_sp_set_height_exception: 325D */
+/* function ia_css_dmaproxy_sp_set_height_exception: 3279 */
 
-/* function ia_css_dmaproxy_sp_init_vmem_channel: 31E2 */
+/* function ia_css_dmaproxy_sp_init_vmem_channel: 31FE */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_num_ready_threads
@@ -1706,7 +1706,7 @@
 #define HIVE_ADDR_sp_num_ready_threads 0x49E4
 #define HIVE_SIZE_sp_num_ready_threads 4
 
-/* function ia_css_dmaproxy_sp_write_byte_addr_mmio: 3137 */
+/* function ia_css_dmaproxy_sp_write_byte_addr_mmio: 3153 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_vbuf_spref
@@ -1732,7 +1732,7 @@
 #define HIVE_ADDR_sp_sp_metadata_thread 0x4998
 #define HIVE_SIZE_sp_sp_metadata_thread 68
 
-/* function ia_css_queue_enqueue: 4A6F */
+/* function ia_css_queue_enqueue: 4A8B */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_flash_sp_request
@@ -1746,7 +1746,7 @@
 #define HIVE_ADDR_sp_ia_css_flash_sp_request 0x4A98
 #define HIVE_SIZE_sp_ia_css_flash_sp_request 4
 
-/* function ia_css_dmaproxy_sp_vmem_write: 3108 */
+/* function ia_css_dmaproxy_sp_vmem_write: 3124 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_tagger_frames
@@ -1760,7 +1760,7 @@
 #define HIVE_ADDR_sp_tagger_frames 0x49EC
 #define HIVE_SIZE_sp_tagger_frames 168
 
-/* function ia_css_isys_sp_token_map_snd_capture_req: 5FD2 */
+/* function ia_css_isys_sp_token_map_snd_capture_req: 5FEE */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_reading_if
@@ -1776,11 +1776,11 @@
 
 /* function sp_generate_interrupts: 95B */
 
-/* function ia_css_pipeline_sp_start: 1805 */
+/* function ia_css_pipeline_sp_start: 181E */
 
-/* function ia_css_sp_rawcopy_init: 504C */
+/* function ia_css_sp_rawcopy_init: 5068 */
 
-/* function tmr_clock_read: 65B0 */
+/* function tmr_clock_read: 65CC */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ISP_BAMEM_BASE
@@ -1794,21 +1794,21 @@
 #define HIVE_ADDR_sp_ISP_BAMEM_BASE 0x2F8
 #define HIVE_SIZE_sp_ISP_BAMEM_BASE 4
 
-/* function ia_css_isys_sp_frontend_rcv_capture_ack: 5C39 */
+/* function ia_css_isys_sp_frontend_rcv_capture_ack: 5C55 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_sems_for_sp2host_buf_queues
 #define HIVE_MEM_ia_css_bufq_sp_sems_for_sp2host_buf_queues scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_sems_for_sp2host_buf_queues 0x5B40
+#define HIVE_ADDR_ia_css_bufq_sp_sems_for_sp2host_buf_queues 0x5B54
 #define HIVE_SIZE_ia_css_bufq_sp_sems_for_sp2host_buf_queues 160
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues 0x5B40
+#define HIVE_ADDR_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues 0x5B54
 #define HIVE_SIZE_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues 160
 
-/* function css_get_frame_processing_time_start: 1F96 */
+/* function css_get_frame_processing_time_start: 1FAF */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cbs_frame
@@ -1838,9 +1838,9 @@
 #define HIVE_ADDR_sp_sem_for_str2mem 0x47EC
 #define HIVE_SIZE_sp_sem_for_str2mem 20
 
-/* function ia_css_tagger_buf_sp_is_marked_from_start: 2AAC */
+/* function ia_css_tagger_buf_sp_is_marked_from_start: 2AC5 */
 
-/* function ia_css_bufq_sp_acquire_dynamic_buf: 2EEE */
+/* function ia_css_bufq_sp_acquire_dynamic_buf: 2F0A */
 
 /* function ia_css_circbuf_destroy: 101D */
 
@@ -1856,13 +1856,13 @@
 #define HIVE_ADDR_sp_ISP_PMEM_BASE 0xC
 #define HIVE_SIZE_sp_ISP_PMEM_BASE 4
 
-/* function ia_css_sp_isp_param_mem_load: 4650 */
+/* function ia_css_sp_isp_param_mem_load: 466C */
 
-/* function __div: 6879 */
+/* function __div: 6895 */
 
-/* function ia_css_isys_sp_frontend_create: 5E0A */
+/* function ia_css_isys_sp_frontend_create: 5E26 */
 
-/* function ia_css_rmgr_sp_refcount_release_vbuf: 633D */
+/* function ia_css_rmgr_sp_refcount_release_vbuf: 6359 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_flash_sp_in_use
@@ -1876,7 +1876,7 @@
 #define HIVE_ADDR_sp_ia_css_flash_sp_in_use 0x4A9C
 #define HIVE_SIZE_sp_ia_css_flash_sp_in_use 4
 
-/* function ia_css_thread_sem_sp_wait: 6B5C */
+/* function ia_css_thread_sem_sp_wait: 6B78 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_sleep_mode
@@ -1890,7 +1890,7 @@
 #define HIVE_ADDR_sp_sp_sleep_mode 0x4110
 #define HIVE_SIZE_sp_sp_sleep_mode 4
 
-/* function ia_css_tagger_buf_sp_push: 29A7 */
+/* function ia_css_tagger_buf_sp_push: 29C0 */
 
 /* function mmu_invalidate_cache: D3 */
 
@@ -1906,7 +1906,7 @@
 #define HIVE_ADDR_sp_sp_max_cb_elems 0x148
 #define HIVE_SIZE_sp_sp_max_cb_elems 8
 
-/* function ia_css_queue_remote_init: 4B47 */
+/* function ia_css_queue_remote_init: 4B63 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_stop_req
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/css_2401_csi2p_system/spmem_dump.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/css_2401_csi2p_system/spmem_dump.c
index 4d234e9..b9032b2 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/css_2401_csi2p_system/spmem_dump.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/css_2401_csi2p_system/spmem_dump.c
@@ -22,35 +22,35 @@
 
 #define _hrt_cell_load_program_sp(proc) _hrt_cell_load_program_embedded(proc, sp)
 
-/* function longjmp: 6823 */
+/* function longjmp: 683F */
 
-/* function tmpmem_init_dmem: 656E */
+/* function tmpmem_init_dmem: 658A */
 
-/* function ia_css_dmaproxy_sp_set_addr_B: 3BB8 */
+/* function ia_css_dmaproxy_sp_set_addr_B: 3BD4 */
 
 /* function debug_buffer_set_ddr_addr: DD */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_vbuf_mipi
 #define HIVE_MEM_vbuf_mipi scalar_processor_2400_dmem
-#define HIVE_ADDR_vbuf_mipi 0x7388
+#define HIVE_ADDR_vbuf_mipi 0x7398
 #define HIVE_SIZE_vbuf_mipi 12
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_vbuf_mipi scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_vbuf_mipi 0x7388
+#define HIVE_ADDR_sp_vbuf_mipi 0x7398
 #define HIVE_SIZE_sp_vbuf_mipi 12
 
-/* function ia_css_event_sp_decode: 3DA9 */
+/* function ia_css_event_sp_decode: 3DC5 */
 
-/* function ia_css_queue_get_size: 5118 */
+/* function ia_css_queue_get_size: 5134 */
 
-/* function ia_css_queue_load: 5759 */
+/* function ia_css_queue_load: 5775 */
 
-/* function setjmp: 682C */
+/* function setjmp: 6848 */
 
-/* function ia_css_pipeline_sp_sfi_get_current_frame: 27A6 */
+/* function ia_css_pipeline_sp_sfi_get_current_frame: 27BF */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_sp2host_isys_event_queue
@@ -64,11 +64,11 @@
 #define HIVE_ADDR_sp_sem_for_sp2host_isys_event_queue 0x5760
 #define HIVE_SIZE_sp_sem_for_sp2host_isys_event_queue 20
 
-/* function ia_css_dmaproxy_sp_wait_for_ack: 6DBF */
+/* function ia_css_dmaproxy_sp_wait_for_ack: 6DDB */
 
-/* function ia_css_sp_rawcopy_func: 58C4 */
+/* function ia_css_sp_rawcopy_func: 58E0 */
 
-/* function ia_css_tagger_buf_sp_pop_marked: 326B */
+/* function ia_css_tagger_buf_sp_pop_marked: 3284 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_N_CSI_RX_BE_SID_WIDTH
@@ -85,13 +85,13 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_stage
 #define HIVE_MEM_isp_stage scalar_processor_2400_dmem
-#define HIVE_ADDR_isp_stage 0x6C88
+#define HIVE_ADDR_isp_stage 0x6C98
 #define HIVE_SIZE_isp_stage 832
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isp_stage scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_stage 0x6C88
+#define HIVE_ADDR_sp_isp_stage 0x6C98
 #define HIVE_SIZE_sp_isp_stage 832
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -106,9 +106,9 @@
 #define HIVE_ADDR_sp_vbuf_raw 0x378
 #define HIVE_SIZE_sp_vbuf_raw 4
 
-/* function ia_css_sp_bin_copy_func: 58A5 */
+/* function ia_css_sp_bin_copy_func: 58C1 */
 
-/* function ia_css_queue_item_store: 54A7 */
+/* function ia_css_queue_item_store: 54C3 */
 
 /* function input_system_reset: 1286 */
 
@@ -141,30 +141,30 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_binary_group
 #define HIVE_MEM_sp_binary_group scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_binary_group 0x7078
+#define HIVE_ADDR_sp_binary_group 0x7088
 #define HIVE_SIZE_sp_binary_group 32
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_binary_group scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_binary_group 0x7078
+#define HIVE_ADDR_sp_sp_binary_group 0x7088
 #define HIVE_SIZE_sp_sp_binary_group 32
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_sw_state
 #define HIVE_MEM_sp_sw_state scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sw_state 0x7334
+#define HIVE_ADDR_sp_sw_state 0x7344
 #define HIVE_SIZE_sp_sw_state 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_sw_state scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_sw_state 0x7334
+#define HIVE_ADDR_sp_sp_sw_state 0x7344
 #define HIVE_SIZE_sp_sp_sw_state 4
 
 /* function ia_css_thread_sp_main: 13F7 */
 
-/* function ia_css_ispctrl_sp_init_internal_buffers: 3FAF */
+/* function ia_css_ispctrl_sp_init_internal_buffers: 3FCB */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp2host_psys_event_queue_handle
@@ -192,43 +192,43 @@
 #define HIVE_ADDR_sp_sem_for_sp2host_psys_event_queue 0x5774
 #define HIVE_SIZE_sp_sem_for_sp2host_psys_event_queue 20
 
-/* function ia_css_tagger_sp_propagate_frame: 2D0B */
+/* function ia_css_tagger_sp_propagate_frame: 2D24 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_stop_copy_preview
 #define HIVE_MEM_sp_stop_copy_preview scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_stop_copy_preview 0x7318
+#define HIVE_ADDR_sp_stop_copy_preview 0x7328
 #define HIVE_SIZE_sp_stop_copy_preview 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_stop_copy_preview scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_stop_copy_preview 0x7318
+#define HIVE_ADDR_sp_sp_stop_copy_preview 0x7328
 #define HIVE_SIZE_sp_sp_stop_copy_preview 4
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_vbuf_handles
 #define HIVE_MEM_vbuf_handles scalar_processor_2400_dmem
-#define HIVE_ADDR_vbuf_handles 0x7394
+#define HIVE_ADDR_vbuf_handles 0x73A4
 #define HIVE_SIZE_vbuf_handles 960
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_vbuf_handles scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_vbuf_handles 0x7394
+#define HIVE_ADDR_sp_vbuf_handles 0x73A4
 #define HIVE_SIZE_sp_vbuf_handles 960
 
-/* function ia_css_queue_store: 560D */
+/* function ia_css_queue_store: 5629 */
 
-/* function ia_css_sp_flash_register: 34D9 */
+/* function ia_css_sp_flash_register: 34F2 */
 
-/* function ia_css_sp_rawcopy_dummy_function: 5D0D */
+/* function ia_css_sp_rawcopy_dummy_function: 5D29 */
 
-/* function ia_css_pipeline_sp_init: 2003 */
+/* function ia_css_pipeline_sp_init: 201C */
 
-/* function ia_css_tagger_sp_configure: 2BFB */
+/* function ia_css_tagger_sp_configure: 2C14 */
 
-/* function ia_css_ispctrl_sp_end_binary: 3DF2 */
+/* function ia_css_ispctrl_sp_end_binary: 3E0E */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_h_pipe_private_per_frame_ddr_ptrs
@@ -292,35 +292,35 @@
 #define HIVE_ADDR_sp_host_sp_com 0x3E48
 #define HIVE_SIZE_sp_host_sp_com 220
 
-/* function ia_css_queue_get_free_space: 526C */
+/* function ia_css_queue_get_free_space: 5288 */
 
 /* function exec_image_pipe: 5E6 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_init_dmem_data
 #define HIVE_MEM_sp_init_dmem_data scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_init_dmem_data 0x7338
+#define HIVE_ADDR_sp_init_dmem_data 0x7348
 #define HIVE_SIZE_sp_init_dmem_data 24
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_init_dmem_data scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_init_dmem_data 0x7338
+#define HIVE_ADDR_sp_sp_init_dmem_data 0x7348
 #define HIVE_SIZE_sp_sp_init_dmem_data 24
 
-/* function ia_css_sp_metadata_start: 5DE7 */
+/* function ia_css_sp_metadata_start: 5E03 */
 
-/* function ia_css_bufq_sp_init_buffer_queues: 352A */
+/* function ia_css_bufq_sp_init_buffer_queues: 3543 */
 
-/* function ia_css_pipeline_sp_stop: 1FE6 */
+/* function ia_css_pipeline_sp_stop: 1FFF */
 
-/* function ia_css_tagger_sp_connect_pipes: 30D4 */
+/* function ia_css_tagger_sp_connect_pipes: 30ED */
 
 /* function sp_isys_copy_wait: 644 */
 
 /* function is_isp_debug_buffer_full: 337 */
 
-/* function ia_css_dmaproxy_sp_configure_channel_from_info: 3B3B */
+/* function ia_css_dmaproxy_sp_configure_channel_from_info: 3B57 */
 
 /* function encode_and_post_timer_event: AA8 */
 
@@ -360,7 +360,7 @@
 #define HIVE_ADDR_sp_sp_per_frame_data 0x3F24
 #define HIVE_SIZE_sp_sp_per_frame_data 4
 
-/* function ia_css_rmgr_sp_vbuf_dequeue: 62C2 */
+/* function ia_css_rmgr_sp_vbuf_dequeue: 62DE */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_host2sp_psys_event_queue_handle
@@ -388,9 +388,9 @@
 
 /* function tmr_clock_init: 16F9 */
 
-/* function ia_css_pipeline_sp_run: 1AB8 */
+/* function ia_css_pipeline_sp_run: 1ABF */
 
-/* function memcpy: 68CC */
+/* function memcpy: 68E8 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_N_ISYS2401_DMA_CHANNEL_PROCS
@@ -430,11 +430,11 @@
 
 /* function stream2mmio_send_command: E0A */
 
-/* function ia_css_uds_sp_scale_params: 65D5 */
+/* function ia_css_uds_sp_scale_params: 65F1 */
 
 /* function ia_css_circbuf_increase_size: 14DC */
 
-/* function __divu: 684A */
+/* function __divu: 6866 */
 
 /* function ia_css_thread_sp_get_state: 131F */
 
@@ -478,9 +478,9 @@
 
 /* function ia_css_parambuf_sp_handle_parameter_sets: 193F */
 
-/* function ia_css_spctrl_sp_set_state: 5E03 */
+/* function ia_css_spctrl_sp_set_state: 5E1F */
 
-/* function ia_css_thread_sem_sp_signal: 6AAF */
+/* function ia_css_thread_sem_sp_signal: 6ACB */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_IRQ_BASE
@@ -494,7 +494,7 @@
 #define HIVE_ADDR_sp_IRQ_BASE 0x2C
 #define HIVE_SIZE_sp_IRQ_BASE 16
 
-/* function ia_css_virtual_isys_sp_isr_init: 5EA2 */
+/* function ia_css_virtual_isys_sp_isr_init: 5EBE */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_TIMED_CTRL_BASE
@@ -508,11 +508,11 @@
 #define HIVE_ADDR_sp_TIMED_CTRL_BASE 0x40
 #define HIVE_SIZE_sp_TIMED_CTRL_BASE 4
 
-/* function ia_css_isys_sp_generate_exp_id: 6152 */
+/* function ia_css_isys_sp_generate_exp_id: 616E */
 
-/* function ia_css_rmgr_sp_init: 61BD */
+/* function ia_css_rmgr_sp_init: 61D9 */
 
-/* function ia_css_thread_sem_sp_init: 6B80 */
+/* function ia_css_thread_sem_sp_init: 6B9C */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_is_isp_requested
@@ -538,17 +538,17 @@
 #define HIVE_ADDR_sp_sem_for_reading_cb_frame 0x57AC
 #define HIVE_SIZE_sp_sem_for_reading_cb_frame 40
 
-/* function ia_css_dmaproxy_sp_execute: 3AA3 */
+/* function ia_css_dmaproxy_sp_execute: 3ABF */
 
 /* function csi_rx_backend_rst: CE6 */
 
-/* function ia_css_queue_is_empty: 5153 */
+/* function ia_css_queue_is_empty: 516F */
 
-/* function ia_css_pipeline_sp_has_stopped: 1FDC */
+/* function ia_css_pipeline_sp_has_stopped: 1FF5 */
 
 /* function ia_css_circbuf_extract: 15E0 */
 
-/* function ia_css_tagger_buf_sp_is_locked_from_start: 33BA */
+/* function ia_css_tagger_buf_sp_is_locked_from_start: 33D3 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_current_sp_thread
@@ -562,13 +562,13 @@
 #define HIVE_ADDR_sp_current_sp_thread 0x274
 #define HIVE_SIZE_sp_current_sp_thread 4
 
-/* function ia_css_spctrl_sp_get_spid: 5E0A */
+/* function ia_css_spctrl_sp_get_spid: 5E26 */
 
-/* function ia_css_bufq_sp_reset_buffers: 35B1 */
+/* function ia_css_bufq_sp_reset_buffers: 35CA */
 
-/* function ia_css_dmaproxy_sp_read_byte_addr: 6DED */
+/* function ia_css_dmaproxy_sp_read_byte_addr: 6E09 */
 
-/* function ia_css_rmgr_sp_uninit: 61B6 */
+/* function ia_css_rmgr_sp_uninit: 61D2 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_threads_stack
@@ -648,7 +648,7 @@
 #define HIVE_ADDR_sp_sem_for_reading_cb_param 0x57EC
 #define HIVE_SIZE_sp_sem_for_reading_cb_param 40
 
-/* function ia_css_queue_get_used_space: 5220 */
+/* function ia_css_queue_get_used_space: 523C */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_cont_capt_start
@@ -665,20 +665,20 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_tmp_heap
 #define HIVE_MEM_tmp_heap scalar_processor_2400_dmem
-#define HIVE_ADDR_tmp_heap 0x7098
+#define HIVE_ADDR_tmp_heap 0x70A8
 #define HIVE_SIZE_tmp_heap 640
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_tmp_heap scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_tmp_heap 0x7098
+#define HIVE_ADDR_sp_tmp_heap 0x70A8
 #define HIVE_SIZE_sp_tmp_heap 640
 
-/* function ia_css_rmgr_sp_get_num_vbuf: 64C6 */
+/* function ia_css_rmgr_sp_get_num_vbuf: 64E2 */
 
-/* function ia_css_ispctrl_sp_output_compute_dma_info: 47C9 */
+/* function ia_css_ispctrl_sp_output_compute_dma_info: 47E5 */
 
-/* function ia_css_tagger_sp_lock_exp_id: 29E6 */
+/* function ia_css_tagger_sp_lock_exp_id: 29FF */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_s3a_bufs
@@ -692,25 +692,25 @@
 #define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_s3a_bufs 0x5C24
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_s3a_bufs 60
 
-/* function ia_css_queue_is_full: 52B7 */
+/* function ia_css_queue_is_full: 52D3 */
 
 /* function debug_buffer_init_isp: E4 */
 
-/* function ia_css_tagger_sp_exp_id_is_locked: 292C */
+/* function ia_css_tagger_sp_exp_id_is_locked: 2945 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_rmgr_sp_mipi_frame_sem
 #define HIVE_MEM_ia_css_rmgr_sp_mipi_frame_sem scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_rmgr_sp_mipi_frame_sem 0x7754
+#define HIVE_ADDR_ia_css_rmgr_sp_mipi_frame_sem 0x7764
 #define HIVE_SIZE_ia_css_rmgr_sp_mipi_frame_sem 60
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_rmgr_sp_mipi_frame_sem scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_rmgr_sp_mipi_frame_sem 0x7754
+#define HIVE_ADDR_sp_ia_css_rmgr_sp_mipi_frame_sem 0x7764
 #define HIVE_SIZE_sp_ia_css_rmgr_sp_mipi_frame_sem 60
 
-/* function ia_css_rmgr_sp_refcount_dump: 629D */
+/* function ia_css_rmgr_sp_refcount_dump: 62B9 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_isp_parameters_id
@@ -752,7 +752,7 @@
 #define HIVE_ADDR_sp_host2sp_isys_event_queue_handle 0x5C74
 #define HIVE_SIZE_sp_host2sp_isys_event_queue_handle 12
 
-/* function ia_css_thread_sp_yield: 6A28 */
+/* function ia_css_thread_sp_yield: 6A44 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cbs_param_desc
@@ -769,20 +769,20 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_dmaproxy_sp_invalidate_tlb
 #define HIVE_MEM_ia_css_dmaproxy_sp_invalidate_tlb scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_dmaproxy_sp_invalidate_tlb 0x6C78
+#define HIVE_ADDR_ia_css_dmaproxy_sp_invalidate_tlb 0x6C8C
 #define HIVE_SIZE_ia_css_dmaproxy_sp_invalidate_tlb 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_dmaproxy_sp_invalidate_tlb scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_dmaproxy_sp_invalidate_tlb 0x6C78
+#define HIVE_ADDR_sp_ia_css_dmaproxy_sp_invalidate_tlb 0x6C8C
 #define HIVE_SIZE_sp_ia_css_dmaproxy_sp_invalidate_tlb 4
 
 /* function ia_css_thread_sp_fork: 13AC */
 
-/* function ia_css_tagger_sp_destroy: 30DE */
+/* function ia_css_tagger_sp_destroy: 30F7 */
 
-/* function ia_css_dmaproxy_sp_vmem_read: 3A43 */
+/* function ia_css_dmaproxy_sp_vmem_read: 3A5F */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_N_LONG_PACKET_LUT_ENTRIES
@@ -800,11 +800,11 @@
 
 /* function ia_css_thread_sp_init: 13D8 */
 
-/* function ia_css_isys_sp_reset_exp_id: 6149 */
+/* function ia_css_isys_sp_reset_exp_id: 6165 */
 
-/* function qos_scheduler_update_fps: 65C5 */
+/* function qos_scheduler_update_fps: 65E1 */
 
-/* function ia_css_ispctrl_sp_set_stream_base_addr: 4E91 */
+/* function ia_css_ispctrl_sp_set_stream_base_addr: 4EAD */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ISP_DMEM_BASE
@@ -832,9 +832,9 @@
 
 /* function ibuf_ctrl_transfer: D67 */
 
-/* function ia_css_dmaproxy_sp_read: 3AB9 */
+/* function ia_css_dmaproxy_sp_read: 3AD5 */
 
-/* function virtual_isys_stream_is_capture_done: 5EC6 */
+/* function virtual_isys_stream_is_capture_done: 5EE2 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_raw_copy_line_count
@@ -860,7 +860,7 @@
 #define HIVE_ADDR_sp_host2sp_tag_cmd_queue_handle 0x5C80
 #define HIVE_SIZE_sp_host2sp_tag_cmd_queue_handle 12
 
-/* function ia_css_queue_peek: 5196 */
+/* function ia_css_queue_peek: 51B2 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_flash_sp_frame_cnt
@@ -891,13 +891,13 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_thread
 #define HIVE_MEM_isp_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_isp_thread 0x6FC8
+#define HIVE_ADDR_isp_thread 0x6FD8
 #define HIVE_SIZE_isp_thread 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isp_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_thread 0x6FC8
+#define HIVE_ADDR_sp_isp_thread 0x6FD8
 #define HIVE_SIZE_sp_isp_thread 4
 
 /* function encode_and_post_sp_event_non_blocking: AF0 */
@@ -920,20 +920,20 @@
 
 /* function debug_enqueue_ddr: EE */
 
-/* function ia_css_rmgr_sp_refcount_init_vbuf: 6258 */
+/* function ia_css_rmgr_sp_refcount_init_vbuf: 6274 */
 
-/* function dmaproxy_sp_read_write: 6E9C */
+/* function dmaproxy_sp_read_write: 6EB8 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_dmaproxy_isp_dma_cmd_buffer
 #define HIVE_MEM_ia_css_dmaproxy_isp_dma_cmd_buffer scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_dmaproxy_isp_dma_cmd_buffer 0x6C7C
+#define HIVE_ADDR_ia_css_dmaproxy_isp_dma_cmd_buffer 0x6C90
 #define HIVE_SIZE_ia_css_dmaproxy_isp_dma_cmd_buffer 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_dmaproxy_isp_dma_cmd_buffer scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_dmaproxy_isp_dma_cmd_buffer 0x6C7C
+#define HIVE_ADDR_sp_ia_css_dmaproxy_isp_dma_cmd_buffer 0x6C90
 #define HIVE_SIZE_sp_ia_css_dmaproxy_isp_dma_cmd_buffer 4
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -960,13 +960,13 @@
 #define HIVE_ADDR_sp_ia_css_flash_sp_in_service 0x3054
 #define HIVE_SIZE_sp_ia_css_flash_sp_in_service 4
 
-/* function ia_css_dmaproxy_sp_process: 6BA8 */
+/* function ia_css_dmaproxy_sp_process: 6BC4 */
 
-/* function ia_css_tagger_buf_sp_mark_from_end: 349E */
+/* function ia_css_tagger_buf_sp_mark_from_end: 34B7 */
 
-/* function ia_css_ispctrl_sp_init_cs: 3EDF */
+/* function ia_css_ispctrl_sp_init_cs: 3EFB */
 
-/* function ia_css_spctrl_sp_init: 5E18 */
+/* function ia_css_spctrl_sp_init: 5E34 */
 
 /* function sp_event_proxy_init: 7A2 */
 
@@ -976,13 +976,13 @@
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_previous_clock_tick
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_previous_clock_tick scalar_processor_2400_dmem
 #define HIVE_ADDR_ia_css_bufq_sp_pipe_private_previous_clock_tick 0x5E6C
-#define HIVE_SIZE_ia_css_bufq_sp_pipe_private_previous_clock_tick 20
+#define HIVE_SIZE_ia_css_bufq_sp_pipe_private_previous_clock_tick 40
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_previous_clock_tick scalar_processor_2400_dmem
 #define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_previous_clock_tick 0x5E6C
-#define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_previous_clock_tick 20
+#define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_previous_clock_tick 40
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_output
@@ -999,13 +999,13 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_sems_for_host2sp_buf_queues
 #define HIVE_MEM_ia_css_bufq_sp_sems_for_host2sp_buf_queues scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_sems_for_host2sp_buf_queues 0x5E80
+#define HIVE_ADDR_ia_css_bufq_sp_sems_for_host2sp_buf_queues 0x5E94
 #define HIVE_SIZE_ia_css_bufq_sp_sems_for_host2sp_buf_queues 800
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_sems_for_host2sp_buf_queues scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_sems_for_host2sp_buf_queues 0x5E80
+#define HIVE_ADDR_sp_ia_css_bufq_sp_sems_for_host2sp_buf_queues 0x5E94
 #define HIVE_SIZE_sp_ia_css_bufq_sp_sems_for_host2sp_buf_queues 800
 
 /* function pixelgen_prbs_config: E93 */
@@ -1034,25 +1034,25 @@
 #define HIVE_ADDR_sp_INPUT_FORMATTER_BASE 0x4C
 #define HIVE_SIZE_sp_INPUT_FORMATTER_BASE 16
 
-/* function sp_dma_proxy_reset_channels: 3D13 */
+/* function sp_dma_proxy_reset_channels: 3D2F */
 
-/* function ia_css_tagger_sp_update_size: 31D2 */
+/* function ia_css_tagger_sp_update_size: 31EB */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_host_sp_queue
 #define HIVE_MEM_ia_css_bufq_host_sp_queue scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_host_sp_queue 0x61A0
+#define HIVE_ADDR_ia_css_bufq_host_sp_queue 0x61B4
 #define HIVE_SIZE_ia_css_bufq_host_sp_queue 2008
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_host_sp_queue scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_host_sp_queue 0x61A0
+#define HIVE_ADDR_sp_ia_css_bufq_host_sp_queue 0x61B4
 #define HIVE_SIZE_sp_ia_css_bufq_host_sp_queue 2008
 
 /* function thread_fiber_sp_create: 1444 */
 
-/* function ia_css_dmaproxy_sp_set_increments: 3BA5 */
+/* function ia_css_dmaproxy_sp_set_increments: 3BC1 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_writing_cb_frame
@@ -1080,7 +1080,7 @@
 
 /* function pixelgen_tpg_is_done: F0D */
 
-/* function ia_css_isys_stream_capture_indication: 5FCC */
+/* function ia_css_isys_stream_capture_indication: 5FE8 */
 
 /* function sp_start_isp_entry: 392 */
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -1090,23 +1090,23 @@
 #endif
 #define HIVE_ADDR_sp_sp_start_isp_entry 0x392
 
-/* function ia_css_tagger_buf_sp_unmark_all: 3422 */
+/* function ia_css_tagger_buf_sp_unmark_all: 343B */
 
-/* function ia_css_tagger_buf_sp_unmark_from_start: 3463 */
+/* function ia_css_tagger_buf_sp_unmark_from_start: 347C */
 
-/* function ia_css_dmaproxy_sp_channel_acquire: 3D3F */
+/* function ia_css_dmaproxy_sp_channel_acquire: 3D5B */
 
-/* function ia_css_rmgr_sp_add_num_vbuf: 64A2 */
+/* function ia_css_rmgr_sp_add_num_vbuf: 64BE */
 
 /* function ibuf_ctrl_config: D8B */
 
-/* function ia_css_isys_stream_stop: 6044 */
+/* function ia_css_isys_stream_stop: 6060 */
 
-/* function __ia_css_dmaproxy_sp_wait_for_ack_text: 3A0F */
+/* function __ia_css_dmaproxy_sp_wait_for_ack_text: 3A2B */
 
-/* function ia_css_tagger_sp_acquire_buf_elem: 2904 */
+/* function ia_css_tagger_sp_acquire_buf_elem: 291D */
 
-/* function ia_css_bufq_sp_is_dynamic_buffer: 38F8 */
+/* function ia_css_bufq_sp_is_dynamic_buffer: 3914 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_group
@@ -1134,9 +1134,9 @@
 
 /* function ia_css_thread_sp_kill: 1372 */
 
-/* function ia_css_tagger_sp_create: 318C */
+/* function ia_css_tagger_sp_create: 31A5 */
 
-/* function tmpmem_acquire_dmem: 654F */
+/* function tmpmem_acquire_dmem: 656B */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_MMU_BASE
@@ -1150,11 +1150,11 @@
 #define HIVE_ADDR_sp_MMU_BASE 0x24
 #define HIVE_SIZE_sp_MMU_BASE 8
 
-/* function ia_css_dmaproxy_sp_channel_release: 3D2B */
+/* function ia_css_dmaproxy_sp_channel_release: 3D47 */
 
 /* function pixelgen_prbs_run: E81 */
 
-/* function ia_css_dmaproxy_sp_is_idle: 3D0B */
+/* function ia_css_dmaproxy_sp_is_idle: 3D27 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_qos_start
@@ -1170,11 +1170,11 @@
 
 /* function isp_hmem_load: B63 */
 
-/* function ia_css_tagger_sp_release_buf_elem: 28E0 */
+/* function ia_css_tagger_sp_release_buf_elem: 28F9 */
 
-/* function ia_css_eventq_sp_send: 3D81 */
+/* function ia_css_eventq_sp_send: 3D9D */
 
-/* function ia_css_tagger_buf_sp_unlock_from_start: 3352 */
+/* function ia_css_tagger_buf_sp_unlock_from_start: 336B */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_debug_buffer_ddr_address
@@ -1190,7 +1190,7 @@
 
 /* function sp_isys_copy_request: 6ED */
 
-/* function ia_css_rmgr_sp_refcount_retain_vbuf: 6332 */
+/* function ia_css_rmgr_sp_refcount_retain_vbuf: 634E */
 
 /* function ia_css_thread_sp_set_priority: 136A */
 
@@ -1200,19 +1200,19 @@
 
 /* function pixelgen_tpg_stop: EFB */
 
-/* function tmpmem_release_dmem: 653E */
+/* function tmpmem_release_dmem: 655A */
 
-/* function ia_css_dmaproxy_sp_set_width_exception: 3B90 */
+/* function ia_css_dmaproxy_sp_set_width_exception: 3BAC */
 
 /* function sp_event_assert: 929 */
 
-/* function ia_css_flash_sp_init_internal_params: 351F */
+/* function ia_css_flash_sp_init_internal_params: 3538 */
 
-/* function ia_css_tagger_buf_sp_pop_unmarked_and_unlocked: 3203 */
+/* function ia_css_tagger_buf_sp_pop_unmarked_and_unlocked: 321C */
 
-/* function __modu: 6890 */
+/* function __modu: 68AC */
 
-/* function ia_css_dmaproxy_sp_init_isp_vector: 3A15 */
+/* function ia_css_dmaproxy_sp_init_isp_vector: 3A31 */
 
 /* function input_system_channel_transfer: 122A */
 
@@ -1230,11 +1230,11 @@
 #define HIVE_ADDR_sp_GDC_BASE 0x44
 #define HIVE_SIZE_sp_GDC_BASE 8
 
-/* function ia_css_queue_local_init: 5481 */
+/* function ia_css_queue_local_init: 549D */
 
-/* function sp_event_proxy_callout_func: 695D */
+/* function sp_event_proxy_callout_func: 6979 */
 
-/* function qos_scheduler_schedule_stage: 6596 */
+/* function qos_scheduler_schedule_stage: 65B2 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_thread_sp_num_ready_threads
@@ -1260,13 +1260,13 @@
 #define HIVE_ADDR_sp_sp_threads_stack_size 0x17C
 #define HIVE_SIZE_sp_sp_threads_stack_size 24
 
-/* function ia_css_ispctrl_sp_isp_done_row_striping: 47AF */
+/* function ia_css_ispctrl_sp_isp_done_row_striping: 47CB */
 
-/* function __ia_css_virtual_isys_sp_isr_text: 5E5B */
+/* function __ia_css_virtual_isys_sp_isr_text: 5E77 */
 
-/* function ia_css_queue_dequeue: 52FF */
+/* function ia_css_queue_dequeue: 531B */
 
-/* function ia_css_dmaproxy_sp_configure_channel: 6E04 */
+/* function ia_css_dmaproxy_sp_configure_channel: 6E20 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_current_thread_fiber_sp
@@ -1282,7 +1282,7 @@
 
 /* function ia_css_circbuf_pop: 1674 */
 
-/* function memset: 690F */
+/* function memset: 692B */
 
 /* function irq_raise_set_token: B6 */
 
@@ -1300,25 +1300,25 @@
 
 /* function pixelgen_prbs_stop: E6F */
 
-/* function ia_css_pipeline_acc_stage_enable: 1FA7 */
+/* function ia_css_pipeline_acc_stage_enable: 1FC0 */
 
-/* function ia_css_tagger_sp_unlock_exp_id: 2951 */
+/* function ia_css_tagger_sp_unlock_exp_id: 296A */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_ph
 #define HIVE_MEM_isp_ph scalar_processor_2400_dmem
-#define HIVE_ADDR_isp_ph 0x7350
+#define HIVE_ADDR_isp_ph 0x7360
 #define HIVE_SIZE_isp_ph 28
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isp_ph scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_ph 0x7350
+#define HIVE_ADDR_sp_isp_ph 0x7360
 #define HIVE_SIZE_sp_isp_ph 28
 
-/* function ia_css_ispctrl_sp_init_ds: 403E */
+/* function ia_css_ispctrl_sp_init_ds: 405A */
 
-/* function get_xmem_base_addr_raw: 43DF */
+/* function get_xmem_base_addr_raw: 43FB */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cbs_param
@@ -1350,35 +1350,35 @@
 
 /* function csi_rx_frontend_run: C22 */
 
-/* function ia_css_framebuf_sp_wait_for_in_frame: 64CD */
+/* function ia_css_framebuf_sp_wait_for_in_frame: 64E9 */
 
-/* function ia_css_isys_stream_open: 60F9 */
+/* function ia_css_isys_stream_open: 6115 */
 
-/* function ia_css_sp_rawcopy_tag_frame: 5C87 */
+/* function ia_css_sp_rawcopy_tag_frame: 5CA3 */
 
 /* function input_system_channel_configure: 125D */
 
 /* function isp_hmem_clear: B33 */
 
-/* function ia_css_framebuf_sp_release_in_frame: 6510 */
+/* function ia_css_framebuf_sp_release_in_frame: 652C */
 
 /* function stream2mmio_config: E1B */
 
-/* function ia_css_ispctrl_sp_start_binary: 3EBD */
+/* function ia_css_ispctrl_sp_start_binary: 3ED9 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_h_pipe_private_ddr_ptrs
 #define HIVE_MEM_ia_css_bufq_sp_h_pipe_private_ddr_ptrs scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 0x6978
+#define HIVE_ADDR_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 0x698C
 #define HIVE_SIZE_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 0x6978
+#define HIVE_ADDR_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 0x698C
 #define HIVE_SIZE_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 20
 
-/* function ia_css_eventq_sp_recv: 3D53 */
+/* function ia_css_eventq_sp_recv: 3D6F */
 
 /* function csi_rx_frontend_config: C7A */
 
@@ -1394,9 +1394,9 @@
 #define HIVE_ADDR_sp_isp_pool 0x36C
 #define HIVE_SIZE_sp_isp_pool 4
 
-/* function ia_css_rmgr_sp_rel_gen: 61FF */
+/* function ia_css_rmgr_sp_rel_gen: 621B */
 
-/* function css_get_frame_processing_time_end: 28D0 */
+/* function css_get_frame_processing_time_end: 28E9 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_event_any_pending_mask
@@ -1410,31 +1410,31 @@
 #define HIVE_ADDR_sp_event_any_pending_mask 0x388
 #define HIVE_SIZE_sp_event_any_pending_mask 8
 
-/* function ia_css_pipeline_sp_get_pipe_io_status: 1AB1 */
+/* function ia_css_pipeline_sp_get_pipe_io_status: 1AB8 */
 
 /* function sh_css_decode_tag_descr: 352 */
 
 /* function debug_enqueue_isp: 27B */
 
-/* function qos_scheduler_update_stage_budget: 6584 */
+/* function qos_scheduler_update_stage_budget: 65A0 */
 
-/* function ia_css_spctrl_sp_uninit: 5E11 */
+/* function ia_css_spctrl_sp_uninit: 5E2D */
 
 /* function csi_rx_backend_run: C68 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_dis_bufs
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_dis_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_dis_bufs 0x698C
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_dis_bufs 0x69A0
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_dis_bufs 140
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_dis_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_dis_bufs 0x698C
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_dis_bufs 0x69A0
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_dis_bufs 140
 
-/* function ia_css_tagger_buf_sp_lock_from_start: 3386 */
+/* function ia_css_tagger_buf_sp_lock_from_start: 339F */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_isp_idle
@@ -1448,11 +1448,11 @@
 #define HIVE_ADDR_sp_sem_for_isp_idle 0x5890
 #define HIVE_SIZE_sp_sem_for_isp_idle 20
 
-/* function ia_css_dmaproxy_sp_write_byte_addr: 3A72 */
+/* function ia_css_dmaproxy_sp_write_byte_addr: 3A8E */
 
-/* function ia_css_dmaproxy_sp_init: 39E9 */
+/* function ia_css_dmaproxy_sp_init: 3A05 */
 
-/* function ia_css_bufq_sp_release_dynamic_buf_clock_tick: 35F1 */
+/* function ia_css_bufq_sp_release_dynamic_buf_clock_tick: 360A */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ISP_VAMEM_BASE
@@ -1471,30 +1471,30 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_rawcopy_sp_tagger
 #define HIVE_MEM_ia_css_rawcopy_sp_tagger scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_rawcopy_sp_tagger 0x731C
+#define HIVE_ADDR_ia_css_rawcopy_sp_tagger 0x732C
 #define HIVE_SIZE_ia_css_rawcopy_sp_tagger 24
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_rawcopy_sp_tagger scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_rawcopy_sp_tagger 0x731C
+#define HIVE_ADDR_sp_ia_css_rawcopy_sp_tagger 0x732C
 #define HIVE_SIZE_sp_ia_css_rawcopy_sp_tagger 24
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_exp_ids
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_exp_ids scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_exp_ids 0x6A18
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_exp_ids 0x6A2C
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_exp_ids 70
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_exp_ids scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_exp_ids 0x6A18
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_exp_ids 0x6A2C
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_exp_ids 70
 
-/* function ia_css_queue_item_load: 5573 */
+/* function ia_css_queue_item_load: 558F */
 
-/* function ia_css_spctrl_sp_get_state: 5DFC */
+/* function ia_css_spctrl_sp_get_state: 5E18 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_callout_sp_thread
@@ -1534,41 +1534,41 @@
 #define HIVE_ADDR_sp_sp_isp_input_stream_format 0x3E2C
 #define HIVE_SIZE_sp_sp_isp_input_stream_format 20
 
-/* function __mod: 687C */
+/* function __mod: 6898 */
 
-/* function ia_css_dmaproxy_sp_init_dmem_channel: 3AD3 */
+/* function ia_css_dmaproxy_sp_init_dmem_channel: 3AEF */
 
 /* function ia_css_thread_sp_join: 139B */
 
-/* function ia_css_dmaproxy_sp_add_command: 6F07 */
+/* function ia_css_dmaproxy_sp_add_command: 6F23 */
 
-/* function ia_css_sp_metadata_thread_func: 5DF5 */
+/* function ia_css_sp_metadata_thread_func: 5E11 */
 
-/* function __sp_event_proxy_func_critical: 694A */
+/* function __sp_event_proxy_func_critical: 6966 */
 
-/* function ia_css_pipeline_sp_wait_for_isys_stream_N: 5F69 */
+/* function ia_css_pipeline_sp_wait_for_isys_stream_N: 5F85 */
 
-/* function ia_css_sp_metadata_wait: 5DEE */
+/* function ia_css_sp_metadata_wait: 5E0A */
 
 /* function ia_css_circbuf_peek_from_start: 15A4 */
 
-/* function ia_css_event_sp_encode: 3DDE */
+/* function ia_css_event_sp_encode: 3DFA */
 
 /* function ia_css_thread_sp_run: 140E */
 
 /* function sp_isys_copy_func: 618 */
 
-/* function ia_css_sp_isp_param_init_isp_memories: 4FFC */
+/* function ia_css_sp_isp_param_init_isp_memories: 5018 */
 
 /* function register_isr: 921 */
 
 /* function irq_raise: C8 */
 
-/* function ia_css_dmaproxy_sp_mmu_invalidate: 39B0 */
+/* function ia_css_dmaproxy_sp_mmu_invalidate: 39CC */
 
 /* function csi_rx_backend_disable: C34 */
 
-/* function pipeline_sp_initialize_stage: 20EB */
+/* function pipeline_sp_initialize_stage: 2104 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_N_CSI_RX_FE_CTRL_DLANES
@@ -1582,13 +1582,13 @@
 #define HIVE_ADDR_sp_N_CSI_RX_FE_CTRL_DLANES 0x1C4
 #define HIVE_SIZE_sp_N_CSI_RX_FE_CTRL_DLANES 12
 
-/* function ia_css_dmaproxy_sp_read_byte_addr_mmio: 6DD6 */
+/* function ia_css_dmaproxy_sp_read_byte_addr_mmio: 6DF2 */
 
-/* function ia_css_ispctrl_sp_done_ds: 4025 */
+/* function ia_css_ispctrl_sp_done_ds: 4041 */
 
 /* function csi_rx_backend_config: C8B */
 
-/* function ia_css_sp_isp_param_get_mem_inits: 4FD7 */
+/* function ia_css_sp_isp_param_get_mem_inits: 4FF3 */
 
 /* function ia_css_parambuf_sp_init_buffer_queues: 1A85 */
 
@@ -1619,44 +1619,44 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_frames
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_frames scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_frames 0x6A60
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_frames 0x6A74
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_frames 280
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_frames scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_frames 0x6A60
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_frames 0x6A74
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_frames 280
 
-/* function qos_scheduler_init_stage_budget: 65BD */
+/* function qos_scheduler_init_stage_budget: 65D9 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp2host_buffer_queue_handle
 #define HIVE_MEM_sp2host_buffer_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp2host_buffer_queue_handle 0x6B78
+#define HIVE_ADDR_sp2host_buffer_queue_handle 0x6B8C
 #define HIVE_SIZE_sp2host_buffer_queue_handle 96
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp2host_buffer_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp2host_buffer_queue_handle 0x6B78
+#define HIVE_ADDR_sp_sp2host_buffer_queue_handle 0x6B8C
 #define HIVE_SIZE_sp_sp2host_buffer_queue_handle 96
 
-/* function ia_css_ispctrl_sp_init_isp_vars: 4CF6 */
+/* function ia_css_ispctrl_sp_init_isp_vars: 4D12 */
 
-/* function ia_css_isys_stream_start: 6026 */
+/* function ia_css_isys_stream_start: 6042 */
 
 /* function sp_warning: 954 */
 
-/* function ia_css_rmgr_sp_vbuf_enqueue: 62F2 */
+/* function ia_css_rmgr_sp_vbuf_enqueue: 630E */
 
-/* function ia_css_tagger_sp_tag_exp_id: 2A5B */
+/* function ia_css_tagger_sp_tag_exp_id: 2A74 */
 
-/* function ia_css_pipeline_sp_sfi_release_current_frame: 2752 */
+/* function ia_css_pipeline_sp_sfi_release_current_frame: 276B */
 
-/* function ia_css_dmaproxy_sp_write: 3A89 */
+/* function ia_css_dmaproxy_sp_write: 3AA5 */
 
-/* function ia_css_isys_stream_start_async: 60A0 */
+/* function ia_css_isys_stream_start_async: 60BC */
 
 /* function ia_css_parambuf_sp_release_in_param: 1905 */
 
@@ -1675,29 +1675,29 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_isp_addresses
 #define HIVE_MEM_sp_isp_addresses scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_addresses 0x6FCC
+#define HIVE_ADDR_sp_isp_addresses 0x6FDC
 #define HIVE_SIZE_sp_isp_addresses 172
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_isp_addresses scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_isp_addresses 0x6FCC
+#define HIVE_ADDR_sp_sp_isp_addresses 0x6FDC
 #define HIVE_SIZE_sp_sp_isp_addresses 172
 
-/* function ia_css_rmgr_sp_acq_gen: 6217 */
+/* function ia_css_rmgr_sp_acq_gen: 6233 */
 
 /* function input_system_input_port_open: 10ED */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isps
 #define HIVE_MEM_isps scalar_processor_2400_dmem
-#define HIVE_ADDR_isps 0x736C
+#define HIVE_ADDR_isps 0x737C
 #define HIVE_SIZE_isps 28
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isps scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isps 0x736C
+#define HIVE_ADDR_sp_isps 0x737C
 #define HIVE_SIZE_sp_isps 28
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -1712,25 +1712,25 @@
 #define HIVE_ADDR_sp_host_sp_queues_initialized 0x3E40
 #define HIVE_SIZE_sp_host_sp_queues_initialized 4
 
-/* function ia_css_queue_uninit: 543F */
+/* function ia_css_queue_uninit: 545B */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_ispctrl_sp_isp_started
 #define HIVE_MEM_ia_css_ispctrl_sp_isp_started scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_ispctrl_sp_isp_started 0x6C80
+#define HIVE_ADDR_ia_css_ispctrl_sp_isp_started 0x6C94
 #define HIVE_SIZE_ia_css_ispctrl_sp_isp_started 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_ispctrl_sp_isp_started scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_ispctrl_sp_isp_started 0x6C80
+#define HIVE_ADDR_sp_ia_css_ispctrl_sp_isp_started 0x6C94
 #define HIVE_SIZE_sp_ia_css_ispctrl_sp_isp_started 4
 
-/* function ia_css_bufq_sp_release_dynamic_buf: 365D */
+/* function ia_css_bufq_sp_release_dynamic_buf: 3676 */
 
-/* function ia_css_dmaproxy_sp_set_height_exception: 3B81 */
+/* function ia_css_dmaproxy_sp_set_height_exception: 3B9D */
 
-/* function ia_css_dmaproxy_sp_init_vmem_channel: 3B06 */
+/* function ia_css_dmaproxy_sp_init_vmem_channel: 3B22 */
 
 /* function csi_rx_backend_stop: C57 */
 
@@ -1746,7 +1746,7 @@
 #define HIVE_ADDR_sp_num_ready_threads 0x5A7C
 #define HIVE_SIZE_sp_num_ready_threads 4
 
-/* function ia_css_dmaproxy_sp_write_byte_addr_mmio: 3A5B */
+/* function ia_css_dmaproxy_sp_write_byte_addr_mmio: 3A77 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_vbuf_spref
@@ -1760,7 +1760,7 @@
 #define HIVE_ADDR_sp_vbuf_spref 0x370
 #define HIVE_SIZE_sp_vbuf_spref 4
 
-/* function ia_css_queue_enqueue: 5389 */
+/* function ia_css_queue_enqueue: 53A5 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_flash_sp_request
@@ -1774,7 +1774,7 @@
 #define HIVE_ADDR_sp_ia_css_flash_sp_request 0x5B30
 #define HIVE_SIZE_sp_ia_css_flash_sp_request 4
 
-/* function ia_css_dmaproxy_sp_vmem_write: 3A2C */
+/* function ia_css_dmaproxy_sp_vmem_write: 3A48 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_tagger_frames
@@ -1802,11 +1802,11 @@
 
 /* function sp_generate_interrupts: 9D3 */
 
-/* function ia_css_pipeline_sp_start: 1FEE */
+/* function ia_css_pipeline_sp_start: 2007 */
 
 /* function csi_rx_backend_enable: C45 */
 
-/* function ia_css_sp_rawcopy_init: 58AC */
+/* function ia_css_sp_rawcopy_init: 58C8 */
 
 /* function input_system_input_port_configure: 113F */
 
@@ -1827,13 +1827,13 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_sems_for_sp2host_buf_queues
 #define HIVE_MEM_ia_css_bufq_sp_sems_for_sp2host_buf_queues scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_sems_for_sp2host_buf_queues 0x6BD8
+#define HIVE_ADDR_ia_css_bufq_sp_sems_for_sp2host_buf_queues 0x6BEC
 #define HIVE_SIZE_ia_css_bufq_sp_sems_for_sp2host_buf_queues 160
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues 0x6BD8
+#define HIVE_ADDR_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues 0x6BEC
 #define HIVE_SIZE_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues 160
 
 /* function isys2401_dma_config_legacy: DE0 */
@@ -1850,7 +1850,7 @@
 #define HIVE_ADDR_sp_ibuf_ctrl_master_ports 0x208
 #define HIVE_SIZE_sp_ibuf_ctrl_master_ports 12
 
-/* function css_get_frame_processing_time_start: 28D8 */
+/* function css_get_frame_processing_time_start: 28F1 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cbs_frame
@@ -1864,7 +1864,7 @@
 #define HIVE_ADDR_sp_sp_all_cbs_frame 0x58B8
 #define HIVE_SIZE_sp_sp_all_cbs_frame 16
 
-/* function ia_css_virtual_isys_sp_isr: 6F1D */
+/* function ia_css_virtual_isys_sp_isr: 6F39 */
 
 /* function thread_sp_queue_print: 142B */
 
@@ -1882,11 +1882,11 @@
 #define HIVE_ADDR_sp_sem_for_str2mem 0x58C8
 #define HIVE_SIZE_sp_sem_for_str2mem 20
 
-/* function ia_css_tagger_buf_sp_is_marked_from_start: 33EE */
+/* function ia_css_tagger_buf_sp_is_marked_from_start: 3407 */
 
-/* function ia_css_bufq_sp_acquire_dynamic_buf: 3812 */
+/* function ia_css_bufq_sp_acquire_dynamic_buf: 382E */
 
-/* function ia_css_pipeline_sp_sfi_mode_is_enabled: 28A6 */
+/* function ia_css_pipeline_sp_sfi_mode_is_enabled: 28BF */
 
 /* function ia_css_circbuf_destroy: 16B9 */
 
@@ -1902,11 +1902,11 @@
 #define HIVE_ADDR_sp_ISP_PMEM_BASE 0xC
 #define HIVE_SIZE_sp_ISP_PMEM_BASE 4
 
-/* function ia_css_sp_isp_param_mem_load: 4F6A */
+/* function ia_css_sp_isp_param_mem_load: 4F86 */
 
-/* function __div: 6834 */
+/* function __div: 6850 */
 
-/* function ia_css_rmgr_sp_refcount_release_vbuf: 6311 */
+/* function ia_css_rmgr_sp_refcount_release_vbuf: 632D */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_flash_sp_in_use
@@ -1920,7 +1920,7 @@
 #define HIVE_ADDR_sp_ia_css_flash_sp_in_use 0x5B34
 #define HIVE_SIZE_sp_ia_css_flash_sp_in_use 4
 
-/* function ia_css_thread_sem_sp_wait: 6AFA */
+/* function ia_css_thread_sem_sp_wait: 6B16 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_sleep_mode
@@ -1934,7 +1934,7 @@
 #define HIVE_ADDR_sp_sp_sleep_mode 0x3E44
 #define HIVE_SIZE_sp_sp_sleep_mode 4
 
-/* function ia_css_tagger_buf_sp_push: 32E9 */
+/* function ia_css_tagger_buf_sp_push: 3302 */
 
 /* function mmu_invalidate_cache: D3 */
 
@@ -1950,7 +1950,7 @@
 #define HIVE_ADDR_sp_sp_max_cb_elems 0x148
 #define HIVE_SIZE_sp_sp_max_cb_elems 8
 
-/* function ia_css_queue_remote_init: 5461 */
+/* function ia_css_queue_remote_init: 547D */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_stop_req
@@ -1964,7 +1964,7 @@
 #define HIVE_ADDR_sp_isp_stop_req 0x575C
 #define HIVE_SIZE_sp_isp_stop_req 4
 
-/* function ia_css_pipeline_sp_sfi_request_next_frame: 2768 */
+/* function ia_css_pipeline_sp_sfi_request_next_frame: 2781 */
 
 #define HIVE_ICACHE_sp_critical_SEGMENT_START 0
 #define HIVE_ICACHE_sp_critical_NUM_SEGMENTS  1
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/css_2401_system/spmem_dump.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/css_2401_system/spmem_dump.c
index 164455f..80e0ed9 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/css_2401_system/spmem_dump.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/css_2401_system/spmem_dump.c
@@ -24,7 +24,7 @@
 
 /* function input_system_acquisition_stop: ADE */
 
-/* function longjmp: 6868 */
+/* function longjmp: 6884 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_HIVE_IF_SRST_MASK
@@ -38,11 +38,11 @@
 #define HIVE_ADDR_sp_HIVE_IF_SRST_MASK 0x1C8
 #define HIVE_SIZE_sp_HIVE_IF_SRST_MASK 16
 
-/* function tmpmem_init_dmem: 65B3 */
+/* function tmpmem_init_dmem: 65CF */
 
-/* function ia_css_isys_sp_token_map_receive_ack: 5EF7 */
+/* function ia_css_isys_sp_token_map_receive_ack: 5F13 */
 
-/* function ia_css_dmaproxy_sp_set_addr_B: 32AD */
+/* function ia_css_dmaproxy_sp_set_addr_B: 32C9 */
 
 /* function debug_buffer_set_ddr_addr: DD */
 
@@ -51,22 +51,22 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_vbuf_mipi
 #define HIVE_MEM_vbuf_mipi scalar_processor_2400_dmem
-#define HIVE_ADDR_vbuf_mipi 0x630C
+#define HIVE_ADDR_vbuf_mipi 0x631C
 #define HIVE_SIZE_vbuf_mipi 12
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_vbuf_mipi scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_vbuf_mipi 0x630C
+#define HIVE_ADDR_sp_vbuf_mipi 0x631C
 #define HIVE_SIZE_sp_vbuf_mipi 12
 
-/* function ia_css_event_sp_decode: 349E */
+/* function ia_css_event_sp_decode: 34BA */
 
-/* function ia_css_queue_get_size: 4817 */
+/* function ia_css_queue_get_size: 4833 */
 
-/* function ia_css_queue_load: 4E58 */
+/* function ia_css_queue_load: 4E74 */
 
-/* function setjmp: 6871 */
+/* function setjmp: 688D */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_sp2host_isys_event_queue
@@ -80,22 +80,22 @@
 #define HIVE_ADDR_sp_sem_for_sp2host_isys_event_queue 0x4684
 #define HIVE_SIZE_sp_sem_for_sp2host_isys_event_queue 20
 
-/* function ia_css_dmaproxy_sp_wait_for_ack: 6E21 */
+/* function ia_css_dmaproxy_sp_wait_for_ack: 6E3D */
 
-/* function ia_css_sp_rawcopy_func: 507D */
+/* function ia_css_sp_rawcopy_func: 5099 */
 
-/* function ia_css_tagger_buf_sp_pop_marked: 2942 */
+/* function ia_css_tagger_buf_sp_pop_marked: 295B */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_stage
 #define HIVE_MEM_isp_stage scalar_processor_2400_dmem
-#define HIVE_ADDR_isp_stage 0x5BF0
+#define HIVE_ADDR_isp_stage 0x5C00
 #define HIVE_SIZE_isp_stage 832
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isp_stage scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_stage 0x5BF0
+#define HIVE_ADDR_sp_isp_stage 0x5C00
 #define HIVE_SIZE_sp_isp_stage 832
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -110,9 +110,9 @@
 #define HIVE_ADDR_sp_vbuf_raw 0x2F0
 #define HIVE_SIZE_sp_vbuf_raw 4
 
-/* function ia_css_sp_bin_copy_func: 4FA4 */
+/* function ia_css_sp_bin_copy_func: 4FC0 */
 
-/* function ia_css_queue_item_store: 4BA6 */
+/* function ia_css_queue_item_store: 4BC2 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_metadata_bufs
@@ -143,30 +143,30 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_binary_group
 #define HIVE_MEM_sp_binary_group scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_binary_group 0x5FE0
+#define HIVE_ADDR_sp_binary_group 0x5FF0
 #define HIVE_SIZE_sp_binary_group 32
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_binary_group scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_binary_group 0x5FE0
+#define HIVE_ADDR_sp_sp_binary_group 0x5FF0
 #define HIVE_SIZE_sp_sp_binary_group 32
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_sw_state
 #define HIVE_MEM_sp_sw_state scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sw_state 0x629C
+#define HIVE_ADDR_sp_sw_state 0x62AC
 #define HIVE_SIZE_sp_sw_state 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_sw_state scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_sw_state 0x629C
+#define HIVE_ADDR_sp_sp_sw_state 0x62AC
 #define HIVE_SIZE_sp_sp_sw_state 4
 
 /* function ia_css_thread_sp_main: D5B */
 
-/* function ia_css_ispctrl_sp_init_internal_buffers: 36A4 */
+/* function ia_css_ispctrl_sp_init_internal_buffers: 36C0 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp2host_psys_event_queue_handle
@@ -192,18 +192,18 @@
 #define HIVE_ADDR_sp_sem_for_sp2host_psys_event_queue 0x4698
 #define HIVE_SIZE_sp_sem_for_sp2host_psys_event_queue 20
 
-/* function ia_css_tagger_sp_propagate_frame: 23E2 */
+/* function ia_css_tagger_sp_propagate_frame: 23FB */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_stop_copy_preview
 #define HIVE_MEM_sp_stop_copy_preview scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_stop_copy_preview 0x6280
+#define HIVE_ADDR_sp_stop_copy_preview 0x6290
 #define HIVE_SIZE_sp_stop_copy_preview 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_stop_copy_preview scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_stop_copy_preview 0x6280
+#define HIVE_ADDR_sp_sp_stop_copy_preview 0x6290
 #define HIVE_SIZE_sp_sp_stop_copy_preview 4
 
 /* function input_system_reg_load: B17 */
@@ -211,28 +211,28 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_vbuf_handles
 #define HIVE_MEM_vbuf_handles scalar_processor_2400_dmem
-#define HIVE_ADDR_vbuf_handles 0x6318
+#define HIVE_ADDR_vbuf_handles 0x6328
 #define HIVE_SIZE_vbuf_handles 960
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_vbuf_handles scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_vbuf_handles 0x6318
+#define HIVE_ADDR_sp_vbuf_handles 0x6328
 #define HIVE_SIZE_sp_vbuf_handles 960
 
-/* function ia_css_queue_store: 4D0C */
+/* function ia_css_queue_store: 4D28 */
 
-/* function ia_css_sp_flash_register: 2BB0 */
+/* function ia_css_sp_flash_register: 2BC9 */
 
-/* function ia_css_sp_rawcopy_dummy_function: 5685 */
+/* function ia_css_sp_rawcopy_dummy_function: 56A1 */
 
-/* function ia_css_isys_sp_backend_create: 5B6A */
+/* function ia_css_isys_sp_backend_create: 5B86 */
 
-/* function ia_css_pipeline_sp_init: 1833 */
+/* function ia_css_pipeline_sp_init: 184C */
 
-/* function ia_css_tagger_sp_configure: 22D2 */
+/* function ia_css_tagger_sp_configure: 22EB */
 
-/* function ia_css_ispctrl_sp_end_binary: 34E7 */
+/* function ia_css_ispctrl_sp_end_binary: 3503 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_h_pipe_private_per_frame_ddr_ptrs
@@ -296,35 +296,35 @@
 #define HIVE_ADDR_sp_host_sp_com 0x4114
 #define HIVE_SIZE_sp_host_sp_com 220
 
-/* function ia_css_queue_get_free_space: 496B */
+/* function ia_css_queue_get_free_space: 4987 */
 
 /* function exec_image_pipe: 6C4 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_init_dmem_data
 #define HIVE_MEM_sp_init_dmem_data scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_init_dmem_data 0x62A0
+#define HIVE_ADDR_sp_init_dmem_data 0x62B0
 #define HIVE_SIZE_sp_init_dmem_data 24
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_init_dmem_data scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_init_dmem_data 0x62A0
+#define HIVE_ADDR_sp_sp_init_dmem_data 0x62B0
 #define HIVE_SIZE_sp_sp_init_dmem_data 24
 
-/* function ia_css_sp_metadata_start: 5947 */
+/* function ia_css_sp_metadata_start: 5963 */
 
-/* function ia_css_bufq_sp_init_buffer_queues: 2C1F */
+/* function ia_css_bufq_sp_init_buffer_queues: 2C38 */
 
-/* function ia_css_pipeline_sp_stop: 1816 */
+/* function ia_css_pipeline_sp_stop: 182F */
 
-/* function ia_css_tagger_sp_connect_pipes: 27AB */
+/* function ia_css_tagger_sp_connect_pipes: 27C4 */
 
 /* function sp_isys_copy_wait: 70D */
 
 /* function is_isp_debug_buffer_full: 337 */
 
-/* function ia_css_dmaproxy_sp_configure_channel_from_info: 3230 */
+/* function ia_css_dmaproxy_sp_configure_channel_from_info: 324C */
 
 /* function encode_and_post_timer_event: A30 */
 
@@ -340,7 +340,7 @@
 #define HIVE_ADDR_sp_sp_per_frame_data 0x41F0
 #define HIVE_SIZE_sp_sp_per_frame_data 4
 
-/* function ia_css_rmgr_sp_vbuf_dequeue: 6307 */
+/* function ia_css_rmgr_sp_vbuf_dequeue: 6323 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_host2sp_psys_event_queue_handle
@@ -366,11 +366,11 @@
 #define HIVE_ADDR_sp_xmem_bin_addr 0x41F4
 #define HIVE_SIZE_sp_xmem_bin_addr 4
 
-/* function tmr_clock_init: 13F4 */
+/* function tmr_clock_init: 13FB */
 
-/* function ia_css_pipeline_sp_run: 1415 */
+/* function ia_css_pipeline_sp_run: 141C */
 
-/* function memcpy: 6911 */
+/* function memcpy: 692D */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_GP_DEVICE_BASE
@@ -398,13 +398,13 @@
 
 /* function input_system_reg_store: B1E */
 
-/* function ia_css_isys_sp_frontend_start: 5D80 */
+/* function ia_css_isys_sp_frontend_start: 5D9C */
 
-/* function ia_css_uds_sp_scale_params: 661A */
+/* function ia_css_uds_sp_scale_params: 6636 */
 
 /* function ia_css_circbuf_increase_size: E40 */
 
-/* function __divu: 688F */
+/* function __divu: 68AB */
 
 /* function ia_css_thread_sp_get_state: C83 */
 
@@ -436,9 +436,9 @@
 
 /* function ia_css_parambuf_sp_handle_parameter_sets: 128A */
 
-/* function ia_css_spctrl_sp_set_state: 5976 */
+/* function ia_css_spctrl_sp_set_state: 5992 */
 
-/* function ia_css_thread_sem_sp_signal: 6B11 */
+/* function ia_css_thread_sem_sp_signal: 6B2D */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_IRQ_BASE
@@ -464,13 +464,13 @@
 #define HIVE_ADDR_sp_TIMED_CTRL_BASE 0x40
 #define HIVE_SIZE_sp_TIMED_CTRL_BASE 4
 
-/* function ia_css_isys_sp_isr: 6FF6 */
+/* function ia_css_isys_sp_isr: 7012 */
 
-/* function ia_css_isys_sp_generate_exp_id: 6118 */
+/* function ia_css_isys_sp_generate_exp_id: 6134 */
 
-/* function ia_css_rmgr_sp_init: 6202 */
+/* function ia_css_rmgr_sp_init: 621E */
 
-/* function ia_css_thread_sem_sp_init: 6BE2 */
+/* function ia_css_thread_sem_sp_init: 6BFE */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_is_isp_requested
@@ -496,15 +496,15 @@
 #define HIVE_ADDR_sp_sem_for_reading_cb_frame 0x46D0
 #define HIVE_SIZE_sp_sem_for_reading_cb_frame 40
 
-/* function ia_css_dmaproxy_sp_execute: 3198 */
+/* function ia_css_dmaproxy_sp_execute: 31B4 */
 
-/* function ia_css_queue_is_empty: 4852 */
+/* function ia_css_queue_is_empty: 486E */
 
-/* function ia_css_pipeline_sp_has_stopped: 180C */
+/* function ia_css_pipeline_sp_has_stopped: 1825 */
 
 /* function ia_css_circbuf_extract: F44 */
 
-/* function ia_css_tagger_buf_sp_is_locked_from_start: 2A91 */
+/* function ia_css_tagger_buf_sp_is_locked_from_start: 2AAA */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_current_sp_thread
@@ -518,13 +518,13 @@
 #define HIVE_ADDR_sp_current_sp_thread 0x1DC
 #define HIVE_SIZE_sp_current_sp_thread 4
 
-/* function ia_css_spctrl_sp_get_spid: 597D */
+/* function ia_css_spctrl_sp_get_spid: 5999 */
 
-/* function ia_css_bufq_sp_reset_buffers: 2CA6 */
+/* function ia_css_bufq_sp_reset_buffers: 2CBF */
 
-/* function ia_css_dmaproxy_sp_read_byte_addr: 6E4F */
+/* function ia_css_dmaproxy_sp_read_byte_addr: 6E6B */
 
-/* function ia_css_rmgr_sp_uninit: 61FB */
+/* function ia_css_rmgr_sp_uninit: 6217 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_threads_stack
@@ -542,7 +542,7 @@
 
 /* function ia_css_parambuf_sp_wait_for_in_param: 1053 */
 
-/* function ia_css_isys_sp_token_map_get_exp_id: 5FE0 */
+/* function ia_css_isys_sp_token_map_get_exp_id: 5FFC */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cb_elems_param
@@ -594,7 +594,7 @@
 #define HIVE_ADDR_sp_sem_for_reading_cb_param 0x4710
 #define HIVE_SIZE_sp_sem_for_reading_cb_param 40
 
-/* function ia_css_queue_get_used_space: 491F */
+/* function ia_css_queue_get_used_space: 493B */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_cont_capt_start
@@ -611,20 +611,20 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_tmp_heap
 #define HIVE_MEM_tmp_heap scalar_processor_2400_dmem
-#define HIVE_ADDR_tmp_heap 0x6000
+#define HIVE_ADDR_tmp_heap 0x6010
 #define HIVE_SIZE_tmp_heap 640
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_tmp_heap scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_tmp_heap 0x6000
+#define HIVE_ADDR_sp_tmp_heap 0x6010
 #define HIVE_SIZE_sp_tmp_heap 640
 
-/* function ia_css_rmgr_sp_get_num_vbuf: 650B */
+/* function ia_css_rmgr_sp_get_num_vbuf: 6527 */
 
-/* function ia_css_ispctrl_sp_output_compute_dma_info: 3EC8 */
+/* function ia_css_ispctrl_sp_output_compute_dma_info: 3EE4 */
 
-/* function ia_css_tagger_sp_lock_exp_id: 20BD */
+/* function ia_css_tagger_sp_lock_exp_id: 20D6 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_s3a_bufs
@@ -638,27 +638,27 @@
 #define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_s3a_bufs 0x4B8C
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_s3a_bufs 60
 
-/* function ia_css_queue_is_full: 49B6 */
+/* function ia_css_queue_is_full: 49D2 */
 
 /* function debug_buffer_init_isp: E4 */
 
-/* function ia_css_isys_sp_frontend_uninit: 5D3A */
+/* function ia_css_isys_sp_frontend_uninit: 5D56 */
 
-/* function ia_css_tagger_sp_exp_id_is_locked: 2003 */
+/* function ia_css_tagger_sp_exp_id_is_locked: 201C */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_rmgr_sp_mipi_frame_sem
 #define HIVE_MEM_ia_css_rmgr_sp_mipi_frame_sem scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_rmgr_sp_mipi_frame_sem 0x66D8
+#define HIVE_ADDR_ia_css_rmgr_sp_mipi_frame_sem 0x66E8
 #define HIVE_SIZE_ia_css_rmgr_sp_mipi_frame_sem 60
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_rmgr_sp_mipi_frame_sem scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_rmgr_sp_mipi_frame_sem 0x66D8
+#define HIVE_ADDR_sp_ia_css_rmgr_sp_mipi_frame_sem 0x66E8
 #define HIVE_SIZE_sp_ia_css_rmgr_sp_mipi_frame_sem 60
 
-/* function ia_css_rmgr_sp_refcount_dump: 62E2 */
+/* function ia_css_rmgr_sp_refcount_dump: 62FE */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_isp_parameters_id
@@ -698,7 +698,7 @@
 #define HIVE_ADDR_sp_host2sp_isys_event_queue_handle 0x4BDC
 #define HIVE_SIZE_sp_host2sp_isys_event_queue_handle 12
 
-/* function ia_css_thread_sp_yield: 6A8A */
+/* function ia_css_thread_sp_yield: 6AA6 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cbs_param_desc
@@ -715,32 +715,32 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_dmaproxy_sp_invalidate_tlb
 #define HIVE_MEM_ia_css_dmaproxy_sp_invalidate_tlb scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_dmaproxy_sp_invalidate_tlb 0x5BE0
+#define HIVE_ADDR_ia_css_dmaproxy_sp_invalidate_tlb 0x5BF4
 #define HIVE_SIZE_ia_css_dmaproxy_sp_invalidate_tlb 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_dmaproxy_sp_invalidate_tlb scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_dmaproxy_sp_invalidate_tlb 0x5BE0
+#define HIVE_ADDR_sp_ia_css_dmaproxy_sp_invalidate_tlb 0x5BF4
 #define HIVE_SIZE_sp_ia_css_dmaproxy_sp_invalidate_tlb 4
 
 /* function ia_css_thread_sp_fork: D10 */
 
-/* function ia_css_tagger_sp_destroy: 27B5 */
+/* function ia_css_tagger_sp_destroy: 27CE */
 
-/* function ia_css_dmaproxy_sp_vmem_read: 3138 */
+/* function ia_css_dmaproxy_sp_vmem_read: 3154 */
 
-/* function ia_css_ifmtr_sp_init: 6169 */
+/* function ia_css_ifmtr_sp_init: 6185 */
 
 /* function initialize_sp_group: 6D4 */
 
 /* function ia_css_thread_sp_init: D3C */
 
-/* function ia_css_isys_sp_reset_exp_id: 6110 */
+/* function ia_css_isys_sp_reset_exp_id: 612C */
 
-/* function qos_scheduler_update_fps: 660A */
+/* function qos_scheduler_update_fps: 6626 */
 
-/* function ia_css_ispctrl_sp_set_stream_base_addr: 4590 */
+/* function ia_css_ispctrl_sp_set_stream_base_addr: 45AC */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ISP_DMEM_BASE
@@ -766,7 +766,7 @@
 #define HIVE_ADDR_sp_SP_DMEM_BASE 0x4
 #define HIVE_SIZE_sp_SP_DMEM_BASE 4
 
-/* function ia_css_dmaproxy_sp_read: 31AE */
+/* function ia_css_dmaproxy_sp_read: 31CA */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_raw_copy_line_count
@@ -792,7 +792,7 @@
 #define HIVE_ADDR_sp_host2sp_tag_cmd_queue_handle 0x4BE8
 #define HIVE_SIZE_sp_host2sp_tag_cmd_queue_handle 12
 
-/* function ia_css_queue_peek: 4895 */
+/* function ia_css_queue_peek: 48B1 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_flash_sp_frame_cnt
@@ -821,24 +821,24 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_thread
 #define HIVE_MEM_isp_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_isp_thread 0x5F30
+#define HIVE_ADDR_isp_thread 0x5F40
 #define HIVE_SIZE_isp_thread 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isp_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_thread 0x5F30
+#define HIVE_ADDR_sp_isp_thread 0x5F40
 #define HIVE_SIZE_sp_isp_thread 4
 
 /* function encode_and_post_sp_event_non_blocking: A78 */
 
-/* function ia_css_isys_sp_frontend_destroy: 5E12 */
+/* function ia_css_isys_sp_frontend_destroy: 5E2E */
 
 /* function is_ddr_debug_buffer_full: 2CC */
 
-/* function ia_css_isys_sp_frontend_stop: 5D52 */
+/* function ia_css_isys_sp_frontend_stop: 5D6E */
 
-/* function ia_css_isys_sp_token_map_init: 60AE */
+/* function ia_css_isys_sp_token_map_init: 60CA */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_threads_fiber
@@ -856,20 +856,20 @@
 
 /* function debug_enqueue_ddr: EE */
 
-/* function ia_css_rmgr_sp_refcount_init_vbuf: 629D */
+/* function ia_css_rmgr_sp_refcount_init_vbuf: 62B9 */
 
-/* function dmaproxy_sp_read_write: 6EFE */
+/* function dmaproxy_sp_read_write: 6F1A */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_dmaproxy_isp_dma_cmd_buffer
 #define HIVE_MEM_ia_css_dmaproxy_isp_dma_cmd_buffer scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_dmaproxy_isp_dma_cmd_buffer 0x5BE4
+#define HIVE_ADDR_ia_css_dmaproxy_isp_dma_cmd_buffer 0x5BF8
 #define HIVE_SIZE_ia_css_dmaproxy_isp_dma_cmd_buffer 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_dmaproxy_isp_dma_cmd_buffer scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_dmaproxy_isp_dma_cmd_buffer 0x5BE4
+#define HIVE_ADDR_sp_ia_css_dmaproxy_isp_dma_cmd_buffer 0x5BF8
 #define HIVE_SIZE_sp_ia_css_dmaproxy_isp_dma_cmd_buffer 4
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -896,17 +896,17 @@
 #define HIVE_ADDR_sp_ia_css_flash_sp_in_service 0x3178
 #define HIVE_SIZE_sp_ia_css_flash_sp_in_service 4
 
-/* function ia_css_dmaproxy_sp_process: 6C0A */
+/* function ia_css_dmaproxy_sp_process: 6C26 */
 
-/* function ia_css_tagger_buf_sp_mark_from_end: 2B75 */
+/* function ia_css_tagger_buf_sp_mark_from_end: 2B8E */
 
-/* function ia_css_isys_sp_backend_rcv_acquire_ack: 5A1F */
+/* function ia_css_isys_sp_backend_rcv_acquire_ack: 5A3B */
 
-/* function ia_css_isys_sp_backend_pre_acquire_request: 5A35 */
+/* function ia_css_isys_sp_backend_pre_acquire_request: 5A51 */
 
-/* function ia_css_ispctrl_sp_init_cs: 35D4 */
+/* function ia_css_ispctrl_sp_init_cs: 35F0 */
 
-/* function ia_css_spctrl_sp_init: 598B */
+/* function ia_css_spctrl_sp_init: 59A7 */
 
 /* function sp_event_proxy_init: 730 */
 
@@ -914,13 +914,13 @@
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_previous_clock_tick
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_previous_clock_tick scalar_processor_2400_dmem
 #define HIVE_ADDR_ia_css_bufq_sp_pipe_private_previous_clock_tick 0x4DD4
-#define HIVE_SIZE_ia_css_bufq_sp_pipe_private_previous_clock_tick 20
+#define HIVE_SIZE_ia_css_bufq_sp_pipe_private_previous_clock_tick 40
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_previous_clock_tick scalar_processor_2400_dmem
 #define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_previous_clock_tick 0x4DD4
-#define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_previous_clock_tick 20
+#define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_previous_clock_tick 40
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_output
@@ -937,13 +937,13 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_sems_for_host2sp_buf_queues
 #define HIVE_MEM_ia_css_bufq_sp_sems_for_host2sp_buf_queues scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_sems_for_host2sp_buf_queues 0x4DE8
+#define HIVE_ADDR_ia_css_bufq_sp_sems_for_host2sp_buf_queues 0x4DFC
 #define HIVE_SIZE_ia_css_bufq_sp_sems_for_host2sp_buf_queues 800
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_sems_for_host2sp_buf_queues scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_sems_for_host2sp_buf_queues 0x4DE8
+#define HIVE_ADDR_sp_ia_css_bufq_sp_sems_for_host2sp_buf_queues 0x4DFC
 #define HIVE_SIZE_sp_ia_css_bufq_sp_sems_for_host2sp_buf_queues 800
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -970,27 +970,27 @@
 #define HIVE_ADDR_sp_INPUT_FORMATTER_BASE 0x4C
 #define HIVE_SIZE_sp_INPUT_FORMATTER_BASE 16
 
-/* function sp_dma_proxy_reset_channels: 3408 */
+/* function sp_dma_proxy_reset_channels: 3424 */
 
-/* function ia_css_isys_sp_backend_acquire: 5B40 */
+/* function ia_css_isys_sp_backend_acquire: 5B5C */
 
-/* function ia_css_tagger_sp_update_size: 28A9 */
+/* function ia_css_tagger_sp_update_size: 28C2 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_host_sp_queue
 #define HIVE_MEM_ia_css_bufq_host_sp_queue scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_host_sp_queue 0x5108
+#define HIVE_ADDR_ia_css_bufq_host_sp_queue 0x511C
 #define HIVE_SIZE_ia_css_bufq_host_sp_queue 2008
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_host_sp_queue scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_host_sp_queue 0x5108
+#define HIVE_ADDR_sp_ia_css_bufq_host_sp_queue 0x511C
 #define HIVE_SIZE_sp_ia_css_bufq_host_sp_queue 2008
 
 /* function thread_fiber_sp_create: DA8 */
 
-/* function ia_css_dmaproxy_sp_set_increments: 329A */
+/* function ia_css_dmaproxy_sp_set_increments: 32B6 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_writing_cb_frame
@@ -1026,21 +1026,21 @@
 #endif
 #define HIVE_ADDR_sp_sp_start_isp_entry 0x453
 
-/* function ia_css_tagger_buf_sp_unmark_all: 2AF9 */
+/* function ia_css_tagger_buf_sp_unmark_all: 2B12 */
 
-/* function ia_css_tagger_buf_sp_unmark_from_start: 2B3A */
+/* function ia_css_tagger_buf_sp_unmark_from_start: 2B53 */
 
-/* function ia_css_dmaproxy_sp_channel_acquire: 3434 */
+/* function ia_css_dmaproxy_sp_channel_acquire: 3450 */
 
-/* function ia_css_rmgr_sp_add_num_vbuf: 64E7 */
+/* function ia_css_rmgr_sp_add_num_vbuf: 6503 */
 
-/* function ia_css_isys_sp_token_map_create: 60F7 */
+/* function ia_css_isys_sp_token_map_create: 6113 */
 
-/* function __ia_css_dmaproxy_sp_wait_for_ack_text: 3104 */
+/* function __ia_css_dmaproxy_sp_wait_for_ack_text: 3120 */
 
-/* function ia_css_tagger_sp_acquire_buf_elem: 1FDB */
+/* function ia_css_tagger_sp_acquire_buf_elem: 1FF4 */
 
-/* function ia_css_bufq_sp_is_dynamic_buffer: 2FED */
+/* function ia_css_bufq_sp_is_dynamic_buffer: 3009 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_group
@@ -1068,9 +1068,9 @@
 
 /* function ia_css_thread_sp_kill: CD6 */
 
-/* function ia_css_tagger_sp_create: 2863 */
+/* function ia_css_tagger_sp_create: 287C */
 
-/* function tmpmem_acquire_dmem: 6594 */
+/* function tmpmem_acquire_dmem: 65B0 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_MMU_BASE
@@ -1084,9 +1084,9 @@
 #define HIVE_ADDR_sp_MMU_BASE 0x24
 #define HIVE_SIZE_sp_MMU_BASE 8
 
-/* function ia_css_dmaproxy_sp_channel_release: 3420 */
+/* function ia_css_dmaproxy_sp_channel_release: 343C */
 
-/* function ia_css_dmaproxy_sp_is_idle: 3400 */
+/* function ia_css_dmaproxy_sp_is_idle: 341C */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_qos_start
@@ -1102,23 +1102,23 @@
 
 /* function isp_hmem_load: B55 */
 
-/* function ia_css_tagger_sp_release_buf_elem: 1FB7 */
+/* function ia_css_tagger_sp_release_buf_elem: 1FD0 */
 
-/* function ia_css_eventq_sp_send: 3476 */
+/* function ia_css_eventq_sp_send: 3492 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_isys_sp_error_cnt
 #define HIVE_MEM_ia_css_isys_sp_error_cnt scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_isys_sp_error_cnt 0x62C4
+#define HIVE_ADDR_ia_css_isys_sp_error_cnt 0x62D4
 #define HIVE_SIZE_ia_css_isys_sp_error_cnt 16
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_isys_sp_error_cnt scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_isys_sp_error_cnt 0x62C4
+#define HIVE_ADDR_sp_ia_css_isys_sp_error_cnt 0x62D4
 #define HIVE_SIZE_sp_ia_css_isys_sp_error_cnt 16
 
-/* function ia_css_tagger_buf_sp_unlock_from_start: 2A29 */
+/* function ia_css_tagger_buf_sp_unlock_from_start: 2A42 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_debug_buffer_ddr_address
@@ -1134,29 +1134,29 @@
 
 /* function sp_isys_copy_request: 714 */
 
-/* function ia_css_rmgr_sp_refcount_retain_vbuf: 6377 */
+/* function ia_css_rmgr_sp_refcount_retain_vbuf: 6393 */
 
 /* function ia_css_thread_sp_set_priority: CCE */
 
 /* function sizeof_hmem: BFC */
 
-/* function tmpmem_release_dmem: 6583 */
+/* function tmpmem_release_dmem: 659F */
 
 /* function cnd_input_system_cfg: 392 */
 
-/* function __ia_css_sp_rawcopy_func_critical: 6F7F */
+/* function __ia_css_sp_rawcopy_func_critical: 6F9B */
 
-/* function ia_css_dmaproxy_sp_set_width_exception: 3285 */
+/* function ia_css_dmaproxy_sp_set_width_exception: 32A1 */
 
 /* function sp_event_assert: 8B1 */
 
-/* function ia_css_flash_sp_init_internal_params: 2C14 */
+/* function ia_css_flash_sp_init_internal_params: 2C2D */
 
-/* function ia_css_tagger_buf_sp_pop_unmarked_and_unlocked: 28DA */
+/* function ia_css_tagger_buf_sp_pop_unmarked_and_unlocked: 28F3 */
 
-/* function __modu: 68D5 */
+/* function __modu: 68F1 */
 
-/* function ia_css_dmaproxy_sp_init_isp_vector: 310A */
+/* function ia_css_dmaproxy_sp_init_isp_vector: 3126 */
 
 /* function isp_vamem_store: 0 */
 
@@ -1172,11 +1172,11 @@
 #define HIVE_ADDR_sp_GDC_BASE 0x44
 #define HIVE_SIZE_sp_GDC_BASE 8
 
-/* function ia_css_queue_local_init: 4B80 */
+/* function ia_css_queue_local_init: 4B9C */
 
-/* function sp_event_proxy_callout_func: 69A2 */
+/* function sp_event_proxy_callout_func: 69BE */
 
-/* function qos_scheduler_schedule_stage: 65DB */
+/* function qos_scheduler_schedule_stage: 65F7 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_thread_sp_num_ready_threads
@@ -1202,13 +1202,13 @@
 #define HIVE_ADDR_sp_sp_threads_stack_size 0x180
 #define HIVE_SIZE_sp_sp_threads_stack_size 28
 
-/* function ia_css_ispctrl_sp_isp_done_row_striping: 3EAE */
+/* function ia_css_ispctrl_sp_isp_done_row_striping: 3ECA */
 
-/* function __ia_css_isys_sp_isr_text: 5E3C */
+/* function __ia_css_isys_sp_isr_text: 5E58 */
 
-/* function ia_css_queue_dequeue: 49FE */
+/* function ia_css_queue_dequeue: 4A1A */
 
-/* function ia_css_dmaproxy_sp_configure_channel: 6E66 */
+/* function ia_css_dmaproxy_sp_configure_channel: 6E82 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_current_thread_fiber_sp
@@ -1224,7 +1224,7 @@
 
 /* function ia_css_circbuf_pop: FD8 */
 
-/* function memset: 6954 */
+/* function memset: 6970 */
 
 /* function irq_raise_set_token: B6 */
 
@@ -1240,27 +1240,27 @@
 #define HIVE_ADDR_sp_GPIO_BASE 0x3C
 #define HIVE_SIZE_sp_GPIO_BASE 4
 
-/* function ia_css_pipeline_acc_stage_enable: 17D7 */
+/* function ia_css_pipeline_acc_stage_enable: 17F0 */
 
-/* function ia_css_tagger_sp_unlock_exp_id: 2028 */
+/* function ia_css_tagger_sp_unlock_exp_id: 2041 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_ph
 #define HIVE_MEM_isp_ph scalar_processor_2400_dmem
-#define HIVE_ADDR_isp_ph 0x62D4
+#define HIVE_ADDR_isp_ph 0x62E4
 #define HIVE_SIZE_isp_ph 28
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isp_ph scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_ph 0x62D4
+#define HIVE_ADDR_sp_isp_ph 0x62E4
 #define HIVE_SIZE_sp_isp_ph 28
 
-/* function ia_css_isys_sp_token_map_flush: 603C */
+/* function ia_css_isys_sp_token_map_flush: 6058 */
 
-/* function ia_css_ispctrl_sp_init_ds: 3733 */
+/* function ia_css_ispctrl_sp_init_ds: 374F */
 
-/* function get_xmem_base_addr_raw: 3ADE */
+/* function get_xmem_base_addr_raw: 3AFA */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cbs_param
@@ -1288,35 +1288,35 @@
 #define HIVE_ADDR_sp_sem_for_sp_group 0x47A0
 #define HIVE_SIZE_sp_sem_for_sp_group 20
 
-/* function ia_css_framebuf_sp_wait_for_in_frame: 6512 */
+/* function ia_css_framebuf_sp_wait_for_in_frame: 652E */
 
-/* function ia_css_sp_rawcopy_tag_frame: 55A2 */
+/* function ia_css_sp_rawcopy_tag_frame: 55BE */
 
 /* function isp_hmem_clear: B25 */
 
-/* function ia_css_framebuf_sp_release_in_frame: 6555 */
+/* function ia_css_framebuf_sp_release_in_frame: 6571 */
 
-/* function ia_css_isys_sp_backend_snd_acquire_request: 5A92 */
+/* function ia_css_isys_sp_backend_snd_acquire_request: 5AAE */
 
-/* function ia_css_isys_sp_token_map_is_full: 5EC3 */
+/* function ia_css_isys_sp_token_map_is_full: 5EDF */
 
 /* function input_system_acquisition_run: AF9 */
 
-/* function ia_css_ispctrl_sp_start_binary: 35B2 */
+/* function ia_css_ispctrl_sp_start_binary: 35CE */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_h_pipe_private_ddr_ptrs
 #define HIVE_MEM_ia_css_bufq_sp_h_pipe_private_ddr_ptrs scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 0x58E0
+#define HIVE_ADDR_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 0x58F4
 #define HIVE_SIZE_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 0x58E0
+#define HIVE_ADDR_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 0x58F4
 #define HIVE_SIZE_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 20
 
-/* function ia_css_eventq_sp_recv: 3448 */
+/* function ia_css_eventq_sp_recv: 3464 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_pool
@@ -1330,9 +1330,9 @@
 #define HIVE_ADDR_sp_isp_pool 0x2E4
 #define HIVE_SIZE_sp_isp_pool 4
 
-/* function ia_css_rmgr_sp_rel_gen: 6244 */
+/* function ia_css_rmgr_sp_rel_gen: 6260 */
 
-/* function css_get_frame_processing_time_end: 1FA7 */
+/* function css_get_frame_processing_time_end: 1FC0 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_event_any_pending_mask
@@ -1346,15 +1346,15 @@
 #define HIVE_ADDR_sp_event_any_pending_mask 0x300
 #define HIVE_SIZE_sp_event_any_pending_mask 8
 
-/* function ia_css_isys_sp_backend_push: 5A49 */
+/* function ia_css_isys_sp_backend_push: 5A65 */
 
 /* function sh_css_decode_tag_descr: 352 */
 
 /* function debug_enqueue_isp: 27B */
 
-/* function qos_scheduler_update_stage_budget: 65C9 */
+/* function qos_scheduler_update_stage_budget: 65E5 */
 
-/* function ia_css_spctrl_sp_uninit: 5984 */
+/* function ia_css_spctrl_sp_uninit: 59A0 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_HIVE_IF_SWITCH_CODE
@@ -1371,16 +1371,16 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_dis_bufs
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_dis_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_dis_bufs 0x58F4
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_dis_bufs 0x5908
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_dis_bufs 140
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_dis_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_dis_bufs 0x58F4
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_dis_bufs 0x5908
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_dis_bufs 140
 
-/* function ia_css_tagger_buf_sp_lock_from_start: 2A5D */
+/* function ia_css_tagger_buf_sp_lock_from_start: 2A76 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_isp_idle
@@ -1394,11 +1394,11 @@
 #define HIVE_ADDR_sp_sem_for_isp_idle 0x47B4
 #define HIVE_SIZE_sp_sem_for_isp_idle 20
 
-/* function ia_css_dmaproxy_sp_write_byte_addr: 3167 */
+/* function ia_css_dmaproxy_sp_write_byte_addr: 3183 */
 
-/* function ia_css_dmaproxy_sp_init: 30DE */
+/* function ia_css_dmaproxy_sp_init: 30FA */
 
-/* function ia_css_bufq_sp_release_dynamic_buf_clock_tick: 2CE6 */
+/* function ia_css_bufq_sp_release_dynamic_buf_clock_tick: 2CFF */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ISP_VAMEM_BASE
@@ -1415,32 +1415,32 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_rawcopy_sp_tagger
 #define HIVE_MEM_ia_css_rawcopy_sp_tagger scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_rawcopy_sp_tagger 0x6284
+#define HIVE_ADDR_ia_css_rawcopy_sp_tagger 0x6294
 #define HIVE_SIZE_ia_css_rawcopy_sp_tagger 24
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_rawcopy_sp_tagger scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_rawcopy_sp_tagger 0x6284
+#define HIVE_ADDR_sp_ia_css_rawcopy_sp_tagger 0x6294
 #define HIVE_SIZE_sp_ia_css_rawcopy_sp_tagger 24
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_exp_ids
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_exp_ids scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_exp_ids 0x5980
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_exp_ids 0x5994
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_exp_ids 70
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_exp_ids scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_exp_ids 0x5980
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_exp_ids 0x5994
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_exp_ids 70
 
-/* function ia_css_queue_item_load: 4C72 */
+/* function ia_css_queue_item_load: 4C8E */
 
-/* function ia_css_spctrl_sp_get_state: 596F */
+/* function ia_css_spctrl_sp_get_state: 598B */
 
-/* function ia_css_isys_sp_token_map_uninit: 6059 */
+/* function ia_css_isys_sp_token_map_uninit: 6075 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_callout_sp_thread
@@ -1468,7 +1468,7 @@
 #define HIVE_ADDR_sp_SP_PMEM_BASE 0x0
 #define HIVE_SIZE_sp_SP_PMEM_BASE 4
 
-/* function ia_css_isys_sp_token_map_snd_acquire_req: 5FC9 */
+/* function ia_css_isys_sp_token_map_snd_acquire_req: 5FE5 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_isp_input_stream_format
@@ -1482,39 +1482,39 @@
 #define HIVE_ADDR_sp_sp_isp_input_stream_format 0x40F8
 #define HIVE_SIZE_sp_sp_isp_input_stream_format 20
 
-/* function __mod: 68C1 */
+/* function __mod: 68DD */
 
-/* function ia_css_dmaproxy_sp_init_dmem_channel: 31C8 */
+/* function ia_css_dmaproxy_sp_init_dmem_channel: 31E4 */
 
 /* function ia_css_thread_sp_join: CFF */
 
-/* function ia_css_dmaproxy_sp_add_command: 6F69 */
+/* function ia_css_dmaproxy_sp_add_command: 6F85 */
 
-/* function ia_css_sp_metadata_thread_func: 5823 */
+/* function ia_css_sp_metadata_thread_func: 583F */
 
-/* function __sp_event_proxy_func_critical: 698F */
+/* function __sp_event_proxy_func_critical: 69AB */
 
-/* function ia_css_sp_metadata_wait: 5936 */
+/* function ia_css_sp_metadata_wait: 5952 */
 
 /* function ia_css_circbuf_peek_from_start: F08 */
 
-/* function ia_css_event_sp_encode: 34D3 */
+/* function ia_css_event_sp_encode: 34EF */
 
 /* function ia_css_thread_sp_run: D72 */
 
 /* function sp_isys_copy_func: 6F6 */
 
-/* function ia_css_isys_sp_backend_flush: 5AB2 */
+/* function ia_css_isys_sp_backend_flush: 5ACE */
 
-/* function ia_css_isys_sp_backend_frame_exists: 59CE */
+/* function ia_css_isys_sp_backend_frame_exists: 59EA */
 
-/* function ia_css_sp_isp_param_init_isp_memories: 46FB */
+/* function ia_css_sp_isp_param_init_isp_memories: 4717 */
 
 /* function register_isr: 8A9 */
 
 /* function irq_raise: C8 */
 
-/* function ia_css_dmaproxy_sp_mmu_invalidate: 30A5 */
+/* function ia_css_dmaproxy_sp_mmu_invalidate: 30C1 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_HIVE_IF_SRST_ADDRESS
@@ -1528,25 +1528,25 @@
 #define HIVE_ADDR_sp_HIVE_IF_SRST_ADDRESS 0x1B8
 #define HIVE_SIZE_sp_HIVE_IF_SRST_ADDRESS 16
 
-/* function pipeline_sp_initialize_stage: 190B */
+/* function pipeline_sp_initialize_stage: 1924 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_isys_sp_frontend_states
 #define HIVE_MEM_ia_css_isys_sp_frontend_states scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_isys_sp_frontend_states 0x62B8
+#define HIVE_ADDR_ia_css_isys_sp_frontend_states 0x62C8
 #define HIVE_SIZE_ia_css_isys_sp_frontend_states 12
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_isys_sp_frontend_states scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_isys_sp_frontend_states 0x62B8
+#define HIVE_ADDR_sp_ia_css_isys_sp_frontend_states 0x62C8
 #define HIVE_SIZE_sp_ia_css_isys_sp_frontend_states 12
 
-/* function ia_css_dmaproxy_sp_read_byte_addr_mmio: 6E38 */
+/* function ia_css_dmaproxy_sp_read_byte_addr_mmio: 6E54 */
 
-/* function ia_css_ispctrl_sp_done_ds: 371A */
+/* function ia_css_ispctrl_sp_done_ds: 3736 */
 
-/* function ia_css_sp_isp_param_get_mem_inits: 46D6 */
+/* function ia_css_sp_isp_param_get_mem_inits: 46F2 */
 
 /* function ia_css_parambuf_sp_init_buffer_queues: 13D0 */
 
@@ -1579,46 +1579,46 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_frames
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_frames scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_frames 0x59C8
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_frames 0x59DC
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_frames 280
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_frames scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_frames 0x59C8
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_frames 0x59DC
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_frames 280
 
-/* function qos_scheduler_init_stage_budget: 6602 */
+/* function qos_scheduler_init_stage_budget: 661E */
 
-/* function ia_css_isys_sp_backend_release: 5B27 */
+/* function ia_css_isys_sp_backend_release: 5B43 */
 
-/* function ia_css_isys_sp_backend_destroy: 5B51 */
+/* function ia_css_isys_sp_backend_destroy: 5B6D */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp2host_buffer_queue_handle
 #define HIVE_MEM_sp2host_buffer_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp2host_buffer_queue_handle 0x5AE0
+#define HIVE_ADDR_sp2host_buffer_queue_handle 0x5AF4
 #define HIVE_SIZE_sp2host_buffer_queue_handle 96
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp2host_buffer_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp2host_buffer_queue_handle 0x5AE0
+#define HIVE_ADDR_sp_sp2host_buffer_queue_handle 0x5AF4
 #define HIVE_SIZE_sp_sp2host_buffer_queue_handle 96
 
-/* function ia_css_isys_sp_token_map_check_mipi_frame_size: 5F8D */
+/* function ia_css_isys_sp_token_map_check_mipi_frame_size: 5FA9 */
 
-/* function ia_css_ispctrl_sp_init_isp_vars: 43F5 */
+/* function ia_css_ispctrl_sp_init_isp_vars: 4411 */
 
-/* function ia_css_isys_sp_frontend_has_empty_mipi_buffer_cb: 5BA3 */
+/* function ia_css_isys_sp_frontend_has_empty_mipi_buffer_cb: 5BBF */
 
 /* function sp_warning: 8DC */
 
-/* function ia_css_rmgr_sp_vbuf_enqueue: 6337 */
+/* function ia_css_rmgr_sp_vbuf_enqueue: 6353 */
 
-/* function ia_css_tagger_sp_tag_exp_id: 2132 */
+/* function ia_css_tagger_sp_tag_exp_id: 214B */
 
-/* function ia_css_dmaproxy_sp_write: 317E */
+/* function ia_css_dmaproxy_sp_write: 319A */
 
 /* function ia_css_parambuf_sp_release_in_param: 1250 */
 
@@ -1637,29 +1637,29 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_isp_addresses
 #define HIVE_MEM_sp_isp_addresses scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_addresses 0x5F34
+#define HIVE_ADDR_sp_isp_addresses 0x5F44
 #define HIVE_SIZE_sp_isp_addresses 172
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_isp_addresses scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_isp_addresses 0x5F34
+#define HIVE_ADDR_sp_sp_isp_addresses 0x5F44
 #define HIVE_SIZE_sp_sp_isp_addresses 172
 
-/* function ia_css_rmgr_sp_acq_gen: 625C */
+/* function ia_css_rmgr_sp_acq_gen: 6278 */
 
 /* function receiver_reg_load: AD0 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isps
 #define HIVE_MEM_isps scalar_processor_2400_dmem
-#define HIVE_ADDR_isps 0x62F0
+#define HIVE_ADDR_isps 0x6300
 #define HIVE_SIZE_isps 28
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isps scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isps 0x62F0
+#define HIVE_ADDR_sp_isps 0x6300
 #define HIVE_SIZE_sp_isps 28
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -1674,25 +1674,25 @@
 #define HIVE_ADDR_sp_host_sp_queues_initialized 0x410C
 #define HIVE_SIZE_sp_host_sp_queues_initialized 4
 
-/* function ia_css_queue_uninit: 4B3E */
+/* function ia_css_queue_uninit: 4B5A */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_ispctrl_sp_isp_started
 #define HIVE_MEM_ia_css_ispctrl_sp_isp_started scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_ispctrl_sp_isp_started 0x5BE8
+#define HIVE_ADDR_ia_css_ispctrl_sp_isp_started 0x5BFC
 #define HIVE_SIZE_ia_css_ispctrl_sp_isp_started 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_ispctrl_sp_isp_started scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_ispctrl_sp_isp_started 0x5BE8
+#define HIVE_ADDR_sp_ia_css_ispctrl_sp_isp_started 0x5BFC
 #define HIVE_SIZE_sp_ia_css_ispctrl_sp_isp_started 4
 
-/* function ia_css_bufq_sp_release_dynamic_buf: 2D52 */
+/* function ia_css_bufq_sp_release_dynamic_buf: 2D6B */
 
-/* function ia_css_dmaproxy_sp_set_height_exception: 3276 */
+/* function ia_css_dmaproxy_sp_set_height_exception: 3292 */
 
-/* function ia_css_dmaproxy_sp_init_vmem_channel: 31FB */
+/* function ia_css_dmaproxy_sp_init_vmem_channel: 3217 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_num_ready_threads
@@ -1706,7 +1706,7 @@
 #define HIVE_ADDR_sp_num_ready_threads 0x49E4
 #define HIVE_SIZE_sp_num_ready_threads 4
 
-/* function ia_css_dmaproxy_sp_write_byte_addr_mmio: 3150 */
+/* function ia_css_dmaproxy_sp_write_byte_addr_mmio: 316C */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_vbuf_spref
@@ -1732,7 +1732,7 @@
 #define HIVE_ADDR_sp_sp_metadata_thread 0x4998
 #define HIVE_SIZE_sp_sp_metadata_thread 68
 
-/* function ia_css_queue_enqueue: 4A88 */
+/* function ia_css_queue_enqueue: 4AA4 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_flash_sp_request
@@ -1746,7 +1746,7 @@
 #define HIVE_ADDR_sp_ia_css_flash_sp_request 0x4A98
 #define HIVE_SIZE_sp_ia_css_flash_sp_request 4
 
-/* function ia_css_dmaproxy_sp_vmem_write: 3121 */
+/* function ia_css_dmaproxy_sp_vmem_write: 313D */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_tagger_frames
@@ -1760,7 +1760,7 @@
 #define HIVE_ADDR_sp_tagger_frames 0x49EC
 #define HIVE_SIZE_sp_tagger_frames 168
 
-/* function ia_css_isys_sp_token_map_snd_capture_req: 5FEB */
+/* function ia_css_isys_sp_token_map_snd_capture_req: 6007 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_reading_if
@@ -1776,11 +1776,11 @@
 
 /* function sp_generate_interrupts: 95B */
 
-/* function ia_css_pipeline_sp_start: 181E */
+/* function ia_css_pipeline_sp_start: 1837 */
 
-/* function ia_css_sp_rawcopy_init: 5065 */
+/* function ia_css_sp_rawcopy_init: 5081 */
 
-/* function tmr_clock_read: 13EA */
+/* function tmr_clock_read: 13F1 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ISP_BAMEM_BASE
@@ -1794,21 +1794,21 @@
 #define HIVE_ADDR_sp_ISP_BAMEM_BASE 0x2F8
 #define HIVE_SIZE_sp_ISP_BAMEM_BASE 4
 
-/* function ia_css_isys_sp_frontend_rcv_capture_ack: 5C52 */
+/* function ia_css_isys_sp_frontend_rcv_capture_ack: 5C6E */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_sems_for_sp2host_buf_queues
 #define HIVE_MEM_ia_css_bufq_sp_sems_for_sp2host_buf_queues scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_sems_for_sp2host_buf_queues 0x5B40
+#define HIVE_ADDR_ia_css_bufq_sp_sems_for_sp2host_buf_queues 0x5B54
 #define HIVE_SIZE_ia_css_bufq_sp_sems_for_sp2host_buf_queues 160
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues 0x5B40
+#define HIVE_ADDR_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues 0x5B54
 #define HIVE_SIZE_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues 160
 
-/* function css_get_frame_processing_time_start: 1FAF */
+/* function css_get_frame_processing_time_start: 1FC8 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cbs_frame
@@ -1838,9 +1838,9 @@
 #define HIVE_ADDR_sp_sem_for_str2mem 0x47EC
 #define HIVE_SIZE_sp_sem_for_str2mem 20
 
-/* function ia_css_tagger_buf_sp_is_marked_from_start: 2AC5 */
+/* function ia_css_tagger_buf_sp_is_marked_from_start: 2ADE */
 
-/* function ia_css_bufq_sp_acquire_dynamic_buf: 2F07 */
+/* function ia_css_bufq_sp_acquire_dynamic_buf: 2F23 */
 
 /* function ia_css_circbuf_destroy: 101D */
 
@@ -1856,13 +1856,13 @@
 #define HIVE_ADDR_sp_ISP_PMEM_BASE 0xC
 #define HIVE_SIZE_sp_ISP_PMEM_BASE 4
 
-/* function ia_css_sp_isp_param_mem_load: 4669 */
+/* function ia_css_sp_isp_param_mem_load: 4685 */
 
-/* function __div: 6879 */
+/* function __div: 6895 */
 
-/* function ia_css_isys_sp_frontend_create: 5E23 */
+/* function ia_css_isys_sp_frontend_create: 5E3F */
 
-/* function ia_css_rmgr_sp_refcount_release_vbuf: 6356 */
+/* function ia_css_rmgr_sp_refcount_release_vbuf: 6372 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_flash_sp_in_use
@@ -1876,7 +1876,7 @@
 #define HIVE_ADDR_sp_ia_css_flash_sp_in_use 0x4A9C
 #define HIVE_SIZE_sp_ia_css_flash_sp_in_use 4
 
-/* function ia_css_thread_sem_sp_wait: 6B5C */
+/* function ia_css_thread_sem_sp_wait: 6B78 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_sleep_mode
@@ -1890,7 +1890,7 @@
 #define HIVE_ADDR_sp_sp_sleep_mode 0x4110
 #define HIVE_SIZE_sp_sp_sleep_mode 4
 
-/* function ia_css_tagger_buf_sp_push: 29C0 */
+/* function ia_css_tagger_buf_sp_push: 29D9 */
 
 /* function mmu_invalidate_cache: D3 */
 
@@ -1906,7 +1906,7 @@
 #define HIVE_ADDR_sp_sp_max_cb_elems 0x148
 #define HIVE_SIZE_sp_sp_max_cb_elems 8
 
-/* function ia_css_queue_remote_init: 4B60 */
+/* function ia_css_queue_remote_init: 4B7C */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_stop_req
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/css_api_version.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/css_api_version.h
index 2444ecb..8c90164 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/css_api_version.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/css_api_version.h
@@ -35,7 +35,7 @@ The version string has four dot-separated numbers, read left to right:
 
 */
 
-#define CSS_API_VERSION_STRING	"2.1.14.17"
+#define CSS_API_VERSION_STRING	"2.1.14.20"
 
 /*
 Change log
@@ -236,7 +236,7 @@ v2.1.10.6 (6 changes parallel), change the pipe version type from integer to enu
 v2.1.13.0 (8 changes parallel), Stop Support for Skycam B0
 - Remove a few pre-processor defines for Skycam B0/C0 as support
 
-v2.1.14.0 (22 changes parallel), change the pipe version type from integer to enum
+v2.1.14.0 (23 changes parallel), change the pipe version type from integer to enum
 - remove the temporary workaround for backward compatability
 
 v2.1.14.0 (12 changes parallel), expose_gamma_enable_option
@@ -299,20 +299,30 @@ v2.1.14.13 (5 changes parallel), Remove continuous mode special case handling in
 - even though API ia_css_pipe_set_isp_config is for single pipe
 - Removed incorrect case
 
-v2.1.14.13 (5 changes parallel), cont_remove_x_y_end_from_ae_and_awb
-- this patch doesn't introduce any new api change, it only fixes a recent
-- api merged change (#31938) , in order to have success CI i had to upload an api change request
-
 v2.1.14.13 (5 changes parallel), DVS statistics grid produced by accelerator
 - Add DVS statistics produced by accelerator grid to pipe info
 - Add ia_css_pipe_has_dvs_stats function
 
-v2.1.14.16 (20 changes parallel), eliminate two_pixels_per_clock field
+v2.1.14.14 (6 changes parallel), cont_remove_x_y_end_from_ae_and_awb
+- this patch doesn't introduce any new api change, it only fixes a recent
+- api merged change (#31938) , in order to have success CI i had to upload an api change request
+
+v2.1.14.16 (5 changes parallel), Add XNR3 blending strength to kernel interface
+- Added a blending strength field to the XNR3 kernel interface to add
+- support for blending.
+
+v2.1.14.17 (21 changes parallel), eliminate two_pixels_per_clock field
 - remove obsolete field two_pixels_per_clock
 
-v2.1.14.17 (1 changes parallel), Fix copyright headers (no functional change)
+v2.1.14.18 (2 changes parallel), Fix copyright headers (no functional change)
 - No functional change; only fixes copyright headers
 
+v2.1.14.20 (1 changes parallel), Return an error when both DPC and BDS are enabled in a pipe config
+- Return an error when both DPC and BDS are enabled in a pipe config
+
+v2.1.14.20 (2 changes parallel), ia_css_skc_dvs_statistics field size change
+- ia_css_skc_dvs_statistics field size change
+
 */
 
 #endif /*__CSS_API_VERSION_H*/
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/hive_isp_css_common/host/gdc.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/hive_isp_css_common/host/gdc.c
index 288de8c..7567351 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/hive_isp_css_common/host/gdc.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/hive_isp_css_common/host/gdc.c
@@ -66,6 +66,39 @@ void gdc_lut_store(
 return;
 }
 
+/*
+ * Input LUT format:
+ * c0[0-1023], c1[0-1023], c2[0-1023] c3[0-1023]
+ *
+ * Output LUT format (interleaved):
+ * c0[0], c1[0], c2[0], c3[0], c0[1], c1[1], c2[1], c3[1], ....
+ * c0[1023], c1[1023], c2[1023], c3[1023]
+ *
+ * The first format needs c0[0], c1[0] (which are 1024 words apart)
+ * to program gdc LUT registers. This makes it difficult to do piecemeal
+ * reads in SP side gdc_lut_store
+ *
+ * Interleaved format allows use of contiguous bytes to store into
+ * gdc LUT registers.
+ *
+ * See gdc_lut_store() definition in host/gdc.c vs sp/gdc_private.h
+ *
+ */
+void gdc_lut_convert_to_isp_format(const int in_lut[4][HRT_GDC_N],
+	int out_lut[4][HRT_GDC_N])
+{
+	unsigned int i;
+	int *out = (int *)out_lut;
+
+	for (i = 0; i < HRT_GDC_N; i++) {
+		out[0] = in_lut[0][i];
+		out[1] = in_lut[1][i];
+		out[2] = in_lut[2][i];
+		out[3] = in_lut[3][i];
+		out += 4;
+	}
+}
+
 int gdc_get_unity(
 	const gdc_ID_t		ID)
 {
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/hive_isp_css_include/host/gdc_public.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/hive_isp_css_include/host/gdc_public.h
index 80ffda4..d27f87a 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/hive_isp_css_include/host/gdc_public.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/hive_isp_css_include/host/gdc_public.h
@@ -37,6 +37,16 @@ STORAGE_CLASS_EXTERN void gdc_lut_store(
 	const gdc_ID_t		ID,
 	const int			data[4][HRT_GDC_N]);
 
+/*! Convert the bicubic interpolation table of GDC[ID] to the ISP-specific format
+
+ \param	ID[in]				GDC identifier
+ \param in_lut[in]			The data matrix to be converted
+ \param out_lut[out]			The data matrix as the output of conversion
+ */
+STORAGE_CLASS_EXTERN void gdc_lut_convert_to_isp_format(
+	const int in_lut[4][HRT_GDC_N],
+	int out_lut[4][HRT_GDC_N]);
+
 /*! Return the integer representation of 1.0 of GDC[ID]
  
  \param	ID[in]				GDC identifier
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css.h
index cec8ad8..e1d9a47 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css.h
@@ -1,4 +1,4 @@
-/* Release Version: irci_master_20150302_1500 */
+/* Release Version: irci_master_20150311_1503 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_acc_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_acc_types.h
index 1da741b..075c9cf 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_acc_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_acc_types.h
@@ -49,6 +49,15 @@ enum ia_css_acc_type {
 	IA_CSS_ACC_STANDALONE,	/**< Stand-alone acceleration */
 };
 
+/** Cells types
+ */
+enum ia_css_cell_type {
+	IA_CSS_SP0 = 0,
+	IA_CSS_SP1,
+	IA_CSS_ISP,
+	MAX_NUM_OF_CELLS
+};
+
 /** Firmware types.
  */
 enum ia_css_fw_type {
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_host_data.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_host_data.h
index 6fdcca1..f9f604a 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_host_data.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_host_data.h
@@ -1,4 +1,4 @@
-/* Release Version: irci_master_20150302_1500 */
+/* Release Version: irci_master_20150311_1503 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_pipe.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_pipe.h
index 31956eb..a05fd0d 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_pipe.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_pipe.h
@@ -130,6 +130,8 @@ struct ia_css_yuvpp_settings {
 	0,					/* num_output */ \
 }
 
+struct osys_object;
+
 struct ia_css_pipe {
 	/* TODO: Remove stop_requested and use stop_requested in the pipeline */
 	bool                            stop_requested;
@@ -163,6 +165,7 @@ struct ia_css_pipe {
 		struct ia_css_yuvpp_settings yuvpp;
 	} pipe_settings;
 	hrt_vaddress scaler_pp_lut;
+	struct osys_object *osys_obj;
 
 	/* This number is unique per pipe each instance of css. This number is
 	 * reused as pipeline number also. There is a 1-1 mapping between pipe_num
@@ -199,6 +202,7 @@ struct ia_css_pipe {
 	{ NULL },				/* cont_md_buffers */ \
 	{ IA_CSS_DEFAULT_PREVIEW_SETTINGS },	/* pipe_settings */ \
 	0,					/* scaler_pp_lut */ \
+	NULL,					/* osys object */ \
 	PIPE_ENTRY_EMPTY_TOKEN,			/* pipe_num */\
 }
 
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_types.h
index 7434fb5..a9547cd 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_types.h
@@ -1,4 +1,4 @@
-/* Release Version: irci_master_20150302_1500 */
+/* Release Version: irci_master_20150311_1503 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_version_data.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_version_data.h
index 54a66a2..eaddaba 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_version_data.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_version_data.h
@@ -22,7 +22,7 @@
 #define __IA_CSS_VERSION_DATA_H
 
 
-#define CSS_VERSION_STRING "REL:20150302_10.1_1742; API:2.1.14.17; GIT:scci_20150301_1800_#e3983ea255f4ce736874461974fdb2b5de28efbd; SDK:/nfs/iir/disks/iir_hivepackages_003/iir_hivepkgs_disk017/Css_Mizuchi/packages/Css_Mizuchi/int_css_mizuchi_20140829_1053; USER:viedifw; "
+#define CSS_VERSION_STRING "REL:20150311_11.3_1903; API:2.1.14.20; GIT:scci_20150310_2052_#3450aeadf65d330764f7626eb9d1723c19957ba9; SDK:/nfs/iir/disks/iir_hivepackages_003/iir_hivepkgs_disk017/Css_Mizuchi/packages/Css_Mizuchi/int_css_mizuchi_20140829_1053; USER:viedifw; "
 
 
 #endif
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/dvs/dvs_1.0/ia_css_dvs.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/dvs/dvs_1.0/ia_css_dvs.host.c
index 6a8ef9b..fe342f2 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/dvs/dvs_1.0/ia_css_dvs.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/dvs/dvs_1.0/ia_css_dvs.host.c
@@ -81,7 +81,7 @@ convert_coords_to_ispparams(
 	unsigned int num_blocks_x =  (uv_flag ? DVS_NUM_BLOCKS_X_CHROMA(o_width)  : DVS_NUM_BLOCKS_X(o_width)  ); // round num_x up to blockdim_x, if it concerns the Y0Y1 block (uv_flag==0) round up to even
 
 
-	unsigned int in_stride = i_stride * DVS_INPUT_BYTES_PER_PIXEL << uv_flag;
+	unsigned int in_stride = i_stride * DVS_INPUT_BYTES_PER_PIXEL;
 	unsigned width, height;
 	unsigned int *xbuff = NULL;
 	unsigned int *ybuff = NULL;
@@ -226,7 +226,8 @@ convert_coords_to_ispparams(
 struct ia_css_host_data *
 convert_allocate_dvs_6axis_config(
 	const struct ia_css_dvs_6axis_config *dvs_6axis_config,
-	const struct ia_css_binary *binary)
+	const struct ia_css_binary *binary,
+	const struct ia_css_frame_info *dvs_in_frame_info)
 {
 	unsigned int i_stride;
 	unsigned int o_width;
@@ -236,25 +237,36 @@ convert_allocate_dvs_6axis_config(
 
 	assert(binary != NULL);
 	assert(dvs_6axis_config != NULL);
+	assert(dvs_in_frame_info != NULL);
 
 	me = ia_css_host_data_allocate((size_t)((DVS_6AXIS_BYTES(binary) / 2) * 3));
 
 	if (!me)
 		return NULL;
 
+	/*DVS only supports input frame of YUV420 or NV12. Fail for all other cases*/
+	assert((dvs_in_frame_info->format == IA_CSS_FRAME_FORMAT_NV12)
+		|| (dvs_in_frame_info->format == IA_CSS_FRAME_FORMAT_YUV420));
+
 	isp_data_ptr = (struct gdc_warp_param_mem_s *)me->address;
-	/* bgz115: replaced binary->in_frame_info.res.width for
-	   'padded_width=stride' */
-	i_stride  = binary->internal_frame_info.padded_width;
+
+	i_stride  = dvs_in_frame_info->padded_width;
+
 	o_width  = binary->out_frame_info[0].res.width;
 	o_height = binary->out_frame_info[0].res.height;
 
 	/* Y plane */
 	convert_coords_to_ispparams(me, dvs_6axis_config,
 				    i_stride, o_width, o_height, 0);
+
+	if (dvs_in_frame_info->format == IA_CSS_FRAME_FORMAT_YUV420) {
+		/*YUV420 has half the stride for U/V plane*/
+		i_stride /=2;
+	}
+
 	/* UV plane (packed inside the y plane) */
 	convert_coords_to_ispparams(me, dvs_6axis_config,
-				    i_stride/2, o_width/2, o_height/2, 1);
+				    i_stride, o_width/2, o_height/2, 1);
 
 	return me;
 }
@@ -263,15 +275,18 @@ enum ia_css_err
 store_dvs_6axis_config(
 	const struct ia_css_dvs_6axis_config *dvs_6axis_config,
 	const struct ia_css_binary *binary,
+	const struct ia_css_frame_info *dvs_in_frame_info,
 	hrt_vaddress ddr_addr_y)
 {
 
 	struct ia_css_host_data *me;
 	assert(dvs_6axis_config != NULL);
 	assert(ddr_addr_y != mmgr_NULL);
+	assert(dvs_in_frame_info != NULL);
 
 	me = convert_allocate_dvs_6axis_config(dvs_6axis_config,
-				 binary);
+				 binary,
+				 dvs_in_frame_info);
 
 	if (!me) {
 		IA_CSS_LEAVE_ERR_PRIVATE(IA_CSS_ERR_CANNOT_ALLOCATE_MEMORY);
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/dvs/dvs_1.0/ia_css_dvs.host.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/dvs/dvs_1.0/ia_css_dvs.host.h
index 16652dd..2f513e2 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/dvs/dvs_1.0/ia_css_dvs.host.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/dvs/dvs_1.0/ia_css_dvs.host.h
@@ -47,12 +47,14 @@ convert_dvs_6axis_config(
 struct ia_css_host_data *
 convert_allocate_dvs_6axis_config(
 	const struct ia_css_dvs_6axis_config *dvs_6axis_config,
-	const struct ia_css_binary *binary);
+	const struct ia_css_binary *binary,
+	const struct ia_css_frame_info *dvs_in_frame_info);
 
 enum ia_css_err
 store_dvs_6axis_config(
 	const struct ia_css_dvs_6axis_config *dvs_6axis_config,
 	const struct ia_css_binary *binary,
+	const struct ia_css_frame_info *dvs_in_frame_info,
 	hrt_vaddress ddr_addr_y);
 
 #endif /* __IA_CSS_DVS_HOST_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/hdr/ia_css_hdr.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/hdr/ia_css_hdr.host.c
index 209c11c..bed8311 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/hdr/ia_css_hdr.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/hdr/ia_css_hdr.host.c
@@ -1,4 +1,4 @@
-/* Release Version: irci_master_20150302_1500 */
+/* Release Version: irci_master_20150311_1503 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/hdr/ia_css_hdr.host.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/hdr/ia_css_hdr.host.h
index df14303..f838ad2 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/hdr/ia_css_hdr.host.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/hdr/ia_css_hdr.host.h
@@ -1,4 +1,4 @@
-/* Release Version: irci_master_20150302_1500 */
+/* Release Version: irci_master_20150311_1503 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/hdr/ia_css_hdr_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/hdr/ia_css_hdr_param.h
index 81d03fa..5c5b3c2 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/hdr/ia_css_hdr_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/hdr/ia_css_hdr_param.h
@@ -1,4 +1,4 @@
-/* Release Version: irci_master_20150302_1500 */
+/* Release Version: irci_master_20150311_1503 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/hdr/ia_css_hdr_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/hdr/ia_css_hdr_types.h
index 07dc58c..117c193 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/hdr/ia_css_hdr_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/hdr/ia_css_hdr_types.h
@@ -1,4 +1,4 @@
-/* Release Version: irci_master_20150302_1500 */
+/* Release Version: irci_master_20150311_1503 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/pdaf/ia_css_pdaf.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/pdaf/ia_css_pdaf.host.c
index 437e9ed..283ca1b 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/pdaf/ia_css_pdaf.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/pdaf/ia_css_pdaf.host.c
@@ -17,47 +17,66 @@
 #include "sh_css_frac.h"
 #include "ia_css_pdaf.host.h"
 
-const struct ia_css_pdaf_config default_pdaf_config =
-{
-	0, 0,
-	{ 0, 0,
-	  {0}, {0},
-	  {0}, {0}
-	}
-};
+const struct ia_css_pdaf_config default_pdaf_config;
 
 void
 ia_css_pdaf_dmem_encode(
-	struct sh_css_isp_pdaf_dmem_params *to,
-	const struct ia_css_pdaf_config *from,
-	unsigned size)
+		struct isp_pdaf_dmem_params *to,
+		const struct ia_css_pdaf_config *from,
+		unsigned size)
 {
 	(void)size;
 	to->frm_length = from->frm_length;
 	to->frm_width  = from->frm_width;
-	to->ext_cfg_data_dmem.num_x_patterns = from->ext_cfg_data.num_x_patterns;
-	to->ext_cfg_data_dmem.num_y_patterns = from->ext_cfg_data.num_y_patterns;
+
+	to->ext_cfg_l_data.num_valid_patterns = from->ext_cfg_data.l_pixel_grid.num_valid_patterns;
+
+	to->ext_cfg_r_data.num_valid_patterns = from->ext_cfg_data.r_pixel_grid.num_valid_patterns;
+
+	to->stats_calc_data.num_valid_elm = from->stats_calc_cfg_data.num_valid_elm;
 }
 
 void
 ia_css_pdaf_vmem_encode(
-	struct sh_css_isp_pdaf_vmem_params *to,
-	const struct ia_css_pdaf_config *from,
-	unsigned size)
+		struct isp_pdaf_vmem_params *to,
+		const struct ia_css_pdaf_config *from,
+		unsigned size)
 {
 
 	unsigned int i;
 	(void)size;
+	/* Initialize left pixel grid */
+	for ( i=0 ; i < from->ext_cfg_data.l_pixel_grid.num_valid_patterns ; i++) {
 
-	for ( i=0 ; i < ISP_NWAY; i++)
-	{
-		to->ext_cfg_data_vmem.y_step_size[i] = from->ext_cfg_data.y_step_size[i];
-		to->ext_cfg_data_vmem.y_offset[i] = from->ext_cfg_data.y_offset[i];
+		to->ext_cfg_l_data.y_offset[0][i] = from->ext_cfg_data.l_pixel_grid.y_offset[i];
+		to->ext_cfg_l_data.x_offset[0][i] = from->ext_cfg_data.l_pixel_grid.x_offset[i];
+		to->ext_cfg_l_data.y_step_size[0][i] = from->ext_cfg_data.l_pixel_grid.y_step_size[i];
+		to->ext_cfg_l_data.x_step_size[0][i] = from->ext_cfg_data.l_pixel_grid.x_step_size[i];
 	}
 
-  for ( i=0 ; i < ISP_NWAY; i++)
-	{
-		to->ext_cfg_data_vmem.x_step_size[i] = from->ext_cfg_data.x_step_size[i];
-		to->ext_cfg_data_vmem.x_offset[i] = from->ext_cfg_data.x_offset[i];
+	for ( ; i < ISP_NWAY ; i++) {
+
+		to->ext_cfg_l_data.y_offset[0][i] = PDAF_INVALID_VAL;
+		to->ext_cfg_l_data.x_offset[0][i] = PDAF_INVALID_VAL;
+		to->ext_cfg_l_data.y_step_size[0][i] = PDAF_INVALID_VAL;
+		to->ext_cfg_l_data.x_step_size[0][i] = PDAF_INVALID_VAL;
+	}
+
+	/* Initialize left pixel grid */
+
+	for ( i=0 ; i < from->ext_cfg_data.r_pixel_grid.num_valid_patterns ; i++) {
+
+		to->ext_cfg_r_data.y_offset[0][i] = from->ext_cfg_data.r_pixel_grid.y_offset[i];
+		to->ext_cfg_r_data.x_offset[0][i] = from->ext_cfg_data.r_pixel_grid.x_offset[i];
+		to->ext_cfg_r_data.y_step_size[0][i] = from->ext_cfg_data.r_pixel_grid.y_step_size[i];
+		to->ext_cfg_r_data.x_step_size[0][i] = from->ext_cfg_data.r_pixel_grid.x_step_size[i];
+	}
+
+	for ( ; i < ISP_NWAY ; i++) {
+
+		to->ext_cfg_r_data.y_offset[0][i] = PDAF_INVALID_VAL;
+		to->ext_cfg_r_data.x_offset[0][i] = PDAF_INVALID_VAL;
+		to->ext_cfg_r_data.y_step_size[0][i] = PDAF_INVALID_VAL;
+		to->ext_cfg_r_data.x_step_size[0][i] = PDAF_INVALID_VAL;
 	}
 }
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/pdaf/ia_css_pdaf.host.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/pdaf/ia_css_pdaf.host.h
index 9d3b99f..21f72a4 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/pdaf/ia_css_pdaf.host.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/pdaf/ia_css_pdaf.host.h
@@ -22,14 +22,14 @@ extern const struct ia_css_pdaf_config default_pdaf_config;
 
 void
 ia_css_pdaf_dmem_encode(
-	struct sh_css_isp_pdaf_dmem_params *to,
-	const struct ia_css_pdaf_config *from,
-	unsigned size);
+		struct isp_pdaf_dmem_params *to,
+		const struct ia_css_pdaf_config *from,
+		unsigned size);
 
 void
 ia_css_pdaf_vmem_encode(
-	struct sh_css_isp_pdaf_vmem_params *to,
-	const struct ia_css_pdaf_config *from,
-	unsigned size);
+		struct isp_pdaf_vmem_params *to,
+		const struct ia_css_pdaf_config *from,
+		unsigned size);
 
 #endif /* __IA_CSS_PDAF_HOST_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/pdaf/ia_css_pdaf_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/pdaf/ia_css_pdaf_param.h
index a6ad6f9..6633f0c 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/pdaf/ia_css_pdaf_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/pdaf/ia_css_pdaf_param.h
@@ -15,39 +15,46 @@
 #ifndef __IA_CSS_PDAF_PARAM_H
 #define __IA_CSS_PDAF_PARAM_H
 
-#include "type_support.h"
+#define PDAF_INVALID_VAL 0x7FFF
+#include "vmem.h"
 
+struct isp_stats_calc_dmem_params {
+
+	uint16_t num_valid_elm;
+};
 /*
  * Extraction configuration parameters
  */
 
-struct sh_css_isp_extraction_dmem_params
-{
-	uint8_t num_x_patterns;
-	uint8_t num_y_patterns;
+struct isp_extraction_dmem_params {
+
+	uint8_t num_valid_patterns;
 };
 
-struct sh_css_isp_extraction_vmem_params
-{
-	int16_t y_step_size[ISP_NWAY];
-	int16_t y_offset[ISP_NWAY];
-	int16_t x_step_size[ISP_NWAY];
-	int16_t x_offset[ISP_NWAY];
+struct isp_extraction_vmem_params {
+
+	VMEM_ARRAY(y_step_size, ISP_VEC_NELEMS);
+	VMEM_ARRAY(y_offset, ISP_VEC_NELEMS);
+	VMEM_ARRAY(x_step_size, ISP_VEC_NELEMS);
+	VMEM_ARRAY(x_offset, ISP_VEC_NELEMS);
 };
 
 /*
  * PDAF configuration parameters
  */
-struct sh_css_isp_pdaf_vmem_params
-{
-	struct sh_css_isp_extraction_vmem_params ext_cfg_data_vmem;
+struct isp_pdaf_vmem_params {
+
+	struct isp_extraction_vmem_params ext_cfg_l_data;
+	struct isp_extraction_vmem_params ext_cfg_r_data;
 };
 
-struct sh_css_isp_pdaf_dmem_params
-{
+struct isp_pdaf_dmem_params {
+
 	uint16_t frm_length;
 	uint16_t frm_width;
-	struct sh_css_isp_extraction_dmem_params ext_cfg_data_dmem;
+	struct isp_stats_calc_dmem_params stats_calc_data;
+	struct isp_extraction_dmem_params ext_cfg_l_data;
+	struct isp_extraction_dmem_params ext_cfg_r_data;
 };
 
 #endif /* __IA_CSS_PDAF_PARAM_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/pdaf/ia_css_pdaf_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/pdaf/ia_css_pdaf_types.h
index d34928e..3e42877 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/pdaf/ia_css_pdaf_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/pdaf/ia_css_pdaf_types.h
@@ -18,26 +18,37 @@
 #include "type_support.h"
 #include "isp2600_config.h"
 /*
-* CSS-API header file for PDAF parameters
-* These parameters shall be filled by host/driver
-* and will be converted to ISP parameters in encode
-* function.
-*/
-struct ia_css_extraction_config
-{
-	uint8_t num_x_patterns;
-	uint8_t num_y_patterns;
+ * Header file for PDAF parameters
+ * These parameters shall be filled by host/driver
+ * and will be converted to ISP parameters in encode
+ * function.
+ */
+
+struct ia_css_statistics_calc_config {
+
+	uint16_t num_valid_elm;
+};
+struct ia_css_pixel_grid_config {
+
+	uint8_t num_valid_patterns;
 	int16_t y_step_size[ISP_NWAY];
 	int16_t y_offset[ISP_NWAY];
 	int16_t x_step_size[ISP_NWAY];
 	int16_t x_offset[ISP_NWAY];
 };
 
-struct ia_css_pdaf_config
-{
+struct ia_css_extraction_config {
+
+	struct ia_css_pixel_grid_config l_pixel_grid;	/* Left PDAF pixel grid */
+	struct ia_css_pixel_grid_config r_pixel_grid;	/* Right PDAF pixel grid */
+};
+
+struct ia_css_pdaf_config {
+
 	uint16_t frm_length;
 	uint16_t frm_width;
 	struct ia_css_extraction_config ext_cfg_data;
+	struct ia_css_statistics_calc_config stats_calc_cfg_data;
 };
 
 #endif /* __IA_CSS_PDAF_TYPES_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/xnr/xnr_3.0/ia_css_xnr3.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/xnr/xnr_3.0/ia_css_xnr3.host.c
index a630a2c..a783abb 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/xnr/xnr_3.0/ia_css_xnr3.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/xnr/xnr_3.0/ia_css_xnr3.host.c
@@ -28,13 +28,16 @@
 /*
  * Default kernel parameters. In general, default is bypass mode or as close
  * to the ineffective values as possible. Due to the chroma down+upsampling,
- * perfect bypass mode is not possible for xnr3.
+ * perfect bypass mode is not possible for xnr3 filter itself. Instead, the
+ * 'blending' parameter is used to create a bypass.
  */
 const struct ia_css_xnr3_config default_xnr3_config = {
 	/* sigma */
 	{ 0, 0, 0, 0, 0, 0 },
 	/* coring */
-	{ 0, 0, 0, 0 }
+	{ 0, 0, 0, 0 },
+	/* blending */
+	{ 0 }
 };
 
 /*
@@ -82,13 +85,35 @@ compute_alpha(int sigma)
 static int32_t
 compute_coring(int coring)
 {
+	int32_t isp_coring;
 	int32_t isp_scale = XNR_CORING_SCALE_FACTOR;
 	int32_t host_scale = IA_CSS_XNR3_CORING_SCALE;
 	int32_t offset = host_scale / 2; /* fixed-point 0.5 */
 
 	/* Convert from public host-side scale factor to isp-side scale
-	 * factor. */
-	return ((coring * isp_scale) + offset) / host_scale;
+	 * factor. Clip to [0, isp_scale-1). */
+	isp_coring = ((coring * isp_scale) + offset) / host_scale;
+	return min(max(isp_coring, 0), isp_scale - 1);
+}
+
+/*
+ * Compute the scaled blending strength for the ISP kernel from the value on
+ * the host parameter interface.
+ */
+static int32_t
+compute_blending(int strength)
+{
+	int32_t isp_strength;
+	int32_t isp_scale = XNR_BLENDING_SCALE_FACTOR;
+	int32_t host_scale = IA_CSS_XNR3_BLENDING_SCALE;
+	int32_t offset = host_scale / 2; /* fixed-point 0.5 */
+
+	/* Convert from public host-side scale factor to isp-side scale
+	 * factor. The blending factor is positive on the host side, but
+	 * negative on the ISP side because +1.0 cannot be represented
+	 * exactly as s0.11 fixed point, but -1.0 can. */
+	isp_strength = -(((strength * isp_scale) + offset) / host_scale);
+	return max(min(isp_strength, 0), -XNR_BLENDING_SCALE_FACTOR);
 }
 
 void
@@ -101,6 +126,8 @@ ia_css_xnr3_encode(
 	/* The adjust factor is the next power of 2
 	   w.r.t. the kernel size*/
 	int adjust_factor = ceil_pow2(kernel_size);
+	int32_t max_diff = (1 << (ISP_VEC_ELEMBITS - 1)) - 1;
+	int32_t min_diff = -(1 << (ISP_VEC_ELEMBITS - 1));
 
 	int32_t alpha_y0 = compute_alpha(from->sigma.y0);
 	int32_t alpha_y1 = compute_alpha(from->sigma.y1);
@@ -108,11 +135,18 @@ ia_css_xnr3_encode(
 	int32_t alpha_u1 = compute_alpha(from->sigma.u1);
 	int32_t alpha_v0 = compute_alpha(from->sigma.v0);
 	int32_t alpha_v1 = compute_alpha(from->sigma.v1);
+	int32_t alpha_ydiff = (alpha_y1 - alpha_y0) * adjust_factor / kernel_size;
+	int32_t alpha_udiff = (alpha_u1 - alpha_u0) * adjust_factor / kernel_size;
+	int32_t alpha_vdiff = (alpha_v1 - alpha_v0) * adjust_factor / kernel_size;
 
 	int32_t coring_u0 = compute_coring(from->coring.u0);
 	int32_t coring_u1 = compute_coring(from->coring.u1);
 	int32_t coring_v0 = compute_coring(from->coring.v0);
 	int32_t coring_v1 = compute_coring(from->coring.v1);
+	int32_t coring_udiff = (coring_u1 - coring_u0) * adjust_factor / kernel_size;
+	int32_t coring_vdiff = (coring_v1 - coring_v0) * adjust_factor / kernel_size;
+
+	int32_t blending = compute_blending(from->blending.strength);
 
 	(void)size;
 
@@ -120,15 +154,18 @@ ia_css_xnr3_encode(
 	to->alpha.y0 = alpha_y0;
 	to->alpha.u0 = alpha_u0;
 	to->alpha.v0 = alpha_v0;
-	to->alpha.ydiff = (alpha_y1 - alpha_y0) * adjust_factor / kernel_size;
-	to->alpha.udiff = (alpha_u1 - alpha_u0) * adjust_factor / kernel_size;
-	to->alpha.vdiff = (alpha_v1 - alpha_v0) * adjust_factor / kernel_size;
+	to->alpha.ydiff = min(max(alpha_ydiff, min_diff), max_diff);
+	to->alpha.udiff = min(max(alpha_udiff, min_diff), max_diff);
+	to->alpha.vdiff = min(max(alpha_vdiff, min_diff), max_diff);
 
 	/* coring parameters are expressed in q1.NN format */
 	to->coring.u0 = coring_u0;
 	to->coring.v0 = coring_v0;
-	to->coring.udiff = (coring_u1 - coring_u0) * adjust_factor / kernel_size;
-	to->coring.vdiff = (coring_v1 - coring_v0) * adjust_factor / kernel_size;
+	to->coring.udiff = min(max(coring_udiff, min_diff), max_diff);
+	to->coring.vdiff = min(max(coring_vdiff, min_diff), max_diff);
+
+	/* blending strength is expressed in q1.NN format */
+	to->blending.strength = blending;
 }
 
 /* Dummy Function added as the tool expects it*/
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/xnr/xnr_3.0/ia_css_xnr3_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/xnr/xnr_3.0/ia_css_xnr3_param.h
index 6573a01..77e2d76 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/xnr/xnr_3.0/ia_css_xnr3_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/xnr/xnr_3.0/ia_css_xnr3_param.h
@@ -27,6 +27,10 @@
 #define XNR_CORING_SCALE_LOG2       (ISP_VEC_ELEMBITS-1)
 #define XNR_CORING_SCALE_FACTOR     (1 << XNR_CORING_SCALE_LOG2)
 
+/* Scaling factor of the blending strength on the ISP. */
+#define XNR_BLENDING_SCALE_LOG2     (ISP_VEC_ELEMBITS-1)
+#define XNR_BLENDING_SCALE_FACTOR   (1 << XNR_BLENDING_SCALE_LOG2)
+
 /* XNR3 filter size. Must be 11x11, 9x9 or 5x5. */
 #ifdef FLT_KERNEL_9x9
 #define XNR_FILTER_SIZE             9
@@ -58,10 +62,16 @@ struct sh_css_xnr3_coring_params {
 	int32_t vdiff;
 };
 
+/* XNR3 blending strength on the ISP. */
+struct sh_css_xnr3_blending_params {
+	int32_t strength;
+};
+
 /* XNR3 ISP parameters */
 struct sh_css_isp_xnr3_params {
-	struct sh_css_xnr3_alpha_params  alpha;
-	struct sh_css_xnr3_coring_params coring;
+	struct sh_css_xnr3_alpha_params    alpha;
+	struct sh_css_xnr3_coring_params   coring;
+	struct sh_css_xnr3_blending_params blending;
 };
 
 #endif  /*__IA_CSS_XNR3_PARAM_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/xnr/xnr_3.0/ia_css_xnr3_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/xnr/xnr_3.0/ia_css_xnr3_types.h
index 8ddd266..8f14d10 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/xnr/xnr_3.0/ia_css_xnr3_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/xnr/xnr_3.0/ia_css_xnr3_types.h
@@ -31,6 +31,12 @@
  */
 #define IA_CSS_XNR3_CORING_SCALE (1 << 15)
 
+/**
+ * \brief Scale of the XNR blending parameter.
+ * \details The define specifies which fixed-point value represents 1.0.
+ */
+#define IA_CSS_XNR3_BLENDING_SCALE (1 << 11)
+
 
 /**
  * \brief XNR3 Sigma Parameters.
@@ -65,13 +71,28 @@ struct ia_css_xnr3_coring_params {
 };
 
 /**
+ * \brief XNR3 Blending Parameters
+ * \details Blending parameters define the blending strength of filtered
+ * output pixels with the original chroma pixels from before xnr3. The
+ * blending strength is a fixed-point value between 0.0 and 1.0 (inclusive),
+ * scaled with IA_CSS_XNR3_BLENDING_SCALE.
+ * A higher number applies xnr filtering more strongly. A value of 1.0
+ * disables the blending and returns the xnr3 filtered output, while a
+ * value of 0.0 bypasses the entire xnr3 filter.
+ */
+struct ia_css_xnr3_blending_params {
+	int strength;   /**< Blending strength */
+};
+
+/**
  * \brief XNR3 public parameters.
  * \details Struct with all parameters for the XNR3 kernel that can be set
  * from the CSS API.
  */
 struct ia_css_xnr3_config {
-	struct ia_css_xnr3_sigma_params  sigma;   /**< XNR3 sigma parameters */
-	struct ia_css_xnr3_coring_params coring;  /**< XNR3 coring parameters */
+	struct ia_css_xnr3_sigma_params    sigma;    /**< XNR3 sigma parameters */
+	struct ia_css_xnr3_coring_params   coring;   /**< XNR3 coring parameters */
+	struct ia_css_xnr3_blending_params blending; /**< XNR3 blending parameters */
 };
 
 #endif /* __IA_CSS_XNR3_TYPES_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/modes/interface/isp_const.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/modes/interface/isp_const.h
index b1ce736..9f3d7cc 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/modes/interface/isp_const.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/modes/interface/isp_const.h
@@ -125,6 +125,7 @@
 #define SH_CSS_BINARY_ID_VIDEO_KERNELTEST_DVS               135
 #define SH_CSS_BINARY_ID_VIDEO_KERNELTEST_XNR               136
 #define SH_CSS_BINARY_ID_VIDEO_KERNELTEST_XNR_STRIPED       137
+#define SH_CSS_BINARY_ID_VIDEO_KERNELTEST_XNR_BLENDING      138
 #define SH_CSS_BINARY_ID_VIDEO_KERNELTEST_TNR_BLOCK         139
 #define SH_CSS_BINARY_ID_VIDEO_KERNELTEST_ACC_AE            141
 #define SH_CSS_BINARY_ID_VIDEO_RAW                          142
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/runtime/binary/src/binary.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/runtime/binary/src/binary.c
index 48fa021..a7e4b5a 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/runtime/binary/src/binary.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/runtime/binary/src/binary.c
@@ -531,7 +531,7 @@ enum ia_css_err
 ia_css_binary_init_infos(void)
 {
 	unsigned int i;
-	unsigned int num_of_isp_binaries = sh_css_num_binaries - NUM_OF_SPS;
+	unsigned int num_of_isp_binaries = sh_css_num_binaries - NUM_OF_SPS - NUM_OF_BLS;
 
 	if (num_of_isp_binaries == 0)
 		return IA_CSS_SUCCESS;
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/runtime/spctrl/interface/ia_css_spctrl.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/runtime/spctrl/interface/ia_css_spctrl.h
index bb4d157..9feba44 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/runtime/spctrl/interface/ia_css_spctrl.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/runtime/spctrl/interface/ia_css_spctrl.h
@@ -34,6 +34,8 @@ typedef struct {
 	char      *program_name;    /**< not used on hardware, only for simulation */
 } ia_css_spctrl_cfg;
 
+/* Get the code addr in DDR of SP */
+hrt_vaddress get_sp_code_addr(sp_ID_t  sp_id);
 
 /* ! Load firmware on to specfied SP
 */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/runtime/spctrl/src/spctrl.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/runtime/spctrl/src/spctrl.c
index 8718361..d4eec0b 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/runtime/spctrl/src/spctrl.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/runtime/spctrl/src/spctrl.c
@@ -123,6 +123,11 @@ enum ia_css_err ia_css_spctrl_load_fw(sp_ID_t sp_id,
 	return IA_CSS_SUCCESS;
 }
 
+hrt_vaddress get_sp_code_addr(sp_ID_t  sp_id)
+{
+	return spctrl_cofig_info[sp_id].code_addr;
+}
+
 enum ia_css_err ia_css_spctrl_unload_fw(sp_ID_t sp_id)
 {
 	if ((sp_id >= N_SP_ID) || ((sp_id < N_SP_ID) && (!spctrl_loaded[sp_id])))
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css.c
index a8decc9..8e271cb 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css.c
@@ -96,6 +96,9 @@ static int thread_alive;
 
 #include "isp/modes/interface/input_buf.isp.h"
 
+#if defined(HAS_BL)
+#include "support/bootloader/interface/ia_css_blctrl.h"
+#endif
 #if defined(HAS_RES_MGR)
 #include "components/acc_cluster/gen/host/acc_cluster.host.h"
 #endif
@@ -109,6 +112,9 @@ static int thread_alive;
 #if defined(HAS_SEC_SP)
 #define SP1_PROG_NAME "sp1"
 #endif /* HAS_SEC_SP */
+#if defined(HAS_BL)
+#define BL_PROG_NAME "bootloader"
+#endif
 /* Size of Refcount List */
 #define REFCOUNT_SIZE 1000
 
@@ -1463,6 +1469,34 @@ enable_interrupts(enum ia_css_irq_type irq_type)
 	IA_CSS_LEAVE_PRIVATE("");
 }
 
+#if defined(HAS_BL)
+static bool sh_css_setup_blctrl_config(const struct ia_css_fw_info *fw,
+							const char *program,
+							ia_css_blctrl_cfg  *blctrl_cfg)
+{
+	if((fw == NULL)||(blctrl_cfg == NULL))
+		return false;
+	blctrl_cfg->bl_entry = 0;
+	blctrl_cfg->program_name = (char *)(program);
+
+#if !defined(C_RUN) && !defined(HRT_UNSCHED)
+	blctrl_cfg->ddr_data_offset =  fw->blob.data_source;
+	blctrl_cfg->dmem_data_addr = fw->blob.data_target;
+	blctrl_cfg->dmem_bss_addr = fw->blob.bss_target;
+	blctrl_cfg->data_size = fw->blob.data_size ;
+	blctrl_cfg->bss_size = fw->blob.bss_size;
+
+	blctrl_cfg->blctrl_state_dmem_addr = fw->info.bl.sw_state;
+	blctrl_cfg->blctrl_dma_cmd_list = fw->info.bl.dma_cmd_list;
+	blctrl_cfg->blctrl_nr_of_dma_cmds = fw->info.bl.num_dma_cmds;
+
+	blctrl_cfg->code_size = fw->blob.size;
+	blctrl_cfg->code      = fw->blob.code;
+	blctrl_cfg->bl_entry  = fw->info.bl.bl_entry; /* entry function ptr on Bootloader */
+#endif
+	return true;
+}
+#endif
 static bool sh_css_setup_spctrl_config(const struct ia_css_fw_info *fw,
 							const char * program,
 							ia_css_spctrl_cfg  *spctrl_cfg)
@@ -1581,6 +1615,9 @@ ia_css_init(const struct ia_css_env *env,
 {
 	enum ia_css_err err;
 	ia_css_spctrl_cfg spctrl_cfg;
+#if defined(HAS_BL)
+	ia_css_blctrl_cfg blctrl_cfg;
+#endif
 #if defined(HAS_SEC_SP)
 	ia_css_spctrl_cfg sp1ctrl_cfg;
 #endif /* HAS_SEC_SP */
@@ -1747,6 +1784,24 @@ ia_css_init(const struct ia_css_env *env,
 	}
 #endif /* HAS_SEC_SP */
 
+#if defined(HAS_BL)
+	if (!sh_css_setup_blctrl_config(&sh_css_bl_fw, BL_PROG_NAME, &blctrl_cfg))
+		return IA_CSS_ERR_INTERNAL_ERROR;
+	err = ia_css_blctrl_load_fw(&blctrl_cfg);
+	if (err != IA_CSS_SUCCESS) {
+		IA_CSS_LEAVE_ERR(err);
+		return err;
+	}
+#if defined(HAS_SEC_SP)
+	err = ia_css_blctrl_add_target_fw_info(&sh_css_sp1_fw, IA_CSS_SP1,
+					 get_sp_code_addr(SP1_ID));
+#endif
+	if (err != IA_CSS_SUCCESS) {
+		IA_CSS_LEAVE_ERR(err);
+		return err;
+	}
+#endif /* HAS_BL */
+
 #if defined(HRT_CSIM)
 	/**
 	 * In compiled simulator context include debug support by default.
@@ -2539,6 +2594,9 @@ ia_css_uninit(void)
 	sh_css_sp1_set_sp1_running(false);
 #endif /* HAS_SEC_SP */
 
+#if defined(HAS_BL)
+	ia_css_blctrl_unload_fw();
+#endif
 #if defined(USE_INPUT_SYSTEM_VERSION_2) || defined(USE_INPUT_SYSTEM_VERSION_2401)
 	/* check and free any remaining mipi frames */
 	free_mipi_frames(NULL);
@@ -5295,10 +5353,12 @@ static enum ia_css_err load_video_binaries(struct ia_css_pipe *pipe)
 					 &mycs->video_binary);
 
 		if (err != IA_CSS_SUCCESS) {
+#if !defined(IS_ISP_2500_SYSTEM)
 			if (video_vf_info) {
 				/* This will do another video binary lookup later for YUV_LINE format*/
 				need_vf_pp = true;
 			} else
+#endif
 				return err;
 		} else if (video_vf_info) {
 			/* The first video binary lookup is successful, but we may
@@ -6048,7 +6108,18 @@ allocate_delay_frames(struct ia_css_pipe *pipe)
 #ifdef IS_ISP_2500_SYSTEM
 			ref_info.format = IA_CSS_FRAME_FORMAT_YUV420_16;
 #else
-			ref_info.format = IA_CSS_FRAME_FORMAT_YUV420;
+			/*The ref frame expects
+			 * 	1. Y plane
+			 * 	2. UV plane with line interleaving, like below
+			 * 		UUUUUU(width/2 times) VVVVVVVV..(width/2 times)
+			 *
+			 *	This format is not YUV420(which has Y, U and V planes).
+			 *	Its closer to NV12, except that the UV plane has UV 
+			 *	interleaving, like UVUVUVUVUVUVUVUVU...
+			 *
+			 *	TODO: make this ref_frame format as a separate frame format
+			 */
+			ref_info.format        = IA_CSS_FRAME_FORMAT_NV12;
 #endif
 			delay_frames = mycs_video->delay_frames;
 		}
@@ -9820,6 +9891,39 @@ ia_css_pipe_get_isp_pipe_version(const struct ia_css_pipe *pipe)
 	return (unsigned int)pipe->config.isp_pipe_version;
 }
 
+#if defined(HAS_BL)
+#define BL_START_TIMEOUT_US 30000000
+static enum ia_css_err
+ia_css_start_bl(void)
+{
+	enum ia_css_err err = IA_CSS_SUCCESS;
+	unsigned long timeout;
+
+	IA_CSS_ENTER("");
+	sh_css_start_bl();
+	/* waiting for the Bootloader to complete execution */
+	timeout = BL_START_TIMEOUT_US;
+	while((ia_css_blctrl_get_state() == BOOTLOADER_BUSY) && timeout) {
+		timeout--;
+		hrt_sleep();
+	}
+	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE,
+			    "Bootloader state %d\n", ia_css_blctrl_get_state());
+	if (timeout == 0) {
+		ia_css_debug_dtrace(IA_CSS_DEBUG_ERROR,
+				    "Bootloader Execution Timeout\n");
+		err = IA_CSS_ERR_INTERNAL_ERROR;
+	}
+	if (ia_css_blctrl_get_state() != BOOTLOADER_OK) {
+		ia_css_debug_dtrace(IA_CSS_DEBUG_ERROR,
+				    "Bootloader Execution Failed\n");
+		err = IA_CSS_ERR_INTERNAL_ERROR;
+	}
+	IA_CSS_LEAVE_ERR(err);
+	return err;
+}
+#endif
+
 #define SP_START_TIMEOUT_US 30000000
 
 #if defined(HAS_SEC_SP)
@@ -9856,6 +9960,15 @@ ia_css_start_sp(void)
 	enum ia_css_err err = IA_CSS_SUCCESS;
 
 	IA_CSS_ENTER("");
+#if defined(HAS_BL)
+	/* Starting bootloader before Sp0 and Sp1
+	 * and not exposing CSS API */
+	err = ia_css_start_bl();
+	if (err != IA_CSS_SUCCESS) {
+		IA_CSS_LEAVE("Bootloader fails");
+		return err;
+	}
+#endif
 	sh_css_sp_start_isp();
 
 	/* waiting for the SP is completely started */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_firmware.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_firmware.c
index c047759..19d57631 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_firmware.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_firmware.c
@@ -47,10 +47,10 @@ struct fw_param {
 /* Warning: same order as SH_CSS_BINARY_ID_* */
 static struct firmware_header *firmware_header;
 
-/* The string STR(irci_master_20150302_1500) is a place holder
+/* The string STR(irci_master_20150311_1503) is a place holder
  * which will be replaced with the actual RELEASE_VERSION
  * during package generation. Please do not modify  */
-static const char *release_version = STR(irci_master_20150302_1500);
+static const char *release_version = STR(irci_master_20150311_1503);
 
 #define MAX_FW_REL_VER_NAME	300
 static char FW_rel_ver_name[MAX_FW_REL_VER_NAME] = "---";
@@ -59,6 +59,9 @@ struct ia_css_fw_info	  sh_css_sp_fw;
 #if defined(HAS_SEC_SP)
 struct ia_css_fw_info	  sh_css_sp1_fw;
 #endif /* HAS_SEC_SP */
+#if defined(HAS_BL)
+struct ia_css_fw_info     sh_css_bl_fw;
+#endif /* HAS_BL */
 struct ia_css_blob_descr *sh_css_blob_info; /* Only ISP blob info (no SP) */
 unsigned		  sh_css_num_binaries; /* This includes 1 SP binary */
 
@@ -77,7 +80,7 @@ char *sh_css_get_fw_version(void)
 
 /* Setup sp/sp1 binary */
 static enum ia_css_err
-setup_sp(struct ia_css_fw_info *fw, const char *fw_data, struct ia_css_fw_info *sh_css_sp_sp1_fw, unsigned sp_id)
+setup_binary(struct ia_css_fw_info *fw, const char *fw_data, struct ia_css_fw_info *sh_css_fw, unsigned binary_id)
 {
 	const char *blob_data;
 
@@ -86,20 +89,20 @@ setup_sp(struct ia_css_fw_info *fw, const char *fw_data, struct ia_css_fw_info *
 
 	blob_data = fw_data + fw->blob.offset;
 
-	*sh_css_sp_sp1_fw = *fw;
+	*sh_css_fw = *fw;
 
 #if defined(C_RUN) || defined(HRT_UNSCHED)
-	sh_css_sp_sp1_fw->blob.code = sh_css_malloc(1);
+	sh_css_fw->blob.code = sh_css_malloc(1);
 #else
-	sh_css_sp_sp1_fw->blob.code = sh_css_malloc(fw->blob.size);
+	sh_css_fw->blob.code = sh_css_malloc(fw->blob.size);
 #endif
 
-	if (sh_css_sp_sp1_fw->blob.code == NULL)
+	if (sh_css_fw->blob.code == NULL)
 		return IA_CSS_ERR_CANNOT_ALLOCATE_MEMORY;
 
-	memcpy((void *)sh_css_sp_sp1_fw->blob.code, blob_data, fw->blob.size);
-	sh_css_sp_sp1_fw->blob.data = (char *)sh_css_sp_sp1_fw->blob.code + fw->blob.data_source;
-	fw_minibuffer[sp_id].buffer = sh_css_sp_sp1_fw->blob.code;
+	memcpy((void *)sh_css_fw->blob.code, blob_data, fw->blob.size);
+	sh_css_fw->blob.data = (char *)sh_css_fw->blob.code + fw->blob.data_source;
+	fw_minibuffer[binary_id].buffer = sh_css_fw->blob.code;
 
 	return IA_CSS_SUCCESS;
 }
@@ -134,6 +137,9 @@ sh_css_load_blob_info(const char *fw, const struct ia_css_fw_info *bi, struct ia
 #if defined(HAS_SEC_SP)
 	|| (bi->type == ia_css_sp1_firmware)
 #endif /* HAS_SEC_SP */
+#if defined(HAS_BL)
+	|| (bi->type == ia_css_bootloader_firmware)
+#endif /* HAS_BL */
 	)
 	{
 		char *namebuffer;
@@ -234,9 +240,9 @@ sh_css_load_firmware(const char *fw_data,
 
 	sh_css_num_binaries = file_header->binary_nr;
 	/* Only allocate memory for ISP blob info */
-	if (sh_css_num_binaries > NUM_OF_SPS) {
+	if (sh_css_num_binaries > (NUM_OF_SPS + NUM_OF_BLS)) {
 		sh_css_blob_info = sh_css_malloc(
-					(sh_css_num_binaries - NUM_OF_SPS) *
+					(sh_css_num_binaries - (NUM_OF_SPS + NUM_OF_BLS)) *
 					sizeof(*sh_css_blob_info));
 		if (sh_css_blob_info == NULL)
 			return IA_CSS_ERR_CANNOT_ALLOCATE_MEMORY;
@@ -269,26 +275,36 @@ sh_css_load_firmware(const char *fw_data,
 		if (bi->type == ia_css_sp_firmware) {
 			if (i != SP_FIRMWARE)
 				return IA_CSS_ERR_INTERNAL_ERROR;
-			err = setup_sp(bi, fw_data, &sh_css_sp_fw, i);
+			err = setup_binary(bi, fw_data, &sh_css_sp_fw, i);
 			if (err != IA_CSS_SUCCESS)
 				return err;
 #if defined(HAS_SEC_SP)
 		} else if (bi->type == ia_css_sp1_firmware) {
 			if (i != SP1_FIRMWARE)
 				return IA_CSS_ERR_INTERNAL_ERROR;
-			err = setup_sp(bi, fw_data, &sh_css_sp1_fw, i);
+			err = setup_binary(bi, fw_data, &sh_css_sp1_fw, i);
 			if (err != IA_CSS_SUCCESS)
 				return err;
 #endif /* HAS_SEC_SP */
+#if defined(HAS_BL)
+		} else if (bi->type == ia_css_bootloader_firmware) {
+			if (i != BOOTLOADER_FIRMWARE)
+				return IA_CSS_ERR_INTERNAL_ERROR;
+			err = setup_binary(bi, fw_data, &sh_css_bl_fw, i);
+			if (err != IA_CSS_SUCCESS)
+				return err;
+			IA_CSS_LOG("Bootloader binary recognized\n");
+#endif
 		} else {
-			/* All subsequent binaries (i>NUM_OF_SPS) are ISP firmware */
-			if (i < NUM_OF_SPS)
+			/* All subsequent binaries (including bootloaders) (i>NUM_OF_SPS+NUM_OF_BLS) are ISP firmware */
+			if (i < (NUM_OF_SPS + NUM_OF_BLS))
 				return IA_CSS_ERR_INTERNAL_ERROR;
+
 			if (bi->type != ia_css_isp_firmware)
 				return IA_CSS_ERR_INTERNAL_ERROR;
 			if (sh_css_blob_info == NULL) /* cannot happen but KW does not see this */
 				return IA_CSS_ERR_INTERNAL_ERROR;
-			sh_css_blob_info[i-NUM_OF_SPS] = bd;
+			sh_css_blob_info[i-(NUM_OF_SPS + NUM_OF_BLS)] = bd;
 		}
 	}
 
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_firmware.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_firmware.h
index a3dd2dc..97bdf2e 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_firmware.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_firmware.h
@@ -31,6 +31,9 @@ extern struct ia_css_fw_info     sh_css_sp_fw;
 #if defined(HAS_SEC_SP)
 extern struct ia_css_fw_info     sh_css_sp1_fw;
 #endif /* HAS_SEC_SP */
+#if defined(HAS_BL)
+extern struct ia_css_fw_info     sh_css_bl_fw;
+#endif /* HAS_BL */
 extern struct ia_css_blob_descr *sh_css_blob_info;
 extern unsigned			 sh_css_num_binaries;
 
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_internal.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_internal.h
index 905eee8..26137ec 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_internal.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_internal.h
@@ -171,12 +171,21 @@
 #define NUM_OF_SPS 1
 #endif /* HAS_SEC_SP */
 
-/* Enum for Number of Binaries */
-enum sh_css_num_binaries {
+#if defined(HAS_BL)
+#define NUM_OF_BLS 1
+#else
+#define NUM_OF_BLS 0
+#endif
+
+/* Enum for order of Binaries */
+enum sh_css_order_binaries {
 	SP_FIRMWARE = 0,
 #if defined(HAS_SEC_SP)
 	SP1_FIRMWARE,
 #endif /* HAS_SEC_SP */
+#if defined(HAS_BL)
+	BOOTLOADER_FIRMWARE,
+#endif
 	ISP_FIRMWARE
 };
 
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_param_dvs.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_param_dvs.c
index 49cf13c..40bc315 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_param_dvs.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_param_dvs.c
@@ -23,6 +23,9 @@
 #if defined(IS_ISP_2500_SYSTEM)
 #include <components/acc_cluster/acc_dvs_stat/dvs_stat_private.h>
 #include <components/acc_cluster/acc_dvs_stat/host/dvs_stat.host.h>
+
+void dump_mv(struct dvs_stat_mv_entry_public *p_host_entry, int num);
+#define DVS_STAT_MV_DEBUG 0
 #endif
 
 static struct ia_css_dvs_6axis_config *
@@ -253,24 +256,41 @@ void copy_dvs_6axis_table(struct ia_css_dvs_6axis_config *dvs_config_dst,
 }
 
 #if defined(IS_ISP_2500_SYSTEM)
+void dump_mv(struct dvs_stat_mv_entry_public *p_host_entry, int num)
+{
+	int i;
+	static int flag = 0;
+	if (flag == 0) {
+		ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE, "level xPos  yPos  HarrisGrade  xMatch   yMatch   MatchGrade\n");
+		flag = 1;
+	}
+	for (i = 0; i < num; i++) {
+		ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE, "%-1d     %-5d %-5d %-10d   %-5d    %-5d     %-10d\n",
+			p_host_entry[i].level, p_host_entry[i].vec_fe_x_pos, p_host_entry[i].vec_fe_y_pos,
+			p_host_entry[i].harris_grade, p_host_entry[i].vec_fm_x_pos, p_host_entry[i].vec_fm_y_pos,
+			p_host_entry[i].match_grade);
+	}
+}
+
 enum ia_css_err ia_css_get_skc_dvs_statistics(struct ia_css_skc_dvs_statistics *host_stats,
 				   const struct ia_css_isp_skc_dvs_statistics *isp_stats)
 {
 	struct dvs_stat_private_dvs_stat_cfg	dvs_stat_cfg;
 	struct dvs_stat_stripe_data		stripe_data;
 	struct dvs_stat_private_motion_vec *dvs_stat_mv_p = NULL;
-	unsigned char				set_idx, entry_idx, idx, i;
-	hrt_vaddress				dvs_stat_ddr_addr;
-	hrt_vaddress				dvs_stat_cfg_ddr_addr;
-	hrt_vaddress				dvs_stat_stripe_data_ddr_addr;
+	unsigned char	set_idx, idx, i;
+	hrt_vaddress	dvs_stat_ddr_addr;
+	hrt_vaddress	dvs_stat_cfg_ddr_addr;
+	hrt_vaddress	dvs_stat_stripe_data_ddr_addr;
 	struct dvs_stat_private_raw_buffer *raw_buffer_p =
 				(dvs_stat_private_raw_buffer_t *)isp_stats;
 	struct dvs_stat_mv_entry_public	*p_host_entry;
 	struct dvs_stat_mv_private		*p_isp_entry;
-	unsigned char				stripe_align_skip_idx;
-	unsigned char				stripe_grd_width_align;
-	unsigned short				stripe_x_update;
-	unsigned short				idx_update;
+	unsigned short	stripe_x_update;
+	unsigned int	stripe_num;
+	unsigned int	stripe_idx;
+	unsigned int	width_idx;
+	unsigned int	grid_width;
 
 	IA_CSS_ENTER_PRIVATE("host_stats=%p, isp_stats=%p", host_stats, isp_stats);
 
@@ -302,68 +322,65 @@ enum ia_css_err ia_css_get_skc_dvs_statistics(struct ia_css_skc_dvs_statistics *
 
 	/* Translate between private and public configuration */
 	ia_css_dvs_stat_private_to_public_cfg(&host_stats->dvs_stat_cfg, &dvs_stat_cfg);
+	stripe_num = stripe_data.stripe_nums;
+#if DVS_STAT_MV_DEBUG
+	ia_css_dvs_stat_public_cfg_dump((const struct ia_css_2500_dvs_statistics_kernel_config *)&host_stats->dvs_stat_cfg);
+#endif
 
 	/* Translate between private and public motion vectors */
 	for (i = 0; i < IA_CSS_SKC_DVS_STAT_NUM_OF_LEVELS; i++) {
-
-		/* Stripping check - is debubbling needed */
-		stripe_grd_width_align =
-			host_stats->dvs_stat_cfg.grd_cfg[i].grd_cfg.grid_width;
-		stripe_align_skip_idx = stripe_grd_width_align;
-		if (host_stats->dvs_stat_cfg.grd_cfg[i].grd_cfg.grid_width !=
-			stripe_data.grid_width[0][i])
-		{
-			if (stripe_data.grid_width[0][i] % 2)
-			{
-				stripe_grd_width_align++;
-				stripe_align_skip_idx = stripe_data.grid_width[0][i];
-			}
+		idx = 0;
+
+		if (i == 0) {
+			p_host_entry = host_stats->dvs_stat_mv_l0;
+		} else if (i == 1) {
+			p_host_entry = host_stats->dvs_stat_mv_l1;
+		} else {
+			p_host_entry = host_stats->dvs_stat_mv_l2;
 		}
+
 		for (set_idx = 0;
-		     set_idx < host_stats->dvs_stat_cfg.grd_cfg[i].grd_cfg.grid_height;
-		     set_idx++)
+			 set_idx < host_stats->dvs_stat_cfg.grd_cfg[i].grd_cfg.grid_height;
+			 set_idx++)
 		{
-			if (i == 0) {
-				p_host_entry = host_stats->dvs_stat_mv_l0;
-				p_isp_entry = &dvs_stat_mv_p->dvs_mv_output_l0[set_idx].mv_entry[0];
-			} else if (i == 1) {
-				p_host_entry = host_stats->dvs_stat_mv_l1;
-				p_isp_entry = &dvs_stat_mv_p->dvs_mv_output_l1[set_idx].mv_entry[0];
-			} else {
-				p_host_entry = host_stats->dvs_stat_mv_l2;
-				p_isp_entry = &dvs_stat_mv_p->dvs_mv_output_l2[set_idx].mv_entry[0];
-			}
-			stripe_x_update = 0;
-			idx_update = 0;
-			for (entry_idx = 0; entry_idx < stripe_grd_width_align; entry_idx++)
-			{
-				if (entry_idx == stripe_align_skip_idx)
-				{
-					idx_update = 1;
-					p_isp_entry++;
-					continue;
+			for (stripe_idx = 0; stripe_idx < stripe_num; stripe_idx++) {
+				grid_width = stripe_num == 1 ?
+					host_stats->dvs_stat_cfg.grd_cfg[i].grd_cfg.grid_width :
+					stripe_data.grid_width[stripe_idx][i];
+				stripe_x_update = stripe_idx == 1 ? stripe_data.stripe_offset : 0;
+
+				for (width_idx = 0; width_idx < grid_width; width_idx++) {
+
+					if (i == 0) {
+						p_isp_entry = &dvs_stat_mv_p->dvs_mv_output_l0[stripe_idx][set_idx].mv_entry[width_idx];
+					} else if (i == 1) {
+						p_isp_entry = &dvs_stat_mv_p->dvs_mv_output_l1[stripe_idx][set_idx].mv_entry[width_idx];
+					} else {
+						p_isp_entry = &dvs_stat_mv_p->dvs_mv_output_l2[stripe_idx][set_idx].mv_entry[width_idx];
+					}
+
+
+					p_host_entry[idx].vec_fe_x_pos =
+						p_isp_entry->part0.vec_fe_x_pos + stripe_x_update;
+					p_host_entry[idx].vec_fe_y_pos =
+						p_isp_entry->part0.vec_fe_y_pos;
+					p_host_entry[idx].vec_fm_x_pos =
+						p_isp_entry->part1.vec_fm_x_pos + stripe_x_update;
+					p_host_entry[idx].vec_fm_y_pos =
+						p_isp_entry->part1.vec_fm_y_pos;
+					p_host_entry[idx].harris_grade =
+						p_isp_entry->part2.harris_grade;
+					p_host_entry[idx].match_grade =
+						p_isp_entry->part3.match_grade;
+					p_host_entry[idx].level =
+						p_isp_entry->part3.level;
+					idx++;
 				}
-				if (entry_idx >= stripe_data.grid_width[0][i])
-					stripe_x_update = stripe_data.stripe_offset;
-				idx = set_idx * host_stats->dvs_stat_cfg.grd_cfg[i].grd_cfg.grid_width +
-					entry_idx - idx_update;
-				p_host_entry[idx].vec_fe_x_pos =
-					p_isp_entry->part0.vec_fe_x_pos + stripe_x_update;
-				p_host_entry[idx].vec_fe_y_pos =
-					p_isp_entry->part0.vec_fe_y_pos;
-				p_host_entry[idx].vec_fm_x_pos =
-					p_isp_entry->part1.vec_fm_x_pos + stripe_x_update;
-				p_host_entry[idx].vec_fm_y_pos =
-					p_isp_entry->part1.vec_fm_y_pos;
-				p_host_entry[idx].harris_grade =
-					p_isp_entry->part2.harris_grade;
-				p_host_entry[idx].match_grade =
-					p_isp_entry->part3.match_grade;
-				p_host_entry[idx].level =
-					p_isp_entry->part3.level;
-				p_isp_entry++;
 			}
 		}
+#if DVS_STAT_MV_DEBUG
+		dump_mv(p_host_entry, idx - 1);
+#endif
 	}
 
 	sh_css_free(dvs_stat_mv_p);
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_params.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_params.c
index 26cea1e..7949e1e 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_params.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_params.c
@@ -52,6 +52,7 @@
 #include "ia_css_morph.h"
 #include "ia_css_host_data.h"
 #include "ia_css_pipe.h"
+#include "ia_css_pipe_binarydesc.h"
 
 #if !defined(IS_ISP_2500_SYSTEM)
 /* Include all kernel host interfaces for ISP1 */
@@ -1447,6 +1448,45 @@ ia_css_process_kernel(struct ia_css_stream *stream,
 	}
 }
 
+static enum ia_css_err
+sh_css_select_dp_10bpp_config(const struct ia_css_pipe *pipe, bool *is_dp_10bpp) {
+
+	enum ia_css_err err = IA_CSS_SUCCESS;
+	/* Currently we check if 10bpp DPC configuration is required based
+	 * on the use case,i.e. if BDS and DPC is both enabled. The more cleaner
+	 * design choice would be to expose the type of DPC (either 10bpp or 13bpp)
+	 * using the binary info, but the current control flow does not allow this
+	 * implementation. (This is because the configuration is set before a
+	 * binary is selected, and the binary info is not available)
+	 */
+	if((pipe == NULL) || (is_dp_10bpp == NULL)) {
+		IA_CSS_LEAVE_ERR_PRIVATE(IA_CSS_ERR_INTERNAL_ERROR);
+		err = IA_CSS_ERR_INTERNAL_ERROR;
+	} else {
+		*is_dp_10bpp = false;
+
+		/* check if DPC is enabled from the host */
+		if (pipe->config.enable_dpc) {
+			/*check if BDS is enabled*/
+			unsigned int required_bds_factor = SH_CSS_BDS_FACTOR_1_00;
+			if ((pipe->config.bayer_ds_out_res.width != 0) &&
+			  (pipe->config.bayer_ds_out_res.height != 0)) {
+				if (IA_CSS_SUCCESS == binarydesc_calculate_bds_factor(
+					pipe->config.input_effective_res,
+					pipe->config.bayer_ds_out_res,
+					&required_bds_factor)) {
+					if (SH_CSS_BDS_FACTOR_1_00 != required_bds_factor) {
+						/*we use 10bpp BDS configuration*/
+						*is_dp_10bpp = true;
+					}
+				}
+			}
+		}
+	}
+
+	return err;
+}
+
 #endif
 
 enum ia_css_err
@@ -2328,6 +2368,7 @@ ia_css_set_param_exceptions(struct ia_css_isp_parameters *params)
 #endif
 
 #if !defined(IS_ISP_2500_SYSTEM)
+
 static void
 sh_css_set_nr_config(struct ia_css_isp_parameters *params,
 			const struct ia_css_nr_config *config)
@@ -2399,6 +2440,7 @@ sh_css_set_pipe_dvs_6axis_config(const struct ia_css_pipe *pipe,
 	assert(pipe != NULL);
 	assert(dvs_config->height_y == dvs_config->height_uv);
 	assert((dvs_config->width_y - 1) == 2 * (dvs_config->width_uv - 1));
+	assert(pipe->mode < IA_CSS_PIPE_ID_NUM);
 
 	IA_CSS_ENTER_PRIVATE("dvs_config=%p", dvs_config);
 
@@ -2427,7 +2469,8 @@ sh_css_get_pipe_dvs_6axis_config(const struct ia_css_pipe *pipe,
 
 	IA_CSS_ENTER_PRIVATE("dvs_config=%p", dvs_config);
 
-	if ((dvs_config->width_y == params->pipe_dvs_6axis_config[pipe->mode]->width_y) &&
+	if ((pipe->mode < IA_CSS_PIPE_ID_NUM) &&
+	    (dvs_config->width_y == params->pipe_dvs_6axis_config[pipe->mode]->width_y) &&
 	    (dvs_config->height_y == params->pipe_dvs_6axis_config[pipe->mode]->height_y) &&
 	    (dvs_config->width_uv == params->pipe_dvs_6axis_config[pipe->mode]->width_uv) &&
 	    (dvs_config->height_uv == params->pipe_dvs_6axis_config[pipe->mode]->height_uv) &&
@@ -2631,13 +2674,23 @@ sh_css_set_global_isp_config_on_pipe(
 	struct ia_css_pipe *pipe)
 {
 	enum ia_css_err err = IA_CSS_SUCCESS;
+	enum ia_css_err err1 = IA_CSS_SUCCESS;
+	enum ia_css_err err2 = IA_CSS_SUCCESS;
 
 	IA_CSS_ENTER_PRIVATE("stream=%p, config=%p, pipe=%p", curr_pipe, config, pipe);
 
-	sh_css_init_isp_params_from_config(curr_pipe, curr_pipe->stream->isp_params_configs, config);
+	err1 = sh_css_init_isp_params_from_config(curr_pipe, curr_pipe->stream->isp_params_configs, config);
 
 	/* Now commit all changes to the SP */
-	err = sh_css_param_update_isp_params(curr_pipe, curr_pipe->stream->isp_params_configs, sh_css_sp_is_running(), pipe);
+	err2 = sh_css_param_update_isp_params(curr_pipe, curr_pipe->stream->isp_params_configs, sh_css_sp_is_running(), pipe);
+
+	/* The following code is intentional. The sh_css_init_isp_params_from_config interface
+	 * throws an error when both DPC and BDS is enabled. The CSS API must pass this error
+	 * information to the caller, ie. the host. We do not return this error immediately,
+	 * but instead continue with updating the ISP params to enable testing of features
+	 * which are currently in TR phase. */
+
+	err = (err1 != IA_CSS_SUCCESS ) ? err1 : ((err2 != IA_CSS_SUCCESS) ? err2 : err);
 
 	IA_CSS_LEAVE_ERR_PRIVATE(err);
 	return err;
@@ -2653,6 +2706,10 @@ sh_css_set_per_frame_isp_config_on_pipe(
 	unsigned i;
 	bool per_frame_config_created = false;
 	enum ia_css_err err = IA_CSS_SUCCESS;
+	enum ia_css_err err1 = IA_CSS_SUCCESS;
+	enum ia_css_err err2 = IA_CSS_SUCCESS;
+	enum ia_css_err err3 = IA_CSS_SUCCESS;
+
 	struct sh_css_ddr_address_map *ddr_ptrs;
 	struct sh_css_ddr_address_map_size *ddr_ptrs_size;
 	struct ia_css_isp_parameters *params;
@@ -2679,8 +2736,12 @@ sh_css_set_per_frame_isp_config_on_pipe(
 	params = stream->per_frame_isp_params_configs;
 
 	/* update new ISP params object with the new config */
-	sh_css_init_isp_params_from_global(stream, params, false);
-	sh_css_init_isp_params_from_config(stream->pipes[0], params, config);
+	if (!sh_css_init_isp_params_from_global(stream, params, false)) {
+		err1 = IA_CSS_ERR_INVALID_ARGUMENTS;
+	}
+
+	err2 = sh_css_init_isp_params_from_config(stream->pipes[0], params, config);
+
 
 	if (per_frame_config_created)
 	{
@@ -2694,8 +2755,16 @@ sh_css_set_per_frame_isp_config_on_pipe(
 	}
 
 	/* now commit to ddr */
-	err = sh_css_param_update_isp_params(stream->pipes[0], params, sh_css_sp_is_running(), pipe);
-
+	err3 = sh_css_param_update_isp_params(stream->pipes[0], params, sh_css_sp_is_running(), pipe);
+
+	/* The following code is intentional. The sh_css_init_sp_params_from_config and
+	 * sh_css_init_isp_params_from_config throws an error when both DPC and BDS is enabled.
+	 * The CSS API must pass this error information to the caller, ie. the host.
+	 * We do not return this error immediately, but instead continue with updating the ISP params
+	 *  to enable testing of features which are currently in TR phase. */
+	err = (err1 != IA_CSS_SUCCESS) ? err1 :
+		(err2 != IA_CSS_SUCCESS) ? err2 :
+		(err3 != IA_CSS_SUCCESS) ? err3 : err;
 exit:
 	IA_CSS_LEAVE_ERR_PRIVATE(err);
 	return err;
@@ -2707,7 +2776,12 @@ sh_css_init_isp_params_from_config(struct ia_css_pipe *pipe,
 		struct ia_css_isp_parameters *params,
 		const struct ia_css_isp_config *config)
 {
-	enum ia_css_err err = IA_CSS_ERR_INTERNAL_ERROR;
+	enum ia_css_err err = IA_CSS_SUCCESS;
+#if !defined(IS_ISP_2500_SYSTEM)
+	bool is_dp_10bpp = true;
+#endif
+	assert(pipe != NULL);
+
 	IA_CSS_ENTER_PRIVATE("pipe=%p, config=%p, params=%p", pipe, config, params);
 
 	ia_css_set_configs(params, config);
@@ -2715,11 +2789,13 @@ sh_css_init_isp_params_from_config(struct ia_css_pipe *pipe,
 #if defined(IS_ISP_2500_SYSTEM)
 	err = sh_css_set_config_product_specific(pipe, config);
 #else
+
 	sh_css_set_nr_config(params, config->nr_config);
 	sh_css_set_ee_config(params, config->ee_config);
 	sh_css_set_baa_config(params, config->baa_config);
-	if (params->pipe_dvs_6axis_config[pipe->mode])
-		sh_css_set_pipe_dvs_6axis_config(pipe, params, config->dvs_6axis_config);
+	if ((pipe->mode < IA_CSS_PIPE_ID_NUM) &&
+			(params->pipe_dvs_6axis_config[pipe->mode]))
+			sh_css_set_pipe_dvs_6axis_config(pipe, params, config->dvs_6axis_config);
 	sh_css_set_dz_config(params, config->dz_config);
 	sh_css_set_motion_vector(params, config->motion_vector);
 	sh_css_set_shading_table(pipe->stream, params, config->shading_table);
@@ -2737,10 +2813,23 @@ sh_css_init_isp_params_from_config(struct ia_css_pipe *pipe,
 	params->output_frame = config->output_frame;
 	params->isp_parameters_id = config->isp_config_id;
 
+	if (IA_CSS_SUCCESS ==
+		sh_css_select_dp_10bpp_config(pipe, &is_dp_10bpp)) {
+		/* return an error when both DPC and BDS is enabled by the
+		 * user. */
+		/* we do not exit from this point immediately to allow internal
+		 * firmware feature testing. */
+		if(is_dp_10bpp) {
+			err = IA_CSS_ERR_INVALID_ARGUMENTS;
+		}
+	} else {
+		err = IA_CSS_ERR_INTERNAL_ERROR;
+		goto exit;
+	}
+
 	ia_css_set_param_exceptions(params);
-	err = IA_CSS_SUCCESS;
+exit:
 #endif
-
 	IA_CSS_LEAVE_ERR_PRIVATE(err);
 	return err;
 }
@@ -3094,7 +3183,11 @@ ia_css_stream_isp_parameters_init(struct ia_css_stream *stream)
 		 goto ERR;
 
 	params = stream->isp_params_configs;
-	sh_css_init_isp_params_from_global(stream, params, true);
+	if (!sh_css_init_isp_params_from_global(stream, params, true)) {
+		/* we do not return the error immediately to enable internal
+		 * firmware feature testing */
+		err = IA_CSS_ERR_INVALID_ARGUMENTS;
+	}
 
 	ddr_ptrs = &params->ddr_ptrs;
 	ddr_ptrs_size = &params->ddr_ptrs_size;
@@ -3224,14 +3317,18 @@ sh_css_init_isp_params_from_global(struct ia_css_stream *stream,
 		struct ia_css_isp_parameters *params,
 		bool use_default_config)
 {
+	bool retval = true;
 #if !defined(IS_ISP_2500_SYSTEM)
 	int i = 0;
+	bool is_dp_10bpp = true;
 	unsigned isp_pipe_version = ia_css_pipe_get_isp_pipe_version(stream->pipes[0]);
 #endif
 	struct ia_css_isp_parameters *stream_params = stream->isp_params_configs;
 
-	if (!use_default_config && !stream_params)
-		return false;
+	if (!use_default_config && !stream_params) {
+		retval = false;
+		goto exit;
+	}
 
 	params->output_frame = NULL;
 	params->isp_parameters_id = 0;
@@ -3261,6 +3358,7 @@ sh_css_init_isp_params_from_global(struct ia_css_stream *stream,
 		ia_css_set_tnr_config(params, &default_tnr_config);
 		ia_css_set_ob_config(params, &default_ob_config);
 		ia_css_set_dp_config(params, &default_dp_config);
+		ia_css_set_param_exceptions(params);
 		ia_css_set_de_config(params, &default_de_config);
 		ia_css_set_gc_config(params, &default_gc_config);
 		ia_css_set_anr_config(params, &default_anr_config);
@@ -3283,7 +3381,6 @@ sh_css_init_isp_params_from_global(struct ia_css_stream *stream,
 		ia_css_set_sdis_config(params, &default_sdis_config);
 		ia_css_set_sdis2_config(params, &default_sdis2_config);
 		ia_css_set_formats_config(params, &default_formats_config);
-		ia_css_set_param_exceptions(params);
 
 		params->fpn_config.data = NULL;
 		params->config_changed[IA_CSS_FPN_ID] = true;
@@ -3354,6 +3451,20 @@ sh_css_init_isp_params_from_global(struct ia_css_stream *stream,
 		ia_css_set_xnr_config(params, &stream_params->xnr_config);
 		ia_css_set_formats_config(params, &stream_params->formats_config);
 
+		for (i = 0; i < stream->num_pipes; i++) {
+			if (IA_CSS_SUCCESS ==
+				sh_css_select_dp_10bpp_config(stream->pipes[i], &is_dp_10bpp)) {
+				/* set the return value as false if both DPC and
+				 * BDS is enabled by the user. But we do not return
+				 * the value immediately to enable internal firmware
+				 * feature testing. */
+				retval = !is_dp_10bpp;
+			} else {
+				retval = false;
+				goto exit;
+			}
+		}
+
 		ia_css_set_param_exceptions(params);
 
 		params->fpn_config.data = stream_params->fpn_config.data;
@@ -3387,7 +3498,8 @@ sh_css_init_isp_params_from_global(struct ia_css_stream *stream,
 #endif /* !defined(IS_ISP_2500_SYSTEM) */
 	}
 
-	return true;
+exit:
+	return retval;
 }
 
 enum ia_css_err
@@ -3452,42 +3564,6 @@ static void host_lut_store(const void *lut)
 	for (i = 0; i < N_GDC_ID; i++)
 		gdc_lut_store((gdc_ID_t)i, (const int (*)[HRT_GDC_N]) lut);
 }
-
-/* Input LUT format:
- * c0[0-1023], c1[0-1023], c2[0-1023] c3[0-1023]
- *
- * Interleaved LUT format:
- * c0[0], c1[0], c2[0], c3[0], c0[1], c1[1], c2[1], c3[1], ....
- * c0[1023], c1[1023], c2[1023], c3[1023]
- *
- * The first format needs c0[0], c1[0] (which are 1024 words apart)
- * to program gdc LUT registers. This makes it difficult to do piecemeal
- * reads in SP side gdc_lut_store
- *
- * Interleaved format allows use of contiguous bytes to store into
- * gdc LUT registers.
- *
- * See gdc_lut_store() definition in host/gdc.c vs sp/gdc_private.h
- *
- */
-static void interleave_lut_coeffs(const int in_lut[4][HRT_GDC_N],
-	int interleaved[4][HRT_GDC_N])
-{
-	unsigned int i;
-	int *out = (int *)interleaved;
-
-	IA_CSS_ENTER_PRIVATE("int lut=%p, out lut=%p", in_lut, interleaved);
-
-	for (i = 0; i < HRT_GDC_N; i++) {
-		out[0] = in_lut[0][i];
-		out[1] = in_lut[1][i];
-		out[2] = in_lut[2][i];
-		out[3] = in_lut[3][i];
-		out += 4;
-	}
-
-	IA_CSS_LEAVE_PRIVATE("void");
-}
 #endif
 
 enum ia_css_err ia_css_pipe_set_bci_scaler_lut(struct ia_css_pipe *pipe,
@@ -3527,7 +3603,7 @@ enum ia_css_err ia_css_pipe_set_bci_scaler_lut(struct ia_css_pipe *pipe,
 			return IA_CSS_ERR_CANNOT_ALLOCATE_MEMORY;
 		}
 
-		interleave_lut_coeffs((const int(*)[HRT_GDC_N])lut, interleaved_lut_temp);
+		gdc_lut_convert_to_isp_format((const int(*)[HRT_GDC_N])lut, interleaved_lut_temp);
 		mmgr_store(pipe->scaler_pp_lut, (int *)interleaved_lut_temp,
 			sizeof(zoom_table));
 	}
@@ -3570,7 +3646,7 @@ enum ia_css_err sh_css_params_map_and_store_default_gdc_lut(void)
 	if (default_gdc_lut == mmgr_NULL)
 		return IA_CSS_ERR_CANNOT_ALLOCATE_MEMORY;
 
-	interleave_lut_coeffs((const int(*)[HRT_GDC_N])zoom_table,
+	gdc_lut_convert_to_isp_format((const int(*)[HRT_GDC_N])zoom_table,
 		interleaved_lut_temp);
 	mmgr_store(default_gdc_lut, (int *)interleaved_lut_temp,
 		sizeof(zoom_table));
@@ -4438,31 +4514,44 @@ sh_css_params_write_to_ddr_internal(
 			IA_CSS_LEAVE_ERR_PRIVATE(err);
 			return err;
 		}
+
 		if (params->pipe_dvs_6axis_config_changed[pipe_id] || buff_realloced) {
-				/* Generate default DVS unity table on start up*/
-				if (params->pipe_dvs_6axis_config[pipe_id] == NULL) {
+			const struct ia_css_frame_info *dvs_in_frame_info;
 
-					struct ia_css_resolution dvs_offset;
-					dvs_offset.width  =
-								(PIX_SHIFT_FILTER_RUN_IN_X + binary->dvs_envelope.width) / 2;
-					dvs_offset.height =
-								(PIX_SHIFT_FILTER_RUN_IN_Y + binary->dvs_envelope.height) / 2;
+			if ( stage->args.delay_frames[0] ) {
+				/*When delay frames are present(as in case of video),
+				they are used for dvs. Configure DVS using those params*/
+				dvs_in_frame_info = &stage->args.delay_frames[0]->info;
+			} else {
+				/*Otherwise, use input frame to configure DVS*/
+				dvs_in_frame_info = &stage->args.in_frame->info;
+			}
 
-					params->pipe_dvs_6axis_config[pipe_id] =
-							generate_dvs_6axis_table(&binary->out_frame_info[0].res, &dvs_offset);
-					if (params->pipe_dvs_6axis_config[pipe_id] == NULL) {
-						IA_CSS_LEAVE_ERR_PRIVATE(IA_CSS_ERR_CANNOT_ALLOCATE_MEMORY);
-						return IA_CSS_ERR_CANNOT_ALLOCATE_MEMORY;
-					}
-					params->pipe_dvs_6axis_config_changed[pipe_id] = true;
-				}
+			/* Generate default DVS unity table on start up*/
+			if (params->pipe_dvs_6axis_config[pipe_id] == NULL) {
+
+				struct ia_css_resolution dvs_offset;
+				dvs_offset.width  =
+						(PIX_SHIFT_FILTER_RUN_IN_X + binary->dvs_envelope.width) / 2;
+				dvs_offset.height =
+						(PIX_SHIFT_FILTER_RUN_IN_Y + binary->dvs_envelope.height) / 2;
 
-				store_dvs_6axis_config(params->pipe_dvs_6axis_config[pipe_id],
-							binary,
-							ddr_map->dvs_6axis_params_y);
-				params->isp_params_changed = true;
+				params->pipe_dvs_6axis_config[pipe_id] =
+						generate_dvs_6axis_table(&binary->out_frame_info[0].res, &dvs_offset);
+				if (params->pipe_dvs_6axis_config[pipe_id] == NULL) {
+					IA_CSS_LEAVE_ERR_PRIVATE(IA_CSS_ERR_CANNOT_ALLOCATE_MEMORY);
+					return IA_CSS_ERR_CANNOT_ALLOCATE_MEMORY;
+				}
+				params->pipe_dvs_6axis_config_changed[pipe_id] = true;
 			}
+
+			store_dvs_6axis_config(params->pipe_dvs_6axis_config[pipe_id],
+				binary,
+				dvs_in_frame_info,
+				ddr_map->dvs_6axis_params_y);
+			params->isp_params_changed = true;
 		}
+	}
 
 	if (binary->info->sp.enable.ca_gdc) {
 		unsigned int i;
-- 
1.9.1

