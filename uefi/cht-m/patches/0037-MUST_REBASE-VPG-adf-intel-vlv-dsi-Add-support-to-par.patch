From 7ded4077137f264facec27040122060b503305ec Mon Sep 17 00:00:00 2001
Message-Id: <7ded4077137f264facec27040122060b503305ec.1421709247.git.chang-joon.lee@intel.com>
In-Reply-To: <3650eb44734ad4fbe098313349da8185595a20d8.1421709247.git.chang-joon.lee@intel.com>
References: <3650eb44734ad4fbe098313349da8185595a20d8.1421709247.git.chang-joon.lee@intel.com>
From: Shobhit Kumar <shobhit.kumar@intel.com>
Date: Fri, 26 Sep 2014 23:43:33 +0530
Subject: [PATCH 37/75] MUST_REBASE [VPG]: adf/intel/vlv/dsi: Add support to
 parse SPI and PMIC seq elements

Add support for executive new SPI and PMIC sequence elements from the MIPI
sequence block from the VBT

MUST_REBASE: Since Google ADF framework is not in upstream and also
we cannot have two display drivers, other one being i915, we need to
work on i915 and ADF convergence path before it can be upstreamed

For: GMINL-3547
Change-Id: I8f6139a378dc38e1eb0e272f9bc92a23d0872002
Signed-off-by: vkorjani <vikas.korjani@intel.com>
Signed-off-by: Deepak M <m.deepak@intel.com>
Signed-off-by: Shobhit Kumar <shobhit.kumar@intel.com>
---
 drivers/video/adf/intel/core/common/dsi/dsi_vbt.h  |    3 +-
 .../core/common/dsi/panels/intel_dsi_panel_vbt.c   |   44 ++++++++++++++++++++
 2 files changed, 46 insertions(+), 1 deletion(-)

diff --git a/drivers/video/adf/intel/core/common/dsi/dsi_vbt.h b/drivers/video/adf/intel/core/common/dsi/dsi_vbt.h
index 46bc0d3..ae94e04 100644
--- a/drivers/video/adf/intel/core/common/dsi/dsi_vbt.h
+++ b/drivers/video/adf/intel/core/common/dsi/dsi_vbt.h
@@ -207,7 +207,8 @@ enum mipi_seq_element {
 	MIPI_SEQ_ELEM_DELAY,
 	MIPI_SEQ_ELEM_GPIO,
 	MIPI_SEQ_ELEM_I2C,
-	MIPI_SEQ_ELEM_STATUS,
+	MIPI_SEQ_ELEM_SPI,
+	MIPI_SEQ_ELEM_PMIC,
 	MIPI_SEQ_ELEM_MAX
 };
 
diff --git a/drivers/video/adf/intel/core/common/dsi/panels/intel_dsi_panel_vbt.c b/drivers/video/adf/intel/core/common/dsi/panels/intel_dsi_panel_vbt.c
index 10b7dd0..8081118 100644
--- a/drivers/video/adf/intel/core/common/dsi/panels/intel_dsi_panel_vbt.c
+++ b/drivers/video/adf/intel/core/common/dsi/panels/intel_dsi_panel_vbt.c
@@ -34,6 +34,7 @@
 #include <core/common/dsi/dsi_panel.h>
 #include <core/vlv/vlv_dc_regs.h>
 #include <linux/i2c.h>
+#include <linux/mfd/intel_soc_pmic.h>
 #include "intel_dsi.h"
 #include "intel_dsi_cmd.h"
 #include "dsi_vbt.h"
@@ -254,6 +255,47 @@ out:
 	return data;
 }
 
+static u8 *mipi_exec_spi(struct dsi_pipe *dsi_pipe, u8 *data)
+{
+	u8 payload_size;
+
+	/*
+	 * SPI block is not used in linux, but if at all the
+	 * VBT contains the SPI block we have to skip to the
+	 * next block, hence reading the size of the SPI block
+	 * and skipping the same.
+	 */
+	data = data + 5;
+	payload_size = *data;
+	data = data + payload_size + 1;
+
+	return data;
+}
+
+static u8 *mipi_exec_pmic(struct dsi_pipe *dsi_pipe, u8 *data)
+{
+	u8 pmic_page;
+	u32 register_address, register_data;
+	u32 data_mask, tmp;
+
+	data++;
+	pmic_page = *data++;
+	register_address = *((u32 *)data);
+	data += 4;
+	register_data = *((u32 *)data);
+	data += 4;
+	data_mask = *((u32 *)data);
+	data += 4;
+
+	tmp = intel_soc_pmic_readb(register_address);
+	tmp &= ~data_mask;
+	register_data &= data_mask;
+	register_data |= tmp;
+	intel_soc_pmic_writeb(register_address, register_data);
+
+	return data;
+}
+
 typedef u8 * (*fn_mipi_elem_exec)(struct dsi_pipe *dsi_pipe, u8 *data);
 static const fn_mipi_elem_exec exec_elem[] = {
 	NULL, /* reserved */
@@ -261,6 +303,8 @@ static const fn_mipi_elem_exec exec_elem[] = {
 	mipi_exec_delay,
 	mipi_exec_gpio,
 	mipi_exec_i2c,
+	mipi_exec_spi,
+	mipi_exec_pmic,
 	NULL, /* status read; later */
 };
 
-- 
1.7.9.5

