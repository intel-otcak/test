From f3c322ef0cb43c4507c59a91cc4a62e26b34e81e Mon Sep 17 00:00:00 2001
From: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@intel.com>
Date: Tue, 24 Jun 2014 15:43:04 -0700
Subject: [PATCH 3/3] Input: ft5x06: Fix wake gpio issues

Added support to handle FT5x06 chips with no
wake gpio support.

Change-Id: I499c0b5aedac9594e1954f7f74776e42a76ae36d
Signed-off-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@intel.com>
---
 drivers/input/touchscreen/ft5x06_ts.c |   44 ++++++++++++++++++++++-----------
 1 file changed, 29 insertions(+), 15 deletions(-)

diff --git a/drivers/input/touchscreen/ft5x06_ts.c b/drivers/input/touchscreen/ft5x06_ts.c
index 80880e42536a..9ff7702a4ccd 100644
--- a/drivers/input/touchscreen/ft5x06_ts.c
+++ b/drivers/input/touchscreen/ft5x06_ts.c
@@ -52,6 +52,7 @@ struct ft5x0x_ts_data {
 	bool x_flip;
 	bool y_flip;
 	bool swap_axis;
+	bool wake_avail;
 	struct gpio_desc *gpio_irq;
 	struct gpio_desc *gpio_wake;
 	struct gpio_desc *gpio_reset;
@@ -311,11 +312,13 @@ static int ft5x0x_gpio_init(struct ft5x0x_ts_data *ts_data)
 		return ret;
 	}
 
-	ret = gpiod_direction_output(ts_data->gpio_wake, 1);
-	if (ret) {
-		dev_err(dev, "gpio %d dir set failed\n",
-				desc_to_gpio(ts_data->gpio_wake));
-		return ret;
+	if (ts_data->wake_avail) {
+		ret = gpiod_direction_output(ts_data->gpio_wake, 1);
+		if (ret) {
+			dev_err(dev, "gpio %d dir set failed\n",
+					desc_to_gpio(ts_data->gpio_wake));
+			return ret;
+		}
 	}
 
 	return 0;
@@ -364,11 +367,18 @@ static int ft5x0x_platform_probe(struct ft5x0x_ts_data *ts_data)
 
 	ts_data->gpio_irq = gpio_to_desc(pdata->irq);
 	ts_data->gpio_reset = gpio_to_desc(pdata->reset);
-	ts_data->gpio_wake = gpio_to_desc(pdata->wake);
 	ts_data->x_flip = pdata->x_flip;
 	ts_data->y_flip = pdata->y_flip;
 	ts_data->swap_axis = pdata->swap_axis;
 
+	if (pdata->wake > 0) {
+		ts_data->gpio_wake = gpio_to_desc(pdata->wake);
+		ts_data->wake_avail = true;
+	} else {
+		ts_data->gpio_wake = NULL;
+		ts_data->wake_avail = false;
+	}
+
 	err = gpio_request(desc_to_gpio(ts_data->gpio_irq),
 					FT5X0X_IRQ_NAME);
 	if (err < 0) {
@@ -385,12 +395,14 @@ static int ft5x0x_platform_probe(struct ft5x0x_ts_data *ts_data)
 		return err;
 	}
 
-	err = gpio_request(desc_to_gpio(ts_data->gpio_wake),
+	if (ts_data->wake_avail) {
+		err = gpio_request(desc_to_gpio(ts_data->gpio_wake),
 						FT5X0X_WAKE_NAME);
-	if (err < 0) {
-		dev_err(dev, "Failed request gpio=%d wake error=%d\n",
-			pdata->wake, err);
-		return err;
+		if (err < 0) {
+			dev_err(dev, "Failed request gpio=%d wake error=%d\n",
+				pdata->wake, err);
+			return err;
+		}
 	}
 
 	err = ft5x0x_gpio_init(ts_data);
@@ -461,12 +473,14 @@ static int ft5x0x_acpi_probe(struct ft5x0x_ts_data *ts_data)
 	gpio = devm_gpiod_get_index(dev, FT5X0X_WAKE_NAME, index);
 
 	if (IS_ERR(gpio)) {
-		dev_err(dev, "acpi gpio get index 2 failed\n");
-		return PTR_ERR(gpio);
+		dev_warn(dev, "acpi gpio get index 2 failed\n");
+		ts_data->wake_avail = false;
+		ts_data->gpio_wake = NULL;
+	} else {
+		ts_data->gpio_wake = gpio;
+		ts_data->wake_avail = true;
 	}
 
-	ts_data->gpio_wake = gpio;
-
 	dev_dbg(dev, "gpio resource %d, no %d\n", index, desc_to_gpio(gpio));
 
 	ret = ft5x0x_gpio_init(ts_data);
-- 
1.7.9.5

