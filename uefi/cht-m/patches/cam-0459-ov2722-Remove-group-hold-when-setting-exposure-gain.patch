From f8f3be7cc382c48b0d67f2abe61e0862c65544c7 Mon Sep 17 00:00:00 2001
From: Fang Wang <fang.c.wang@intel.com>
Date: Fri, 12 Jun 2015 16:22:22 +0800
Subject: [PATCH 459/462] ov2722: Remove group hold when setting exposure/gain
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

When using group hold, ov2722 canâ€™t meet
the requirement about perframe setting,
so remove it.

According to the datasheet, set the gain delay as 1,
by AEC manual register, to make sure gain/exposure
take effect on the same frame.

Change-Id: If9d250703b4196bc0e18a5ab12e8866ab791a72e
Tracked-On: https://jira01.devtools.intel.com/browse/GMINL-15161
Signed-off-by: Fang Wang <fang.c.wang@intel.com>
Reviewed-on: https://icggerrit.ir.intel.com/60162
Approver: Yunliang Ding <yunliang.ding@intel.com>
Reviewed-by: Yunliang Ding <yunliang.ding@intel.com>
Validation-Android: Wei Tao <wei.tao@intel.com>
Approver: Bingbu Cao <bingbu.cao@intel.com>
Reviewed-by: Bingbu Cao <bingbu.cao@intel.com>
Approver: Bin B Han <bin.b.han@intel.com>
Reviewed-by: Bin B Han <bin.b.han@intel.com>
Integrator: WeiX Meng <weix.meng@intel.com>
Build: WeiX Meng <weix.meng@intel.com>
Reviewed-by: WeiX Meng <weix.meng@intel.com>
Maintainer: WeiX Meng <weix.meng@intel.com>
---
 .../camera/drivers/media/i2c/ov2722.c              | 20 ++-----------------
 .../camera/drivers/media/i2c/ov2722.h              | 23 ++++++++--------------
 2 files changed, 10 insertions(+), 33 deletions(-)

diff --git a/drivers/external_drivers/camera/drivers/media/i2c/ov2722.c b/drivers/external_drivers/camera/drivers/media/i2c/ov2722.c
index 1dfee37..8d680fc 100644
--- a/drivers/external_drivers/camera/drivers/media/i2c/ov2722.c
+++ b/drivers/external_drivers/camera/drivers/media/i2c/ov2722.c
@@ -404,6 +404,8 @@ static long __ov2722_set_exposure(struct v4l2_subdev *sd, int coarse_itg,
 	u16 hts, vts;
 	int ret;
 
+	dev_dbg(&client->dev, "set_exposure without group hold\n");
+
 	/* clear VTS_DIFF on manual mode */
 	ret = ov2722_write_reg(client, OV2722_16BIT, OV2722_VTS_DIFF_H, 0);
 	if (ret)
@@ -418,11 +420,6 @@ static long __ov2722_set_exposure(struct v4l2_subdev *sd, int coarse_itg,
 	coarse_itg <<= 4;
 	digitgain <<= 2;
 
-	/* group hold start */
-	ret = ov2722_write_reg(client, OV2722_8BIT, OV2722_GROUP_ACCESS, 0);
-	if (ret)
-		return ret;
-
 	ret = ov2722_write_reg(client, OV2722_16BIT,
 				OV2722_VTS_H, vts);
 	if (ret)
@@ -465,19 +462,6 @@ static long __ov2722_set_exposure(struct v4l2_subdev *sd, int coarse_itg,
 
 	ret = ov2722_write_reg(client, OV2722_16BIT,
 				OV2722_MWB_GAIN_B_H, digitgain);
-	if (ret)
-		return ret;
-
-	/* group hold end */
-	ret = ov2722_write_reg(client, OV2722_8BIT,
-					OV2722_GROUP_ACCESS, 0x10);
-	if (ret)
-		return ret;
-
-	/* group hold launch */
-	ret = ov2722_write_reg(client, OV2722_8BIT,
-					OV2722_GROUP_ACCESS, 0xa0);
-
 	return ret;
 }
 
diff --git a/drivers/external_drivers/camera/drivers/media/i2c/ov2722.h b/drivers/external_drivers/camera/drivers/media/i2c/ov2722.h
index fde004e..4cf00f7 100644
--- a/drivers/external_drivers/camera/drivers/media/i2c/ov2722.h
+++ b/drivers/external_drivers/camera/drivers/media/i2c/ov2722.h
@@ -348,7 +348,6 @@ static struct ov2722_reg const ov2722_QVGA_30fps[] = {
 	{OV2722_8BIT, 0x5000, 0xff},
 	{OV2722_8BIT, 0x3a18, 0x00},
 	{OV2722_8BIT, 0x3a19, 0x80},
-	{OV2722_8BIT, 0x3503, 0x07},
 	{OV2722_8BIT, 0x4521, 0x00},
 	{OV2722_8BIT, 0x5183, 0xb0}, /* AWB red */
 	{OV2722_8BIT, 0x5184, 0xb0}, /* AWB green */
@@ -375,7 +374,7 @@ static struct ov2722_reg const ov2722_QVGA_30fps[] = {
 	{OV2722_8BIT, 0x3a1f, 0x10},
 	{OV2722_8BIT, 0x3011, 0x22},
 	{OV2722_8BIT, 0x3a00, 0x58},
-	{OV2722_8BIT, 0x3503, 0x07},
+	{OV2722_8BIT, 0x3503, 0x17},
 	{OV2722_8BIT, 0x3500, 0x00},
 	{OV2722_8BIT, 0x3501, 0x46},
 	{OV2722_8BIT, 0x3502, 0x00},
@@ -459,7 +458,6 @@ static struct ov2722_reg const ov2722_480P_30fps[] = {
 	{OV2722_8BIT, 0x5000, 0xff},
 	{OV2722_8BIT, 0x3a18, 0x00},
 	{OV2722_8BIT, 0x3a19, 0x80},
-	{OV2722_8BIT, 0x3503, 0x00},
 	{OV2722_8BIT, 0x4521, 0x00},
 	{OV2722_8BIT, 0x5183, 0xb0}, /* AWB red */
 	{OV2722_8BIT, 0x5184, 0xb0}, /* AWB green */
@@ -486,7 +484,7 @@ static struct ov2722_reg const ov2722_480P_30fps[] = {
 	{OV2722_8BIT, 0x3a1f, 0x10},
 	{OV2722_8BIT, 0x3011, 0x22},
 	{OV2722_8BIT, 0x3a00, 0x58},
-	{OV2722_8BIT, 0x3503, 0x07},
+	{OV2722_8BIT, 0x3503, 0x17},
 	{OV2722_8BIT, 0x3500, 0x00},
 	{OV2722_8BIT, 0x3501, 0x46},
 	{OV2722_8BIT, 0x3502, 0x00},
@@ -569,7 +567,6 @@ static struct ov2722_reg const ov2722_VGA_30fps[] = {
 	{OV2722_8BIT, 0x5000, 0xff},
 	{OV2722_8BIT, 0x3a18, 0x00},
 	{OV2722_8BIT, 0x3a19, 0x80},
-	{OV2722_8BIT, 0x3503, 0x00},
 	{OV2722_8BIT, 0x4521, 0x00},
 	{OV2722_8BIT, 0x5183, 0xb0}, /* AWB red */
 	{OV2722_8BIT, 0x5184, 0xb0}, /* AWB green */
@@ -596,7 +593,7 @@ static struct ov2722_reg const ov2722_VGA_30fps[] = {
 	{OV2722_8BIT, 0x3a1f, 0x10},
 	{OV2722_8BIT, 0x3011, 0x22},
 	{OV2722_8BIT, 0x3a00, 0x58},
-	{OV2722_8BIT, 0x3503, 0x07},
+	{OV2722_8BIT, 0x3503, 0x17},
 	{OV2722_8BIT, 0x3500, 0x00},
 	{OV2722_8BIT, 0x3501, 0x46},
 	{OV2722_8BIT, 0x3502, 0x00},
@@ -678,7 +675,6 @@ static struct ov2722_reg const ov2722_1632_1092_30fps[] = {
 	{OV2722_8BIT, 0x301d, 0xf0}, /* enable group hold */
 	{OV2722_8BIT, 0x3a18, 0x00},
 	{OV2722_8BIT, 0x3a19, 0x80},
-	{OV2722_8BIT, 0x3503, 0x07},
 	{OV2722_8BIT, 0x4521, 0x00},
 	{OV2722_8BIT, 0x5183, 0xb0},
 	{OV2722_8BIT, 0x5184, 0xb0},
@@ -699,7 +695,7 @@ static struct ov2722_reg const ov2722_1632_1092_30fps[] = {
 	{OV2722_8BIT, 0x3a1e, 0x30},
 	{OV2722_8BIT, 0x3a11, 0x90},
 	{OV2722_8BIT, 0x3a1f, 0x10},
-	{OV2722_8BIT, 0x3503, 0x07}, /* manual 3a */
+	{OV2722_8BIT, 0x3503, 0x17}, /* manual 3a */
 	{OV2722_8BIT, 0x3500, 0x00},
 	{OV2722_8BIT, 0x3501, 0x3F},
 	{OV2722_8BIT, 0x3502, 0x00},
@@ -780,7 +776,6 @@ static struct ov2722_reg const ov2722_1452_1092_30fps[] = {
 	{OV2722_8BIT, 0x301d, 0xf0}, /* enable group hold */
 	{OV2722_8BIT, 0x3a18, 0x00},
 	{OV2722_8BIT, 0x3a19, 0x80},
-	{OV2722_8BIT, 0x3503, 0x07},
 	{OV2722_8BIT, 0x4521, 0x00},
 	{OV2722_8BIT, 0x5183, 0xb0},
 	{OV2722_8BIT, 0x5184, 0xb0},
@@ -801,7 +796,7 @@ static struct ov2722_reg const ov2722_1452_1092_30fps[] = {
 	{OV2722_8BIT, 0x3a1e, 0x30},
 	{OV2722_8BIT, 0x3a11, 0x90},
 	{OV2722_8BIT, 0x3a1f, 0x10},
-	{OV2722_8BIT, 0x3503, 0x07}, /* manual 3a */
+	{OV2722_8BIT, 0x3503, 0x17}, /* manual 3a */
 	{OV2722_8BIT, 0x3500, 0x00},
 	{OV2722_8BIT, 0x3501, 0x3F},
 	{OV2722_8BIT, 0x3502, 0x00},
@@ -883,7 +878,6 @@ static struct ov2722_reg const ov2722_1M3_30fps[] = {
 	{OV2722_8BIT, 0x5000, 0xcf},
 	{OV2722_8BIT, 0x3a18, 0x00},
 	{OV2722_8BIT, 0x3a19, 0x80},
-	{OV2722_8BIT, 0x3503, 0x07},
 	{OV2722_8BIT, 0x4521, 0x00},
 	{OV2722_8BIT, 0x5183, 0xb0},	/* AWB red */
 	{OV2722_8BIT, 0x5184, 0xb0},	/* AWB green */
@@ -908,7 +902,7 @@ static struct ov2722_reg const ov2722_1M3_30fps[] = {
 	{OV2722_8BIT, 0x3a1e, 0x30},
 	{OV2722_8BIT, 0x3a11, 0x90},
 	{OV2722_8BIT, 0x3a1f, 0x10},
-	{OV2722_8BIT, 0x3503, 0x07},
+	{OV2722_8BIT, 0x3503, 0x17},
 	{OV2722_8BIT, 0x3500, 0x00},
 	{OV2722_8BIT, 0x3501, 0x46},
 	{OV2722_8BIT, 0x3502, 0x00},
@@ -992,7 +986,7 @@ static struct ov2722_reg const ov2722_1080p_30fps[] = {
 	{OV2722_8BIT, 0x301d, 0xf0}, /* enable group hold */
 	{OV2722_8BIT, 0x3a18, 0x00},
 	{OV2722_8BIT, 0x3a19, 0x80},
-	{OV2722_8BIT, 0x3503, 0x07},
+	{OV2722_8BIT, 0x3503, 0x17},
 	{OV2722_8BIT, 0x4521, 0x00},
 	{OV2722_8BIT, 0x5183, 0xb0},
 	{OV2722_8BIT, 0x5184, 0xb0},
@@ -1093,7 +1087,6 @@ static struct ov2722_reg const ov2722_720p_30fps[] = {
 	{OV2722_8BIT, 0x301d, 0xf0}, /* enable group hold */
 	{OV2722_8BIT, 0x3a18, 0x00},
 	{OV2722_8BIT, 0x3a19, 0x80},
-	{OV2722_8BIT, 0x3503, 0x07},
 	{OV2722_8BIT, 0x4521, 0x00},
 	{OV2722_8BIT, 0x5183, 0xb0},
 	{OV2722_8BIT, 0x5184, 0xb0},
@@ -1114,7 +1107,7 @@ static struct ov2722_reg const ov2722_720p_30fps[] = {
 	{OV2722_8BIT, 0x3a1e, 0x30},
 	{OV2722_8BIT, 0x3a11, 0x90},
 	{OV2722_8BIT, 0x3a1f, 0x10},
-	{OV2722_8BIT, 0x3503, 0x07}, /* manual 3a */
+	{OV2722_8BIT, 0x3503, 0x17}, /* manual 3a */
 	{OV2722_8BIT, 0x3500, 0x00},
 	{OV2722_8BIT, 0x3501, 0x3F},
 	{OV2722_8BIT, 0x3502, 0x00},
-- 
1.9.1

