From 0d1d3f88dca9803b9cca7e2c3f642f8d8c480dcc Mon Sep 17 00:00:00 2001
From: Biju Chakkachattil <bijux.chakkachattil@intel.com>
Date: Mon, 22 Jun 2015 04:23:05 +0530
Subject: [PATCH] EM/GPIO: Adding  check_initial_events Function.

While booting with OTG connected, it is not detected because the
initial events were missed during booting. This patch will add the
function to check the initial events after booting and add it to
the events queue.

Change-Id: I7f8c62cdde070284cb9bc18f8114426dac5f8211
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-36254
Signed-off-by: Biju Chakkachattil <bijux.chakkachattil@intel.com>
---
 drivers/misc/intel_wcove_gpio.c | 38 +++++++++++++++++++++++++++++++-------
 1 file changed, 31 insertions(+), 7 deletions(-)

diff --git a/drivers/misc/intel_wcove_gpio.c b/drivers/misc/intel_wcove_gpio.c
index aef5276a9726..fb0dafa8e540 100644
--- a/drivers/misc/intel_wcove_gpio.c
+++ b/drivers/misc/intel_wcove_gpio.c
@@ -96,22 +96,19 @@ static void wcove_gpio_ctrl_worker(struct work_struct *work)
 	return;
 }
 
-static int wcgpio_event_handler(struct notifier_block *nblock,
-					unsigned long event, void *param)
+static int wcgpio_check_events(struct wcove_gpio_info *info,
+					struct extcon_dev *edev)
 {
-	struct wcove_gpio_info *info =
-			container_of(nblock, struct wcove_gpio_info, nb);
-	struct extcon_dev *edev = param;
 	struct wcove_gpio_event *evt;
 
 	if (!edev)
-		return NOTIFY_DONE;
+		return -EIO;
 
 	evt = kzalloc(sizeof(*evt), GFP_ATOMIC);
 	if (!evt) {
 		dev_err(&info->pdev->dev,
 			"failed to allocate memory for SDP/OTG event\n");
-		return NOTIFY_DONE;
+		return -ENOMEM;
 	}
 
 	evt->is_sdp_connected = extcon_get_cable_state(edev, "USB");
@@ -127,9 +124,34 @@ static int wcgpio_event_handler(struct notifier_block *nblock,
 	spin_unlock(&info->gpio_queue_lock);
 
 	queue_work(system_nrt_wq, &info->gpio_work);
+	return 0;
+}
+
+static int wcgpio_event_handler(struct notifier_block *nblock,
+					unsigned long event, void *param)
+{
+	int ret = 0;
+	struct wcove_gpio_info *info =
+			container_of(nblock, struct wcove_gpio_info, nb);
+	struct extcon_dev *edev = param;
+
+	ret = wcgpio_check_events(info, edev);
+
+	if (IS_ERR(ret))
+		return NOTIFY_DONE;
+
 	return NOTIFY_OK;
 }
 
+static void check_initial_events(struct wcove_gpio_info *info)
+{
+	struct extcon_dev *edev;
+
+	edev = extcon_get_extcon_dev("usb-typec");
+
+	wcgpio_check_events(info, edev);
+}
+
 static int wcove_gpio_probe(struct platform_device *pdev)
 {
 	struct wcove_gpio_info *info;
@@ -214,6 +236,8 @@ static int wcove_gpio_probe(struct platform_device *pdev)
 	}
 	dev_dbg(&pdev->dev, "wcove gpio probed\n");
 
+	check_initial_events(info);
+
 	return 0;
 
 error_gpio:
-- 
1.9.1

