From 319ef4b9dcd97ec511db25f003dd9eabfea300cd Mon Sep 17 00:00:00 2001
From: Jenny TC <jenny.tc@intel.com>
Date: Fri, 26 Sep 2014 13:23:46 +0530
Subject: [PATCH 1/1] intel_soc_pmic: Define platform data for wcove drivers

This patch defines platform data for wcove drivers

Tracked-On: http://jira01.devtools.intel.com/browse/GMINL-1812
Change-Id: I854704b2ea49406836010dd35c02054c3b802dec
Signed-off-by: Jenny TC <jenny.tc@intel.com>
---
 drivers/mfd/intel_soc_pmic_wc.c          |  157 +++++++++++++++++++++++++++++-
 include/linux/mfd/intel_soc_pmic_wcove.h |   85 ++++++++++++++++
 2 files changed, 237 insertions(+), 5 deletions(-)
 create mode 100644 include/linux/mfd/intel_soc_pmic_wcove.h

diff --git a/drivers/mfd/intel_soc_pmic_wc.c b/drivers/mfd/intel_soc_pmic_wc.c
index f2a109f2f26b..519007ba072a 100644
--- a/drivers/mfd/intel_soc_pmic_wc.c
+++ b/drivers/mfd/intel_soc_pmic_wc.c
@@ -27,6 +27,9 @@
 #include <linux/mfd/intel_soc_pmic.h>
 #include <linux/acpi.h>
 #include <linux/version.h>
+#include <asm/intel_wcove_bcu.h>
+#include <linux/power/intel_pmic_ccsm.h>
+#include <linux/mfd/intel_soc_pmic_wcove.h>
 #include "./intel_soc_pmic_core.h"
 
 #define WHISKEY_COVE_IRQ_NUM	17
@@ -50,6 +53,8 @@
 #define MTHRMIRQ3	0xDA
 #define MCHGRIRQ	0x17
 
+#define WCOVE_PMIC_I2C_ID 21
+
 enum {
 	PWRSRC_LVL1 = 0,
 	THRM_LVL1,
@@ -70,6 +75,125 @@ enum {
 };
 
 struct intel_soc_pmic whiskey_cove_pmic;
+static struct temp_lookup th05_lookup_tbl[] = {
+	{2241, 125, 0}, {2541, 120, 0},
+	{2893, 115, 0}, {3307, 110, 0},
+	{3774, 105, 0}, {4130, 100, 0},
+	{4954, 95, 0}, {5178, 90, 0},
+	{6612, 85, 0}, {7768, 80, 0},
+	{8905, 75, 0}, {10360, 70, 0},
+	{12080, 65, 0}, {14110, 60, 0},
+	{16540, 55, 0}, {19450, 50, 0},
+	{22890, 45, 0}, {27260, 40, 0},
+	{32520, 35, 0}, {38980, 30, 0},
+	{47000, 25, 0}, {56980, 20, 0},
+	{69500, 15, 0}, {85320, 10, 0},
+	{105400, 5, 0}, {131200, 0, 0},
+	{164500, -5, 0}, {207800, -10, 0},
+	{264700, -15, 0}, {340200, -20, 0},
+	{441500, -25, 0}, {579000, -30, 0},
+	{766900, -35, 0}, {1027000, -40, 0},
+};
+
+static struct pmic_regs pmic_wcove_regmap = {
+	.pmic_id = 0x00,
+	.pmic_irqlvl1 = WC_IRQLVL1_ADDR,
+	.pmic_mirqlvl1 = WC_IRQLVL1_MASK_ADDR,
+	.pmic_chgrirq0 = WC_CHGRIRQ0_ADDR,
+	.pmic_schgrirq0 = WC_SCHGRIRQ0_ADDR,
+	.pmic_mchgrirq0 = WC_MCHGRIRQ0_ADDR,
+	.pmic_chgrirq1 = WC_PWRSRC_ADDR,
+	.pmic_schgrirq1 = WC_SPWRSRC_ADDR,
+	.pmic_mchgrirq1 = WC_MPWRSRC_ADDR,
+	.pmic_chgrctrl0 = WC_CHGRCTRL0_ADDR,
+	.pmic_chgrctrl1 = WC_CHGRCTRL1_ADDR,
+	.pmic_lowbattdet0 = WC_LOWBATTDET0_ADDR,
+	.pmic_lowbattdet1 = WC_LOWBATTDET1_ADDR,
+	.pmic_battdetctrl = WC_BATTDETCTRL_ADDR,
+	.pmic_vbusdetctrl = WC_VBUSDETCTRL_ADDR,
+	.pmic_vdcindetctrl = WC_VDCINDETCTRL_ADDR,
+	.pmic_chgrstatus = WC_CHGRSTATUS_ADDR,
+	.pmic_usbidctrl = WC_USBIDCTRL_ADDR,
+	.pmic_usbidstat = WC_USBIDSTAT_ADDR,
+	.pmic_wakesrc = WC_WAKESRC_ADDR,
+	.pmic_usbphyctrl = WC_USBPHYCTRL_ADDR,
+	.pmic_dbg_usbbc1 = WC_DBGUSBBC1_ADDR,
+	.pmic_dbg_usbbc2 = WC_DBGUSBBC2_ADDR,
+	.pmic_dbg_usbbcstat = WC_DBGUSBBCSTAT_ADDR,
+	.pmic_usbpath = WC_USBPATH_ADDR,
+	.pmic_usbsrcdetstat = WC_USBSRCDETSTATUS_ADDR,
+	.pmic_chrttaddr = WC_CHRTTADDR_ADDR,
+	.pmic_chrttdata = WC_CHRTTDATA_ADDR,
+	.pmic_thrmbatzone = WC_THRMBATZONE_ADDR,
+	.pmic_thrmzn0h = WC_THRMZN0H_ADDR,
+	.pmic_thrmzn0l = WC_THRMZN0L_ADDR,
+	.pmic_thrmzn1h = WC_THRMZN1H_ADDR,
+	.pmic_thrmzn1l = WC_THRMZN1L_ADDR,
+	.pmic_thrmzn2h = WC_THRMZN2H_ADDR,
+	.pmic_thrmzn2l = WC_THRMZN2L_ADDR,
+	.pmic_thrmzn3h = WC_THRMZN3H_ADDR,
+	.pmic_thrmzn3l = WC_THRMZN3L_ADDR,
+	.pmic_thrmzn4h = WC_THRMZN4H_ADDR,
+	.pmic_thrmzn4l = WC_THRMZN4L_ADDR,
+	.pmic_thrmirq0 = WC_THRMIRQ0_ADDR,
+	.pmic_mthrmirq0 = WC_MTHRMIRQ0_ADDR,
+	.pmic_sthrmirq0 = WC_STHRMIRQ0_ADDR,
+	.pmic_thrmirq1 = WC_THRMIRQ1_ADDR,
+	.pmic_mthrmirq1 = WC_MTHRMIRQ1_ADDR,
+	.pmic_sthrmirq1 = WC_STHRMIRQ1_ADDR,
+	.pmic_thrmirq2 = WC_THRMIRQ2_ADDR,
+	.pmic_mthrmirq2 = WC_MTHRMIRQ2_ADDR,
+	.pmic_sthrmirq2 = WC_STHRMIRQ2_ADDR,
+};
+
+static struct pmic_ccsm_int_cfg wc_intmap[] = {
+	{ PMIC_INT_VBUS,
+		WC_PWRSRC_ADDR, WC_MPWRSRC_ADDR,
+		WC_SPWRSRC_ADDR, 0x01 },
+	{ PMIC_INT_DCIN,
+		WC_PWRSRC_ADDR, WC_MPWRSRC_ADDR,
+		WC_SPWRSRC_ADDR, 0x02 },
+	{ PMIC_INT_BATTDET,
+		WC_PWRSRC_ADDR, WC_MPWRSRC_ADDR,
+		WC_SPWRSRC_ADDR, 0x04 },
+	{ PMIC_INT_USBIDFLTDET,
+		WC_PWRSRC_ADDR, WC_MPWRSRC_ADDR,
+		WC_SPWRSRC_ADDR, 0x08 },
+	{ PMIC_INT_USBIDGNDDET,
+		WC_PWRSRC_ADDR, WC_MPWRSRC_ADDR,
+		WC_SPWRSRC_ADDR, 0x10 },
+	{ PMIC_INT_CTYP,
+		WC_CHGRIRQ0_ADDR, WC_SCHGRIRQ0_ADDR,
+		WC_MCHGRIRQ0_ADDR, 0x10 },
+	{ PMIC_INT_BZIRQ,
+		WC_THRMIRQ1_ADDR, WC_MTHRMIRQ1_ADDR,
+		WC_STHRMIRQ1_ADDR, 0x80 },
+	{ PMIC_INT_BATCRIT,
+		WC_THRMIRQ1_ADDR, WC_MTHRMIRQ1_ADDR,
+		WC_STHRMIRQ1_ADDR, 0x10 },
+	{ PMIC_INT_BAT0ALRT0,
+		WC_THRMIRQ2_ADDR, WC_MTHRMIRQ2_ADDR,
+		WC_STHRMIRQ2_ADDR, 0x01 },
+	{ PMIC_INT_BAT1ALRT0,
+		WC_THRMIRQ2_ADDR, WC_MTHRMIRQ2_ADDR,
+		WC_STHRMIRQ2_ADDR, 0x02 },
+};
+
+static struct wcove_bcu_platform_data wc_bcu_pdata = {
+	.config = {
+		{VWARNA_CFG_REG,	0xFF},
+		{VWARNB_CFG_REG,	0xFF},
+		{VCRIT_CFG_REG,		0xFD},
+		{ICCMAXVCC_CFG_REG,	0x06},
+		{ICCMAXVNN_CFG_REG,	0x06},
+		{ICCMAXVGG_CFG_REG,	0x06},
+		{BCUDISB_BEH_REG,	0x01},
+		{BCUDISCRIT_BEH_REG,	0x01},
+		{BCUVSYS_DRP_BEH_REG,	0x00},
+		{MBCUIRQ_REG,		0x18},
+	},
+	.num_regs = MAX_BCUCFG_REGS,
+};
 
 static struct resource gpio_resources[] = {
 	{
@@ -159,7 +283,7 @@ static struct resource bcu_resources[] = {
 
 static struct mfd_cell whiskey_cove_dev[] = {
 	{
-		.name = "whiskey_cove_adc",
+		.name = "wcove_gpadc",
 		.id = 0,
 		.num_resources = ARRAY_SIZE(adc_resources),
 		.resources = adc_resources,
@@ -171,14 +295,14 @@ static struct mfd_cell whiskey_cove_dev[] = {
 		.resources = thermal_resources,
 	},
 	{
-		.name = "pmic_ccsm",
+		.name = "wcove_ccsm",
 		.id = 0,
 		.num_resources = ARRAY_SIZE(pmic_ccsm_resources),
 		.resources = pmic_ccsm_resources,
 	},
 	{
-		.name = "i2c_pmic_adap",
-		.id = 0,
+		.name = "wcove_pmic_i2c",
+		.id = WCOVE_PMIC_I2C_ID,
 		.num_resources = ARRAY_SIZE(pmic_i2c_resources),
 		.resources = pmic_i2c_resources,
 	},
@@ -189,7 +313,7 @@ static struct mfd_cell whiskey_cove_dev[] = {
 		.resources = charger_resources,
 	},
 	{
-		.name = "whiskey_cove_bcu",
+		.name = "wcove_bcu",
 		.id = 0,
 		.num_resources = ARRAY_SIZE(bcu_resources),
 		.resources = bcu_resources,
@@ -303,10 +427,33 @@ struct intel_pmic_irqregmap whiskey_cove_irqregmap[] = {
 	},
 };
 
+static void wcove_set_ccsm_config(void)
+{
+	static struct intel_pmic_ccsm_platform_data pdata;
+	pdata.intmap = wc_intmap;
+	pdata.intmap_size = ARRAY_SIZE(wc_intmap);
+	pdata.reg_map = &pmic_wcove_regmap;
+	pdata.max_tbl_row_cnt =
+			ARRAY_SIZE(th05_lookup_tbl);
+	pdata.adc_tbl = th05_lookup_tbl;
+	intel_soc_pmic_set_pdata("wcove_ccsm", &pdata,
+		sizeof(pdata), 0);
+}
+
+static void wcove_set_bcu_pdata(void)
+{
+	intel_soc_pmic_set_pdata("wcove_bcu", (void *)&wc_bcu_pdata,
+			sizeof(struct wcove_bcu_platform_data), 0);
+}
+
 static int whiskey_cove_init(void)
 {
 	pr_info("Whiskey Cove: ID 0x%02X, VERSION 0x%02X\n",
 		intel_soc_pmic_readb(CHIPID), intel_soc_pmic_readb(CHIPVER));
+
+	wcove_set_ccsm_config();
+	wcove_set_bcu_pdata();
+
 	return 0;
 }
 
diff --git a/include/linux/mfd/intel_soc_pmic_wcove.h b/include/linux/mfd/intel_soc_pmic_wcove.h
new file mode 100644
index 000000000000..80b9dca58dee
--- /dev/null
+++ b/include/linux/mfd/intel_soc_pmic_wcove.h
@@ -0,0 +1,85 @@
+/*
+ * intel_soc_pmic_wcove.h - Header file for whiskey cove pmic
+ *
+ * Copyright (C) 2013, 2014 Intel Corporation. All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms and conditions of the GNU General Public License,
+ * version 2, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * Author: Jenny TC <jenny.tc@intel.com>
+ */
+
+#ifndef __INTEL_PMIC_WCOVE_H__
+#define __INTEL_PMIC_WCOVE_H__
+
+#define WC_IRQLVL1_ADDR		0x6E02
+#define WC_IRQLVL1_MASK_ADDR	0x6E0E
+#define WC_PWRSRC_ADDR		0x6E03
+#define WC_MPWRSRC_ADDR		0x6E0F
+#define WC_SPWRSRC_ADDR		0x6E1E
+#define WC_LOWBATTDET0_ADDR	0x6E23
+#define WC_LOWBATTDET1_ADDR	0x6E24
+#define WC_BATTDETCTRL_ADDR	0x6EF0
+#define WC_VBUSDETCTRL_ADDR	0x6E25
+#define WC_VDCINDETCTRL_ADDR	0x6E25
+#define WC_CHGRIRQ0_ADDR	0x6E0A
+#define WC_MCHGRIRQ0_ADDR	0x6E17
+#define WC_SCHGRIRQ0_ADDR	0x5E1A
+#define WC_CHGRCTRL0_ADDR	0x5E16
+#define WC_CHGRCTRL1_ADDR	0x5E17
+#define WC_CHGRCTRL2_ADDR	0x5E18
+#define WC_CHGRSTATUS_ADDR	0x5E19
+#define WC_THRMBATZONE_ADDR	0x4F22
+
+#define WC_THRMIRQ1_ADDR	0x6E05
+#define WC_MTHRMIRQ1_ADDR	0x6E12
+#define WC_STHRMIRQ1_ADDR	0x4F1A
+
+#define WC_THRMIRQ2_ADDR	0x6E06
+#define WC_MTHRMIRQ2_ADDR	0x6E13
+#define WC_STHRMIRQ2_ADDR	0x4F1B
+
+#define WC_USBPATH_ADDR		0x5E19
+#define WC_USBPHYCTRL_ADDR	0x5E07
+#define WC_USBIDCTRL_ADDR	0x5E05
+#define WC_USBIDEN_MASK		0x01
+#define WC_USBIDSTAT_ADDR	0x00FF
+#define WC_USBSRCDETSTATUS_ADDR	0x5E29
+
+#define WC_DBGUSBBC1_ADDR	0x5FE0
+#define WC_DBGUSBBC2_ADDR	0x5FE1
+#define WC_DBGUSBBCSTAT_ADDR	0x5FE2
+
+#define WC_WAKESRC_ADDR		0x6E22
+#define WC_WAKESRC2_ADDR	0x6EE5
+#define WC_CHRTTADDR_ADDR	0x5E22
+#define WC_CHRTTDATA_ADDR	0x5E23
+
+#define WC_THRMIRQ0_ADDR	0x6E04
+#define WC_MTHRMIRQ0_ADDR	0x6E0D
+#define WC_STHRMIRQ0_ADDR	0x4F19
+#define WC_THRMIRQ1_ADDR	0x6E05
+#define WC_MTHRMIRQ1_ADDR	0x6E12
+#define WC_STHRMIRQ1_ADDR	0x4F1A
+#define WC_THRMIRQ2_ADDR	0x6E06
+#define WC_MTHRMIRQ2_ADDR	0x6E13
+#define WC_STHRMIRQ2_ADDR	0x4F1B
+
+#define WC_THRMZN0H_ADDR	0x4F44
+#define WC_THRMZN0L_ADDR	0x4F45
+#define WC_THRMZN1H_ADDR	0x4F46
+#define WC_THRMZN1L_ADDR	0x4F47
+#define WC_THRMZN2H_ADDR	0x4F48
+#define WC_THRMZN2L_ADDR	0x4F49
+#define WC_THRMZN3H_ADDR	0x4F4A
+#define WC_THRMZN3L_ADDR	0x4F4B
+#define WC_THRMZN4H_ADDR	0x4F4C
+#define WC_THRMZN4L_ADDR	0x4F4D
+
+#endif
-- 
1.7.9.5

