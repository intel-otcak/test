From 7482f61f5fe4fc1afa794b3be8d5cb826c07e41c Mon Sep 17 00:00:00 2001
Message-Id: <7482f61f5fe4fc1afa794b3be8d5cb826c07e41c.1414143271.git.chang-joon.lee@intel.com>
In-Reply-To: <f393e797ccaaf66a25ee3d7c4e6136083a6effeb.1414143271.git.chang-joon.lee@intel.com>
References: <f393e797ccaaf66a25ee3d7c4e6136083a6effeb.1414143271.git.chang-joon.lee@intel.com>
From: Yogesh Mohan Marimuthu <yogesh.mohan.marimuthu@intel.com>
Date: Wed, 15 Oct 2014 18:45:45 +0530
Subject: [PATCH 05/26] FOR_UPSTREAM [VPG]: drm/i915: enable MIPI DSI Port C
 on CHT

This patch does the following,
1) Enable MIPI DSI on pipe B for MIPI DSI Port C.
2) Enable Ref clock for DSI PLL 1.
3) Program AFE latch only on MIPI Port A register even
   for MIPI Port C.

For: GMINL-1532
Change-Id: Ibd251af86cf8a289aa8954570163194d115ecbbf
Signed-off-by: Gaurav K Singh <gaurav.k.singh@intel.com>
Signed-off-by: Yogesh Mohan Marimuthu <yogesh.mohan.marimuthu@intel.com>
---
 drivers/gpu/drm/i915/intel_dsi.c     |   16 ++++++++++------
 drivers/gpu/drm/i915/intel_dsi_pll.c |    5 +++++
 2 files changed, 15 insertions(+), 6 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_dsi.c b/drivers/gpu/drm/i915/intel_dsi.c
index c017293..54d39a6 100644
--- a/drivers/gpu/drm/i915/intel_dsi.c
+++ b/drivers/gpu/drm/i915/intel_dsi.c
@@ -109,8 +109,8 @@ static void intel_dsi_device_ready(struct intel_encoder *encoder)
 
 	DRM_DEBUG_KMS("\n");
 
-	val = I915_READ(MIPI_PORT_CTRL(pipe));
-	I915_WRITE(MIPI_PORT_CTRL(pipe), val | LP_OUTPUT_HOLD);
+	val = I915_READ(MIPI_PORT_CTRL(0));
+	I915_WRITE(MIPI_PORT_CTRL(0), val | LP_OUTPUT_HOLD);
 	usleep_range(1000, 1500);
 	I915_WRITE(MIPI_DEVICE_READY(pipe), DEVICE_READY | ULPS_STATE_EXIT);
 	usleep_range(2000, 2500);
@@ -327,11 +327,11 @@ static void intel_dsi_clear_device_ready(struct intel_encoder *encoder)
 	I915_WRITE(MIPI_DEVICE_READY(pipe), ULPS_STATE_ENTER);
 	usleep_range(2000, 2500);
 
-	val = I915_READ(MIPI_PORT_CTRL(pipe));
-	I915_WRITE(MIPI_PORT_CTRL(pipe), val & ~LP_OUTPUT_HOLD);
+	val = I915_READ(MIPI_PORT_CTRL(0));
+	I915_WRITE(MIPI_PORT_CTRL(0), val & ~LP_OUTPUT_HOLD);
 	usleep_range(1000, 1500);
 
-	if (wait_for(((I915_READ(MIPI_PORT_CTRL(pipe)) & AFE_LATCHOUT)
+	if (wait_for(((I915_READ(MIPI_PORT_CTRL(0)) & AFE_LATCHOUT)
 					== 0x00000), 30))
 		DRM_ERROR("DSI LP not going Low\n");
 
@@ -879,7 +879,11 @@ bool intel_dsi_init(struct drm_device *dev)
 	}
 
 	intel_encoder->type = INTEL_OUTPUT_DSI;
-	intel_encoder->crtc_mask = (1 << 0); /* XXX */
+
+	if (dev_priv->vbt.dsi.port == DVO_PORT_MIPIA)
+		intel_encoder->crtc_mask = (1 << 0);
+	else if (dev_priv->vbt.dsi.port == DVO_PORT_MIPIC)
+		intel_encoder->crtc_mask = (1 << 1);
 
 	intel_encoder->cloneable = 0;
 	drm_connector_init(dev, connector, &intel_dsi_connector_funcs,
diff --git a/drivers/gpu/drm/i915/intel_dsi_pll.c b/drivers/gpu/drm/i915/intel_dsi_pll.c
index 719eed9..453e768 100644
--- a/drivers/gpu/drm/i915/intel_dsi_pll.c
+++ b/drivers/gpu/drm/i915/intel_dsi_pll.c
@@ -262,6 +262,7 @@ static void vlv_configure_dsi_pll(struct intel_encoder *encoder)
 	struct intel_crtc *intel_crtc = to_intel_crtc(encoder->base.crtc);
 	const struct drm_display_mode *mode = &intel_crtc->config.adjusted_mode;
 	struct intel_dsi *intel_dsi = enc_to_intel_dsi(&encoder->base);
+	enum pipe pipe = intel_crtc->pipe;
 	int ret;
 	u32 dsi_clk;
 
@@ -276,6 +277,10 @@ static void vlv_configure_dsi_pll(struct intel_encoder *encoder)
 
 	dsi_mnp.dsi_pll_ctrl |= DSI_PLL_CLK_GATE_DSI0_DSIPLL;
 
+	/* For MIPI Port C */
+	if (pipe == PIPE_B)
+		dsi_mnp.dsi_pll_ctrl |= DSI_PLL_CLK_GATE_DSI1_DSIPLL;
+
 	DRM_DEBUG_KMS("dsi pll div %08x, ctrl %08x\n",
 		      dsi_mnp.dsi_pll_div, dsi_mnp.dsi_pll_ctrl);
 
-- 
1.7.9.5

