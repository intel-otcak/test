From a1b71be2208e6bc7c433e388bb1e3c1d58420f72 Mon Sep 17 00:00:00 2001
From: Alexander Usyskin <alexander.usyskin@intel.com>
Date: Thu, 30 Apr 2015 15:26:34 +0300
Subject: [PATCH] mei: request autosuspend at the end of write

On longer non-blocking write might not complete at the end of
autosuspend expiration, therefore we request autosuspend
again on the write completion.

Change-Id: Ieaa62937f6738ad4f4221ce1f9e156492cb858d0
Tracked-On: https://jira01.devtools.intel.com/browse/GMINL-10039
Signed-off-by: Alexander Usyskin <alexander.usyskin@intel.com>
Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
---
 drivers/misc/mei/client.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/drivers/misc/mei/client.c b/drivers/misc/mei/client.c
index cc95750d0cc0..d15b9a279578 100644
--- a/drivers/misc/mei/client.c
+++ b/drivers/misc/mei/client.c
@@ -1007,12 +1007,18 @@ err:
  */
 void mei_cl_complete(struct mei_cl *cl, struct mei_cl_cb *cb)
 {
+	struct mei_device *dev = cl->dev;
+
 	if (cb->fop_type == MEI_FOP_WRITE) {
 		mei_io_cb_free(cb);
 		cb = NULL;
 		cl->writing_state = MEI_WRITE_COMPLETE;
-		if (waitqueue_active(&cl->tx_wait))
+		if (waitqueue_active(&cl->tx_wait)) {
 			wake_up_interruptible(&cl->tx_wait);
+		} else {
+			pm_runtime_mark_last_busy(&dev->pdev->dev);
+			pm_request_autosuspend(&dev->pdev->dev);
+		}
 
 	} else if (cb->fop_type == MEI_FOP_READ &&
 			MEI_READING == cl->reading_state) {
-- 
1.9.1

