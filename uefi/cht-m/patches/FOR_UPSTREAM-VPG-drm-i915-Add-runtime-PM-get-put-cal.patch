From 579abc64cbb2d53fa087fa2feef595ae4f0cd1b3 Mon Sep 17 00:00:00 2001
From: Deepak S <deepak.s@intel.com>
Date: Tue, 29 Dec 2015 16:08:25 +0530
Subject: [PATCH 1/4] FOR_UPSTREAM [VPG]: drm/i915: Add runtime PM get/put
 calls

These are needed to make sure gfx is in D0 when we cat/set sysfs files
from userspace.

Change-Id: I8d3cf8ee8ef7d63dc4e2766835762bc6d9782506
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-14738
Signed-off-by: Deepak S <deepak.s@intel.com>
Reviewed-on: https://android.intel.com:443/456606
---
 drivers/gpu/drm/i915/i915_sysfs.c | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/drivers/gpu/drm/i915/i915_sysfs.c b/drivers/gpu/drm/i915/i915_sysfs.c
index d047f8b..63dea69 100644
--- a/drivers/gpu/drm/i915/i915_sysfs.c
+++ b/drivers/gpu/drm/i915/i915_sysfs.c
@@ -449,6 +449,7 @@ static ssize_t gt_max_freq_mhz_store(struct device *kdev,
 
 	flush_delayed_work(&dev_priv->rps.delayed_resume_work);
 
+	intel_runtime_pm_get(dev_priv);
 	mutex_lock(&dev_priv->rps.hw_lock);
 
 	if (IS_VALLEYVIEW(dev_priv->dev))
@@ -460,6 +461,7 @@ static ssize_t gt_max_freq_mhz_store(struct device *kdev,
 	    val > dev_priv->rps.max_freq ||
 	    val < dev_priv->rps.min_freq_softlimit) {
 		mutex_unlock(&dev_priv->rps.hw_lock);
+		intel_runtime_pm_put(dev_priv);
 		return -EINVAL;
 	}
 
@@ -482,6 +484,7 @@ static ssize_t gt_max_freq_mhz_store(struct device *kdev,
 	}
 
 	mutex_unlock(&dev_priv->rps.hw_lock);
+	intel_runtime_pm_put(dev_priv);
 
 	return count;
 }
@@ -521,6 +524,7 @@ static ssize_t gt_min_freq_mhz_store(struct device *kdev,
 
 	flush_delayed_work(&dev_priv->rps.delayed_resume_work);
 
+	intel_runtime_pm_get(dev_priv);
 	mutex_lock(&dev_priv->rps.hw_lock);
 
 	if (IS_VALLEYVIEW(dev))
@@ -532,6 +536,7 @@ static ssize_t gt_min_freq_mhz_store(struct device *kdev,
 	    val > dev_priv->rps.max_freq ||
 	    val > dev_priv->rps.max_freq_softlimit) {
 		mutex_unlock(&dev_priv->rps.hw_lock);
+		intel_runtime_pm_put(dev_priv);
 		return -EINVAL;
 	}
 
@@ -550,6 +555,7 @@ static ssize_t gt_min_freq_mhz_store(struct device *kdev,
 	}
 
 	mutex_unlock(&dev_priv->rps.hw_lock);
+	intel_runtime_pm_put(dev_priv);
 
 	return count;
 
-- 
1.9.1

