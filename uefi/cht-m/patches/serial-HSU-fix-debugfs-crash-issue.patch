From c6fa9c212a6d4a4673338d561be5d6ca2be9743d Mon Sep 17 00:00:00 2001
From: Huiquan Zhong <huiquan.zhong@intel.com>
Date: Fri, 10 Apr 2015 21:21:02 +0800
Subject: [PATCH] serial: HSU: fix debugfs crash issue

This patch add a late_initcall function to let UART device register first,
then create the registered port debugfs node, and for DesignWare uart ip,
no private dma channel, debugfs node 'dma_chan_X_regs' can not be exposed.

Change-Id: I9a3dd75182925ed6df741c7a96faf0e5e6861873
Tracked-On: https://jira01.devtools.intel.com/browse/AKP-1378
Signed-off-by: Huiquan Zhong <huiquan.zhong@intel.com>
---
 drivers/tty/serial/hsu/hsu_core.c | 25 ++++++++++++++++---------
 1 file changed, 16 insertions(+), 9 deletions(-)

diff --git a/drivers/tty/serial/hsu/hsu_core.c b/drivers/tty/serial/hsu/hsu_core.c
index 838247b..114d26c 100644
--- a/drivers/tty/serial/hsu/hsu_core.c
+++ b/drivers/tty/serial/hsu/hsu_core.c
@@ -435,8 +435,9 @@ static const struct file_operations hsu_dump_ops = {
 	.llseek		= default_llseek,
 };
 
-static int hsu_debugfs_init(struct hsu_port *hsu)
+static int hsu_debugfs_add(struct hsu_port *hsu)
 {
+	struct hsu_dma_chan *dchan;
 	int i;
 	char name[32];
 
@@ -444,16 +445,19 @@ static int hsu_debugfs_init(struct hsu_port *hsu)
 	if (!hsu->debugfs)
 		return -ENOMEM;
 
-	for (i = 0; i < 3; i++) {
+	for (i = 0; i < hsu->port_num; i++) {
 		snprintf(name, sizeof(name), "port_%d_regs", i);
 		debugfs_create_file(name, S_IRUSR,
 			hsu->debugfs, (void *)(&hsu->port[i]), &port_regs_ops);
 	}
 
 	for (i = 0; i < 6; i++) {
+		dchan = &hsu->chans[i];
+		if (!dchan->uport)
+			break;
 		snprintf(name, sizeof(name), "dma_chan_%d_regs", i);
 		debugfs_create_file(name, S_IRUSR,
-			hsu->debugfs, (void *)&hsu->chans[i], &dma_regs_ops);
+			hsu->debugfs, (void *)dchan, &dma_regs_ops);
 	}
 
 	snprintf(name, sizeof(name), "dump_status");
@@ -468,15 +472,18 @@ static void hsu_debugfs_remove(struct hsu_port *hsu)
 	debugfs_remove_recursive(hsu->debugfs);
 }
 
-#else
-static inline int hsu_debugfs_init(struct hsu_port *hsu)
+static int __init hsu_debugfs_init(void)
 {
-	return 0;
+	return hsu_debugfs_add(phsu);
 }
 
-static inline void hsu_debugfs_remove(struct hsu_port *hsu)
+static void __exit hsu_debugfs_exit(void)
 {
+	hsu_debugfs_remove(phsu);
 }
+
+late_initcall(hsu_debugfs_init);
+module_exit(hsu_debugfs_exit);
 #endif /* CONFIG_DEBUG_FS */
 
 static void serial_hsu_enable_ms(struct uart_port *port)
@@ -1983,13 +1990,13 @@ static int __init hsu_init(void)
 		return ret;
 
 	spin_lock_init(&phsu->dma_lock);
-	return hsu_debugfs_init(phsu);
+
+	return ret;
 }
 
 static void __exit hsu_exit(void)
 {
 	uart_unregister_driver(&serial_hsu_reg);
-	hsu_debugfs_remove(phsu);
 }
 
 module_init(hsu_init);
-- 
1.9.1

