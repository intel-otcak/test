From adc8cbfa876bcc76dfa66d467139f24eebd21cc2 Mon Sep 17 00:00:00 2001
Message-Id: <adc8cbfa876bcc76dfa66d467139f24eebd21cc2.1431284209.git.chang-joon.lee@intel.com>
In-Reply-To: <89460f3fc3d6c0659d44897a6adec3c3fecc5564.1431284209.git.chang-joon.lee@intel.com>
References: <89460f3fc3d6c0659d44897a6adec3c3fecc5564.1431284209.git.chang-joon.lee@intel.com>
From: Deepak S <deepak.s@intel.com>
Date: Tue, 24 Mar 2015 13:43:37 +0530
Subject: [PATCH 33/68] Revert "FOR_UPSTREAM [VPG]: drm/i915: Framebuffers
 need not be limited to 256MB on gen8+."

Right fix will be pulled from upstream.

his patch reverts commit:
commit a24bfc9881a1dca9e07bb3cb67ca64ff0f229a36
Change-Id: I1f0def85e27d05f1f9513dcb5972f1ed3bdd19e0
Author: Deepak S <deepak.s@intel.com>
Date:   Fri Jan 30 12:36:09 2015 +0530

    FOR_UPSTREAM [VPG]: drm/i915: Framebuffers need not be limited to
    256MB on gen8+.

For: GMINL-7369
Change-Id: I9fd528c2e7054bd7d4470d60e40cb90bec799367
Signed-off-by: Deepak S <deepak.s@intel.com>
---
 drivers/gpu/drm/i915/i915_gem.c      |    9 ++-------
 drivers/gpu/drm/i915/intel_display.c |   23 +++++++++--------------
 2 files changed, 11 insertions(+), 21 deletions(-)

Index: b/drivers/gpu/drm/i915/i915_gem.c
===================================================================
--- a/drivers/gpu/drm/i915/i915_gem.c	2016-04-19 17:20:28.790812093 +0800
+++ b/drivers/gpu/drm/i915/i915_gem.c	2016-04-19 17:20:44.974771539 +0800
@@ -4506,7 +4506,6 @@
 	u32 old_read_domains, old_write_domain;
 	bool was_pin_display;
 	int ret;
-	struct drm_device *dev = obj->base.dev;
 
 	if (pipelined != i915_gem_request_get_ring(obj->last_read_req)) {
 		ret = i915_gem_object_sync(obj, pipelined, false);
@@ -4536,13 +4535,9 @@
 
 	/* As the user may map the buffer once pinned in the display plane
 	 * (e.g. libkms for the bootup splash), we have to ensure that we
-	 * always use map_and_fenceable for all scanout buffers. No need
-	 * of map_fenceable for >= gen8
+	 * always use map_and_fenceable for all scanout buffers.
 	 */
-	if ((INTEL_INFO(dev)->gen >= 8))
-		ret = i915_gem_obj_ggtt_pin(obj, alignment, 0);
-	else
-		ret = i915_gem_obj_ggtt_pin(obj, alignment, PIN_MAPPABLE);
+	ret = i915_gem_obj_ggtt_pin(obj, alignment, PIN_MAPPABLE);
 	if (ret)
 		goto err_unpin_display;
 
Index: b/drivers/gpu/drm/i915/intel_display.c
===================================================================
--- a/drivers/gpu/drm/i915/intel_display.c	2016-04-19 17:20:28.790812093 +0800
+++ b/drivers/gpu/drm/i915/intel_display.c	2016-04-19 17:20:28.786812103 +0800
@@ -2491,14 +2491,11 @@
 	/* Install a fence for tiled scan-out. Pre-i965 always needs a
 	 * fence, whereas 965+ only requires a fence if using
 	 * framebuffer compression.  For simplicity, we always install
-	 * a fence as the cost is not that onerous. Fence is only required
-	 * for gen 7 & below
+	 * a fence as the cost is not that onerous.
 	 */
-	if ((INTEL_INFO(dev)->gen <= 7)) {
-		ret = i915_gem_object_get_fence(obj);
-		if (ret)
-			goto err_unpin;
-	}
+	ret = i915_gem_object_get_fence(obj);
+	if (ret)
+		goto err_unpin;
 
 	i915_gem_object_pin_fence(obj);
 	drm_gem_object_reference(&obj->base);
@@ -9452,14 +9449,12 @@
 			goto fail_locked;
 		}
 
-		/* Fence is required only for gen7 & below */
-		if ((INTEL_INFO(dev)->gen <= 7)) {
-			ret = i915_gem_object_put_fence(obj);
-			if (ret) {
-				DRM_DEBUG_KMS("failed to release fence cursor");
-				goto fail_unpin;
-			}
+		ret = i915_gem_object_put_fence(obj);
+		if (ret) {
+			DRM_DEBUG_KMS("failed to release fence for cursor");
+			goto fail_unpin;
 		}
+
 		addr = i915_gem_obj_ggtt_offset(obj);
 	} else {
 		int align = IS_I830(dev) ? 16 * 1024 : 256;
