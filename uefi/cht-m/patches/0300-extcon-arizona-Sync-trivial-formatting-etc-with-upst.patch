From c5277f87f93cbdd4492d341e9e1f363d7ba42b20 Mon Sep 17 00:00:00 2001
From: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date: Thu, 14 Aug 2014 13:24:33 +0100
Subject: [PATCH 300/351] extcon: arizona: Sync trivial formatting etc with
 upstream

Change-Id: If688f42af33adc5751a6d4f81cf5ca9c55f7b8d5
Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
---
 drivers/extcon/extcon-arizona.c |   30 +++++++++++++++++-------------
 1 file changed, 17 insertions(+), 13 deletions(-)

diff --git a/drivers/extcon/extcon-arizona.c b/drivers/extcon/extcon-arizona.c
index 4f3844b..833ddfb 100644
--- a/drivers/extcon/extcon-arizona.c
+++ b/drivers/extcon/extcon-arizona.c
@@ -382,6 +382,8 @@ static struct {
 	{ 169, 11065, 65460395 },
 };
 
+#define ARIZONA_HPDET_B_RANGE_MAX 0x3fb
+
 static struct {
 	int min;
 	int max;
@@ -437,7 +439,7 @@ static int arizona_hpdet_read(struct arizona_extcon_info *info)
 
 		if (range < ARRAY_SIZE(arizona_hpdet_b_ranges) - 1 &&
 		    (val < arizona_hpdet_b_ranges[range].threshold ||
-		     val >= 0x3fb)) {
+		     val >= ARIZONA_HPDET_B_RANGE_MAX)) {
 			range++;
 			dev_dbg(arizona->dev, "Moving to HPDET range %d\n",
 				range);
@@ -451,7 +453,7 @@ static int arizona_hpdet_read(struct arizona_extcon_info *info)
 
 		/* If we go out of range report top of range */
 		if (val < arizona_hpdet_b_ranges[range].threshold ||
-		    val >= 0x3fb) {
+		    val >= ARIZONA_HPDET_B_RANGE_MAX) {
 			dev_dbg(arizona->dev, "Measurement out of range\n");
 			return ARIZONA_HPDET_MAX;
 		}
@@ -1202,7 +1204,7 @@ static void arizona_micd_set_level(struct arizona *arizona, int index,
 }
 
 #ifdef CONFIG_OF
-static int arizona_extcon_get_pdata(struct arizona *arizona)
+static int arizona_extcon_of_get_pdata(struct arizona *arizona)
 {
 	struct arizona_pdata *pdata = &arizona->pdata;
 
@@ -1254,7 +1256,7 @@ static int arizona_extcon_get_pdata(struct arizona *arizona)
 	return 0;
 }
 #else
-static inline int arizona_extcon_get_pdata(struct arizona *arizona)
+static inline int arizona_extcon_of_get_pdata(struct arizona *arizona)
 {
 	return 0;
 }
@@ -1283,13 +1285,16 @@ static int arizona_extcon_probe(struct platform_device *pdev)
 	if (!arizona->dapm || !arizona->dapm->card)
 		return -EPROBE_DEFER;
 
-	arizona_extcon_get_pdata(arizona);
-
 	info = devm_kzalloc(&pdev->dev, sizeof(*info), GFP_KERNEL);
-	if (!info) {
-		dev_err(&pdev->dev, "Failed to allocate memory\n");
-		ret = -ENOMEM;
-		goto err;
+	if (!info)
+		return -ENOMEM;
+
+	if (IS_ENABLED(CONFIG_OF)) {
+		if (!dev_get_platdata(arizona->dev)) {
+			ret = arizona_extcon_of_get_pdata(arizona);
+			if (ret < 0)
+				return ret;
+		}
 	}
 
 	/* Set of_node to parent from the SPI device to allow
@@ -1300,7 +1305,7 @@ static int arizona_extcon_probe(struct platform_device *pdev)
 	if (IS_ERR(info->micvdd)) {
 		ret = PTR_ERR(info->micvdd);
 		dev_err(arizona->dev, "Failed to get MICVDD: %d\n", ret);
-		goto err;
+		return ret;
 	}
 
 	mutex_init(&info->lock);
@@ -1352,7 +1357,7 @@ static int arizona_extcon_probe(struct platform_device *pdev)
 	if (ret < 0) {
 		dev_err(arizona->dev, "extcon_dev_register() failed: %d\n",
 			ret);
-		goto err;
+		return ret;
 	}
 
 	info->input = devm_input_allocate_device(&pdev->dev);
@@ -1620,7 +1625,6 @@ err_input:
 err_register:
 	pm_runtime_disable(&pdev->dev);
 	extcon_dev_unregister(&info->edev);
-err:
 	return ret;
 }
 
-- 
1.7.9.5

