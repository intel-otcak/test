From 3b16fb7f436c1ab96be893d69e008803d08b8ee3 Mon Sep 17 00:00:00 2001
Message-Id: <3b16fb7f436c1ab96be893d69e008803d08b8ee3.1430327774.git.chang-joon.lee@intel.com>
From: John Harrison <John.C.Harrison@Intel.com>
Date: Wed, 15 Apr 2015 22:02:53 +0100
Subject: [PATCH] SQUASHME! [VPG]: drm/i915: Fix for broken fence timeline
 cleanup

The native sync implementation was updated recently to work with the
GPU scheduler. This introduced an issue where by the timeline
destruction set the timeline itself to an invalid value. Generally
this was fine because all the sync points on that timeline should
already have been signalled. However, other bits of Android were
holding references to those sync points and subsequently attempted to
copy them. The copy process re-evaluates the signalled status and saw
the invalid timeline value. Thus the copied point was not signalled
even though the source point was. This led to confusion and a
flickering display.

This patch removes the offending invalidation. It can be squashed into
the patch which introduced the issue:
  commit 7b04cfcfcb08fa5f33d61a0870cf0337f5cc2259
  Author: John Harrison <John.C.Harrison@Intel.com>
  Date:   Fri Jan 9 13:32:36 2015 +0000
  Subject: REVERTME [VPG]: drm/i915: Make native sync work with scheduler
  Change-Id: Ia80f332a25c2a3dfcaaadcf4c8bfcf718f24cf64

Change-Id: Ie53b127f64773080dc4121ed9d7168ed1a6abdfb
Issue: GMINL-7234
Signed-off-by: John Harrison <John.C.Harrison@Intel.com>
---
 drivers/gpu/drm/i915/i915_gem_context.c |    5 +----
 1 file changed, 1 insertion(+), 4 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_gem_context.c b/drivers/gpu/drm/i915/i915_gem_context.c
index 38de584..590d687 100644
--- a/drivers/gpu/drm/i915/i915_gem_context.c
+++ b/drivers/gpu/drm/i915/i915_gem_context.c
@@ -154,14 +154,11 @@ void i915_gem_context_free(struct kref *ctx_ref)
 
 		ring = ringbuf->ring;
 
-		i915_sync_timeline_advance(ctx, ring, 0);
 		i915_sync_timeline_destroy(ctx, ring);
 	}
 
-	if (ctx->legacy_hw_ctx.sync_timeline) {
-		i915_sync_timeline_advance(ctx, NULL, 0);
+	if (ctx->legacy_hw_ctx.sync_timeline)
 		i915_sync_timeline_destroy(ctx, NULL);
-	}
 
 	if (i915.enable_execlists)
 		intel_lr_context_free(ctx);
-- 
1.7.9.5

