From 7175b743d3fbae9f9a9948b417ba40d2c881540f Mon Sep 17 00:00:00 2001
From: Venkataramana Kotakonda <venkataramana.kotakonda@intel.com>
Date: Thu, 13 Aug 2015 17:20:57 +0530
Subject: [PATCH] USBC-PHY: Removed reset_pd as functionality is fusb specific.

The pd reset done by reset_pd function is not a generic typec
functionality. Hence this should be handle within fusb driver.

Change-Id: Ic942c9b143765f8188f0d6979b185d08e046965a
Tracked-On: https://jira01.devtools.intel.com/browse/GMINL-16297
Signed-off-by: Venkataramana Kotakonda <venkataramana.kotakonda@intel.com>
---
 drivers/usb/typec/pd/protocol.c | 2 --
 drivers/usb/typec/phy-fusb300.c | 5 ++++-
 include/linux/usb_typec_phy.h   | 1 -
 3 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/drivers/usb/typec/pd/protocol.c b/drivers/usb/typec/pd/protocol.c
index db01147..2791c61 100644
--- a/drivers/usb/typec/pd/protocol.c
+++ b/drivers/usb/typec/pd/protocol.c
@@ -112,8 +112,6 @@ static int pd_prot_handle_reset(struct pd_prot *pd, enum typec_phy_evts evt)
 	pd->event = PROT_PHY_EVENT_RESET;
 	complete(&pd->tx_complete);
 	pd_reset_counters(pd);
-	if (pd->phy->reset_pd)
-		pd->phy->reset_pd(pd->phy);
 	prot_clear_rx_msg_list(pd);
 	/*TODO: check if the the work is completed */
 	pd->event = PROT_PHY_EVENT_NONE;
diff --git a/drivers/usb/typec/phy-fusb300.c b/drivers/usb/typec/phy-fusb300.c
index 096a62a..0cc8861 100644
--- a/drivers/usb/typec/phy-fusb300.c
+++ b/drivers/usb/typec/phy-fusb300.c
@@ -319,6 +319,7 @@ static inline int fusb300_recv_pkt(struct typec_phy *phy, u8 *buf);
 static int fusb300_flush_fifo(struct typec_phy *phy, enum typec_fifo fifo_type);
 static inline int fusb300_pd_send_hard_rst(struct typec_phy *phy);
 static inline int fusb302_pd_send_hard_rst(struct typec_phy *phy);
+static int fusb300_reset_pd(struct typec_phy *phy);
 
 static int fusb300_get_negotiated_cur(int val)
 {
@@ -1080,6 +1081,8 @@ static irqreturn_t fusb300_interrupt(int id, void *dev)
 			if (phy->notify_protocol)
 				phy->notify_protocol(phy,
 						PROT_PHY_EVENT_TX_HARD_RST);
+			/* Reset the fusb tranceiver */
+			fusb300_reset_pd(phy);
 		}
 	}
 
@@ -1116,6 +1119,7 @@ static int fusb300_phy_reset(struct typec_phy *phy)
 	else
 		fusb302_pd_send_hard_rst(phy);
 	mutex_unlock(&chip->lock);
+	/* Reset the fusb tranceiver */
 	fusb300_reset_pd(phy);
 	return 0;
 }
@@ -1687,7 +1691,6 @@ static int fusb300_probe(struct i2c_client *client,
 	chip->phy.flush_fifo = fusb300_flush_fifo;
 	chip->phy.send_packet = fusb300_send_pkt;
 	chip->phy.recv_packet = fusb300_recv_pkt;
-	chip->phy.reset_pd = fusb300_reset_pd;
 	chip->phy.set_pu_pd = fusb300_set_pu_pd;
 	if (!chip->is_fusb300) {
 		chip->phy.setup_role = fusb300_setup_role;
diff --git a/include/linux/usb_typec_phy.h b/include/linux/usb_typec_phy.h
index bd6f2b8..1b71e0b 100644
--- a/include/linux/usb_typec_phy.h
+++ b/include/linux/usb_typec_phy.h
@@ -208,7 +208,6 @@ struct typec_phy {
 	void (*notify_protocol)(struct typec_phy *phy, unsigned long event);
 	bool (*is_pd_capable)(struct typec_phy *phy);
 	int (*enable_autocrc)(struct typec_phy *phy, bool en);
-	int (*reset_pd)(struct typec_phy *phy);
 	int (*set_pu_pd)(struct typec_phy *phy, bool pu_pd);
 	int (*enable_detection)(struct typec_phy *phy, bool en);
 };
-- 
1.9.1

