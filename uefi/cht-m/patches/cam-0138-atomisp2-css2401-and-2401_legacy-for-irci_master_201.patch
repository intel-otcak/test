From 2531be6aaa62da5e3caff9b833f04e2c73d7ac31 Mon Sep 17 00:00:00 2001
From: Pengpeng Cui <pengpengx.cui@intel.com>
Date: Wed, 26 Nov 2014 09:37:14 +0800
Subject: [PATCH 5/8] atomisp2: css2401 and 2401_legacy for
 irci_master_20141125_0453

Merge CSS2.1 for css2401 and 2401_legacy  for irci_master_20141125_0453 firmware tag

Change-Id: I931fc40c730ff0bff5b6e1e29c0c4ae1e6f9e3a4
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-10473
Signed-off-by: Pengpeng Cui <pengpengx.cui@intel.com>
Reviewed-on: https://icggerrit.ir.intel.com/30243
Maintainer: Wei Tao <wei.tao@intel.com>
Approver: Wei Tao <wei.tao@intel.com>
Build: Wei Tao <wei.tao@intel.com>
Reviewed-by: Wei Tao <wei.tao@intel.com>
---
 .../hive_isp_css_include/bbb_config.h              |    2 +-
 .../hive_isp_css_include/host/isp2601_config.h     |    2 +-
 .../hive_isp_css_include/host/ref_vector_func.h    |   32 ++++----
 .../host/ref_vector_func_types.h                   |   46 +++++++++--
 .../pci/atomisp2/css2401a0_legacy_v21/ia_css.h     |    4 +-
 .../css2401a0_legacy_v21/ia_css_host_data.h        |    4 +-
 .../atomisp2/css2401a0_legacy_v21/ia_css_types.h   |    4 +-
 .../css2401a0_legacy_v21/ia_css_version_data.h     |    2 +-
 .../isp/kernels/hdr/ia_css_hdr.host.c              |    4 +-
 .../isp/kernels/hdr/ia_css_hdr.host.h              |    4 +-
 .../isp/kernels/hdr/ia_css_hdr_param.h             |    4 +-
 .../isp/kernels/hdr/ia_css_hdr_types.h             |    4 +-
 .../pci/atomisp2/css2401a0_legacy_v21/sh_css.c     |    9 +-
 .../css2401a0_legacy_v21/sh_css_firmware.c         |    4 +-
 .../atomisp2/css2401a0_legacy_v21/sh_css_params.c  |   86 +++++++++++++++-----
 .../atomisp2/css2401a0_legacy_v21/sh_css_params.h  |    2 +-
 .../hive_isp_css_include/bbb_config.h              |    2 +-
 .../hive_isp_css_include/host/isp2601_config.h     |    2 +-
 .../hive_isp_css_include/host/ref_vector_func.h    |   32 ++++----
 .../host/ref_vector_func_types.h                   |   46 +++++++++--
 .../media/pci/atomisp2/css2401a0_v21/ia_css.h      |    4 +-
 .../pci/atomisp2/css2401a0_v21/ia_css_host_data.h  |    4 +-
 .../pci/atomisp2/css2401a0_v21/ia_css_types.h      |    4 +-
 .../atomisp2/css2401a0_v21/ia_css_version_data.h   |    2 +-
 .../isp/kernels/hdr/ia_css_hdr.host.c              |    4 +-
 .../isp/kernels/hdr/ia_css_hdr.host.h              |    4 +-
 .../isp/kernels/hdr/ia_css_hdr_param.h             |    4 +-
 .../isp/kernels/hdr/ia_css_hdr_types.h             |    4 +-
 .../media/pci/atomisp2/css2401a0_v21/sh_css.c      |    9 +-
 .../pci/atomisp2/css2401a0_v21/sh_css_firmware.c   |    4 +-
 .../pci/atomisp2/css2401a0_v21/sh_css_params.c     |   86 +++++++++++++++-----
 .../pci/atomisp2/css2401a0_v21/sh_css_params.h     |    2 +-
 32 files changed, 286 insertions(+), 140 deletions(-)

diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/hive_isp_css_include/bbb_config.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/hive_isp_css_include/bbb_config.h
index e84381d..cc4444b 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/hive_isp_css_include/bbb_config.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/hive_isp_css_include/bbb_config.h
@@ -23,7 +23,7 @@
 #define __BBB_CONFIG_H_INCLUDED__
 /* This header contains BBB defines common to ISP and host */
 
-#define BFA_MAX_KWAY                (61)
+#define BFA_MAX_KWAY                (49)
 #define BFA_RW_LUT_SIZE             (7)
 
 #define SAD3x3_IN_SHIFT      (2) /* input right shift value for SAD3x3 */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/hive_isp_css_include/host/isp2601_config.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/hive_isp_css_include/host/isp2601_config.h
index 4410b42..181d09e 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/hive_isp_css_include/host/isp2601_config.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/hive_isp_css_include/host/isp2601_config.h
@@ -38,7 +38,7 @@
 #define HAS_vec_sub
 
 /* Bit widths and element widths defined in HW implementation of BFA */
-#define BFA_THRESHOLD_BIT_CNT       (4)
+#define BFA_THRESHOLD_BIT_CNT       (8)
 #define BFA_THRESHOLD_MASK          ((1<<BFA_THRESHOLD_BIT_CNT)-1)
 #define BFA_SW_BIT_CNT              (7)
 #define BFA_SW_MASK                 ((1<<BFA_SW_BIT_CNT)-1)
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/hive_isp_css_include/host/ref_vector_func.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/hive_isp_css_include/host/ref_vector_func.h
index fce15a5..04e99e1 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/hive_isp_css_include/host/ref_vector_func.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/hive_isp_css_include/host/ref_vector_func.h
@@ -827,7 +827,7 @@ STORAGE_CLASS_REF_VECTOR_FUNC_H bma_output_14_2 OP_1w_asp_bma_14_2_32way(
 	tscalar1w_4bit_bma_shift shift);
 
 #ifdef HAS_bfa_unit
-/** @brief OP_1w_single_bfa_9x9_reduced
+/** @brief OP_1w_single_bfa_7x7
  *
  * @param[in] weights - spatial and range weight lut
  * @param[in] threshold - threshold plane, for range weight scaling
@@ -836,13 +836,12 @@ STORAGE_CLASS_REF_VECTOR_FUNC_H bma_output_14_2 OP_1w_asp_bma_14_2_32way(
  *
  * @return   Bilateral filter output pixel
  *
- * This function implements, reduced 9x9 single bilateral filter.
+ * This function implements, 7x7 single bilateral filter.
  * Output = sum(pixel * weight) / sum(weight)
- * Where sum is summation over reduced 9x9 block set. Reduced because few
- * corner pixels are not taken.
+ * Where sum is summation over 7x7 block set.
  * weight = spatial weight * range weight
  * spatial weights are loaded from spatial_weight_lut depending on src pixel
- * position in the 9x9 block
+ * position in the 7x7 block
  * range weights are computed by table look up from range_weight_lut depending
  * on scaled absolute difference between src and central pixels.
  * threshold is used as scaling factor. range_weight_lut consists of
@@ -850,13 +849,13 @@ STORAGE_CLASS_REF_VECTOR_FUNC_H bma_output_14_2 OP_1w_asp_bma_14_2_32way(
  * Piecewise linear approximation technique is used to compute range weight
  * It computes absolute difference between central pixel and 61 src pixels.
  */
-STORAGE_CLASS_REF_VECTOR_FUNC_H tvector1w OP_1w_single_bfa_9x9_reduced(
+STORAGE_CLASS_REF_VECTOR_FUNC_H tvector1w OP_1w_single_bfa_7x7(
 	bfa_weights weights,
 	tvector1w threshold,
 	tvector1w central_pix,
-	s_1w_9x9_matrix src_plane);
+	s_1w_7x7_matrix src_plane);
 
-/** @brief OP_1w_joint_bfa_9x9_reduced
+/** @brief OP_1w_joint_bfa_7x7
  *
  * @param[in] weights - spatial and range weight lut
  * @param[in] threshold0 - 1st threshold plane, for range weight scaling
@@ -868,13 +867,12 @@ STORAGE_CLASS_REF_VECTOR_FUNC_H tvector1w OP_1w_single_bfa_9x9_reduced(
  *
  * @return   Joint bilateral filter output pixel
  *
- * This function implements, reduced 9x9 joint bilateral filter.
+ * This function implements, 7x7 joint bilateral filter.
  * Output = sum(pixel * weight) / sum(weight)
- * Where sum is summation over reduced 9x9 block set. Reduced because few
- * corner pixels are not taken.
+ * Where sum is summation over 7x7 block set.
  * weight = spatial weight * range weight
  * spatial weights are loaded from spatial_weight_lut depending on src pixel
- * position in the 9x9 block
+ * position in the 7x7 block
  * range weights are computed by table look up from range_weight_lut depending
  * on sum of scaled absolute difference between central pixel and two src pixel
  * planes. threshold is used as scaling factor. range_weight_lut consists of
@@ -882,18 +880,18 @@ STORAGE_CLASS_REF_VECTOR_FUNC_H tvector1w OP_1w_single_bfa_9x9_reduced(
  * Piecewise linear approximation technique is used to compute range weight
  * It computes absolute difference between central pixel and 61 src pixels.
  */
-STORAGE_CLASS_REF_VECTOR_FUNC_H tvector1w OP_1w_joint_bfa_9x9_reduced(
+STORAGE_CLASS_REF_VECTOR_FUNC_H tvector1w OP_1w_joint_bfa_7x7(
 	bfa_weights weights,
 	tvector1w threshold0,
 	tvector1w central_pix0,
-	s_1w_9x9_matrix src0_plane,
+	s_1w_7x7_matrix src0_plane,
 	tvector1w threshold1,
 	tvector1w central_pix1,
-	s_1w_9x9_matrix src1_plane);
+	s_1w_7x7_matrix src1_plane);
 
 /** @brief bbb_bfa_gen_spatial_weight_lut
  *
- * @param[in] in - 9x9 matrix of spatial weights
+ * @param[in] in - 7x7 matrix of spatial weights
  * @param[in] out - generated LUT
  *
  * @return   None
@@ -902,7 +900,7 @@ STORAGE_CLASS_REF_VECTOR_FUNC_H tvector1w OP_1w_joint_bfa_9x9_reduced(
  * for bilaterl filter instruction.
  */
 STORAGE_CLASS_REF_VECTOR_FUNC_H void bbb_bfa_gen_spatial_weight_lut(
-	s_1w_9x9_matrix in,
+	s_1w_7x7_matrix in,
 	tvector1w out[BFA_MAX_KWAY]);
 
 /** @brief bbb_bfa_gen_range_weight_lut
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/hive_isp_css_include/host/ref_vector_func_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/hive_isp_css_include/host/ref_vector_func_types.h
index 02b0614..a1f7a31 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/hive_isp_css_include/host/ref_vector_func_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/hive_isp_css_include/host/ref_vector_func_types.h
@@ -81,6 +81,7 @@ typedef short tscalar1w_5bit_signed;         /* tscalar1w in interval [-2^(5-1),
 typedef unsigned short tscalar1w_5bit;       /* tscalar1w in interval [0, 2^5)                       */
 typedef short tscalar1w_range1wbit;          /* tscalar1w in interval [-NUM_BITS, NUM_BITS]          */
 typedef short tscalar1w_unsigned_range1wbit; /* tscalar1w in interval [0, NUM_BITS]                  */
+typedef unsigned short tvector_8bit;
 typedef unsigned short tvector_5bit;
 typedef unsigned short tvector_4bit;
 typedef unsigned short tscalar1w_16bit;
@@ -132,15 +133,25 @@ typedef struct {
 } s_1w_5x5_matrix;
 
 typedef struct {
-  tvector1w     v00 ;
-  tvector1w     v01 ;
-  tvector1w     v02 ;
-  tvector1w     v03 ;
-  tvector1w     v04 ;
-  tvector1w     v05 ;
-  tvector1w     v06 ;
-  tvector1w     v07 ;
-  tvector1w     v08 ;
+	tvector1w v00;
+	tvector1w v01;
+	tvector1w v02;
+	tvector1w v03;
+	tvector1w v04;
+	tvector1w v05;
+	tvector1w v06;
+} s_1w_1x7_matrix;
+
+typedef struct {
+	tvector1w v00;
+	tvector1w v01;
+	tvector1w v02;
+	tvector1w v03;
+	tvector1w v04;
+	tvector1w v05;
+	tvector1w v06;
+	tvector1w v07;
+	tvector1w v08;
 } s_1w_1x9_matrix;
 
 typedef struct {
@@ -197,6 +208,23 @@ typedef struct {
 } s_1w_9x9_matrix;
 
 typedef struct {
+	tvector1w v00; tvector1w v01; tvector1w v02; tvector1w v03; tvector1w v04;
+	tvector1w v05; tvector1w v06;
+	tvector1w v10; tvector1w v11; tvector1w v12; tvector1w v13; tvector1w v14;
+	tvector1w v15; tvector1w v16;
+	tvector1w v20; tvector1w v21; tvector1w v22; tvector1w v23; tvector1w v24;
+	tvector1w v25; tvector1w v26;
+	tvector1w v30; tvector1w v31; tvector1w v32; tvector1w v33; tvector1w v34;
+	tvector1w v35; tvector1w v36;
+	tvector1w v40; tvector1w v41; tvector1w v42; tvector1w v43; tvector1w v44;
+	tvector1w v45; tvector1w v46;
+	tvector1w v50; tvector1w v51; tvector1w v52; tvector1w v53; tvector1w v54;
+	tvector1w v55; tvector1w v56;
+	tvector1w v60; tvector1w v61; tvector1w v62; tvector1w v63; tvector1w v64;
+	tvector1w v65; tvector1w v66;
+} s_1w_7x7_matrix;
+
+typedef struct {
 	tvector1w x_cord[MAX_CONFIG_POINTS];
 	tvector1w slope[MAX_CONFIG_POINTS-1];
 	tvector1w y_offset[MAX_CONFIG_POINTS-1];
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css.h
index 721e7e5..9746378 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20141122_1500 */
-/* Release Version: irci_master_20141122_1500 */
+/* Release Version: irci_master_20141125_0453 */
+/* Release Version: irci_master_20141125_0453 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  *
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_host_data.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_host_data.h
index d844e96..6268c72 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_host_data.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_host_data.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20141122_1500 */
-/* Release Version: irci_master_20141122_1500 */
+/* Release Version: irci_master_20141125_0453 */
+/* Release Version: irci_master_20141125_0453 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  *
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_types.h
index d20a952..787bcbb 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_types.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20141122_1500 */
-/* Release Version: irci_master_20141122_1500 */
+/* Release Version: irci_master_20141125_0453 */
+/* Release Version: irci_master_20141125_0453 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  *
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_version_data.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_version_data.h
index 3c8506b..16b9f49 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_version_data.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_version_data.h
@@ -29,7 +29,7 @@
 #define __IA_CSS_VERSION_DATA_H
 
 
-#define CSS_VERSION_STRING "REL:20141122_47.6_1549; API:2.1.9.1; GIT:irci_20141122_0200__0aab25#0aab2594bdd1d2d9a0e50c4dd5069bbe0ceb4ab9; SDK:/nfs/iir/disks/iir_hivepackages_003/iir_hivepkgs_disk017/Css_Mizuchi/packages/Css_Mizuchi/int_css_mizuchi_20140829_1053; USER:viedifw; "
+#define CSS_VERSION_STRING "REL:20141125_48.2_0531; API:2.1.9.1; GIT:irci_20141124_1808__988eb6#988eb6b80af27a93cfdb97fcf2e03b98d9467722; SDK:/nfs/iir/disks/iir_hivepackages_003/iir_hivepkgs_disk017/Css_Mizuchi/packages/Css_Mizuchi/int_css_mizuchi_20140829_1053; USER:viedifw; "
 
 
 #endif
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr.host.c
index 4873e9e..0f64681 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr.host.c
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20141122_1500 */
-/* Release Version: irci_master_20141122_1500 */
+/* Release Version: irci_master_20141125_0453 */
+/* Release Version: irci_master_20141125_0453 */
 /*
  * INTEL CONFIDENTIAL
  *
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr.host.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr.host.h
index d47805c..cbd2cb3 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr.host.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr.host.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20141122_1500 */
-/* Release Version: irci_master_20141122_1500 */
+/* Release Version: irci_master_20141125_0453 */
+/* Release Version: irci_master_20141125_0453 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  *
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr_param.h
index 1fea348..ef774c5 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr_param.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20141122_1500 */
-/* Release Version: irci_master_20141122_1500 */
+/* Release Version: irci_master_20141125_0453 */
+/* Release Version: irci_master_20141125_0453 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  *
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr_types.h
index d9dbbe2..d503a80 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr_types.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20141122_1500 */
-/* Release Version: irci_master_20141122_1500 */
+/* Release Version: irci_master_20141125_0453 */
+/* Release Version: irci_master_20141125_0453 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  *
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css.c
index ca79c5a..a7d1288 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css.c
@@ -456,18 +456,19 @@ verify_copy_out_frame_format(struct ia_css_pipe *pipe)
  * TODO: see if needs to be made public
  */
 static enum ia_css_err
-sh_css_commit_isp_config(struct ia_css_stream *stream,
-			 struct ia_css_pipeline *pipeline)
+sh_css_commit_isp_config(struct ia_css_pipe *pipe)
 {
 	enum ia_css_err err = IA_CSS_SUCCESS;
 	struct ia_css_pipeline_stage *stage;
+	struct ia_css_pipeline *pipeline;
 
+	pipeline = &pipe->pipeline;
 	if (pipeline) {
 		/* walk through pipeline and commit settings */
 		/* TODO: check if this is needed (s3a is handled through this */
 		for (stage = pipeline->stages; stage; stage = stage->next) {
 			if (stage && stage->binary) {
-				err = sh_css_params_write_to_ddr(stream,
+				err = sh_css_params_write_to_ddr(pipe,
 								 stage);
 				if (err != IA_CSS_SUCCESS)
 					return err;
@@ -1431,7 +1432,7 @@ static enum ia_css_err start_pipe(
 
 	if (me->config.mode != IA_CSS_PIPE_MODE_COPY){
 		/* prepare update of params to ddr */
-		err = sh_css_commit_isp_config(me->stream, &me->pipeline);
+		err = sh_css_commit_isp_config(me);
 		if (err == IA_CSS_SUCCESS)
 			pipe_start(me);
 	}
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_firmware.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_firmware.c
index 1f2c859..8e6d1a3 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_firmware.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_firmware.c
@@ -54,10 +54,10 @@ struct fw_param {
 /* Warning: same order as SH_CSS_BINARY_ID_* */
 static struct firmware_header *firmware_header;
 
-/* The string STR(irci_master_20141122_1500) is a place holder
+/* The string STR(irci_master_20141125_0453) is a place holder
  * which will be replaced with the actual RELEASE_VERSION
  * during package generation. Please do not modify  */
-static const char *release_version = STR(irci_master_20141122_1500);
+static const char *release_version = STR(irci_master_20141125_0453);
 
 #define MAX_FW_REL_VER_NAME	300
 static char FW_rel_ver_name[MAX_FW_REL_VER_NAME] = "---";
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_params.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_params.c
index e988856..71fb553 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_params.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_params.c
@@ -1257,8 +1257,14 @@ static enum ia_css_err
 free_ia_css_isp_parameter_set_info(hrt_vaddress ptr);
 
 static enum ia_css_err
-sh_css_params_write_to_ddr_internal(
+sh_css_params_write_to_ddr_pipe_internal(
 		struct ia_css_pipe *pipe,
+		const struct ia_css_pipeline_stage *stage,
+		struct sh_css_ddr_address_map *ddr_map,
+		struct sh_css_ddr_address_map_size *ddr_map_size);
+
+static enum ia_css_err
+sh_css_params_write_to_ddr_internal(
 		unsigned pipe_id,
 		struct ia_css_isp_parameters *params,
 		const struct ia_css_pipeline_stage *stage,
@@ -3939,8 +3945,15 @@ sh_css_param_update_isp_params(struct ia_css_pipe *curr_pipe,
 					stage, params,
 					isp_pipe_version, raw_bit_depth);
 
-			err = sh_css_params_write_to_ddr_internal(
+			err = sh_css_params_write_to_ddr_pipe_internal(
 					pipe,
+					stage,
+					cur_map,
+					cur_map_size);
+			if (err != IA_CSS_SUCCESS)
+				break;
+
+			err = sh_css_params_write_to_ddr_internal(
 					pipeline->pipe_id,
 					params,
 					stage,
@@ -4072,8 +4085,43 @@ sh_css_param_update_isp_params(struct ia_css_pipe *curr_pipe,
 }
 
 static enum ia_css_err
-sh_css_params_write_to_ddr_internal(
+sh_css_params_write_to_ddr_pipe_internal(
 	struct ia_css_pipe *pipe,
+	const struct ia_css_pipeline_stage *stage,
+	struct sh_css_ddr_address_map *ddr_map,
+	struct sh_css_ddr_address_map_size *ddr_map_size)
+{
+#if !defined(IS_ISP_2500_SYSTEM)
+	(void)pipe;
+	(void)stage;
+	(void)ddr_map;
+	(void)ddr_map_size;
+#else
+	enum ia_css_err err;
+	const struct ia_css_binary *binary;
+
+	IA_CSS_ENTER_PRIVATE("");
+	assert(ddr_map != NULL);
+	assert(ddr_map_size != NULL);
+	assert(stage != NULL);
+
+
+	binary = stage->binary;
+	assert(binary != NULL);
+
+	/* pass call to product specific to handle copying of tables to DDR */
+	err = sh_css_params_to_ddr(pipe, binary, ddr_map, ddr_map_size);
+	if (err != IA_CSS_SUCCESS) {
+		IA_CSS_LEAVE_ERR_PRIVATE(err);
+		return err;
+	}
+#endif
+	IA_CSS_LEAVE_ERR_PRIVATE(IA_CSS_SUCCESS);
+	return IA_CSS_SUCCESS;
+}
+
+static enum ia_css_err
+sh_css_params_write_to_ddr_internal(
 	unsigned pipe_id,
 	struct ia_css_isp_parameters *params,
 	const struct ia_css_pipeline_stage *stage,
@@ -4090,7 +4138,6 @@ sh_css_params_write_to_ddr_internal(
 #if !defined(IS_ISP_2500_SYSTEM)
 	/* struct is > 128 bytes so it should not be on stack (see checkpatch) */
 	static struct ia_css_macc_table converted_macc_table;
-	(void)pipe;
 #endif
 
 	IA_CSS_ENTER_PRIVATE("void");
@@ -4102,18 +4149,6 @@ sh_css_params_write_to_ddr_internal(
 	binary = stage->binary;
 	assert(binary != NULL);
 
-#if defined(IS_ISP_2500_SYSTEM)
-	(void)pipe_id;
-	(void)stage;
-	(void)buff_realloced;
-
-	/* pass call to product specific to handle copying of tables to DDR */
-	err = sh_css_params_to_ddr(pipe, binary, ddr_map, ddr_map_size);
-	if (err != IA_CSS_SUCCESS) {
-		IA_CSS_LEAVE_ERR_PRIVATE(err);
-		return err;
-	}
-#endif
 
 	stage_num = stage->stage_num;
 
@@ -4480,24 +4515,35 @@ sh_css_params_write_to_ddr_internal(
  *    (loops through the stages in a pipe to reconfigure settings)
  */
 enum ia_css_err
-sh_css_params_write_to_ddr(struct ia_css_stream *stream,
+sh_css_params_write_to_ddr(struct ia_css_pipe *pipe,
 			   struct ia_css_pipeline_stage *stage)
 {
 	int i;
 	enum ia_css_err err = IA_CSS_SUCCESS;
 	struct ia_css_isp_parameters *params;
+	struct ia_css_stream *stream;
+	struct ia_css_pipeline *pipeline;
 
 	IA_CSS_ENTER_PRIVATE("void");
-	assert(stream != NULL);
-
+	assert(pipe != NULL);
+	stream = pipe->stream;
 	params = stream->isp_params_configs;
 
+	pipeline = ia_css_pipe_get_pipeline(pipe);
+	err = sh_css_params_write_to_ddr_pipe_internal(
+			pipe,
+			stage,
+			&params->pipe_ddr_ptrs[pipeline->pipe_id],
+			&params->pipe_ddr_ptrs_size[pipeline->pipe_id]);
+	if (err != IA_CSS_SUCCESS) {
+		IA_CSS_LEAVE_ERR_PRIVATE(err);
+		return err;
+	}
 	for (i = 0; i < stream->num_pipes; i++) {
 		struct ia_css_pipe *pipe = stream->pipes[i];
 		struct ia_css_pipeline *pipeline;
 		pipeline = ia_css_pipe_get_pipeline(pipe);
 		err = sh_css_params_write_to_ddr_internal(
-				pipe,
 				pipeline->pipe_id,
 				params,
 				stage,
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_params.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_params.h
index 5ab4428..1414ed1 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_params.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_params.h
@@ -151,7 +151,7 @@ struct ia_css_isp_parameters {
 };
 
 enum ia_css_err
-sh_css_params_write_to_ddr(struct ia_css_stream *stream,
+sh_css_params_write_to_ddr(struct ia_css_pipe *pipe,
 			   struct ia_css_pipeline_stage *stage);
 
 void
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/hive_isp_css_include/bbb_config.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/hive_isp_css_include/bbb_config.h
index e84381d..cc4444b 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/hive_isp_css_include/bbb_config.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/hive_isp_css_include/bbb_config.h
@@ -23,7 +23,7 @@
 #define __BBB_CONFIG_H_INCLUDED__
 /* This header contains BBB defines common to ISP and host */
 
-#define BFA_MAX_KWAY                (61)
+#define BFA_MAX_KWAY                (49)
 #define BFA_RW_LUT_SIZE             (7)
 
 #define SAD3x3_IN_SHIFT      (2) /* input right shift value for SAD3x3 */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/hive_isp_css_include/host/isp2601_config.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/hive_isp_css_include/host/isp2601_config.h
index 4410b42..181d09e 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/hive_isp_css_include/host/isp2601_config.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/hive_isp_css_include/host/isp2601_config.h
@@ -38,7 +38,7 @@
 #define HAS_vec_sub
 
 /* Bit widths and element widths defined in HW implementation of BFA */
-#define BFA_THRESHOLD_BIT_CNT       (4)
+#define BFA_THRESHOLD_BIT_CNT       (8)
 #define BFA_THRESHOLD_MASK          ((1<<BFA_THRESHOLD_BIT_CNT)-1)
 #define BFA_SW_BIT_CNT              (7)
 #define BFA_SW_MASK                 ((1<<BFA_SW_BIT_CNT)-1)
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/hive_isp_css_include/host/ref_vector_func.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/hive_isp_css_include/host/ref_vector_func.h
index fce15a5..04e99e1 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/hive_isp_css_include/host/ref_vector_func.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/hive_isp_css_include/host/ref_vector_func.h
@@ -827,7 +827,7 @@ STORAGE_CLASS_REF_VECTOR_FUNC_H bma_output_14_2 OP_1w_asp_bma_14_2_32way(
 	tscalar1w_4bit_bma_shift shift);
 
 #ifdef HAS_bfa_unit
-/** @brief OP_1w_single_bfa_9x9_reduced
+/** @brief OP_1w_single_bfa_7x7
  *
  * @param[in] weights - spatial and range weight lut
  * @param[in] threshold - threshold plane, for range weight scaling
@@ -836,13 +836,12 @@ STORAGE_CLASS_REF_VECTOR_FUNC_H bma_output_14_2 OP_1w_asp_bma_14_2_32way(
  *
  * @return   Bilateral filter output pixel
  *
- * This function implements, reduced 9x9 single bilateral filter.
+ * This function implements, 7x7 single bilateral filter.
  * Output = sum(pixel * weight) / sum(weight)
- * Where sum is summation over reduced 9x9 block set. Reduced because few
- * corner pixels are not taken.
+ * Where sum is summation over 7x7 block set.
  * weight = spatial weight * range weight
  * spatial weights are loaded from spatial_weight_lut depending on src pixel
- * position in the 9x9 block
+ * position in the 7x7 block
  * range weights are computed by table look up from range_weight_lut depending
  * on scaled absolute difference between src and central pixels.
  * threshold is used as scaling factor. range_weight_lut consists of
@@ -850,13 +849,13 @@ STORAGE_CLASS_REF_VECTOR_FUNC_H bma_output_14_2 OP_1w_asp_bma_14_2_32way(
  * Piecewise linear approximation technique is used to compute range weight
  * It computes absolute difference between central pixel and 61 src pixels.
  */
-STORAGE_CLASS_REF_VECTOR_FUNC_H tvector1w OP_1w_single_bfa_9x9_reduced(
+STORAGE_CLASS_REF_VECTOR_FUNC_H tvector1w OP_1w_single_bfa_7x7(
 	bfa_weights weights,
 	tvector1w threshold,
 	tvector1w central_pix,
-	s_1w_9x9_matrix src_plane);
+	s_1w_7x7_matrix src_plane);
 
-/** @brief OP_1w_joint_bfa_9x9_reduced
+/** @brief OP_1w_joint_bfa_7x7
  *
  * @param[in] weights - spatial and range weight lut
  * @param[in] threshold0 - 1st threshold plane, for range weight scaling
@@ -868,13 +867,12 @@ STORAGE_CLASS_REF_VECTOR_FUNC_H tvector1w OP_1w_single_bfa_9x9_reduced(
  *
  * @return   Joint bilateral filter output pixel
  *
- * This function implements, reduced 9x9 joint bilateral filter.
+ * This function implements, 7x7 joint bilateral filter.
  * Output = sum(pixel * weight) / sum(weight)
- * Where sum is summation over reduced 9x9 block set. Reduced because few
- * corner pixels are not taken.
+ * Where sum is summation over 7x7 block set.
  * weight = spatial weight * range weight
  * spatial weights are loaded from spatial_weight_lut depending on src pixel
- * position in the 9x9 block
+ * position in the 7x7 block
  * range weights are computed by table look up from range_weight_lut depending
  * on sum of scaled absolute difference between central pixel and two src pixel
  * planes. threshold is used as scaling factor. range_weight_lut consists of
@@ -882,18 +880,18 @@ STORAGE_CLASS_REF_VECTOR_FUNC_H tvector1w OP_1w_single_bfa_9x9_reduced(
  * Piecewise linear approximation technique is used to compute range weight
  * It computes absolute difference between central pixel and 61 src pixels.
  */
-STORAGE_CLASS_REF_VECTOR_FUNC_H tvector1w OP_1w_joint_bfa_9x9_reduced(
+STORAGE_CLASS_REF_VECTOR_FUNC_H tvector1w OP_1w_joint_bfa_7x7(
 	bfa_weights weights,
 	tvector1w threshold0,
 	tvector1w central_pix0,
-	s_1w_9x9_matrix src0_plane,
+	s_1w_7x7_matrix src0_plane,
 	tvector1w threshold1,
 	tvector1w central_pix1,
-	s_1w_9x9_matrix src1_plane);
+	s_1w_7x7_matrix src1_plane);
 
 /** @brief bbb_bfa_gen_spatial_weight_lut
  *
- * @param[in] in - 9x9 matrix of spatial weights
+ * @param[in] in - 7x7 matrix of spatial weights
  * @param[in] out - generated LUT
  *
  * @return   None
@@ -902,7 +900,7 @@ STORAGE_CLASS_REF_VECTOR_FUNC_H tvector1w OP_1w_joint_bfa_9x9_reduced(
  * for bilaterl filter instruction.
  */
 STORAGE_CLASS_REF_VECTOR_FUNC_H void bbb_bfa_gen_spatial_weight_lut(
-	s_1w_9x9_matrix in,
+	s_1w_7x7_matrix in,
 	tvector1w out[BFA_MAX_KWAY]);
 
 /** @brief bbb_bfa_gen_range_weight_lut
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/hive_isp_css_include/host/ref_vector_func_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/hive_isp_css_include/host/ref_vector_func_types.h
index 02b0614..a1f7a31 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/hive_isp_css_include/host/ref_vector_func_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/hive_isp_css_include/host/ref_vector_func_types.h
@@ -81,6 +81,7 @@ typedef short tscalar1w_5bit_signed;         /* tscalar1w in interval [-2^(5-1),
 typedef unsigned short tscalar1w_5bit;       /* tscalar1w in interval [0, 2^5)                       */
 typedef short tscalar1w_range1wbit;          /* tscalar1w in interval [-NUM_BITS, NUM_BITS]          */
 typedef short tscalar1w_unsigned_range1wbit; /* tscalar1w in interval [0, NUM_BITS]                  */
+typedef unsigned short tvector_8bit;
 typedef unsigned short tvector_5bit;
 typedef unsigned short tvector_4bit;
 typedef unsigned short tscalar1w_16bit;
@@ -132,15 +133,25 @@ typedef struct {
 } s_1w_5x5_matrix;
 
 typedef struct {
-  tvector1w     v00 ;
-  tvector1w     v01 ;
-  tvector1w     v02 ;
-  tvector1w     v03 ;
-  tvector1w     v04 ;
-  tvector1w     v05 ;
-  tvector1w     v06 ;
-  tvector1w     v07 ;
-  tvector1w     v08 ;
+	tvector1w v00;
+	tvector1w v01;
+	tvector1w v02;
+	tvector1w v03;
+	tvector1w v04;
+	tvector1w v05;
+	tvector1w v06;
+} s_1w_1x7_matrix;
+
+typedef struct {
+	tvector1w v00;
+	tvector1w v01;
+	tvector1w v02;
+	tvector1w v03;
+	tvector1w v04;
+	tvector1w v05;
+	tvector1w v06;
+	tvector1w v07;
+	tvector1w v08;
 } s_1w_1x9_matrix;
 
 typedef struct {
@@ -197,6 +208,23 @@ typedef struct {
 } s_1w_9x9_matrix;
 
 typedef struct {
+	tvector1w v00; tvector1w v01; tvector1w v02; tvector1w v03; tvector1w v04;
+	tvector1w v05; tvector1w v06;
+	tvector1w v10; tvector1w v11; tvector1w v12; tvector1w v13; tvector1w v14;
+	tvector1w v15; tvector1w v16;
+	tvector1w v20; tvector1w v21; tvector1w v22; tvector1w v23; tvector1w v24;
+	tvector1w v25; tvector1w v26;
+	tvector1w v30; tvector1w v31; tvector1w v32; tvector1w v33; tvector1w v34;
+	tvector1w v35; tvector1w v36;
+	tvector1w v40; tvector1w v41; tvector1w v42; tvector1w v43; tvector1w v44;
+	tvector1w v45; tvector1w v46;
+	tvector1w v50; tvector1w v51; tvector1w v52; tvector1w v53; tvector1w v54;
+	tvector1w v55; tvector1w v56;
+	tvector1w v60; tvector1w v61; tvector1w v62; tvector1w v63; tvector1w v64;
+	tvector1w v65; tvector1w v66;
+} s_1w_7x7_matrix;
+
+typedef struct {
 	tvector1w x_cord[MAX_CONFIG_POINTS];
 	tvector1w slope[MAX_CONFIG_POINTS-1];
 	tvector1w y_offset[MAX_CONFIG_POINTS-1];
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css.h
index 721e7e5..9746378 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20141122_1500 */
-/* Release Version: irci_master_20141122_1500 */
+/* Release Version: irci_master_20141125_0453 */
+/* Release Version: irci_master_20141125_0453 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  *
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_host_data.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_host_data.h
index d844e96..6268c72 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_host_data.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_host_data.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20141122_1500 */
-/* Release Version: irci_master_20141122_1500 */
+/* Release Version: irci_master_20141125_0453 */
+/* Release Version: irci_master_20141125_0453 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  *
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_types.h
index d20a952..787bcbb 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_types.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20141122_1500 */
-/* Release Version: irci_master_20141122_1500 */
+/* Release Version: irci_master_20141125_0453 */
+/* Release Version: irci_master_20141125_0453 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  *
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_version_data.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_version_data.h
index 3c8506b..16b9f49 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_version_data.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_version_data.h
@@ -29,7 +29,7 @@
 #define __IA_CSS_VERSION_DATA_H
 
 
-#define CSS_VERSION_STRING "REL:20141122_47.6_1549; API:2.1.9.1; GIT:irci_20141122_0200__0aab25#0aab2594bdd1d2d9a0e50c4dd5069bbe0ceb4ab9; SDK:/nfs/iir/disks/iir_hivepackages_003/iir_hivepkgs_disk017/Css_Mizuchi/packages/Css_Mizuchi/int_css_mizuchi_20140829_1053; USER:viedifw; "
+#define CSS_VERSION_STRING "REL:20141125_48.2_0531; API:2.1.9.1; GIT:irci_20141124_1808__988eb6#988eb6b80af27a93cfdb97fcf2e03b98d9467722; SDK:/nfs/iir/disks/iir_hivepackages_003/iir_hivepkgs_disk017/Css_Mizuchi/packages/Css_Mizuchi/int_css_mizuchi_20140829_1053; USER:viedifw; "
 
 
 #endif
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr.host.c
index 4873e9e..0f64681 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr.host.c
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20141122_1500 */
-/* Release Version: irci_master_20141122_1500 */
+/* Release Version: irci_master_20141125_0453 */
+/* Release Version: irci_master_20141125_0453 */
 /*
  * INTEL CONFIDENTIAL
  *
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr.host.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr.host.h
index d47805c..cbd2cb3 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr.host.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr.host.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20141122_1500 */
-/* Release Version: irci_master_20141122_1500 */
+/* Release Version: irci_master_20141125_0453 */
+/* Release Version: irci_master_20141125_0453 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  *
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr_param.h
index 1fea348..ef774c5 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr_param.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20141122_1500 */
-/* Release Version: irci_master_20141122_1500 */
+/* Release Version: irci_master_20141125_0453 */
+/* Release Version: irci_master_20141125_0453 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  *
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr_types.h
index d9dbbe2..d503a80 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr_types.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20141122_1500 */
-/* Release Version: irci_master_20141122_1500 */
+/* Release Version: irci_master_20141125_0453 */
+/* Release Version: irci_master_20141125_0453 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  *
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css.c
index ca79c5a..a7d1288 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css.c
@@ -456,18 +456,19 @@ verify_copy_out_frame_format(struct ia_css_pipe *pipe)
  * TODO: see if needs to be made public
  */
 static enum ia_css_err
-sh_css_commit_isp_config(struct ia_css_stream *stream,
-			 struct ia_css_pipeline *pipeline)
+sh_css_commit_isp_config(struct ia_css_pipe *pipe)
 {
 	enum ia_css_err err = IA_CSS_SUCCESS;
 	struct ia_css_pipeline_stage *stage;
+	struct ia_css_pipeline *pipeline;
 
+	pipeline = &pipe->pipeline;
 	if (pipeline) {
 		/* walk through pipeline and commit settings */
 		/* TODO: check if this is needed (s3a is handled through this */
 		for (stage = pipeline->stages; stage; stage = stage->next) {
 			if (stage && stage->binary) {
-				err = sh_css_params_write_to_ddr(stream,
+				err = sh_css_params_write_to_ddr(pipe,
 								 stage);
 				if (err != IA_CSS_SUCCESS)
 					return err;
@@ -1431,7 +1432,7 @@ static enum ia_css_err start_pipe(
 
 	if (me->config.mode != IA_CSS_PIPE_MODE_COPY){
 		/* prepare update of params to ddr */
-		err = sh_css_commit_isp_config(me->stream, &me->pipeline);
+		err = sh_css_commit_isp_config(me);
 		if (err == IA_CSS_SUCCESS)
 			pipe_start(me);
 	}
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_firmware.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_firmware.c
index 1f2c859..8e6d1a3 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_firmware.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_firmware.c
@@ -54,10 +54,10 @@ struct fw_param {
 /* Warning: same order as SH_CSS_BINARY_ID_* */
 static struct firmware_header *firmware_header;
 
-/* The string STR(irci_master_20141122_1500) is a place holder
+/* The string STR(irci_master_20141125_0453) is a place holder
  * which will be replaced with the actual RELEASE_VERSION
  * during package generation. Please do not modify  */
-static const char *release_version = STR(irci_master_20141122_1500);
+static const char *release_version = STR(irci_master_20141125_0453);
 
 #define MAX_FW_REL_VER_NAME	300
 static char FW_rel_ver_name[MAX_FW_REL_VER_NAME] = "---";
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_params.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_params.c
index e988856..71fb553 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_params.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_params.c
@@ -1257,8 +1257,14 @@ static enum ia_css_err
 free_ia_css_isp_parameter_set_info(hrt_vaddress ptr);
 
 static enum ia_css_err
-sh_css_params_write_to_ddr_internal(
+sh_css_params_write_to_ddr_pipe_internal(
 		struct ia_css_pipe *pipe,
+		const struct ia_css_pipeline_stage *stage,
+		struct sh_css_ddr_address_map *ddr_map,
+		struct sh_css_ddr_address_map_size *ddr_map_size);
+
+static enum ia_css_err
+sh_css_params_write_to_ddr_internal(
 		unsigned pipe_id,
 		struct ia_css_isp_parameters *params,
 		const struct ia_css_pipeline_stage *stage,
@@ -3939,8 +3945,15 @@ sh_css_param_update_isp_params(struct ia_css_pipe *curr_pipe,
 					stage, params,
 					isp_pipe_version, raw_bit_depth);
 
-			err = sh_css_params_write_to_ddr_internal(
+			err = sh_css_params_write_to_ddr_pipe_internal(
 					pipe,
+					stage,
+					cur_map,
+					cur_map_size);
+			if (err != IA_CSS_SUCCESS)
+				break;
+
+			err = sh_css_params_write_to_ddr_internal(
 					pipeline->pipe_id,
 					params,
 					stage,
@@ -4072,8 +4085,43 @@ sh_css_param_update_isp_params(struct ia_css_pipe *curr_pipe,
 }
 
 static enum ia_css_err
-sh_css_params_write_to_ddr_internal(
+sh_css_params_write_to_ddr_pipe_internal(
 	struct ia_css_pipe *pipe,
+	const struct ia_css_pipeline_stage *stage,
+	struct sh_css_ddr_address_map *ddr_map,
+	struct sh_css_ddr_address_map_size *ddr_map_size)
+{
+#if !defined(IS_ISP_2500_SYSTEM)
+	(void)pipe;
+	(void)stage;
+	(void)ddr_map;
+	(void)ddr_map_size;
+#else
+	enum ia_css_err err;
+	const struct ia_css_binary *binary;
+
+	IA_CSS_ENTER_PRIVATE("");
+	assert(ddr_map != NULL);
+	assert(ddr_map_size != NULL);
+	assert(stage != NULL);
+
+
+	binary = stage->binary;
+	assert(binary != NULL);
+
+	/* pass call to product specific to handle copying of tables to DDR */
+	err = sh_css_params_to_ddr(pipe, binary, ddr_map, ddr_map_size);
+	if (err != IA_CSS_SUCCESS) {
+		IA_CSS_LEAVE_ERR_PRIVATE(err);
+		return err;
+	}
+#endif
+	IA_CSS_LEAVE_ERR_PRIVATE(IA_CSS_SUCCESS);
+	return IA_CSS_SUCCESS;
+}
+
+static enum ia_css_err
+sh_css_params_write_to_ddr_internal(
 	unsigned pipe_id,
 	struct ia_css_isp_parameters *params,
 	const struct ia_css_pipeline_stage *stage,
@@ -4090,7 +4138,6 @@ sh_css_params_write_to_ddr_internal(
 #if !defined(IS_ISP_2500_SYSTEM)
 	/* struct is > 128 bytes so it should not be on stack (see checkpatch) */
 	static struct ia_css_macc_table converted_macc_table;
-	(void)pipe;
 #endif
 
 	IA_CSS_ENTER_PRIVATE("void");
@@ -4102,18 +4149,6 @@ sh_css_params_write_to_ddr_internal(
 	binary = stage->binary;
 	assert(binary != NULL);
 
-#if defined(IS_ISP_2500_SYSTEM)
-	(void)pipe_id;
-	(void)stage;
-	(void)buff_realloced;
-
-	/* pass call to product specific to handle copying of tables to DDR */
-	err = sh_css_params_to_ddr(pipe, binary, ddr_map, ddr_map_size);
-	if (err != IA_CSS_SUCCESS) {
-		IA_CSS_LEAVE_ERR_PRIVATE(err);
-		return err;
-	}
-#endif
 
 	stage_num = stage->stage_num;
 
@@ -4480,24 +4515,35 @@ sh_css_params_write_to_ddr_internal(
  *    (loops through the stages in a pipe to reconfigure settings)
  */
 enum ia_css_err
-sh_css_params_write_to_ddr(struct ia_css_stream *stream,
+sh_css_params_write_to_ddr(struct ia_css_pipe *pipe,
 			   struct ia_css_pipeline_stage *stage)
 {
 	int i;
 	enum ia_css_err err = IA_CSS_SUCCESS;
 	struct ia_css_isp_parameters *params;
+	struct ia_css_stream *stream;
+	struct ia_css_pipeline *pipeline;
 
 	IA_CSS_ENTER_PRIVATE("void");
-	assert(stream != NULL);
-
+	assert(pipe != NULL);
+	stream = pipe->stream;
 	params = stream->isp_params_configs;
 
+	pipeline = ia_css_pipe_get_pipeline(pipe);
+	err = sh_css_params_write_to_ddr_pipe_internal(
+			pipe,
+			stage,
+			&params->pipe_ddr_ptrs[pipeline->pipe_id],
+			&params->pipe_ddr_ptrs_size[pipeline->pipe_id]);
+	if (err != IA_CSS_SUCCESS) {
+		IA_CSS_LEAVE_ERR_PRIVATE(err);
+		return err;
+	}
 	for (i = 0; i < stream->num_pipes; i++) {
 		struct ia_css_pipe *pipe = stream->pipes[i];
 		struct ia_css_pipeline *pipeline;
 		pipeline = ia_css_pipe_get_pipeline(pipe);
 		err = sh_css_params_write_to_ddr_internal(
-				pipe,
 				pipeline->pipe_id,
 				params,
 				stage,
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_params.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_params.h
index 5ab4428..1414ed1 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_params.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_params.h
@@ -151,7 +151,7 @@ struct ia_css_isp_parameters {
 };
 
 enum ia_css_err
-sh_css_params_write_to_ddr(struct ia_css_stream *stream,
+sh_css_params_write_to_ddr(struct ia_css_pipe *pipe,
 			   struct ia_css_pipeline_stage *stage);
 
 void
-- 
1.7.9.5

