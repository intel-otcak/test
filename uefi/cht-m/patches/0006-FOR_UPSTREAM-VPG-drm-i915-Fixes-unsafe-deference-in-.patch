From eb65497f2e2ae9fbf73e197176238d62e30a1252 Mon Sep 17 00:00:00 2001
Message-Id: <eb65497f2e2ae9fbf73e197176238d62e30a1252.1428642548.git.chang-joon.lee@intel.com>
In-Reply-To: <bf1030973d60050117965176cfa2e18cdaf9c0a1.1428642548.git.chang-joon.lee@intel.com>
References: <bf1030973d60050117965176cfa2e18cdaf9c0a1.1428642548.git.chang-joon.lee@intel.com>
From: Peter Antoine <peter.antoine@intel.com>
Date: Wed, 25 Mar 2015 10:05:53 +0000
Subject: [PATCH 6/7] FOR_UPSTREAM [VPG]: drm/i915: Fixes unsafe deference in
 locks.

This patch fixes an unsafe deference in the DRM_IOCTL_NEW_CTX. If the
ioctl is called before the lock is created or after it has been destroyed.
The code will deference a NULL pointer. This ioctl is a root ioctl so
exploitation is limited.

Issue: GMINL-7409
Change-Id: Icabf814abe8225d616fdf4f981cd36d2b27f7ad5
Signed-off-by: Peter Antoine <peter.antoine@intel.com>
---
 drivers/gpu/drm/drm_context.c |    8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/drm_context.c b/drivers/gpu/drm/drm_context.c
index a4b017b..4754e79 100644
--- a/drivers/gpu/drm/drm_context.c
+++ b/drivers/gpu/drm/drm_context.c
@@ -252,7 +252,13 @@ static int drm_context_switch_complete(struct drm_device *dev,
 {
 	dev->last_context = new;	/* PRE/POST: This is the _only_ writer. */
 
-	if (!_DRM_LOCK_IS_HELD(file_priv->master->lock.hw_lock->lock)) {
+	if (file_priv->master->lock.hw_lock == NULL) {
+		DRM_ERROR(
+			"Device has been unregistered. Hard exit. Process %d\n",
+			task_pid_nr(current));
+		send_sig(SIGTERM, current, 0);
+		return -EINTR;
+	} else if (!_DRM_LOCK_IS_HELD(file_priv->master->lock.hw_lock->lock)) {
 		DRM_ERROR("Lock isn't held after context switch\n");
 	}
 
-- 
1.7.9.5

