From cba1e32fb9f0d4995c211108dffeef5fc42c9fb0 Mon Sep 17 00:00:00 2001
From: Leo Sartre <leox.sartre@intel.com>
Date: Fri, 19 Jun 2015 16:40:10 +0200
Subject: [PATCH] iTCO_wdt: add module parameter "force_no_reboot"

Setting "force_no_reboot" parameter to true (y/Y/1) will have the
effect to prevent to reset the NO_REBOOT flag thus preventing the tco
to reboot the platform.

Default value is false.

Change-Id: I64d36a91132d6904e1673064d0fab4790f33bdec
Signed-off-by: Leo Sartre <leox.sartre@intel.com>
Tracked-On: https://jira01.devtools.intel.com/browse/AKP-1772
---
 drivers/watchdog/iTCO_wdt.c | 11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

diff --git a/drivers/watchdog/iTCO_wdt.c b/drivers/watchdog/iTCO_wdt.c
index 6f609f438769..57de16560d80 100644
--- a/drivers/watchdog/iTCO_wdt.c
+++ b/drivers/watchdog/iTCO_wdt.c
@@ -126,6 +126,11 @@ module_param(turn_SMI_watchdog_clear_off, int, 0);
 MODULE_PARM_DESC(turn_SMI_watchdog_clear_off,
 	"Turn off SMI clearing watchdog (depends on TCO-version)(default=1)");
 
+static bool force_no_reboot;
+module_param(force_no_reboot, bool, 0);
+MODULE_PARM_DESC(force_no_reboot,
+	"Prevents the watchdog rebooting the platform (default=0)");
+
 /*
  * Some TCO specific functions
  */
@@ -170,6 +175,10 @@ static int iTCO_wdt_unset_NO_REBOOT_bit(void)
 	int ret = 0;
 	u32 val32;
 
+	/* force_no_reboot will prevent to unset NO_REBOOT bit */
+	if (force_no_reboot)
+		return -EIO;
+
 	/* Unset the NO_REBOOT bit: this enables reboots */
 	if (iTCO_wdt_private.iTCO_version == 3) {
 		val32 = readl(iTCO_wdt_private.gcs_pmc);
@@ -211,7 +220,7 @@ static int iTCO_wdt_start(struct watchdog_device *wd_dev)
 	/* disable chipset's NO_REBOOT bit */
 	if (iTCO_wdt_unset_NO_REBOOT_bit()) {
 		spin_unlock(&iTCO_wdt_private.io_lock);
-		pr_err("failed to reset NO_REBOOT flag, reboot disabled by hardware/BIOS\n");
+		pr_err("failed to reset NO_REBOOT flag, reboot disabled by hardware/BIOS/command line\n");
 		return -EIO;
 	}
 
-- 
1.9.1

