From b6579eb27f1b64b6f36d60198e1b69b552fb8384 Mon Sep 17 00:00:00 2001
Message-Id: <b6579eb27f1b64b6f36d60198e1b69b552fb8384.1398812351.git.mark.gross@intel.com>
In-Reply-To: <e87e3533536ae5eec0e06ceb7ef7428e42855790.1398812350.git.mark.gross@intel.com>
References: <e87e3533536ae5eec0e06ceb7ef7428e42855790.1398812350.git.mark.gross@intel.com>
From: Billy <xiaobing.feng@windriver.com>
Date: Mon, 25 Mar 2013 10:50:30 +0800
Subject: [PATCH 270/429] Alarm: Add a sys interface for alarm driver

Fix:
Add a sys interface "rtc_local_time" to receive user space notification
to determine rtc use utc or local time. utc is used by default.

For: AXIA-2051
Change-Id: I107d43a9038c0219cf1e2249ae8085600a729558
Signed-off-by: Xiaobing Feng <xiaobing.feng@windriver.com>
---
 drivers/staging/android/alarm-dev.c | 33 ++++++++++++++++++++++++++++++++-
 1 file changed, 32 insertions(+), 1 deletion(-)

diff --git a/drivers/staging/android/alarm-dev.c b/drivers/staging/android/alarm-dev.c
index 2fc7cdd..329089d 100644
--- a/drivers/staging/android/alarm-dev.c
+++ b/drivers/staging/android/alarm-dev.c
@@ -49,6 +49,7 @@ static DECLARE_WAIT_QUEUE_HEAD(alarm_wait_queue);
 static uint32_t alarm_pending;
 static uint32_t alarm_enabled;
 static uint32_t wait_pending;
+static int rtc_local_time;
 
 struct devalarm {
 	union {
@@ -159,7 +160,10 @@ static int alarm_set_rtc(struct timespec *ts)
 	unsigned long flags;
 	int rv = 0;
 
-	rtc_time_to_tm(ts->tv_sec, &new_rtc_tm);
+	if (rtc_local_time)
+		rtc_time_to_tm((ts->tv_sec - sys_tz.tz_minuteswest * 60), &new_rtc_tm);
+	else
+		rtc_time_to_tm(ts->tv_sec, &new_rtc_tm);
 	rtc_dev = alarmtimer_get_rtcdev();
 	rv = do_settimeofday(ts);
 	if (rv < 0)
@@ -404,6 +408,29 @@ static struct miscdevice alarm_device = {
 	.fops = &alarm_fops,
 };
 
+static ssize_t alarm_sysfs_show_rtc_local_time(struct device *dev,
+			struct device_attribute *attr, char *buf)
+{
+	return sprintf(buf, "%d\n", rtc_local_time);
+}
+
+static ssize_t alarm_sysfs_store_rtc_local_time(struct device *dev,
+				struct device_attribute *attr,
+				const char *buf, size_t count)
+{
+	int retval;
+	retval = sscanf(buf, " %d ", &rtc_local_time);
+	if (retval != 1) {
+		alarm_dbg(INFO, "Failed to store rtc local time.\n");
+		return -EINVAL;
+	}
+	return retval ? retval : count;
+}
+
+static DEVICE_ATTR(rtc_local_time, S_IRUGO | S_IWUSR,
+		alarm_sysfs_show_rtc_local_time,
+		alarm_sysfs_store_rtc_local_time);
+
 static int __init alarm_dev_init(void)
 {
 	int err;
@@ -431,6 +458,10 @@ static int __init alarm_dev_init(void)
 	}
 
 	wakeup_source_init(&alarm_wake_lock, "alarm");
+
+	err = device_create_file(alarm_device.this_device, &dev_attr_rtc_local_time);
+	if (err)
+		return err;
 	return 0;
 }
 
-- 
1.8.3.2

