From 9ef565cd24127b9f8c15b53160a42eead2cd095b Mon Sep 17 00:00:00 2001
Message-Id: <9ef565cd24127b9f8c15b53160a42eead2cd095b.1414996573.git.chang-joon.lee@intel.com>
In-Reply-To: <de6d11b8587be186d089e692fc410008d4d87034.1414996573.git.chang-joon.lee@intel.com>
References: <de6d11b8587be186d089e692fc410008d4d87034.1414996573.git.chang-joon.lee@intel.com>
From: Rafael Barbalho <rafael.barbalho@intel.com>
Date: Tue, 28 Oct 2014 17:33:58 +0000
Subject: [PATCH 04/10] REVERTME [VPG]: drm/i915: Fix up warnings in max fifo
 support

Fix multiple fumbles introduced by the following commit:

commit 5b2b99fc5bce54f3643bae4ac0bf38572aa57614
Author: vanditak <vandita.kulkarni@intel.com>
Date:   Fri Sep 12 21:43:24 2014 +0530

    FOR_UPSTREAM [VPG]: drm/i915: Add maxfifo support

For: GMINL-1778
Change-Id: I8fc50ca2e3a079914e57b3a7ef530f1e4d970607
Signed-off-by: Rafael Barbalho <rafael.barbalho@intel.com>
---
 drivers/gpu/drm/i915/intel_display.c |    2 --
 drivers/gpu/drm/i915/intel_pm.c      |    5 ++---
 2 files changed, 2 insertions(+), 5 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index 8363e01..124d927 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -4210,11 +4210,9 @@ static void ironlake_pfit_enable(struct intel_crtc *crtc)
 static void intel_enable_planes(struct drm_crtc *crtc)
 {
 	struct drm_device *dev = crtc->dev;
-	struct drm_i915_private *dev_priv = dev->dev_private;
 	enum pipe pipe = to_intel_crtc(crtc)->pipe;
 	struct drm_plane *plane;
 	struct intel_plane *intel_plane;
-	unsigned val = 0;
 
 	drm_for_each_legacy_plane(plane, &dev->mode_config.plane_list) {
 		intel_plane = to_intel_plane(plane);
diff --git a/drivers/gpu/drm/i915/intel_pm.c b/drivers/gpu/drm/i915/intel_pm.c
index 1ea9ff9..46eb7c4 100644
--- a/drivers/gpu/drm/i915/intel_pm.c
+++ b/drivers/gpu/drm/i915/intel_pm.c
@@ -1684,7 +1684,7 @@ void intel_update_maxfifo(struct drm_i915_private *dev_priv)
 	 * No need of a check on pipec in disable path
 	 * as it is doens't get enabled
 	 */
-	if (IS_VALLEYVIEW(dev_priv->dev))
+	if (IS_VALLEYVIEW(dev_priv->dev)) {
 		if (single_plane_enabled(dev_priv->plane_stat)
 			&& !(dev_priv->plane_stat & PIPE_C_MASK)
 			&& !dev_priv->maxfifo_enabled) {
@@ -1709,6 +1709,7 @@ void intel_update_maxfifo(struct drm_i915_private *dev_priv)
 			}
 			dev_priv->maxfifo_enabled = false;
 		}
+	}
 }
 
 static void valleyview_update_wm(struct drm_crtc *crtc)
@@ -1718,7 +1719,6 @@ static void valleyview_update_wm(struct drm_crtc *crtc)
 	int planea_wm, planeb_wm, cursora_wm, cursorb_wm;
 	unsigned int enabled = 0;
 	vlv_update_drain_latency(dev);
-	unsigned int val = 0;
 
 	if (g4x_compute_wm0(dev, PIPE_A,
 			    &valleyview_wm_info, latency_ns,
@@ -3233,7 +3233,6 @@ static void valleyview_update_sprite_wm(struct drm_plane *plane,
 	int sprite_prec = 0, sprite_dl = 0;
 	int sprite_prec_mult = 0;
 	u32 mask, shift;
-	u32 val = 0;
 	struct vlv_MA_component_enabled enable;
 
 	enable.plane_enabled = false;
-- 
1.7.9.5

