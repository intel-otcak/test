From 72251a8e6e92ba9c3f13d00ace508b71545babda Mon Sep 17 00:00:00 2001
From: "Thulasimani,Sivakumar" <sivakumar.thulasimani@intel.com>
Date: Thu, 31 Mar 2016 00:57:04 +0530
Subject: [PATCH 19/22] FOR_UPSTREAM [VPG]: drm/i915: Perform upfront before
 edid read

DPR100 has an issue where performing two link trainings
one after another fails but passes if edid read is performed
between them. hence it is simpler to move upfront link
training before reading edid and thus avoid another
edid read. This will not affect upfront link training
since there the only requirements are link rate and lane count
which are already available.

Change-Id: If4400ccabfad6c3a85157d1086ae4852e05b8f99
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-27481
Signed-off-by: Sivakumar Thulasimani <sivakumar.thulasimani@intel.com>
Reviewed-on: https://android.intel.com:443/496020
---
 drivers/gpu/drm/i915/intel_dp.c | 41 +++++++++++++++++++++--------------------
 1 file changed, 21 insertions(+), 20 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_dp.c b/drivers/gpu/drm/i915/intel_dp.c
index 54f549e..a9b177d 100644
--- a/drivers/gpu/drm/i915/intel_dp.c
+++ b/drivers/gpu/drm/i915/intel_dp.c
@@ -4884,6 +4884,27 @@ intel_dp_detect(struct drm_connector *connector, bool force)
 
 	intel_dp_probe_oui(intel_dp);
 
+	/* if simulation was in progress clear the flag & skip upfront */
+	if (dev_priv->simulate_dp_in_progress & intel_encoder->hpd_pin)
+		dev_priv->simulate_dp_in_progress &= ~(intel_encoder->hpd_pin);
+	else if (IS_CHERRYVIEW(dev) &&
+		intel_dp->compliance_test_type != DP_TEST_LINK_TRAINING &&
+			intel_encoder->type == INTEL_OUTPUT_DISPLAYPORT) {
+
+		/*
+		 * TODO: Need to test connected boot scenario once platform
+		 * patches are ready. This path is tested on reworked-RVP only.
+		 */
+		if (intel_encoder->connectors_active &&
+						crtc && crtc->enabled) {
+			intel_crtc = to_intel_crtc(crtc);
+			DRM_DEBUG_KMS("Disabling crtc %c for upfront LT\n",
+					pipe_name(intel_crtc->pipe));
+			intel_crtc_control(crtc, false);
+		}
+		chv_upfront_link_train(dev, intel_dp, intel_crtc);
+	}
+
 	if (intel_dp->force_audio != HDMI_AUDIO_AUTO) {
 		intel_dp->has_audio = (intel_dp->force_audio == HDMI_AUDIO_ON);
 	} else {
@@ -4916,26 +4937,6 @@ intel_dp_detect(struct drm_connector *connector, bool force)
 
 	}
 
-	/* if simulation was in progress clear the flag & skip upfront */
-	if (dev_priv->simulate_dp_in_progress & intel_encoder->hpd_pin)
-		dev_priv->simulate_dp_in_progress &= ~(intel_encoder->hpd_pin);
-	else if (IS_CHERRYVIEW(dev) &&
-		intel_dp->compliance_test_type != DP_TEST_LINK_TRAINING &&
-			intel_encoder->type == INTEL_OUTPUT_DISPLAYPORT) {
-
-		/*
-		 * TODO: Need to test connected boot scenario once platform
-		 * patches are ready. This path is tested on reworked-RVP only.
-		 */
-		if (intel_encoder->connectors_active &&
-						crtc && crtc->enabled) {
-			intel_crtc = to_intel_crtc(crtc);
-			DRM_DEBUG_KMS("Disabling crtc %c for upfront LT\n",
-					pipe_name(intel_crtc->pipe));
-			intel_crtc_control(crtc, false);
-		}
-		chv_upfront_link_train(dev, intel_dp, intel_crtc);
-	}
 
 	/*
 	 * dp aux is extremely sensitive to irq latency, hence request the
-- 
1.9.1

