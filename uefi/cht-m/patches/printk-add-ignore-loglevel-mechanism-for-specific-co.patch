From 54c3c5f26eaa489faab0a353e1ae4b4f1990169e Mon Sep 17 00:00:00 2001
From: Christophe Guerard <christophe.guerard@intel.com>
Date: Mon, 9 Sep 2013 11:12:02 +0200
Subject: [PATCH] printk: add ignore loglevel mechanism for specific consoles

Pstore console follows global loglevel kernel parameter which is most
of time set to a reasonable value, 5 as example, in order to keep real
HW consoles with a low activity. This is an issue on production
systems where the pstore console (console-ramoops file) is used in
post-mortem debug as it misses all lower level messages and makes
analysis harder.

Kernel does not support the ability to ignore log level for a set of
consoles. It supports only overall setting named ignore_level that
affects all the consoles.

This patch provides a fine tuning of the log level management per
consoles by introducing CON_IGNORELEVEL flag.

Apply this flag to pstore console allows to have full kernel messages on
pstore console while still having a lower level on others. It ease
debugging to always have full log level on pstore console, even on
production devices where minimum debugging features are available.

Change-Id: I629e8d8feeb27a0a325a21b3741605a8bf7ea084
Tracked-On: https://jira01.devtools.intel.com/browse/AKP-1553
Signed-off-by: Christophe Guerard <christophe.guerard@intel.com>
Signed-off-by: Jeremy Rocher <jeremy.rocher@intel.com>
---
 fs/pstore/platform.c    | 2 +-
 include/linux/console.h | 1 +
 kernel/printk/printk.c  | 5 +++--
 3 files changed, 5 insertions(+), 3 deletions(-)

diff --git a/fs/pstore/platform.c b/fs/pstore/platform.c
index cd5e4db589fc..66bf54100e2d 100644
--- a/fs/pstore/platform.c
+++ b/fs/pstore/platform.c
@@ -445,7 +445,7 @@ static void pstore_console_write(struct console *con, const char *s, unsigned c)
 static struct console pstore_console = {
 	.name	= "pstore",
 	.write	= pstore_console_write,
-	.flags	= CON_PRINTBUFFER | CON_ENABLED | CON_ANYTIME,
+	.flags	= CON_PRINTBUFFER | CON_ENABLED | CON_ANYTIME | CON_IGNORELEVEL,
 	.index	= -1,
 };
 
diff --git a/include/linux/console.h b/include/linux/console.h
index 7571a16bd653..40e22a45c44e 100644
--- a/include/linux/console.h
+++ b/include/linux/console.h
@@ -115,6 +115,7 @@ static inline int con_debug_leave(void)
 #define CON_BOOT	(8)
 #define CON_ANYTIME	(16) /* Safe to call when cpu is offline */
 #define CON_BRL		(32) /* Used for a braille device */
+#define CON_IGNORELEVEL	(64) /* Used to ignore log level for a console */
 
 struct console {
 	char	name[16];
diff --git a/kernel/printk/printk.c b/kernel/printk/printk.c
index 35cff2a9f253..63cc2dc45d43 100644
--- a/kernel/printk/printk.c
+++ b/kernel/printk/printk.c
@@ -1266,8 +1266,6 @@ static void call_console_drivers(int level, const char *text, size_t len)
 
 	trace_console(text, len);
 
-	if (level >= console_loglevel && !ignore_loglevel)
-		return;
 	if (!console_drivers)
 		return;
 
@@ -1281,6 +1279,9 @@ static void call_console_drivers(int level, const char *text, size_t len)
 		if (!cpu_online(smp_processor_id()) &&
 		    !(con->flags & CON_ANYTIME))
 			continue;
+		if (level >= console_loglevel &&
+		    !(con->flags & CON_IGNORELEVEL) && !ignore_loglevel)
+			continue;
 		con->write(con, text, len);
 	}
 }
-- 
1.9.1

