From 00f4430a265007e8e2c016cc7926bf530835ea30 Mon Sep 17 00:00:00 2001
Message-Id: <00f4430a265007e8e2c016cc7926bf530835ea30.1424394676.git.feitong.yi@intel.com>
From: Durgadoss R <durgadoss.r@intel.com>
Date: Thu, 29 Jan 2015 17:10:55 +0530
Subject: [PATCH 01/61] SQUASHME! [VPG]: drivers/video/adf: A few HDMI clean
 ups

* Destroy the ctx_lock which was init'ed during config_init
* Call hdmi_pipe_destroy while disabling HDMI in the
  disable_displays patch during boot.
* This patch remove a HDMI optimization which was blocking the
mode switch  on HDMI active state.
* This optimization was blocking HDMI modeset call, when HW is
already active, which is valid for any static display, but its
possible scenario in case of HDMI monitors which support multiple
resoutions, and user can switch to any resolution any time.

For ex: Use is operating in 1920x1080p mode and wishes to go to
720p mode. This will need from a modeset when HDMI display already
on. Driver will first disable HW, then program new mode, and then
enable HW again.

SQUASHME! - This patch should be squashed into the following existing patch:
	Author: Shashank Sharma <shashank.sharma@intel.com>
	MUST_REBASE [VPG]: adf/intel/hdmi: Add HDMI modeset
	Change-Id: I22e2a51f899a97dee4ebf6666462e286b842d297

Issue: GMINL-5443
Change-Id: I2ec2f1e38a19e17db81195cb554dc073e3e02157
Signed-off-by: Durgadoss R <durgadoss.r@intel.com>
Signed-off-by: Shashank Sharma <shashank.sharma@intel.com>
---
 .../adf/intel/core/common/hdmi/gen_hdmi_pipe.c     |    1 +
 .../adf/intel/core/common/hdmi/gen_hdmi_pipe_ops.c |    8 ++------
 drivers/video/adf/intel/core/vlv/vlv_dc_config.c   |    1 +
 3 files changed, 4 insertions(+), 6 deletions(-)

diff --git a/drivers/video/adf/intel/core/common/hdmi/gen_hdmi_pipe.c b/drivers/video/adf/intel/core/common/hdmi/gen_hdmi_pipe.c
index b63a8de..a1478ef 100644
--- a/drivers/video/adf/intel/core/common/hdmi/gen_hdmi_pipe.c
+++ b/drivers/video/adf/intel/core/common/hdmi/gen_hdmi_pipe.c
@@ -162,6 +162,7 @@ void hdmi_config_destroy(struct hdmi_config *config)
 	if (config) {
 		hdmi_context_destroy(&config->ctx);
 		kfree(config->force_mode);
+		mutex_destroy(&config->ctx_lock);
 	}
 	pr_info("ADF: HDMI: %s\n", __func__);
 	return;
diff --git a/drivers/video/adf/intel/core/common/hdmi/gen_hdmi_pipe_ops.c b/drivers/video/adf/intel/core/common/hdmi/gen_hdmi_pipe_ops.c
index 72694dd..c56c171 100644
--- a/drivers/video/adf/intel/core/common/hdmi/gen_hdmi_pipe_ops.c
+++ b/drivers/video/adf/intel/core/common/hdmi/gen_hdmi_pipe_ops.c
@@ -274,15 +274,11 @@ static int hdmi_modeset(struct intel_pipe *pipe,
 		return err;
 	}
 
-	if (hdmi_pipe->dpms_state == DRM_MODE_DPMS_ON) {
-		pr_info("ADF: HDMI: %s: HDMI already enabled\n", __func__);
-		return 0;
-	}
-
 	mutex_lock(&config->ctx_lock);
 
 	/* Avoiding i915 enter into DPMS */
-	intel_adf_display_rpm_get();
+	if (hdmi_pipe->dpms_state == DRM_MODE_DPMS_OFF)
+		intel_adf_display_rpm_get();
 
 	curr_mode = config->ctx.current_mode;
 	err = chv_pipeline_off(pipeline);
diff --git a/drivers/video/adf/intel/core/vlv/vlv_dc_config.c b/drivers/video/adf/intel/core/vlv/vlv_dc_config.c
index 41b967d..60a9ad1 100644
--- a/drivers/video/adf/intel/core/vlv/vlv_dc_config.c
+++ b/drivers/video/adf/intel/core/vlv/vlv_dc_config.c
@@ -555,6 +555,7 @@ static void vlv_disable_efp_hdmi(struct vlv_dc_config *config, u16 stepping)
 	chv_pipeline_off(pipeline);
 
 	disp = to_vlv_pipeline(pipeline);
+	hdmi_pipe_destroy(&disp->gen.hdmi);
 	intel_pipe_destroy(&disp->gen.hdmi.base);
 
 	vlv_reset_pipeline_params(config);
-- 
1.7.9.5

