From 1550b085f4ab2672eb4dacc9816e471a359f662b Mon Sep 17 00:00:00 2001
From: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date: Wed, 22 Jan 2014 15:00:37 +0000
Subject: [PATCH 092/351] ASoC: wm_adsp: Allow DT compr-caps to contain
 multiple sample rates

Change-Id: I73438c0c6daa9f94491f06c502f1d578de7f6d68
Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Signed-off-by: Nikesh Oswal <Nikesh.Oswal@wolfsonmicro.com>
---
 sound/soc/codecs/wm_adsp.c |   66 +++++++++++++++++++++++++++-----------------
 1 file changed, 40 insertions(+), 26 deletions(-)

diff --git a/sound/soc/codecs/wm_adsp.c b/sound/soc/codecs/wm_adsp.c
index bf0052a..312e1da 100644
--- a/sound/soc/codecs/wm_adsp.c
+++ b/sound/soc/codecs/wm_adsp.c
@@ -2159,38 +2159,52 @@ static int wm_adsp_of_parse_caps(struct wm_adsp *adsp,
 				 struct device_node *np,
 				 struct wm_adsp_fw_defs *fw)
 {
-	int ret;
-	u32 of_caps[5];
+	const char *prop = "wlf,compr-caps";
+	int ret, i;
+	int len_prop;
+	u32 of_cap;
 
-	ret = of_property_read_u32_array(np, "wlf,compr-caps",
-					 of_caps, ARRAY_SIZE(of_caps));
+	if (!of_get_property(np, prop, &len_prop))
+		return -EINVAL;
 
-	if (ret >= 0) {
-		fw->num_caps = 1;
-		fw->caps = devm_kzalloc(adsp->dev,
-					sizeof(struct wm_adsp_fw_caps),
-					GFP_KERNEL);
-		if (!fw->caps)
-			return -ENOMEM;
+	len_prop /= sizeof(u32);
 
-		fw->caps->num_host_regions = ARRAY_SIZE(ez2control_regions);
-		fw->caps->host_region_defs =
-			devm_kzalloc(adsp->dev,
-				     sizeof(ez2control_regions),
-				     GFP_KERNEL);
-		if (!fw->caps->host_region_defs)
-			return -ENOMEM;
+	if (len_prop < 5 || len_prop > 5 + MAX_NUM_SAMPLE_RATES)
+		return -EOVERFLOW;
+
+	fw->num_caps = 1;
+	fw->caps = devm_kzalloc(adsp->dev,
+				sizeof(struct wm_adsp_fw_caps),
+				GFP_KERNEL);
+	if (!fw->caps)
+		return -ENOMEM;
+
+	fw->caps->num_host_regions = ARRAY_SIZE(ez2control_regions);
+	fw->caps->host_region_defs =
+		devm_kzalloc(adsp->dev,
+			     sizeof(ez2control_regions),
+			     GFP_KERNEL);
+	if (!fw->caps->host_region_defs)
+		return -ENOMEM;
+
+	memcpy(fw->caps->host_region_defs,
+	       ez2control_regions,
+	       sizeof(ez2control_regions));
 
-		memcpy(fw->caps->host_region_defs,
-		       ez2control_regions,
-		       sizeof(ez2control_regions));
+	of_property_read_u32_index(np, prop, 0, &of_cap);
+	fw->caps->id = of_cap;
+	of_property_read_u32_index(np, prop, 1, &of_cap);
+	fw->caps->desc.max_ch = of_cap;
+	of_property_read_u32_index(np, prop, 2, &of_cap);
+	fw->caps->desc.formats = of_cap;
+	of_property_read_u32_index(np, prop, 3, &of_cap);
+	fw->compr_direction = of_cap;
 
-		fw->caps->id = of_caps[0];
-		fw->caps->desc.max_ch = of_caps[1];
-		fw->caps->desc.sample_rates[0] = of_caps[2];
-		fw->caps->desc.formats = of_caps[3];
-		fw->compr_direction = of_caps[4];
+	for (i = 4; i < len_prop; ++i) {
+		of_property_read_u32_index(np, prop, i, &of_cap);
+		fw->caps->desc.sample_rates[i - 4] = of_cap;
 	}
+	fw->caps->desc.num_sample_rates = i - 4;
 
 	return ret;
 }
-- 
1.7.9.5

