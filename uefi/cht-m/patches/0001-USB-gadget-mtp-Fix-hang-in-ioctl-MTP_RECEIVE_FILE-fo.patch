From bd5606fc96e1cbf4b5a1513f608e88e42016f76c Mon Sep 17 00:00:00 2001
From: Mike Lockwood <lockwood@google.com>
Date: Thu, 6 Mar 2014 15:49:39 -0800
Subject: [PATCH] USB: gadget: mtp: Fix hang in ioctl(MTP_RECEIVE_FILE) for
 WritePartialObject

In receive_file_work, we now queue reads with length rounded up to
max packet size rather than mtp_rx_req_len.
Otherwise the read request will never complete.

Change-Id: Id92471fda8e306e1758250ed8ac30ab04172d3a2
Signed-off-by: Mike Lockwood <lockwood@google.com>

[mian.kaukab@intel.com: use MTP_BULK_BUFFER_SIZE instead of
mtp_rx_req_len]
Signed-off-by: Mian Yousaf Kaukab <mian.kaukab@intel.com>
---
 drivers/usb/gadget/f_mtp.c | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

diff --git a/drivers/usb/gadget/f_mtp.c b/drivers/usb/gadget/f_mtp.c
index ae7c1c8ae252..a7f1b62abdb4 100644
--- a/drivers/usb/gadget/f_mtp.c
+++ b/drivers/usb/gadget/f_mtp.c
@@ -744,7 +744,7 @@ static void receive_file_work(struct work_struct *data)
 	struct file *filp;
 	loff_t offset;
 	int64_t count;
-	int ret, cur_buf = 0;
+	int ret, len, cur_buf = 0;
 	int r = 0;
 
 	/* read our parameters */
@@ -761,8 +761,11 @@ static void receive_file_work(struct work_struct *data)
 			read_req = dev->rx_req[cur_buf];
 			cur_buf = (cur_buf + 1) % RX_REQ_MAX;
 
-			read_req->length = (count > MTP_BULK_BUFFER_SIZE
-					? MTP_BULK_BUFFER_SIZE : count);
+			len = ALIGN(count, dev->ep_out->maxpacket);
+			if (len > MTP_BULK_BUFFER_SIZE)
+				len = MTP_BULK_BUFFER_SIZE;
+			read_req->length = len;
+
 			dev->rx_done = 0;
 			ret = usb_ep_queue(dev->ep_out, read_req, GFP_KERNEL);
 			if (ret < 0) {
-- 
1.9.1

