From f21e5e8d99184cd99e9d6646b66f76c85cd49b8b Mon Sep 17 00:00:00 2001
From: zhengq <qi.zheng@intel.com>
Date: Wed, 17 Jun 2015 22:15:45 +0800
Subject: [PATCH] ASPM: fix bug of wrong state usage

For ASPM L1SS, "l1ss_state" should be used instead of
"state".

Change-Id: I1cdbd83a6fdfefa4e4553eb36568a91be67390dc
Tracked-On: https://jira01.devtools.intel.com/browse/AKP-1882
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-39756
Signed-off-by: zhengq <qi.zheng@intel.com>
---
 drivers/pci/pcie/aspm.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/drivers/pci/pcie/aspm.c b/drivers/pci/pcie/aspm.c
index 9ac58583f5ca..887ff00d12a4 100644
--- a/drivers/pci/pcie/aspm.c
+++ b/drivers/pci/pcie/aspm.c
@@ -296,12 +296,12 @@ static void pcie_aspm_l1ss_cfg(struct pcie_link_state *link, u32 state)
 				PCI_LNKSUB_ASPM_L11_EN
 					| PCI_LNKSUB_ASPM_L12_EN, 0);
 
-			if (state & ASPM_LNKSUB_L11) {
+			if (l1ss_state & ASPM_LNKSUB_L11) {
 				dwctrl1 |= timing->cm_mode_restore_time;
 				dwctrl2 |= timing->pwr_on_scal
 						| timing->pwr_on_val;
 			}
-			if (state & ASPM_LNKSUB_L12)
+			if (l1ss_state & ASPM_LNKSUB_L12)
 				dwctrl1 |= timing->ltr_l12_threshold_val
 					| timing->ltr_l12_threshold_scal;
 
@@ -316,9 +316,9 @@ static void pcie_aspm_l1ss_cfg(struct pcie_link_state *link, u32 state)
 				dwctrl2);
 
 			dwctrl1 = 0;
-			if (state & ASPM_LNKSUB_L11)
+			if (l1ss_state & ASPM_LNKSUB_L11)
 				dwctrl1 |= PCI_LNKSUB_ASPM_L11_EN;
-			if (state & ASPM_LNKSUB_L12)
+			if (l1ss_state & ASPM_LNKSUB_L12)
 				dwctrl1 |= PCI_LNKSUB_ASPM_L12_EN;
 
 			/* Third, update the enable bits */
@@ -331,7 +331,7 @@ static void pcie_aspm_l1ss_cfg(struct pcie_link_state *link, u32 state)
 		pcie_aspm_l1ss_clear_and_set(parent, PCI_LNKSUB_CTRL1,
 			PCI_LNKSUB_ASPM_L11_EN
 				| PCI_LNKSUB_ASPM_L12_EN, upctrl1);
-		link->aspm_l1ss_enabled = state;
+		link->aspm_l1ss_enabled = l1ss_state;
 	}
 }
 
-- 
1.9.1

