From 4712284c29942cbab422671e8dd80d37824521ed Mon Sep 17 00:00:00 2001
From: Simon Dubray <simonx.dubray@intel.com>
Date: Fri, 20 Mar 2015 12:08:14 +0100
Subject: [PATCH] kobject: do not free buffered uevents

Patch I3664caf063e7b32dd58eb26079f3b2f7a9700c63 introduced a buffer
to bufferize uevents and deliver them only after suspend.
But a kobject can be sent while freeing them, so we must end the free process.

Change-Id: I82c8a430a66aa9082e20c045afcce7ff0f45ab16
Signed-off-by: Simon Dubray <simonx.dubray@intel.com>
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-22984
---
 lib/kobject.c |    6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/lib/kobject.c b/lib/kobject.c
index cb14aea..33388c8 100644
--- a/lib/kobject.c
+++ b/lib/kobject.c
@@ -610,6 +610,12 @@ static void kobject_cleanup(struct kobject *kobj)
 		pr_debug("kobject: '%s' (%p): auto cleanup 'remove' event\n",
 			 kobject_name(kobj), kobj);
 		kobject_uevent(kobj, KOBJ_REMOVE);
+
+#ifdef CONFIG_PM_SLEEP
+		/* if kobj was buffered in kobject_uevent_env, do not free it */
+		if (atomic_read(&kobj->kref.refcount) > 0)
+			return;
+#endif
 	}
 
 	/* remove from sysfs if the caller did not do it */
-- 
1.7.9.5

