From dbf1758c611e6df9797e8755b6a2ccd972872deb Mon Sep 17 00:00:00 2001
From: Ding Yunliang <yunliang.ding@intel.com>
Date: Mon, 8 Jun 2015 11:42:46 +0800
Subject: [PATCH 408/415] wc: add v1p2 and vprog4b supply consumer

    + V1P2A is core voltage supply for camera rear sensor

    + VPROG4B provides V2P8 power for VCM

Change-Id: I4c032bebad9705e0fd1067dbcc345b39f00ab3f0
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-37622
Signed-off-by: Ding Yunliang <yunliang.ding@intel.com>
---
 drivers/mfd/intel_soc_pmic_wc.c |   85 +++++++++++++++++++++++++++++++++++++--
 1 file changed, 82 insertions(+), 3 deletions(-)

diff --git a/drivers/mfd/intel_soc_pmic_wc.c b/drivers/mfd/intel_soc_pmic_wc.c
index b6b713d..dd6faab 100644
--- a/drivers/mfd/intel_soc_pmic_wc.c
+++ b/drivers/mfd/intel_soc_pmic_wc.c
@@ -423,6 +423,12 @@ static struct mfd_cell whiskey_cove_dev[] = {
 	},
 	{
 		.name = "wcove_regulator",
+		.id = WCOVE_ID_V1P2A + 1,
+		.num_resources = 0,
+		.resources = NULL,
+	},
+	{
+		.name = "wcove_regulator",
 		.id = WCOVE_ID_V1P8SX + 1,
 		.num_resources = 0,
 		.resources = NULL,
@@ -434,6 +440,12 @@ static struct mfd_cell whiskey_cove_dev[] = {
 		.resources = NULL,
 	},
 	{
+		.name = "wcove_regulator",
+		.id = WCOVE_ID_VPROG4B + 1,
+		.num_resources = 0,
+		.resources = NULL,
+	},
+	{
 		.name = "whiskey_cove_region",
 	},
 	{NULL, },
@@ -643,6 +655,10 @@ static void wc_set_thermal_pdata(void)
 				sizeof(whiskey_cove_thermal_data), 0);
 }
 
+static struct regulator_consumer_supply v1p2a_consumer[] = {
+	REGULATOR_SUPPLY("v1p2a", "INT3477:00"),
+};
+
 static struct regulator_consumer_supply v1p8sx_consumer[] = {
 	REGULATOR_SUPPLY("v1p8sx", "INT33BE:00"),
 	REGULATOR_SUPPLY("v1p8sx", "INT33FB:00"),
@@ -653,16 +669,34 @@ static struct regulator_consumer_supply v2p8sx_consumer[] = {
 	REGULATOR_SUPPLY("v2p8sx", "INT33FB:00"),
 };
 
+static struct regulator_consumer_supply vprog4b_consumer[] = {
+	REGULATOR_SUPPLY("v2p8sx", "INT3477:00"),
+};
+
+/* v1p2a regulator */
+static struct regulator_init_data v1p2a_data = {
+	.constraints = {
+		.min_uV = 1178000,
+		.max_uV = 1277000,
+		.valid_ops_mask		= REGULATOR_CHANGE_VOLTAGE |
+				REGULATOR_CHANGE_STATUS,
+		.valid_modes_mask	= REGULATOR_MODE_NORMAL,
+	},
+	.num_consumer_supplies	= ARRAY_SIZE(v1p8sx_consumer),
+	.consumer_supplies	= v1p8sx_consumer,
+};
+
 /* v1p8sx regulator */
 static struct regulator_init_data v1p8sx_data = {
 	.constraints = {
 		.min_uV = 1620000,
 		.max_uV = 1980000,
-		.valid_ops_mask		= REGULATOR_CHANGE_STATUS,
+		.valid_ops_mask		= REGULATOR_CHANGE_VOLTAGE |
+				REGULATOR_CHANGE_STATUS,
 		.valid_modes_mask	= REGULATOR_MODE_NORMAL,
 	},
-	.num_consumer_supplies	= ARRAY_SIZE(v1p8sx_consumer),
-	.consumer_supplies	= v1p8sx_consumer,
+	.num_consumer_supplies	= ARRAY_SIZE(v1p2a_consumer),
+	.consumer_supplies	= v1p2a_consumer,
 };
 
 /* v2p8sx regulator */
@@ -678,14 +712,32 @@ static struct regulator_init_data v2p8sx_data = {
 	.consumer_supplies	= v2p8sx_consumer,
 };
 
+/* vprog4b regulator */
+static struct regulator_init_data vprog4b_data = {
+	.constraints = {
+		.min_uV			= 800000,
+		.max_uV			= 3300000,
+		.valid_ops_mask		= REGULATOR_CHANGE_VOLTAGE |
+					REGULATOR_CHANGE_STATUS,
+		.valid_modes_mask	= REGULATOR_MODE_NORMAL,
+	},
+	.num_consumer_supplies	= ARRAY_SIZE(vprog4b_consumer),
+	.consumer_supplies	= vprog4b_consumer,
+};
 
 /*************************************************************
 *
 * WCOVE Camera related regulator
 *
 *************************************************************/
+static struct regulator_init_data wcove_v1p2a_data;
 static struct regulator_init_data wcove_v1p8sx_data;
 static struct regulator_init_data wcove_v2p8sx_data;
+static struct regulator_init_data wcove_vprog4b_data;
+
+static struct wcove_regulator_info wcove_v1p2a_info = {
+	.init_data = &wcove_v1p2a_data,
+};
 
 static struct wcove_regulator_info wcove_v1p8sx_info = {
 	.init_data = &wcove_v1p8sx_data,
@@ -695,6 +747,20 @@ static struct wcove_regulator_info wcove_v2p8sx_info = {
 	.init_data = &wcove_v2p8sx_data,
 };
 
+static struct wcove_regulator_info wcove_vprog4b_info = {
+	.init_data = &wcove_vprog4b_data,
+};
+
+static void wc_set_v1p2_pdata(void)
+{
+	memcpy((void *)&wcove_v1p2a_data, (void *)&v1p2a_data,
+			sizeof(struct regulator_init_data));
+
+	intel_soc_pmic_set_pdata("wcove_regulator", &wcove_v1p2a_info,
+		sizeof(struct wcove_regulator_info), WCOVE_ID_V1P2A + 1);
+
+}
+
 static void wc_set_v1p8_pdata(void)
 {
 	memcpy((void *)&wcove_v1p8sx_data, (void *)&v1p8sx_data,
@@ -715,6 +781,17 @@ static void wc_set_v2p8_pdata(void)
 		sizeof(struct wcove_regulator_info), WCOVE_ID_V2P8SX + 1);
 }
 
+static void wc_set_vprog4b_pdata(void)
+{
+	memcpy((void *)&wcove_vprog4b_data, (void *)&vprog4b_data,
+			sizeof(struct regulator_init_data));
+
+	/* register camera regulator for whiskey cove PMIC */
+	intel_soc_pmic_set_pdata("wcove_regulator", &wcove_vprog4b_info,
+		sizeof(struct wcove_regulator_info), WCOVE_ID_VPROG4B + 1);
+}
+
+
 static void wc_set_gpio_pdata(void)
 {
 	intel_soc_pmic_set_pdata("whiskey_cove_gpio",
@@ -846,8 +923,10 @@ static int whiskey_cove_init(void)
 	wcove_set_bcu_pdata();
 	wc_set_adc_pdata();
 	wc_set_gpio_pdata();
+	wc_set_v1p2_pdata();
 	wc_set_v1p8_pdata();
 	wc_set_v2p8_pdata();
+	wc_set_vprog4b_pdata();
 	wc_set_thermal_pdata();
 	wcove_init_done = true;
 
-- 
1.7.9.5

