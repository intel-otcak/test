From bc667906c43a29d8392a23e77259eb66312a395c Mon Sep 17 00:00:00 2001
From: "Du, Changbin" <changbin.du@intel.com>
Date: Wed, 1 Apr 2015 17:12:13 +0800
Subject: [PATCH] usb/gadget: make composite gadget meet usb compliance for
 vbus draw

USB-IF compliance requirement limits the vbus current according to
current state. USB2 Spec requires that un-configured current must
be <= 100mA, for USB3 is 150mA, OTG is 2.5mA. Set corresponding vbus
draw current according to device mode.

Change-Id: I0cf38798069d2dc257d5006ef5fbb533c05251dc
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-9950
Signed-off-by: Du, Changbin <changbin.du@intel.com>
---
 drivers/usb/gadget/composite.c | 27 +++++++++++++++++++++------
 include/linux/usb/composite.h  |  8 ++++++++
 2 files changed, 29 insertions(+), 6 deletions(-)

diff --git a/drivers/usb/gadget/composite.c b/drivers/usb/gadget/composite.c
index ea1b73289924..ded21cea9445 100644
--- a/drivers/usb/gadget/composite.c
+++ b/drivers/usb/gadget/composite.c
@@ -579,6 +579,20 @@ static void device_qual(struct usb_composite_dev *cdev)
 }
 
 /*-------------------------------------------------------------------------*/
+static unsigned unconfigured_vbus_draw(struct usb_composite_dev *cdev)
+{
+	struct usb_gadget *g = cdev->gadget;
+	unsigned power;
+
+	if (gadget_is_otg(g))
+		power = USB_OTG_VBUS_DRAW_UNCONF;
+	else if (g->speed == USB_SPEED_SUPER)
+		power = USB_SUPER_VBUS_DRAW_UNCONF;
+	else
+		power = USB_HIGH_VBUS_DRAW_UNCONF;
+
+	return power;
+}
 
 static void reset_config(struct usb_composite_dev *cdev)
 {
@@ -602,7 +616,7 @@ static int set_config(struct usb_composite_dev *cdev,
 	struct usb_gadget	*gadget = cdev->gadget;
 	struct usb_configuration *c = NULL;
 	int			result = -EINVAL;
-	unsigned		power = gadget_is_otg(gadget) ? 8 : 100;
+	unsigned		power = unconfigured_vbus_draw(cdev);
 	int			tmp;
 
 	if (number) {
@@ -1746,7 +1760,7 @@ composite_suspend(struct usb_gadget *gadget)
 
 	cdev->suspended = 1;
 
-	usb_gadget_vbus_draw(gadget, 2);
+	usb_gadget_vbus_draw(gadget, USB_VBUS_DRAW_SUSPEND);
 }
 
 static void
@@ -1769,10 +1783,11 @@ composite_resume(struct usb_gadget *gadget)
 		}
 
 		maxpower = cdev->config->MaxPower;
-
-		usb_gadget_vbus_draw(gadget, maxpower ?
-			maxpower : CONFIG_USB_GADGET_VBUS_DRAW);
-	}
+		if (!maxpower)
+			maxpower = CONFIG_USB_GADGET_VBUS_DRAW;
+	} else
+		maxpower = unconfigured_vbus_draw(cdev);
+	usb_gadget_vbus_draw(gadget, maxpower);
 
 	cdev->suspended = 0;
 }
diff --git a/include/linux/usb/composite.h b/include/linux/usb/composite.h
index 5d2a6f234979..c0c7c8217e00 100644
--- a/include/linux/usb/composite.h
+++ b/include/linux/usb/composite.h
@@ -268,6 +268,14 @@ enum {
 	USB_GADGET_FIRST_AVAIL_IDX,
 };
 
+/* USB2 compliance require that un-configured current must be <= 100mA,
+ * USB3 require <=150mA, OTG require <=2.5mA.
+ */
+#define USB_HIGH_VBUS_DRAW_UNCONF	100
+#define USB_SUPER_VBUS_DRAW_UNCONF	150
+#define USB_OTG_VBUS_DRAW_UNCONF	2
+#define USB_VBUS_DRAW_SUSPEND		2
+
 /**
  * struct usb_composite_driver - groups configurations into a gadget
  * @name: For diagnostics, identifies the driver.
-- 
1.9.1

