From ac00e6fca558294c380aa6691155ef8d6d4e80e7 Mon Sep 17 00:00:00 2001
Message-Id: <ac00e6fca558294c380aa6691155ef8d6d4e80e7.1413837856.git.chang-joon.lee@intel.com>
In-Reply-To: <006497b7323eca32c2f489a1a9f662743c0d16d2.1413837855.git.chang-joon.lee@intel.com>
References: <006497b7323eca32c2f489a1a9f662743c0d16d2.1413837855.git.chang-joon.lee@intel.com>
From: Adam Rutkowski <adam.j.rutkowski@intel.com>
Date: Mon, 20 Jan 2014 12:36:48 +0100
Subject: [PATCH 058/312] FOR_UPSTREAM [VPG]: drm/i915: Adding sysfs file for
 thaw notification

Adding SysFS file to poll for device thaw from usermode. It allows
usermode applications collecting hardware performance counters to
re-initialize GPU after configuration is lost due to freeze.

Conflicts:

Issue: VIZ-3502
Change-Id: I6f3fbf1ca6ee79647272f9cf260d233b977de11a
Signed-off-by: Adam Rutkowski <adam.j.rutkowski@intel.com>
Reviewed-on: https://android.intel.com/162961
Reviewed-by: Madajczak, Tomasz <Tomasz.Madajczak@intel.com>
Reviewed-by: Bloomfield, Jon <jon.bloomfield@intel.com>
Tested-by: sys_abtbuild <sys_abtbuild@intel.com>
Reviewed-by: Yang, Fei <fei.yang@intel.com>
Reviewed-by: Nordell, Joakim <joakim.nordell@intel.com>
	drivers/gpu/drm/i915/i915_drv.c
---
 drivers/gpu/drm/i915/i915_drv.c   |    3 +++
 drivers/gpu/drm/i915/i915_sysfs.c |    8 ++++++++
 2 files changed, 11 insertions(+)

diff --git a/drivers/gpu/drm/i915/i915_drv.c b/drivers/gpu/drm/i915/i915_drv.c
index 0684906..52937bf 100644
--- a/drivers/gpu/drm/i915/i915_drv.c
+++ b/drivers/gpu/drm/i915/i915_drv.c
@@ -678,6 +678,9 @@ static int __i915_drm_thaw(struct drm_device *dev, bool restore_gtt_mappings)
 	mutex_unlock(&dev_priv->modeset_restore_lock);
 
 	intel_runtime_pm_put(dev_priv);
+
+	sysfs_notify(&dev->primary->kdev->kobj, NULL, "thaw");
+
 	return 0;
 }
 
diff --git a/drivers/gpu/drm/i915/i915_sysfs.c b/drivers/gpu/drm/i915/i915_sysfs.c
index 5254d14..99799d0 100644
--- a/drivers/gpu/drm/i915/i915_sysfs.c
+++ b/drivers/gpu/drm/i915/i915_sysfs.c
@@ -548,6 +548,13 @@ static ssize_t gt_rp_mhz_show(struct device *kdev, struct device_attribute *attr
 	return snprintf(buf, PAGE_SIZE, "%d\n", val);
 }
 
+static ssize_t thaw_show(struct device *kdev, struct device_attribute *attr,
+			 char *buf)
+{
+	return 0;
+}
+static DEVICE_ATTR(thaw, S_IRUGO, thaw_show, NULL);
+
 static const struct attribute *gen6_attrs[] = {
 	&dev_attr_gt_cur_freq_mhz.attr,
 	&dev_attr_gt_max_freq_mhz.attr,
@@ -555,6 +562,7 @@ static const struct attribute *gen6_attrs[] = {
 	&dev_attr_gt_RP0_freq_mhz.attr,
 	&dev_attr_gt_RP1_freq_mhz.attr,
 	&dev_attr_gt_RPn_freq_mhz.attr,
+	&dev_attr_thaw.attr,
 	NULL,
 };
 
-- 
1.7.9.5

