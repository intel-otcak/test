From 3ee1240fe17721cf2b21470ab8dfc78aa237e28a Mon Sep 17 00:00:00 2001
From: Liu Changcheng <changcheng.liu@intel.com>
Date: Fri, 29 May 2015 19:06:43 +0800
Subject: [PATCH] i2c: designware: reset i2c controller if in active state

When en/disabling i2c adapter failed, FSM of the controller is
in abnormal state and keeps active (DW_IC_STATUS(0) == 1).
In this case, we also need to force reset controller.

Change-Id: I7f9a3485ae0e432e86ec671f2bfe2fea1b2f2fa4
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-30930
Tracked-On: https://jira01.devtools.intel.com/browse/AKP-1824
Signed-off-by: Jun Zhang <jun.zhang@intel.com>
Signed-off-by: Chuansheng Liu <chuansheng.liu@intel.com>
Signed-off-by: Xiang Wang <xiang.a.wang@intel.com>
---
 drivers/i2c/busses/i2c-designware-core.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/drivers/i2c/busses/i2c-designware-core.c b/drivers/i2c/busses/i2c-designware-core.c
index 5c07e7f0b270..76add5195526 100644
--- a/drivers/i2c/busses/i2c-designware-core.c
+++ b/drivers/i2c/busses/i2c-designware-core.c
@@ -64,6 +64,7 @@
 #define DW_IC_CLR_GEN_CALL	0x68
 #define DW_IC_ENABLE		0x6c
 #define DW_IC_STATUS		0x70
+#define DW_IC_STATUS_ACTIVE	BIT(0)
 #define DW_IC_TXFLR		0x74
 #define DW_IC_RXFLR		0x78
 #define DW_IC_SDA_HOLD		0x7c
@@ -318,8 +319,10 @@ int i2c_dw_init(struct dw_i2c_dev *dev)
 	do {
 		/*
 		 * We need to reset the controller if it's not accessible
+		 * or in active state.
 		 */
-		if (dw_readl(dev, DW_IC_COMP_TYPE) == DW_IC_COMP_TYPE_VALUE)
+		if (dw_readl(dev, DW_IC_COMP_TYPE) == DW_IC_COMP_TYPE_VALUE &&
+		    !(dw_readl(dev, DW_IC_STATUS) & DW_IC_STATUS_ACTIVE))
 			break;
 		/*
 		 * reset apb and clock domain
-- 
1.9.1

