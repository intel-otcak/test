From 184558ef90bf4018b46c069907faf399c8e08588 Mon Sep 17 00:00:00 2001
Message-Id: <184558ef90bf4018b46c069907faf399c8e08588.1421830308.git.chang-joon.lee@intel.com>
In-Reply-To: <49dde4951ccd12ce81e60aed3b24793e0ac12fed.1421830308.git.chang-joon.lee@intel.com>
References: <49dde4951ccd12ce81e60aed3b24793e0ac12fed.1421830308.git.chang-joon.lee@intel.com>
From: Yogesh Mohan Marimuthu <yogesh.mohan.marimuthu@intel.com>
Date: Mon, 15 Dec 2014 18:43:51 +0530
Subject: [PATCH 05/17] REVERTME [VPG]: drm/i915: wa for mipi cmd mode port
 reg cannot be read in CHV

MIPI Port C control register cannot be read for CHV Soc stepping
less than C0. Put a SW WA to work around this problem in this patch.

REVERTME: Once everyone in Intel has started using CHV SoC steppng
>= C0, then this patch can be reverted.

Issue: GMINL-1644
Change-Id: I2d750253683f150e9349adeb0b68d7636383453b
Signed-off-by: Shobhit Kumar <shobhit.kumar@intel.com>
Signed-off-by: Yogesh Mohan Marimuthu <yogesh.mohan.marimuthu@intel.com>
---
 drivers/gpu/drm/i915/intel_dsi.c |   35 +++++++++++++++++++++++++++--------
 drivers/gpu/drm/i915/intel_dsi.h |    3 +++
 2 files changed, 30 insertions(+), 8 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_dsi.c b/drivers/gpu/drm/i915/intel_dsi.c
index 09275d5..609b597 100644
--- a/drivers/gpu/drm/i915/intel_dsi.c
+++ b/drivers/gpu/drm/i915/intel_dsi.c
@@ -202,9 +202,15 @@ static void intel_dsi_port_enable(struct intel_encoder *encoder)
 
 		I915_WRITE(MIPI_PORT_CTRL(0), temp);
 
-		temp = I915_READ(MIPI_PORT_CTRL(1));
-		temp = temp | port_control;
-		I915_WRITE(MIPI_PORT_CTRL(1), temp);
+		if (pipe && IS_CHERRYVIEW(dev_priv->dev) && STEP_TO(STEP_B3)) {
+			intel_dsi->port_ctrl_reg_val |= port_control;
+			I915_WRITE(MIPI_PORT_CTRL(1),
+						intel_dsi->port_ctrl_reg_val);
+		} else {
+			temp = I915_READ(MIPI_PORT_CTRL(1));
+			temp = temp | port_control;
+			I915_WRITE(MIPI_PORT_CTRL(1), temp);
+		}
 
 		if ((intel_dsi->dual_link & MIPI_DUAL_LINK_FRONT_BACK) &&
 			((IS_CHERRYVIEW(dev_priv->dev) && STEP_FROM(STEP_B0)) ||
@@ -221,10 +227,17 @@ static void intel_dsi_port_enable(struct intel_encoder *encoder)
 	/* Enable the ports */
 
 	do {
-		temp = I915_READ(MIPI_PORT_CTRL(pipe));
-		temp |= is_cmd_mode(intel_dsi) ?
+		if (pipe && IS_CHERRYVIEW(dev_priv->dev) && STEP_TO(STEP_B3)) {
+			intel_dsi->port_ctrl_reg_val |= is_cmd_mode(intel_dsi) ?
+					TEARING_EFFECT_GPIO : DPI_ENABLE;
+			I915_WRITE(MIPI_PORT_CTRL(pipe),
+						intel_dsi->port_ctrl_reg_val);
+		} else {
+			temp = I915_READ(MIPI_PORT_CTRL(pipe));
+			temp |= is_cmd_mode(intel_dsi) ?
 					TEARING_EFFECT_GPIO : DPI_ENABLE;
-		I915_WRITE(MIPI_PORT_CTRL(pipe), temp);
+			I915_WRITE(MIPI_PORT_CTRL(pipe), temp);
+		}
 
 		pipe = PIPE_B;
 	} while (--count > 0);
@@ -384,8 +397,14 @@ static void intel_dsi_port_disable(struct intel_encoder *encoder)
 
 	wait_for_dsi_fifo_empty(intel_dsi);
 
-	I915_WRITE(MIPI_PORT_CTRL(pipe), 0);
-	POSTING_READ(MIPI_PORT_CTRL(pipe));
+	if (pipe && IS_CHERRYVIEW(dev_priv->dev) && STEP_TO(STEP_B3)) {
+		/* cht hw issue that MIPI port C reg cannot be read */
+		I915_WRITE(MIPI_PORT_CTRL(pipe), 0);
+		intel_dsi->port_ctrl_reg_val = 0;
+	} else {
+		I915_WRITE(MIPI_PORT_CTRL(pipe), 0);
+		POSTING_READ(MIPI_PORT_CTRL(pipe));
+	}
 
 	if (intel_dsi->dual_link) {
 		I915_WRITE(MIPI_PORT_CTRL(pipe ? 0 : 1), 0);
diff --git a/drivers/gpu/drm/i915/intel_dsi.h b/drivers/gpu/drm/i915/intel_dsi.h
index 8cf90c1..e412aca 100644
--- a/drivers/gpu/drm/i915/intel_dsi.h
+++ b/drivers/gpu/drm/i915/intel_dsi.h
@@ -506,6 +506,9 @@ struct intel_dsi {
 
 	u8 dual_link;
 	u8 pixel_overlap;
+
+	/* cht hw issue that MIPI port C reg cannot be read */
+	u32 port_ctrl_reg_val;
 };
 
 static inline struct intel_dsi *enc_to_intel_dsi(struct drm_encoder *encoder)
-- 
1.7.9.5

