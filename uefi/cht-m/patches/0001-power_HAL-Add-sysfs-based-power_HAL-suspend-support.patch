From 7ee6fbe32c6561f8a596efc17d2ecb8bd45a5476 Mon Sep 17 00:00:00 2001
From: Sathyanarayanan Kuppuswamy <sathyanarayanan.kuppuswamy@intel.com>
Date: Fri, 25 Oct 2013 13:52:41 -0700
Subject: [PATCH] power_hal: Add sysfs based power_hal suspend support


This patch implements the sysfs based PowerHAL interface that
deprecates early suspend support that has been removed.

Added a new sysfs group for power_hal suspend under
/sys/power/ directory. Every device that needs power_hal
suspend support needs to call following routines
to register/unregister power_hal suspend support.

register_power_hal_suspend_device():
Registers power_hal suspend support for the given device. Also,
Calling this routine will create a device specific symlink
under /sys/power/power_hal directory.

unregister_power_hal_suspend_device():
Unregisters power_hal suspend support for the given device. Also,
Calling this routine will remove a device specific symlink
under /sys/power/power_hal_suspend directory.

`ls /sys/power/power_hal/` from the userspace will give
us the list of devices that supports power_hal suspend functionality.

Signed-off-by: Sathyanarayanan Kuppuswamy <sathyanarayanan.kuppuswamy@intel.com>
---
 include/linux/power_hal_sysfs.h |   19 +++++++++++++++++++
 kernel/power/main.c                 |   22 ++++++++++++++++++++++
 2 files changed, 41 insertions(+)
 create mode 100644 include/linux/power_hal_sysfs.h

Index: linux/include/linux/power_hal_sysfs.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ linux/include/linux/power_hal_sysfs.h	2014-04-24 14:52:59.641755475 -0700
@@ -0,0 +1,19 @@
+/*
+ * power_hal_sysfs.h: Early suspend sysfs header file
+ *
+ * (C) Copyright 2013 Intel Corporation
+ * Author: Sathyanarayanan KN(sathyanarayanan.kuppuswamy@intel.com)
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; version 2
+ * of the License.
+ */
+
+#ifndef _LINUX_POWER_HAL_SUSPEND_SYSFS_H
+#define _LINUX_POWER_HAL_SUSPEND_SYSFS_H
+
+int register_power_HAL_suspend_device(struct device *dev);
+void unregister_power_HAL_suspend_device(struct device *dev);
+#endif
+
Index: linux/kernel/power/main.c
===================================================================
--- linux.orig/kernel/power/main.c	2014-04-24 14:51:02.000000000 -0700
+++ linux/kernel/power/main.c	2014-04-24 14:57:21.441749874 -0700
@@ -15,6 +15,7 @@
 #include <linux/workqueue.h>
 #include <linux/debugfs.h>
 #include <linux/seq_file.h>
+#include <linux/power_hal_sysfs.h>
 
 #include "power.h"
 
@@ -277,6 +278,7 @@
 #endif /* CONFIG_PM_SLEEP_DEBUG */
 
 struct kobject *power_kobj;
+struct kobject *power_hal_kobj;
 
 /**
  *	state - control system power state.
@@ -630,6 +632,22 @@
 static inline int pm_start_workqueue(void) { return 0; }
 #endif
 
+int register_power_HAL_suspend_device(struct device *dev)
+{
+	if (!power_hal_kobj || !dev)
+		return -ENODEV;
+
+	return sysfs_create_link(power_hal_kobj, &dev->kobj,
+			dev_name(dev));
+}
+EXPORT_SYMBOL(register_power_HAL_suspend_device);
+
+void unregister_power_HAL_suspend_device(struct device *dev)
+{
+	sysfs_delete_link(power_hal_kobj, &dev->kobj, dev_name(dev));
+}
+EXPORT_SYMBOL(unregister_power_HAL_suspend_device);
+
 static int __init pm_init(void)
 {
 	int error = pm_start_workqueue();
@@ -638,8 +656,12 @@
 	hibernate_image_size_init();
 	hibernate_reserved_size_init();
 	power_kobj = kobject_create_and_add("power", NULL);
+	power_hal_kobj = kobject_create_and_add("power_HAL_suspend",
+					power_kobj);
 	if (!power_kobj)
 		return -ENOMEM;
+	if (!power_hal_kobj)
+		return -ENOMEM;
 	error = sysfs_create_group(power_kobj, &attr_group);
 	if (error)
 		return error;
