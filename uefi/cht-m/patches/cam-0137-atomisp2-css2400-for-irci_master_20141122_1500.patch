From bc78b87414e38200e1d65180e251dee21b4734a3 Mon Sep 17 00:00:00 2001
From: Pengpeng Cui <pengpengx.cui@intel.com>
Date: Mon, 24 Nov 2014 09:39:57 +0800
Subject: [PATCH 4/8] atomisp2: css2400 for irci_master_20141122_1500.

Merge CSS2.1 for css2400  for irci_master_20141122_1500 firmware tag

Change-Id: If774dbff83dbe5d28665f77421a1b8a89c289c7c
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-10133
Signed-off-by: Pengpeng Cui <pengpengx.cui@intel.com>
Reviewed-on: https://icggerrit.ir.intel.com/29833
Maintainer: Wei Tao <wei.tao@intel.com>
Approver: Wei Tao <wei.tao@intel.com>
Build: Wei Tao <wei.tao@intel.com>
Reviewed-by: Wei Tao <wei.tao@intel.com>
---
 .../css2400b0_v21/base/refcount/src/refcount.c     |    4 +-
 .../camera/pipe/interface/ia_css_pipe_binarydesc.h |    1 -
 .../camera/pipe/interface/ia_css_pipe_stagedesc.h  |    1 -
 .../camera/pipe/src/pipe_binarydesc.c              |  141 +-------
 .../css2400b0_v21/camera/pipe/src/pipe_stagedesc.c |    5 -
 .../hive_isp_css_2400_system/host/gp_timer.c       |    2 +-
 .../css2400b0_v21/hive_isp_css_include/bamem.h     |   54 +++
 .../hive_isp_css_include/host/isp2600_config.h     |    1 +
 .../hive_isp_css_include/host/isp2601_config.h     |    1 +
 .../hive_isp_css_include/host/ref_vector_func.h    |   65 ++--
 .../host/ref_vector_func_types.h                   |    6 +-
 .../media/pci/atomisp2/css2400b0_v21/ia_css.h      |    4 +-
 .../pci/atomisp2/css2400b0_v21/ia_css_host_data.h  |    4 +-
 .../pci/atomisp2/css2400b0_v21/ia_css_types.h      |    4 +-
 .../atomisp2/css2400b0_v21/ia_css_version_data.h   |    2 +-
 .../isp/kernels/bnr/bnr2_2/ia_css_bnr2_2_param.h   |    3 -
 .../isp/kernels/eed1_8/ia_css_eed1_8.host.c        |    6 +-
 .../isp/kernels/eed1_8/ia_css_eed1_8_param.h       |   36 +-
 .../isp/kernels/eed1_8/ia_css_eed1_8_state.h       |    5 +
 .../isp/kernels/hdr/ia_css_hdr.host.c              |    6 +-
 .../isp/kernels/hdr/ia_css_hdr.host.h              |    4 +-
 .../isp/kernels/hdr/ia_css_hdr_param.h             |    4 +-
 .../isp/kernels/hdr/ia_css_hdr_types.h             |    4 +-
 .../isp/kernels/iefd2_6/ia_css_iefd2_6.host.c      |    6 +-
 .../css2400b0_v21/isp/modes/interface/isp_const.h  |   15 +-
 .../runtime/binary/interface/ia_css_binary.h       |    2 -
 .../css2400b0_v21/runtime/binary/src/binary.c      |    4 +-
 .../runtime/debug/interface/ia_css_debug_pipe.h    |    4 +-
 .../css2400b0_v21/runtime/debug/src/ia_css_debug.c |    9 +-
 .../runtime/pipeline/interface/ia_css_pipeline.h   |    1 -
 .../css2400b0_v21/runtime/pipeline/src/pipeline.c  |    1 -
 .../media/pci/atomisp2/css2400b0_v21/sh_css.c      |  200 ++++++++---
 .../pci/atomisp2/css2400b0_v21/sh_css_firmware.c   |    4 +-
 .../pci/atomisp2/css2400b0_v21/sh_css_internal.h   |    9 +-
 .../pci/atomisp2/css2400b0_v21/sh_css_params.c     |    7 +-
 .../media/pci/atomisp2/css2400b0_v21/spmem_dump.c  |  358 ++++++++++----------
 36 files changed, 519 insertions(+), 464 deletions(-)
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_include/bamem.h

diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/base/refcount/src/refcount.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/base/refcount/src/refcount.c
index ade6138..3e2e19d 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/base/refcount/src/refcount.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/base/refcount/src/refcount.c
@@ -202,8 +202,8 @@ bool ia_css_refcount_decrement(int32_t id, hrt_vaddress ptr)
 		IA_CSS_ERROR("id %x, ptr 0x%x entry %p entry->id %x entry->count %d\n",
 			id, ptr, entry, entry->id, entry->count);
 	else
-		IA_CSS_ERROR("entry NULL for ptr 0x%x\n", ptr);
-	/* assert(false); */
+		IA_CSS_ERROR("entry NULL\n");
+	assert(false);
 
 	return false;
 }
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/camera/pipe/interface/ia_css_pipe_binarydesc.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/camera/pipe/interface/ia_css_pipe_binarydesc.h
index 60beb82..9587ee3 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/camera/pipe/interface/ia_css_pipe_binarydesc.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/camera/pipe/interface/ia_css_pipe_binarydesc.h
@@ -88,7 +88,6 @@ extern enum ia_css_err sh_css_bds_factor_get_numerator_denominator(
 extern enum ia_css_err ia_css_pipe_get_preview_binarydesc(
 	struct ia_css_pipe * const pipe,
 	struct ia_css_binary_descr *preview_descr,
-	struct ia_css_frame_info *original_in_info,
 	struct ia_css_frame_info *in_info,
 	struct ia_css_frame_info *bds_out_info,
 	struct ia_css_frame_info *out_info,
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/camera/pipe/interface/ia_css_pipe_stagedesc.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/camera/pipe/interface/ia_css_pipe_stagedesc.h
index dfe8d32..8e8d830 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/camera/pipe/interface/ia_css_pipe_stagedesc.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/camera/pipe/interface/ia_css_pipe_stagedesc.h
@@ -33,7 +33,6 @@ extern void ia_css_pipe_get_generic_stage_desc(
 	struct ia_css_binary *binary,
 	struct ia_css_frame *out_frame[],
 	struct ia_css_frame *in_frame,
-	struct ia_css_frame *cc_frame,
 	struct ia_css_frame *vf_frame);
 
 extern void ia_css_pipe_get_firmwares_stage_desc(
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/camera/pipe/src/pipe_binarydesc.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/camera/pipe/src/pipe_binarydesc.c
index 3c708ef..ae41372 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/camera/pipe/src/pipe_binarydesc.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/camera/pipe/src/pipe_binarydesc.c
@@ -40,7 +40,6 @@ static void pipe_binarydesc_get_offline(
 	struct ia_css_pipe const * const pipe,
 	const int mode,
 	struct ia_css_binary_descr *descr,
-	struct ia_css_frame_info *original_in_info,
 	struct ia_css_frame_info *in_info,
 	struct ia_css_frame_info *out_info[],
 	struct ia_css_frame_info *vf_info)
@@ -67,7 +66,6 @@ static void pipe_binarydesc_get_offline(
 	descr->dvs_env.width = 0;
 	descr->dvs_env.height = 0;
 	descr->stream_format = pipe->stream->config.input_config.format;
-	descr->original_in_info = original_in_info;
 	descr->in_info = in_info;
 	descr->bds_out_info = NULL;
 	for (i = 0; i < IA_CSS_BINARY_MAX_OUTPUT_PORTS; i++)
@@ -97,7 +95,7 @@ void ia_css_pipe_get_copy_binarydesc(
 	for (i = 1; i < IA_CSS_BINARY_MAX_OUTPUT_PORTS; i++)
 		out_infos[i] = NULL;
 	pipe_binarydesc_get_offline(pipe, IA_CSS_BINARY_MODE_COPY,
-				    copy_descr, NULL, in_info, out_infos, vf_info);
+				    copy_descr, in_info, out_infos, vf_info);
 	copy_descr->online = true;
 	copy_descr->continuous = false;
 	copy_descr->two_ppc = (pipe->stream->config.pixels_per_clock == 2);
@@ -123,15 +121,8 @@ void ia_css_pipe_get_vfpp_binarydesc(
 	for (i = 1; i < IA_CSS_BINARY_MAX_OUTPUT_PORTS; i++)
 		out_infos[i] = NULL;
 
-	/*
-	 * zhengjie.lu@intel.com
-	 *
-	 * TODO
-	 * - Check with the ISP engineers to see whether "vf_pp" needs
-	 *   the valid input argument "original_in_info" or not.
-	 */
 	pipe_binarydesc_get_offline(pipe, IA_CSS_BINARY_MODE_VF_PP,
-			       vf_pp_descr, NULL, in_info, out_infos, NULL);
+			       vf_pp_descr, in_info, out_infos, NULL);
 	vf_pp_descr->enable_fractional_ds = true;
 	IA_CSS_LEAVE_PRIVATE("");
 }
@@ -220,7 +211,6 @@ static enum ia_css_err binarydesc_calculate_bds_factor(
 enum ia_css_err ia_css_pipe_get_preview_binarydesc(
 	struct ia_css_pipe * const pipe,
 	struct ia_css_binary_descr *preview_descr,
-	struct ia_css_frame_info *original_in_info,
 	struct ia_css_frame_info *in_info,
 	struct ia_css_frame_info *bds_out_info,
 	struct ia_css_frame_info *out_info,
@@ -239,14 +229,6 @@ enum ia_css_err ia_css_pipe_get_preview_binarydesc(
 
 	/*
 	 * Set up the info of the input frame with
-	 * the original resolution
-	 */
-	original_in_info->res = pipe->stream->config.input_config.input_res;
-	original_in_info->padded_width = original_in_info->res.width;
-	original_in_info->raw_bit_depth = ia_css_pipe_util_pipe_input_format_bpp(pipe);
-
-	/*
-	 * Set up the info of the input frame with
 	 * the ISP required resolution
 	 */
 	in_info->res = pipe->config.input_effective_res;
@@ -255,23 +237,15 @@ enum ia_css_err ia_css_pipe_get_preview_binarydesc(
 
 	if (ia_css_util_is_input_format_yuv(pipe->stream->config.input_config.format))
 		mode = IA_CSS_BINARY_MODE_COPY;
-	else {
-		original_in_info->format = IA_CSS_FRAME_FORMAT_RAW;
+	else
 		in_info->format = IA_CSS_FRAME_FORMAT_RAW;
-	}
 
 	out_infos[0] = out_info;
 	for (i = 1; i < IA_CSS_BINARY_MAX_OUTPUT_PORTS; i++)
 		out_infos[i] = NULL;
 
-	/*
-	 * zhengjie.lu@intel.com
-	 *
-	 * TODO
-	 * - Pass "preview" the valid input argument "original_in_info".
-	 */
 	pipe_binarydesc_get_offline(pipe, mode,
-			       preview_descr, original_in_info, in_info, out_infos, vf_info);
+			       preview_descr, in_info, out_infos, vf_info);
 	if (pipe->stream->config.online) {
 		preview_descr->online = pipe->stream->config.online;
 		preview_descr->two_ppc =
@@ -389,15 +363,8 @@ enum ia_css_err ia_css_pipe_get_video_binarydesc(
 	for (i = 1; i < IA_CSS_BINARY_MAX_OUTPUT_PORTS; i++)
 		out_infos[i] = NULL;
 
-	/*
-	 * zhengjie.lu@intel.com
-	 *
-	 * TODO
-	 * - Pass "video" the valid input argument
-	 *   "original_in_info".
-	 */
 	pipe_binarydesc_get_offline(pipe, mode,
-	       video_descr, NULL, in_info, out_infos, vf_info);
+	       video_descr, in_info, out_infos, vf_info);
 
 	if (pipe->stream->config.online) {
 		video_descr->online = pipe->stream->config.online;
@@ -523,17 +490,10 @@ void ia_css_pipe_get_yuvscaler_binarydesc(
 	 * fails
 	 */
 
-	/*
-	 * zhengjie.lu@intel.com
-	 *
-	 * TODO
-	 * - Check with the ISP engineers to see whether "yuv_scalar"
-	 *   needs the valid input argument "original_in_info" or not.
-	 */
 	pipe_binarydesc_get_offline(pipe,
 			       IA_CSS_BINARY_MODE_CAPTURE_PP,
 			       yuv_scaler_descr,
-			       NULL, in_info, out_infos,
+			       in_info, out_infos,
 			       (vf_info->res.width == 0 && vf_info->res.height == 0) ? NULL : vf_info);
 
 	yuv_scaler_descr->enable_fractional_ds = true;
@@ -570,17 +530,10 @@ void ia_css_pipe_get_capturepp_binarydesc(
 	for (i = 1; i < IA_CSS_BINARY_MAX_OUTPUT_PORTS; i++)
 		out_infos[i] = NULL;
 
-	/*
-	 * zhengjie.lu@intel.com
-	 *
-	 * TODO
-	 * - Check with the ISP engineers to see whether "capture_pp" needs
-	 *   the valid input argument "original_in_info" or not.
-	 */
 	pipe_binarydesc_get_offline(pipe,
 			       IA_CSS_BINARY_MODE_CAPTURE_PP,
 			       capture_pp_descr,
-			       NULL, in_info, out_infos, vf_info);
+			       in_info, out_infos, vf_info);
 
 	capture_pp_descr->enable_fractional_ds = true;
 	capture_pp_descr->enable_xnr =
@@ -624,14 +577,8 @@ void ia_css_pipe_get_primary_binarydesc(
 	for (i = 1; i < IA_CSS_BINARY_MAX_OUTPUT_PORTS; i++)
 		out_infos[i] = NULL;
 
-	/*
-	 * zhengjie.lu@intel.com
-	 *
-	 * TODO
-	 * - Pass "prim" the valid input argument "original_in_info".
-	 */
 	pipe_binarydesc_get_offline(pipe, mode,
-			       prim_descr, NULL, in_info, out_infos, vf_info);
+			       prim_descr, in_info, out_infos, vf_info);
 
 	if (pipe->stream->config.online &&
 	    pipe->stream->config.mode != IA_CSS_INPUT_MODE_MEMORY) {
@@ -674,15 +621,8 @@ void ia_css_pipe_get_pre_gdc_binarydesc(
 	for (i = 1; i < IA_CSS_BINARY_MAX_OUTPUT_PORTS; i++)
 		out_infos[i] = NULL;
 
-	/*
-	 * zhengjie.lu@intel.com
-	 *
-	 * TODO
-	 * - Check with the ISP engineers to see whether "pre_de" needs
-	 *   the valid input argument "original_in_info" or not.
-	 */
 	pipe_binarydesc_get_offline(pipe, IA_CSS_BINARY_MODE_PRE_ISP,
-			       pre_gdc_descr, NULL, in_info, out_infos, NULL);
+			       pre_gdc_descr, in_info, out_infos, NULL);
 	pre_gdc_descr->isp_pipe_version = pipe->config.isp_pipe_version;
 	IA_CSS_LEAVE_PRIVATE("");
 }
@@ -707,15 +647,8 @@ void ia_css_pipe_get_gdc_binarydesc(
 	for (i = 1; i < IA_CSS_BINARY_MAX_OUTPUT_PORTS; i++)
 		out_infos[i] = NULL;
 
-	/*
-	 * zhengjie.lu@intel.com
-	 *
-	 * TODO
-	 * - Check with the ISP engineers to see whether "gdc" needs
-	 *   the valid input argument "original_in_info" or not.
-	 */
 	pipe_binarydesc_get_offline(pipe, IA_CSS_BINARY_MODE_GDC,
-			       gdc_descr, NULL, in_info, out_infos, NULL);
+			       gdc_descr, in_info, out_infos, NULL);
 	IA_CSS_LEAVE_PRIVATE("");
 }
 
@@ -742,15 +675,8 @@ void ia_css_pipe_get_post_gdc_binarydesc(
 	for (i = 1; i < IA_CSS_BINARY_MAX_OUTPUT_PORTS; i++)
 		out_infos[i] = NULL;
 
-	/*
-	 * zhengjie.lu@intel.com
-	 *
-	 * TODO
-	 * - Check with the ISP engineers to see whether "post_gdc" needs
-	 *   the valid input argument "original_in_info" or not.
-	 */
 	pipe_binarydesc_get_offline(pipe, IA_CSS_BINARY_MODE_POST_ISP,
-			       post_gdc_descr, NULL, in_info, out_infos, vf_info);
+			       post_gdc_descr, in_info, out_infos, vf_info);
 
 	post_gdc_descr->isp_pipe_version = pipe->config.isp_pipe_version;
 	IA_CSS_LEAVE_PRIVATE("");
@@ -778,25 +704,11 @@ void ia_css_pipe_get_pre_de_binarydesc(
 		out_infos[i] = NULL;
 
 	if (pipe->config.isp_pipe_version == 1)
-		/*
-		 * zhengjie.lu@intel.com
-		 *
-		 * TODO
-		 * - Check with the ISP engineers to see whether "pre_de" needs
-		 *   the valid input argument "original_in_info" or not.
-		 */
 		pipe_binarydesc_get_offline(pipe, IA_CSS_BINARY_MODE_PRE_ISP,
-				       pre_de_descr, NULL, in_info, out_infos, NULL);
+				       pre_de_descr, in_info, out_infos, NULL);
 	else {
-		/*
-		 * zhengjie.lu@intel.com
-		 *
-		 * TODO
-		 * - Check with the ISP engineers to see whether "pre_de" needs
-		 *   the valid input argument "original_in_info" or not.
-		 */
 		pipe_binarydesc_get_offline(pipe, IA_CSS_BINARY_MODE_PRE_DE,
-				       pre_de_descr, NULL, in_info, out_infos, NULL);
+				       pre_de_descr, in_info, out_infos, NULL);
 	}
 
 	if (pipe->stream->config.online) {
@@ -830,15 +742,8 @@ void ia_css_pipe_get_pre_anr_binarydesc(
 	for (i = 1; i < IA_CSS_BINARY_MAX_OUTPUT_PORTS; i++)
 		out_infos[i] = NULL;
 
-	/*
-	 * zhengjie.lu@intel.com
-	 *
-	 * TODO
-	 * - Check with the ISP engineers to see whether "pre_anr" needs
-	 *   the valid input argument "original_in_info" or not.
-	 */
 	pipe_binarydesc_get_offline(pipe, IA_CSS_BINARY_MODE_PRE_ISP,
-			       pre_anr_descr, NULL, in_info, out_infos, NULL);
+			       pre_anr_descr, in_info, out_infos, NULL);
 
 	if (pipe->stream->config.online) {
 		pre_anr_descr->online = true;
@@ -871,15 +776,8 @@ void ia_css_pipe_get_anr_binarydesc(
 	for (i = 1; i < IA_CSS_BINARY_MAX_OUTPUT_PORTS; i++)
 		out_infos[i] = NULL;
 
-	/*
-	 * zhengjie.lu@intel.com
-	 *
-	 * TODO
-	 * - Check with the ISP engineers to see whether "anr" needs
-	 *   the valid input argument "original_in_info" or not.
-	 */
 	pipe_binarydesc_get_offline(pipe, IA_CSS_BINARY_MODE_ANR,
-			       anr_descr, NULL, in_info, out_infos, NULL);
+			       anr_descr, in_info, out_infos, NULL);
 
 	anr_descr->isp_pipe_version = pipe->config.isp_pipe_version;
 	IA_CSS_LEAVE_PRIVATE("");
@@ -909,15 +807,8 @@ void ia_css_pipe_get_post_anr_binarydesc(
 	for (i = 1; i < IA_CSS_BINARY_MAX_OUTPUT_PORTS; i++)
 		out_infos[i] = NULL;
 
-	/*
-	 * zhengjie.lu@intel.com
-	 *
-	 * TODO
-	 * - Check with the ISP engineers to see whether "post_anr" needs
-	 *   the valid input argument "original_in_info" or not.
-	 */
 	pipe_binarydesc_get_offline(pipe, IA_CSS_BINARY_MODE_POST_ISP,
-			       post_anr_descr, NULL, in_info, out_infos, vf_info);
+			       post_anr_descr, in_info, out_infos, vf_info);
 
 	post_anr_descr->isp_pipe_version = pipe->config.isp_pipe_version;
 	IA_CSS_LEAVE_PRIVATE("");
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/camera/pipe/src/pipe_stagedesc.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/camera/pipe/src/pipe_stagedesc.c
index 62348df..8ff28f6 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/camera/pipe/src/pipe_stagedesc.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/camera/pipe/src/pipe_stagedesc.c
@@ -28,7 +28,6 @@ void ia_css_pipe_get_generic_stage_desc(
 	struct ia_css_binary *binary,
 	struct ia_css_frame *out_frame[],
 	struct ia_css_frame *in_frame,
-	struct ia_css_frame *cc_frame,
 	struct ia_css_frame *vf_frame)
 {
 	unsigned int i;
@@ -39,7 +38,6 @@ void ia_css_pipe_get_generic_stage_desc(
 	stage_desc->sp_func = IA_CSS_PIPELINE_NO_FUNC;
 	stage_desc->max_input_width = 0;
 	stage_desc->mode = binary->info->sp.pipeline.mode;
-	stage_desc->cc_frame = cc_frame;
 	stage_desc->in_frame = in_frame;
 	for (i = 0; i < IA_CSS_BINARY_MAX_OUTPUT_PORTS; i++) {
 		stage_desc->out_frame[i] = out_frame[i];
@@ -64,7 +62,6 @@ void ia_css_pipe_get_firmwares_stage_desc(
 	stage_desc->sp_func = IA_CSS_PIPELINE_NO_FUNC;
 	stage_desc->max_input_width = 0;
 	stage_desc->mode = mode;
-	stage_desc->cc_frame = NULL;
 	stage_desc->in_frame = in_frame;
 	for (i = 0; i < IA_CSS_BINARY_MAX_OUTPUT_PORTS; i++) {
 		stage_desc->out_frame[i] = out_frame[i];
@@ -85,7 +82,6 @@ void ia_css_pipe_get_acc_stage_desc(
 	stage_desc->sp_func = IA_CSS_PIPELINE_NO_FUNC;
 	stage_desc->max_input_width = 0;
 	stage_desc->mode = IA_CSS_BINARY_MODE_VF_PP;
-	stage_desc->cc_frame = NULL;
 	stage_desc->in_frame = NULL;
 	for (i = 0; i < IA_CSS_BINARY_MAX_OUTPUT_PORTS; i++) {
 		stage_desc->out_frame[i] = NULL;
@@ -107,7 +103,6 @@ void ia_css_pipe_get_sp_func_stage_desc(
 	stage_desc->sp_func = sp_func;
 	stage_desc->max_input_width = max_input_width;
 	stage_desc->mode = (unsigned int)-1;
-	stage_desc->cc_frame = NULL;
 	stage_desc->in_frame = NULL;
 	stage_desc->out_frame[0] = out_frame;
 	for (i = 1; i < IA_CSS_BINARY_MAX_OUTPUT_PORTS; i++) {
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_2400_system/host/gp_timer.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_2400_system/host/gp_timer.c
index 6859403..006c735 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_2400_system/host/gp_timer.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_2400_system/host/gp_timer.c
@@ -19,7 +19,7 @@
  *
  */
 
-#include <stdint.h> /*uint32_t */
+#include <type_support.h> /*uint32_t */
 #include "gp_timer.h"   /*system_local.h,
 			  gp_timer_public.h*/
 
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_include/bamem.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_include/bamem.h
new file mode 100644
index 0000000..1887726
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_include/bamem.h
@@ -0,0 +1,54 @@
+/*
+ * Support for Intel Camera Imaging ISP subsystem.
+ *
+ * Copyright (c) 2010 - 2014 Intel Corporation. All Rights Reserved.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License version
+ * 2 as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+ * 02110-1301, USA.
+ *
+ */
+
+#ifndef __BAMEM_H_INCLUDED__
+#define __BAMEM_H_INCLUDED__
+
+/*
+ * This file is included on every cell {SP,ISP,host} and on every system
+ * that uses the BAMEM device. It defines the API to DLI bridge
+ *
+ * System and cell specific interfaces and inline code are included
+ * conditionally through Makefile path settings.
+ *
+ *  - .        system and cell agnostic interfaces, constants and identifiers
+ *	- public:  system agnostic, cell specific interfaces
+ *	- private: system dependent, cell specific interfaces & inline implementations
+ *	- global:  system specific constants and identifiers
+ *	- local:   system and cell specific constants and identifiers
+ */
+
+#include "storage_class.h"
+
+#include "system_local.h"
+#include "bamem_local.h"
+
+#ifndef __INLINE_BAMEM__
+#define STORAGE_CLASS_BAMEM_H STORAGE_CLASS_EXTERN
+#define STORAGE_CLASS_BAMEM_C
+#include "bamem_public.h"
+#else  /* __INLINE_BAMEM__ */
+#define STORAGE_CLASS_BAMEM_H STORAGE_CLASS_INLINE
+#define STORAGE_CLASS_BAMEM_C STORAGE_CLASS_INLINE
+#include "bamem_private.h"
+#endif /* __INLINE_BAMEM__ */
+
+#endif /* __BAMEM_H_INCLUDED__ */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_include/host/isp2600_config.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_include/host/isp2600_config.h
index 655ec7c..8b6abf3 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_include/host/isp2600_config.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_include/host/isp2600_config.h
@@ -30,6 +30,7 @@
 #define ROUNDMODE           ROUND_NEAREST_EVEN
 #define MAX_SHIFT_1W        (NUM_BITS-1)   /* Max number of bits a 1w input can be shifted */
 #define MAX_SHIFT_2W        (2*NUM_BITS-1) /* Max number of bits a 2w input can be shifted */
+#define ISP_NWAY		32 /* Number of elements in a vector in ISP 2600 */
 
 #define HAS_div_unit
 #define HAS_1w_sqrt_u_unit
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_include/host/isp2601_config.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_include/host/isp2601_config.h
index b35e0e8e..4410b42 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_include/host/isp2601_config.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_include/host/isp2601_config.h
@@ -24,6 +24,7 @@
 
 #define NUM_BITS 16
 #define ISP_VEC_ELEMBITS NUM_BITS
+#define ISP_NWAY		32
 #define NUM_SLICE_ELEMS 4
 #define ROUNDMODE           ROUND_NEAREST_EVEN
 #define MAX_SHIFT_1W        (NUM_BITS-1)   /* Max number of bits a 1w input can be shifted */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_include/host/ref_vector_func.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_include/host/ref_vector_func.h
index 27ed331..fce15a5 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_include/host/ref_vector_func.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_include/host/ref_vector_func.h
@@ -127,8 +127,8 @@ STORAGE_CLASS_REF_VECTOR_FUNC_H tvector1w OP_1w_output_scaling_clamping(
 
 /** @brief Config Unit Piecewiselinear estimation
  *
- * @param[in] a 	           input
- * @param[in] test_config_points   config parameter structure
+ * @param[in] a 	          input
+ * @param[in] config_points   config parameter structure
  *
  * @return		     	   piecewise linear estimated output
  *
@@ -139,14 +139,13 @@ STORAGE_CLASS_REF_VECTOR_FUNC_H tvector1w OP_1w_output_scaling_clamping(
  */
 STORAGE_CLASS_REF_VECTOR_FUNC_H tvector1w OP_1w_piecewise_estimation(
 	tvector1w a,
-	ref_config_points test_config_points);
+	ref_config_points config_points);
 
-/** @brief XCU Fast Config Unit Piecewise linear estimation
+/** @brief XCU LUT initialization
  *
- * @param[in] x input
- * @param[in] test_config_points   config parameter structure
+ * @param[in] config_points   config parameter structure
  *
- * @return		     	   piecewise linear estimated output
+ * @return				   LUT with three vectors for slope, x_prev, offset
  *
  * Given a set of N points, not necessariliy equidistant,
  * {(x1,y1), (x2,y2), ...., (xn,yn)}, to find
@@ -158,36 +157,64 @@ STORAGE_CLASS_REF_VECTOR_FUNC_H tvector1w OP_1w_piecewise_estimation(
  * divided into 32 equal intervals and LUT is created for each of these 32
  * intervals for slope, y_offset and x_prev. Interval of current point x
  * is calculated by dividing it with the range approximated to nearest
- * power of 2 (upper bound)
+ * power of 2 (upper bound). The range has to be a multiple of 32.
  *
  * * @details
  * Given a set of N configuration points, not necessarily equidistant,
- * {(x1,y1), (x2,y2),....(xn,yn)}, not necessarily euqidistant, this function
- * gives the piecewise linear estimation for any arbitrary point around the
- * config points. The distance between the minimum config point and maximum
- * config point (range) is divided into ISP_NWAY equal intervals i.e. the
- * LUT size is equal to ISP_NWAY. It is assumed that is always a power of 2.
+ * {(x1,y1), (x2,y2),....(xn,yn)}, this function gives the piecewise linear
+ * estimation for any arbitrary point around the config points. The distance
+ * between the minimum config point and maximum config point (range) is
+ * divided into ISP_NWAY equal intervals i.e. the LUT size is equal to
+ * ISP_NWAY. It is assumed that is always a power of 2.
  * In the current case, 32 intervals are used as the ISP is 32 way. It should
  * be noted that some approximation is introduced here as the range may not be
  * an integer multiple of ISP_NWAY.
- * A LUT is created from the configuration input for slope, y_offset and
+ * The LUT is created from the configuration input for slope, y_offset and
  * x_prev_value. Input values of a particular conifg point are replicated in
  * the LUT till the interval reaches the next config point. LUT is then filled
  * with the data of the next config point. For example:
  * LUT for Slope can look like S = [s1 s2 s2 s2 s2 s3 s3 s4 s5 s5 s6 s6 s6..],
  * depending on the distance between the config points. Similarly the data
- * is filled for y_offset and X-prev_values. Once this LUT is created,
+ * is filled for y_offset and X-prev_values. */
+
+STORAGE_CLASS_REF_VECTOR_FUNC_H ref_config_point_vectors XCU_LUT_create(
+	ref_config_points config_points);
+
+/** @brief XCU Fast Config Unit Piecewise linear estimation
+ *
+ * @param[in] x input
+ * @param[in] config_points   config parameters structure
+ * @param[in] init_vectors		   LUT data structure
+ *
+ * @return		     	   piecewise linear estimated output
+ *
+ * Once the LUT is created in XCU_LUT_create function,
  * the interval of the any input x is identified by dividing it by the range
- * (approximated to the nearest power of 2 (upper bound)). This is done for
+ * (approximated to the nearest power of 2 (upper bound)). This is done to have a
  * fast division operation to identify the interval of input x. Once the
- * interavl of the input is idenitfied, its config data is retrieved from the
+ * interval of the input is idenitfied, its config data is retrieved from the
  * LUT and output y is calculated. Input points less than x1 are treated as
- * simple case of using first y_pffset as the output.
+ * simple case of using first y_offset as the output.
  */
+STORAGE_CLASS_REF_VECTOR_FUNC_H tvector1w OP_1w_X_piecewise_estimation(
+	tvector1w x,
+	ref_config_points config_points,
+	ref_config_point_vectors init_vectors);
 
+/** @brief OP_1w_XCU Wrapper function for XCU LUT create, piecewise estimation and output clamping
+ *
+ * @param[in] x input
+ * @param[in] config_points Config parameters structure
+ *
+ * @return	piecewise linear estimated clamped output
+ * This block gets a set of input configuration points and input x, creates a LUT for
+ * config points and gives a clamped piece-wise interpolated output. This block assumes
+ * that the difference between the first config point and the last config point is a multiple
+ * of 32. The config points are monotonically increasing.
+ **/
 STORAGE_CLASS_REF_VECTOR_FUNC_H  tvector1w OP_1w_XCU(
 	tvector1w x,
-	ref_config_points test_config_points);
+	ref_config_points config_points);
 
 
 /** @brief Coring
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_include/host/ref_vector_func_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_include/host/ref_vector_func_types.h
index f42c8ff..02b0614 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_include/host/ref_vector_func_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_include/host/ref_vector_func_types.h
@@ -36,13 +36,13 @@
 #include "isp_op1w_types.h"
 #include "isp_op2w_types.h"
 
+/* Defines for the Config Unit */
 #define MAX_CONFIG_POINTS 5
 #define INPUT_OFFSET_FACTOR 10
 #define INPUT_SCALE_FACTOR 10
 #define OUTPUT_SCALE_FACTOR 10
 #define SLOPE_A_RESOLUTION 10
-#define CONFIG_UNIT_LUT_SIZE 32
-
+#define CONFIG_UNIT_LUT_SIZE 32 /*XCU works for ISP_NWAY = 32 */
 
 #define ONE_IN_Q14 (1<<(NUM_BITS-2))
 #define Q29_TO_Q15_SHIFT_VAL (NUM_BITS-2)
@@ -196,8 +196,6 @@ typedef struct {
 	tvector1w v85; tvector1w v86; tvector1w v87; tvector1w v88;
 } s_1w_9x9_matrix;
 
-
-
 typedef struct {
 	tvector1w x_cord[MAX_CONFIG_POINTS];
 	tvector1w slope[MAX_CONFIG_POINTS-1];
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css.h
index 22c0dcc..721e7e5 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20141114_1919 */
-/* Release Version: irci_master_20141114_1919 */
+/* Release Version: irci_master_20141122_1500 */
+/* Release Version: irci_master_20141122_1500 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  *
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_host_data.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_host_data.h
index 7084479..d844e96 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_host_data.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_host_data.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20141114_1919 */
-/* Release Version: irci_master_20141114_1919 */
+/* Release Version: irci_master_20141122_1500 */
+/* Release Version: irci_master_20141122_1500 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  *
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_types.h
index 1207fac..d20a952 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_types.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20141114_1919 */
-/* Release Version: irci_master_20141114_1919 */
+/* Release Version: irci_master_20141122_1500 */
+/* Release Version: irci_master_20141122_1500 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  *
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_version_data.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_version_data.h
index 48e41fa..3c8506b 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_version_data.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_version_data.h
@@ -29,7 +29,7 @@
 #define __IA_CSS_VERSION_DATA_H
 
 
-#define CSS_VERSION_STRING "REL:20141114_46.5_1953; API:2.1.9.1; GIT:irci_20141113_0658__802300#8023006241bb7723ac5b066687ef47676f5e18bf; SDK:/nfs/iir/disks/iir_hivepackages_003/iir_hivepkgs_disk017/Css_Mizuchi/packages/Css_Mizuchi/int_css_mizuchi_20140829_1053; USER:viedifw; "
+#define CSS_VERSION_STRING "REL:20141122_47.6_1549; API:2.1.9.1; GIT:irci_20141122_0200__0aab25#0aab2594bdd1d2d9a0e50c4dd5069bbe0ceb4ab9; SDK:/nfs/iir/disks/iir_hivepackages_003/iir_hivepkgs_disk017/Css_Mizuchi/packages/Css_Mizuchi/int_css_mizuchi_20140829_1053; USER:viedifw; "
 
 
 #endif
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/bnr/bnr2_2/ia_css_bnr2_2_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/bnr/bnr2_2/ia_css_bnr2_2_param.h
index c0fdf06..fb4f904 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/bnr/bnr2_2/ia_css_bnr2_2_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/bnr/bnr2_2/ia_css_bnr2_2_param.h
@@ -24,9 +24,6 @@
 
 #include "type_support.h"
 
-/* TEMP: for implementation purpose.... */
-#define BYPASS_BNR2_2		1
-
 /* BNR (Bayer Noise Reduction) ISP parameters */
 struct sh_css_isp_bnr2_2_params {
 	int32_t d_var_gain_r;
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/eed1_8/ia_css_eed1_8.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/eed1_8/ia_css_eed1_8.host.c
index f26d41e..3b48556 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/eed1_8/ia_css_eed1_8.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/eed1_8/ia_css_eed1_8.host.c
@@ -42,14 +42,14 @@ ia_css_eed1_8_encode(
 
 	to->fcstrength = from->fcstrength;
 	to->fcthres_0 = from->fcthres_0;
-	to->fcthres_1 = from->fcthres_1;
 	to->fc_sat_coef = from->fc_sat_coef;
 	to->fc_coring_prm = from->fc_coring_prm;
+	to->fc_slope = from->fcthres_1 - from->fcthres_0;
 
 	to->aerel_thres0 = from->aerel_thres0;
 	to->aerel_gain0 = from->aerel_gain0;
-	to->aerel_thres1 = from->aerel_thres1;
-	to->aerel_gain1 = from->aerel_gain1;
+	to->aerel_thres_diff = from->aerel_thres1 - from->aerel_thres0;
+	to->aerel_gain_diff = from->aerel_gain1 - from->aerel_gain0;
 
 	to->derel_thres0 = from->derel_thres0;
 	to->derel_gain0 = from->derel_gain0;
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/eed1_8/ia_css_eed1_8_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/eed1_8/ia_css_eed1_8_param.h
index 5b146fc..11282c8 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/eed1_8/ia_css_eed1_8_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/eed1_8/ia_css_eed1_8_param.h
@@ -23,19 +23,41 @@
 #define __IA_CSS_EED1_8_PARAM_H
 
 #include "type_support.h"
-#include "vmem.h" /* for VMEM_ARRAY*/
+
 #include "ia_css_eed1_8_types.h" /* IA_CSS_NUMBER_OF_DEW_ENHANCE_SEGMENTS */
 
 /* Define size of the state..... TODO: check if this is the correct place */
 /* 4 planes : GR, R, B, GB */
-#define NUM_PLANES		4
-/* 4 lines state per color plane input_line_state */
-#define EED1_8_STATE_INPUT_BUFFER_HEIGHT	(3 * NUM_PLANES)
+#define NUM_PLANES	4
+/* 5 lines state per color plane input_line_state */
+#define EED1_8_STATE_INPUT_BUFFER_HEIGHT	(4 * NUM_PLANES)
+
 /* ToDo: Move this to testsetup */
 #define MAX_FRAME_SIMDWIDTH	30
+
 /* Each plane has width equal to half frame line */
 #define EED1_8_STATE_INPUT_BUFFER_WIDTH	CEIL_DIV(MAX_FRAME_SIMDWIDTH, 2)
 
+/* 3 lines state for R and B (= 2 planes) rb_zipped_state */
+#define EED1_8_STATE_RB_ZIPPED_HEIGHT	(2 * 2)
+#define EED1_8_STATE_RB_ZIPPED_WIDTH	CEIL_DIV(MAX_FRAME_SIMDWIDTH, 2)
+
+/* 1 full input line (GR-R color line) for Yc state */
+#define EED1_8_STATE_YC_HEIGHT	1
+#define EED1_8_STATE_YC_WIDTH	MAX_FRAME_SIMDWIDTH
+
+/* 2 lines state per color plane Cg_state */
+#define EED1_8_STATE_CG_HEIGHT	(2 * NUM_PLANES)
+#define EED1_8_STATE_CG_WIDTH	CEIL_DIV(MAX_FRAME_SIMDWIDTH, 2)
+
+/* 2 lines state per color plane Co_state */
+#define EED1_8_STATE_CO_HEIGHT	(2 * NUM_PLANES)
+#define EED1_8_STATE_CO_WIDTH	CEIL_DIV(MAX_FRAME_SIMDWIDTH, 2)
+
+/* 1 full input line (GR-R color line) for AbsK state */
+#define EED1_8_STATE_ABSK_HEIGHT	1
+#define EED1_8_STATE_ABSK_WIDTH		MAX_FRAME_SIMDWIDTH
+
 
 /* EED (Edge Enhancing Demosaic) ISP parameters */
 struct ia_css_isp_eed1_8_params {
@@ -43,14 +65,14 @@ struct ia_css_isp_eed1_8_params {
 
 	int32_t fcstrength;
 	int32_t fcthres_0;
-	int32_t fcthres_1;
 	int32_t fc_sat_coef;
 	int32_t fc_coring_prm;
+	int32_t fc_slope;
 
 	int32_t aerel_thres0;
 	int32_t aerel_gain0;
-	int32_t aerel_thres1;
-	int32_t aerel_gain1;
+	int32_t aerel_thres_diff;
+	int32_t aerel_gain_diff;
 
 	int32_t derel_thres0;
 	int32_t derel_gain0;
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/eed1_8/ia_css_eed1_8_state.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/eed1_8/ia_css_eed1_8_state.h
index 75efce7..6acce37 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/eed1_8/ia_css_eed1_8_state.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/eed1_8/ia_css_eed1_8_state.h
@@ -29,6 +29,11 @@
 
 struct ia_css_isp_eed1_8_vmem_state {
 	VMEM_ARRAY(eed1_8_input_lines[EED1_8_STATE_INPUT_BUFFER_HEIGHT], EED1_8_STATE_INPUT_BUFFER_WIDTH*ISP_NWAY);
+	VMEM_ARRAY(eed1_8_rb_zipped[EED1_8_STATE_RB_ZIPPED_HEIGHT], EED1_8_STATE_RB_ZIPPED_WIDTH*ISP_NWAY);
+	VMEM_ARRAY(eed1_8_Yc[EED1_8_STATE_YC_HEIGHT], EED1_8_STATE_YC_WIDTH*ISP_NWAY);
+	VMEM_ARRAY(eed1_8_Cg[EED1_8_STATE_CG_HEIGHT], EED1_8_STATE_CG_WIDTH*ISP_NWAY);
+	VMEM_ARRAY(eed1_8_Co[EED1_8_STATE_CO_HEIGHT], EED1_8_STATE_CO_WIDTH*ISP_NWAY);
+	VMEM_ARRAY(eed1_8_AbsK[EED1_8_STATE_ABSK_HEIGHT], EED1_8_STATE_ABSK_WIDTH*ISP_NWAY);
 };
 
 #endif /* __IA_CSS_EED1_8_STATE_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr.host.c
index 2f619ed..4873e9e 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr.host.c
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20141114_1919 */
-/* Release Version: irci_master_20141114_1919 */
+/* Release Version: irci_master_20141122_1500 */
+/* Release Version: irci_master_20141122_1500 */
 /*
  * INTEL CONFIDENTIAL
  *
@@ -32,8 +32,8 @@ ia_css_hdr_init_config(
 	const struct ia_css_hdr_config *from,
 	unsigned size)
 {
-	(void)size;
 	int i;
+	(void)size;
 
 	for (i = 0; i < HDR_NUM_INPUT_FRAMES - 1; i++) {
 		to->irradiance.match_shift[i] = from->irradiance.match_shift[i];
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr.host.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr.host.h
index a7837006..d47805c 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr.host.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr.host.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20141114_1919 */
-/* Release Version: irci_master_20141114_1919 */
+/* Release Version: irci_master_20141122_1500 */
+/* Release Version: irci_master_20141122_1500 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  *
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr_param.h
index 929c4ca..1fea348 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr_param.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20141114_1919 */
-/* Release Version: irci_master_20141114_1919 */
+/* Release Version: irci_master_20141122_1500 */
+/* Release Version: irci_master_20141122_1500 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  *
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr_types.h
index 2649186..d9dbbe2 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr_types.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20141114_1919 */
-/* Release Version: irci_master_20141114_1919 */
+/* Release Version: irci_master_20141122_1500 */
+/* Release Version: irci_master_20141122_1500 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  *
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/iefd2_6/ia_css_iefd2_6.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/iefd2_6/ia_css_iefd2_6.host.c
index b0fd81e..1a90419 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/iefd2_6/ia_css_iefd2_6.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/iefd2_6/ia_css_iefd2_6.host.c
@@ -32,8 +32,8 @@ ia_css_iefd2_6_vmem_encode(
 	const struct ia_css_iefd2_6_config *from,
 	size_t size)
 {
-	const int total_blocks = 4;
-	const int shuffle_block = 16;
+	const unsigned total_blocks = 4;
+	const unsigned shuffle_block = 16;
 	unsigned i, j, base;
 	(void)size;
 
@@ -121,8 +121,6 @@ ia_css_iefd2_6_encode(
 	const struct ia_css_iefd2_6_config *from,
 	size_t size)
 {
-	int i;
-
 	(void)size;
 
 	/* Copy parameters to dmem, as described in the KFS
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/modes/interface/isp_const.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/modes/interface/isp_const.h
index 97bb921..c4ad1d1 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/modes/interface/isp_const.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/modes/interface/isp_const.h
@@ -112,6 +112,7 @@
 #define SH_CSS_BINARY_ID_SC_VIDEO_HIGH_RESOLUTION           104
 #define SH_CSS_BINARY_ID_VIDEO_C0                           105
 #define SH_CSS_BINARY_ID_SC_VIDEO_C0_HIGH_RESOLUTION        106
+#define SH_CSS_BINARY_ID_SC_VIDEO_HIRES                     107
 
 /* skycam kerneltest pipelines */
 #define SH_CSS_BINARY_ID_VIDEO_KERNELTEST_NORM              120
@@ -216,12 +217,14 @@
 #define SH_CSS_BINARY_ID_SC_PRIMARY_SINGLE_STAGE            252
 #define SH_CSS_BINARY_ID_COPY_KERNELTEST_OUTPUT_SYSTEM      253
 #define SH_CSS_BINARY_ID_SC_PRIMARY_SINGLE_STAGE_C0         254
-#define SH_CSS_BINARY_ID_IF_TO_XNR                          255
-#define SH_CSS_BINARY_ID_IF_TO_XNR_STRIPED                  256
-#define SH_CSS_BINARY_ID_IF_TO_REF_STRIPED                  257
-#define SH_CSS_BINARY_ID_VIDEO_IF_TO_OSYS                   258
-#define SH_CSS_BINARY_ID_IF_TO_TNR_NO_DVS_C0_STRIPED        259
-#define SH_CSS_BINARY_ID_IF_TO_YUVP1_C0                     260
+#define SH_CSS_BINARY_ID_SC_PRIMARY_SINGLE_STAGE_HR         255
+#define SH_CSS_BINARY_ID_IF_TO_XNR                          256
+#define SH_CSS_BINARY_ID_IF_TO_XNR_STRIPED                  257
+#define SH_CSS_BINARY_ID_IF_TO_REF_STRIPED                  258
+#define SH_CSS_BINARY_ID_VIDEO_IF_TO_OSYS                   259
+#define SH_CSS_BINARY_ID_IF_TO_TNR_NO_DVS_C0_STRIPED        260
+#define SH_CSS_BINARY_ID_IF_TO_YUVP1_C0                     261
+#define SH_CSS_BINARY_ID_IF_TO_XNR_PRIMARY                  262
 
 #define XMEM_WIDTH_BITS              HIVE_ISP_DDR_WORD_BITS
 #define XMEM_SHORTS_PER_WORD         (HIVE_ISP_DDR_WORD_BITS/16)
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/binary/interface/ia_css_binary.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/binary/interface/ia_css_binary.h
index 6ec9ff0..7c873e7 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/binary/interface/ia_css_binary.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/binary/interface/ia_css_binary.h
@@ -100,8 +100,6 @@ struct ia_css_binary_descr {
 	bool enable_fractional_ds;
 	struct ia_css_resolution dvs_env;
 	enum ia_css_stream_format stream_format;
-	struct ia_css_frame_info *original_in_info;	/* the info of the input-frame with the
-							   original resolution. */
 	struct ia_css_frame_info *in_info;		/* the info of the input-frame with the
 							   ISP required resolution. */
 	struct ia_css_frame_info *bds_out_info;
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/binary/src/binary.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/binary/src/binary.c
index f0230f3..0f95ebd 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/binary/src/binary.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/binary/src/binary.c
@@ -409,10 +409,12 @@ ia_css_binary_3a_grid_info(const struct ia_css_binary *binary,
 	s3a_info->awb_fr_enable     = binary->info->sp.enable.awb_fr_acc;
 	s3a_info->awb_enable        = binary->info->sp.enable.awb_acc;
 	s3a_info->elem_bit_depth    = SH_CSS_BAYER_BITS;
+
+	ia_css_3a_stat_grid_calculate(s3a_info, pipe);
+
 	s3a_info->af_grd_info       = *get_af_grid_config(pipe);
 	s3a_info->awb_fr_grd_info   = *get_awb_fr_grid_config(pipe);
 	s3a_info->awb_grd_info      = *get_awb_grid_config(pipe);
-	s3a_info->ae_grd_info       = *get_ae_grid_config_config(pipe);
 #endif
 #if defined(HAS_VAMEM_VERSION_2)
 	info->vamem_type = IA_CSS_VAMEM_TYPE_2;
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/debug/interface/ia_css_debug_pipe.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/debug/interface/ia_css_debug_pipe.h
index 5c67b39..d342945 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/debug/interface/ia_css_debug_pipe.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/debug/interface/ia_css_debug_pipe.h
@@ -55,12 +55,12 @@ extern void ia_css_debug_pipe_graph_dump_stage(
 
 /**
  * @brief Internal debug support for constructing a pipe graph.
- * @param[in]	cc_frame	Output frame of SP raw copy.
+ * @param[in]	out_frame	Output frame of SP raw copy.
  *
  * @return	None
  */
 extern void ia_css_debug_pipe_graph_dump_sp_raw_copy(
-		struct ia_css_frame *cc_frame);
+		struct ia_css_frame *out_frame);
 
 
 /**
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/debug/src/ia_css_debug.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/debug/src/ia_css_debug.c
index 6141a41..b1ddd29 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/debug/src/ia_css_debug.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/debug/src/ia_css_debug.c
@@ -2999,14 +2999,7 @@ ia_css_debug_pipe_graph_dump_stage(
 		}
 	}
 
-	/* CC is a bit of special case, it used to be the alternating IN */
-	/* when continuous capture was still used in a double buffer scheme. */
-	/* Now consider it just as another IN */
-	if (stage->args.cc_frame) {
-		ia_css_debug_pipe_graph_dump_frame(
-			stage->args.cc_frame, id, blob_name,
-			"in", true);
-	} else if (stage->args.in_frame) {
+	if (stage->args.in_frame) {
 		ia_css_debug_pipe_graph_dump_frame(
 			stage->args.in_frame, id, blob_name,
 			"in", true);
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/pipeline/interface/ia_css_pipeline.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/pipeline/interface/ia_css_pipeline.h
index fed2c9e..fef5627 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/pipeline/interface/ia_css_pipeline.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/pipeline/interface/ia_css_pipeline.h
@@ -89,7 +89,6 @@ struct ia_css_pipeline_stage_desc {
 	enum ia_css_pipeline_stage_sp_func sp_func;
 	unsigned max_input_width;
 	unsigned int mode;
-	struct ia_css_frame *cc_frame;
 	struct ia_css_frame *in_frame;
 	struct ia_css_frame *out_frame[IA_CSS_BINARY_MAX_OUTPUT_PORTS];
 	struct ia_css_frame *vf_frame;
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/pipeline/src/pipeline.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/pipeline/src/pipeline.c
index 34f9af7..5cc7a55 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/pipeline/src/pipeline.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/pipeline/src/pipeline.c
@@ -650,7 +650,6 @@ static enum ia_css_err pipeline_stage_create(
 			stage->vf_frame_allocated = true;
 	}
 
-	stage->args.cc_frame = stage_desc->cc_frame;
 	stage->args.in_frame = stage_desc->in_frame;
 	for (i = 0; i < IA_CSS_BINARY_MAX_OUTPUT_PORTS; i++)
 		stage->args.out_frame[i] = out_frame[i];
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css.c
index d521fb2..ca79c5a 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css.c
@@ -2884,8 +2884,7 @@ load_preview_binaries(struct ia_css_pipe *pipe)
 	struct ia_css_frame_info prev_in_info,
 				 prev_bds_out_info,
 				 prev_out_info,
-				 prev_vf_info,
-				 prev_original_in_info;
+				 prev_vf_info;
 	struct ia_css_binary_descr preview_descr;
 	bool online;
 	enum ia_css_err err = IA_CSS_SUCCESS;
@@ -2953,7 +2952,6 @@ load_preview_binaries(struct ia_css_pipe *pipe)
 	err = ia_css_pipe_get_preview_binarydesc(
 			pipe,
 			&preview_descr,
-			&prev_original_in_info,
 			&prev_in_info,
 			&prev_bds_out_info,
 			&prev_out_info,
@@ -2988,7 +2986,6 @@ load_preview_binaries(struct ia_css_pipe *pipe)
 		err = ia_css_pipe_get_preview_binarydesc(
 				pipe,
 				&preview_descr,
-				&prev_original_in_info,
 				&prev_in_info,
 				&prev_bds_out_info,
 				&prev_out_info,
@@ -3173,11 +3170,11 @@ static enum ia_css_err add_vf_pp_stage(
 		if (last_fw) {
 			ia_css_pipe_util_set_output_frames(out_frames, 0, NULL);
 			ia_css_pipe_get_generic_stage_desc(&stage_desc, vf_pp_binary,
-				out_frames, in_frame, NULL, NULL);
+				out_frames, in_frame, NULL);
 		} else{
 			ia_css_pipe_util_set_output_frames(out_frames, 0, out_frame);
 			ia_css_pipe_get_generic_stage_desc(&stage_desc, vf_pp_binary,
-				out_frames, in_frame, NULL, NULL);
+				out_frames, in_frame, NULL);
 		}
 		err = ia_css_pipeline_create_and_add_stage(me, &stage_desc, vf_pp_stage);
 		if (err != IA_CSS_SUCCESS)
@@ -3223,12 +3220,12 @@ static enum ia_css_err add_yuv_scaler_stage(
 	if(last_fw) {
 		ia_css_pipe_util_set_output_frames(out_frames, 0, NULL);
 		ia_css_pipe_get_generic_stage_desc(&stage_desc,
-			yuv_scaler_binary, out_frames, in_frame, NULL, vf_frame);
+			yuv_scaler_binary, out_frames, in_frame, vf_frame);
 	} else {
 		ia_css_pipe_util_set_output_frames(out_frames, 0, out_frame);
 		ia_css_pipe_util_set_output_frames(out_frames, 1, internal_out_frame);
 		ia_css_pipe_get_generic_stage_desc(&stage_desc,
-			yuv_scaler_binary, out_frames, in_frame, NULL, vf_frame);
+			yuv_scaler_binary, out_frames, in_frame, vf_frame);
 	}
 	err = ia_css_pipeline_create_and_add_stage(me,
 		&stage_desc,
@@ -3286,11 +3283,11 @@ static enum ia_css_err add_capture_pp_stage(
 		if(last_fw)	{
 			ia_css_pipe_util_set_output_frames(out_frames, 0, NULL);
 			ia_css_pipe_get_generic_stage_desc(&stage_desc,
-				capture_pp_binary, out_frames, NULL, NULL, vf_frame);
+				capture_pp_binary, out_frames, NULL, vf_frame);
 		} else {
 			ia_css_pipe_util_set_output_frames(out_frames, 0, out_frame);
 			ia_css_pipe_get_generic_stage_desc(&stage_desc,
-				capture_pp_binary, out_frames, NULL, NULL, vf_frame);
+				capture_pp_binary, out_frames, NULL, vf_frame);
 		}
 		err = ia_css_pipeline_create_and_add_stage(me,
 			&stage_desc,
@@ -3397,6 +3394,7 @@ ia_css_get_crop_offsets (
 	enum ia_css_pipe_id pipe_id;
 	unsigned int left_cropping = 0, top_cropping = 0;
 	const struct ia_css_binary_xinfo *info;
+	unsigned int min_reqd_height, min_reqd_width;
 
 	assert(pipe != NULL);
 	assert(pipe->stream != NULL);
@@ -3404,20 +3402,28 @@ ia_css_get_crop_offsets (
 
 	input_res = &pipe->stream->config.input_config.input_res;
 	effective_res = &pipe->stream->config.input_config.effective_res;
-	dvs_env = &pipe->config.dvs_envelope;
 	pipe_id = pipe->mode;
 
+	/* The dvs envelope info may not be correctly sent down via pipe config
+	 * The check is made and the correct value is populated in the binary info
+	 * Use this value when computing crop, else excess lines may get trimmed
+	 */
+
 	switch (pipe_id) {
 	case IA_CSS_PIPE_ID_PREVIEW:
 		info = pipe->pipe_settings.preview.preview_binary.info;
+		dvs_env = &pipe->pipe_settings.preview.preview_binary.dvs_envelope;
 		break;
 	case IA_CSS_PIPE_ID_VIDEO:
 		info = pipe->pipe_settings.video.video_binary.info;
+		dvs_env = &pipe->pipe_settings.video.video_binary.dvs_envelope;
 		break;
 	case IA_CSS_PIPE_ID_CAPTURE:
 		info = pipe->pipe_settings.capture.primary_binary.info;
+		dvs_env = &pipe->pipe_settings.capture.primary_binary.dvs_envelope;
 		break;
 	default:
+		dvs_env = &pipe->config.dvs_envelope;
 		info = NULL;
 	}
 
@@ -3428,12 +3434,15 @@ ia_css_get_crop_offsets (
 
 	in_frame->raw_bayer_order = pipe->stream->config.input_config.bayer_order;
 
-	if (effective_res->height < input_res->height) {
-		row = (input_res->height - effective_res->height - top_cropping - dvs_env->height) / 2;
+	min_reqd_height = effective_res->height + top_cropping + dvs_env->height;
+	min_reqd_width = effective_res->width + left_cropping + dvs_env->width;
+
+	if (input_res->height > min_reqd_height) {
+		row = (input_res->height - min_reqd_height) / 2;
 		row &= ~0x1;
 	}
-	if (effective_res->width < input_res->width) {
-		column = (input_res->width - effective_res->width - left_cropping - dvs_env->width) / 2;
+	if (input_res->width > min_reqd_width) {
+		column = (input_res->width - min_reqd_width) / 2;
 		column &= ~0x1;
 	}
 
@@ -3645,7 +3654,7 @@ static enum ia_css_err create_host_video_pipeline(struct ia_css_pipe *pipe)
 	if (need_copy) {
 		ia_css_pipe_util_set_output_frames(out_frames, 0, NULL);
 		ia_css_pipe_get_generic_stage_desc(&stage_desc, copy_binary,
-			out_frames, NULL, NULL, NULL);
+			out_frames, NULL, NULL);
 		err = ia_css_pipeline_create_and_add_stage(me,
 			&stage_desc,
 			&copy_stage);
@@ -3670,10 +3679,10 @@ static enum ia_css_err create_host_video_pipeline(struct ia_css_pipe *pipe)
 	   it can directly produce the vf_frame.  */
 	if(need_vf_pp) {
 		ia_css_pipe_get_generic_stage_desc(&stage_desc, video_binary,
-			out_frames, in_frame, NULL, NULL);
+			out_frames, in_frame, NULL);
 	} else {
 		ia_css_pipe_get_generic_stage_desc(&stage_desc, video_binary,
-			out_frames, in_frame, NULL, vf_frame);
+			out_frames, in_frame, vf_frame);
 	}
 	err = ia_css_pipeline_create_and_add_stage(me,
 			&stage_desc,
@@ -3808,7 +3817,7 @@ create_host_preview_pipeline(struct ia_css_pipe *pipe)
 	struct ia_css_pipeline_stage *out_stage = NULL;
 	struct ia_css_pipeline *me = NULL;
 	struct ia_css_binary *copy_binary, *preview_binary, *vf_pp_binary = NULL;
-	struct ia_css_frame *in_frame = NULL, *cc_frame = NULL;
+	struct ia_css_frame *in_frame = NULL;
 	enum ia_css_err err = IA_CSS_SUCCESS;
 	struct ia_css_frame *out_frame;
 	struct ia_css_frame *out_frames[IA_CSS_BINARY_MAX_OUTPUT_PORTS];
@@ -3872,7 +3881,7 @@ create_host_preview_pipeline(struct ia_css_pipe *pipe)
 	if (pipe->pipe_settings.preview.copy_binary.info) {
 		ia_css_pipe_util_set_output_frames(out_frames, 0, NULL);
 		ia_css_pipe_get_generic_stage_desc(&stage_desc, copy_binary,
-			out_frames, NULL, NULL, NULL);
+			out_frames, NULL, NULL);
 		err = ia_css_pipeline_create_and_add_stage(me,
 				&stage_desc,
 				&post_stage);
@@ -3895,11 +3904,11 @@ create_host_preview_pipeline(struct ia_css_pipe *pipe)
 	if (vf_pp_binary) {
 		ia_css_pipe_util_set_output_frames(out_frames, 0, NULL);
 		ia_css_pipe_get_generic_stage_desc(&stage_desc, preview_binary,
-			out_frames, in_frame, cc_frame, NULL);
+			out_frames, in_frame, NULL);
 	} else {
 		ia_css_pipe_util_set_output_frames(out_frames, 0, out_frame);
 		ia_css_pipe_get_generic_stage_desc(&stage_desc, preview_binary,
-			out_frames, in_frame, cc_frame, NULL);
+			out_frames, in_frame, NULL);
 	}
 	err = ia_css_pipeline_create_and_add_stage(me,
 		&stage_desc,
@@ -4192,7 +4201,7 @@ ia_css_pipe_enqueue_buffer(struct ia_css_pipe *pipe,
 			return IA_CSS_ERR_INVALID_ARGUMENTS;
 		}
 		ddr_buffer.kernel_ptr = HOST_ADDRESS(buffer->data.stats_skc_dvs);
-		ddr_buffer.payload.skc_dvs_statistics = buffer->data.stats_skc_dvs;
+		ddr_buffer.payload.skc_dvs_statistics = (hrt_vaddress)buffer->data.stats_skc_dvs;
 #else
 		if (buffer->data.stats_dvs == NULL) {
 			IA_CSS_LEAVE_ERR(IA_CSS_ERR_INVALID_ARGUMENTS);
@@ -4208,7 +4217,7 @@ ia_css_pipe_enqueue_buffer(struct ia_css_pipe *pipe,
 			return IA_CSS_ERR_INVALID_ARGUMENTS;
 		}
 		ddr_buffer.kernel_ptr = HOST_ADDRESS(buffer->data.stats_lace);
-		ddr_buffer.payload.lace_stat = buffer->data.stats_lace;
+		ddr_buffer.payload.lace_stat = (hrt_vaddress)buffer->data.stats_lace;
 #endif
 	} else if (buf_type == IA_CSS_BUFFER_TYPE_METADATA) {
 		ddr_buffer.kernel_ptr = HOST_ADDRESS(buffer->data.metadata);
@@ -5233,9 +5242,12 @@ static enum ia_css_err load_video_binaries(struct ia_css_pipe *pipe)
 			num_output_pins = mycs->video_binary.info->num_output_pins;
 			vf_ds_log2 = mycs->video_binary.vf_downscale_log2;
 
+			/* no need on 2500 to have vf_pp binary since we have downscale in HW */
+#if !defined(IS_ISP_2500_SYSTEM)
 			/* If the binary has dual output pins, we need vf_pp if the resolution
 			* is different. */
 			need_vf_pp |= ((num_output_pins == 2) && vf_res_different_than_output);
+#endif
 
 			/* If the binary has single output pin, we need vf_pp if additional
 			* scaling is needed for vf */
@@ -5262,7 +5274,6 @@ static enum ia_css_err load_video_binaries(struct ia_css_pipe *pipe)
 			if (err != IA_CSS_SUCCESS)
 				return err;
 		}
-
 	}
 
 	/* If a video binary does not use a ref_frame, we set the frame delay
@@ -6520,6 +6531,7 @@ load_yuvpp_binaries(struct ia_css_pipe *pipe)
 	struct ia_css_binary *next_binary;
 	struct ia_css_cas_binary_descr cas_scaler_descr = IA_CSS_DEFAULT_CAS_BINARY_DESCR;
 	unsigned int i, j;
+	bool need_isp_copy_binary = false;
 
 	IA_CSS_ENTER_PRIVATE("");
 	assert(pipe != NULL);
@@ -6600,14 +6612,58 @@ load_yuvpp_binaries(struct ia_css_pipe *pipe)
 		next_binary = NULL;
 	}
 
-#if !defined(USE_INPUT_SYSTEM_VERSION_2401)
-	/* ISP Copy */
-	err = load_copy_binary(pipe,
-			       &mycs->copy_binary,
-			       next_binary);
-	if (err != IA_CSS_SUCCESS)
-		goto ERR;
-#endif
+#if defined(USE_INPUT_SYSTEM_VERSION_2401)
+	/*
+	 * NOTES
+	 * - Why does the "yuvpp" pipe needs "isp_copy_binary" (i.e. ISP Copy) when
+	 *   its input is "IA_CSS_STREAM_FORMAT_YUV422_8"?
+	 *
+	 *   In most use cases, the first stage in the "yuvpp" pipe is the "yuv_scale_
+	 *   binary". However, the "yuv_scale_binary" does NOT support the input-frame
+	 *   format as "IA_CSS_STREAM _FORMAT_YUV422_8".
+	 *
+	 *   Hence, the "isp_copy_binary" is required to be present in front of the "yuv
+	 *   _scale_binary". It would translate the input-frame to the frame formats that
+	 *   are supported by the "yuv_scale_binary".
+	 *
+	 *   Please refer to "FrameWork/css/isp/pipes/capture_pp/capture_pp_1.0/capture_
+	 *   pp_defs.h" for the list of input-frame formats that are supported by the
+	 *   "yuv_scale_binary".
+	 */
+	need_isp_copy_binary =
+		(pipe->stream->config.input_config.format == IA_CSS_STREAM_FORMAT_YUV422_8);
+#else  /* !USE_INPUT_SYSTEM_VERSION_2401 */
+	need_isp_copy_binary = true;
+#endif /*  USE_INPUT_SYSTEM_VERSION_2401 */
+
+	if (need_isp_copy_binary) {
+		err = load_copy_binary(pipe,
+				       &mycs->copy_binary,
+				       next_binary);
+
+		if (err != IA_CSS_SUCCESS)
+			goto ERR;
+
+		/*
+		 * NOTES
+		 * - Why is "pipe->pipe_settings.capture.copy_binary.online" specified?
+		 *
+		 *   In some use cases, the first stage in the "yuvpp" pipe is the
+		 *   "isp_copy_binary". The "isp_copy_binary" is designed to process
+		 *   the input from either the system DDR or from the IPU internal VMEM.
+		 *   So it provides the flag "online" to specify where its input is from,
+		 *   i.e.:
+		 *
+		 *      (1) "online <= true", the input is from the IPU internal VMEM.
+		 *      (2) "online <= false", the input is from the system DDR.
+		 *
+		 *   In other use cases, the first stage in the "yuvpp" pipe is the
+		 *   "yuv_scale_binary". "The "yuv_scale_binary" is designed to process the
+		 *   input ONLY from the system DDR. So it does not provide the flag "online"
+		 *   to specify where its input is from.
+		 */
+		pipe->pipe_settings.capture.copy_binary.online = pipe->stream->config.online;
+	}
 
 	/* Viewfinder post-processing */
 	if (need_scaler) {
@@ -6854,15 +6910,43 @@ create_host_yuvpp_pipeline(struct ia_css_pipe *pipe)
 	 *  b) sensor, via copy binary: connect yuvscaler to copy binary later on */
 	if (need_in_frameinfo_memory) {
 		/* TODO: improve for different input formats. */
+
+		/*
+		 * "pipe->stream->config.input_config.format" represents the sensor output
+		 * frame format, e.g. YUV422 8-bit.
+		 *
+		 * "in_frame_format" represents the imaging pipe's input frame format, e.g.
+		 * Bayer-Quad RAW.
+		 */
+		int in_frame_format;
 		if (pipe->stream->config.input_config.format == IA_CSS_STREAM_FORMAT_YUV420_8_LEGACY) {
-			err = init_in_frameinfo_memory_defaults(pipe,
-				&me->in_frame,
-				IA_CSS_FRAME_FORMAT_CSI_MIPI_LEGACY_YUV420_8);
+			in_frame_format = IA_CSS_FRAME_FORMAT_CSI_MIPI_LEGACY_YUV420_8;
+		} else if (pipe->stream->config.input_config.format == IA_CSS_STREAM_FORMAT_YUV422_8) {
+			/*
+			 * When the sensor output frame format is "IA_CSS_STREAM_FORMAT_YUV422_8",
+			 * the "isp_copy_var" binary is selected as the first stage in the yuvpp
+			 * pipe.
+			 *
+			 * For the "isp_copy_var" binary, it reads the YUV422-8 pixels from
+			 * the frame buffer (at DDR) to the frame-line buffer (at VMEM).
+			 *
+			 * By now, the "isp_copy_var" binary does NOT provide a separated
+			 * frame-line buffer to store the YUV422-8 pixels. Instead, it stores
+			 * the YUV422-8 pixels in the frame-line buffer which is designed to
+			 * store the Bayer-Quad RAW pixels.
+			 *
+			 * To direct the "isp_copy_var" binary reading from the RAW frame-line
+			 * buffer, its input frame format must be specified as "IA_CSS_FRAME_
+			 * FORMAT_RAW".
+			 */
+			in_frame_format = IA_CSS_FRAME_FORMAT_RAW;
 		} else {
-			err = init_in_frameinfo_memory_defaults(pipe,
-				&me->in_frame,
-				IA_CSS_FRAME_FORMAT_NV12);
+			in_frame_format = IA_CSS_FRAME_FORMAT_NV12;
 		}
+
+		err = init_in_frameinfo_memory_defaults(pipe,
+			&me->in_frame,
+			in_frame_format);
 		if (err != IA_CSS_SUCCESS)
 			return err;
 
@@ -6895,14 +6979,23 @@ create_host_yuvpp_pipeline(struct ia_css_pipe *pipe)
 	need_scaler = need_yuv_scaler_stage(pipe);
 
 	if (pipe->pipe_settings.yuvpp.copy_binary.info) {
-		if(need_scaler) {
+
+		struct ia_css_frame *in_frame_local = NULL;
+
+#ifdef USE_INPUT_SYSTEM_VERSION_2401
+		/* After isp copy is enabled in_frame needs to be passed. */
+		if (!online)
+			in_frame_local = in_frame;
+#endif
+
+		if (need_scaler) {
 			ia_css_pipe_util_set_output_frames(bin_out_frame, 0, NULL);
 			ia_css_pipe_get_generic_stage_desc(&stage_desc, copy_binary,
-				bin_out_frame, NULL, NULL, NULL);
+				bin_out_frame, in_frame_local, NULL);
 		} else {
 			ia_css_pipe_util_set_output_frames(bin_out_frame, 0, out_frame[0]);
 			ia_css_pipe_get_generic_stage_desc(&stage_desc, copy_binary,
-				bin_out_frame, NULL, NULL, NULL);
+				bin_out_frame, in_frame_local, NULL);
 		}
 
 		err = ia_css_pipeline_create_and_add_stage(me,
@@ -7078,7 +7171,6 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
 				     *in_stage = NULL,
 				     *post_stage = NULL,
 				     *yuv_scaler_stage = NULL;
-	struct ia_css_frame *cc_frame = NULL;
 	struct ia_css_binary *copy_binary,
 			     *primary_binary,
 			     *vf_pp_binary,
@@ -7190,20 +7282,20 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
 #if !defined(HAS_NO_INPUT_SYSTEM) && defined(USE_INPUT_SYSTEM_VERSION_2401)
 			if (!continuous) {
 				ia_css_pipe_get_generic_stage_desc(&stage_desc, copy_binary,
-					out_frames, in_frame, NULL, NULL);
+					out_frames, in_frame, NULL);
 			} else {
 				in_frame = pipe->stream->last_pipe->continuous_frames[0];
 				ia_css_pipe_get_generic_stage_desc(&stage_desc, copy_binary,
-					out_frames, in_frame, NULL, NULL);
+					out_frames, in_frame, NULL);
 			}
 #else
 			ia_css_pipe_get_generic_stage_desc(&stage_desc, copy_binary,
-				out_frames, NULL, NULL, NULL);
+				out_frames, NULL, NULL);
 #endif
 		} else {
 			ia_css_pipe_util_set_output_frames(out_frames, 0, in_frame);
 			ia_css_pipe_get_generic_stage_desc(&stage_desc, copy_binary,
-				out_frames, NULL, NULL, NULL);
+				out_frames, NULL, NULL);
 		}
 
 		err = ia_css_pipeline_create_and_add_stage(me,
@@ -7221,11 +7313,11 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
 		if(need_pp) {
 			ia_css_pipe_util_set_output_frames(out_frames, 0, NULL);
 			ia_css_pipe_get_generic_stage_desc(&stage_desc, primary_binary,
-				out_frames, in_frame, cc_frame, NULL);
+				out_frames, in_frame, NULL);
 		} else {
 			ia_css_pipe_util_set_output_frames(out_frames, 0, out_frame);
 			ia_css_pipe_get_generic_stage_desc(&stage_desc, primary_binary,
-				out_frames, in_frame, cc_frame, NULL);
+				out_frames, in_frame, NULL);
 		}
 
 		err = ia_css_pipeline_create_and_add_stage(me,
@@ -7243,14 +7335,14 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
 	           mode == IA_CSS_CAPTURE_MODE_LOW_LIGHT) {
 		ia_css_pipe_util_set_output_frames(out_frames, 0, NULL);
 		ia_css_pipe_get_generic_stage_desc(&stage_desc, pre_isp_binary,
-			out_frames, in_frame, cc_frame, NULL);
+			out_frames, in_frame, NULL);
 		err = ia_css_pipeline_create_and_add_stage(me,
 				&stage_desc, NULL);
 		if (err != IA_CSS_SUCCESS)
 			return err;
 		ia_css_pipe_util_set_output_frames(out_frames, 0, NULL);
 		ia_css_pipe_get_generic_stage_desc(&stage_desc, anr_gdc_binary,
-			out_frames, NULL, NULL, NULL);
+			out_frames, NULL, NULL);
 		err = ia_css_pipeline_create_and_add_stage(me,
 				&stage_desc, NULL);
 		if (err != IA_CSS_SUCCESS)
@@ -7259,11 +7351,11 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
 		if(need_pp) {
 			ia_css_pipe_util_set_output_frames(out_frames, 0, NULL);
 			ia_css_pipe_get_generic_stage_desc(&stage_desc, post_isp_binary,
-				out_frames, NULL, NULL, NULL);
+				out_frames, NULL, NULL);
 		} else {
 			ia_css_pipe_util_set_output_frames(out_frames, 0, out_frame);
 			ia_css_pipe_get_generic_stage_desc(&stage_desc, post_isp_binary,
-				out_frames, NULL, NULL, NULL);
+				out_frames, NULL, NULL);
 		}
 
 		err = ia_css_pipeline_create_and_add_stage(me,
@@ -7273,7 +7365,7 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
 	} else if (mode == IA_CSS_CAPTURE_MODE_BAYER) {
 		ia_css_pipe_util_set_output_frames(out_frames, 0, out_frame);
 		ia_css_pipe_get_generic_stage_desc(&stage_desc, pre_isp_binary,
-			out_frames, in_frame, cc_frame, NULL);
+			out_frames, in_frame, NULL);
 		err = ia_css_pipeline_create_and_add_stage(me,
 			&stage_desc,
 			NULL);
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_firmware.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_firmware.c
index d08d1d5..1f2c859 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_firmware.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_firmware.c
@@ -54,10 +54,10 @@ struct fw_param {
 /* Warning: same order as SH_CSS_BINARY_ID_* */
 static struct firmware_header *firmware_header;
 
-/* The string STR(irci_master_20141114_1919) is a place holder
+/* The string STR(irci_master_20141122_1500) is a place holder
  * which will be replaced with the actual RELEASE_VERSION
  * during package generation. Please do not modify  */
-static const char *release_version = STR(irci_master_20141114_1919);
+static const char *release_version = STR(irci_master_20141122_1500);
 
 #define MAX_FW_REL_VER_NAME	300
 static char FW_rel_ver_name[MAX_FW_REL_VER_NAME] = "---";
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_internal.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_internal.h
index fb5acec..5691200 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_internal.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_internal.h
@@ -316,7 +316,6 @@ struct ia_css_isp_parameter_set_info {
 /* this struct contains all arguments that can be passed to
    a binary. It depends on the binary which ones are used. */
 struct sh_css_binary_args {
-	struct ia_css_frame *cc_frame;       /* continuous capture frame */
 	struct ia_css_frame *in_frame;	     /* input frame */
 	struct ia_css_frame *delay_frames[MAX_NUM_VIDEO_DELAY_FRAMES];   /* reference input frame */
 	struct ia_css_frame *tnr_frames[NUM_VIDEO_TNR_FRAMES];   /* tnr frames */
@@ -792,8 +791,8 @@ struct sh_css_hmm_buffer {
 	union {
 		struct ia_css_isp_3a_statistics  s3a;
 		struct ia_css_isp_dvs_statistics dis;
-		struct ia_css_isp_skc_dvs_statistics *skc_dvs_statistics;
-		struct ia_css_isp_lace_statistics *lace_stat;
+		hrt_vaddress skc_dvs_statistics;
+		hrt_vaddress lace_stat;
 		struct ia_css_metadata	metadata;
 		struct frame_data_wrapper {
 			hrt_vaddress	frame_data;
@@ -826,8 +825,8 @@ struct sh_css_hmm_buffer {
 #if CONFIG_ON_FRAME_ENQUEUE()
 #define SIZE_OF_FRAME_STRUCT						\
 	(SIZE_OF_HRT_VADDRESS +						\
-	(3 * sizeof(uint32_t))) +					\
-	sizeof(uint32_t)
+	(3 * sizeof(uint32_t)) +					\
+	sizeof(uint32_t))
 #else
 #define SIZE_OF_FRAME_STRUCT						\
 	(SIZE_OF_HRT_VADDRESS +						\
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_params.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_params.c
index 26d4063..e988856 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_params.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_params.c
@@ -4025,12 +4025,7 @@ sh_css_param_update_isp_params(struct ia_css_pipe *curr_pipe,
 			 * parameter sets and dequeued sets
 			 */
 			g_param_buffer_enqueue_count++;
-			/* WORKAROUND: replace assertion check by just warning log, the BZ
-			 * is tracked by ICG BZ 4328. */
-			if (g_param_buffer_enqueue_count >= g_param_buffer_dequeue_count+50)
-				IA_CSS_WARNING("param buffer enqueue count %d, dequeue count %d\n",
-			                       g_param_buffer_enqueue_count,
-			                       g_param_buffer_dequeue_count);
+			assert(g_param_buffer_enqueue_count < g_param_buffer_dequeue_count+50);
 
 			/*
 			 * Tell the SP which queues are not empty,
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/spmem_dump.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/spmem_dump.c
index a355320..3398eb5 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/spmem_dump.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/spmem_dump.c
@@ -31,7 +31,7 @@
 
 /* function input_system_acquisition_stop: B0E */
 
-/* function longjmp: 6B7D */
+/* function longjmp: 6B85 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_HIVE_IF_SRST_MASK
@@ -45,11 +45,11 @@
 #define HIVE_ADDR_sp_HIVE_IF_SRST_MASK 0x1CC
 #define HIVE_SIZE_sp_HIVE_IF_SRST_MASK 16
 
-/* function tmpmem_init_dmem: 6930 */
+/* function tmpmem_init_dmem: 6938 */
 
-/* function ia_css_isys_sp_token_map_receive_ack: 6241 */
+/* function ia_css_isys_sp_token_map_receive_ack: 6249 */
 
-/* function ia_css_dmaproxy_sp_set_addr_B: 32E1 */
+/* function ia_css_dmaproxy_sp_set_addr_B: 32DF */
 
 /* function debug_buffer_set_ddr_addr: F8 */
 
@@ -67,15 +67,15 @@
 #define HIVE_ADDR_sp_vbuf_mipi 0x620C
 #define HIVE_SIZE_sp_vbuf_mipi 12
 
-/* function ia_css_event_sp_decode: 34FA */
+/* function ia_css_event_sp_decode: 34F8 */
 
-/* function ia_css_queue_get_size: 4A09 */
+/* function ia_css_queue_get_size: 4A07 */
 
-/* function ia_css_queue_load: 50D4 */
+/* function ia_css_queue_load: 50D2 */
 
-/* function setjmp: 6B86 */
+/* function setjmp: 6B8E */
 
-/* function __dmaproxy_sp_read_write_text: 3406 */
+/* function __dmaproxy_sp_read_write_text: 3404 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_sp2host_isys_event_queue
@@ -89,11 +89,11 @@
 #define HIVE_ADDR_sp_sem_for_sp2host_isys_event_queue 0x462C
 #define HIVE_SIZE_sp_sem_for_sp2host_isys_event_queue 20
 
-/* function ia_css_dmaproxy_sp_wait_for_ack: 71B7 */
+/* function ia_css_dmaproxy_sp_wait_for_ack: 71BF */
 
-/* function ia_css_sp_rawcopy_func: 5328 */
+/* function ia_css_sp_rawcopy_func: 5326 */
 
-/* function ia_css_tagger_buf_sp_pop_marked: 28FA */
+/* function ia_css_tagger_buf_sp_pop_marked: 28F8 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_stage
@@ -119,9 +119,9 @@
 #define HIVE_ADDR_sp_vbuf_raw 0x2E0
 #define HIVE_SIZE_sp_vbuf_raw 4
 
-/* function ia_css_sp_bin_copy_func: 525B */
+/* function ia_css_sp_bin_copy_func: 5259 */
 
-/* function ia_css_queue_item_store: 4DAA */
+/* function ia_css_queue_item_store: 4DA8 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_metadata_bufs
@@ -175,7 +175,7 @@
 
 /* function ia_css_thread_sp_main: DB2 */
 
-/* function ia_css_ispctrl_sp_init_internal_buffers: 3741 */
+/* function ia_css_ispctrl_sp_init_internal_buffers: 373F */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp2host_psys_event_queue_handle
@@ -201,7 +201,7 @@
 #define HIVE_ADDR_sp_sem_for_sp2host_psys_event_queue 0x4640
 #define HIVE_SIZE_sp_sem_for_sp2host_psys_event_queue 20
 
-/* function ia_css_tagger_sp_propagate_frame: 236A */
+/* function ia_css_tagger_sp_propagate_frame: 2368 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_stop_copy_preview
@@ -241,19 +241,19 @@
 #define HIVE_ADDR_sp_max_mm_tracer 0x2688
 #define HIVE_SIZE_sp_max_mm_tracer 4
 
-/* function ia_css_queue_store: 4F4D */
+/* function ia_css_queue_store: 4F4B */
 
-/* function ia_css_sp_flash_register: 2B15 */
+/* function ia_css_sp_flash_register: 2B13 */
 
-/* function ia_css_sp_rawcopy_dummy_function: 58B3 */
+/* function ia_css_sp_rawcopy_dummy_function: 58B1 */
 
-/* function ia_css_isys_sp_backend_create: 5E98 */
+/* function ia_css_isys_sp_backend_create: 5EA0 */
 
 /* function ia_css_pipeline_sp_init: 17FF */
 
 /* function ia_css_tagger_sp_configure: 224A */
 
-/* function ia_css_ispctrl_sp_end_binary: 3544 */
+/* function ia_css_ispctrl_sp_end_binary: 3542 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_h_pipe_private_per_frame_ddr_ptrs
@@ -317,7 +317,7 @@
 #define HIVE_ADDR_sp_host_sp_com 0x40F8
 #define HIVE_SIZE_sp_host_sp_com 220
 
-/* function ia_css_queue_get_free_space: 4B61 */
+/* function ia_css_queue_get_free_space: 4B5F */
 
 /* function exec_image_pipe: 74B */
 
@@ -333,19 +333,19 @@
 #define HIVE_ADDR_sp_sp_init_dmem_data 0x61A0
 #define HIVE_SIZE_sp_sp_init_dmem_data 24
 
-/* function ia_css_sp_metadata_start: 5C6C */
+/* function ia_css_sp_metadata_start: 5C6A */
 
-/* function ia_css_bufq_sp_init_buffer_queues: 2B8C */
+/* function ia_css_bufq_sp_init_buffer_queues: 2B8A */
 
 /* function ia_css_pipeline_sp_stop: 17E2 */
 
-/* function ia_css_tagger_sp_connect_pipes: 26EF */
+/* function ia_css_tagger_sp_connect_pipes: 26ED */
 
 /* function sp_isys_copy_wait: 794 */
 
 /* function is_isp_debug_buffer_full: 3BC */
 
-/* function ia_css_dmaproxy_sp_configure_channel_from_info: 325E */
+/* function ia_css_dmaproxy_sp_configure_channel_from_info: 325C */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_per_frame_data
@@ -359,7 +359,7 @@
 #define HIVE_ADDR_sp_sp_per_frame_data 0x41D4
 #define HIVE_SIZE_sp_sp_per_frame_data 4
 
-/* function ia_css_rmgr_sp_vbuf_dequeue: 667F */
+/* function ia_css_rmgr_sp_vbuf_dequeue: 6687 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_host2sp_psys_event_queue_handle
@@ -389,7 +389,7 @@
 
 /* function ia_css_pipeline_sp_run: 146C */
 
-/* function memcpy: 6C26 */
+/* function memcpy: 6C2E */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_GP_DEVICE_BASE
@@ -417,15 +417,15 @@
 
 /* function input_system_reg_store: B5B */
 
-/* function sp_dma_proxy_set_width_ab: 30FB */
+/* function sp_dma_proxy_set_width_ab: 30F9 */
 
-/* function ia_css_isys_sp_frontend_start: 60C2 */
+/* function ia_css_isys_sp_frontend_start: 60CA */
 
-/* function ia_css_uds_sp_scale_params: 694A */
+/* function ia_css_uds_sp_scale_params: 6952 */
 
 /* function ia_css_circbuf_increase_size: E97 */
 
-/* function __divu: 6BA4 */
+/* function __divu: 6BAC */
 
 /* function ia_css_thread_sp_get_state: CDA */
 
@@ -457,9 +457,9 @@
 
 /* function ia_css_parambuf_sp_handle_parameter_sets: 130D */
 
-/* function ia_css_spctrl_sp_set_state: 5C9B */
+/* function ia_css_spctrl_sp_set_state: 5C99 */
 
-/* function ia_css_thread_sem_sp_signal: 6DFC */
+/* function ia_css_thread_sem_sp_signal: 6E04 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_IRQ_BASE
@@ -485,13 +485,13 @@
 #define HIVE_ADDR_sp_TIMED_CTRL_BASE 0x40
 #define HIVE_SIZE_sp_TIMED_CTRL_BASE 4
 
-/* function ia_css_isys_sp_isr: 736A */
+/* function ia_css_isys_sp_isr: 7372 */
 
-/* function ia_css_isys_sp_generate_exp_id: 6474 */
+/* function ia_css_isys_sp_generate_exp_id: 647C */
 
-/* function ia_css_rmgr_sp_init: 656E */
+/* function ia_css_rmgr_sp_init: 6576 */
 
-/* function ia_css_thread_sem_sp_init: 6ECF */
+/* function ia_css_thread_sem_sp_init: 6ED7 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_is_isp_requested
@@ -517,9 +517,9 @@
 #define HIVE_ADDR_sp_sem_for_reading_cb_frame 0x4678
 #define HIVE_SIZE_sp_sem_for_reading_cb_frame 40
 
-/* function ia_css_dmaproxy_sp_execute: 31B6 */
+/* function ia_css_dmaproxy_sp_execute: 31B4 */
 
-/* function ia_css_queue_is_empty: 4A44 */
+/* function ia_css_queue_is_empty: 4A42 */
 
 /* function ia_css_pipeline_sp_has_stopped: 17D8 */
 
@@ -537,7 +537,7 @@
 
 /* function ia_css_circbuf_extract: FA5 */
 
-/* function ia_css_tagger_buf_sp_is_locked_from_start: 2A3E */
+/* function ia_css_tagger_buf_sp_is_locked_from_start: 2A3C */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_current_sp_thread
@@ -551,11 +551,11 @@
 #define HIVE_ADDR_sp_current_sp_thread 0x1E0
 #define HIVE_SIZE_sp_current_sp_thread 4
 
-/* function ia_css_spctrl_sp_get_spid: 5CA2 */
+/* function ia_css_spctrl_sp_get_spid: 5CA0 */
 
-/* function ia_css_dmaproxy_sp_read_byte_addr: 71E8 */
+/* function ia_css_dmaproxy_sp_read_byte_addr: 71F0 */
 
-/* function ia_css_rmgr_sp_uninit: 6567 */
+/* function ia_css_rmgr_sp_uninit: 656F */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_threads_stack
@@ -585,7 +585,7 @@
 
 /* function ia_css_parambuf_sp_wait_for_in_param: 10BB */
 
-/* function ia_css_isys_sp_token_map_get_exp_id: 632F */
+/* function ia_css_isys_sp_token_map_get_exp_id: 6337 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cb_elems_param
@@ -637,7 +637,7 @@
 #define HIVE_ADDR_sp_sem_for_reading_cb_param 0x46B8
 #define HIVE_SIZE_sp_sem_for_reading_cb_param 40
 
-/* function ia_css_queue_get_used_space: 4B13 */
+/* function ia_css_queue_get_used_space: 4B11 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_cont_capt_start
@@ -663,9 +663,9 @@
 #define HIVE_ADDR_sp_tmp_heap 0x5F00
 #define HIVE_SIZE_sp_tmp_heap 640
 
-/* function ia_css_rmgr_sp_get_num_vbuf: 6885 */
+/* function ia_css_rmgr_sp_get_num_vbuf: 688D */
 
-/* function ia_css_ispctrl_sp_output_compute_dma_info: 3F59 */
+/* function ia_css_ispctrl_sp_output_compute_dma_info: 3F57 */
 
 /* function ia_css_tagger_sp_lock_exp_id: 2057 */
 
@@ -681,11 +681,11 @@
 #define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_s3a_bufs 0x4A8C
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_s3a_bufs 60
 
-/* function ia_css_queue_is_full: 4BB0 */
+/* function ia_css_queue_is_full: 4BAE */
 
 /* function debug_buffer_init_isp: 105 */
 
-/* function ia_css_isys_sp_frontend_uninit: 6073 */
+/* function ia_css_isys_sp_frontend_uninit: 607B */
 
 /* function ia_css_tagger_sp_exp_id_is_locked: 1F9D */
 
@@ -701,7 +701,7 @@
 #define HIVE_ADDR_sp_ia_css_rmgr_sp_mipi_frame_sem 0x65D8
 #define HIVE_SIZE_sp_ia_css_rmgr_sp_mipi_frame_sem 60
 
-/* function ia_css_rmgr_sp_refcount_dump: 665A */
+/* function ia_css_rmgr_sp_refcount_dump: 6662 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_isp_parameters_id
@@ -741,7 +741,7 @@
 #define HIVE_ADDR_sp_host2sp_isys_event_queue_handle 0x4ADC
 #define HIVE_SIZE_sp_host2sp_isys_event_queue_handle 12
 
-/* function ia_css_thread_sp_yield: 6D72 */
+/* function ia_css_thread_sp_yield: 6D7A */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cbs_param_desc
@@ -769,17 +769,17 @@
 
 /* function ia_css_thread_sp_fork: D67 */
 
-/* function ia_css_tagger_sp_destroy: 26F9 */
+/* function ia_css_tagger_sp_destroy: 26F7 */
 
-/* function ia_css_dmaproxy_sp_vmem_read: 313F */
+/* function ia_css_dmaproxy_sp_vmem_read: 313D */
 
-/* function ia_css_ifmtr_sp_init: 64C5 */
+/* function ia_css_ifmtr_sp_init: 64CD */
 
 /* function initialize_sp_group: 75B */
 
 /* function ia_css_thread_sp_init: D93 */
 
-/* function ia_css_ispctrl_sp_set_stream_base_addr: 4751 */
+/* function ia_css_ispctrl_sp_set_stream_base_addr: 474F */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ISP_DMEM_BASE
@@ -805,7 +805,7 @@
 #define HIVE_ADDR_sp_SP_DMEM_BASE 0x4
 #define HIVE_SIZE_sp_SP_DMEM_BASE 4
 
-/* function ia_css_dmaproxy_sp_read: 31D7 */
+/* function ia_css_dmaproxy_sp_read: 31D5 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_raw_copy_line_count
@@ -831,7 +831,7 @@
 #define HIVE_ADDR_sp_host2sp_tag_cmd_queue_handle 0x4AE8
 #define HIVE_SIZE_sp_host2sp_tag_cmd_queue_handle 12
 
-/* function ia_css_queue_peek: 4A88 */
+/* function ia_css_queue_peek: 4A86 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_flash_sp_frame_cnt
@@ -883,15 +883,15 @@
 
 /* function encode_and_post_sp_event_non_blocking: A92 */
 
-/* function ia_css_isys_sp_frontend_destroy: 615B */
+/* function ia_css_isys_sp_frontend_destroy: 6163 */
 
 /* function is_ddr_debug_buffer_full: 33E */
 
-/* function ia_css_isys_sp_frontend_stop: 608B */
+/* function ia_css_isys_sp_frontend_stop: 6093 */
 
-/* function ia_css_isys_sp_token_map_init: 640F */
+/* function ia_css_isys_sp_token_map_init: 6417 */
 
-/* function sp_dma_proxy_isp_write_addr: 3157 */
+/* function sp_dma_proxy_isp_write_addr: 3155 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_threads_fiber
@@ -909,9 +909,9 @@
 
 /* function debug_enqueue_ddr: 114 */
 
-/* function ia_css_rmgr_sp_refcount_init_vbuf: 6615 */
+/* function ia_css_rmgr_sp_refcount_init_vbuf: 661D */
 
-/* function dmaproxy_sp_read_write: 7295 */
+/* function dmaproxy_sp_read_write: 729D */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_dmaproxy_isp_dma_cmd_buffer
@@ -925,7 +925,7 @@
 #define HIVE_ADDR_sp_ia_css_dmaproxy_isp_dma_cmd_buffer 0x5AE4
 #define HIVE_SIZE_sp_ia_css_dmaproxy_isp_dma_cmd_buffer 4
 
-/* function ia_css_dmaproxy_sp_ack: 6EF7 */
+/* function ia_css_dmaproxy_sp_ack: 6EFF */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_host2sp_buffer_queue_handle
@@ -951,17 +951,17 @@
 #define HIVE_ADDR_sp_ia_css_flash_sp_in_service 0x321C
 #define HIVE_SIZE_sp_ia_css_flash_sp_in_service 4
 
-/* function ia_css_dmaproxy_sp_process: 6F26 */
+/* function ia_css_dmaproxy_sp_process: 6F2E */
 
-/* function ia_css_tagger_buf_sp_mark_from_end: 2AEE */
+/* function ia_css_tagger_buf_sp_mark_from_end: 2AEC */
 
-/* function ia_css_isys_sp_backend_rcv_acquire_ack: 5D47 */
+/* function ia_css_isys_sp_backend_rcv_acquire_ack: 5D4F */
 
-/* function ia_css_isys_sp_backend_pre_acquire_request: 5D5D */
+/* function ia_css_isys_sp_backend_pre_acquire_request: 5D65 */
 
-/* function ia_css_ispctrl_sp_init_cs: 364A */
+/* function ia_css_ispctrl_sp_init_cs: 3648 */
 
-/* function ia_css_spctrl_sp_init: 5CB0 */
+/* function ia_css_spctrl_sp_init: 5CAE */
 
 /* function sp_event_proxy_init: 7B7 */
 
@@ -1025,11 +1025,11 @@
 #define HIVE_ADDR_sp_INPUT_FORMATTER_BASE 0x4C
 #define HIVE_SIZE_sp_INPUT_FORMATTER_BASE 16
 
-/* function sp_dma_proxy_reset_channels: 345E */
+/* function sp_dma_proxy_reset_channels: 345C */
 
-/* function ia_css_isys_sp_backend_acquire: 5E6E */
+/* function ia_css_isys_sp_backend_acquire: 5E76 */
 
-/* function ia_css_tagger_sp_update_size: 2801 */
+/* function ia_css_tagger_sp_update_size: 27FF */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_host_sp_queue
@@ -1045,7 +1045,7 @@
 
 /* function thread_fiber_sp_create: DFF */
 
-/* function ia_css_dmaproxy_sp_set_increments: 32CC */
+/* function ia_css_dmaproxy_sp_set_increments: 32CA */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_writing_cb_frame
@@ -1081,21 +1081,21 @@
 #endif
 #define HIVE_ADDR_sp_sp_start_isp_entry 0x4F7
 
-/* function ia_css_tagger_buf_sp_unmark_all: 2A86 */
+/* function ia_css_tagger_buf_sp_unmark_all: 2A84 */
 
-/* function ia_css_tagger_buf_sp_unmark_from_start: 2AC7 */
+/* function ia_css_tagger_buf_sp_unmark_from_start: 2AC5 */
 
-/* function ia_css_dmaproxy_sp_channel_acquire: 348D */
+/* function ia_css_dmaproxy_sp_channel_acquire: 348B */
 
-/* function ia_css_rmgr_sp_add_num_vbuf: 6861 */
+/* function ia_css_rmgr_sp_add_num_vbuf: 6869 */
 
-/* function ia_css_isys_sp_token_map_create: 645B */
+/* function ia_css_isys_sp_token_map_create: 6463 */
 
-/* function __ia_css_dmaproxy_sp_wait_for_ack_text: 30F2 */
+/* function __ia_css_dmaproxy_sp_wait_for_ack_text: 30F0 */
 
-/* function ia_css_tagger_buf_sp_push_marked: 298A */
+/* function ia_css_tagger_buf_sp_push_marked: 2988 */
 
-/* function ia_css_bufq_sp_is_dynamic_buffer: 2F1F */
+/* function ia_css_bufq_sp_is_dynamic_buffer: 2F1D */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_group
@@ -1135,9 +1135,9 @@
 #define HIVE_ADDR_sp_cur_loc 0x2674
 #define HIVE_SIZE_sp_cur_loc 4
 
-/* function ia_css_tagger_sp_create: 27B1 */
+/* function ia_css_tagger_sp_create: 27AF */
 
-/* function tmpmem_acquire_dmem: 6911 */
+/* function tmpmem_acquire_dmem: 6919 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_MMU_BASE
@@ -1151,9 +1151,9 @@
 #define HIVE_ADDR_sp_MMU_BASE 0x24
 #define HIVE_SIZE_sp_MMU_BASE 8
 
-/* function ia_css_dmaproxy_sp_channel_release: 3476 */
+/* function ia_css_dmaproxy_sp_channel_release: 3474 */
 
-/* function ia_css_dmaproxy_sp_is_idle: 3449 */
+/* function ia_css_dmaproxy_sp_is_idle: 3447 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_qos_start
@@ -1169,7 +1169,7 @@
 
 /* function isp_hmem_load: B9B */
 
-/* function ia_css_eventq_sp_send: 34D2 */
+/* function ia_css_eventq_sp_send: 34D0 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_isys_sp_error_cnt
@@ -1183,7 +1183,7 @@
 #define HIVE_ADDR_sp_ia_css_isys_sp_error_cnt 0x61C4
 #define HIVE_SIZE_sp_ia_css_isys_sp_error_cnt 16
 
-/* function ia_css_tagger_buf_sp_unlock_from_start: 29F8 */
+/* function ia_css_tagger_buf_sp_unlock_from_start: 29F6 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_debug_buffer_ddr_address
@@ -1199,31 +1199,31 @@
 
 /* function sp_isys_copy_request: 79B */
 
-/* function ia_css_rmgr_sp_refcount_retain_vbuf: 66EF */
+/* function ia_css_rmgr_sp_refcount_retain_vbuf: 66F7 */
 
 /* function ia_css_thread_sp_set_priority: D25 */
 
 /* function sizeof_hmem: C51 */
 
-/* function tmpmem_release_dmem: 68FE */
+/* function tmpmem_release_dmem: 6906 */
 
 /* function cnd_input_system_cfg: 419 */
 
-/* function __ia_css_sp_rawcopy_func_critical: 72F3 */
+/* function __ia_css_sp_rawcopy_func_critical: 72FB */
 
-/* function __ia_css_dmaproxy_sp_process_text: 302E */
+/* function __ia_css_dmaproxy_sp_process_text: 302C */
 
-/* function ia_css_dmaproxy_sp_set_width_exception: 32B6 */
+/* function ia_css_dmaproxy_sp_set_width_exception: 32B4 */
 
 /* function sp_event_assert: 916 */
 
-/* function ia_css_flash_sp_init_internal_params: 2B81 */
+/* function ia_css_flash_sp_init_internal_params: 2B7F */
 
-/* function ia_css_tagger_buf_sp_pop_unmarked_and_unlocked: 2826 */
+/* function ia_css_tagger_buf_sp_pop_unmarked_and_unlocked: 2824 */
 
-/* function __modu: 6BEA */
+/* function __modu: 6BF2 */
 
-/* function ia_css_dmaproxy_sp_init_isp_vector: 3111 */
+/* function ia_css_dmaproxy_sp_init_isp_vector: 310F */
 
 /* function isp_vamem_store: 0 */
 
@@ -1263,11 +1263,11 @@
 #define HIVE_ADDR_sp_GDC_BASE 0x44
 #define HIVE_SIZE_sp_GDC_BASE 8
 
-/* function ia_css_queue_local_init: 4D84 */
+/* function ia_css_queue_local_init: 4D82 */
 
-/* function sp_event_proxy_callout_func: 6C7C */
+/* function sp_event_proxy_callout_func: 6C84 */
 
-/* function ia_css_dmaproxy_sp_deregister_channel_from_port: 30D9 */
+/* function ia_css_dmaproxy_sp_deregister_channel_from_port: 30D7 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_thread_sp_num_ready_threads
@@ -1293,13 +1293,13 @@
 #define HIVE_ADDR_sp_sp_threads_stack_size 0x180
 #define HIVE_SIZE_sp_sp_threads_stack_size 28
 
-/* function ia_css_ispctrl_sp_isp_done_row_striping: 3F3F */
+/* function ia_css_ispctrl_sp_isp_done_row_striping: 3F3D */
 
-/* function __ia_css_isys_sp_isr_text: 6186 */
+/* function __ia_css_isys_sp_isr_text: 618E */
 
-/* function ia_css_queue_dequeue: 4BF8 */
+/* function ia_css_queue_dequeue: 4BF6 */
 
-/* function ia_css_dmaproxy_sp_configure_channel: 71FF */
+/* function ia_css_dmaproxy_sp_configure_channel: 7207 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_current_thread_fiber_sp
@@ -1345,11 +1345,11 @@
 #define HIVE_ADDR_sp_isp_ph 0x61D4
 #define HIVE_SIZE_sp_isp_ph 28
 
-/* function ia_css_isys_sp_token_map_flush: 6398 */
+/* function ia_css_isys_sp_token_map_flush: 63A0 */
 
-/* function ia_css_ispctrl_sp_init_ds: 37E8 */
+/* function ia_css_ispctrl_sp_init_ds: 37E6 */
 
-/* function get_xmem_base_addr_raw: 3BA2 */
+/* function get_xmem_base_addr_raw: 3BA0 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cbs_param
@@ -1377,21 +1377,21 @@
 #define HIVE_ADDR_sp_sem_for_sp_group 0x4748
 #define HIVE_SIZE_sp_sem_for_sp_group 20
 
-/* function ia_css_framebuf_sp_wait_for_in_frame: 688C */
+/* function ia_css_framebuf_sp_wait_for_in_frame: 6894 */
 
-/* function ia_css_tagger_buf_sp_push_unmarked: 2899 */
+/* function ia_css_tagger_buf_sp_push_unmarked: 2897 */
 
 /* function isp_hmem_clear: B62 */
 
-/* function ia_css_framebuf_sp_release_in_frame: 68CF */
+/* function ia_css_framebuf_sp_release_in_frame: 68D7 */
 
-/* function ia_css_isys_sp_backend_snd_acquire_request: 5DC0 */
+/* function ia_css_isys_sp_backend_snd_acquire_request: 5DC8 */
 
-/* function ia_css_isys_sp_token_map_is_full: 620D */
+/* function ia_css_isys_sp_token_map_is_full: 6215 */
 
 /* function input_system_acquisition_run: B30 */
 
-/* function ia_css_ispctrl_sp_start_binary: 3628 */
+/* function ia_css_ispctrl_sp_start_binary: 3626 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_h_pipe_private_ddr_ptrs
@@ -1405,7 +1405,7 @@
 #define HIVE_ADDR_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 0x57E0
 #define HIVE_SIZE_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 20
 
-/* function ia_css_eventq_sp_recv: 34A4 */
+/* function ia_css_eventq_sp_recv: 34A2 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_pool
@@ -1419,7 +1419,7 @@
 #define HIVE_ADDR_sp_isp_pool 0x2D4
 #define HIVE_SIZE_sp_isp_pool 4
 
-/* function ia_css_rmgr_sp_rel_gen: 65B0 */
+/* function ia_css_rmgr_sp_rel_gen: 65B8 */
 
 /* function css_get_frame_processing_time_end: 1F8B */
 
@@ -1435,13 +1435,13 @@
 #define HIVE_ADDR_sp_event_any_pending_mask 0x2F0
 #define HIVE_SIZE_sp_event_any_pending_mask 8
 
-/* function ia_css_isys_sp_backend_push: 5D71 */
+/* function ia_css_isys_sp_backend_push: 5D79 */
 
 /* function sh_css_decode_tag_descr: 3D7 */
 
 /* function debug_enqueue_isp: 2E9 */
 
-/* function ia_css_spctrl_sp_uninit: 5CA9 */
+/* function ia_css_spctrl_sp_uninit: 5CA7 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_HIVE_IF_SWITCH_CODE
@@ -1467,7 +1467,7 @@
 #define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_dis_bufs 0x57F4
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_dis_bufs 140
 
-/* function ia_css_tagger_buf_sp_lock_from_start: 2A1B */
+/* function ia_css_tagger_buf_sp_lock_from_start: 2A19 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_isp_idle
@@ -1481,11 +1481,11 @@
 #define HIVE_ADDR_sp_sem_for_isp_idle 0x475C
 #define HIVE_SIZE_sp_sem_for_isp_idle 20
 
-/* function ia_css_dmaproxy_sp_write_byte_addr: 3185 */
+/* function ia_css_dmaproxy_sp_write_byte_addr: 3183 */
 
-/* function ia_css_dmaproxy_sp_init: 30AB */
+/* function ia_css_dmaproxy_sp_init: 30A9 */
 
-/* function ia_css_bufq_sp_release_dynamic_buf_clock_tick: 2C14 */
+/* function ia_css_bufq_sp_release_dynamic_buf_clock_tick: 2C12 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ISP_VAMEM_BASE
@@ -1523,11 +1523,11 @@
 #define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_exp_ids 0x5880
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_exp_ids 70
 
-/* function ia_css_queue_item_load: 4E99 */
+/* function ia_css_queue_item_load: 4E97 */
 
-/* function ia_css_spctrl_sp_get_state: 5C94 */
+/* function ia_css_spctrl_sp_get_state: 5C92 */
 
-/* function ia_css_isys_sp_token_map_uninit: 63B7 */
+/* function ia_css_isys_sp_token_map_uninit: 63BF */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_callout_sp_thread
@@ -1555,31 +1555,31 @@
 #define HIVE_ADDR_sp_SP_PMEM_BASE 0x0
 #define HIVE_SIZE_sp_SP_PMEM_BASE 4
 
-/* function ia_css_isys_sp_token_map_snd_acquire_req: 6316 */
+/* function ia_css_isys_sp_token_map_snd_acquire_req: 631E */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_isp_input_stream_format
 #define HIVE_MEM_sp_isp_input_stream_format scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_input_stream_format 0x3FC0
+#define HIVE_ADDR_sp_isp_input_stream_format 0x40DC
 #define HIVE_SIZE_sp_isp_input_stream_format 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_isp_input_stream_format scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_isp_input_stream_format 0x3FC0
+#define HIVE_ADDR_sp_sp_isp_input_stream_format 0x40DC
 #define HIVE_SIZE_sp_sp_isp_input_stream_format 20
 
-/* function __mod: 6BD6 */
+/* function __mod: 6BDE */
 
-/* function ia_css_dmaproxy_sp_init_dmem_channel: 31F1 */
+/* function ia_css_dmaproxy_sp_init_dmem_channel: 31EF */
 
 /* function ia_css_thread_sp_join: D56 */
 
-/* function ia_css_dmaproxy_sp_add_command: 72D7 */
+/* function ia_css_dmaproxy_sp_add_command: 72DF */
 
-/* function ia_css_sp_metadata_thread_func: 5B40 */
+/* function ia_css_sp_metadata_thread_func: 5B3E */
 
-/* function __sp_event_proxy_func_critical: 6C69 */
+/* function __sp_event_proxy_func_critical: 6C71 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_dmaproxy_sp_proxy_status
@@ -1593,27 +1593,27 @@
 #define HIVE_ADDR_sp_dmaproxy_sp_proxy_status 0x208
 #define HIVE_SIZE_sp_dmaproxy_sp_proxy_status 4
 
-/* function ia_css_sp_metadata_wait: 5C5B */
+/* function ia_css_sp_metadata_wait: 5C59 */
 
 /* function ia_css_circbuf_peek_from_start: F63 */
 
-/* function ia_css_event_sp_encode: 3530 */
+/* function ia_css_event_sp_encode: 352E */
 
 /* function ia_css_thread_sp_run: DC9 */
 
 /* function sp_isys_copy_func: 77D */
 
-/* function ia_css_isys_sp_backend_flush: 5DE0 */
+/* function ia_css_isys_sp_backend_flush: 5DE8 */
 
-/* function ia_css_isys_sp_backend_frame_exists: 5CFF */
+/* function ia_css_isys_sp_backend_frame_exists: 5CFD */
 
-/* function ia_css_sp_isp_param_init_isp_memories: 48D3 */
+/* function ia_css_sp_isp_param_init_isp_memories: 48D1 */
 
 /* function register_isr: 901 */
 
 /* function irq_raise: D3 */
 
-/* function ia_css_dmaproxy_sp_mmu_invalidate: 2FE9 */
+/* function ia_css_dmaproxy_sp_mmu_invalidate: 2FE7 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_HIVE_IF_SRST_ADDRESS
@@ -1641,11 +1641,11 @@
 #define HIVE_ADDR_sp_ia_css_isys_sp_frontend_states 0x61B8
 #define HIVE_SIZE_sp_ia_css_isys_sp_frontend_states 12
 
-/* function ia_css_dmaproxy_sp_read_byte_addr_mmio: 71D1 */
+/* function ia_css_dmaproxy_sp_read_byte_addr_mmio: 71D9 */
 
-/* function ia_css_ispctrl_sp_done_ds: 37CB */
+/* function ia_css_ispctrl_sp_done_ds: 37C9 */
 
-/* function ia_css_sp_isp_param_get_mem_inits: 48AE */
+/* function ia_css_sp_isp_param_get_mem_inits: 48AC */
 
 /* function ia_css_parambuf_sp_init_buffer_queues: 1452 */
 
@@ -1687,9 +1687,9 @@
 #define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_frames 0x58C8
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_frames 280
 
-/* function ia_css_isys_sp_backend_release: 5E55 */
+/* function ia_css_isys_sp_backend_release: 5E5D */
 
-/* function ia_css_isys_sp_backend_destroy: 5E7F */
+/* function ia_css_isys_sp_backend_destroy: 5E87 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp2host_buffer_queue_handle
@@ -1703,32 +1703,32 @@
 #define HIVE_ADDR_sp_sp2host_buffer_queue_handle 0x59E0
 #define HIVE_SIZE_sp_sp2host_buffer_queue_handle 96
 
-/* function ia_css_isys_sp_token_map_check_mipi_frame_size: 62DA */
+/* function ia_css_isys_sp_token_map_check_mipi_frame_size: 62E2 */
 
-/* function ia_css_ispctrl_sp_init_isp_vars: 45B4 */
+/* function ia_css_ispctrl_sp_init_isp_vars: 45B2 */
 
-/* function ia_css_isys_sp_frontend_has_empty_mipi_buffer_cb: 5ED2 */
+/* function ia_css_isys_sp_frontend_has_empty_mipi_buffer_cb: 5EDA */
 
 /* function sp_warning: 941 */
 
-/* function ia_css_rmgr_sp_vbuf_enqueue: 66AF */
+/* function ia_css_rmgr_sp_vbuf_enqueue: 66B7 */
 
 /* function ia_css_tagger_sp_tag_exp_id: 20D4 */
 
-/* function ia_css_dmaproxy_sp_write: 319C */
+/* function ia_css_dmaproxy_sp_write: 319A */
 
 /* function ia_css_parambuf_sp_release_in_param: 12D2 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_irq_sw_interrupt_token
 #define HIVE_MEM_irq_sw_interrupt_token scalar_processor_2400_dmem
-#define HIVE_ADDR_irq_sw_interrupt_token 0x3FBC
+#define HIVE_ADDR_irq_sw_interrupt_token 0x40D8
 #define HIVE_SIZE_irq_sw_interrupt_token 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_irq_sw_interrupt_token scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_irq_sw_interrupt_token 0x3FBC
+#define HIVE_ADDR_sp_irq_sw_interrupt_token 0x40D8
 #define HIVE_SIZE_sp_irq_sw_interrupt_token 4
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -1743,7 +1743,7 @@
 #define HIVE_ADDR_sp_sp_isp_addresses 0x5E34
 #define HIVE_SIZE_sp_sp_isp_addresses 172
 
-/* function ia_css_rmgr_sp_acq_gen: 65D4 */
+/* function ia_css_rmgr_sp_acq_gen: 65DC */
 
 /* function receiver_reg_load: B00 */
 
@@ -1762,16 +1762,16 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_host_sp_queues_initialized
 #define HIVE_MEM_host_sp_queues_initialized scalar_processor_2400_dmem
-#define HIVE_ADDR_host_sp_queues_initialized 0x3FD4
+#define HIVE_ADDR_host_sp_queues_initialized 0x40F0
 #define HIVE_SIZE_host_sp_queues_initialized 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_host_sp_queues_initialized scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_host_sp_queues_initialized 0x3FD4
+#define HIVE_ADDR_sp_host_sp_queues_initialized 0x40F0
 #define HIVE_SIZE_sp_host_sp_queues_initialized 4
 
-/* function ia_css_queue_uninit: 4D42 */
+/* function ia_css_queue_uninit: 4D40 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_ispctrl_sp_isp_started
@@ -1785,11 +1785,11 @@
 #define HIVE_ADDR_sp_ia_css_ispctrl_sp_isp_started 0x5AE8
 #define HIVE_SIZE_sp_ia_css_ispctrl_sp_isp_started 4
 
-/* function ia_css_bufq_sp_release_dynamic_buf: 2C68 */
+/* function ia_css_bufq_sp_release_dynamic_buf: 2C66 */
 
-/* function ia_css_dmaproxy_sp_set_height_exception: 32A4 */
+/* function ia_css_dmaproxy_sp_set_height_exception: 32A2 */
 
-/* function ia_css_dmaproxy_sp_init_vmem_channel: 3227 */
+/* function ia_css_dmaproxy_sp_init_vmem_channel: 3225 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_num_ready_threads
@@ -1803,7 +1803,7 @@
 #define HIVE_ADDR_sp_num_ready_threads 0x498C
 #define HIVE_SIZE_sp_num_ready_threads 4
 
-/* function ia_css_dmaproxy_sp_write_byte_addr_mmio: 316E */
+/* function ia_css_dmaproxy_sp_write_byte_addr_mmio: 316C */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_vbuf_spref
@@ -1829,7 +1829,7 @@
 #define HIVE_ADDR_sp_sp_metadata_thread 0x4940
 #define HIVE_SIZE_sp_sp_metadata_thread 68
 
-/* function ia_css_queue_enqueue: 4C82 */
+/* function ia_css_queue_enqueue: 4C80 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_flash_sp_request
@@ -1843,9 +1843,9 @@
 #define HIVE_ADDR_sp_ia_css_flash_sp_request 0x4998
 #define HIVE_SIZE_sp_ia_css_flash_sp_request 4
 
-/* function ia_css_dmaproxy_sp_vmem_write: 3128 */
+/* function ia_css_dmaproxy_sp_vmem_write: 3126 */
 
-/* function ia_css_isys_sp_token_map_snd_capture_req: 633C */
+/* function ia_css_isys_sp_token_map_snd_capture_req: 6344 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_reading_if
@@ -1863,7 +1863,7 @@
 
 /* function ia_css_pipeline_sp_start: 17EA */
 
-/* function ia_css_sp_rawcopy_init: 531D */
+/* function ia_css_sp_rawcopy_init: 531B */
 
 /* function tmr_clock_read: AD2 */
 
@@ -1879,7 +1879,7 @@
 #define HIVE_ADDR_sp_ISP_BAMEM_BASE 0x2E8
 #define HIVE_SIZE_sp_ISP_BAMEM_BASE 4
 
-/* function ia_css_isys_sp_frontend_rcv_capture_ack: 5F8A */
+/* function ia_css_isys_sp_frontend_rcv_capture_ack: 5F92 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_sems_for_sp2host_buf_queues
@@ -1893,18 +1893,6 @@
 #define HIVE_ADDR_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues 0x5A40
 #define HIVE_SIZE_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues 160
 
-#ifndef HIVE_MULTIPLE_PROGRAMS
-#ifndef HIVE_MEM_mem_map
-#define HIVE_MEM_mem_map scalar_processor_2400_dmem
-#define HIVE_ADDR_mem_map 0x3FD8
-#define HIVE_SIZE_mem_map 284
-#else
-#endif
-#endif
-#define HIVE_MEM_sp_mem_map scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_mem_map 0x3FD8
-#define HIVE_SIZE_sp_mem_map 284
-
 /* function css_get_frame_processing_time_start: 1F94 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -1935,9 +1923,9 @@
 #define HIVE_ADDR_sp_sem_for_str2mem 0x4794
 #define HIVE_SIZE_sp_sem_for_str2mem 20
 
-/* function ia_css_tagger_buf_sp_is_marked_from_start: 2A62 */
+/* function ia_css_tagger_buf_sp_is_marked_from_start: 2A60 */
 
-/* function ia_css_bufq_sp_acquire_dynamic_buf: 2E42 */
+/* function ia_css_bufq_sp_acquire_dynamic_buf: 2E40 */
 
 /* function ia_css_circbuf_destroy: 1085 */
 
@@ -1953,13 +1941,13 @@
 #define HIVE_ADDR_sp_ISP_PMEM_BASE 0xC
 #define HIVE_SIZE_sp_ISP_PMEM_BASE 4
 
-/* function ia_css_sp_isp_param_mem_load: 4836 */
+/* function ia_css_sp_isp_param_mem_load: 4834 */
 
-/* function __div: 6B8E */
+/* function __div: 6B96 */
 
-/* function ia_css_isys_sp_frontend_create: 616C */
+/* function ia_css_isys_sp_frontend_create: 6174 */
 
-/* function ia_css_rmgr_sp_refcount_release_vbuf: 66CE */
+/* function ia_css_rmgr_sp_refcount_release_vbuf: 66D6 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_flash_sp_in_use
@@ -1973,7 +1961,7 @@
 #define HIVE_ADDR_sp_ia_css_flash_sp_in_use 0x499C
 #define HIVE_SIZE_sp_ia_css_flash_sp_in_use 4
 
-/* function ia_css_thread_sem_sp_wait: 6E47 */
+/* function ia_css_thread_sem_sp_wait: 6E4F */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_sleep_mode
@@ -2001,9 +1989,9 @@
 #define HIVE_ADDR_sp_sp_max_cb_elems 0x148
 #define HIVE_SIZE_sp_sp_max_cb_elems 8
 
-/* function ia_css_dmaproxy_sp_register_channel_to_port: 30E6 */
+/* function ia_css_dmaproxy_sp_register_channel_to_port: 30E4 */
 
-/* function ia_css_queue_remote_init: 4D64 */
+/* function ia_css_queue_remote_init: 4D62 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_stop_req
-- 
1.7.9.5

