From bd4b45e600ef42c16d16a8d1355248cfc7e0c2be Mon Sep 17 00:00:00 2001
From: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date: Fri, 9 Aug 2013 13:48:00 +0100
Subject: [PATCH 025/351] ASoC: wm5110: Copy data out to user-space

Change-Id: I7bdc8ffb94a1f1d12cda97608cdabfbe9c1f35ee
Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Signed-off-by: Nikesh Oswal <Nikesh.Oswal@wolfsonmicro.com>
---
 sound/soc/codecs/wm5110.c  |   29 ++++++++++++++++++++++--
 sound/soc/codecs/wm_adsp.c |   52 ++++++++++++++++++++++++++++++++++++++++++++
 sound/soc/codecs/wm_adsp.h |    3 +++
 3 files changed, 82 insertions(+), 2 deletions(-)

diff --git a/sound/soc/codecs/wm5110.c b/sound/soc/codecs/wm5110.c
index 52c4412..640c61a 100644
--- a/sound/soc/codecs/wm5110.c
+++ b/sound/soc/codecs/wm5110.c
@@ -1625,7 +1625,7 @@ static struct snd_soc_dai_driver wm5110_dai[] = {
 static irqreturn_t adsp2_irq(int irq, void *data)
 {
 	struct wm5110_priv *wm5110 = data;
-	int ret;
+	int ret, avail;
 
 	mutex_lock(&wm5110->compr_info.lock);
 
@@ -1639,6 +1639,10 @@ static irqreturn_t adsp2_irq(int irq, void *data)
 
 	wm5110->compr_info.total_copied += ret;
 
+	avail = wm_adsp_stream_avail(wm5110->compr_info.adsp);
+	if (avail > WM5110_DEFAULT_FRAGMENT_SIZE)
+		snd_compr_fragment_elapsed(wm5110->compr_info.stream);
+
 out:
 	mutex_unlock(&wm5110->compr_info.lock);
 
@@ -1769,13 +1773,34 @@ static int wm5110_trigger(struct snd_compr_stream *stream, int cmd)
 static int wm5110_pointer(struct snd_compr_stream *stream,
 			  struct snd_compr_tstamp *tstamp)
 {
+	struct snd_soc_pcm_runtime *rtd = stream->private_data;
+	struct wm5110_priv *wm5110 = snd_soc_codec_get_drvdata(rtd->codec);
+
+	mutex_lock(&wm5110->compr_info.lock);
+	tstamp->byte_offset = 0;
+	tstamp->copied_total = wm5110->compr_info.total_copied;
+	mutex_unlock(&wm5110->compr_info.lock);
+
 	return 0;
 }
 
 static int wm5110_copy(struct snd_compr_stream *stream, char __user *buf,
 		       size_t count)
 {
-	return 0;
+	struct snd_soc_pcm_runtime *rtd = stream->private_data;
+	struct wm5110_priv *wm5110 = snd_soc_codec_get_drvdata(rtd->codec);
+	int ret;
+
+	mutex_lock(&wm5110->compr_info.lock);
+
+	if (stream->direction == SND_COMPRESS_PLAYBACK)
+		ret = -EINVAL;
+	else
+		ret = wm_adsp_stream_read(wm5110->compr_info.adsp, buf, count);
+
+	mutex_unlock(&wm5110->compr_info.lock);
+
+	return ret;
 }
 
 static int wm5110_get_caps(struct snd_compr_stream *stream,
diff --git a/sound/soc/codecs/wm_adsp.c b/sound/soc/codecs/wm_adsp.c
index f37f9a6..4c56c8e 100644
--- a/sound/soc/codecs/wm_adsp.c
+++ b/sound/soc/codecs/wm_adsp.c
@@ -2349,4 +2349,56 @@ int wm_adsp_stream_capture(struct wm_adsp *adsp)
 }
 EXPORT_SYMBOL_GPL(wm_adsp_stream_capture);
 
+int wm_adsp_stream_read(struct wm_adsp *adsp, char __user *buf, size_t count)
+{
+	int avail, to_end;
+
+	if (!adsp->running)
+		return -EIO;
+
+	avail = CIRC_CNT(adsp->capt_buf.head,
+			 adsp->capt_buf.tail,
+			 adsp->capt_buf_size);
+	to_end = CIRC_CNT_TO_END(adsp->capt_buf.head,
+				 adsp->capt_buf.tail,
+				 adsp->capt_buf_size);
+
+	if (avail < count)
+		count = avail;
+
+	if (count > to_end) {
+		if (copy_to_user(buf,
+				 adsp->capt_buf.buf +
+				 adsp->capt_buf.tail,
+				 to_end))
+			return -EFAULT;
+		if (copy_to_user(buf + to_end, adsp->capt_buf.buf,
+				 count - to_end))
+			return -EFAULT;
+	} else {
+		if (copy_to_user(buf,
+				 adsp->capt_buf.buf +
+				 adsp->capt_buf.tail,
+				 count))
+			return -EFAULT;
+	}
+
+	adsp->capt_buf.tail += count;
+	adsp->capt_buf.tail &= adsp->capt_buf_size - 1;
+
+	if (adsp->buffer_drain_pending)
+		wm_adsp_stream_capture(adsp);
+
+	return count;
+}
+EXPORT_SYMBOL_GPL(wm_adsp_stream_read);
+
+int wm_adsp_stream_avail(const struct wm_adsp *adsp)
+{
+	return CIRC_CNT(adsp->capt_buf.head,
+			adsp->capt_buf.tail,
+			adsp->capt_buf_size);
+}
+EXPORT_SYMBOL_GPL(wm_adsp_stream_avail);
+
 MODULE_LICENSE("GPL v2");
diff --git a/sound/soc/codecs/wm_adsp.h b/sound/soc/codecs/wm_adsp.h
index 11b58f4..82796fe 100644
--- a/sound/soc/codecs/wm_adsp.h
+++ b/sound/soc/codecs/wm_adsp.h
@@ -121,5 +121,8 @@ extern int wm_adsp_stream_alloc(struct wm_adsp* adsp,
 extern int wm_adsp_stream_free(struct wm_adsp* adsp);
 extern int wm_adsp_stream_start(struct wm_adsp *adsp);
 extern int wm_adsp_stream_capture(struct wm_adsp *adsp);
+extern int wm_adsp_stream_read(struct wm_adsp *adsp, char __user *buf,
+			       size_t count);
+extern int wm_adsp_stream_avail(const struct wm_adsp *adsp);
 
 #endif
-- 
1.7.9.5

