From 4ef3657a92393fbd1b742e07faee29dd6afcd522 Mon Sep 17 00:00:00 2001
From: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date: Fri, 9 May 2014 16:45:37 +0100
Subject: [PATCH 205/351] switch: arizona: Add support for moisture detection
 on HPDETL

Add support for using the left headphone detection pin for moisture
detection rather than headphone impedance measurement.

Change-Id: Ie950882c61eb498f97be9fc89902585061a161c9
Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Signed-off-by: Nikesh Oswal <Nikesh.Oswal@wolfsonmicro.com>
---
 drivers/switch/switch-arizona.c   |   60 +++++++++++++++++++++++++++++++++++--
 include/linux/mfd/arizona/pdata.h |    6 ++++
 include/linux/switch-arizona.h    |    1 +
 3 files changed, 65 insertions(+), 2 deletions(-)

diff --git a/drivers/switch/switch-arizona.c b/drivers/switch/switch-arizona.c
index c73f927..c81d7f1 100644
--- a/drivers/switch/switch-arizona.c
+++ b/drivers/switch/switch-arizona.c
@@ -144,6 +144,7 @@ inline void arizona_extcon_report(struct arizona_extcon_info *info, int state)
 }
 EXPORT_SYMBOL_GPL(arizona_extcon_report);
 
+static const struct arizona_jd_state arizona_hpdet_moisture;
 static const struct arizona_jd_state arizona_hpdet_acc_id;
 
 static int arizona_jds_get_mode(struct arizona_extcon_info *info)
@@ -786,6 +787,33 @@ void arizona_hpdet_stop(struct arizona_extcon_info *info)
 }
 EXPORT_SYMBOL_GPL(arizona_hpdet_stop);
 
+static int arizona_hpdet_moisture_start(struct arizona_extcon_info *info)
+{
+	int ret;
+
+	ret = arizona_hpdet_start(info);
+
+	arizona_extcon_do_magic(info, 0);
+
+	return ret;
+}
+
+static int arizona_hpdet_moisture_reading(struct arizona_extcon_info *info,
+					  int val)
+{
+	struct arizona *arizona = info->arizona;
+
+	if (val < arizona->pdata.hpdet_moisture_imp) {
+		arizona_jds_set_state(info, &arizona_micd_microphone);
+	} else {
+		dev_warn(arizona->dev,
+			 "Jack detection due to moisture, ignoring\n");
+		arizona_jds_set_state(info, NULL);
+	}
+
+	return 0;
+}
+
 int arizona_hpdet_reading(struct arizona_extcon_info *info, int val)
 {
 	struct arizona *arizona = info->arizona;
@@ -1005,7 +1033,10 @@ int arizona_micd_mic_reading(struct arizona_extcon_info *info, int val)
 done:
 	pm_runtime_mark_last_busy(info->dev);
 
-	ret = arizona_jds_set_state(info, &arizona_hpdet_left);
+	if (arizona->pdata.hpdet_moisture_imp)
+		ret = arizona_jds_set_state(info, &arizona_hpdet_right);
+	else
+		ret = arizona_jds_set_state(info, &arizona_hpdet_left);
 	if (ret < 0) {
 		if (info->mic)
 			arizona_extcon_report(info, BIT_HEADSET);
@@ -1028,11 +1059,15 @@ EXPORT_SYMBOL_GPL(arizona_micd_mic_timeout_ms);
 
 void arizona_micd_mic_timeout(struct arizona_extcon_info *info)
 {
+	struct arizona *arizona = info->arizona;
 	int ret;
 
 	dev_dbg(info->arizona->dev, "MICD timed out, reporting HP\n");
 
-	ret = arizona_jds_set_state(info, &arizona_hpdet_left);
+	if (arizona->pdata.hpdet_moisture_imp)
+		ret = arizona_jds_set_state(info, &arizona_hpdet_right);
+	else
+		ret = arizona_jds_set_state(info, &arizona_hpdet_left);
 	if (ret < 0)
 		arizona_extcon_report(info, BIT_HEADSET_NO_MIC);
 }
@@ -1304,6 +1339,13 @@ static irqreturn_t arizona_micdet(int irq, void *data)
 	return IRQ_HANDLED;
 }
 
+static const struct arizona_jd_state arizona_hpdet_moisture = {
+	.mode = ARIZONA_ACCDET_MODE_HPL,
+	.start = arizona_hpdet_moisture_start,
+	.reading = arizona_hpdet_moisture_reading,
+	.stop = arizona_hpdet_stop,
+};
+
 const struct arizona_jd_state arizona_hpdet_left = {
 	.mode = ARIZONA_ACCDET_MODE_HPL,
 	.start = arizona_hpdet_start,
@@ -1312,6 +1354,14 @@ const struct arizona_jd_state arizona_hpdet_left = {
 };
 EXPORT_SYMBOL_GPL(arizona_hpdet_left);
 
+const struct arizona_jd_state arizona_hpdet_right = {
+	.mode = ARIZONA_ACCDET_MODE_HPR,
+	.start = arizona_hpdet_start,
+	.reading = arizona_hpdet_reading,
+	.stop = arizona_hpdet_stop,
+};
+EXPORT_SYMBOL_GPL(arizona_hpdet_right);
+
 const struct arizona_jd_state arizona_micd_button = {
 	.mode = ARIZONA_ACCDET_MODE_MIC,
 	.start = arizona_micd_start,
@@ -1409,6 +1459,9 @@ static irqreturn_t arizona_jackdet(int irq, void *data)
 			if (arizona->pdata.custom_jd)
 				arizona_jds_set_state(info,
 						      arizona->pdata.custom_jd);
+			else if (arizona->pdata.hpdet_moisture_imp)
+				arizona_jds_set_state(info,
+						      &arizona_hpdet_moisture);
 			else
 				arizona_jds_set_state(info,
 						      &arizona_micd_microphone);
@@ -1546,6 +1599,9 @@ static int arizona_extcon_get_pdata(struct arizona *arizona)
 	arizona_of_read_u32(arizona, "wlf,fixed-hpdet-imp", false,
 			    &pdata->fixed_hpdet_imp);
 
+	arizona_of_read_u32(arizona, "wlf,hpdet-moisture-imp", false,
+			    &pdata->hpdet_moisture_imp);
+
 	return 0;
 }
 #else
diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index 90f7a5f..449e9ad 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -149,6 +149,12 @@ struct arizona_pdata {
 	/** Callback notifying HPDET result */
 	void (*hpdet_cb)(unsigned int measurement);
 
+	/** Use HPDETL to check for moisture, this value specifies the
+	 * threshold impedance in ohms above which it will be considered
+	 * a false detection
+	 */
+	int hpdet_moisture_imp;
+
 	/** Use software comparison to determine mic presence */
 	bool micd_software_compare;
 
diff --git a/include/linux/switch-arizona.h b/include/linux/switch-arizona.h
index 0de61b0..927b1373 100644
--- a/include/linux/switch-arizona.h
+++ b/include/linux/switch-arizona.h
@@ -56,6 +56,7 @@ int arizona_jds_set_state(struct arizona_extcon_info *info,
 			  const struct arizona_jd_state *new_state);
 
 extern const struct arizona_jd_state arizona_hpdet_left;
+extern const struct arizona_jd_state arizona_hpdet_right;
 extern const struct arizona_jd_state arizona_micd_button;
 extern const struct arizona_jd_state arizona_micd_microphone;
 
-- 
1.7.9.5

