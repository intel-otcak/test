From 1841e0ac0765bd5e0a0b61638bd7a849c15fc2cc Mon Sep 17 00:00:00 2001
Message-Id: <1841e0ac0765bd5e0a0b61638bd7a849c15fc2cc.1413837857.git.chang-joon.lee@intel.com>
In-Reply-To: <006497b7323eca32c2f489a1a9f662743c0d16d2.1413837855.git.chang-joon.lee@intel.com>
References: <006497b7323eca32c2f489a1a9f662743c0d16d2.1413837855.git.chang-joon.lee@intel.com>
From: Vidya Srinivas <vidya.srinivas@intel.com>
Date: Fri, 4 Jul 2014 23:22:34 +0530
Subject: [PATCH 081/312] REVERTME [VPG]: drm/i915: Updated DSI sequence

Though the merged sequence works, under stress testing of multiple
enable/disable cycles there are times where display does not come up
The updated sequence is as suggested by HW/SV teams for fixing some of
the issues which might stall the pipe

(cherry picked from commit d202292130cb06275f966aa0e21c7e8461b5353f)

REVERTME - This patch will be replaced by equivalent patches from
           upstream.

Change-Id: I378f2c7aef79b566c0c330c626c9ea0d06d1d08d
Signed-off-by: Shobhit Kumar <shobhit.kumar@intel.com>
Signed-off-by: Vidya Srinivas <vidya.srinivas@intel.com>
---
 drivers/gpu/drm/i915/i915_reg.h      |    1 +
 drivers/gpu/drm/i915/intel_display.c |   18 +++++++++++++++---
 2 files changed, 16 insertions(+), 3 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_reg.h b/drivers/gpu/drm/i915/i915_reg.h
index 5735ad2..1026826 100644
--- a/drivers/gpu/drm/i915/i915_reg.h
+++ b/drivers/gpu/drm/i915/i915_reg.h
@@ -1613,6 +1613,7 @@ enum punit_power_well {
 #define   DPLL_LOCK_VLV			(1<<15)
 #define   DPLL_INTEGRATED_CRI_CLK_VLV	(1<<14)
 #define   DPLL_INTEGRATED_CLOCK_VLV	(1<<13)
+#define   DPLL_RESERVED_BIT    (1<<11)
 #define   DPLL_SSC_REF_CLOCK_CHV	(1<<13)
 #define   DPLL_PORTC_READY_MASK		(0xf << 4)
 #define   DPLL_PORTB_READY_MASK		(0xf)
diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index b58dfe9..652085d 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -5110,10 +5110,19 @@ static void valleyview_crtc_enable(struct drm_crtc *crtc)
 			vlv_enable_pll(intel_crtc);
 	}
 
-	for_each_encoder_on_crtc(dev, crtc, encoder)
+	for_each_encoder_on_crtc(dev, crtc, encoder) {
 		if (encoder->pre_enable)
 			encoder->pre_enable(encoder);
 
+		if (encoder->type == INTEL_OUTPUT_DSI) {
+			/*
+			 * For DSI recommended to enable
+			 * PORT before plane and pipe
+			 */
+			encoder->enable(encoder);
+		}
+	}
+
 	i9xx_pfit_enable(intel_crtc);
 
 	intel_crtc_load_lut(crtc);
@@ -5121,8 +5130,11 @@ static void valleyview_crtc_enable(struct drm_crtc *crtc)
 	intel_update_watermarks(crtc);
 	intel_enable_pipe(intel_crtc);
 
-	for_each_encoder_on_crtc(dev, crtc, encoder)
-		encoder->enable(encoder);
+	for_each_encoder_on_crtc(dev, crtc, encoder) {
+		if (encoder->type != INTEL_OUTPUT_DSI)
+			/* For DSI already enabled above */
+			encoder->enable(encoder);
+	}
 
 	intel_crtc_enable_planes(crtc);
 	intel_update_drrs(dev);
-- 
1.7.9.5

