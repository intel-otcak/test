From 2fb61bfefb6fca8359e18b489c2e3e96c5ce3790 Mon Sep 17 00:00:00 2001
Message-Id: <2fb61bfefb6fca8359e18b489c2e3e96c5ce3790.1423872525.git.feitong.yi@intel.com>
In-Reply-To: <3062c7e6b919c393846ff0e13558e7f648b352ca.1423872525.git.feitong.yi@intel.com>
References: <3062c7e6b919c393846ff0e13558e7f648b352ca.1423872525.git.feitong.yi@intel.com>
From: Shashank Sharma <shashank.sharma@intel.com>
Date: Fri, 30 Jan 2015 22:13:26 +0530
Subject: [PATCH 67/95] REVERTME [VPG]: video/intel/adf: WAR for display
 disabling

This patch disabled the code added for single display
ADF code, to block any flips on the display, when its disabled.
This code and check was added, when there was only one interface
running on the adf device, so disabling interface = disabling device.

But now when we have enabled Dual displays, its possible to selectively
disable one interface, but still the other one is enable (Cases like
MIPI + HDMI). For example, on HDMI hotplug, driver disables only
HDMI interface, but want to keep DSI enabled, but this check will
block fips on MIPI also.

So removing this check, and not letting the status updated for
devices DPMS, which was being added just for this.

REVERTME: Replace this with a logic where device DPMS is enabled on
first DPMS on (on any interface), and disabled on the last DPMS off.

Issue: GMINL-5519
Change-Id: I12b38998829388d3f12c5b1885213dd341d05d33
Signed-off-by: Shashank Sharma <shashank.sharma@intel.com>
---
 drivers/video/adf/adf_client.c |   12 ++++++++++++
 drivers/video/adf/adf_fops.c   |   12 ++++++++++++
 2 files changed, 24 insertions(+)

diff --git a/drivers/video/adf/adf_client.c b/drivers/video/adf/adf_client.c
index a090b55..e1f5818 100644
--- a/drivers/video/adf/adf_client.c
+++ b/drivers/video/adf/adf_client.c
@@ -98,10 +98,22 @@ done:
 	mutex_unlock(&intf->base.event_lock);
 	mutex_unlock(&dev->client_lock);
 	dev->dpms_in_progress = false;
+
+	/*
+	  * Fixme:
+	  * This logic was only applicable for single display ADF
+	  * But in case of dual display, it will disable flips on
+	  * adf device, even if one interface is disabled.
+	  * Replace this with proper logic where we are counting
+	  * the no of interfaces, and setting this ON on first DPMS
+	  * ON and OFF on last DPMS OFF
+	  */
+#if 0
 	if (state == DRM_MODE_DPMS_OFF)
 		dev->dpms_state = DRM_MODE_DPMS_OFF;
 	else if (state == DRM_MODE_DPMS_ON)
 		dev->dpms_state = DRM_MODE_DPMS_ON;
+#endif
 	mutex_unlock(&dev->dpms_lock);
 	return ret;
 }
diff --git a/drivers/video/adf/adf_fops.c b/drivers/video/adf/adf_fops.c
index 665a638..4d238e8 100644
--- a/drivers/video/adf/adf_fops.c
+++ b/drivers/video/adf/adf_fops.c
@@ -236,11 +236,23 @@ static int adf_device_post_config(struct adf_device *dev,
 	}
 
 	mutex_lock(&dev->dpms_lock);
+
+	/*
+	  * Fixme:
+	  * This logic was only applicable for single display ADF
+	  * But in case of dual display, it will disable flips on
+	  * adf device, even if one interface is disabled.
+	  * Replace this with proper logic where we are counting
+	  * the no of interfaces, and setting this ON on first DPMS
+	  * ON and OFF on last DPMS OFF
+	  */
+#if 0
 	if (dev->dpms_state == DRM_MODE_DPMS_OFF) {
 		ret = -EFAULT;
 		pr_err("Device Suspended. Rejecting Flip.\n");
 		goto err_get_user;
 	}
+#endif
 
 	if (get_user(n_intfs, &arg->n_interfaces)) {
 		ret = -EFAULT;
-- 
1.7.9.5

