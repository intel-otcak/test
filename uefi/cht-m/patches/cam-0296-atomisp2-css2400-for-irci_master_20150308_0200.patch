From 02bd6ce20f6e1ee26b33b2fdfbdb666868ff7a52 Mon Sep 17 00:00:00 2001
From: Pengpeng Cui <pengpengx.cui@intel.com>
Date: Mon, 9 Mar 2015 18:37:47 +0800
Subject: [PATCH 292/307] atomisp2: css2400 for irci_master_20150308_0200

Merge CSS2.1 for css2400  for
irci_master_20150308_0200 firmware

Change-Id: I6d2224a288a7efd24d5390d2ac3021b8dd35d172
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-24931
Signed-off-by: Pengpeng Cui <pengpengx.cui@intel.com>
Reviewed-on: https://icggerrit.ir.intel.com/45390
Approver: Wei Tao <wei.tao@intel.com>
Integrator: Wei Tao <wei.tao@intel.com>
Build: Wei Tao <wei.tao@intel.com>
Reviewed-by: Wei Tao <wei.tao@intel.com>
Maintainer: Wei Tao <wei.tao@intel.com>
---
 .../pci/atomisp2/css2400b0_v21/css_api_version.h   |   7 +-
 .../media/pci/atomisp2/css2400b0_v21/ia_css.h      |   4 +-
 .../pci/atomisp2/css2400b0_v21/ia_css_host_data.h  |   4 +-
 .../pci/atomisp2/css2400b0_v21/ia_css_types.h      |   4 +-
 .../atomisp2/css2400b0_v21/ia_css_version_data.h   |   2 +-
 .../isp/kernels/hdr/ia_css_hdr.host.c              |   4 +-
 .../isp/kernels/hdr/ia_css_hdr.host.h              |   4 +-
 .../isp/kernels/hdr/ia_css_hdr_param.h             |   4 +-
 .../isp/kernels/hdr/ia_css_hdr_types.h             |   4 +-
 .../isp/kernels/pdaf/ia_css_pdaf.host.c            |  67 ++++++----
 .../isp/kernels/pdaf/ia_css_pdaf.host.h            |  12 +-
 .../isp/kernels/pdaf/ia_css_pdaf_param.h           |  41 +++---
 .../isp/kernels/pdaf/ia_css_pdaf_types.h           |  33 +++--
 .../isp/kernels/xnr/xnr_3.0/ia_css_xnr3.host.c     |  28 ++++-
 .../isp/kernels/xnr/xnr_3.0/ia_css_xnr3_param.h    |  14 ++-
 .../css2400b0_v21/isp/modes/interface/isp_const.h  |   1 +
 .../pci/atomisp2/css2400b0_v21/sh_css_firmware.c   |   4 +-
 .../pci/atomisp2/css2400b0_v21/sh_css_param_dvs.c  | 139 ++++++++++++---------
 .../pci/atomisp2/css2400b0_v21/sh_css_params.c     |  10 +-
 19 files changed, 242 insertions(+), 144 deletions(-)

diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/css_api_version.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/css_api_version.h
index 2685d1a..ffa91d0 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/css_api_version.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/css_api_version.h
@@ -35,7 +35,7 @@ The version string has four dot-separated numbers, read left to right:
 
 */
 
-#define CSS_API_VERSION_STRING	"2.1.14.18"
+#define CSS_API_VERSION_STRING	"2.1.14.19"
 
 /*
 Change log
@@ -307,7 +307,7 @@ v2.1.14.14 (6 changes parallel), cont_remove_x_y_end_from_ae_and_awb
 - this patch doesn't introduce any new api change, it only fixes a recent
 - api merged change (#31938) , in order to have success CI i had to upload an api change request
 
-v2.1.14.15 (4 changes parallel), Add XNR3 blending strength to kernel interface
+v2.1.14.16 (5 changes parallel), Add XNR3 blending strength to kernel interface
 - Added a blending strength field to the XNR3 kernel interface to add
 - support for blending.
 
@@ -317,6 +317,9 @@ v2.1.14.17 (21 changes parallel), eliminate two_pixels_per_clock field
 v2.1.14.18 (2 changes parallel), Fix copyright headers (no functional change)
 - No functional change; only fixes copyright headers
 
+v2.1.14.19 (1 changes parallel), ia_css_skc_dvs_statistics field size change
+- ia_css_skc_dvs_statistics field size change
+
 */
 
 #endif /*__CSS_API_VERSION_H*/
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css.h
index 93d96d4..d90c945 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150303_1500 */
-/* Release Version: irci_master_20150303_1500 */
+/* Release Version: irci_master_20150308_0200 */
+/* Release Version: irci_master_20150308_0200 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_host_data.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_host_data.h
index 9d33f38..f3f10cd 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_host_data.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_host_data.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150303_1500 */
-/* Release Version: irci_master_20150303_1500 */
+/* Release Version: irci_master_20150308_0200 */
+/* Release Version: irci_master_20150308_0200 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_types.h
index a940673..4171dd1 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_types.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150303_1500 */
-/* Release Version: irci_master_20150303_1500 */
+/* Release Version: irci_master_20150308_0200 */
+/* Release Version: irci_master_20150308_0200 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_version_data.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_version_data.h
index 4db742e..f802943 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_version_data.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_version_data.h
@@ -22,7 +22,7 @@
 #define __IA_CSS_VERSION_DATA_H
 
 
-#define CSS_VERSION_STRING "REL:20150303_10.2_1549; API:2.1.14.18; GIT:irci_20150303_0640_#2f52b0e481d6fb566cc2a43e52e1246fd4c7f865; SDK:/nfs/iir/disks/iir_hivepackages_003/iir_hivepkgs_disk017/Css_Mizuchi/packages/Css_Mizuchi/int_css_mizuchi_20140829_1053; USER:viedifw; "
+#define CSS_VERSION_STRING "REL:20150308_10.0_0241; API:2.1.14.19; GIT:irci_20150307_1500__d198ce#d198ce8e3432d9392d0f5d53552b33572a0d37ec; SDK:/nfs/iir/disks/iir_hivepackages_003/iir_hivepkgs_disk017/Css_Mizuchi/packages/Css_Mizuchi/int_css_mizuchi_20140829_1053; USER:viedifw; "
 
 
 #endif
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr.host.c
index 8a746f1..4b2aec4 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr.host.c
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150303_1500 */
-/* Release Version: irci_master_20150303_1500 */
+/* Release Version: irci_master_20150308_0200 */
+/* Release Version: irci_master_20150308_0200 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr.host.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr.host.h
index 34c6a13..16d6a62 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr.host.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr.host.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150303_1500 */
-/* Release Version: irci_master_20150303_1500 */
+/* Release Version: irci_master_20150308_0200 */
+/* Release Version: irci_master_20150308_0200 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr_param.h
index 455d741..33a10c1 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr_param.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150303_1500 */
-/* Release Version: irci_master_20150303_1500 */
+/* Release Version: irci_master_20150308_0200 */
+/* Release Version: irci_master_20150308_0200 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr_types.h
index 8b2e4f0..0c9a676 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr_types.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150303_1500 */
-/* Release Version: irci_master_20150303_1500 */
+/* Release Version: irci_master_20150308_0200 */
+/* Release Version: irci_master_20150308_0200 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/pdaf/ia_css_pdaf.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/pdaf/ia_css_pdaf.host.c
index 437e9ed..283ca1b 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/pdaf/ia_css_pdaf.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/pdaf/ia_css_pdaf.host.c
@@ -17,47 +17,66 @@
 #include "sh_css_frac.h"
 #include "ia_css_pdaf.host.h"
 
-const struct ia_css_pdaf_config default_pdaf_config =
-{
-	0, 0,
-	{ 0, 0,
-	  {0}, {0},
-	  {0}, {0}
-	}
-};
+const struct ia_css_pdaf_config default_pdaf_config;
 
 void
 ia_css_pdaf_dmem_encode(
-	struct sh_css_isp_pdaf_dmem_params *to,
-	const struct ia_css_pdaf_config *from,
-	unsigned size)
+		struct isp_pdaf_dmem_params *to,
+		const struct ia_css_pdaf_config *from,
+		unsigned size)
 {
 	(void)size;
 	to->frm_length = from->frm_length;
 	to->frm_width  = from->frm_width;
-	to->ext_cfg_data_dmem.num_x_patterns = from->ext_cfg_data.num_x_patterns;
-	to->ext_cfg_data_dmem.num_y_patterns = from->ext_cfg_data.num_y_patterns;
+
+	to->ext_cfg_l_data.num_valid_patterns = from->ext_cfg_data.l_pixel_grid.num_valid_patterns;
+
+	to->ext_cfg_r_data.num_valid_patterns = from->ext_cfg_data.r_pixel_grid.num_valid_patterns;
+
+	to->stats_calc_data.num_valid_elm = from->stats_calc_cfg_data.num_valid_elm;
 }
 
 void
 ia_css_pdaf_vmem_encode(
-	struct sh_css_isp_pdaf_vmem_params *to,
-	const struct ia_css_pdaf_config *from,
-	unsigned size)
+		struct isp_pdaf_vmem_params *to,
+		const struct ia_css_pdaf_config *from,
+		unsigned size)
 {
 
 	unsigned int i;
 	(void)size;
+	/* Initialize left pixel grid */
+	for ( i=0 ; i < from->ext_cfg_data.l_pixel_grid.num_valid_patterns ; i++) {
 
-	for ( i=0 ; i < ISP_NWAY; i++)
-	{
-		to->ext_cfg_data_vmem.y_step_size[i] = from->ext_cfg_data.y_step_size[i];
-		to->ext_cfg_data_vmem.y_offset[i] = from->ext_cfg_data.y_offset[i];
+		to->ext_cfg_l_data.y_offset[0][i] = from->ext_cfg_data.l_pixel_grid.y_offset[i];
+		to->ext_cfg_l_data.x_offset[0][i] = from->ext_cfg_data.l_pixel_grid.x_offset[i];
+		to->ext_cfg_l_data.y_step_size[0][i] = from->ext_cfg_data.l_pixel_grid.y_step_size[i];
+		to->ext_cfg_l_data.x_step_size[0][i] = from->ext_cfg_data.l_pixel_grid.x_step_size[i];
 	}
 
-  for ( i=0 ; i < ISP_NWAY; i++)
-	{
-		to->ext_cfg_data_vmem.x_step_size[i] = from->ext_cfg_data.x_step_size[i];
-		to->ext_cfg_data_vmem.x_offset[i] = from->ext_cfg_data.x_offset[i];
+	for ( ; i < ISP_NWAY ; i++) {
+
+		to->ext_cfg_l_data.y_offset[0][i] = PDAF_INVALID_VAL;
+		to->ext_cfg_l_data.x_offset[0][i] = PDAF_INVALID_VAL;
+		to->ext_cfg_l_data.y_step_size[0][i] = PDAF_INVALID_VAL;
+		to->ext_cfg_l_data.x_step_size[0][i] = PDAF_INVALID_VAL;
+	}
+
+	/* Initialize left pixel grid */
+
+	for ( i=0 ; i < from->ext_cfg_data.r_pixel_grid.num_valid_patterns ; i++) {
+
+		to->ext_cfg_r_data.y_offset[0][i] = from->ext_cfg_data.r_pixel_grid.y_offset[i];
+		to->ext_cfg_r_data.x_offset[0][i] = from->ext_cfg_data.r_pixel_grid.x_offset[i];
+		to->ext_cfg_r_data.y_step_size[0][i] = from->ext_cfg_data.r_pixel_grid.y_step_size[i];
+		to->ext_cfg_r_data.x_step_size[0][i] = from->ext_cfg_data.r_pixel_grid.x_step_size[i];
+	}
+
+	for ( ; i < ISP_NWAY ; i++) {
+
+		to->ext_cfg_r_data.y_offset[0][i] = PDAF_INVALID_VAL;
+		to->ext_cfg_r_data.x_offset[0][i] = PDAF_INVALID_VAL;
+		to->ext_cfg_r_data.y_step_size[0][i] = PDAF_INVALID_VAL;
+		to->ext_cfg_r_data.x_step_size[0][i] = PDAF_INVALID_VAL;
 	}
 }
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/pdaf/ia_css_pdaf.host.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/pdaf/ia_css_pdaf.host.h
index 9d3b99f..21f72a4 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/pdaf/ia_css_pdaf.host.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/pdaf/ia_css_pdaf.host.h
@@ -22,14 +22,14 @@ extern const struct ia_css_pdaf_config default_pdaf_config;
 
 void
 ia_css_pdaf_dmem_encode(
-	struct sh_css_isp_pdaf_dmem_params *to,
-	const struct ia_css_pdaf_config *from,
-	unsigned size);
+		struct isp_pdaf_dmem_params *to,
+		const struct ia_css_pdaf_config *from,
+		unsigned size);
 
 void
 ia_css_pdaf_vmem_encode(
-	struct sh_css_isp_pdaf_vmem_params *to,
-	const struct ia_css_pdaf_config *from,
-	unsigned size);
+		struct isp_pdaf_vmem_params *to,
+		const struct ia_css_pdaf_config *from,
+		unsigned size);
 
 #endif /* __IA_CSS_PDAF_HOST_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/pdaf/ia_css_pdaf_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/pdaf/ia_css_pdaf_param.h
index a6ad6f9..6633f0c 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/pdaf/ia_css_pdaf_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/pdaf/ia_css_pdaf_param.h
@@ -15,39 +15,46 @@
 #ifndef __IA_CSS_PDAF_PARAM_H
 #define __IA_CSS_PDAF_PARAM_H
 
-#include "type_support.h"
+#define PDAF_INVALID_VAL 0x7FFF
+#include "vmem.h"
 
+struct isp_stats_calc_dmem_params {
+
+	uint16_t num_valid_elm;
+};
 /*
  * Extraction configuration parameters
  */
 
-struct sh_css_isp_extraction_dmem_params
-{
-	uint8_t num_x_patterns;
-	uint8_t num_y_patterns;
+struct isp_extraction_dmem_params {
+
+	uint8_t num_valid_patterns;
 };
 
-struct sh_css_isp_extraction_vmem_params
-{
-	int16_t y_step_size[ISP_NWAY];
-	int16_t y_offset[ISP_NWAY];
-	int16_t x_step_size[ISP_NWAY];
-	int16_t x_offset[ISP_NWAY];
+struct isp_extraction_vmem_params {
+
+	VMEM_ARRAY(y_step_size, ISP_VEC_NELEMS);
+	VMEM_ARRAY(y_offset, ISP_VEC_NELEMS);
+	VMEM_ARRAY(x_step_size, ISP_VEC_NELEMS);
+	VMEM_ARRAY(x_offset, ISP_VEC_NELEMS);
 };
 
 /*
  * PDAF configuration parameters
  */
-struct sh_css_isp_pdaf_vmem_params
-{
-	struct sh_css_isp_extraction_vmem_params ext_cfg_data_vmem;
+struct isp_pdaf_vmem_params {
+
+	struct isp_extraction_vmem_params ext_cfg_l_data;
+	struct isp_extraction_vmem_params ext_cfg_r_data;
 };
 
-struct sh_css_isp_pdaf_dmem_params
-{
+struct isp_pdaf_dmem_params {
+
 	uint16_t frm_length;
 	uint16_t frm_width;
-	struct sh_css_isp_extraction_dmem_params ext_cfg_data_dmem;
+	struct isp_stats_calc_dmem_params stats_calc_data;
+	struct isp_extraction_dmem_params ext_cfg_l_data;
+	struct isp_extraction_dmem_params ext_cfg_r_data;
 };
 
 #endif /* __IA_CSS_PDAF_PARAM_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/pdaf/ia_css_pdaf_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/pdaf/ia_css_pdaf_types.h
index d34928e..3e42877 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/pdaf/ia_css_pdaf_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/pdaf/ia_css_pdaf_types.h
@@ -18,26 +18,37 @@
 #include "type_support.h"
 #include "isp2600_config.h"
 /*
-* CSS-API header file for PDAF parameters
-* These parameters shall be filled by host/driver
-* and will be converted to ISP parameters in encode
-* function.
-*/
-struct ia_css_extraction_config
-{
-	uint8_t num_x_patterns;
-	uint8_t num_y_patterns;
+ * Header file for PDAF parameters
+ * These parameters shall be filled by host/driver
+ * and will be converted to ISP parameters in encode
+ * function.
+ */
+
+struct ia_css_statistics_calc_config {
+
+	uint16_t num_valid_elm;
+};
+struct ia_css_pixel_grid_config {
+
+	uint8_t num_valid_patterns;
 	int16_t y_step_size[ISP_NWAY];
 	int16_t y_offset[ISP_NWAY];
 	int16_t x_step_size[ISP_NWAY];
 	int16_t x_offset[ISP_NWAY];
 };
 
-struct ia_css_pdaf_config
-{
+struct ia_css_extraction_config {
+
+	struct ia_css_pixel_grid_config l_pixel_grid;	/* Left PDAF pixel grid */
+	struct ia_css_pixel_grid_config r_pixel_grid;	/* Right PDAF pixel grid */
+};
+
+struct ia_css_pdaf_config {
+
 	uint16_t frm_length;
 	uint16_t frm_width;
 	struct ia_css_extraction_config ext_cfg_data;
+	struct ia_css_statistics_calc_config stats_calc_cfg_data;
 };
 
 #endif /* __IA_CSS_PDAF_TYPES_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/xnr/xnr_3.0/ia_css_xnr3.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/xnr/xnr_3.0/ia_css_xnr3.host.c
index b56d9fd..bdbf4e5 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/xnr/xnr_3.0/ia_css_xnr3.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/xnr/xnr_3.0/ia_css_xnr3.host.c
@@ -28,7 +28,8 @@
 /*
  * Default kernel parameters. In general, default is bypass mode or as close
  * to the ineffective values as possible. Due to the chroma down+upsampling,
- * perfect bypass mode is not possible for xnr3.
+ * perfect bypass mode is not possible for xnr3 filter itself. Instead, the
+ * 'blending' parameter is used to create a bypass.
  */
 const struct ia_css_xnr3_config default_xnr3_config = {
 	/* sigma */
@@ -93,6 +94,26 @@ compute_coring(int coring)
 	return ((coring * isp_scale) + offset) / host_scale;
 }
 
+/*
+ * Compute the scaled blending strength for the ISP kernel from the value on
+ * the host parameter interface.
+ */
+static int32_t
+compute_blending(int strength)
+{
+	int32_t isp_strength;
+	int32_t isp_scale = XNR_BLENDING_SCALE_FACTOR;
+	int32_t host_scale = IA_CSS_XNR3_BLENDING_SCALE;
+	int32_t offset = host_scale / 2; /* fixed-point 0.5 */
+
+	/* Convert from public host-side scale factor to isp-side scale
+	 * factor. The blending factor is positive on the host side, but
+	 * negative on the ISP side because +1.0 cannot be represented
+	 * exactly as s0.11 fixed point, but -1.0 can. */
+	isp_strength = -(((strength * isp_scale) + offset) / host_scale);
+	return max(min(isp_strength, 0), -XNR_BLENDING_SCALE_FACTOR);
+}
+
 void
 ia_css_xnr3_encode(
 	struct sh_css_isp_xnr3_params *to,
@@ -116,6 +137,8 @@ ia_css_xnr3_encode(
 	int32_t coring_v0 = compute_coring(from->coring.v0);
 	int32_t coring_v1 = compute_coring(from->coring.v1);
 
+	int32_t blending = compute_blending(from->blending.strength);
+
 	(void)size;
 
 	/* alpha's are represented in qN.5 format */
@@ -131,6 +154,9 @@ ia_css_xnr3_encode(
 	to->coring.v0 = coring_v0;
 	to->coring.udiff = (coring_u1 - coring_u0) * adjust_factor / kernel_size;
 	to->coring.vdiff = (coring_v1 - coring_v0) * adjust_factor / kernel_size;
+
+	/* blending strength is expressed in q1.NN format */
+	to->blending.strength = blending;
 }
 
 /* Dummy Function added as the tool expects it*/
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/xnr/xnr_3.0/ia_css_xnr3_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/xnr/xnr_3.0/ia_css_xnr3_param.h
index 6573a01..77e2d76 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/xnr/xnr_3.0/ia_css_xnr3_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/xnr/xnr_3.0/ia_css_xnr3_param.h
@@ -27,6 +27,10 @@
 #define XNR_CORING_SCALE_LOG2       (ISP_VEC_ELEMBITS-1)
 #define XNR_CORING_SCALE_FACTOR     (1 << XNR_CORING_SCALE_LOG2)
 
+/* Scaling factor of the blending strength on the ISP. */
+#define XNR_BLENDING_SCALE_LOG2     (ISP_VEC_ELEMBITS-1)
+#define XNR_BLENDING_SCALE_FACTOR   (1 << XNR_BLENDING_SCALE_LOG2)
+
 /* XNR3 filter size. Must be 11x11, 9x9 or 5x5. */
 #ifdef FLT_KERNEL_9x9
 #define XNR_FILTER_SIZE             9
@@ -58,10 +62,16 @@ struct sh_css_xnr3_coring_params {
 	int32_t vdiff;
 };
 
+/* XNR3 blending strength on the ISP. */
+struct sh_css_xnr3_blending_params {
+	int32_t strength;
+};
+
 /* XNR3 ISP parameters */
 struct sh_css_isp_xnr3_params {
-	struct sh_css_xnr3_alpha_params  alpha;
-	struct sh_css_xnr3_coring_params coring;
+	struct sh_css_xnr3_alpha_params    alpha;
+	struct sh_css_xnr3_coring_params   coring;
+	struct sh_css_xnr3_blending_params blending;
 };
 
 #endif  /*__IA_CSS_XNR3_PARAM_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/modes/interface/isp_const.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/modes/interface/isp_const.h
index b1ce736..9f3d7cc 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/modes/interface/isp_const.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/modes/interface/isp_const.h
@@ -125,6 +125,7 @@
 #define SH_CSS_BINARY_ID_VIDEO_KERNELTEST_DVS               135
 #define SH_CSS_BINARY_ID_VIDEO_KERNELTEST_XNR               136
 #define SH_CSS_BINARY_ID_VIDEO_KERNELTEST_XNR_STRIPED       137
+#define SH_CSS_BINARY_ID_VIDEO_KERNELTEST_XNR_BLENDING      138
 #define SH_CSS_BINARY_ID_VIDEO_KERNELTEST_TNR_BLOCK         139
 #define SH_CSS_BINARY_ID_VIDEO_KERNELTEST_ACC_AE            141
 #define SH_CSS_BINARY_ID_VIDEO_RAW                          142
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_firmware.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_firmware.c
index e3f0303..d326082 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_firmware.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_firmware.c
@@ -47,10 +47,10 @@ struct fw_param {
 /* Warning: same order as SH_CSS_BINARY_ID_* */
 static struct firmware_header *firmware_header;
 
-/* The string STR(irci_master_20150303_1500) is a place holder
+/* The string STR(irci_master_20150308_0200) is a place holder
  * which will be replaced with the actual RELEASE_VERSION
  * during package generation. Please do not modify  */
-static const char *release_version = STR(irci_master_20150303_1500);
+static const char *release_version = STR(irci_master_20150308_0200);
 
 #define MAX_FW_REL_VER_NAME	300
 static char FW_rel_ver_name[MAX_FW_REL_VER_NAME] = "---";
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_param_dvs.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_param_dvs.c
index 49cf13c..40bc315 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_param_dvs.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_param_dvs.c
@@ -23,6 +23,9 @@
 #if defined(IS_ISP_2500_SYSTEM)
 #include <components/acc_cluster/acc_dvs_stat/dvs_stat_private.h>
 #include <components/acc_cluster/acc_dvs_stat/host/dvs_stat.host.h>
+
+void dump_mv(struct dvs_stat_mv_entry_public *p_host_entry, int num);
+#define DVS_STAT_MV_DEBUG 0
 #endif
 
 static struct ia_css_dvs_6axis_config *
@@ -253,24 +256,41 @@ void copy_dvs_6axis_table(struct ia_css_dvs_6axis_config *dvs_config_dst,
 }
 
 #if defined(IS_ISP_2500_SYSTEM)
+void dump_mv(struct dvs_stat_mv_entry_public *p_host_entry, int num)
+{
+	int i;
+	static int flag = 0;
+	if (flag == 0) {
+		ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE, "level xPos  yPos  HarrisGrade  xMatch   yMatch   MatchGrade\n");
+		flag = 1;
+	}
+	for (i = 0; i < num; i++) {
+		ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE, "%-1d     %-5d %-5d %-10d   %-5d    %-5d     %-10d\n",
+			p_host_entry[i].level, p_host_entry[i].vec_fe_x_pos, p_host_entry[i].vec_fe_y_pos,
+			p_host_entry[i].harris_grade, p_host_entry[i].vec_fm_x_pos, p_host_entry[i].vec_fm_y_pos,
+			p_host_entry[i].match_grade);
+	}
+}
+
 enum ia_css_err ia_css_get_skc_dvs_statistics(struct ia_css_skc_dvs_statistics *host_stats,
 				   const struct ia_css_isp_skc_dvs_statistics *isp_stats)
 {
 	struct dvs_stat_private_dvs_stat_cfg	dvs_stat_cfg;
 	struct dvs_stat_stripe_data		stripe_data;
 	struct dvs_stat_private_motion_vec *dvs_stat_mv_p = NULL;
-	unsigned char				set_idx, entry_idx, idx, i;
-	hrt_vaddress				dvs_stat_ddr_addr;
-	hrt_vaddress				dvs_stat_cfg_ddr_addr;
-	hrt_vaddress				dvs_stat_stripe_data_ddr_addr;
+	unsigned char	set_idx, idx, i;
+	hrt_vaddress	dvs_stat_ddr_addr;
+	hrt_vaddress	dvs_stat_cfg_ddr_addr;
+	hrt_vaddress	dvs_stat_stripe_data_ddr_addr;
 	struct dvs_stat_private_raw_buffer *raw_buffer_p =
 				(dvs_stat_private_raw_buffer_t *)isp_stats;
 	struct dvs_stat_mv_entry_public	*p_host_entry;
 	struct dvs_stat_mv_private		*p_isp_entry;
-	unsigned char				stripe_align_skip_idx;
-	unsigned char				stripe_grd_width_align;
-	unsigned short				stripe_x_update;
-	unsigned short				idx_update;
+	unsigned short	stripe_x_update;
+	unsigned int	stripe_num;
+	unsigned int	stripe_idx;
+	unsigned int	width_idx;
+	unsigned int	grid_width;
 
 	IA_CSS_ENTER_PRIVATE("host_stats=%p, isp_stats=%p", host_stats, isp_stats);
 
@@ -302,68 +322,65 @@ enum ia_css_err ia_css_get_skc_dvs_statistics(struct ia_css_skc_dvs_statistics *
 
 	/* Translate between private and public configuration */
 	ia_css_dvs_stat_private_to_public_cfg(&host_stats->dvs_stat_cfg, &dvs_stat_cfg);
+	stripe_num = stripe_data.stripe_nums;
+#if DVS_STAT_MV_DEBUG
+	ia_css_dvs_stat_public_cfg_dump((const struct ia_css_2500_dvs_statistics_kernel_config *)&host_stats->dvs_stat_cfg);
+#endif
 
 	/* Translate between private and public motion vectors */
 	for (i = 0; i < IA_CSS_SKC_DVS_STAT_NUM_OF_LEVELS; i++) {
-
-		/* Stripping check - is debubbling needed */
-		stripe_grd_width_align =
-			host_stats->dvs_stat_cfg.grd_cfg[i].grd_cfg.grid_width;
-		stripe_align_skip_idx = stripe_grd_width_align;
-		if (host_stats->dvs_stat_cfg.grd_cfg[i].grd_cfg.grid_width !=
-			stripe_data.grid_width[0][i])
-		{
-			if (stripe_data.grid_width[0][i] % 2)
-			{
-				stripe_grd_width_align++;
-				stripe_align_skip_idx = stripe_data.grid_width[0][i];
-			}
+		idx = 0;
+
+		if (i == 0) {
+			p_host_entry = host_stats->dvs_stat_mv_l0;
+		} else if (i == 1) {
+			p_host_entry = host_stats->dvs_stat_mv_l1;
+		} else {
+			p_host_entry = host_stats->dvs_stat_mv_l2;
 		}
+
 		for (set_idx = 0;
-		     set_idx < host_stats->dvs_stat_cfg.grd_cfg[i].grd_cfg.grid_height;
-		     set_idx++)
+			 set_idx < host_stats->dvs_stat_cfg.grd_cfg[i].grd_cfg.grid_height;
+			 set_idx++)
 		{
-			if (i == 0) {
-				p_host_entry = host_stats->dvs_stat_mv_l0;
-				p_isp_entry = &dvs_stat_mv_p->dvs_mv_output_l0[set_idx].mv_entry[0];
-			} else if (i == 1) {
-				p_host_entry = host_stats->dvs_stat_mv_l1;
-				p_isp_entry = &dvs_stat_mv_p->dvs_mv_output_l1[set_idx].mv_entry[0];
-			} else {
-				p_host_entry = host_stats->dvs_stat_mv_l2;
-				p_isp_entry = &dvs_stat_mv_p->dvs_mv_output_l2[set_idx].mv_entry[0];
-			}
-			stripe_x_update = 0;
-			idx_update = 0;
-			for (entry_idx = 0; entry_idx < stripe_grd_width_align; entry_idx++)
-			{
-				if (entry_idx == stripe_align_skip_idx)
-				{
-					idx_update = 1;
-					p_isp_entry++;
-					continue;
+			for (stripe_idx = 0; stripe_idx < stripe_num; stripe_idx++) {
+				grid_width = stripe_num == 1 ?
+					host_stats->dvs_stat_cfg.grd_cfg[i].grd_cfg.grid_width :
+					stripe_data.grid_width[stripe_idx][i];
+				stripe_x_update = stripe_idx == 1 ? stripe_data.stripe_offset : 0;
+
+				for (width_idx = 0; width_idx < grid_width; width_idx++) {
+
+					if (i == 0) {
+						p_isp_entry = &dvs_stat_mv_p->dvs_mv_output_l0[stripe_idx][set_idx].mv_entry[width_idx];
+					} else if (i == 1) {
+						p_isp_entry = &dvs_stat_mv_p->dvs_mv_output_l1[stripe_idx][set_idx].mv_entry[width_idx];
+					} else {
+						p_isp_entry = &dvs_stat_mv_p->dvs_mv_output_l2[stripe_idx][set_idx].mv_entry[width_idx];
+					}
+
+
+					p_host_entry[idx].vec_fe_x_pos =
+						p_isp_entry->part0.vec_fe_x_pos + stripe_x_update;
+					p_host_entry[idx].vec_fe_y_pos =
+						p_isp_entry->part0.vec_fe_y_pos;
+					p_host_entry[idx].vec_fm_x_pos =
+						p_isp_entry->part1.vec_fm_x_pos + stripe_x_update;
+					p_host_entry[idx].vec_fm_y_pos =
+						p_isp_entry->part1.vec_fm_y_pos;
+					p_host_entry[idx].harris_grade =
+						p_isp_entry->part2.harris_grade;
+					p_host_entry[idx].match_grade =
+						p_isp_entry->part3.match_grade;
+					p_host_entry[idx].level =
+						p_isp_entry->part3.level;
+					idx++;
 				}
-				if (entry_idx >= stripe_data.grid_width[0][i])
-					stripe_x_update = stripe_data.stripe_offset;
-				idx = set_idx * host_stats->dvs_stat_cfg.grd_cfg[i].grd_cfg.grid_width +
-					entry_idx - idx_update;
-				p_host_entry[idx].vec_fe_x_pos =
-					p_isp_entry->part0.vec_fe_x_pos + stripe_x_update;
-				p_host_entry[idx].vec_fe_y_pos =
-					p_isp_entry->part0.vec_fe_y_pos;
-				p_host_entry[idx].vec_fm_x_pos =
-					p_isp_entry->part1.vec_fm_x_pos + stripe_x_update;
-				p_host_entry[idx].vec_fm_y_pos =
-					p_isp_entry->part1.vec_fm_y_pos;
-				p_host_entry[idx].harris_grade =
-					p_isp_entry->part2.harris_grade;
-				p_host_entry[idx].match_grade =
-					p_isp_entry->part3.match_grade;
-				p_host_entry[idx].level =
-					p_isp_entry->part3.level;
-				p_isp_entry++;
 			}
 		}
+#if DVS_STAT_MV_DEBUG
+		dump_mv(p_host_entry, idx - 1);
+#endif
 	}
 
 	sh_css_free(dvs_stat_mv_p);
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_params.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_params.c
index 065518c..faf3164 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_params.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_params.c
@@ -2399,6 +2399,7 @@ sh_css_set_pipe_dvs_6axis_config(const struct ia_css_pipe *pipe,
 	assert(pipe != NULL);
 	assert(dvs_config->height_y == dvs_config->height_uv);
 	assert((dvs_config->width_y - 1) == 2 * (dvs_config->width_uv - 1));
+	assert(pipe->mode < IA_CSS_PIPE_ID_NUM);
 
 	IA_CSS_ENTER_PRIVATE("dvs_config=%p", dvs_config);
 
@@ -2427,7 +2428,8 @@ sh_css_get_pipe_dvs_6axis_config(const struct ia_css_pipe *pipe,
 
 	IA_CSS_ENTER_PRIVATE("dvs_config=%p", dvs_config);
 
-	if ((dvs_config->width_y == params->pipe_dvs_6axis_config[pipe->mode]->width_y) &&
+	if ((pipe->mode < IA_CSS_PIPE_ID_NUM) &&
+	    (dvs_config->width_y == params->pipe_dvs_6axis_config[pipe->mode]->width_y) &&
 	    (dvs_config->height_y == params->pipe_dvs_6axis_config[pipe->mode]->height_y) &&
 	    (dvs_config->width_uv == params->pipe_dvs_6axis_config[pipe->mode]->width_uv) &&
 	    (dvs_config->height_uv == params->pipe_dvs_6axis_config[pipe->mode]->height_uv) &&
@@ -2708,6 +2710,7 @@ sh_css_init_isp_params_from_config(struct ia_css_pipe *pipe,
 		const struct ia_css_isp_config *config)
 {
 	enum ia_css_err err = IA_CSS_ERR_INTERNAL_ERROR;
+	assert(pipe != NULL);
 	IA_CSS_ENTER_PRIVATE("pipe=%p, config=%p, params=%p", pipe, config, params);
 
 	ia_css_set_configs(params, config);
@@ -2718,8 +2721,9 @@ sh_css_init_isp_params_from_config(struct ia_css_pipe *pipe,
 	sh_css_set_nr_config(params, config->nr_config);
 	sh_css_set_ee_config(params, config->ee_config);
 	sh_css_set_baa_config(params, config->baa_config);
-	if (params->pipe_dvs_6axis_config[pipe->mode])
-		sh_css_set_pipe_dvs_6axis_config(pipe, params, config->dvs_6axis_config);
+	if ((pipe->mode < IA_CSS_PIPE_ID_NUM) &&
+			(params->pipe_dvs_6axis_config[pipe->mode]))
+			sh_css_set_pipe_dvs_6axis_config(pipe, params, config->dvs_6axis_config);
 	sh_css_set_dz_config(params, config->dz_config);
 	sh_css_set_motion_vector(params, config->motion_vector);
 	sh_css_set_shading_table(pipe->stream, params, config->shading_table);
-- 
1.9.1

