From 1d79d022a5b95a5726db0eb4cb1c30c79d1945a4 Mon Sep 17 00:00:00 2001
From: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date: Thu, 6 Feb 2014 10:00:27 +0000
Subject: [PATCH 113/351] switch: arizona: Tune headphone configuration based
 on impedance

Change-Id: I6285e5f751f74c7a668c4a7dc811d01b2cdacb52
Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Signed-off-by: Nikesh Oswal <Nikesh.Oswal@wolfsonmicro.com>
---
 drivers/switch/switch-arizona.c  |  158 +++++++++++++++++++++++++++++++++++++-
 include/linux/mfd/arizona/core.h |    1 +
 sound/soc/codecs/arizona.c       |    2 +-
 3 files changed, 159 insertions(+), 2 deletions(-)

diff --git a/drivers/switch/switch-arizona.c b/drivers/switch/switch-arizona.c
index 4d7a2ab..81d8a0c 100644
--- a/drivers/switch/switch-arizona.c
+++ b/drivers/switch/switch-arizona.c
@@ -29,6 +29,7 @@
 #include <linux/of.h>
 #include <linux/device.h>
 #include <linux/delay.h>
+#include <linux/regmap.h>
 
 #include <sound/soc.h>
 
@@ -53,6 +54,9 @@
 #define MICROPHONE_MIN_OHM      1257
 #define MICROPHONE_MAX_OHM      30000
 
+#define HP_NORMAL_IMPEDANCE     0
+#define HP_LOW_IMPEDANCE        1
+
 enum {
 	MICD_LVL_1_TO_7 = ARIZONA_MICD_LVL_1 | ARIZONA_MICD_LVL_2 |
 			  ARIZONA_MICD_LVL_3 | ARIZONA_MICD_LVL_4 |
@@ -93,6 +97,7 @@ struct arizona_extcon_info {
 	bool hpdet_active;
 	bool hpdet_done;
 	bool hpdet_retried;
+	int hp_imp_level;
 
 	int num_hpdet_res;
 	unsigned int hpdet_res[3];
@@ -196,7 +201,7 @@ static void arizona_extcon_do_magic(struct arizona_extcon_info *info,
 			 ret);
 
 	/* Restore the desired state while not doing the magic */
-	if (!magic) {
+	if (!magic && !arizona->hp_short) {
 		ret = regmap_update_bits(arizona->regmap,
 					 ARIZONA_OUTPUT_ENABLES_1,
 					 ARIZONA_OUT1L_ENA |
@@ -566,6 +571,148 @@ static int arizona_hpdet_do_id(struct arizona_extcon_info *info, int *reading,
 	return 0;
 }
 
+static const struct reg_default low_impedance_patch[] = {
+	{ 0x460, 0x0C21 },
+	{ 0x461, 0xA000 },
+	{ 0x462, 0x0C41 },
+	{ 0x463, 0x50E5 },
+	{ 0x464, 0x0C41 },
+	{ 0x465, 0x4040 },
+	{ 0x466, 0x0C41 },
+	{ 0x467, 0x3940 },
+	{ 0x468, 0x0C41 },
+	{ 0x469, 0x2418 },
+	{ 0x46A, 0x0846 },
+	{ 0x46B, 0x1990 },
+	{ 0x46C, 0x08C6 },
+	{ 0x46D, 0x1450 },
+	{ 0x46E, 0x04CE },
+	{ 0x46F, 0x1020 },
+	{ 0x470, 0x04CE },
+	{ 0x471, 0x0CD0 },
+	{ 0x472, 0x04CE },
+	{ 0x473, 0x0A30 },
+	{ 0x474, 0x044E },
+	{ 0x475, 0x0660 },
+	{ 0x476, 0x044E },
+	{ 0x477, 0x0510 },
+	{ 0x478, 0x04CE },
+	{ 0x479, 0x0400 },
+	{ 0x47A, 0x04CE },
+	{ 0x47B, 0x0330 },
+	{ 0x47C, 0x05DF },
+	{ 0x47D, 0x0001 },
+	{ 0x47E, 0x07FF },
+	{ 0x483, 0x0021 },
+};
+
+static const struct reg_default normal_impedance_patch[] = {
+	{ 0x460, 0x0C40 },
+	{ 0x461, 0xA000 },
+	{ 0x462, 0x0C42 },
+	{ 0x463, 0x50E5 },
+	{ 0x464, 0x0842 },
+	{ 0x465, 0x4040 },
+	{ 0x466, 0x0842 },
+	{ 0x467, 0x3940 },
+	{ 0x468, 0x0846 },
+	{ 0x469, 0x2418 },
+	{ 0x46A, 0x0442 },
+	{ 0x46B, 0x1990 },
+	{ 0x46C, 0x04C6 },
+	{ 0x46D, 0x1450 },
+	{ 0x46E, 0x04CE },
+	{ 0x46F, 0x1020 },
+	{ 0x470, 0x04CE },
+	{ 0x471, 0x0CD0 },
+	{ 0x472, 0x04CE },
+	{ 0x473, 0x0A30 },
+	{ 0x474, 0x044E },
+	{ 0x475, 0x0660 },
+	{ 0x476, 0x044E },
+	{ 0x477, 0x0510 },
+	{ 0x478, 0x04CE },
+	{ 0x479, 0x0400 },
+	{ 0x47A, 0x04CE },
+	{ 0x47B, 0x0330 },
+	{ 0x47C, 0x05DF },
+	{ 0x47D, 0x0001 },
+	{ 0x47E, 0x07FF },
+	{ 0x483, 0x0021 },
+};
+
+int arizona_wm5110_tune_headphone(struct arizona_extcon_info *info,
+				  int reading)
+{
+	struct arizona *arizona = info->arizona;
+	const struct reg_default *patch;
+	int i, ret, size;
+	unsigned int outputs;
+
+	if (reading <= 4) {
+		/* Headphones are always off here so just mark them */
+		arizona->hp_short = true;
+		dev_warn(arizona->dev, "Possible HP short, disabling\n");
+		return 0;
+	} else if (reading <= 10) {
+		if (info->hp_imp_level == HP_LOW_IMPEDANCE)
+			return 0;
+
+		info->hp_imp_level = HP_LOW_IMPEDANCE;
+		patch = low_impedance_patch;
+		size = ARRAY_SIZE(low_impedance_patch);
+	} else {
+		if (info->hp_imp_level == HP_NORMAL_IMPEDANCE)
+			return 0;
+
+		info->hp_imp_level = HP_NORMAL_IMPEDANCE;
+		patch = normal_impedance_patch;
+		size = ARRAY_SIZE(normal_impedance_patch);
+	}
+
+	mutex_lock(&arizona->dapm->card->dapm_mutex);
+
+	ret = regmap_read(arizona->regmap, ARIZONA_OUTPUT_ENABLES_1,
+			  &outputs);
+	if (ret != 0) {
+		dev_err(arizona->dev, "Failed to read output state: %d\n", ret);
+		goto err;
+	}
+	ret = regmap_update_bits(arizona->regmap, ARIZONA_OUTPUT_ENABLES_1,
+				 ARIZONA_OUT1L_ENA | ARIZONA_OUT1R_ENA |
+				 ARIZONA_OUT2L_ENA | ARIZONA_OUT2R_ENA |
+				 ARIZONA_OUT3L_ENA | ARIZONA_OUT3R_ENA,
+				 0);
+	if (ret != 0) {
+		dev_err(arizona->dev, "Failed to disable outputs: %d\n", ret);
+		goto err;
+	}
+
+	for (i = 0; i < size; ++i) {
+		ret = regmap_write(arizona->regmap,
+				   patch[i].reg, patch[i].def);
+		if (ret != 0)
+			dev_warn(arizona->dev,
+				 "Failed to write headphone patch: %x <= %x\n",
+				 patch[i].reg, patch[i].def);
+	}
+
+	ret = regmap_update_bits(arizona->regmap, ARIZONA_OUTPUT_ENABLES_1,
+				 ARIZONA_OUT1L_ENA | ARIZONA_OUT1R_ENA |
+				 ARIZONA_OUT2L_ENA | ARIZONA_OUT2R_ENA |
+				 ARIZONA_OUT3L_ENA | ARIZONA_OUT3R_ENA,
+				 outputs);
+	if (ret != 0) {
+		dev_err(arizona->dev, "Failed to restore outputs: %d\n", ret);
+		goto err;
+	}
+
+err:
+	mutex_unlock(&arizona->dapm->card->dapm_mutex);
+
+	return ret;
+}
+
 static irqreturn_t arizona_hpdet_irq(int irq, void *data)
 {
 	struct arizona_extcon_info *info = data;
@@ -610,6 +757,14 @@ static irqreturn_t arizona_hpdet_irq(int irq, void *data)
 		goto done;
 	}
 
+	switch (arizona->type) {
+	case WM5110:
+		arizona_wm5110_tune_headphone(info, reading);
+		break;
+	default:
+		break;
+	}
+
 	if (arizona->pdata.hpdet_cb)
 		arizona->pdata.hpdet_cb(reading);
 
@@ -1079,6 +1234,7 @@ static irqreturn_t arizona_jackdet(int irq, void *data)
 		info->hpdet_done = false;
 		info->hpdet_retried = false;
 		info->hp_impedance = 0;
+		arizona->hp_short = false;
 
 		for (i = 0; i < info->num_micd_ranges; i++)
 			input_report_key(info->input,
diff --git a/include/linux/mfd/arizona/core.h b/include/linux/mfd/arizona/core.h
index 06a52bc..f313719 100644
--- a/include/linux/mfd/arizona/core.h
+++ b/include/linux/mfd/arizona/core.h
@@ -106,6 +106,7 @@ struct arizona {
 
 	bool hpdet_magic;
 	unsigned int hp_ena;
+	unsigned int hp_short;
 
 	struct mutex clk_lock;
 	int clk32k_ref;
diff --git a/sound/soc/codecs/arizona.c b/sound/soc/codecs/arizona.c
index 440e049..8bdf625 100644
--- a/sound/soc/codecs/arizona.c
+++ b/sound/soc/codecs/arizona.c
@@ -770,7 +770,7 @@ int arizona_hp_ev(struct snd_soc_dapm_widget *w,
 	priv->arizona->hp_ena |= val;
 
 	/* Force off if HPDET magic is active */
-	if (priv->arizona->hpdet_magic)
+	if (priv->arizona->hpdet_magic || priv->arizona->hp_short)
 		val = 0;
 
 	regmap_update_bits_async(arizona->regmap, ARIZONA_OUTPUT_ENABLES_1,
-- 
1.7.9.5

