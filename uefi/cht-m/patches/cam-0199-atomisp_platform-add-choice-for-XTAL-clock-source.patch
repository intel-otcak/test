From 6a8fbee54b3d2676cc2c9ca554125dda1c688d20 Mon Sep 17 00:00:00 2001
From: Ding Yunliang <yunliang.ding@intel.com>
Date: Fri, 9 Jan 2015 13:39:07 +0800
Subject: [PATCH 199/210] atomisp_platform: add choice for XTAL clock source

By default PLL clock source will be used, in this case
oemvars variable setting can provide the board-specific
variable for clock source.

Change-Id: I07148760a7143ce6f7b0aacd62c51089c35b6d1a
Signed-off-by: Ding Yunliang <yunliang.ding@intel.com>
---
 arch/x86/platform/intel-mid/atomisp_gmin_platform.c | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/arch/x86/platform/intel-mid/atomisp_gmin_platform.c b/arch/x86/platform/intel-mid/atomisp_gmin_platform.c
index 2e0d611..d409a2e 100644
--- a/arch/x86/platform/intel-mid/atomisp_gmin_platform.c
+++ b/arch/x86/platform/intel-mid/atomisp_gmin_platform.c
@@ -31,7 +31,8 @@ EXPORT_SYMBOL(spid);
 #define DEVNAME_PMIC_WHISKEYCOVE "INT34D3:00:6e"
 
 /* Should be defined in vlv2_plat_clock API, isn't: */
-#define VLV2_CLK_19P2MHZ 1
+#define VLV2_CLK_PLL_19P2MHZ 1
+#define VLV2_CLK_XTAL_19P2MHZ 0
 #define VLV2_CLK_ON      1
 #define VLV2_CLK_OFF     2
 
@@ -79,6 +80,7 @@ EXPORT_SYMBOL(spid);
 struct gmin_subdev {
 	struct v4l2_subdev *subdev;
 	int clock_num;
+	int clock_src;
 	struct gpio_desc *gpio0;
 	struct gpio_desc *gpio1;
 	struct regulator *v1p8_reg;
@@ -355,6 +357,9 @@ static struct gmin_subdev *gmin_subdev_add(struct v4l2_subdev *subdev)
 
 	gmin_subdevs[i].subdev = subdev;
 	gmin_subdevs[i].clock_num = gmin_get_var_int(dev, "CamClk", 0);
+	/*WA:CHT requires XTAL clock as PLL is not stable.*/
+	gmin_subdevs[i].clock_src = gmin_get_var_int(dev, "ClkSrc",
+							VLV2_CLK_PLL_19P2MHZ);
 	gmin_subdevs[i].csi_port = gmin_get_var_int(dev, "CsiPort", 0);
 	gmin_subdevs[i].csi_lanes = gmin_get_var_int(dev, "CsiLanes", 1);
 	gmin_subdevs[i].gpio0 = gpiod_get_index(dev, "cam_gpio0", 0);
@@ -628,7 +633,7 @@ int gmin_flisclk_ctrl(struct v4l2_subdev *subdev, int on)
 	int ret = 0;
 	struct gmin_subdev *gs = find_gmin_subdev(subdev);
 	if (on)
-		ret = vlv2_plat_set_clock_freq(gs->clock_num, VLV2_CLK_19P2MHZ);
+		ret = vlv2_plat_set_clock_freq(gs->clock_num, gs->clock_src);
 	if (ret)
 		return ret;
 	return vlv2_plat_configure_clock(gs->clock_num,
-- 
1.9.1

