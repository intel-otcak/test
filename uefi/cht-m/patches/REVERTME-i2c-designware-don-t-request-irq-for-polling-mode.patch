From f5143423f1d301d82b733b63874e97054dcdd3f7 Mon Sep 17 00:00:00 2001
From: Xiang Wang <xiang.a.wang@intel.com>
Date: Mon, 9 Mar 2015 22:18:59 +0800
Subject: [PATCH] i2c: designware: don't request irq for polling mode

irq handler is not needed for polling mode. There should
be no interrupt, either. But on Baytrail CR platforms, we
observed interrupts on shared i2c host controller. This
might be caused by PUNIT which uses i2c controller in
an improper way. As a result, there is logic error in
kernel driver. As a workaround, we don't request irq for
polling mode.

Change-Id: Iadc15a5f444d8f3d62c0984e3610c18e2269eb50
Tracked-On: https://jira01.devtools.intel.com/browse/GMINL-6041
Tracked-On: https://jira01.devtools.intel.com/browse/AKP-1182
Signed-off-by: Xiang Wang <xiang.a.wang@intel.com>
---
 drivers/i2c/busses/i2c-designware-platdrv.c | 13 ++++++++-----
 1 file changed, 8 insertions(+), 5 deletions(-)

diff --git a/drivers/i2c/busses/i2c-designware-platdrv.c b/drivers/i2c/busses/i2c-designware-platdrv.c
index 6967269..02beb35 100644
--- a/drivers/i2c/busses/i2c-designware-platdrv.c
+++ b/drivers/i2c/busses/i2c-designware-platdrv.c
@@ -357,11 +357,14 @@ static int dw_i2c_probe(struct platform_device *pdev)
 	if (dev->shared_host && dev->release_ownership)
 		dev->release_ownership();
 
-	r = devm_request_irq(&pdev->dev, dev->irq, i2c_dw_isr, IRQF_SHARED,
-			pdev->name, dev);
-	if (r) {
-		dev_err(&pdev->dev, "failure requesting irq %i\n", dev->irq);
-		return r;
+	if (!dev->polling) {
+		r = devm_request_irq(&pdev->dev, dev->irq, i2c_dw_isr,
+				IRQF_SHARED, pdev->name, dev);
+		if (r) {
+			dev_err(&pdev->dev, "failure requesting irq %i\n",
+				dev->irq);
+			return r;
+		}
 	}
 
 	adap = &dev->adapter;
-- 
1.9.1

