From 00fc65a2d234ef5601b9397999960343255fb01f Mon Sep 17 00:00:00 2001
From: Akash Goel <akash.goel@intel.com>
Date: Thu, 13 Aug 2015 17:49:05 +0530
Subject: [PATCH] staging: android: sync: WA for the fence timeout issue

This is  to circumvent a  discrepancy seen sometimes during stress testing,
where the fence timeout error is reported. As per the dumps it showed that
the sync point was getting signaled round about the same time, at which
the wait on the fence got timed out. After some debugging we found that even
though the sync point got signaled before the wait on the fence got over
due to the timeout, the fence status was still seen as 0 and a fence timeout
error was reported to User. As a WA we directly check for the status of
associated sync points, once the fence timeout is detected, and in case the
sync points are already signaled, we return success to User.

Change-Id: Ie003621c38338c20cbf744df9ae645380f31e1e0
Signed-off-by: Akash Goel <akash.goel@intel.com>
---
 drivers/staging/android/sync.c | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/drivers/staging/android/sync.c b/drivers/staging/android/sync.c
index 3d05f662110b..0f6f759d4f68 100644
--- a/drivers/staging/android/sync.c
+++ b/drivers/staging/android/sync.c
@@ -618,6 +618,12 @@ int sync_fence_wait(struct sync_fence *fence, long timeout)
 	}
 
 	if (fence->status == 0) {
+		/* last attempt to get the fence status */
+		if (sync_fence_get_status(fence) > 0) {
+			pr_info("fence [%p] got signaled just in time\n", fence);
+			return 0;
+		}
+
 		if (timeout > 0) {
 			pr_info("fence timeout on [%p] after %dms\n", fence,
 				jiffies_to_msecs(timeout));
-- 
1.9.1

