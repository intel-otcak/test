From ae41351122543d28059c1cddf7944cbfc6e357b2 Mon Sep 17 00:00:00 2001
From: Pengpeng Cui <pengpengx.cui@intel.com>
Date: Thu, 20 Nov 2014 15:42:23 +0800
Subject: [PATCH 08/10] atomisp2: css2400 for irci_master_20141114_1919

Merge CSS2.1 for css2400  for irci_master_20141114_1919 firmware tag

Change-Id: Idc9fa0b5f1fb917ec51cfd4f89061d87b770f0b9
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-9680
Signed-off-by: Pengpeng Cui <pengpengx.cui@intel.com>
Reviewed-on: https://icggerrit.ir.intel.com/29493
Approver: Wei Tao <wei.tao@intel.com>
Build: Wei Tao <wei.tao@intel.com>
Reviewed-by: Wei Tao <wei.tao@intel.com>
Maintainer: Wei Tao <wei.tao@intel.com>
---
 .../base/circbuf/interface/ia_css_circbuf.h        |   12 +-
 .../css2400b0_v21/base/circbuf/src/circbuf.c       |    9 +-
 .../css2400b0_v21/base/refcount/src/refcount.c     |    5 +-
 .../atomisp2/css2400b0_v21/camera/util/src/util.c  |    3 +-
 .../pci/atomisp2/css2400b0_v21/css_api_version.h   |   16 +-
 .../media/pci/atomisp2/css2400b0_v21/css_trace.h   |   46 +-
 .../host/hive_isp_css_ddr_hrt_modified.h           |    6 +-
 .../hive_isp_css_2400_system/vmem_global.h         |    4 +
 .../ia_css_isp_params.c                            |    1 +
 .../hive_isp_css_include/host/isys_dma_public.h    |   19 +
 .../hive_isp_css_include/type_support.h            |    4 +-
 .../media/pci/atomisp2/css2400b0_v21/ia_css.h      |    4 +-
 .../pci/atomisp2/css2400b0_v21/ia_css_acc_types.h  |    6 +
 .../pci/atomisp2/css2400b0_v21/ia_css_buffer.h     |    4 +
 .../pci/atomisp2/css2400b0_v21/ia_css_control.h    |   20 -
 .../atomisp2/css2400b0_v21/ia_css_device_access.h  |    6 +
 .../media/pci/atomisp2/css2400b0_v21/ia_css_err.h  |    2 +
 .../atomisp2/css2400b0_v21/ia_css_event_public.h   |   12 +-
 .../pci/atomisp2/css2400b0_v21/ia_css_host_data.h  |    4 +-
 .../pci/atomisp2/css2400b0_v21/ia_css_types.h      |    4 +-
 .../atomisp2/css2400b0_v21/ia_css_version_data.h   |    2 +-
 .../bayer_ls/bayer_ls_1.0/ia_css_bayer_ls_param.h  |    7 +
 .../isp/kernels/csc/csc_1.0/ia_css_csc.host.c      |   10 +-
 .../isp/kernels/csc/csc_1.0/ia_css_csc.host.h      |    4 +-
 .../isp/kernels/ctc/ctc2/ia_css_ctc2.host.c        |   13 +-
 .../isp/kernels/ctc/ctc2/ia_css_ctc2.host.h        |    8 +-
 .../isp/kernels/ctc/ctc2/ia_css_ctc2_types.h       |   28 +-
 .../isp/kernels/eed1_8/ia_css_eed1_8.host.c        |   14 +-
 .../isp/kernels/eed1_8/ia_css_eed1_8_param.h       |   18 +-
 .../isp/kernels/gc/gc_1.0/ia_css_gc.host.c         |    5 +
 .../isp/kernels/gc/gc_1.0/ia_css_gc.host.h         |    5 +-
 .../isp/kernels/gc/gc_1.0/ia_css_gc_param.h        |    1 +
 .../isp/kernels/gc/gc_1.0/ia_css_gc_types.h        |    2 +
 .../isp/kernels/gc/gc_2/ia_css_gc2.host.c          |    6 +
 .../isp/kernels/gc/gc_2/ia_css_gc2.host.h          |    5 +-
 .../isp/kernels/gc/gc_2/ia_css_gc2_param.h         |    1 +
 .../isp/kernels/gc/gc_2/ia_css_gc2_types.h         |    2 +
 .../isp/kernels/hdr/ia_css_hdr.host.c              |    4 +-
 .../isp/kernels/hdr/ia_css_hdr.host.h              |    4 +-
 .../isp/kernels/hdr/ia_css_hdr_param.h             |    4 +-
 .../isp/kernels/hdr/ia_css_hdr_types.h             |    4 +-
 .../isp/kernels/iefd2_6/ia_css_iefd2_6.host.c      |   37 +-
 .../kernels/iefd2_6/ia_css_iefd2_6_default.host.c  |    4 +-
 .../isp/kernels/iefd2_6/ia_css_iefd2_6_param.h     |    6 +-
 .../isp/kernels/iefd2_6/ia_css_iefd2_6_types.h     |    4 +-
 .../isp/kernels/macc/macc1_5/ia_css_macc1_5.host.c |   81 ++
 .../isp/kernels/macc/macc1_5/ia_css_macc1_5.host.h |   48 ++
 .../kernels/macc/macc1_5/ia_css_macc1_5_param.h    |   38 +
 .../macc/macc1_5/ia_css_macc1_5_table.host.c       |   39 +
 .../macc/macc1_5/ia_css_macc1_5_table.host.h       |   29 +
 .../kernels/macc/macc1_5/ia_css_macc1_5_types.h    |   71 ++
 .../kernels/s3a_stat_ls/ia_css_s3a_stat_ls_param.h |   39 +
 .../s3a_stat_ls/ia_css_s3a_stat_store_param.h      |   28 +
 .../css2400b0_v21/isp/modes/interface/isp_const.h  |    6 +-
 .../runtime/binary/interface/ia_css_binary.h       |    6 +-
 .../css2400b0_v21/runtime/binary/src/binary.c      |   24 +-
 .../atomisp2/css2400b0_v21/runtime/bufq/src/bufq.c |   22 +-
 .../runtime/debug/interface/ia_css_debug.h         |  192 +++--
 .../css2400b0_v21/runtime/debug/src/ia_css_debug.c |  105 +++
 .../css2400b0_v21/runtime/event/src/event.c        |    2 +
 .../css2400b0_v21/runtime/frame/src/frame.c        |    6 +-
 .../runtime/isys/interface/ia_css_isys.h           |   11 +-
 .../runtime/isys/interface/ia_css_isys_comm.h      |    2 +-
 .../css2400b0_v21/runtime/isys/src/csi_rx_rmgr.c   |   16 +-
 .../css2400b0_v21/runtime/isys/src/isys_init.c     |    7 +
 .../atomisp2/css2400b0_v21/runtime/isys/src/rx.c   |   14 +-
 .../css2400b0_v21/runtime/isys/src/virtual_isys.c  |    7 +-
 .../css2400b0_v21/runtime/pipeline/src/pipeline.c  |   77 +-
 .../css2400b0_v21/runtime/rmgr/src/rmgr_vbuf.c     |   20 +-
 .../media/pci/atomisp2/css2400b0_v21/sh_css.c      |  529 +++++++-----
 .../pci/atomisp2/css2400b0_v21/sh_css_firmware.c   |    4 +-
 .../pci/atomisp2/css2400b0_v21/sh_css_internal.h   |   22 +-
 .../pci/atomisp2/css2400b0_v21/sh_css_params.c     |   48 +-
 .../media/pci/atomisp2/css2400b0_v21/spmem_dump.c  |  852 ++++++++++----------
 74 files changed, 1767 insertions(+), 963 deletions(-)
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/macc/macc1_5/ia_css_macc1_5.host.c
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/macc/macc1_5/ia_css_macc1_5.host.h
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/macc/macc1_5/ia_css_macc1_5_param.h
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/macc/macc1_5/ia_css_macc1_5_table.host.c
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/macc/macc1_5/ia_css_macc1_5_table.host.h
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/macc/macc1_5/ia_css_macc1_5_types.h
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/s3a_stat_ls/ia_css_s3a_stat_ls_param.h
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/s3a_stat_ls/ia_css_s3a_stat_store_param.h

diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/base/circbuf/interface/ia_css_circbuf.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/base/circbuf/interface/ia_css_circbuf.h
index ba43ae5..0646d35 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/base/circbuf/interface/ia_css_circbuf.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/base/circbuf/interface/ia_css_circbuf.h
@@ -31,7 +31,9 @@
 #include "ia_css_circbuf_comm.h"
 #include "ia_css_circbuf_desc.h"
 #ifdef __SP
-#include "event_handler.sp.h" /* sp_error */
+#include "event_handler.sp.h"
+/* We should not #define SP_FILE_ID here, because we are in a header file. */
+#include "ia_css_sp_assert_level.sp.h"
 #endif
 
 /****************************************************************
@@ -291,14 +293,12 @@ STORAGE_CLASS_INLINE void ia_css_circbuf_write(
 	OP___assert(cb != NULL);
 	OP___assert(cb->desc != NULL);
 
-	if (ia_css_circbuf_is_full(cb)) {
-		/* Cannot continue as the queue is full*/
+	/* Cannot continue as the queue is full*/
 #ifdef __SP
-		sp_error(IA_CSS_FW_ERR_CIRCBUF_FULL);
+	SP_ASSERT_FATAL(!ia_css_circbuf_is_full(cb));
 #else
-		assert(0);
+	assert(!ia_css_circbuf_is_full(cb));
 #endif
-	}
 
 	ia_css_circbuf_elem_cpy(&elem, &cb->elems[cb->desc->end]);
 
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/base/circbuf/src/circbuf.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/base/circbuf/src/circbuf.c
index 2dd6617..45979aa 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/base/circbuf/src/circbuf.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/base/circbuf/src/circbuf.c
@@ -25,6 +25,9 @@
 
 #ifdef __SP
 #include <hive_isp_css_sp_api_modified.h>
+#include <ia_css_sp_file_id.sp.h>
+#define SP_FILE_ID SP_FILE_ID_CIRCBUF /* overrule default in ia_css_sp_assert_level.sp.h */
+#include <ia_css_sp_assert_level.sp.h>
 #endif
 
 /**********************************************************************
@@ -119,12 +122,12 @@ uint32_t ia_css_circbuf_pop(ia_css_circbuf_t *cb)
 	uint32_t ret;
 	ia_css_circbuf_elem_t elem;
 
-	if (ia_css_circbuf_is_empty(cb))
 #ifdef __SP
-		sp_error(IA_CSS_FW_ERR_CIRCBUF_EMPTY);
+	SP_ASSERT_FATAL(!ia_css_circbuf_is_empty(cb));
 #else
-		assert(0);
+	assert(!ia_css_circbuf_is_empty(cb));
 #endif
+
 	/* read an element from the buffer */
 	elem = ia_css_circbuf_read(cb);
 	ret = ia_css_circbuf_elem_get_val(&elem);
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/base/refcount/src/refcount.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/base/refcount/src/refcount.c
index eaf44e7..ade6138 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/base/refcount/src/refcount.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/base/refcount/src/refcount.c
@@ -254,8 +254,9 @@ void ia_css_refcount_clear(int32_t id, clear_func clear_func_ptr)
 				mmgr_free(entry->data);
 			}
 			assert(entry->count == 0);
-			ia_css_debug_dtrace(IA_CSS_DEBUG_ERROR,
-					    "ia_css_refcount_clear(): Ref count for entry %x is not zero!\n", entry->id);
+			if (entry->count != 0) {
+				IA_CSS_WARNING("Ref count for entry %x is not zero!", entry->id);
+			}
 			entry->data = mmgr_NULL;
 			entry->count = 0;
 			entry->id = 0;
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/camera/util/src/util.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/camera/util/src/util.c
index 45a1762..c8e62bf 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/camera/util/src/util.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/camera/util/src/util.c
@@ -197,10 +197,11 @@ enum ia_css_err ia_css_util_check_input(
 	if (stream_config == NULL)
 		return IA_CSS_ERR_INVALID_ARGUMENTS;
 
+#ifdef IS_ISP_2400_SYSTEM
 	if (stream_config->input_config.effective_res.width == 0 ||
 	    stream_config->input_config.effective_res.height == 0)
 		return IA_CSS_ERR_INVALID_ARGUMENTS;
-
+#endif
 	if (must_be_raw &&
 	    !ia_css_util_is_input_format_raw(stream_config->input_config.format))
 		return IA_CSS_ERR_INVALID_ARGUMENTS;
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/css_api_version.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/css_api_version.h
index 86c45de..07b5731 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/css_api_version.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/css_api_version.h
@@ -42,7 +42,7 @@ The version string has four dot-separated numbers, read left to right:
 
 */
 
-#define CSS_API_VERSION_STRING	"2.1.8.4"
+#define CSS_API_VERSION_STRING	"2.1.9.1"
 
 /*
 Change log
@@ -216,6 +216,20 @@ v2.1.8.4 (2 changes parallel), Adding zoom region parameters to CSS API
 - By using this user can do the zoom based on zoom region and
 - the center of the zoom region is not restricted at the center of the input frame.
 
+v2.1.8.6 (1 changes parallel), Add new ia_css_fw_warning type
+- Add IA_CSS_FW_WARNING_TAG_EXP_ID_FAILED enum to ia_css_fw_warning type
+- Extend sp_warning() with exp_id parameter
+
+v2.1.8.6 (1 changes parallel), Add includes in GC, GC2 kernel interface files
+- add ia_css_ctc_types.h includes in ia_css_gc_types.h and ia_css_gc2_types.h. Needed to get ia_css_vamem_type.
+
+v2.1.9.0 (1 changes parallel), Introduce sp assert event.
+- Add IA_CSS_EVENT_TYPE_FW_ASSERT. The FW sends the event in case an assert goes off.
+
+v2.1.9.1 (1 changes parallel), Exclude driver part from ia_css_buffer.h as it is also used by SP
+- Excluded driver part of the interface from SP/ISP code
+- Driver I/F is not affected
+
 */
 
 #endif /*__CSS_API_VERSION_H*/
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/css_trace.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/css_trace.h
index 500adfa..f568d86 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/css_trace.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/css_trace.h
@@ -19,10 +19,44 @@
  *
  */
 
+#ifndef __CSS_TRACE_H_
+#define __CSS_TRACE_H_
+
+#include <type_support.h>
+
 /*
-	constants for tracing
+	structs and constants for tracing
 */
 
+/* one tracer item: major, minor and counter. The counter value can be used for GP data */
+struct trace_item_t {
+	uint8_t   major;
+	uint8_t   minor;
+	uint16_t  counter;
+};
+
+/* trace header: holds the version and the topology of the tracer. */
+struct trace_header_t {
+	/* 1st dword */
+	uint8_t   version;
+	uint8_t   max_threads;
+	uint16_t  max_tracer_points;
+	/* 2nd dword */
+	uint32_t  command;
+	/* 3rd & 4th dword */
+	uint32_t  data[2];
+	/* 5th & 6th dword: debug pointer mechanism */
+	uint32_t  debug_ptr_signature;
+	uint32_t  debug_ptr_value;
+};
+
+
+/* buffer offsets and sizes, common to SP and host */
+#define TRACE_BUFF_ADDR       0xA000
+#define TRACE_BUFF_SIZE       0x1000	/* 4K allocated */
+#define SP1_TRACER_OFFSET     (TRACE_BUFF_SIZE/2)
+#define MAX_TRACER_POINTS     (TRACE_BUFF_SIZE/sizeof(struct trace_item_t))
+
 /* offsets for master_port read/write */
 #define HDR_HDR_OFFSET              0	/* offset of the header */
 #define HDR_COMMAND_OFFSET          4	/* offset of the command */
@@ -31,10 +65,10 @@
 #define HDR_DEBUG_POINTER_OFFSET    20	/* offset of the param debug pointer in trace_header_t */
 
 /* common majors */
-#define MAJOR_MAIN		1
-#define MAJOR_ISP_STAGE_ENTRY	2
-#define MAJOR_DMA_PRXY		3
-#define MAJOR_START_ISP		4
+#define MAJOR_MAIN              1
+#define MAJOR_ISP_STAGE_ENTRY   2
+#define MAJOR_DMA_PRXY          3
+#define MAJOR_START_ISP         4
 
 #define DEBUG_PTR_SIGNATURE     0xABCD	/* signature for the debug parameter pointer */
 
@@ -48,3 +82,5 @@ typedef enum {
 
 /* command signature */
 #define CMD_SIGNATURE	0xAABBCC00
+
+#endif /* __CSS_TRACE_H_ */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_2400_system/host/hive_isp_css_ddr_hrt_modified.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_2400_system/host/hive_isp_css_ddr_hrt_modified.h
index 68fd840..47255f5 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_2400_system/host/hive_isp_css_ddr_hrt_modified.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_2400_system/host/hive_isp_css_ddr_hrt_modified.h
@@ -19,8 +19,8 @@
  *
  */
 
-#ifndef _hive_isp_css_dma_hrt_h_
-#define _hive_isp_css_dma_hrt_h_
+#ifndef _hive_isp_css_ddr_hrt_modified_h_
+#define _hive_isp_css_ddr_hrt_modified_h_
 
 #include <hmm_64/hmm.h>
 
@@ -152,4 +152,4 @@ hrt_isp_css_calloc(
     unsigned int height,
     unsigned int bits_per_element);
 
-#endif /* _hive_isp_css_dma_hrt_h_ */
+#endif /* _hive_isp_css_ddr_hrt_modified_h_ */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_2400_system/vmem_global.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_2400_system/vmem_global.h
index 8894d35..114bb70 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_2400_system/vmem_global.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_2400_system/vmem_global.h
@@ -32,4 +32,8 @@
 #define VMEM_ALIGN	ISP_VMEM_ALIGN
 #endif
 
+#ifndef PIPE_GENERATION
+typedef tvector *pvector;
+#endif
+
 #endif /* __VMEM_GLOBAL_H_INCLUDED__ */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_2400_system_generated/ia_css_isp_params.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_2400_system_generated/ia_css_isp_params.c
index 48d5bcf..1bc30b7 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_2400_system_generated/ia_css_isp_params.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_2400_system_generated/ia_css_isp_params.c
@@ -42,6 +42,7 @@
 #include "isp/kernels/gc/gc_1.0/ia_css_gc.host.h"
 #include "isp/kernels/gc/gc_2/ia_css_gc2.host.h"
 #include "isp/kernels/macc/macc_1.0/ia_css_macc.host.h"
+#include "isp/kernels/macc/macc1_5/ia_css_macc1_5.host.h"
 #include "isp/kernels/ob/ob_1.0/ia_css_ob.host.h"
 #include "isp/kernels/ob/ob2/ia_css_ob2.host.h"
 #include "isp/kernels/output/output_1.0/ia_css_output.host.h"
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_include/host/isys_dma_public.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_include/host/isys_dma_public.h
index f2d4169..8032957 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_include/host/isys_dma_public.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_include/host/isys_dma_public.h
@@ -22,5 +22,24 @@
 #ifndef __ISYS_DMA_PUBLIC_H_INCLUDED__
 #define __ISYS_DMA_PUBLIC_H_INCLUDED__
 
+#ifdef USE_INPUT_SYSTEM_VERSION_2401
+
+#include "system_types.h"
+#include "type_support.h"
+
+STORAGE_CLASS_ISYS2401_DMA_H void isys2401_dma_reg_store(
+	const isys2401_dma_ID_t dma_id,
+	const unsigned int	reg,
+	const hrt_data		value);
+
+STORAGE_CLASS_ISYS2401_DMA_H hrt_data isys2401_dma_reg_load(
+	const isys2401_dma_ID_t dma_id,
+	const unsigned int	reg);
+
+extern void isys2401_dma_set_max_burst_size(
+	const isys2401_dma_ID_t dma_id,
+	uint32_t		max_burst_size);
+
+#endif /* USE_INPUT_SYSTEM_VERSION_2401 */
 
 #endif /* __ISYS_DMA_PUBLIC_H_INCLUDED__ */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_include/type_support.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_include/type_support.h
index feaa0e7..5506331 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_include/type_support.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/hive_isp_css_include/type_support.h
@@ -57,7 +57,8 @@
 #endif
 
 #elif defined(__HIVECC)
-#include <stdint.h>
+#define __INDIRECT_STDINT_INCLUDE
+#include <stdint/stdint.h>
 #include <stdbool.h>
 #include <stddef.h>
 #include <limits.h>
@@ -73,6 +74,7 @@
 #define HOST_ADDRESS(x) (unsigned long)(x)
 
 #elif defined(__GNUC__)
+#define __STDC_LIMIT_MACROS 1
 #include <stdint.h>
 #include <stdbool.h>
 #include <stddef.h>
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css.h
index 10fb476..22c0dcc 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20141029_1500 */
-/* Release Version: irci_master_20141029_1500 */
+/* Release Version: irci_master_20141114_1919 */
+/* Release Version: irci_master_20141114_1919 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  *
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_acc_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_acc_types.h
index b1606c6..25020b9 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_acc_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_acc_types.h
@@ -140,6 +140,11 @@ struct ia_css_binary_s3a_info {
 	uint32_t		fixed_s3a_deci_log;
 };
 
+/** DPC related binary info */
+struct ia_css_binary_dpc_info {
+	uint32_t		bnr_lite; /**< bnr lite enable flag */
+};
+
 struct ia_css_binary_iterator_info {
 	uint32_t		num_stripes;
 	uint32_t		row_stripes_height;
@@ -205,6 +210,7 @@ struct ia_css_binary_info {
 	struct ia_css_binary_dvs_info		dvs;
 	struct ia_css_binary_vf_dec_info	vf_dec;
 	struct ia_css_binary_s3a_info		s3a;
+	struct ia_css_binary_dpc_info		dpc_bnr; /**< DPC related binary info */
 	struct ia_css_binary_iterator_info	iterator;
 	struct ia_css_binary_address_info	addresses;
 	struct ia_css_binary_uds_info		uds;
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_buffer.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_buffer.h
index a71e8e2..31ed760 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_buffer.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_buffer.h
@@ -53,6 +53,8 @@ enum ia_css_buffer_type {
 	IA_CSS_NUM_BUFFER_TYPE
 };
 
+/* Driver API is not SP/ISP visible, 64 bit types not supported on hivecc */
+#if !defined(__SP) && !defined(__ISP)
 /** Buffer structure. This is a container structure that enables content
  *  independent buffer queues and access functions.
  */
@@ -85,4 +87,6 @@ struct ia_css_buffer {
 void
 ia_css_dequeue_param_buffers(void);
 
+#endif /* !__SP && !__ISP */
+
 #endif /* __IA_CSS_BUFFER_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_control.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_control.h
index 98fa30d..c6f3b69b 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_control.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_control.h
@@ -139,26 +139,6 @@ ia_css_sp_has_initialized(void);
 bool
 ia_css_sp_has_terminated(void);
 
-/** @brief start SP1 hardware
- *
- * @return			IA_CSS_SUCCESS or error code upon error.
- *
- * It will boot the SP hardware and start multi-threading infrastructure.
- * All threads will be started and blocked by semaphore. This function should
- * be called before any ia_css_stream_start().
- */
-void
-ia_css_start_sp1(void);
-
-/** @brief stop SP1 hardware
- *
- * @return			IA_CSS_SUCCESS or error code upon error.
- *
- * This function will shut down SP1.
- */
-enum ia_css_err
-ia_css_stop_sp1(void);
-
 /** @brief start SP hardware
  *
  * @return			IA_CSS_SUCCESS or error code upon error.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_device_access.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_device_access.h
index 6bddc7a..6ec4ee1 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_device_access.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_device_access.h
@@ -42,8 +42,11 @@ ia_css_device_load_uint16(const hrt_address addr);
 uint32_t
 ia_css_device_load_uint32(const hrt_address addr);
 
+/* 64 bit types not supported by hivecc */
+#ifndef __HIVECC
 uint64_t
 ia_css_device_load_uint64(const hrt_address addr);
+#endif
 
 void
 ia_css_device_store_uint8(const hrt_address addr, const uint8_t data);
@@ -54,8 +57,11 @@ ia_css_device_store_uint16(const hrt_address addr, const uint16_t data);
 void
 ia_css_device_store_uint32(const hrt_address addr, const uint32_t data);
 
+/* 64 bit types not supported by hivecc */
+#ifndef __HIVECC
 void
 ia_css_device_store_uint64(const hrt_address addr, const uint64_t data);
+#endif
 
 void
 ia_css_device_load(const hrt_address addr, void *data, const size_t size);
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_err.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_err.h
index 0ff0d90..e4da5ec 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_err.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_err.h
@@ -78,6 +78,8 @@ enum ia_css_fw_warning {
 		This warning can be avoided by unlocking locked frame-buffers more timely. */
 	IA_CSS_FW_WARNING_EXP_ID_LOCKED, /** < Exposure ID skipped because the frame associated to it was still locked.
 		This warning can be avoided by unlocking locked frame-buffers more timely. */
+	IA_CSS_FW_WARNING_TAG_EXP_ID_FAILED, /** < Exposure ID cannot be found on the circular buffer.
+		This warning can be avoided by unlocking locked frame-buffers more timely. */
 };
 
 #endif /* __IA_CSS_ERR_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_event_public.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_event_public.h
index 78025aa..587bb78 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_event_public.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_event_public.h
@@ -67,9 +67,11 @@ enum ia_css_event_type {
 	IA_CSS_EVENT_TYPE_PORT_EOF			= 1 << 12,
 	/**< End Of Frame event, sent when in buffered sensor mode. */
 	IA_CSS_EVENT_TYPE_FW_ERROR			= 1 << 13,
-	/**< Unrecoverable error encounter by FW */
+	/**< @deprecated{Unrecoverable error encounter by FW } */
 	IA_CSS_EVENT_TYPE_FW_WARNING			= 1 << 14,
 	/**< Performance warning encounter by FW */
+	IA_CSS_EVENT_TYPE_FW_ASSERT			= 1 << 15,
+	/**< Assertion hit by FW */
 };
 
 #define IA_CSS_EVENT_TYPE_NONE 0
@@ -107,7 +109,7 @@ struct ia_css_event {
 	uint8_t                port;
 	/**< Port number for EOF event (not valid for other events). */
 	uint8_t                exp_id;
-	/**< Exposure id for EOF/TAGGED_FRAME event (not valid for other events)
+	/**< Exposure id for EOF/FRAME_TAGGED/FW_WARNING event (not valid for other events)
 	     The exposure ID is unique only within a logical stream and it is
 	     only generated on systems that have an input system (such as 2400
 	     and 2401, not on 2500 aka skycam).
@@ -126,9 +128,13 @@ struct ia_css_event {
 	/**< Firmware Handle for ACC_STAGE_COMPLETE event (not valid for other
 	     events). */
 	enum ia_css_fw_err     fw_error;
-	/**< Firmware error code, only for ERROR events. */
+	/**< @deprecated{This field is deprecated since ERROR events are no longer sent and will be removed. } */
 	enum ia_css_fw_warning fw_warning;
 	/**< Firmware warning code, only for WARNING events. */
+	uint8_t                fw_assert_module_id;
+	/**< Firmware module id, only for ASSERT events, should be logged by driver. */
+	uint16_t               fw_assert_line_no;
+	/**< Firmware line number, only for ASSERT events, should be logged by driver. */
 };
 
 /** @brief Dequeue a PSYS event from the CSS system.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_host_data.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_host_data.h
index 2fbdfc1..7084479 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_host_data.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_host_data.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20141029_1500 */
-/* Release Version: irci_master_20141029_1500 */
+/* Release Version: irci_master_20141114_1919 */
+/* Release Version: irci_master_20141114_1919 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  *
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_types.h
index e7da197..1207fac 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_types.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20141029_1500 */
-/* Release Version: irci_master_20141029_1500 */
+/* Release Version: irci_master_20141114_1919 */
+/* Release Version: irci_master_20141114_1919 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  *
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_version_data.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_version_data.h
index f19e83f..48e41fa 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_version_data.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/ia_css_version_data.h
@@ -29,7 +29,7 @@
 #define __IA_CSS_VERSION_DATA_H
 
 
-#define CSS_VERSION_STRING "REL:20141029_44.3_1545; API:2.1.8.4; GIT:irci_20141028_0204__191ffe#191ffe4d489862c47f19ac58aea084d6204ef02b; SDK:/nfs/iir/disks/iir_hivepackages_003/iir_hivepkgs_disk017/Css_Mizuchi/packages/Css_Mizuchi/int_css_mizuchi_20140829_1053; USER:viedifw; "
+#define CSS_VERSION_STRING "REL:20141114_46.5_1953; API:2.1.9.1; GIT:irci_20141113_0658__802300#8023006241bb7723ac5b066687ef47676f5e18bf; SDK:/nfs/iir/disks/iir_hivepackages_003/iir_hivepkgs_disk017/Css_Mizuchi/packages/Css_Mizuchi/int_css_mizuchi_20140829_1053; USER:viedifw; "
 
 
 #endif
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/bayer_ls/bayer_ls_1.0/ia_css_bayer_ls_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/bayer_ls/bayer_ls_1.0/ia_css_bayer_ls_param.h
index f344448..80111e7 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/bayer_ls/bayer_ls_1.0/ia_css_bayer_ls_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/bayer_ls/bayer_ls_1.0/ia_css_bayer_ls_param.h
@@ -25,6 +25,13 @@
 #include "type_support.h"
 
 #define NUM_BAYER_LS 2
+#define BAYER_IDX_GR 0
+#define BAYER_IDX_R 1
+#define BAYER_IDX_B 2
+#define BAYER_IDX_GB 3
+#define BAYER_QUAD_WIDTH 2
+#define BAYER_QUAD_HEIGHT 2
+#define NOF_BAYER_VECTORS 4
 
 /** bayer load/store */
 struct sh_css_isp_bayer_ls_isp_config {
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/csc/csc_1.0/ia_css_csc.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/csc/csc_1.0/ia_css_csc.host.c
index 825d261..79748d0 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/csc/csc_1.0/ia_css_csc.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/csc/csc_1.0/ia_css_csc.host.c
@@ -21,7 +21,10 @@
 
 #include "ia_css_types.h"
 #include "sh_css_defs.h"
+#ifndef IA_CSS_NO_DEBUG
+/* FIXME: See BZ 4427 */
 #include "ia_css_debug.h"
+#endif
 
 #include "ia_css_csc.host.h"
 
@@ -37,7 +40,9 @@ ia_css_encode_cc(
 	unsigned size)
 {
 	(void)size;
+#ifndef IA_CSS_NO_DEBUG
 	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE, "ia_css_encode_cc() enter:\n");
+#endif
 
 	to->m_shift    = (int16_t) from->fraction_bits;
 	to->m00 = (int16_t) from->matrix[0];
@@ -50,7 +55,9 @@ ia_css_encode_cc(
 	to->m21 = (int16_t) from->matrix[7];
 	to->m22 = (int16_t) from->matrix[8];
 
+#ifndef IA_CSS_NO_DEBUG
 	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE, "ia_css_encode_cc() leave:\n");
+#endif
 }
 
 void
@@ -62,6 +69,7 @@ ia_css_csc_encode(
 	ia_css_encode_cc(to, from, size);
 }
 
+#ifndef IA_CSS_NO_DEBUG
 void
 ia_css_cc_dump(
 	const struct sh_css_isp_csc_params *csc,
@@ -127,5 +135,5 @@ ia_css_cc_config_debug_dtrace(
 		config->matrix[5], config->matrix[6],
 		config->matrix[7], config->matrix[8]);
 }
-
+#endif
 
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/csc/csc_1.0/ia_css_csc.host.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/csc/csc_1.0/ia_css_csc.host.h
index b458a52..92d4693 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/csc/csc_1.0/ia_css_csc.host.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/csc/csc_1.0/ia_css_csc.host.h
@@ -22,8 +22,6 @@
 #ifndef __IA_CSS_CSC_HOST_H
 #define __IA_CSS_CSC_HOST_H
 
-#include "sh_css_params.h"
-
 #include "ia_css_csc_types.h"
 #include "ia_css_csc_param.h"
 
@@ -41,6 +39,7 @@ ia_css_csc_encode(
 	const struct ia_css_cc_config *from,
 	unsigned size);
 
+#ifndef IA_CSS_NO_DEBUG
 void
 ia_css_cc_dump(
 	const struct sh_css_isp_csc_params *csc, unsigned level,
@@ -57,5 +56,6 @@ ia_css_cc_config_debug_dtrace(
 	unsigned level);
 
 #define ia_css_csc_debug_dtrace ia_css_cc_config_debug_dtrace
+#endif
 
 #endif /* __IA_CSS_CSC_HOST_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/ctc/ctc2/ia_css_ctc2.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/ctc/ctc2/ia_css_ctc2.host.c
index d10e4ff..4f6384f 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/ctc/ctc2/ia_css_ctc2.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/ctc/ctc2/ia_css_ctc2.host.c
@@ -90,13 +90,15 @@ static int ctc2_slope(int y1, int y0, int x1, int x0)
  * VMEM Encode Function to translate Y parameters from userspace into ISP space
  */
 void ia_css_ctc2_vmem_encode(struct ia_css_isp_ctc2_vmem_params *to,
-			    const struct ia_css_ctc2_config *from)
+			     const struct ia_css_ctc2_config *from,
+			     size_t size)
 {
 	unsigned i, j;
 	const unsigned shffl_blck = 4;
 	const unsigned lenght_zeros = 11;
 	short dydx0, dydx1, dydx2, dydx3, dydx4;
 
+	(void)size;
 	/*
 	*  Calculation of slopes of lines interconnecting
 	*  0.0 -> y_x1 -> y_x2 -> y _x3 -> y_x4 -> 1.0
@@ -148,13 +150,16 @@ void ia_css_ctc2_vmem_encode(struct ia_css_isp_ctc2_vmem_params *to,
 	}
 }
 
-/* (void) = ia_css_ctc2_dmem_encode(*to, *from)
+/* (void) = ia_css_ctc2_encode(*to, *from)
  * -----------------------------------------------
  * DMEM Encode Function to translate UV parameters from userspace into ISP space
  */
-void ia_css_ctc2_dmem_encode(struct ia_css_isp_ctc2_dmem_params *to,
-			     struct ia_css_ctc2_config *from)
+void ia_css_ctc2_encode(struct ia_css_isp_ctc2_dmem_params *to,
+			struct ia_css_ctc2_config *from,
+			size_t size)
 {
+	(void)size;
+
 	to->uv_y0 = from->uv_y0;
 	to->uv_y1 = from->uv_y1;
 	to->uv_x0 = from->uv_x0;
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/ctc/ctc2/ia_css_ctc2.host.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/ctc/ctc2/ia_css_ctc2.host.h
index e5e5b39..c53399e 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/ctc/ctc2/ia_css_ctc2.host.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/ctc/ctc2/ia_css_ctc2.host.h
@@ -33,9 +33,11 @@ extern const struct ia_css_ctc2_config default_ctc2_config;
 /*Encode Functions to translate parameters from userspace into ISP space*/
 
 void ia_css_ctc2_vmem_encode(struct ia_css_isp_ctc2_vmem_params *to,
-			     const struct ia_css_ctc2_config *from);
+			     const struct ia_css_ctc2_config *from,
+			     size_t size);
 
-void ia_css_ctc2_dmem_encode(struct ia_css_isp_ctc2_dmem_params *to,
-			     struct ia_css_ctc2_config *from);
+void ia_css_ctc2_encode(struct ia_css_isp_ctc2_dmem_params *to,
+			struct ia_css_ctc2_config *from,
+			size_t size);
 
 #endif /* __IA_CSS_CTC2_HOST_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/ctc/ctc2/ia_css_ctc2_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/ctc/ctc2/ia_css_ctc2_types.h
index 028535a..0afe822 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/ctc/ctc2/ia_css_ctc2_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/ctc/ctc2/ia_css_ctc2_types.h
@@ -37,29 +37,29 @@ struct ia_css_ctc2_config {
 	/**< Gains by Y(Luma) at Y =0.0,Y_X1, Y_X2, Y_X3, Y_X4 and Y_X5
 	*   --default/ineffective value: 4096(0.5f)
 	*/
-	uint16_t y_y0;
-	uint16_t y_y1;
-	uint16_t y_y2;
-	uint16_t y_y3;
-	uint16_t y_y4;
-	uint16_t y_y5;
+	int32_t y_y0;
+	int32_t y_y1;
+	int32_t y_y2;
+	int32_t y_y3;
+	int32_t y_y4;
+	int32_t y_y5;
 	/** 1st-4th  kneepoints by Y(Luma) --default/ineffective value:n/a
 	*   requirement: 0.0 < y_x1 < y_x2 <y _x3 < y_x4 < 1.0
 	*/
-	uint16_t y_x1;
-	uint16_t y_x2;
-	uint16_t y_x3;
-	uint16_t y_x4;
+	int32_t y_x1;
+	int32_t y_x2;
+	int32_t y_x3;
+	int32_t y_x4;
 	/** Gains by UV(Chroma) under threholds uv_x0 and uv_x1
 	*   --default/ineffective value: 4096(0.5f)
 	*/
-	uint16_t uv_y0;
-	uint16_t uv_y1;
+	int32_t uv_y0;
+	int32_t uv_y1;
 	/** Minimum and Maximum Thresholds by UV(Chroma)- uv_x0 and uv_x1
 	*   --default/ineffective value: n/a
 	*/
-	uint16_t uv_x0;
-	uint16_t uv_x1;
+	int32_t uv_x0;
+	int32_t uv_x1;
 	};
 
 #endif /* __IA_CSS_CTC2_TYPES_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/eed1_8/ia_css_eed1_8.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/eed1_8/ia_css_eed1_8.host.c
index e70ab33..f26d41e 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/eed1_8/ia_css_eed1_8.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/eed1_8/ia_css_eed1_8.host.c
@@ -57,20 +57,20 @@ ia_css_eed1_8_encode(
 	to->derel_gain1 = from->derel_gain1;
 
 	to->coring_pos0 = from->coring_pos0;
-	to->coring_pos1 = from->coring_pos1;
+	to->coring_pos_diff = (from->coring_pos1 - from->coring_pos0);
 	to->coring_neg0 = from->coring_neg0;
-	to->coring_neg1 = from->coring_neg1;
+	to->coring_neg_diff = (from->coring_neg1 - from->coring_neg0);
 
-	to->gain_exp = from->gain_exp;
+	to->gain = (1 << from->gain_exp);
 	to->gain_pos0 = from->gain_pos0;
-	to->gain_pos1 = from->gain_pos1;
+	to->gain_pos_diff = (from->gain_pos1 - from->gain_pos0);
 	to->gain_neg0 = from->gain_neg0;
-	to->gain_neg1 = from->gain_neg1;
+	to->gain_neg_diff = (from->gain_neg1 - from->gain_neg0);
 
 	to->pos_margin0 = from->pos_margin0;
-	to->pos_margin1 = from->pos_margin1;
+	to->margin_pos_diff = (from->pos_margin1 - from->pos_margin0);
 	to->neg_margin0 = from->neg_margin0;
-	to->neg_margin1 = from->neg_margin1;
+	to->margin_neg_diff = (from->neg_margin1 - from->neg_margin0);
 
 	for (i = 0; i < IA_CSS_NUMBER_OF_DEW_ENHANCE_SEGMENTS; i++) {
 		to->dew_enhance_seg_x[i] = from->dew_enhance_seg_x[i];
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/eed1_8/ia_css_eed1_8_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/eed1_8/ia_css_eed1_8_param.h
index d2bd1b5..5b146fc 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/eed1_8/ia_css_eed1_8_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/eed1_8/ia_css_eed1_8_param.h
@@ -29,8 +29,8 @@
 /* Define size of the state..... TODO: check if this is the correct place */
 /* 4 planes : GR, R, B, GB */
 #define NUM_PLANES		4
-/* 3 lines state per color plane input_line_state */
-#define EED1_8_STATE_INPUT_BUFFER_HEIGHT	(2 * NUM_PLANES)
+/* 4 lines state per color plane input_line_state */
+#define EED1_8_STATE_INPUT_BUFFER_HEIGHT	(3 * NUM_PLANES)
 /* ToDo: Move this to testsetup */
 #define MAX_FRAME_SIMDWIDTH	30
 /* Each plane has width equal to half frame line */
@@ -58,20 +58,20 @@ struct ia_css_isp_eed1_8_params {
 	int32_t derel_gain1;
 
 	int32_t coring_pos0;
-	int32_t coring_pos1;
+	int32_t coring_pos_diff;
 	int32_t coring_neg0;
-	int32_t coring_neg1;
+	int32_t coring_neg_diff;
 
-	int32_t gain_exp;
+	int32_t gain;
 	int32_t gain_pos0;
-	int32_t gain_pos1;
+	int32_t gain_pos_diff;
 	int32_t gain_neg0;
-	int32_t gain_neg1;
+	int32_t gain_neg_diff;
 
 	int32_t pos_margin0;
-	int32_t pos_margin1;
+	int32_t margin_pos_diff;
 	int32_t neg_margin0;
-	int32_t neg_margin1;
+	int32_t margin_neg_diff;
 
 	int32_t dew_enhance_seg_x[IA_CSS_NUMBER_OF_DEW_ENHANCE_SEGMENTS];
 	int32_t dew_enhance_seg_y[IA_CSS_NUMBER_OF_DEW_ENHANCE_SEGMENTS];
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/gc/gc_1.0/ia_css_gc.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/gc/gc_1.0/ia_css_gc.host.c
index 997c535..6e7d483 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/gc/gc_1.0/ia_css_gc.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/gc/gc_1.0/ia_css_gc.host.c
@@ -21,7 +21,10 @@
 
 #include "ia_css_types.h"
 #include "sh_css_defs.h"
+#ifndef IA_CSS_NO_DEBUG
+/* FIXME: See BZ 4427 */
 #include "ia_css_debug.h"
+#endif
 #include "sh_css_frac.h"
 #include "vamem.h"
 
@@ -73,6 +76,7 @@ ia_css_gc_vamem_encode(
 	memcpy (&to->gc,  &from->data, sizeof(to->gc));
 }
 
+#ifndef IA_CSS_NO_DEBUG
 void
 ia_css_gc_dump(
 	const struct sh_css_isp_gc_params *gc,
@@ -117,4 +121,5 @@ ia_css_ce_debug_dtrace(
 		"config.uv_level_min=%d, config.uv_level_max=%d\n",
 		config->uv_level_min, config->uv_level_max);
 }
+#endif
 
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/gc/gc_1.0/ia_css_gc.host.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/gc/gc_1.0/ia_css_gc.host.h
index 16cba64..6b18c9e 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/gc/gc_1.0/ia_css_gc.host.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/gc/gc_1.0/ia_css_gc.host.h
@@ -22,8 +22,6 @@
 #ifndef __IA_CSS_GC_HOST_H
 #define __IA_CSS_GC_HOST_H
 
-#include "sh_css_params.h"
-
 #include "ia_css_gc_param.h"
 #include "ia_css_gc_table.host.h"
 
@@ -48,6 +46,7 @@ ia_css_ce_encode(
 	const struct ia_css_ce_config *from,
 	unsigned size);
 
+#ifndef IA_CSS_NO_DEBUG
 void
 ia_css_gc_dump(
 	const struct sh_css_isp_gc_params *gc,
@@ -68,4 +67,6 @@ ia_css_ce_debug_dtrace(
 	const struct ia_css_ce_config *config,
 	unsigned level);
 
+#endif
+
 #endif /* __IA_CSS_GC_HOST_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/gc/gc_1.0/ia_css_gc_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/gc/gc_1.0/ia_css_gc_param.h
index f8ca7a0..ff9d77e 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/gc/gc_1.0/ia_css_gc_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/gc/gc_1.0/ia_css_gc_param.h
@@ -28,6 +28,7 @@
 #define __INLINE_VAMEM__
 #endif
 #include "vamem.h"
+#include "ia_css_gc_types.h"
 
 #if defined(IS_VAMEM_VERSION_1)
 #define SH_CSS_ISP_GAMMA_TABLE_SIZE_LOG2 IA_CSS_VAMEM_1_GAMMA_TABLE_SIZE_LOG2
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/gc/gc_1.0/ia_css_gc_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/gc/gc_1.0/ia_css_gc_types.h
index d8e57ee..562ff49 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/gc/gc_1.0/ia_css_gc_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/gc/gc_1.0/ia_css_gc_types.h
@@ -26,6 +26,8 @@
 * CSS-API header file for Gamma Correction parameters.
 */
 
+#include "isp/kernels/ctc/ctc_1.0/ia_css_ctc_types.h"  /* FIXME: Needed for ia_css_vamem_type */
+
 /** Fractional bits for GAMMA gain */
 #define IA_CSS_GAMMA_GAIN_K_SHIFT      13
 
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/gc/gc_2/ia_css_gc2.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/gc/gc_2/ia_css_gc2.host.c
index 429b8d4..2a9da73 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/gc/gc_2/ia_css_gc2.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/gc/gc_2/ia_css_gc2.host.c
@@ -21,7 +21,10 @@
 
 #include "ia_css_types.h"
 #include "sh_css_defs.h"
+#ifndef IA_CSS_NO_DEBUG
+/* FIXME: See BZ 4427 */
 #include "ia_css_debug.h"
+#endif
 #include "csc/csc_1.0/ia_css_csc.host.h"
 #include "vamem.h"
 
@@ -85,6 +88,7 @@ ia_css_b_gamma_vamem_encode(
 	memcpy (&to->gc,  &from->data, sizeof(to->gc));
 }
 
+#ifndef IA_CSS_NO_DEBUG
 void
 ia_css_yuv2rgb_dump(
 	const struct sh_css_isp_csc_params *yuv2rgb,
@@ -109,3 +113,5 @@ ia_css_rgb_gamma_table_debug_dtrace(
 	(void)config;
 	(void)level;
 }
+#endif
+
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/gc/gc_2/ia_css_gc2.host.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/gc/gc_2/ia_css_gc2.host.h
index 5ed1ad1..34b664b 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/gc/gc_2/ia_css_gc2.host.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/gc/gc_2/ia_css_gc2.host.h
@@ -22,8 +22,6 @@
 #ifndef __IA_CSS_GC2_HOST_H
 #define __IA_CSS_GC2_HOST_H
 
-#include "sh_css_params.h"
-
 #include "ia_css_gc2_types.h"
 #include "ia_css_gc2_param.h"
 #include "ia_css_gc2_table.host.h"
@@ -61,6 +59,7 @@ ia_css_b_gamma_vamem_encode(
 	const struct ia_css_rgb_gamma_table *from,
 	unsigned size);
 
+#ifndef IA_CSS_NO_DEBUG
 void
 ia_css_yuv2rgb_dump(
 	const struct sh_css_isp_csc_params *yuv2rgb,
@@ -82,4 +81,6 @@ ia_css_rgb_gamma_table_debug_dtrace(
 #define ia_css_g_gamma_debug_dtrace ia_css_rgb_gamma_table_debug_dtrace
 #define ia_css_b_gamma_debug_dtrace ia_css_rgb_gamma_table_debug_dtrace
 
+#endif
+
 #endif /* __IA_CSS_GC2_HOST_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/gc/gc_2/ia_css_gc2_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/gc/gc_2/ia_css_gc2_param.h
index e99fa9c..036c603 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/gc/gc_2/ia_css_gc2_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/gc/gc_2/ia_css_gc2_param.h
@@ -24,6 +24,7 @@
 
 #include "type_support.h"
 /* Extend GC1 */
+#include "ia_css_gc2_types.h"
 #include "gc/gc_1.0/ia_css_gc_param.h"
 #include "csc/csc_1.0/ia_css_csc_param.h"
 
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/gc/gc_2/ia_css_gc2_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/gc/gc_2/ia_css_gc2_types.h
index 59252be..dc8f461 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/gc/gc_2/ia_css_gc2_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/gc/gc_2/ia_css_gc2_types.h
@@ -22,6 +22,8 @@
 #ifndef __IA_CSS_GC2_TYPES_H
 #define __IA_CSS_GC2_TYPES_H
 
+#include "isp/kernels/ctc/ctc_1.0/ia_css_ctc_types.h"  /* FIXME: needed for ia_css_vamem_type */
+
 /** @file
 * CSS-API header file for Gamma Correction parameters.
 */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr.host.c
index 66e239c..2f619ed 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr.host.c
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20141029_1500 */
-/* Release Version: irci_master_20141029_1500 */
+/* Release Version: irci_master_20141114_1919 */
+/* Release Version: irci_master_20141114_1919 */
 /*
  * INTEL CONFIDENTIAL
  *
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr.host.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr.host.h
index 430587d..a7837006 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr.host.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr.host.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20141029_1500 */
-/* Release Version: irci_master_20141029_1500 */
+/* Release Version: irci_master_20141114_1919 */
+/* Release Version: irci_master_20141114_1919 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  *
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr_param.h
index 7cc861d..929c4ca 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr_param.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20141029_1500 */
-/* Release Version: irci_master_20141029_1500 */
+/* Release Version: irci_master_20141114_1919 */
+/* Release Version: irci_master_20141114_1919 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  *
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr_types.h
index d872fc2..2649186 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/hdr/ia_css_hdr_types.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20141029_1500 */
-/* Release Version: irci_master_20141029_1500 */
+/* Release Version: irci_master_20141114_1919 */
+/* Release Version: irci_master_20141114_1919 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  *
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/iefd2_6/ia_css_iefd2_6.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/iefd2_6/ia_css_iefd2_6.host.c
index 0ca39b3..b0fd81e 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/iefd2_6/ia_css_iefd2_6.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/iefd2_6/ia_css_iefd2_6.host.c
@@ -59,6 +59,10 @@ ia_css_iefd2_6_vmem_encode(
 		to->e_cu_non_dir_x[0][i] = 0;
 		to->e_cu_non_dir_a[0][i] = 0;
 		to->e_cu_non_dir_b[0][i] = 0;
+
+		to->e_curad_x[0][i] = 0;
+		to->e_curad_a[0][i] = 0;
+		to->e_curad_b[0][i] = 0;
 	}
 
 	/* Copy all data */
@@ -78,6 +82,10 @@ ia_css_iefd2_6_vmem_encode(
 		to->e_cu_non_dir_a[0][base] = 0;
 		to->e_cu_non_dir_b[0][base] = from->cu_non_dir_sharp_slopes_b[1];
 
+		to->e_curad_x[0][base] = 0;
+		to->e_curad_a[0][base] = 0;
+		to->e_curad_b[0][base] = from->cu_radial_slopes_b[1];
+
 		for (j = 1; j < 4; j++) {
 			to->e_cu_dir_a[0][base+j] = from->cu_dir_sharp_slopes_a[j];
 			to->e_cu_dir_b[0][base+j] = from->cu_dir_sharp_slopes_b[j];
@@ -96,8 +104,14 @@ ia_css_iefd2_6_vmem_encode(
 			to->e_cued_a[0][base+j] = from->cu_ed_slopes_a[j];
 			to->e_cued_b[0][base+j] = from->cu_ed_slopes_b[j];
 		}
-
 		to->e_cued_x[0][base+6] = from->cu_ed_points_x[j];
+
+		for (j = 1; j < 6; j++) {
+			to->e_curad_x[0][base+j] = from->cu_radial_points_x[j];
+			to->e_curad_a[0][base+j] = from->cu_radial_slopes_a[j];
+			to->e_curad_b[0][base+j] = from->cu_radial_slopes_b[j];
+		}
+		to->e_curad_x[0][base+6] = from->cu_radial_points_x[j];
 	}
 }
 
@@ -152,25 +166,8 @@ ia_css_iefd2_6_encode(
 	to->vssnlm_y3			= from->vssnlm_y3;
 
 	/* Setup for configurable units */
-	/* First copy the hardcoded items */
-	to->curad_x[0]			= 0;
-	to->curad_a[0]			= 0;
-	to->curad_b[0]			= from->cu_radial_slope_b[1];
-	to->e_cued2_a			= from->cu_ed2_slopes_a;
-	to->e_cu_vssnlm_a		= from->cu_vssnlm_slopes_a;
-
-	/* copying remaining array part */
-	for (i = 1; i < 5; i++)
-	{
-		to->curad_a[i]			= from->cu_radial_slope_a[i];
-		to->curad_b[i]			= from->cu_radial_slope_b[i];
-	}
-
-	for (i = 1; i < 6; i++)
-	{
-		to->curad_x[i]			= from->cu_radial_points_x[i];
-	}
-
+	to->e_cued2_a		= from->cu_ed2_slopes_a;
+	to->e_cu_vssnlm_a	= from->cu_vssnlm_slopes_a;
 	to->e_cued2_b		= ((0-from->cu_ed2_points_x[1]) * from->cu_ed2_slopes_a)>>4;
 	to->e_cu_vssnlm_b	= ((0-from->cu_vssnlm_points_x[1]) * from->cu_vssnlm_slopes_a)>>4;
 }
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/iefd2_6/ia_css_iefd2_6_default.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/iefd2_6/ia_css_iefd2_6_default.host.c
index e56f875..2714ce6 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/iefd2_6/ia_css_iefd2_6_default.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/iefd2_6/ia_css_iefd2_6_default.host.c
@@ -127,14 +127,14 @@ const struct ia_css_iefd2_6_config default_iefd2_6_config = {
 		224,
 		255
 		},
-	.cu_radial_slope_a = {
+	.cu_radial_slopes_a = {
 		713,
 		278,
 		295,
 		286,
 		-1
 		},
-	.cu_radial_slope_b = {
+	.cu_radial_slopes_b = {
 		1,
 		101,
 		162,
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/iefd2_6/ia_css_iefd2_6_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/iefd2_6/ia_css_iefd2_6_param.h
index ace1bc4..d630a5b 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/iefd2_6/ia_css_iefd2_6_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/iefd2_6/ia_css_iefd2_6_param.h
@@ -35,6 +35,9 @@ struct ia_css_isp_iefd2_6_vmem_params {
 	VMEM_ARRAY(e_cu_non_dir_x, ISP_VEC_NELEMS);
 	VMEM_ARRAY(e_cu_non_dir_a, ISP_VEC_NELEMS);
 	VMEM_ARRAY(e_cu_non_dir_b, ISP_VEC_NELEMS);
+	VMEM_ARRAY(e_curad_x, ISP_VEC_NELEMS);
+	VMEM_ARRAY(e_curad_a, ISP_VEC_NELEMS);
+	VMEM_ARRAY(e_curad_b, ISP_VEC_NELEMS);
 };
 
 struct ia_css_isp_iefd2_6_dmem_params {
@@ -77,9 +80,6 @@ struct ia_css_isp_iefd2_6_dmem_params {
 	int32_t vssnlm_y3;
 	int32_t e_cued2_a;
 	int32_t e_cued2_b;
-	int32_t curad_x[6];
-	int32_t curad_a[5];
-	int32_t curad_b[5];
 	int32_t e_cu_vssnlm_a;
 	int32_t e_cu_vssnlm_b;
 };
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/iefd2_6/ia_css_iefd2_6_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/iefd2_6/ia_css_iefd2_6_types.h
index 18cfc8d..dc20ff6 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/iefd2_6/ia_css_iefd2_6_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/iefd2_6/ia_css_iefd2_6_types.h
@@ -152,10 +152,10 @@ struct ia_css_iefd2_6_config {
 	int32_t cu_radial_points_x[6];	   /**< PointsX of Config Unit Radial.
 						u0.8, [0,255], default 50,86,142,189,224,255,
 						ineffective 0,0,0,0,0,0 */
-	int32_t cu_radial_slope_a[5];	   /**< SlopesA of Config Unit Radial.
+	int32_t cu_radial_slopes_a[5];	   /**< SlopesA of Config Unit Radial.
 						s5.8, [-8192, 8191], default 713,278,295,286,-1,
 						ineffective 0,0,0,0,0 */
-	int32_t cu_radial_slope_b[5];	   /**< SlopesB of Config Unit Radial.
+	int32_t cu_radial_slopes_b[5];	   /**< SlopesB of Config Unit Radial.
 						u0.8, [0,255], default 1,101,162,216,255,
 						ineffective 0,0,0,0,0 */
 	int32_t cu_vssnlm_points_x[2];	   /**< PointsX of config unit VSSNLM.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/macc/macc1_5/ia_css_macc1_5.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/macc/macc1_5/ia_css_macc1_5.host.c
new file mode 100644
index 0000000..f569064
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/macc/macc1_5/ia_css_macc1_5.host.c
@@ -0,0 +1,81 @@
+/*
+ * Support for Intel Camera Imaging ISP subsystem.
+ *
+ * Copyright (c) 2010 - 2014 Intel Corporation. All Rights Reserved.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License version
+ * 2 as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+ * 02110-1301, USA.
+ *
+ */
+
+#include "ia_css_types.h"
+#include "sh_css_defs.h"
+
+#ifndef IA_CSS_NO_DEBUG
+/* FIXME: See BZ 4427 */
+#include "ia_css_debug.h"
+#endif
+
+#include "ia_css_macc1_5.host.h"
+
+const struct ia_css_macc1_5_config default_macc1_5_config = {
+	1
+};
+
+void
+ia_css_macc1_5_encode(
+	struct sh_css_isp_macc1_5_params *to,
+	const struct ia_css_macc1_5_config *from,
+	unsigned size)
+{
+	(void)size;
+	to->exp = from->exp;
+}
+
+void
+ia_css_macc1_5_vmem_encode(
+	struct sh_css_isp_macc1_5_vmem_params *params,
+	const struct ia_css_macc1_5_table *from,
+	unsigned size)
+{
+	unsigned int i, j, k, idx;
+	unsigned int idx_map[] = {
+		0, 1, 3, 2, 6, 7, 5, 4, 12, 13, 15, 14, 10, 11, 9, 8};
+
+	(void)size;
+
+	for (k = 0; k < 4; k++)
+		for (i = 0; i < IA_CSS_MACC_NUM_AXES; i++) {
+			idx = (idx_map[i] + (k*IA_CSS_MACC_NUM_AXES));
+			j   = 4*i;
+
+			params->data[0][(idx)] = from->data[j];
+			params->data[1][(idx)] = from->data[j+1];
+			params->data[2][(idx)] = from->data[j+2];
+			params->data[3][(idx)] = from->data[j+3];
+		}
+
+}
+
+#ifndef IA_CSS_NO_DEBUG
+void
+ia_css_macc1_5_debug_dtrace(
+	const struct ia_css_macc1_5_config *config,
+	unsigned level)
+{
+	ia_css_debug_dtrace(level,
+		"config.exp=%d\n",
+		config->exp);
+}
+#endif
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/macc/macc1_5/ia_css_macc1_5.host.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/macc/macc1_5/ia_css_macc1_5.host.h
new file mode 100644
index 0000000..502dfdb
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/macc/macc1_5/ia_css_macc1_5.host.h
@@ -0,0 +1,48 @@
+/*
+ * Support for Intel Camera Imaging ISP subsystem.
+ *
+ * Copyright (c) 2010 - 2014 Intel Corporation. All Rights Reserved.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License version
+ * 2 as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+ * 02110-1301, USA.
+ *
+ */
+
+#ifndef __IA_CSS_MACC1_5_HOST_H
+#define __IA_CSS_MACC1_5_HOST_H
+
+#include "ia_css_macc1_5_param.h"
+#include "ia_css_macc1_5_table.host.h"
+
+extern const struct ia_css_macc1_5_config default_macc1_5_config;
+
+void
+ia_css_macc1_5_encode(
+	struct sh_css_isp_macc1_5_params *to,
+	const struct ia_css_macc1_5_config *from,
+	unsigned size);
+
+void
+ia_css_macc1_5_vmem_encode(
+	struct sh_css_isp_macc1_5_vmem_params *params,
+	const struct ia_css_macc1_5_table *from,
+	unsigned size);
+
+#ifndef IA_CSS_NO_DEBUG
+void
+ia_css_macc1_5_debug_dtrace(
+	const struct ia_css_macc1_5_config *config,
+	unsigned level);
+#endif
+#endif /* __IA_CSS_MACC1_5_HOST_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/macc/macc1_5/ia_css_macc1_5_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/macc/macc1_5/ia_css_macc1_5_param.h
new file mode 100644
index 0000000..802ede3
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/macc/macc1_5/ia_css_macc1_5_param.h
@@ -0,0 +1,38 @@
+/*
+ * Support for Intel Camera Imaging ISP subsystem.
+ *
+ * Copyright (c) 2010 - 2014 Intel Corporation. All Rights Reserved.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License version
+ * 2 as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+ * 02110-1301, USA.
+ *
+ */
+
+#ifndef __IA_CSS_MACC1_5_PARAM_H
+#define __IA_CSS_MACC1_5_PARAM_H
+
+#include "type_support.h"
+#include "vmem.h"
+#include "ia_css_macc1_5_types.h"
+
+/* MACC */
+struct sh_css_isp_macc1_5_params {
+	int32_t exp;
+};
+
+struct sh_css_isp_macc1_5_vmem_params {
+	VMEM_ARRAY(data, IA_CSS_MACC_NUM_COEFS*ISP_NWAY);
+};
+
+#endif /* __IA_CSS_MACC1_5_PARAM_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/macc/macc1_5/ia_css_macc1_5_table.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/macc/macc1_5/ia_css_macc1_5_table.host.c
new file mode 100644
index 0000000..592cd37
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/macc/macc1_5/ia_css_macc1_5_table.host.c
@@ -0,0 +1,39 @@
+/*
+ * Support for Intel Camera Imaging ISP subsystem.
+ *
+ * Copyright (c) 2010 - 2014 Intel Corporation. All Rights Reserved.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License version
+ * 2 as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+ * 02110-1301, USA.
+ *
+ */
+
+#include "system_global.h"
+#include "ia_css_types.h"
+#include "ia_css_macc1_5_table.host.h"
+
+/* Multi-Axes Color Correction table for ISP2.
+ *	64values = 2x2matrix for 16area, [s1.12]
+ *	ineffective: 16 of "identity 2x2 matix" {4096,0,0,4096}
+ */
+const struct ia_css_macc1_5_table default_macc1_5_table = {
+	      { 4096, 0, 0, 4096, 4096, 0, 0, 4096,
+		4096, 0, 0, 4096, 4096, 0, 0, 4096,
+		4096, 0, 0, 4096, 4096, 0, 0, 4096,
+		4096, 0, 0, 4096, 4096, 0, 0, 4096,
+		4096, 0, 0, 4096, 4096, 0, 0, 4096,
+		4096, 0, 0, 4096, 4096, 0, 0, 4096,
+		4096, 0, 0, 4096, 4096, 0, 0, 4096,
+		4096, 0, 0, 4096, 4096, 0, 0, 4096 }
+};
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/macc/macc1_5/ia_css_macc1_5_table.host.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/macc/macc1_5/ia_css_macc1_5_table.host.h
new file mode 100644
index 0000000..f4b0324
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/macc/macc1_5/ia_css_macc1_5_table.host.h
@@ -0,0 +1,29 @@
+/*
+ * Support for Intel Camera Imaging ISP subsystem.
+ *
+ * Copyright (c) 2010 - 2014 Intel Corporation. All Rights Reserved.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License version
+ * 2 as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+ * 02110-1301, USA.
+ *
+ */
+
+#ifndef __IA_CSS_MACC1_5_TABLE_HOST_H
+#define __IA_CSS_MACC1_5_TABLE_HOST_H
+
+#include "macc/macc1_5/ia_css_macc1_5_types.h"
+
+extern const struct ia_css_macc1_5_table default_macc1_5_table;
+
+#endif /* __IA_CSS_MACC1_5_TABLE_HOST_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/macc/macc1_5/ia_css_macc1_5_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/macc/macc1_5/ia_css_macc1_5_types.h
new file mode 100644
index 0000000..90de036
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/macc/macc1_5/ia_css_macc1_5_types.h
@@ -0,0 +1,71 @@
+/*
+ * Support for Intel Camera Imaging ISP subsystem.
+ *
+ * Copyright (c) 2010 - 2014 Intel Corporation. All Rights Reserved.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License version
+ * 2 as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+ * 02110-1301, USA.
+ *
+ */
+
+#ifndef __IA_CSS_MACC1_5_TYPES_H
+#define __IA_CSS_MACC1_5_TYPES_H
+
+/** Number of axes in the MACC table. */
+#define IA_CSS_MACC_NUM_AXES           16
+/** Number of coefficients per MACC axes. */
+#define IA_CSS_MACC_NUM_COEFS          4
+
+/** Multi-Axes Color Correction (MACC) table.
+ *
+ *  ISP block: MACC (MACC by only matrix)
+ *             MACC1_5 (MACC by matrix and exponent(ia_css_macc_config))
+ *  ISP1: MACC is used.
+ *  ISP2: MACC1_5 is used.
+ *
+ *  [MACC]
+ *   OutU = (data00 * InU + data01 * InV) >> 13
+ *   OutV = (data10 * InU + data11 * InV) >> 13
+ *
+ *   default/ineffective:
+ *   OutU = (8192 * InU +    0 * InV) >> 13
+ *   OutV = (   0 * InU + 8192 * InV) >> 13
+ *
+ *  [MACC1_5]
+ *   OutU = (data00 * InU + data01 * InV) >> (13 - exp)
+ *   OutV = (data10 * InU + data11 * InV) >> (13 - exp)
+ *
+ *   default/ineffective: (exp=1)
+ *   OutU = (4096 * InU +    0 * InV) >> (13 - 1)
+ *   OutV = (   0 * InU + 4096 * InV) >> (13 - 1)
+ */
+struct ia_css_macc1_5_table {
+	int16_t data[IA_CSS_MACC_NUM_COEFS * IA_CSS_MACC_NUM_AXES];
+	/**< 16 of 2x2 matix
+	  MACC1_5: s[macc_config.exp].[13-macc_config.exp], [-8192,8191]
+	    default/ineffective: (s1.12)
+		16 of "identity 2x2 matix" {4096,0,0,4096} */
+};
+
+/** Multi-Axes Color Correction (MACC) configuration.
+ *
+ *  ISP block: MACC1_5 (MACC by matrix and exponent(ia_css_macc_config))
+ *  ISP2: MACC1_5 is used.
+ */
+struct ia_css_macc1_5_config {
+	uint8_t exp;	/**< Common exponent of ia_css_macc_table.
+				u8.0, [0,13], default 1, ineffective 1 */
+};
+
+#endif /* __IA_CSS_MACC1_5_TYPES_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/s3a_stat_ls/ia_css_s3a_stat_ls_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/s3a_stat_ls/ia_css_s3a_stat_ls_param.h
new file mode 100644
index 0000000..8623512
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/s3a_stat_ls/ia_css_s3a_stat_ls_param.h
@@ -0,0 +1,39 @@
+/*
+ * Support for Intel Camera Imaging ISP subsystem.
+ *
+ * Copyright (c) 2010 - 2014 Intel Corporation. All Rights Reserved.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License version
+ * 2 as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+ * 02110-1301, USA.
+ *
+ */
+
+#ifndef __IA_CSS_S3A_STAT_LS_PARAM_H
+#define __IA_CSS_S3A_STAT_LS_PARAM_H
+
+#include "type_support.h"
+
+#define NUM_S3A_LS 1
+
+/** s3a statistics store */
+struct sh_css_isp_s3a_stat_ls_isp_config {
+	uint32_t base_address[NUM_S3A_LS];
+	uint32_t width[NUM_S3A_LS];
+	uint32_t height[NUM_S3A_LS];
+	uint32_t stride[NUM_S3A_LS];
+	uint32_t s3a_grid_size_log2[NUM_S3A_LS];
+};
+
+
+#endif /* __IA_CSS_S3A_STAT_LS_PARAM_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/s3a_stat_ls/ia_css_s3a_stat_store_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/s3a_stat_ls/ia_css_s3a_stat_store_param.h
new file mode 100644
index 0000000..0a562b8
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/kernels/s3a_stat_ls/ia_css_s3a_stat_store_param.h
@@ -0,0 +1,28 @@
+/*
+ * Support for Intel Camera Imaging ISP subsystem.
+ *
+ * Copyright (c) 2010 - 2014 Intel Corporation. All Rights Reserved.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License version
+ * 2 as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+ * 02110-1301, USA.
+ *
+ */
+
+#ifndef __IA_CSS_S3A_STAT_STORE_PARAM_H
+#define __IA_CSS_S3A_STAT_STORE_PARAM_H
+
+#include "ia_css_s3a_stat_ls_param.h"
+
+
+#endif /* __IA_CSS_S3A_STAT_STORE_PARAM_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/modes/interface/isp_const.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/modes/interface/isp_const.h
index 860eafc..97bb921 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/modes/interface/isp_const.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/isp/modes/interface/isp_const.h
@@ -21,7 +21,6 @@
  * estoppel or otherwise. Any license under such intellectual property rights
  * must be express and approved by Intel in writing.
  */
-
 #ifndef _COMMON_ISP_CONST_H_
 #define _COMMON_ISP_CONST_H_
 
@@ -157,9 +156,11 @@
 #define SH_CSS_BINARY_ID_VIDEO_KERNELTEST_OUTPUT_YUV        161
 #define SH_CSS_BINARY_ID_VIDEO_KERNELTEST_OUTPUT_YUV_16     162
 #define SH_CSS_BINARY_ID_VIDEO_KERNELTEST_OUTPUT_SPLIT      163
+#define SH_CSS_BINARY_ID_VIDEO_KERNELTEST_OUTPUT_SYSTEM_STRIPED 164
 
 
 /* skycam partial test pipelines*/
+#define SH_CSS_BINARY_ID_IF_TO_OSYS_NO_XNR_DVS              199
 #define SH_CSS_BINARY_ID_IF_TO_YUVP2_NO_ISP_EXITS           200
 #define SH_CSS_BINARY_ID_IF_TO_DPC                          201
 #define SH_CSS_BINARY_ID_IF_TO_BDS                          202
@@ -219,7 +220,8 @@
 #define SH_CSS_BINARY_ID_IF_TO_XNR_STRIPED                  256
 #define SH_CSS_BINARY_ID_IF_TO_REF_STRIPED                  257
 #define SH_CSS_BINARY_ID_VIDEO_IF_TO_OSYS                   258
-
+#define SH_CSS_BINARY_ID_IF_TO_TNR_NO_DVS_C0_STRIPED        259
+#define SH_CSS_BINARY_ID_IF_TO_YUVP1_C0                     260
 
 #define XMEM_WIDTH_BITS              HIVE_ISP_DDR_WORD_BITS
 #define XMEM_SHORTS_PER_WORD         (HIVE_ISP_DDR_WORD_BITS/16)
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/binary/interface/ia_css_binary.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/binary/interface/ia_css_binary.h
index 6c9eb85..6ec9ff0 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/binary/interface/ia_css_binary.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/binary/interface/ia_css_binary.h
@@ -222,11 +222,13 @@ ia_css_binary_get_shading_info(const struct ia_css_binary *binary,
 
 void
 ia_css_binary_3a_grid_info(const struct ia_css_binary *binary,
-			   struct ia_css_grid_info *info);
+			   struct ia_css_grid_info *info,
+			   struct ia_css_pipe *pipe);
 
 void
 ia_css_binary_dvs_grid_info(const struct ia_css_binary *binary,
-			   struct ia_css_grid_info *info);
+			    struct ia_css_grid_info *info,
+			    struct ia_css_pipe *pipe);
 
 unsigned
 ia_css_binary_max_vf_width(void);
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/binary/src/binary.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/binary/src/binary.c
index 2733d0d..f0230f3 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/binary/src/binary.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/binary/src/binary.c
@@ -32,10 +32,14 @@
 #include "sh_css_firmware.h"
 #include "sh_css_defs.h"
 #include "sh_css_legacy.h"
+
 #if !defined(IS_ISP_2500_SYSTEM)
 #include "vf/vf_1.0/ia_css_vf.host.h"
 #include "sdis/sdis_1.0/ia_css_sdis.host.h"
+#else
+#include <components/stats_3a/src/host/stats_3a.host.h>
 #endif
+
 #include "camera/pipe/interface/ia_css_pipe_binarydesc.h"
 #if defined(HAS_RES_MGR)
 #include <components/resolutions_mgr/src/host/resolutions_mgr.host.h>
@@ -111,8 +115,8 @@ ia_css_binary_internal_res(const struct ia_css_frame_info *in_info,
 		info->pipeline.top_cropping,
 		binary_dvs_env.height);
 #if defined(HAS_RES_MGR)
-	internal_res->height = bds_out_info->res.height;
-	internal_res->width = bds_out_info->res.width;
+	internal_res->height = (bds_out_info == NULL) ? internal_res->height : bds_out_info->res.height;
+	internal_res->width = (bds_out_info == NULL) ? internal_res->width: bds_out_info->res.width;
 #endif
 }
 
@@ -325,12 +329,15 @@ ia_css_binary_get_shading_info(const struct ia_css_binary *binary,			/* [in] */
 
 void
 ia_css_binary_dvs_grid_info(const struct ia_css_binary *binary,
-				struct ia_css_grid_info *info)
+			    struct ia_css_grid_info *info,
+			    struct ia_css_pipe *pipe)
 {
 	struct ia_css_dvs_grid_info *dvs_info;
 
+	(void)pipe;
 	assert(binary != NULL);
 	assert(info != NULL);
+
 	dvs_info = &info->dvs_grid;
 
 	info->isp_in_width = binary->internal_frame_info.res.width;
@@ -350,6 +357,7 @@ ia_css_binary_dvs_grid_info(const struct ia_css_binary *binary,
 	dvs_info->num_ver_coefs     = binary->dis.coef.dim.height;
 
 #if defined(IS_ISP_2500_SYSTEM)
+	assert(pipe != NULL);
 	dvs_info->enable            = binary->info->sp.enable.dvs_stats;
 #endif
 
@@ -365,10 +373,12 @@ ia_css_binary_dvs_grid_info(const struct ia_css_binary *binary,
 
 void
 ia_css_binary_3a_grid_info(const struct ia_css_binary *binary,
-			       struct ia_css_grid_info *info)
+			   struct ia_css_grid_info *info,
+			   struct ia_css_pipe *pipe)
 {
 	struct ia_css_3a_grid_info *s3a_info;
 
+	(void)pipe;
 	assert(binary != NULL);
 	assert(info != NULL);
 	s3a_info = &info->s3a_grid;
@@ -393,12 +403,16 @@ ia_css_binary_3a_grid_info(const struct ia_css_binary *binary,
 	s3a_info->has_histogram     = 0;
 #endif
 #else	/* IS_ISP_2500_SYSTEM defined */
+	assert(pipe != NULL);
 	s3a_info->ae_enable         = binary->info->sp.enable.ae;
 	s3a_info->af_enable         = binary->info->sp.enable.af;
 	s3a_info->awb_fr_enable     = binary->info->sp.enable.awb_fr_acc;
 	s3a_info->awb_enable        = binary->info->sp.enable.awb_acc;
 	s3a_info->elem_bit_depth    = SH_CSS_BAYER_BITS;
-	/* todo grid config */
+	s3a_info->af_grd_info       = *get_af_grid_config(pipe);
+	s3a_info->awb_fr_grd_info   = *get_awb_fr_grid_config(pipe);
+	s3a_info->awb_grd_info      = *get_awb_grid_config(pipe);
+	s3a_info->ae_grd_info       = *get_ae_grid_config_config(pipe);
 #endif
 #if defined(HAS_VAMEM_VERSION_2)
 	info->vamem_type = IA_CSS_VAMEM_TYPE_2;
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/bufq/src/bufq.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/bufq/src/bufq.c
index 57200005..dd9a73c 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/bufq/src/bufq.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/bufq/src/bufq.c
@@ -134,18 +134,20 @@ bool ia_css_query_internal_queue_id(
 	unsigned int thread_id,
 	enum sh_css_queue_id *val)
 {
-	assert(buf_type < IA_CSS_NUM_DYNAMIC_BUFFER_TYPE);
-	assert(thread_id < SH_CSS_MAX_SP_THREADS);
-	assert(val != NULL);
+	IA_CSS_ENTER("buf_type=%d, thread_id=%d, val = %p", buf_type, thread_id, val);
+
+	if ((val == NULL) || (thread_id >= SH_CSS_MAX_SP_THREADS) || (buf_type >= IA_CSS_NUM_DYNAMIC_BUFFER_TYPE)) {
+		IA_CSS_LEAVE("return_val = false");
+		return false;
+	}
 
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE,
-		"ia_css_query_internal_queue_id() enter: buf_type=%d, thread_id=%d\n", buf_type, thread_id);
 	*val = buffer_type_to_queue_id_map[thread_id][buf_type];
-	assert(*val != SH_CSS_INVALID_QUEUE_ID);
-	assert(*val < SH_CSS_MAX_NUM_QUEUES);
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE,
-		"ia_css_query_internal_queue_id() leave: return_val=%d\n",
-		*val);
+	if ((*val == SH_CSS_INVALID_QUEUE_ID) || (*val >= SH_CSS_MAX_NUM_QUEUES)) {
+		IA_CSS_LOG("INVALID queue ID MAP = %d\n", *val);
+		IA_CSS_LEAVE("return_val = false");
+		return false;
+	}
+	IA_CSS_LEAVE("return_val = true");
 	return true;
 }
 
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/debug/interface/ia_css_debug.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/debug/interface/ia_css_debug.h
index f2c4b16..8c5bd5c 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/debug/interface/ia_css_debug.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/debug/interface/ia_css_debug.h
@@ -52,7 +52,7 @@
 /* Global variable which controls the verbosity levels of the debug tracing */
 extern unsigned int ia_css_debug_trace_level;
 
-/*! \brief Enum defining the different isp parameters to dump.
+/*! @brief Enum defining the different isp parameters to dump.
  *  Values can be combined to dump a combination of sets.
  */
 enum ia_css_debug_enable_param_dump {
@@ -126,11 +126,11 @@ enum ia_css_debug_enable_param_dump {
 	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE, \
 		"%s(): enter: leave: " fmt "\n", __func__, ##__VA_ARGS__)
 
-/*! \brief Function for tracing to the provided printf function in the
+/*! @brief Function for tracing to the provided printf function in the
  *	environment.
- * \param[in]	level		Level of the message.
- * \param[in]	fmt		printf like format string
- * \param[in]	args		arguments for the format string
+ * @param[in]	level		Level of the message.
+ * @param[in]	fmt		printf like format string
+ * @param[in]	args		arguments for the format string
  */
 STORAGE_CLASS_INLINE void
 ia_css_debug_vdtrace(unsigned int level, const char *fmt, va_list args)
@@ -151,53 +151,58 @@ ia_css_debug_dtrace(unsigned int level, const char *fmt, ...)
 }
 #endif
 
-/*! \brief Dump sp thread's stack contents
+/*! @brief Dump sp thread's stack contents
  * SP thread's stack contents are set to 0xcafecafe. This function dumps the
  * stack to inspect if the stack's boundaries are compromised.
- * \return	None
+ * @return	None
  */
 void ia_css_debug_dump_sp_stack_info(void);
 
-/*! \brief Function to set the global dtrace verbosity level.
- * \param[in]	trace_level	Maximum level of the messages to be traced.
- * \return	None
+/*! @brief Function to set the global dtrace verbosity level.
+ * @param[in]	trace_level	Maximum level of the messages to be traced.
+ * @return	None
  */
 void ia_css_debug_set_dtrace_level(
 	const unsigned int	trace_level);
 
-/*! \brief Dump input formatter state.
+/*! @brief Function to get the global dtrace verbosity level.
+ * @return	global dtrace verbosity level
+ */
+unsigned int ia_css_debug_get_dtrace_level(void);
+
+/*! @brief Dump input formatter state.
  * Dumps the input formatter state to tracing output.
- * \return	None
+ * @return	None
  */
 void ia_css_debug_dump_if_state(void);
 
-/*! \brief Dump isp hardware state.
+/*! @brief Dump isp hardware state.
  * Dumps the isp hardware state to tracing output.
- * \return	None
+ * @return	None
  */
 void ia_css_debug_dump_isp_state(void);
 
-/*! \brief Dump sp hardware state.
+/*! @brief Dump sp hardware state.
  * Dumps the sp hardware state to tracing output.
- * \return	None
+ * @return	None
  */
 void ia_css_debug_dump_sp_state(void);
 
-/*! \brief Dump dma controller state.
+/*! @brief Dump dma controller state.
  * Dumps the dma controller state to tracing output.
- * \return	None
+ * @return	None
  */
 void ia_css_debug_dump_dma_state(void);
 
-/*! \brief Dump internal sp software state.
+/*! @brief Dump internal sp software state.
  * Dumps the sp software state to tracing output.
- * \return	None
+ * @return	None
  */
 void ia_css_debug_dump_sp_sw_debug_info(void);
 
-/*! \brief Dump all related hardware state to the trace output
- * \param[in]  context	String to identify context in output.
- * \return	None
+/*! @brief Dump all related hardware state to the trace output
+ * @param[in]  context	String to identify context in output.
+ * @return	None
  */
 void ia_css_debug_dump_debug_info(
 	const char	*context);
@@ -207,36 +212,36 @@ void ia_css_debug_print_sp_debug_state(
 	const struct sh_css_sp_debug_state *state);
 #endif
 
-/*! \brief Dump all related binary info data
- * \param[in]  bi	Binary info struct.
- * \return	None
+/*! @brief Dump all related binary info data
+ * @param[in]  bi	Binary info struct.
+ * @return	None
  */
 void ia_css_debug_binary_print(
 	const struct ia_css_binary *bi);
 
 void ia_css_debug_sp_dump_mipi_fifo_high_water(void);
 
-/*! \brief Dump isp gdc fifo state to the trace output
+/*! @brief Dump isp gdc fifo state to the trace output
  * Dumps the isp gdc fifo state to tracing output.
- * \return	None
+ * @return	None
  */
 void ia_css_debug_dump_isp_gdc_fifo_state(void);
 
-/*! \brief Dump dma isp fifo state
+/*! @brief Dump dma isp fifo state
  * Dumps the dma isp fifo state to tracing output.
- * \return	None
+ * @return	None
  */
 void ia_css_debug_dump_dma_isp_fifo_state(void);
 
-/*! \brief Dump dma sp fifo state
+/*! @brief Dump dma sp fifo state
  * Dumps the dma sp fifo state to tracing output.
- * \return	None
+ * @return	None
  */
 void ia_css_debug_dump_dma_sp_fifo_state(void);
 
 /*! \brief Dump pif A isp fifo state
  * Dumps the primary input formatter state to tracing output.
- * \return	None
+ * @return	None
  */
 void ia_css_debug_dump_pif_a_isp_fifo_state(void);
 
@@ -246,71 +251,71 @@ void ia_css_debug_dump_pif_a_isp_fifo_state(void);
  */
 void ia_css_debug_dump_pif_b_isp_fifo_state(void);
 
-/*! \brief Dump stream-to-memory sp fifo state
+/*! @brief Dump stream-to-memory sp fifo state
  * Dumps the stream-to-memory block state to tracing output.
- * \return	None
+ * @return	None
  */
 void ia_css_debug_dump_str2mem_sp_fifo_state(void);
 
-/*! \brief Dump isp sp fifo state
+/*! @brief Dump isp sp fifo state
  * Dumps the isp sp fifo state to tracing output.
- * \return	None
+ * @return	None
  */
 void ia_css_debug_dump_isp_sp_fifo_state(void);
 
-/*! \brief Dump all fifo state info to the output
+/*! @brief Dump all fifo state info to the output
  * Dumps all fifo state to tracing output.
- * \return	None
+ * @return	None
  */
 void ia_css_debug_dump_all_fifo_state(void);
 
-/*! \brief Dump the rx state to the output
+/*! @brief Dump the rx state to the output
  * Dumps the rx state to tracing output.
- * \return	None
+ * @return	None
  */
 void ia_css_debug_dump_rx_state(void);
 
-/*! \brief Dump the input system state to the output
+/*! @brief Dump the input system state to the output
  * Dumps the input system state to tracing output.
- * \return	None
+ * @return	None
  */
 void ia_css_debug_dump_isys_state(void);
 
-/*! \brief Dump the frame info to the trace output
+/*! @brief Dump the frame info to the trace output
  * Dumps the frame info to tracing output.
- * \param[in]	frame		pointer to struct ia_css_frame
- * \param[in]	descr		description output along with the frame info
- * \return	None
+ * @param[in]	frame		pointer to struct ia_css_frame
+ * @param[in]	descr		description output along with the frame info
+ * @return	None
  */
 void ia_css_debug_frame_print(
 	const struct ia_css_frame	*frame,
 	const char	*descr);
 
-/*! \brief Function to enable sp sleep mode.
+/*! @brief Function to enable sp sleep mode.
  * Function that enables sp sleep mode
- * \param[in]	mode		indicates when to put sp to sleep
- * \return	None
+ * @param[in]	mode		indicates when to put sp to sleep
+ * @return	None
  */
 void ia_css_debug_enable_sp_sleep_mode(enum ia_css_sp_sleep_mode mode);
 
-/*! \brief Function to wake up sp when in sleep mode.
+/*! @brief Function to wake up sp when in sleep mode.
  * After sp has been put to sleep, use this function to let it continue
  * to run again.
- * \return	None
+ * @return	None
  */
 void ia_css_debug_wake_up_sp(void);
 
-/*! \brief Function to dump isp parameters.
+/*! @brief Function to dump isp parameters.
  * Dump isp parameters to tracing output
- * \param[in]	stream		pointer to ia_css_stream struct
- * \param[in]	enable		flag indicating which parameters to dump.
- * \return	None
+ * @param[in]	stream		pointer to ia_css_stream struct
+ * @param[in]	enable		flag indicating which parameters to dump.
+ * @return	None
  */
 void ia_css_debug_dump_isp_params(struct ia_css_stream *stream, unsigned int enable);
 
-/*! \brief Function to dump some sp performance counters.
+/*! @brief Function to dump some sp performance counters.
  * Dump sp performance counters, currently input system errors.
- * \return	None
+ * @return	None
  */
 void ia_css_debug_dump_perf_counters(void);
 
@@ -324,80 +329,80 @@ void ia_css_debug_dump_isp_binary(void);
 
 void sh_css_dump_sp_raw_copy_linecount(bool reduced);
 
-/*! \brief Dump the resolution info to the trace output
+/*! @brief Dump the resolution info to the trace output
  * Dumps the resolution info to the trace output.
- * \param[in]	res	pointer to struct ia_css_resolution
- * \param[in]	label	description of resolution output
- * \return	None
+ * @param[in]	res	pointer to struct ia_css_resolution
+ * @param[in]	label	description of resolution output
+ * @return	None
  */
 void ia_css_debug_dump_resolution(
 	const struct ia_css_resolution *res,
 	const char *label);
 
-/*! \brief Dump the frame info to the trace output
+/*! @brief Dump the frame info to the trace output
  * Dumps the frame info to the trace output.
- * \param[in]	info	pointer to struct ia_css_frame_info
- * \param[in]	label	description of frame_info output
- * \return	None
+ * @param[in]	info	pointer to struct ia_css_frame_info
+ * @param[in]	label	description of frame_info output
+ * @return	None
  */
 void ia_css_debug_dump_frame_info(
 	const struct ia_css_frame_info *info,
 	const char *label);
 
-/*! \brief Dump the capture config info to the trace output
+/*! @brief Dump the capture config info to the trace output
  * Dumps the capture config info to the trace output.
- * \param[in]	config	pointer to struct ia_css_capture_config
- * \return	None
+ * @param[in]	config	pointer to struct ia_css_capture_config
+ * @return	None
  */
 void ia_css_debug_dump_capture_config(
 	const struct ia_css_capture_config *config);
 
-/*! \brief Dump the pipe extra config info to the trace output
+/*! @brief Dump the pipe extra config info to the trace output
  * Dumps the pipe extra config info to the trace output.
- * \param[in]	extra_config	pointer to struct ia_css_pipe_extra_config
- * \return	None
+ * @param[in]	extra_config	pointer to struct ia_css_pipe_extra_config
+ * @return	None
  */
 void ia_css_debug_dump_pipe_extra_config(
 	const struct ia_css_pipe_extra_config *extra_config);
 
-/*! \brief Dump the pipe config info to the trace output
+/*! @brief Dump the pipe config info to the trace output
  * Dumps the pipe config info to the trace output.
- * \param[in]	config	pointer to struct ia_css_pipe_config
- * \return	None
+ * @param[in]	config	pointer to struct ia_css_pipe_config
+ * @return	None
  */
 void ia_css_debug_dump_pipe_config(
 	const struct ia_css_pipe_config *config);
 
 
-/*! \brief Dump the stream config source info to the trace output
+/*! @brief Dump the stream config source info to the trace output
  * Dumps the stream config source info to the trace output.
- * \param[in]	config	pointer to struct ia_css_stream_config
- * \return	None
+ * @param[in]	config	pointer to struct ia_css_stream_config
+ * @return	None
  */
 void ia_css_debug_dump_stream_config_source(
 	const struct ia_css_stream_config *config);
 
-/*! \brief Dump the mipi buffer config info to the trace output
+/*! @brief Dump the mipi buffer config info to the trace output
  * Dumps the mipi buffer config info to the trace output.
- * \param[in]	config	pointer to struct ia_css_mipi_buffer_config
- * \return	None
+ * @param[in]	config	pointer to struct ia_css_mipi_buffer_config
+ * @return	None
  */
 void ia_css_debug_dump_mipi_buffer_config(
 	const struct ia_css_mipi_buffer_config *config);
 
-/*! \brief Dump the metadata config info to the trace output
+/*! @brief Dump the metadata config info to the trace output
  * Dumps the metadata config info to the trace output.
- * \param[in]	config	pointer to struct ia_css_metadata_config
- * \return	None
+ * @param[in]	config	pointer to struct ia_css_metadata_config
+ * @return	None
  */
 void ia_css_debug_dump_metadata_config(
 	const struct ia_css_metadata_config *config);
 
-/*! \brief Dump the stream config info to the trace output
+/*! @brief Dump the stream config info to the trace output
  * Dumps the stream config info to the trace output.
- * \param[in]	config		pointer to struct ia_css_stream_config
- * \param[in]	num_pipes	number of pipes for the stream
- * \return	None
+ * @param[in]	config		pointer to struct ia_css_stream_config
+ * @param[in]	num_pipes	number of pipes for the stream
+ * @return	None
  */
 void ia_css_debug_dump_stream_config(
 	const struct ia_css_stream_config *config,
@@ -445,6 +450,7 @@ bool ia_css_debug_mode_disable_dma_channel(
  *				- "0" indicates the writing request.
  *				- "1" indicates the reading request.
  *
+ * @return
  *	- true, if it is successful.
  *	- false, otherwise.
  */
@@ -453,4 +459,14 @@ bool ia_css_debug_mode_enable_dma_channel(
 	int channel_id,
 	int request_type);
 
+/**
+ * @brief Dump tracer data.
+ * [Currently support is only for SKC]
+ *
+ * @return
+ *	- none.
+ */
+void ia_css_debug_dump_trace(void);
+
+
 #endif /* _IA_CSS_DEBUG_H_ */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/debug/src/ia_css_debug.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/debug/src/ia_css_debug.c
index 36c321b..6141a41 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/debug/src/ia_css_debug.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/debug/src/ia_css_debug.c
@@ -77,6 +77,10 @@
 #endif
 #include "sh_css_sp.h"		/* sh_css_sp_get_debug_state() */
 
+#include "css_trace.h"      /* tracer */
+
+#include "device_access.h"	/* for ia_css_device_load_uint32 */
+
 #if !defined(IS_ISP_2500_SYSTEM)
 /* Include all kernel host interfaces for ISP1 */
 #include "anr/anr_1.0/ia_css_anr.host.h"
@@ -244,6 +248,12 @@ void ia_css_debug_set_dtrace_level(const unsigned int trace_level)
 	ia_css_debug_trace_level = trace_level;
 	return;
 }
+
+unsigned int ia_css_debug_get_dtrace_level(void)
+{
+	return ia_css_debug_trace_level;
+}
+
 static const char *debug_stream_format2str(const enum ia_css_stream_format stream_format)
 {
 	switch (stream_format) {
@@ -539,6 +549,7 @@ void ia_css_debug_dump_sp_state(void)
 				    "i-cache master stalled",
 				    stall.icache_master);
 	}
+	ia_css_debug_dump_trace();
 	return;
 }
 
@@ -3296,6 +3307,100 @@ ia_css_debug_dump_stream_config(
 	ia_css_debug_dump_metadata_config(&config->metadata_config);
 }
 
+/*
+    Trace support.
+
+    This tracer is using a buffer to trace the flow of the FW and dump misc values (see below for details).
+    Currently, support is only for SKC.
+    To enable support for other platforms:
+     - Allocate a buffer for tracing in DMEM. The longer the better.
+     - Use the DBG_init routine in sp.hive.c to initiatilize the tracer with the address and size selected.
+     - Add trace points in the SP code wherever needed.
+     - Enable the dump below with the required address and required adjustments.
+	   Dump is called at the end of ia_css_debug_dump_sp_state().
+*/
+
+/*
+ dump_trace() : dump the trace points from DMEM2.
+ for every trace point, the following are printed: index, major:minor and the 16-bit attached value.
+ The routine looks for the first 0, and then prints from it cyclically.
+ Data forma in DMEM2:
+  first 4 DWORDS: header
+   DWORD 0: data description
+    byte 0: version
+    byte 1: number of threads (for future use)
+    byte 2+3: number ot TPs
+   DWORD 1: command byte + data (for future use)
+    byte 0: command
+    byte 1-3: command signature
+   DWORD 2-3: additional data (for future use)
+  Following data is 4-byte oriented:
+    byte 0:   major
+	byte 1:   minor
+	byte 2-3: data
+*/
+
+#define TRACE_MAX_SIZE     4096			/* max points - sanity check */
+
+static void debug_dump_one_trace(const char *text, uint32_t start_addr)
+{
+#if !defined(HAS_TRACER_V1)
+	(void) text;
+	(void) start_addr;
+#else
+	uint32_t tmp;
+	int i, j, point_num, limit = -1;
+	/* using a static buffer here as the driver has issues allocating memory */
+	static uint32_t trace_read_buf[TRACE_MAX_SIZE];
+	/* read the header and parse it */
+	tmp = ia_css_device_load_uint32(start_addr);
+	point_num = (tmp >> 16) & 0xFFFF;
+	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE, "~~~ Tracer %s ver %d %d points\n", text, tmp & 0xFF, point_num);
+	if ((tmp & 0xFF) != 1) {
+		ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE, "\t\tUnknown version - exiting\n");
+		return;
+	}
+	if (point_num > TRACE_MAX_SIZE) {
+		ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE, "\t\tToo many points - exiting\n");
+		return;
+	}
+	/* copy the TPs and find the first 0 */
+	for (i = 0; i < point_num; i++) {
+		trace_read_buf[i] = ia_css_device_load_uint32(start_addr + sizeof(struct trace_header_t) + i * sizeof(struct trace_item_t));
+		if ((limit == (-1)) && (trace_read_buf[i] == 0))
+			limit = i;
+	}
+	/* two 0s in the beginning: empty buffer */
+	if ((trace_read_buf[0] == 0) && (trace_read_buf[1] == 0)) {
+		ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE, "\t\tEmpty tracer - exiting\n");
+		return;
+	}
+	/* no overrun: start from 0 */
+	if ((limit == point_num-1) ||         /* first 0 is at the end - border case */
+	    (trace_read_buf[limit+1] == 0))   /* did not make a full cycle after the memset */
+		limit = 0;
+	/* overrun: limit is the first non-zero after the first zero */
+	else
+		limit++;
+	/* print the TPs */
+	for (i = 0; i < point_num; i++) {
+		j = (limit + i) % point_num;
+		if (trace_read_buf[j])
+			ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE, "\t\t%d %d:%d %d\n",
+								j,
+								trace_read_buf[j] & 0xFF,
+								(trace_read_buf[j] >> 8) & 0xFF,
+								(trace_read_buf[j] >> 16) & 0xFFFF);
+	}
+#endif /* IS_ISP_2500_SYSTEM */
+}
+
+void ia_css_debug_dump_trace(void)
+{
+	debug_dump_one_trace("SP0", TRACE_BUFF_ADDR);
+	debug_dump_one_trace("SP1", TRACE_BUFF_ADDR + SP1_TRACER_OFFSET);
+}
+
 #if defined(HRT_SCHED) || defined(SH_CSS_DEBUG_SPMEM_DUMP_SUPPORT)
 #include "spmem_dump.c"
 #endif
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/event/src/event.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/event/src/event.c
index 01da5df..6948a63 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/event/src/event.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/event/src/event.c
@@ -106,6 +106,8 @@ void ia_css_event_decode(
 
 	case SH_CSS_SP_EVENT_ACC_STAGE_COMPLETE:
 	case SH_CSS_SP_EVENT_FRAME_TAGGED:
+	case SH_CSS_SP_EVENT_FW_WARNING:
+	case SH_CSS_SP_EVENT_FW_ASSERT:
 		payload[3] = (event >> 24) & 0xff;
 		break;
 	default:
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/frame/src/frame.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/frame/src/frame.c
index 91d4406..43f2c59 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/frame/src/frame.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/frame/src/frame.c
@@ -299,16 +299,14 @@ enum ia_css_err ia_css_frame_allocate_contiguous_from_info(
 
 void ia_css_frame_free(struct ia_css_frame *frame)
 {
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE,
-		"ia_css_frame_free() enter: frame=%p\n", frame);
+	IA_CSS_ENTER_PRIVATE("frame = %p", frame);
 
 	if (frame != NULL) {
 		mmgr_free(frame->data);
 		sh_css_free(frame);
 	}
 
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE,
-		"ia_css_frame_free() leave: return_void\n");
+	IA_CSS_LEAVE_PRIVATE("void");
 }
 
 /**************************************************************************
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/isys/interface/ia_css_isys.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/isys/interface/ia_css_isys.h
index 3b8f4b3..b8972c9 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/isys/interface/ia_css_isys.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/isys/interface/ia_css_isys.h
@@ -53,14 +53,14 @@ mipi_port_ID_t ia_css_isys_port_to_mipi_port(
  * only started when all registered streams are configured.
  *
  * @param[in]	port		CSI port
- * @param[in]	stream_handle	Stream handle generated with ia_css_isys_generate_stream_handle()
+ * @param[in]	isys_stream_id	Stream handle generated with ia_css_isys_generate_stream_id()
  *				Must be lower than SH_CSS_MAX_ISYS_CHANNEL_NODES
  * @return			IA_CSS_SUCCESS if successful, IA_CSS_ERR_INTERNAL_ERROR if
  *				there is already a stream registered with the same handle
  */
 enum ia_css_err ia_css_isys_csi_rx_register_stream(
 	enum ia_css_csi2_port port,
-	uint32_t stream_handle);
+	uint32_t isys_stream_id);
 
 /**
  * @brief Unregister one (virtual) stream. This is used to track when all
@@ -68,14 +68,14 @@ enum ia_css_err ia_css_isys_csi_rx_register_stream(
  * only started when all registered streams are configured.
  *
  * @param[in]	port		CSI port
- * @param[in]	stream_handle	Stream handle generated with ia_css_isys_generate_stream_handle()
+ * @param[in]	isys_stream_id	Stream handle generated with ia_css_isys_generate_stream_id()
  *				Must be lower than SH_CSS_MAX_ISYS_CHANNEL_NODES
  * @return			IA_CSS_SUCCESS if successful, IA_CSS_ERR_INTERNAL_ERROR if
  *				there is no stream registered with that handle
  */
 enum ia_css_err ia_css_isys_csi_rx_unregister_stream(
 	enum ia_css_csi2_port port,
-	uint32_t stream_handle);
+	uint32_t isys_stream_id);
 
 enum ia_css_err ia_css_isys_convert_compressed_format(
 		struct ia_css_csi2_compression *comp,
@@ -125,7 +125,8 @@ enum ia_css_err ia_css_isys_convert_stream_format_to_mipi_format(
  */
 extern ia_css_isys_error_t ia_css_isys_stream_create(
 		ia_css_isys_descr_t	*isys_stream_descr,
-		ia_css_isys_stream_h	isys_stream);
+		ia_css_isys_stream_h	isys_stream,
+		uint32_t isys_stream_id);
 
 extern void ia_css_isys_stream_destroy(
 		ia_css_isys_stream_h	isys_stream);
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/isys/interface/ia_css_isys_comm.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/isys/interface/ia_css_isys_comm.h
index 30b1ba4..60bdba8 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/isys/interface/ia_css_isys_comm.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/isys/interface/ia_css_isys_comm.h
@@ -49,7 +49,7 @@ typedef virtual_input_system_stream_cfg_t	ia_css_isys_stream_cfg_t;
  * */
 typedef bool ia_css_isys_error_t;
 
-static inline uint32_t ia_css_isys_generate_stream_handle(
+static inline uint32_t ia_css_isys_generate_stream_id(
 	uint32_t	sp_thread_id,
 	uint32_t	stream_id)
 {
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/isys/src/csi_rx_rmgr.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/isys/src/csi_rx_rmgr.c
index 1215f24..604ce1c 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/isys/src/csi_rx_rmgr.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/isys/src/csi_rx_rmgr.c
@@ -133,16 +133,16 @@ void ia_css_isys_csi_rx_lut_rmgr_release(
 
 enum ia_css_err ia_css_isys_csi_rx_register_stream(
 	enum ia_css_csi2_port port,
-	uint32_t stream_handle)
+	uint32_t isys_stream_id)
 {
 	enum ia_css_err retval = IA_CSS_ERR_INTERNAL_ERROR;
 
 	if ((port < N_INPUT_SYSTEM_CSI_PORT) &&
-	    (stream_handle < SH_CSS_MAX_ISYS_CHANNEL_NODES)) {
+	    (isys_stream_id < SH_CSS_MAX_ISYS_CHANNEL_NODES)) {
 		struct sh_css_sp_pipeline_io_status *pipe_io_status;
 		pipe_io_status = ia_css_pipeline_get_pipe_io_status();
-		if (bitop_getbit(pipe_io_status->active[port], stream_handle) == 0) {
-			bitop_setbit(pipe_io_status->active[port], stream_handle);
+		if (bitop_getbit(pipe_io_status->active[port], isys_stream_id) == 0) {
+			bitop_setbit(pipe_io_status->active[port], isys_stream_id);
 			pipe_io_status->running[port] = 0;
 			retval = IA_CSS_SUCCESS;
 		}
@@ -152,16 +152,16 @@ enum ia_css_err ia_css_isys_csi_rx_register_stream(
 
 enum ia_css_err ia_css_isys_csi_rx_unregister_stream(
 	enum ia_css_csi2_port port,
-	uint32_t stream_handle)
+	uint32_t isys_stream_id)
 {
 	enum ia_css_err retval = IA_CSS_ERR_INTERNAL_ERROR;
 
 	if ((port < N_INPUT_SYSTEM_CSI_PORT) &&
-	    (stream_handle < SH_CSS_MAX_ISYS_CHANNEL_NODES)) {
+	    (isys_stream_id < SH_CSS_MAX_ISYS_CHANNEL_NODES)) {
 		struct sh_css_sp_pipeline_io_status *pipe_io_status;
 		pipe_io_status = ia_css_pipeline_get_pipe_io_status();
-		if (bitop_getbit(pipe_io_status->active[port], stream_handle) == 1) {
-			bitop_clearbit(pipe_io_status->active[port], stream_handle);
+		if (bitop_getbit(pipe_io_status->active[port], isys_stream_id) == 1) {
+			bitop_clearbit(pipe_io_status->active[port], isys_stream_id);
 			retval = IA_CSS_SUCCESS;
 		}
 	}
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/isys/src/isys_init.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/isys/src/isys_init.c
index 760769e..7633bf5 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/isys/src/isys_init.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/isys/src/isys_init.c
@@ -25,6 +25,10 @@
 #include "ia_css_isys.h"
 #include "platform_support.h"
 
+#ifdef USE_INPUT_SYSTEM_VERSION_2401
+#include "isys_dma.h"		/* isys2401_dma_set_max_burst_size() */
+#endif
+
 #if defined(USE_INPUT_SYSTEM_VERSION_2)
 input_system_error_t ia_css_isys_init(void)
 {
@@ -98,6 +102,9 @@ input_system_error_t ia_css_isys_init(void)
 	ia_css_isys_dma_channel_rmgr_init();
 	ia_css_isys_stream2mmio_sid_rmgr_init();
 
+	isys2401_dma_set_max_burst_size(ISYS2401_DMA0_ID,
+		1 /* Non Burst DMA transactions */);
+
 	return error;
 }
 #endif
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/isys/src/rx.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/isys/src/rx.c
index 66c723a..13e9108 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/isys/src/rx.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/isys/src/rx.c
@@ -484,13 +484,13 @@ void ia_css_isys_rx_configure(const rx_cfg_t *config,
 	bool port_enabled[N_MIPI_PORT_ID];
 	bool any_port_enabled = false;
 	mipi_port_ID_t port;
-    
-    if ((config == NULL)
-            || (config->mode >= N_RX_MODE)
-            || (config->port >= N_MIPI_PORT_ID)) {
-            assert(0);
-            return;
-    }
+
+	if ((config == NULL)
+		|| (config->mode >= N_RX_MODE)
+		|| (config->port >= N_MIPI_PORT_ID)) {
+		assert(0);
+		return;
+	}
 	for (port = (mipi_port_ID_t) 0; port < N_MIPI_PORT_ID; port++) {
 		if (is_receiver_port_enabled(RX0_ID, port))
 			any_port_enabled = true;
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/isys/src/virtual_isys.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/isys/src/virtual_isys.c
index 1b57e4f..a116ff6 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/isys/src/virtual_isys.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/isys/src/virtual_isys.c
@@ -164,11 +164,13 @@ static int32_t calculate_stride(
  **************************************************/
 ia_css_isys_error_t ia_css_isys_stream_create(
 	ia_css_isys_descr_t	*isys_stream_descr,
-	ia_css_isys_stream_h	isys_stream)
+	ia_css_isys_stream_h	isys_stream,
+	uint32_t isys_stream_id)
 {
 	ia_css_isys_error_t rc;
 
-	if (isys_stream_descr == NULL || isys_stream == NULL)
+	if (isys_stream_descr == NULL || isys_stream == NULL ||
+		isys_stream_id >= SH_CSS_MAX_ISYS_CHANNEL_NODES)
 		return	false;
 
 	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE,
@@ -177,6 +179,7 @@ ia_css_isys_error_t ia_css_isys_stream_create(
 	/*Reset isys_stream to 0*/
 	memset(isys_stream, 0, sizeof(*isys_stream));
 	isys_stream->enable_metadata = isys_stream_descr->metadata.enable;
+	isys_stream->id = isys_stream_id;
 
 	isys_stream->linked_isys_stream_id = isys_stream_descr->linked_isys_stream_id;
 	rc = create_input_system_input_port(isys_stream_descr, &(isys_stream->input_port));
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/pipeline/src/pipeline.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/pipeline/src/pipeline.c
index 14811aa..34f9af7 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/pipeline/src/pipeline.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/pipeline/src/pipeline.c
@@ -75,29 +75,34 @@ enum ia_css_err ia_css_pipeline_create(
 	unsigned int dvs_frame_delay)
 {
 	assert(pipeline != NULL);
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE,
-		"ia_css_pipeline_create() enter:\n");
+	IA_CSS_ENTER_PRIVATE("pipeline = %p, pipe_id = %d, pipe_num = %d, dvs_frame_delay = %d",
+		     pipeline, pipe_id, pipe_num, dvs_frame_delay);
+	if (pipeline == NULL) {
+		IA_CSS_LEAVE_ERR_PRIVATE(IA_CSS_ERR_INVALID_ARGUMENTS);
+		return IA_CSS_ERR_INVALID_ARGUMENTS;
+	}
 
 	pipeline_init_defaults(pipeline, pipe_id, pipe_num, dvs_frame_delay);
 
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE,
-		"ia_css_pipeline_create() exit: pipe_num=%d\n",
-		pipeline->pipe_num);
-
+	IA_CSS_LEAVE_ERR_PRIVATE(IA_CSS_SUCCESS);
 	return IA_CSS_SUCCESS;
 }
 
 void ia_css_pipeline_map(unsigned int pipe_num, bool map)
 {
 	assert(pipe_num < IA_CSS_PIPELINE_NUM_MAX);
+	IA_CSS_ENTER_PRIVATE("pipe_num = %d, map = %d", pipe_num, map);
 
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE,
-		"ia_css_pipeline_map() enter: pipe_num=%d\n", pipe_num);
-
+	if (pipe_num >= IA_CSS_PIPELINE_NUM_MAX) {
+		IA_CSS_ERROR("Invalid pipe number");
+		IA_CSS_LEAVE_PRIVATE("void");
+		return;
+	}
 	if (map)
 		pipeline_map_num_to_sp_thread(pipe_num);
 	else
 		pipeline_unmap_num_to_sp_thread(pipe_num);
+	IA_CSS_LEAVE_PRIVATE("void");
 }
 
 /** @brief destroy a pipeline
@@ -109,16 +114,20 @@ void ia_css_pipeline_map(unsigned int pipe_num, bool map)
 void ia_css_pipeline_destroy(struct ia_css_pipeline *pipeline)
 {
 	assert(pipeline != NULL);
+	IA_CSS_ENTER_PRIVATE("pipeline = %p", pipeline);
 
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE,
-		"ia_css_pipeline_destroy() enter: pipe_num=%d\n",
-		pipeline->pipe_num);
+	if (pipeline == NULL) {
+		IA_CSS_ERROR("NULL input parameter");
+		IA_CSS_LEAVE_PRIVATE("void");
+		return;
+	}
+
+	IA_CSS_LOG("pipe_num = %d", pipeline->pipe_num);
 
 	/* Free the pipeline number */
 	ia_css_pipeline_clean(pipeline);
 
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE,
-		"ia_css_pipeline_destroy() exit:\n");
+	IA_CSS_LEAVE_PRIVATE("void");
 }
 
 /* Run a pipeline and wait till it completes. */
@@ -163,19 +172,22 @@ void ia_css_pipeline_start(enum ia_css_pipe_id pipe_id,
  */
 bool ia_css_pipeline_get_sp_thread_id(unsigned int key, unsigned int *val)
 {
-	assert(key < IA_CSS_PIPELINE_NUM_MAX);
-	assert(key < IA_CSS_PIPE_ID_NUM);
-	assert(val != NULL);
 
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE,
-	      "ia_css_pipeline_get_sp_thread_id() enter: key=%d\n",
-	      key);
+	IA_CSS_ENTER("key=%d, val=%p", key, val);
+
+	if ((val == NULL) || (key >= IA_CSS_PIPELINE_NUM_MAX) || (key >= IA_CSS_PIPE_ID_NUM)) {
+		IA_CSS_LEAVE("return value = false");
+		return false;
+	}
+
 	*val = pipeline_num_to_sp_thread_map[key];
 
-	assert(*val != (unsigned)PIPELINE_NUM_UNMAPPED);
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE,
-	      "ia_css_pipeline_get_sp_thread_id() leave: return_val=%d\n",
-	      *val);
+	if (*val == (unsigned)PIPELINE_NUM_UNMAPPED) {
+		IA_CSS_LOG("unmapped pipeline number");
+		IA_CSS_LEAVE("return value = false");
+		return false;
+	}
+	IA_CSS_LEAVE("return value = true");
 	return true;
 }
 
@@ -233,9 +245,14 @@ void ia_css_pipeline_clean(struct ia_css_pipeline *pipeline)
 	struct ia_css_pipeline_stage *s;
 
 	assert(pipeline != NULL);
+	IA_CSS_ENTER_PRIVATE("pipeline = %p", pipeline);
+
+	if (pipeline == NULL) {
+		IA_CSS_ERROR("NULL input parameter");
+		IA_CSS_LEAVE_PRIVATE("void");
+		return;
+	}
 	s = pipeline->stages;
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE,
-		"ia_css_pipeline_clean() enter:\n");
 
 	while (s) {
 		struct ia_css_pipeline_stage *next = s->next;
@@ -243,6 +260,8 @@ void ia_css_pipeline_clean(struct ia_css_pipeline *pipeline)
 		s = next;
 	}
 	pipeline_init_defaults(pipeline, pipeline->pipe_id, pipeline->pipe_num, pipeline->dvs_frame_delay);
+
+	IA_CSS_LEAVE_PRIVATE("void");
 }
 
 /** @brief Add a stage to pipeline.
@@ -380,9 +399,11 @@ enum ia_css_err ia_css_pipeline_get_fw_from_stage(struct ia_css_pipeline *pipeli
 			  uint32_t *fw_handle)
 {
 	struct ia_css_pipeline_stage *s;
-	assert(pipeline != NULL);
-	assert(fw_handle != NULL);
+
 	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE,"%s() \n",__func__);
+	if ((pipeline == NULL) || (fw_handle == NULL))
+		return IA_CSS_ERR_INVALID_ARGUMENTS;
+
 	for (s = pipeline->stages; s; s = s->next) {
 		if((s->stage_num == stage_num) && (s->firmware)) {
 			*fw_handle = s->firmware->handle;
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/rmgr/src/rmgr_vbuf.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/rmgr/src/rmgr_vbuf.c
index 1870766..c4caed5 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/rmgr/src/rmgr_vbuf.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/runtime/rmgr/src/rmgr_vbuf.c
@@ -88,8 +88,10 @@ void ia_css_rmgr_refcount_retain_vbuf(struct ia_css_rmgr_vbuf_handle **handle)
 {
 	int i;
 	struct ia_css_rmgr_vbuf_handle *h;
-	assert(handle != NULL);
-	assert(*handle != NULL);
+	if ((handle == NULL) || (*handle == NULL)) {
+		IA_CSS_LOG("Invalid inputs");
+		return;
+	}
 	/* new vbuf to count on */
 	if ((*handle)->count == 0) {
 		h = *handle;
@@ -284,9 +286,10 @@ void ia_css_rmgr_acq_vbuf(struct ia_css_rmgr_vbuf_pool *pool,
 	struct ia_css_rmgr_vbuf_handle h;
 #endif /* __KLOCWORK__ */
 
-	assert(pool != NULL);
-	assert(handle != NULL);
-	assert(*handle != NULL);
+	if ((pool == NULL) || (handle == NULL) || (*handle == NULL)) {
+		IA_CSS_LOG("Invalid inputs");
+		return;
+	}
 
 	if (pool->copy_on_write) {
 		/* only one reference, reuse (no new retain) */
@@ -329,9 +332,10 @@ void ia_css_rmgr_acq_vbuf(struct ia_css_rmgr_vbuf_pool *pool,
 void ia_css_rmgr_rel_vbuf(struct ia_css_rmgr_vbuf_pool *pool,
 			  struct ia_css_rmgr_vbuf_handle **handle)
 {
-	assert(pool != NULL);
-	assert(handle != NULL);
-	assert(*handle != NULL);
+	if ((pool == NULL) || (handle == NULL) || (*handle == NULL)) {
+		IA_CSS_LOG("Invalid inputs");
+		return;
+	}
 	/* release the handle */
 	if ((*handle)->count == 1) {
 		if (!pool->recycle) {
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css.c
index 7a9a587..d521fb2 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css.c
@@ -339,10 +339,22 @@ static unsigned int get_crop_lines_for_bayer_order(const struct ia_css_stream_co
 static unsigned int get_crop_columns_for_bayer_order(const struct ia_css_stream_config *config);
 #endif
 
+#if defined(HAS_SEC_SP)
+static enum ia_css_err
+sh_css_start_sp1(void);
+
+static enum ia_css_err
+sh_css_stop_sp1(void);
+#endif
+
 static void
 sh_css_pipe_free_shading_table(struct ia_css_pipe *pipe)
 {
 	assert(pipe != NULL);
+	if (pipe == NULL) {
+		IA_CSS_ERROR("NULL input parameter");
+		return;
+	}
 
 	if (pipe->shading_table)
 		ia_css_shading_table_free(pipe->shading_table);
@@ -415,7 +427,8 @@ verify_copy_out_frame_format(struct ia_css_pipe *pipe)
 		break;
 	case IA_CSS_STREAM_FORMAT_RGB_666:
 	case IA_CSS_STREAM_FORMAT_RGB_888:
-		found = (out_fmt == IA_CSS_FRAME_FORMAT_RGBA888);
+		found = (out_fmt == IA_CSS_FRAME_FORMAT_RGBA888 ||
+			 out_fmt == IA_CSS_FRAME_FORMAT_YUV420);
 		break;
 	case IA_CSS_STREAM_FORMAT_RAW_6:
 	case IA_CSS_STREAM_FORMAT_RAW_7:
@@ -976,6 +989,7 @@ sh_css_config_input_network(struct ia_css_stream *stream)
 	struct ia_css_pipe *pipe = NULL;
 	struct ia_css_binary *binary = NULL;
 	int i;
+	uint32_t isys_stream_id;
 
 	assert(stream != NULL);
 	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE,
@@ -1043,10 +1057,13 @@ sh_css_config_input_network(struct ia_css_stream *stream)
 		if (rc != true)
 			return IA_CSS_ERR_INTERNAL_ERROR;
 
+		isys_stream_id = ia_css_isys_generate_stream_id(sp_thread_id, i);
+
 		/* create the virtual Input System (2401) */
 		rc =  ia_css_isys_stream_create(
 				&(isys_stream_descr),
-				&(sp_pipeline_input_terminal->context.virtual_input_system_stream[i]));
+				&(sp_pipeline_input_terminal->context.virtual_input_system_stream[i]),
+				isys_stream_id);
 		if (rc != true)
 			return IA_CSS_ERR_INTERNAL_ERROR;
 
@@ -1150,8 +1167,8 @@ static enum ia_css_err stream_csi_rx_helper(
 	stream_id = 0;
 	do {
 		if (stream->config.isys_config[stream_id].valid) {
-			retval = func(stream->config.source.port.port,
-				      ia_css_isys_generate_stream_handle(sp_thread_id, stream_id));
+			uint32_t isys_stream_id = ia_css_isys_generate_stream_id(sp_thread_id, stream_id);
+			retval = func(stream->config.source.port.port, isys_stream_id);
 		}
 		stream_id++;
 	} while ((retval == IA_CSS_SUCCESS) &&
@@ -1929,9 +1946,10 @@ sh_css_calloc(size_t N, size_t size)
 void
 sh_css_free(void *ptr)
 {
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE, "sh_css_free() enter:\n");
+	IA_CSS_ENTER_PRIVATE("ptr = %p", ptr);
 	if (ptr && my_css.free)
 		my_css.free(ptr);
+	IA_CSS_LEAVE_PRIVATE("void");
 }
 
 /* For Acceleration API: Flush FW (shared buffer pointer) arguments */
@@ -1957,9 +1975,12 @@ map_sp_threads(struct ia_css_stream *stream, bool map)
 	enum ia_css_pipe_id pipe_id;
 
 	assert(stream != NULL);
+	IA_CSS_ENTER_PRIVATE("stream = %p, map = %p", stream, map);
 
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE,
-		"map_sp_threads() enter: map = %d\n", map);
+	if (stream == NULL) {
+		IA_CSS_LEAVE_ERR_PRIVATE(IA_CSS_ERR_INVALID_ARGUMENTS);
+		return IA_CSS_ERR_INVALID_ARGUMENTS;
+	}
 
 	main_pipe	= stream->last_pipe;
 	pipe_id	= main_pipe->mode;
@@ -1997,14 +2018,13 @@ map_sp_threads(struct ia_css_stream *stream, bool map)
 		ia_css_pipeline_map(copy_pipe->pipe_num, map);
 	}
 	/* DH regular multi pipe - not continuous mode: map the next pipes too */
-	if ((!stream->cont_capt) &&
-		((pipe_id == IA_CSS_PIPE_ID_VIDEO) || (pipe_id == IA_CSS_PIPE_ID_PREVIEW)) &&
-		(stream->num_pipes > 1) && (!copy_pipe) && (!capture_pipe)) {
-			int i;
-			for (i = 1; i < stream->num_pipes; i++)
-				ia_css_pipeline_map(stream->pipes[i]->pipe_num, map);
+	if ((!stream->config.continuous) && stream->num_pipes > 1) {
+		int i;
+		for (i = 1; i < stream->num_pipes; i++)
+			ia_css_pipeline_map(stream->pipes[i]->pipe_num, map);
 	}
 
+	IA_CSS_LEAVE_ERR_PRIVATE(err);
 	return err;
 }
 
@@ -2022,12 +2042,20 @@ create_host_pipeline_structure(struct ia_css_stream *stream)
 		     capture_pipe_delay = 0;
 
 	assert(stream != NULL);
+	IA_CSS_ENTER_PRIVATE("stream = %p", stream);
+
+	if (stream == NULL) {
+		IA_CSS_LEAVE_ERR_PRIVATE(IA_CSS_ERR_INVALID_ARGUMENTS);
+		return IA_CSS_ERR_INVALID_ARGUMENTS;
+	}
 
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE,
-		"create_host_pipeline_structure() enter:\n");
 
 	main_pipe	= stream->last_pipe;
 	assert(main_pipe != NULL);
+	if (main_pipe == NULL) {
+		IA_CSS_LEAVE_ERR_PRIVATE(IA_CSS_ERR_INVALID_ARGUMENTS);
+		return IA_CSS_ERR_INVALID_ARGUMENTS;
+	}
 
 	pipe_id	= main_pipe->mode;
 
@@ -2086,21 +2114,18 @@ create_host_pipeline_structure(struct ia_css_stream *stream)
 	}
 
 	/* DH regular multi pipe - not continuous mode: create the next pipelines too */
-	if ((!stream->cont_capt) &&
-		((pipe_id == IA_CSS_PIPE_ID_VIDEO) || (pipe_id == IA_CSS_PIPE_ID_PREVIEW)) &&
-		(stream->num_pipes > 1) && (!copy_pipe) && (!capture_pipe)) {
-			int i;
-			for (i = 1; i < stream->num_pipes; i++) {
-				main_pipe = stream->pipes[i];
-				err = ia_css_pipeline_create(&main_pipe->pipeline,
-										main_pipe->mode,
-										main_pipe->pipe_num,
-										main_pipe->dvs_frame_delay);
-			}
+ 	if ((!stream->config.continuous) && stream->num_pipes > 1) {
+		int i;
+		for (i = 1; i < stream->num_pipes && IA_CSS_SUCCESS == err; i++) {
+			main_pipe = stream->pipes[i];
+			err = ia_css_pipeline_create(&main_pipe->pipeline,
+									main_pipe->mode,
+									main_pipe->pipe_num,
+									main_pipe->dvs_frame_delay);
+		}
 	}
 
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE,
-		"create_host_pipeline_structure() leave: return (%d)\n", err);
+	IA_CSS_LEAVE_ERR_PRIVATE(err);
 	return err;
 }
 
@@ -2226,15 +2251,31 @@ create_host_pipeline(struct ia_css_stream *stream)
 	}
 
 	/* DH regular multi pipe - not continuous mode: create the next pipelines too */
-	if ((!stream->cont_capt) &&
-		((pipe_id == IA_CSS_PIPE_ID_VIDEO) || (pipe_id == IA_CSS_PIPE_ID_PREVIEW)) &&
-		(stream->num_pipes > 1) && (!copy_pipe) && (!capture_pipe)) {
-			int i;
-			for (i = 1; i < stream->num_pipes; i++) {
+	if (!stream->config.continuous && stream->num_pipes > 1) {
+		int i;
+		for (i = 1; i < stream->num_pipes; i++) {
+			switch (stream->pipes[i]->mode) {
+			case IA_CSS_PIPE_ID_PREVIEW:
+				err = create_host_preview_pipeline(stream->pipes[i]);
+				break;
+			case IA_CSS_PIPE_ID_VIDEO:
 				err = create_host_video_pipeline(stream->pipes[i]);
-				if (err != IA_CSS_SUCCESS)
-					goto ERR;
-		 }
+				break;
+			case IA_CSS_PIPE_ID_CAPTURE:
+				err = create_host_capture_pipeline(stream->pipes[i]);
+				break;
+			case IA_CSS_PIPE_ID_YUVPP:
+				err = create_host_yuvpp_pipeline(stream->pipes[i]);
+				break;
+			case IA_CSS_PIPE_ID_ACC:
+				err = create_host_acc_pipeline(stream->pipes[i]);
+				break;
+			default:
+				err = IA_CSS_ERR_INVALID_ARGUMENTS;
+			}
+			if (err != IA_CSS_SUCCESS)
+				goto ERR;
+		}
 	}
 
 ERR:
@@ -2385,6 +2426,10 @@ static void sh_css_pipe_free_acc_binaries (
 	struct ia_css_pipeline_stage *stage;
 
 	assert(pipe != NULL);
+	if (pipe == NULL) {
+		IA_CSS_ERROR("NULL input pointer");
+		return;
+	}
 	pipeline = &pipe->pipeline;
 
 	/* loop through the stages and unload them */
@@ -2400,13 +2445,16 @@ enum ia_css_err
 ia_css_pipe_destroy(struct ia_css_pipe *pipe)
 {
 	enum ia_css_err err = IA_CSS_SUCCESS;
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE, "ia_css_pipe_destroy() enter\n");
+	IA_CSS_ENTER("pipe = %p", pipe);
 
-	if (pipe == NULL) return IA_CSS_ERR_INVALID_ARGUMENTS;
+	if (pipe == NULL) {
+		IA_CSS_LEAVE_ERR(IA_CSS_ERR_INVALID_ARGUMENTS);
+		return IA_CSS_ERR_INVALID_ARGUMENTS;
+	}
 
 	if (pipe->stream != NULL) {
-		ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE, "ia_css_pipe_destroy(): "
-							"ia_css_stream_destroy not called!\n");
+		IA_CSS_LOG("ia_css_stream_destroy not called!");
+		IA_CSS_LEAVE_ERR(IA_CSS_ERR_INVALID_ARGUMENTS);
 		return IA_CSS_ERR_INVALID_ARGUMENTS;
 	}
 
@@ -2468,7 +2516,7 @@ ia_css_pipe_destroy(struct ia_css_pipe *pipe)
 		ia_css_pipe_unload_extension(pipe, pipe->config.acc_extension);
 	}
 	sh_css_free(pipe);
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE, "ia_css_pipe_destroy() exit, err=%d\n", err);
+	IA_CSS_LEAVE("err = %d", err);
 	return err;
 }
 
@@ -2849,8 +2897,10 @@ load_preview_binaries(struct ia_css_pipe *pipe)
 	/* preview only have 1 output pin now */
 	struct ia_css_frame_info *pipe_out_info = &pipe->output_info[0];
 
+	IA_CSS_ENTER_PRIVATE("");
 	assert(pipe != NULL);
 	assert(pipe->stream != NULL);
+	assert(pipe->mode == IA_CSS_PIPE_ID_PREVIEW);
 
 	online = pipe->stream->config.online;
 	continuous = pipe->stream->config.continuous;
@@ -2858,9 +2908,6 @@ load_preview_binaries(struct ia_css_pipe *pipe)
 	sensor = pipe->stream->config.mode == IA_CSS_INPUT_MODE_SENSOR;
 #endif
 
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE,
-		"load_preview_binaries() enter:\n");
-
 	if (pipe->pipe_settings.preview.preview_binary.info)
 		return IA_CSS_SUCCESS;
 
@@ -3002,15 +3049,14 @@ ia_css_binary_unload(struct ia_css_binary *binary)
 static void
 unload_preview_binaries(struct ia_css_pipe *pipe)
 {
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE,
-		"unload_preview_binaries() enter:\n");
+	IA_CSS_ENTER_PRIVATE("");
 
+	assert(pipe->mode == IA_CSS_PIPE_ID_PREVIEW);
 	ia_css_binary_unload(&pipe->pipe_settings.preview.copy_binary);
 	ia_css_binary_unload(&pipe->pipe_settings.preview.preview_binary);
 	ia_css_binary_unload(&pipe->pipe_settings.preview.vf_pp_binary);
 
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE,
-		"unload_preview_binaries() leave:\n");
+	IA_CSS_LEAVE_PRIVATE("");
 }
 
 static const struct ia_css_fw_info *last_output_firmware(
@@ -3018,8 +3064,7 @@ static const struct ia_css_fw_info *last_output_firmware(
 {
 	const struct ia_css_fw_info *last_fw = NULL;
 /* fw can be NULL */
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE,
-		"last_output_firmware() enter:\n");
+	IA_CSS_ENTER_LEAVE_PRIVATE("");
 
 	for (; fw; fw = fw->next) {
 		const struct ia_css_fw_info *info = fw;
@@ -3531,11 +3576,10 @@ static enum ia_css_err create_host_video_pipeline(struct ia_css_pipe *pipe)
 	unsigned int i, num_yuv_scaler;
 	bool *is_output_stage = NULL;
 
+	IA_CSS_ENTER_PRIVATE("");
 	assert(pipe != NULL);
 	assert(pipe->stream != NULL);
-
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE,
-		"create_host_video_pipeline() enter:\n");
+	assert(pipe->mode == IA_CSS_PIPE_ID_VIDEO);
 
 	ia_css_pipe_util_create_output_frames(out_frames);
 	in_frame = &pipe->in_frame_struct;
@@ -3776,11 +3820,11 @@ create_host_preview_pipeline(struct ia_css_pipe *pipe)
 	bool continuous = false;
 #endif
 
+	IA_CSS_ENTER_PRIVATE("");
 	assert(pipe != NULL);
 	assert(pipe->stream != NULL);
+	assert(pipe->mode == IA_CSS_PIPE_ID_PREVIEW);
 
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE,
-		"create_host_preview_pipeline(): enter\n");
 
 	ia_css_pipe_util_create_output_frames(out_frames);
 	/* pipeline already created as part of create_host_pipeline_structure */
@@ -3918,14 +3962,13 @@ preview_start(struct ia_css_pipe *pipe)
 	enum sh_css_pipe_config_override copy_ovrd;
 	enum ia_css_input_mode preview_pipe_input_mode;
 
+	IA_CSS_ENTER_PRIVATE("");
 	assert(pipe != NULL);
 	assert(pipe->stream != NULL);
+	assert(pipe->mode == IA_CSS_PIPE_ID_PREVIEW);
 
 	me = &pipe->pipeline;
 
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE,
-	"preview_start() enter: void\n");
-
 	preview_pipe_input_mode = pipe->stream->config.mode;
 
 	copy_pipe    = pipe->pipe_settings.preview.copy_pipe;
@@ -4044,11 +4087,14 @@ ia_css_pipe_enqueue_buffer(struct ia_css_pipe *pipe,
 	struct sh_css_hmm_buffer ddr_buffer;
 	enum ia_css_buffer_type buf_type;
 	enum ia_css_pipe_id pipe_id;
+	bool ret_err;
 
-	if (pipe == NULL)
-		return IA_CSS_ERR_INVALID_ARGUMENTS;
-	if (buffer == NULL)
+	IA_CSS_ENTER("pipe=%p, buffer=%p", pipe, buffer);
+
+	if ((pipe == NULL) || (buffer == NULL)) {
+		IA_CSS_LEAVE_ERR(IA_CSS_ERR_INVALID_ARGUMENTS);
 		return IA_CSS_ERR_INVALID_ARGUMENTS;
+	}
 
 	buf_type = buffer->type;
 	/* following code will be enabled when IA_CSS_BUFFER_TYPE_SEC_OUTPUT_FRAME
@@ -4083,28 +4129,39 @@ ia_css_pipe_enqueue_buffer(struct ia_css_pipe *pipe,
 #endif
 	pipe_id = pipe->mode;
 
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE,
-		"ia_css_pipe_enqueue_buffer() enter: pipe_id=%d, buf_type=%d, buffer=%p\n",
-		pipe_id, buf_type, buffer);
+	IA_CSS_LOG("pipe_id=%d, buf_type=%d", pipe_id, buf_type);
+
 
 	assert(pipe_id < IA_CSS_PIPE_ID_NUM);
 	assert(buf_type < IA_CSS_NUM_DYNAMIC_BUFFER_TYPE);
 	if ((buf_type == IA_CSS_BUFFER_TYPE_INVALID) ||
 	    (buf_type >= IA_CSS_NUM_DYNAMIC_BUFFER_TYPE) ||
-	    (pipe_id >= IA_CSS_PIPE_ID_NUM))
+	    (pipe_id >= IA_CSS_PIPE_ID_NUM)) {
+		IA_CSS_LEAVE_ERR(IA_CSS_ERR_INTERNAL_ERROR);
 		return IA_CSS_ERR_INTERNAL_ERROR;
+	}
 
 	//ia_css_pipeline_get_sp_thread_id(pipe_id, &thread_id);
-	ia_css_pipeline_get_sp_thread_id(ia_css_pipe_get_pipe_num(pipe), &thread_id);
+	ret_err = ia_css_pipeline_get_sp_thread_id(ia_css_pipe_get_pipe_num(pipe), &thread_id);
+	if (!ret_err) {
+		IA_CSS_LEAVE_ERR(IA_CSS_ERR_INVALID_ARGUMENTS);
+		return IA_CSS_ERR_INVALID_ARGUMENTS;
+	}
 
-	ia_css_query_internal_queue_id(buf_type, thread_id, &queue_id);
-	if ((queue_id <= SH_CSS_INVALID_QUEUE_ID) || (queue_id >= SH_CSS_MAX_NUM_QUEUES))
-			return IA_CSS_ERR_INVALID_ARGUMENTS;
+	ret_err = ia_css_query_internal_queue_id(buf_type, thread_id, &queue_id);
+	if (!ret_err) {
+		IA_CSS_LEAVE_ERR(IA_CSS_ERR_INVALID_ARGUMENTS);
+		return IA_CSS_ERR_INVALID_ARGUMENTS;
+	}
+
+	if ((queue_id <= SH_CSS_INVALID_QUEUE_ID) || (queue_id >= SH_CSS_MAX_NUM_QUEUES)) {
+		IA_CSS_LEAVE_ERR(IA_CSS_ERR_INVALID_ARGUMENTS);
+		return IA_CSS_ERR_INVALID_ARGUMENTS;
+	}
 
 	if (!sh_css_sp_is_running()) {
-		ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE,
-			"ia_css_pipe_enqueue_buffer() leaving:"
-			"queues unavailable\n");
+		IA_CSS_LOG("SP is not running!");
+		IA_CSS_LEAVE_ERR(IA_CSS_ERR_RESOURCE_NOT_AVAILABLE);
 		/* SP is not running. The queues are not valid */
 		return IA_CSS_ERR_RESOURCE_NOT_AVAILABLE;
 	}
@@ -4122,26 +4179,34 @@ ia_css_pipe_enqueue_buffer(struct ia_css_pipe *pipe,
 	ddr_buffer.timing_data = buffer->timing_data;
 
 	if (buf_type == IA_CSS_BUFFER_TYPE_3A_STATISTICS) {
-		if (buffer->data.stats_3a == NULL)
+		if (buffer->data.stats_3a == NULL) {
+			IA_CSS_LEAVE_ERR(IA_CSS_ERR_INVALID_ARGUMENTS);
 			return IA_CSS_ERR_INVALID_ARGUMENTS;
+		}
 		ddr_buffer.kernel_ptr = HOST_ADDRESS(buffer->data.stats_3a);
 		ddr_buffer.payload.s3a = *buffer->data.stats_3a;
 	} else if (buf_type == IA_CSS_BUFFER_TYPE_DIS_STATISTICS) {
 #if defined(IS_ISP_2500_SYSTEM)
-		if (buffer->data.stats_skc_dvs == 0)
+		if (buffer->data.stats_skc_dvs == 0) {
+			IA_CSS_LEAVE_ERR(IA_CSS_ERR_INVALID_ARGUMENTS);
 			return IA_CSS_ERR_INVALID_ARGUMENTS;
+		}
 		ddr_buffer.kernel_ptr = HOST_ADDRESS(buffer->data.stats_skc_dvs);
 		ddr_buffer.payload.skc_dvs_statistics = buffer->data.stats_skc_dvs;
 #else
-		if (buffer->data.stats_dvs == NULL)
+		if (buffer->data.stats_dvs == NULL) {
+			IA_CSS_LEAVE_ERR(IA_CSS_ERR_INVALID_ARGUMENTS);
 			return IA_CSS_ERR_INVALID_ARGUMENTS;
+		}
 		ddr_buffer.kernel_ptr = HOST_ADDRESS(buffer->data.stats_dvs);
 		ddr_buffer.payload.dis = *buffer->data.stats_dvs;
 #endif
 #if defined(IS_ISP_2500_SYSTEM)
 	} else if (buf_type == IA_CSS_BUFFER_TYPE_LACE_STATISTICS) {
-		if (buffer->data.stats_lace == 0)
+		if (buffer->data.stats_lace == 0) {
+			IA_CSS_LEAVE_ERR(IA_CSS_ERR_INVALID_ARGUMENTS);
 			return IA_CSS_ERR_INVALID_ARGUMENTS;
+		}
 		ddr_buffer.kernel_ptr = HOST_ADDRESS(buffer->data.stats_lace);
 		ddr_buffer.payload.lace_stat = buffer->data.stats_lace;
 #endif
@@ -4153,8 +4218,10 @@ ia_css_pipe_enqueue_buffer(struct ia_css_pipe *pipe,
 		|| (buf_type == IA_CSS_BUFFER_TYPE_VF_OUTPUT_FRAME)
 		|| (buf_type == IA_CSS_BUFFER_TYPE_SEC_OUTPUT_FRAME)
 		|| (buf_type == IA_CSS_BUFFER_TYPE_SEC_VF_OUTPUT_FRAME)) {
-		if (buffer->data.frame == NULL)
+		if (buffer->data.frame == NULL) {
+			IA_CSS_LEAVE_ERR(IA_CSS_ERR_INVALID_ARGUMENTS);
 			return IA_CSS_ERR_INVALID_ARGUMENTS;
+		}
 		ddr_buffer.kernel_ptr = HOST_ADDRESS(buffer->data.frame);
 		ddr_buffer.payload.frame.frame_data = buffer->data.frame->data;
 		ddr_buffer.payload.frame.flashed = 0;
@@ -4162,8 +4229,10 @@ ia_css_pipe_enqueue_buffer(struct ia_css_pipe *pipe,
 		return_err = set_config_on_frame_enqueue(
 				&buffer->data.frame->info,
 				&ddr_buffer.payload.frame);
-		if (IA_CSS_SUCCESS != return_err)
+		if (IA_CSS_SUCCESS != return_err) {
+			IA_CSS_LEAVE_ERR(return_err);
 			return return_err;
+		}
 #endif
 	}
 
@@ -4180,8 +4249,10 @@ ia_css_pipe_enqueue_buffer(struct ia_css_pipe *pipe,
 	assert(h_vbuf != NULL);
 	assert(h_vbuf->vptr != 0x0);
 
-	if ((h_vbuf == NULL) || (h_vbuf->vptr == 0x0))
+	if ((h_vbuf == NULL) || (h_vbuf->vptr == 0x0)) {
+		IA_CSS_LEAVE_ERR(IA_CSS_ERR_INTERNAL_ERROR);
 		return IA_CSS_ERR_INTERNAL_ERROR;
+	}
 
 	mmgr_store(h_vbuf->vptr,
 				(void *)(&ddr_buffer),
@@ -4189,7 +4260,13 @@ ia_css_pipe_enqueue_buffer(struct ia_css_pipe *pipe,
 	if ((buf_type == IA_CSS_BUFFER_TYPE_3A_STATISTICS)
 		|| (buf_type == IA_CSS_BUFFER_TYPE_DIS_STATISTICS)
 		|| (buf_type == IA_CSS_BUFFER_TYPE_LACE_STATISTICS)) {
-		assert(pipeline != NULL);
+		if (pipeline == NULL) {
+			ia_css_rmgr_rel_vbuf(hmm_buffer_pool, &h_vbuf);
+			IA_CSS_LOG("pipeline is empty!");
+			IA_CSS_LEAVE_ERR(IA_CSS_ERR_INTERNAL_ERROR);
+			return IA_CSS_ERR_INTERNAL_ERROR;
+		}
+
 		for (stage = pipeline->stages; stage; stage = stage->next) {
 			/* The SP will read the params
 				after it got empty 3a and dis */
@@ -4240,9 +4317,8 @@ ia_css_pipe_enqueue_buffer(struct ia_css_pipe *pipe,
 	if (return_err == IA_CSS_SUCCESS) {
 		if (!sh_css_sp_is_running()) {
 			/* SP is not running. The queues are not valid */
-			ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE,
-				"ia_css_pipe_enqueue_buffer() leaving:"
-				"queues unavailable\n");
+			IA_CSS_LOG("SP is not running!");
+			IA_CSS_LEAVE_ERR(IA_CSS_ERR_RESOURCE_NOT_AVAILABLE);
 			return IA_CSS_ERR_RESOURCE_NOT_AVAILABLE;
 		}
 		return_err = ia_css_bufq_enqueue_psys_event(
@@ -4251,8 +4327,7 @@ ia_css_pipe_enqueue_buffer(struct ia_css_pipe *pipe,
 				queue_id,
 				0);
 	}
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE,
-		"ia_css_pipe_enqueue_buffer() leave: return_err=%d\n",return_err);
+	IA_CSS_LEAVE("return value = %d", return_err);
 
 	return return_err;
 }
@@ -4272,30 +4347,43 @@ ia_css_pipe_dequeue_buffer(struct ia_css_pipe *pipe,
 	enum ia_css_buffer_type buf_type;
 	enum ia_css_pipe_id pipe_id;
 	unsigned int thread_id;
+	bool ret_err;
 
-	if (buffer == NULL)
-		return IA_CSS_ERR_INVALID_ARGUMENTS;
-	if (pipe == NULL)
+	IA_CSS_ENTER("pipe=%p, buffer=%p", pipe, buffer);
+
+	if ((pipe == NULL) || (buffer == NULL)) {
+		IA_CSS_LEAVE_ERR(IA_CSS_ERR_INVALID_ARGUMENTS);
 		return IA_CSS_ERR_INVALID_ARGUMENTS;
+	}
 
 	pipe_id = pipe->mode;
 
 	buf_type = buffer->type;
 
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE,
-		"ia_css_pipe_dequeue_buffer() enter: pipe_id=%d, buf_type=%d\n",
-		(int)pipe_id, buf_type);
+	IA_CSS_LOG("pipe_id=%d, buf_type=%d", pipe_id, buf_type);
 
 	ddr_buffer.kernel_ptr = 0;
 
-	ia_css_pipeline_get_sp_thread_id(ia_css_pipe_get_pipe_num(pipe), &thread_id);
-	ia_css_query_internal_queue_id(buf_type, thread_id, &queue_id);
-	if ((queue_id <= SH_CSS_INVALID_QUEUE_ID) || (queue_id >= SH_CSS_MAX_NUM_QUEUES))
-			return IA_CSS_ERR_INVALID_ARGUMENTS;
+	ret_err = ia_css_pipeline_get_sp_thread_id(ia_css_pipe_get_pipe_num(pipe), &thread_id);
+	if (!ret_err) {
+		IA_CSS_LEAVE_ERR(IA_CSS_ERR_INVALID_ARGUMENTS);
+		return IA_CSS_ERR_INVALID_ARGUMENTS;
+	}
+
+	ret_err = ia_css_query_internal_queue_id(buf_type, thread_id, &queue_id);
+	if (!ret_err) {
+		IA_CSS_LEAVE_ERR(IA_CSS_ERR_INVALID_ARGUMENTS);
+		return IA_CSS_ERR_INVALID_ARGUMENTS;
+	}
+
+	if ((queue_id <= SH_CSS_INVALID_QUEUE_ID) || (queue_id >= SH_CSS_MAX_NUM_QUEUES)) {
+		IA_CSS_LEAVE_ERR(IA_CSS_ERR_INVALID_ARGUMENTS);
+		return IA_CSS_ERR_INVALID_ARGUMENTS;
+	}
+
 	if (!sh_css_sp_is_running()) {
-		ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE,
-			"ia_css_pipe_dequeue_buffer() leaving:"
-			"queues unavailable\n");
+		IA_CSS_LOG("SP is not running!");
+		IA_CSS_LEAVE_ERR(IA_CSS_ERR_RESOURCE_NOT_AVAILABLE);
 		/* SP is not running. The queues are not valid */
 		return IA_CSS_ERR_RESOURCE_NOT_AVAILABLE;
 	}
@@ -4305,9 +4393,7 @@ ia_css_pipe_dequeue_buffer(struct ia_css_pipe *pipe,
 
 	if (return_err == IA_CSS_SUCCESS) {
 		struct ia_css_frame *frame;
-		ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE,
-			     "ia_css_pipe_dequeue_buffer() receive vbuf=%x\n",
-			     (int)ddr_buffer_addr);
+		IA_CSS_LOG("receive vbuf=%x", (int)ddr_buffer_addr);
 
 		found_record = 0;
 		for (i = 0; i < MAX_HMM_BUFFER_NUM; i++) {
@@ -4361,9 +4447,8 @@ ia_css_pipe_dequeue_buffer(struct ia_css_pipe *pipe,
 					 */
 					return_err = free_mipi_frames(pipe);
 					if (return_err != IA_CSS_SUCCESS) {
-						ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE,
-							"ia_css_pipe_dequeue_buffer() leaving:"
-							"free_mipi_frames() failed\n");
+						IA_CSS_LOG("free_mipi_frames() failed");
+						IA_CSS_LEAVE_ERR(return_err);
 						return return_err;
 					}
 #endif
@@ -4448,9 +4533,8 @@ ia_css_pipe_dequeue_buffer(struct ia_css_pipe *pipe,
 	 */
 	if (return_err == IA_CSS_SUCCESS){
 		if (!sh_css_sp_is_running()) {
-			ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE,
-				"ia_css_pipe_dequeue_buffer() leaving:"
-				"queues unavailable\n");
+			IA_CSS_LOG("SP is not running!");
+			IA_CSS_LEAVE_ERR(IA_CSS_ERR_RESOURCE_NOT_AVAILABLE);
 			/* SP is not running. The queues are not valid */
 			return IA_CSS_ERR_RESOURCE_NOT_AVAILABLE;
 		}
@@ -4460,8 +4544,7 @@ ia_css_pipe_dequeue_buffer(struct ia_css_pipe *pipe,
 					queue_id,
 					0);
 	}
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE,
-		"ia_css_pipe_dequeue_buffer() leave: buffer=%p\n", buffer);
+	IA_CSS_LEAVE("buffer=%p", buffer);
 
 	return return_err;
 }
@@ -4490,7 +4573,9 @@ static enum ia_css_event_type convert_event_sp_to_host_domain[] = {
 	IA_CSS_EVENT_TYPE_LACE_STATISTICS_DONE,	/**< Indication that LACE statistics are available. */
 	IA_CSS_EVENT_TYPE_ACC_STAGE_COMPLETE,	/**< Extension stage executed. */
 	IA_CSS_EVENT_TYPE_PORT_EOF,		/**< End Of Frame event, sent when in buffered sensor mode. */
-	IA_CSS_EVENT_TYPE_FW_ERROR,             /**< Unrecoverable error encountered by FW. */
+	IA_CSS_EVENT_TYPE_FW_ERROR,		/**< Unrecoverable error encountered by FW. */
+	IA_CSS_EVENT_TYPE_FW_WARNING,		/**< Performance warning encountered by FW */
+	IA_CSS_EVENT_TYPE_FW_ASSERT,		/**< Assertion hit by FW */
 	0,					/** error if sp passes  SH_CSS_SP_EVENT_NR_OF_TYPES as a valid event. */
 };
 
@@ -4552,6 +4637,14 @@ ia_css_dequeue_psys_event(struct ia_css_event *event)
 		event->fw_error = (enum ia_css_fw_err)payload[1];
 	} else if (event->type == IA_CSS_EVENT_TYPE_FW_WARNING) {
 		event->fw_warning = (enum ia_css_fw_warning)payload[1];
+		/* exp_id is only available in these warning types */
+		if (event->fw_warning == IA_CSS_FW_WARNING_EXP_ID_LOCKED ||
+		    event->fw_warning == IA_CSS_FW_WARNING_TAG_EXP_ID_FAILED)
+			event->exp_id = payload[3];
+	} else if (event->type == IA_CSS_EVENT_TYPE_FW_ASSERT) {
+		event->fw_assert_module_id = payload[1]; /* module */
+		event->fw_assert_line_no = (payload[2] << 8) + payload[3];
+		/* payload[2] is line_no>>8, payload[3] is line_no&0xff */
 	} else {
 		/* pipe related events.
 		 * payload[1] contains the pipe_num,
@@ -4676,27 +4769,9 @@ sh_css_pipe_start(struct ia_css_stream *stream)
 	switch (pipe_id) {
 	case IA_CSS_PIPE_ID_PREVIEW:
 		err = preview_start(pipe);
-		/* DH regular multi pipe - not continuous mode: start the next pipes too */
-		if ((err == IA_CSS_SUCCESS) && (!stream->cont_capt) && (stream->num_pipes > 1)) {
-			int i;
-			for (i = 1; i < stream->num_pipes; i++) {
-				if (stream->pipes[i]->mode == IA_CSS_PIPE_ID_PREVIEW) {
-					stream->pipes[i]->stop_requested = false;
-					err = preview_start(stream->pipes[i]);
-				}
-			}
-		}
 		break;
 	case IA_CSS_PIPE_ID_VIDEO:
 		err = video_start(pipe);
-		/* DH regular muti pipe - not continuous mode: start the next pipes too */
-		if ((err == IA_CSS_SUCCESS) && (!stream->cont_capt) && (stream->num_pipes > 1)) {
-			int i;
-			for (i = 1; i < stream->num_pipes; i++) {
-				stream->pipes[i]->stop_requested = false;
-				err = video_start(stream->pipes[i]);
-			}
-		}
 		break;
 	case IA_CSS_PIPE_ID_CAPTURE:
 		err = capture_start(pipe);
@@ -4710,9 +4785,38 @@ sh_css_pipe_start(struct ia_css_stream *stream)
 	default:
 		err = IA_CSS_ERR_INVALID_ARGUMENTS;
 	}
+	/* DH regular multi pipe - not continuous mode: start the next pipes too */
+	if ((err == IA_CSS_SUCCESS) && (!stream->config.continuous) && (stream->num_pipes > 1)) {
+		int i;
+		for (i = 1; i < stream->num_pipes && IA_CSS_SUCCESS == err ; i++) {
+			switch (stream->pipes[i]->mode) {
+			case IA_CSS_PIPE_ID_PREVIEW:
+				stream->pipes[i]->stop_requested = false;
+				err = preview_start(stream->pipes[i]);
+				break;
+			case IA_CSS_PIPE_ID_VIDEO:
+				stream->pipes[i]->stop_requested = false;
+				err = video_start(stream->pipes[i]);
+				break;
+			case IA_CSS_PIPE_ID_CAPTURE:
+				stream->pipes[i]->stop_requested = false;
+				err = capture_start(stream->pipes[i]);
+				break;
+			case IA_CSS_PIPE_ID_YUVPP:
+				stream->pipes[i]->stop_requested = false;
+				err = yuvpp_start(stream->pipes[i]);
+				break;
+			case IA_CSS_PIPE_ID_ACC:
+				stream->pipes[i]->stop_requested = false;
+				err = acc_start(stream->pipes[i]);
+				break;
+			default:
+				err = IA_CSS_ERR_INVALID_ARGUMENTS;
+			}
+		}
+	}
 	if (err != IA_CSS_SUCCESS) {
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE,
-		"sh_css_pipe_start() leave: return_err=%d\n", err);
+		IA_CSS_LEAVE_ERR_PRIVATE(err);
 		return err;
 	}
 
@@ -4744,8 +4848,7 @@ sh_css_pipe_start(struct ia_css_stream *stream)
 				       (uint8_t)thread_id, 0, 0);
 
 	/* DH regular multi pipe - not continuous mode: enqueue event to the next pipes too */
-	if (((pipe_id == IA_CSS_PIPE_ID_VIDEO) || (pipe_id == IA_CSS_PIPE_ID_PREVIEW)) &&
-		(stream->num_pipes > 1) && (!stream->cont_capt)) {
+	if ((stream->num_pipes > 1) && (!stream->config.continuous)) {
 			int i;
 			for (i = 1; i < stream->num_pipes; i++) {
 				ia_css_pipeline_get_sp_thread_id(
@@ -4808,8 +4911,7 @@ sh_css_pipe_start(struct ia_css_stream *stream)
 
 	stream->started = true;
 
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE,
-		"sh_css_pipe_start() leave: return_err=%d\n", err);
+	IA_CSS_LEAVE_ERR(err);
 	return err;
 }
 
@@ -4967,12 +5069,12 @@ sh_css_pipe_get_grid_info(struct ia_css_pipe *pipe,
 	is_dvs_binary = ia_css_binary_is_dvs(binary);
 
 	if (is_3a_binary == true)
-		ia_css_binary_3a_grid_info(binary, info);
+		ia_css_binary_3a_grid_info(binary, info, pipe);
 	else
 		memset(&info->s3a_grid, 0, sizeof(info->s3a_grid));
 
 	if (is_dvs_binary == true)
-		ia_css_binary_dvs_grid_info(binary, info);
+		ia_css_binary_dvs_grid_info(binary, info, pipe);
 	else
 		memset(&info->dvs_grid, 0, sizeof(info->dvs_grid));
 
@@ -4999,9 +5101,9 @@ static enum ia_css_err load_video_binaries(struct ia_css_pipe *pipe)
 	int vf_ds_log2;
 	struct ia_css_video_settings *mycs  = &pipe->pipe_settings.video;
 
+	IA_CSS_ENTER_PRIVATE("");
 	assert(pipe != NULL);
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE, "load_video_binaries() enter:\n");
-
+	assert(pipe->mode == IA_CSS_PIPE_ID_VIDEO);
 	/* we only test the video_binary because offline video doesn't need a
 	 * vf_pp binary and online does not (always use) the copy_binary.
 	 * All are always reset at the same time anyway.
@@ -5279,8 +5381,10 @@ static void
 unload_video_binaries(struct ia_css_pipe *pipe)
 {
 	unsigned int i;
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE, "unload_video_binaries() enter:\n");
+	IA_CSS_ENTER_PRIVATE("");
 
+	assert(pipe != NULL);
+	assert(pipe->mode == IA_CSS_PIPE_ID_VIDEO);
 	ia_css_binary_unload(&pipe->pipe_settings.video.copy_binary);
 	ia_css_binary_unload(&pipe->pipe_settings.video.video_binary);
 	ia_css_binary_unload(&pipe->pipe_settings.video.vf_pp_binary);
@@ -5294,7 +5398,7 @@ unload_video_binaries(struct ia_css_pipe *pipe)
 	sh_css_free(pipe->pipe_settings.video.yuv_scaler_binary);
 	pipe->pipe_settings.video.yuv_scaler_binary = NULL;
 
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE, "unload_video_binaries() leave:\n");
+	IA_CSS_LEAVE_PRIVATE("");
 }
 
 static enum ia_css_err video_start(struct ia_css_pipe *pipe)
@@ -5305,9 +5409,10 @@ static enum ia_css_err video_start(struct ia_css_pipe *pipe)
 	enum sh_css_pipe_config_override copy_ovrd;
 	enum ia_css_input_mode video_pipe_input_mode;
 
-	assert(pipe != NULL);
 
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE, "video_start() enter:\n");
+	IA_CSS_ENTER_PRIVATE("");
+	assert(pipe != NULL);
+	assert(pipe->mode == IA_CSS_PIPE_ID_VIDEO);
 
 	video_pipe_input_mode = pipe->stream->config.mode;
 
@@ -5383,8 +5488,7 @@ static enum ia_css_err video_start(struct ia_css_pipe *pipe)
 
 	err = start_pipe(pipe, copy_ovrd, video_pipe_input_mode);
 
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE,
-		"video_start() leave: return (%d)\n", err);
+	IA_CSS_LEAVE_ERR_PRIVATE(err);
 	return err;
 }
 
@@ -5452,25 +5556,26 @@ static enum ia_css_err load_copy_binaries(struct ia_css_pipe *pipe)
 	enum ia_css_err err = IA_CSS_SUCCESS;
 
 	assert(pipe != NULL);
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE, "load_copy_binaries() enter:\n");
+	IA_CSS_ENTER_PRIVATE("");
 
+	assert(pipe->mode == IA_CSS_PIPE_ID_CAPTURE || pipe->mode == IA_CSS_PIPE_ID_COPY);
 	if (pipe->pipe_settings.capture.copy_binary.info)
 		return IA_CSS_SUCCESS;
 
 	err = ia_css_frame_check_info(&pipe->output_info[0]);
 	if (err != IA_CSS_SUCCESS)
-		return err;
+		goto ERR;
 
 	err = verify_copy_out_frame_format(pipe);
 	if (err != IA_CSS_SUCCESS)
-		return err;
+		goto ERR;
 
 	err = load_copy_binary(pipe,
 				&pipe->pipe_settings.capture.copy_binary,
 				NULL);
-	if (err != IA_CSS_SUCCESS)
-		return err;
 
+ERR:
+	IA_CSS_LEAVE_ERR_PRIVATE(err);
 	return err;
 }
 
@@ -5478,9 +5583,9 @@ static bool need_capture_pp(
 	const struct ia_css_pipe *pipe)
 {
 	const struct ia_css_frame_info *out_info = &pipe->output_info[0];
+	IA_CSS_ENTER_LEAVE_PRIVATE("");
 	assert(pipe != NULL);
 	assert(pipe->mode == IA_CSS_PIPE_ID_CAPTURE);
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE, "need_capture_pp() enter:\n");
 	/* determine whether we need to use the capture_pp binary.
 	 * This is needed for:
 	 *   1. XNR or
@@ -5526,8 +5631,10 @@ static enum ia_css_err load_primary_binaries(
 	unsigned int i;
 	bool need_extra_yuv_scaler = false;
 
+	IA_CSS_ENTER_PRIVATE("");
 	assert(pipe != NULL);
 	assert(pipe->stream != NULL);
+	assert(pipe->mode == IA_CSS_PIPE_ID_CAPTURE || pipe->mode == IA_CSS_PIPE_ID_COPY);
 
 	online = pipe->stream->config.online;
 	memory = pipe->stream->config.mode == IA_CSS_INPUT_MODE_MEMORY;
@@ -5539,7 +5646,6 @@ static enum ia_css_err load_primary_binaries(
 	mycs = &pipe->pipe_settings.capture;
 	pipe_out_info = &pipe->output_info[0];
 	pipe_vf_out_info = &pipe->vf_output_info[0];
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE, "load_primary_binaries() enter:\n");
 
 	if (mycs->primary_binary.info)
 		return IA_CSS_SUCCESS;
@@ -5713,9 +5819,10 @@ static enum ia_css_err load_advanced_binaries(
 	bool need_isp_copy = true;
 	enum ia_css_err err = IA_CSS_SUCCESS;
 
-	assert(pipe != NULL);
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE, "load_advanced_binaries() enter:\n");
+	IA_CSS_ENTER_PRIVATE("");
 
+	assert(pipe != NULL);
+	assert(pipe->mode == IA_CSS_PIPE_ID_CAPTURE || pipe->mode == IA_CSS_PIPE_ID_COPY);
 	if (pipe->pipe_settings.capture.pre_isp_binary.info)
 		return IA_CSS_SUCCESS;
 	pipe_out_info = &pipe->output_info[0];
@@ -5825,8 +5932,9 @@ static enum ia_css_err load_bayer_isp_binaries(
 	enum ia_css_err err = IA_CSS_SUCCESS;
 	struct ia_css_binary_descr pre_de_descr;
 
+	IA_CSS_ENTER_PRIVATE("");
 	assert(pipe != NULL);
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE, "load_pre_isp_binaries() enter:\n");
+	assert(pipe->mode == IA_CSS_PIPE_ID_CAPTURE || pipe->mode == IA_CSS_PIPE_ID_COPY);
 	pipe_out_info = &pipe->output_info[0];
 
 	if (pipe->pipe_settings.capture.pre_isp_binary.info)
@@ -5857,8 +5965,9 @@ static enum ia_css_err load_low_light_binaries(
 	bool need_isp_copy = true;
 	enum ia_css_err err = IA_CSS_SUCCESS;
 
+	IA_CSS_ENTER_PRIVATE("");
 	assert(pipe != NULL);
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE, "load_low_light_binaries() enter:\n");
+	assert(pipe->mode == IA_CSS_PIPE_ID_CAPTURE || pipe->mode == IA_CSS_PIPE_ID_COPY);
 
 	if (pipe->pipe_settings.capture.pre_isp_binary.info)
 		return IA_CSS_SUCCESS;
@@ -5988,8 +6097,9 @@ static enum ia_css_err load_capture_binaries(
 	enum ia_css_err err = IA_CSS_SUCCESS;
 	bool must_be_raw;
 
+	IA_CSS_ENTER_PRIVATE("");
 	assert(pipe != NULL);
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE, "load_capture_binaries() enter:\n");
+	assert(pipe->mode == IA_CSS_PIPE_ID_CAPTURE || pipe->mode == IA_CSS_PIPE_ID_COPY);
 
 	if (pipe->pipe_settings.capture.primary_binary.info)
 		return IA_CSS_SUCCESS;
@@ -6045,8 +6155,9 @@ static void
 unload_capture_binaries(struct ia_css_pipe *pipe)
 {
 	unsigned int i;
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE, "unload_capture_binaries() enter:\n");
+	IA_CSS_ENTER_PRIVATE("");
 
+	assert(pipe->mode == IA_CSS_PIPE_ID_CAPTURE || pipe->mode == IA_CSS_PIPE_ID_COPY);
 	ia_css_binary_unload(&pipe->pipe_settings.capture.copy_binary);
 	ia_css_binary_unload(&pipe->pipe_settings.capture.primary_binary);
 	ia_css_binary_unload(&pipe->pipe_settings.capture.pre_isp_binary);
@@ -6086,9 +6197,9 @@ need_yuv_scaler_stage(const struct ia_css_pipe *pipe)
 
 	bool need_format_conversion = false;
 
+	IA_CSS_ENTER_PRIVATE("");
 	assert(pipe != NULL);
 	assert(pipe->mode == IA_CSS_PIPE_ID_YUVPP);
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE, "need_yuv_scaler_stage() enter:\n");
 
 	/* TODO: make generic function */
 	need_format_conversion =
@@ -6410,15 +6521,16 @@ load_yuvpp_binaries(struct ia_css_pipe *pipe)
 	struct ia_css_cas_binary_descr cas_scaler_descr = IA_CSS_DEFAULT_CAS_BINARY_DESCR;
 	unsigned int i, j;
 
+	IA_CSS_ENTER_PRIVATE("");
 	assert(pipe != NULL);
 	assert(pipe->stream != NULL);
+	assert(pipe->mode == IA_CSS_PIPE_ID_YUVPP);
 
 	if (pipe->pipe_settings.yuvpp.copy_binary.info)
 		goto ERR;
 
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE, "load_yuvpp_binaries() enter:\n");
-
-	err = ia_css_util_check_input(&pipe->stream->config, false, true);
+        /* Set both must_be_raw and must_be_yuv to false then yuvpp can take rgb inputs */
+	err = ia_css_util_check_input(&pipe->stream->config, false, false);
 	if (err != IA_CSS_SUCCESS)
 		goto ERR;
 
@@ -6552,8 +6664,9 @@ static void
 unload_yuvpp_binaries(struct ia_css_pipe *pipe)
 {
 	unsigned int i;
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE, "unload_yuvpp_binaries() enter:\n");
+	IA_CSS_ENTER_PRIVATE("");
 
+	assert(pipe->mode == IA_CSS_PIPE_ID_YUVPP);
 	ia_css_binary_unload(&pipe->pipe_settings.yuvpp.copy_binary);
 	for (i = 0; i < pipe->pipe_settings.yuvpp.num_yuv_scaler; i++) {
 		ia_css_binary_unload(&pipe->pipe_settings.yuvpp.yuv_scaler_binary[i]);
@@ -6568,7 +6681,7 @@ unload_yuvpp_binaries(struct ia_css_pipe *pipe)
 	sh_css_free(pipe->pipe_settings.yuvpp.vf_pp_binary);
 	pipe->pipe_settings.yuvpp.vf_pp_binary = NULL;
 
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE, "unload_yuvpp_binaries() leave:\n");
+	IA_CSS_LEAVE_PRIVATE("");
 }
 
 static enum ia_css_err yuvpp_start(struct ia_css_pipe *pipe)
@@ -6578,9 +6691,10 @@ static enum ia_css_err yuvpp_start(struct ia_css_pipe *pipe)
 	enum sh_css_pipe_config_override copy_ovrd;
 	enum ia_css_input_mode yuvpp_pipe_input_mode;
 
+	IA_CSS_ENTER_PRIVATE("");
 	assert(pipe != NULL);
+	assert(pipe->mode == IA_CSS_PIPE_ID_YUVPP);
 
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE, "yuvpp_start() enter:\n");
 
 	yuvpp_pipe_input_mode = pipe->stream->config.mode;
 
@@ -6702,12 +6816,12 @@ create_host_yuvpp_pipeline(struct ia_css_pipe *pipe)
 	bool continuous = false;
 #endif
 
+	IA_CSS_ENTER_PRIVATE("");
 	assert(pipe != NULL);
 	assert(pipe->stream != NULL);
+	assert(pipe->mode == IA_CSS_PIPE_ID_YUVPP);
 
 	me = &pipe->pipeline;
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE,
-		 "create_host_yuvpp_pipeline() enter:\n");
 	ia_css_pipeline_clean(me);
 	for (i = 0; i < IA_CSS_PIPE_MAX_OUTPUT_STAGE; i++) {
 		out_frame[i] = NULL;
@@ -6992,14 +7106,14 @@ create_host_regular_capture_pipeline(struct ia_css_pipe *pipe)
 	bool need_yuv_pp = false;
 	bool *is_output_stage = NULL;
 
+	IA_CSS_ENTER_PRIVATE("");
 	assert(pipe != NULL);
 	assert(pipe->stream != NULL);
+	assert(pipe->mode == IA_CSS_PIPE_ID_CAPTURE || pipe->mode == IA_CSS_PIPE_ID_COPY);
 
 	me = &pipe->pipeline;
 	mode = pipe->config.default_capture_config.mode;
 	raw = (mode == IA_CSS_CAPTURE_MODE_RAW);
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE,
-		 "create_host_regular_capture_pipeline() enter:\n");
 	ia_css_pipeline_clean(me);
 	ia_css_pipe_util_create_output_frames(out_frames);
 
@@ -8058,22 +8172,29 @@ ia_css_acc_stream_create(struct ia_css_stream *stream)
 	int i;
 	enum ia_css_err err = IA_CSS_SUCCESS;
 
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE,
-		"ia_css_acc_stream_create() enter:\n");
-
 	assert(stream != NULL);
+	IA_CSS_ENTER_PRIVATE("stream = %p", stream);
+
+	if (stream == NULL) {
+		IA_CSS_LEAVE_ERR_PRIVATE(IA_CSS_ERR_INVALID_ARGUMENTS);
+		return IA_CSS_ERR_INVALID_ARGUMENTS;
+	}
 
 	for (i = 0;  i < stream->num_pipes; i++) {
 		struct ia_css_pipe *pipe = stream->pipes[i];
 		assert(pipe != NULL);
+		if (pipe == NULL) {
+			IA_CSS_LEAVE_ERR_PRIVATE(IA_CSS_ERR_INVALID_ARGUMENTS);
+			return IA_CSS_ERR_INVALID_ARGUMENTS;
+		}
+
 		pipe->stream = stream;
 	}
 
 	/* Map SP threads before doing anything. */
 	err = map_sp_threads(stream, true);
 	if (err != IA_CSS_SUCCESS) {
-		ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE,
-			"ia_css_acc_stream_create(): map_sp_threads: err=%d\n", err);
+		IA_CSS_LEAVE_ERR_PRIVATE(err);
 		return err;
 	}
 
@@ -8085,16 +8206,14 @@ ia_css_acc_stream_create(struct ia_css_stream *stream)
 
 	err = create_host_pipeline_structure(stream);
 	if (err != IA_CSS_SUCCESS) {
-		ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE,
-			"ia_css_acc_stream_create(): create_host_pipeline_structure: err=%d\n", err);
+		IA_CSS_LEAVE_ERR_PRIVATE(err);
 		return err;
 	}
 
 	stream->started = false;
 
 
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE_PRIVATE,
-		"ia_css_acc_stream_create() leave:\n");
+	IA_CSS_LEAVE_ERR_PRIVATE(IA_CSS_SUCCESS);
 
 	return IA_CSS_SUCCESS;
 }
@@ -9075,13 +9194,15 @@ ia_css_pipe_get_isp_pipe_version(const struct ia_css_pipe *pipe)
 
 #define SP_START_TIMEOUT_US 30000000
 
-void
-ia_css_start_sp1(void)
-{
 #if defined(HAS_SEC_SP)
+
+static enum ia_css_err
+sh_css_start_sp1(void)
+{
+
 	unsigned long timeout;
 
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE, "ia_css_start_sp1() enter\n");
+	IA_CSS_ENTER_PRIVATE("void");
 	sh_css_sp1_start();
 	/* waiting for the SP is completely started */
 	timeout = SP_START_TIMEOUT_US;
@@ -9090,21 +9211,21 @@ ia_css_start_sp1(void)
 		hrt_sleep();
 	}
 	if (timeout == 0) {
-		ia_css_debug_dtrace(IA_CSS_DEBUG_ERROR, "ia_css_start_sp1() timeout\n");
-		return; /* IA_CSS_ERR_INTERNAL_ERROR; */
+		IA_CSS_LEAVE_ERR_PRIVATE(IA_CSS_ERR_INTERNAL_ERROR);
+		return IA_CSS_ERR_INTERNAL_ERROR;
 	}
 	sh_css_write_host2sp1_command(host2sp_cmd_ready);
 
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE, "ia_css_start_sp1() exit\n");
-#else
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE, "ia_css_start_sp1() Secondary SP is not supported!!!\n");
-#endif /** HAS_SEC_SP */
+	IA_CSS_LEAVE_ERR_PRIVATE(IA_CSS_SUCCESS);
+	return IA_CSS_SUCCESS;
 }
+#endif
 
 enum ia_css_err
 ia_css_start_sp(void)
 {
 	unsigned long timeout;
+	enum ia_css_err err = IA_CSS_SUCCESS;
 
 	IA_CSS_ENTER("");
 	sh_css_sp_start_isp();
@@ -9133,11 +9254,11 @@ ia_css_start_sp(void)
 
 #if defined(HAS_SEC_SP)
 	/* Start the SP1 Core */
-	ia_css_start_sp1();
+	err = sh_css_start_sp1();
 #endif /* HAS_SEC_SP */
 
-	IA_CSS_LEAVE_ERR(IA_CSS_SUCCESS);
-	return IA_CSS_SUCCESS;
+	IA_CSS_LEAVE_ERR(err);
+	return err;
 }
 
 /**
@@ -9147,13 +9268,14 @@ ia_css_start_sp(void)
  */
 #define SP_SHUTDOWN_TIMEOUT_US 200000
 
-enum ia_css_err
-ia_css_stop_sp1(void)
-{
 #if defined(HAS_SEC_SP)
+
+static enum ia_css_err
+sh_css_stop_sp1(void)
+{
 	unsigned long timeout;
 
-	IA_CSS_ENTER("");
+	IA_CSS_ENTER_PRIVATE("void");
 
 	/* For now, stop whole SP1 */
 	sh_css_write_host2sp1_command(host2sp_cmd_terminate);
@@ -9169,20 +9291,16 @@ ia_css_stop_sp1(void)
 		//ia_css_debug_dump_sp_sw_debug_info();
 	}
 
-	IA_CSS_LEAVE("");
+	IA_CSS_LEAVE_ERR_PRIVATE(IA_CSS_SUCCESS);
 	return IA_CSS_SUCCESS;
-#else
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE, "ia_css_stop_sp1() Secondary SP is not supported!!!\n");
-	return IA_CSS_ERR_NOT_SUPPORTED;
-#endif /** HAS_SEC_SP */
-
 }
+#endif
 
 enum ia_css_err
 ia_css_stop_sp(void)
 {
 	unsigned int i;
-/*	unsigned long timeout; */
+	unsigned long timeout;
 	enum ia_css_err err = IA_CSS_SUCCESS;
 
 	IA_CSS_ENTER("void");
@@ -9199,7 +9317,6 @@ ia_css_stop_sp(void)
 	sh_css_write_host2sp_command(host2sp_cmd_terminate);
 	sh_css_sp_set_sp_running(false);
 
-#if 0
 	timeout = SP_SHUTDOWN_TIMEOUT_US;
 	while (!sp_ctrl_getbit(SP0_ID, SP_SC_REG, SP_IDLE_BIT) && timeout) {
 		timeout--;
@@ -9221,7 +9338,7 @@ ia_css_stop_sp(void)
 		IA_CSS_WARNING("ISP is not idle");
 		ia_css_debug_dump_sp_sw_debug_info();
 	}
-#endif
+
 	for (i = 0; i < MAX_HMM_BUFFER_NUM; i++) {
 		if (hmm_buffer_record_h[i] != NULL) {
 			ia_css_rmgr_rel_vbuf(hmm_buffer_pool, &hmm_buffer_record_h[i]);
@@ -9233,7 +9350,7 @@ ia_css_stop_sp(void)
 
 #if defined(HAS_SEC_SP)
 	/* Stop SP1 Core */
-	ia_css_stop_sp1();
+	sh_css_stop_sp1();
 #endif /* HAS_SEC_SP */
 
 	IA_CSS_LEAVE_ERR(err);
@@ -9280,9 +9397,8 @@ void ia_css_pipe_map_queue(struct ia_css_pipe *pipe, bool map)
 	unsigned int pipe_num;
 	bool need_input_queue;
 
+	IA_CSS_ENTER("");
 	assert(pipe != NULL);
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE,
-		"ia_css_pipeline_create() enter:\n");
 
 	pipe_id = pipe->mode;
 	pipe_num = pipe->pipe_num;
@@ -9382,6 +9498,7 @@ void ia_css_pipe_map_queue(struct ia_css_pipe *pipe, bool map)
 		ia_css_queue_map(thread_id, IA_CSS_BUFFER_TYPE_METADATA, map);
 #endif
 	}
+	IA_CSS_LEAVE("");
 }
 
 #if CONFIG_ON_FRAME_ENQUEUE()
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_firmware.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_firmware.c
index d5d162b..d08d1d5 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_firmware.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_firmware.c
@@ -54,10 +54,10 @@ struct fw_param {
 /* Warning: same order as SH_CSS_BINARY_ID_* */
 static struct firmware_header *firmware_header;
 
-/* The string STR(irci_master_20141029_1500) is a place holder
+/* The string STR(irci_master_20141114_1919) is a place holder
  * which will be replaced with the actual RELEASE_VERSION
  * during package generation. Please do not modify  */
-static const char *release_version = STR(irci_master_20141029_1500);
+static const char *release_version = STR(irci_master_20141114_1919);
 
 #define MAX_FW_REL_VER_NAME	300
 static char FW_rel_ver_name[MAX_FW_REL_VER_NAME] = "---";
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_internal.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_internal.h
index 462c19b..fb5acec 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_internal.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_internal.h
@@ -238,6 +238,7 @@ enum sh_css_sp_event_type {
 	SH_CSS_SP_EVENT_PORT_EOF,
 	SH_CSS_SP_EVENT_FW_ERROR,
 	SH_CSS_SP_EVENT_FW_WARNING,
+	SH_CSS_SP_EVENT_FW_ASSERT,
 	SH_CSS_SP_EVENT_NR_OF_TYPES		/* must be last */
 };
 
@@ -809,15 +810,29 @@ struct sh_css_hmm_buffer {
 	/*
 	 * kernel_ptr is present for host administration purposes only.
 	 * type is uint64_t in order to be 64-bit host compatible.
+	 * uint64_t does not exist on SP/ISP.
+	 * Size of the struct is checked by sp.hive.c.
 	 */
+#if !defined(__SP) && !defined(__ISP)
 	CSS_ALIGN(uint64_t cookie_ptr, 8); /* TODO: check if this alignment is needed */
 	uint64_t kernel_ptr;
+#else
+	CSS_ALIGN(struct { uint32_t a[2]; } cookie_ptr, 8); /* TODO: check if this alignment is needed */
+	struct { uint32_t a[2]; } kernel_ptr;
+#endif
 	struct ia_css_time_meas timing_data;
 	clock_value_t isys_eof_clock_tick;
 };
+#if CONFIG_ON_FRAME_ENQUEUE()
 #define SIZE_OF_FRAME_STRUCT						\
 	(SIZE_OF_HRT_VADDRESS +						\
-	(2 * sizeof(uint32_t)))
+	(3 * sizeof(uint32_t))) +					\
+	sizeof(uint32_t)
+#else
+#define SIZE_OF_FRAME_STRUCT						\
+	(SIZE_OF_HRT_VADDRESS +						\
+	(3 * sizeof(uint32_t)))
+#endif
 
 #define SIZE_OF_PAYLOAD_UNION						\
 	(MAX(MAX(MAX(MAX(						\
@@ -827,11 +842,12 @@ struct sh_css_hmm_buffer {
 	SIZE_OF_FRAME_STRUCT),						\
 	SIZE_OF_HRT_VADDRESS))
 
+/* Do not use sizeof(uint64_t) since that does not exist of SP */
 #define SIZE_OF_SH_CSS_HMM_BUFFER_STRUCT				\
 	(SIZE_OF_PAYLOAD_UNION +					\
 	CALC_ALIGNMENT_MEMBER(SIZE_OF_PAYLOAD_UNION, 8) +		\
-	sizeof(uint64_t) +						\
-	sizeof(uint64_t) +						\
+	8 +						\
+	8 +						\
 	SIZE_OF_IA_CSS_TIME_MEAS_STRUCT +				\
 	SIZE_OF_IA_CSS_CLOCK_TICK_STRUCT +			\
 	CALC_ALIGNMENT_MEMBER(SIZE_OF_IA_CSS_CLOCK_TICK_STRUCT, 8))
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_params.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_params.c
index a117dc0..26d4063 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_params.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/sh_css_params.c
@@ -111,6 +111,9 @@
 #include <components/stats_3a/src/host/stats_3a.host.h>
 #include <components/include/components_types.host.h>                /* Skylake kernel settings structs */
 #include <components/include/components.host.h>                /* Skylake kernel settings structs */
+#if defined(HAS_OUTPUT_SYSTEM)
+#include <components/output_system/sc_output_system_1.0/host/output_system.host.h>
+#endif
 #endif
 
 #include "sh_css_frac.h"
@@ -2098,7 +2101,7 @@ ia_css_get_4a_statistics(struct ia_css_4a_statistics *host_stats,
 	if (ae_join_buffers == 1) {
 		mmgr_load(ae_buff_1_ddr_addr,
 			  (void *)&(ae_raw_buffer_s),
-			  sizeof(ae_public_raw_buffer_t));
+			  sizeof(ae_private_raw_buffer_aligned_t));
 	}
 
 	mmgr_load(awb_fr_ddr_addr,
@@ -3067,9 +3070,12 @@ ia_css_stream_isp_parameters_init(struct ia_css_stream *stream)
 	struct ia_css_isp_parameters *params;
 
 	assert(stream != NULL);
-
 	IA_CSS_ENTER_PRIVATE("void");
 
+	if (stream == NULL) {
+		IA_CSS_LEAVE_ERR_PRIVATE(IA_CSS_ERR_INVALID_ARGUMENTS);
+		return IA_CSS_ERR_INVALID_ARGUMENTS;
+	}
 	/* TMP: tracking of paramsets */
 	g_param_buffer_dequeue_count = 0;
 	g_param_buffer_enqueue_count = 0;
@@ -3194,6 +3200,9 @@ sh_css_create_isp_params(struct ia_css_stream *stream)
 					mmgr_malloc(sizeof(struct isp_acc_param)));
 	succ &= (ddr_ptrs->acc_cluster_params_for_sp != mmgr_NULL);
 	acc_cluster_set_default_params(stream);
+#if defined(HAS_OUTPUT_SYSTEM)
+	ia_css_osys_set_default(stream);
+#endif
 #else
 	(void)stream;
 #endif
@@ -3539,7 +3548,6 @@ ia_css_stream_isp_parameters_uninit(struct ia_css_stream *stream)
 
 #if defined(IS_ISP_2500_SYSTEM)
 	destroy_acc_cluster(stream);
-	free_dvs_2500_6axis_table();
 #endif
 
 	/* Free up theDVS table memory blocks before recomputing new table */
@@ -3848,25 +3856,6 @@ sh_css_param_update_isp_params(struct ia_css_pipe *curr_pipe,
 		assert(isp_pipe_version == ia_css_pipe_get_isp_pipe_version(curr_pipe->stream->pipes[i]));
 	}
 
-#if defined(IS_ISP_2500_SYSTEM)
-	pipe_num = ia_css_pipe_get_pipe_num(curr_pipe);
-	if (ia_css_pipeline_is_mapped(pipe_num) == false) {
-		thread_id = 0;
-	} else
-	{
-		ia_css_pipeline_get_sp_thread_id(pipe_num, &thread_id);
-	}
-	sh_css_acc_cluster_parameters = &(sh_css_acc_cluster_parameters_pool[thread_id]);
-	if (sh_css_acc_cluster_parameters == NULL) {
-		return IA_CSS_ERR_CANNOT_ALLOCATE_MEMORY;
-	}
-	err = sh_css_process_acc_cluster_parameters(curr_pipe, sh_css_acc_cluster_parameters, &acc_cluster_params_changed);
-	if (err != IA_CSS_SUCCESS) {
-		IA_CSS_LOG("sh_css_process_acc_cluster_parameters() returned INVALID KERNEL CONFIGURATION\n");
-		IA_CSS_LEAVE_ERR_PRIVATE(err);
-		return err;
-	}
-#endif
 
 	/* now make the map available to the sp */
 	if (!commit) {
@@ -3890,6 +3879,21 @@ sh_css_param_update_isp_params(struct ia_css_pipe *curr_pipe,
 		pipeline = ia_css_pipe_get_pipeline(pipe);
 		pipe_num = ia_css_pipe_get_pipe_num(pipe);
 		ia_css_pipeline_get_sp_thread_id(pipe_num, &thread_id);
+#if defined(IS_ISP_2500_SYSTEM)
+		if (ia_css_pipeline_is_mapped(pipe_num) == false) {
+			thread_id = 0;
+		}
+		sh_css_acc_cluster_parameters = &(sh_css_acc_cluster_parameters_pool[thread_id]);
+		if (sh_css_acc_cluster_parameters == NULL) {
+			return IA_CSS_ERR_CANNOT_ALLOCATE_MEMORY;
+		}
+		err = sh_css_process_acc_cluster_parameters(pipe, sh_css_acc_cluster_parameters, &acc_cluster_params_changed);
+		if (err != IA_CSS_SUCCESS) {
+			IA_CSS_LOG("sh_css_process_acc_cluster_parameters() returned INVALID KERNEL CONFIGURATION\n");
+			IA_CSS_LEAVE_ERR_PRIVATE(err);
+			return err;
+		}
+#endif
 
 #if defined(SH_CSS_ENABLE_PER_FRAME_PARAMS)
 		ia_css_query_internal_queue_id(params->output_frame
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/spmem_dump.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/spmem_dump.c
index 3b3183f..a355320 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/spmem_dump.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21/spmem_dump.c
@@ -29,21 +29,9 @@
 
 #define _hrt_cell_load_program_sp(proc) _hrt_cell_load_program_embedded(proc, sp)
 
-/* function input_system_acquisition_stop: B05 */
+/* function input_system_acquisition_stop: B0E */
 
-/* function longjmp: 68F4 */
-
-#ifndef HIVE_MULTIPLE_PROGRAMS
-#ifndef HIVE_MEM_raw_buff_pool_lock_frame_handles
-#define HIVE_MEM_raw_buff_pool_lock_frame_handles scalar_processor_2400_dmem
-#define HIVE_ADDR_raw_buff_pool_lock_frame_handles 0x6188
-#define HIVE_SIZE_raw_buff_pool_lock_frame_handles 60
-#else
-#endif
-#endif
-#define HIVE_MEM_sp_raw_buff_pool_lock_frame_handles scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_raw_buff_pool_lock_frame_handles 0x6188
-#define HIVE_SIZE_sp_raw_buff_pool_lock_frame_handles 60
+/* function longjmp: 6B7D */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_HIVE_IF_SRST_MASK
@@ -57,67 +45,67 @@
 #define HIVE_ADDR_sp_HIVE_IF_SRST_MASK 0x1CC
 #define HIVE_SIZE_sp_HIVE_IF_SRST_MASK 16
 
-/* function tmpmem_init_dmem: 66A7 */
+/* function tmpmem_init_dmem: 6930 */
 
-/* function ia_css_isys_sp_token_map_receive_ack: 5FBC */
+/* function ia_css_isys_sp_token_map_receive_ack: 6241 */
 
-/* function ia_css_dmaproxy_sp_set_addr_B: 30A6 */
+/* function ia_css_dmaproxy_sp_set_addr_B: 32E1 */
 
 /* function debug_buffer_set_ddr_addr: F8 */
 
-/* function receiver_port_reg_load: AE9 */
+/* function receiver_port_reg_load: AF2 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_vbuf_mipi
 #define HIVE_MEM_vbuf_mipi scalar_processor_2400_dmem
-#define HIVE_ADDR_vbuf_mipi 0x628C
+#define HIVE_ADDR_vbuf_mipi 0x620C
 #define HIVE_SIZE_vbuf_mipi 12
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_vbuf_mipi scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_vbuf_mipi 0x628C
+#define HIVE_ADDR_sp_vbuf_mipi 0x620C
 #define HIVE_SIZE_sp_vbuf_mipi 12
 
-/* function ia_css_event_sp_decode: 32B2 */
+/* function ia_css_event_sp_decode: 34FA */
 
-/* function ia_css_queue_get_size: 47C1 */
+/* function ia_css_queue_get_size: 4A09 */
 
-/* function ia_css_queue_load: 4E8C */
+/* function ia_css_queue_load: 50D4 */
 
-/* function setjmp: 68FD */
+/* function setjmp: 6B86 */
 
-/* function __dmaproxy_sp_read_write_text: 31BE */
+/* function __dmaproxy_sp_read_write_text: 3406 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_sp2host_isys_event_queue
 #define HIVE_MEM_sem_for_sp2host_isys_event_queue scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_sp2host_isys_event_queue 0x4650
+#define HIVE_ADDR_sem_for_sp2host_isys_event_queue 0x462C
 #define HIVE_SIZE_sem_for_sp2host_isys_event_queue 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_sp2host_isys_event_queue scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_sp2host_isys_event_queue 0x4650
+#define HIVE_ADDR_sp_sem_for_sp2host_isys_event_queue 0x462C
 #define HIVE_SIZE_sp_sem_for_sp2host_isys_event_queue 20
 
-/* function ia_css_dmaproxy_sp_wait_for_ack: 6F2E */
+/* function ia_css_dmaproxy_sp_wait_for_ack: 71B7 */
 
-/* function ia_css_sp_rawcopy_func: 50E0 */
+/* function ia_css_sp_rawcopy_func: 5328 */
 
-/* function ia_css_tagger_buf_sp_pop_marked: 2714 */
+/* function ia_css_tagger_buf_sp_pop_marked: 28FA */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_stage
 #define HIVE_MEM_isp_stage scalar_processor_2400_dmem
-#define HIVE_ADDR_isp_stage 0x5B00
-#define HIVE_SIZE_isp_stage 824
+#define HIVE_ADDR_isp_stage 0x5AF0
+#define HIVE_SIZE_isp_stage 832
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isp_stage scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_stage 0x5B00
-#define HIVE_SIZE_sp_isp_stage 824
+#define HIVE_ADDR_sp_isp_stage 0x5AF0
+#define HIVE_SIZE_sp_isp_stage 832
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_vbuf_raw
@@ -131,32 +119,32 @@
 #define HIVE_ADDR_sp_vbuf_raw 0x2E0
 #define HIVE_SIZE_sp_vbuf_raw 4
 
-/* function ia_css_sp_bin_copy_func: 5013 */
+/* function ia_css_sp_bin_copy_func: 525B */
 
-/* function ia_css_queue_item_store: 4B62 */
+/* function ia_css_queue_item_store: 4DAA */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_metadata_bufs
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_metadata_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_metadata_bufs 0x49C4
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_metadata_bufs 0x49A0
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_metadata_bufs 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_metadata_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_metadata_bufs 0x49C4
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_metadata_bufs 0x49A0
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_metadata_bufs 20
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_buffer_bufs
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_buffer_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_buffer_bufs 0x49D8
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_buffer_bufs 0x49B4
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_buffer_bufs 160
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_buffer_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_buffer_bufs 0x49D8
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_buffer_bufs 0x49B4
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_buffer_bufs 160
 
 /* function sp_start_isp: 501 */
@@ -164,122 +152,122 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_binary_group
 #define HIVE_MEM_sp_binary_group scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_binary_group 0x5EE8
+#define HIVE_ADDR_sp_binary_group 0x5EE0
 #define HIVE_SIZE_sp_binary_group 32
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_binary_group scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_binary_group 0x5EE8
+#define HIVE_ADDR_sp_sp_binary_group 0x5EE0
 #define HIVE_SIZE_sp_sp_binary_group 32
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_sw_state
 #define HIVE_MEM_sp_sw_state scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sw_state 0x621C
+#define HIVE_ADDR_sp_sw_state 0x619C
 #define HIVE_SIZE_sp_sw_state 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_sw_state scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_sw_state 0x621C
+#define HIVE_ADDR_sp_sp_sw_state 0x619C
 #define HIVE_SIZE_sp_sp_sw_state 4
 
-/* function sp_error: 93D */
+/* function ia_css_thread_sp_main: DB2 */
 
-/* function ia_css_thread_sp_main: DA9 */
-
-/* function ia_css_ispctrl_sp_init_internal_buffers: 34F9 */
+/* function ia_css_ispctrl_sp_init_internal_buffers: 3741 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp2host_psys_event_queue_handle
 #define HIVE_MEM_sp2host_psys_event_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp2host_psys_event_queue_handle 0x4A78
+#define HIVE_ADDR_sp2host_psys_event_queue_handle 0x4A54
 #define HIVE_SIZE_sp2host_psys_event_queue_handle 12
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp2host_psys_event_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp2host_psys_event_queue_handle 0x4A78
+#define HIVE_ADDR_sp_sp2host_psys_event_queue_handle 0x4A54
 #define HIVE_SIZE_sp_sp2host_psys_event_queue_handle 12
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_sp2host_psys_event_queue
 #define HIVE_MEM_sem_for_sp2host_psys_event_queue scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_sp2host_psys_event_queue 0x4664
+#define HIVE_ADDR_sem_for_sp2host_psys_event_queue 0x4640
 #define HIVE_SIZE_sem_for_sp2host_psys_event_queue 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_sp2host_psys_event_queue scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_sp2host_psys_event_queue 0x4664
+#define HIVE_ADDR_sp_sem_for_sp2host_psys_event_queue 0x4640
 #define HIVE_SIZE_sp_sem_for_sp2host_psys_event_queue 20
 
-/* function ia_css_tagger_sp_propagate_frame: 20FD */
+/* function ia_css_tagger_sp_propagate_frame: 236A */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_stop_copy_preview
 #define HIVE_MEM_sp_stop_copy_preview scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_stop_copy_preview 0x61C4
+#define HIVE_ADDR_sp_stop_copy_preview 0x6180
 #define HIVE_SIZE_sp_stop_copy_preview 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_stop_copy_preview scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_stop_copy_preview 0x61C4
+#define HIVE_ADDR_sp_sp_stop_copy_preview 0x6180
 #define HIVE_SIZE_sp_sp_stop_copy_preview 4
 
-/* function input_system_reg_load: B4B */
+/* function input_system_reg_load: B54 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_vbuf_handles
 #define HIVE_MEM_vbuf_handles scalar_processor_2400_dmem
-#define HIVE_ADDR_vbuf_handles 0x6298
+#define HIVE_ADDR_vbuf_handles 0x6218
 #define HIVE_SIZE_vbuf_handles 960
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_vbuf_handles scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_vbuf_handles 0x6298
+#define HIVE_ADDR_sp_vbuf_handles 0x6218
 #define HIVE_SIZE_sp_vbuf_handles 960
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_max_mm_tracer
 #define HIVE_MEM_max_mm_tracer scalar_processor_2400_dmem
-#define HIVE_ADDR_max_mm_tracer 0x1B8
+#define HIVE_ADDR_max_mm_tracer 0x2688
 #define HIVE_SIZE_max_mm_tracer 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_max_mm_tracer scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_max_mm_tracer 0x1B8
+#define HIVE_ADDR_sp_max_mm_tracer 0x2688
 #define HIVE_SIZE_sp_max_mm_tracer 4
 
-/* function ia_css_queue_store: 4D05 */
+/* function ia_css_queue_store: 4F4D */
+
+/* function ia_css_sp_flash_register: 2B15 */
 
-/* function ia_css_sp_flash_register: 28EE */
+/* function ia_css_sp_rawcopy_dummy_function: 58B3 */
 
-/* function ia_css_isys_sp_backend_create: 5C13 */
+/* function ia_css_isys_sp_backend_create: 5E98 */
 
-/* function ia_css_pipeline_sp_init: 17EC */
+/* function ia_css_pipeline_sp_init: 17FF */
 
-/* function ia_css_tagger_sp_configure: 1FE2 */
+/* function ia_css_tagger_sp_configure: 224A */
 
-/* function ia_css_ispctrl_sp_end_binary: 32FC */
+/* function ia_css_ispctrl_sp_end_binary: 3544 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_h_pipe_private_per_frame_ddr_ptrs
 #define HIVE_MEM_ia_css_bufq_sp_h_pipe_private_per_frame_ddr_ptrs scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_h_pipe_private_per_frame_ddr_ptrs 0x4A84
+#define HIVE_ADDR_ia_css_bufq_sp_h_pipe_private_per_frame_ddr_ptrs 0x4A60
 #define HIVE_SIZE_ia_css_bufq_sp_h_pipe_private_per_frame_ddr_ptrs 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_h_pipe_private_per_frame_ddr_ptrs scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_h_pipe_private_per_frame_ddr_ptrs 0x4A84
+#define HIVE_ADDR_sp_ia_css_bufq_sp_h_pipe_private_per_frame_ddr_ptrs 0x4A60
 #define HIVE_SIZE_sp_ia_css_bufq_sp_h_pipe_private_per_frame_ddr_ptrs 20
 
-/* function receiver_port_reg_store: AF0 */
+/* function receiver_port_reg_store: AF9 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_event_is_pending_mask
@@ -296,116 +284,112 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cb_elems_frame
 #define HIVE_MEM_sp_all_cb_elems_frame scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_all_cb_elems_frame 0x4678
+#define HIVE_ADDR_sp_all_cb_elems_frame 0x4654
 #define HIVE_SIZE_sp_all_cb_elems_frame 16
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_all_cb_elems_frame scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_all_cb_elems_frame 0x4678
+#define HIVE_ADDR_sp_sp_all_cb_elems_frame 0x4654
 #define HIVE_SIZE_sp_sp_all_cb_elems_frame 16
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp2host_isys_event_queue_handle
 #define HIVE_MEM_sp2host_isys_event_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp2host_isys_event_queue_handle 0x4A98
+#define HIVE_ADDR_sp2host_isys_event_queue_handle 0x4A74
 #define HIVE_SIZE_sp2host_isys_event_queue_handle 12
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp2host_isys_event_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp2host_isys_event_queue_handle 0x4A98
+#define HIVE_ADDR_sp_sp2host_isys_event_queue_handle 0x4A74
 #define HIVE_SIZE_sp_sp2host_isys_event_queue_handle 12
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_host_sp_com
 #define HIVE_MEM_host_sp_com scalar_processor_2400_dmem
-#define HIVE_ADDR_host_sp_com 0x411C
+#define HIVE_ADDR_host_sp_com 0x40F8
 #define HIVE_SIZE_host_sp_com 220
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_host_sp_com scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_host_sp_com 0x411C
+#define HIVE_ADDR_sp_host_sp_com 0x40F8
 #define HIVE_SIZE_sp_host_sp_com 220
 
-/* function ia_css_queue_get_free_space: 4919 */
+/* function ia_css_queue_get_free_space: 4B61 */
 
 /* function exec_image_pipe: 74B */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_init_dmem_data
 #define HIVE_MEM_sp_init_dmem_data scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_init_dmem_data 0x6220
+#define HIVE_ADDR_sp_init_dmem_data 0x61A0
 #define HIVE_SIZE_sp_init_dmem_data 24
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_init_dmem_data scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_init_dmem_data 0x6220
+#define HIVE_ADDR_sp_sp_init_dmem_data 0x61A0
 #define HIVE_SIZE_sp_sp_init_dmem_data 24
 
-/* function ia_css_sp_metadata_start: 59E7 */
+/* function ia_css_sp_metadata_start: 5C6C */
 
-/* function ia_css_tagger_buf_sp_is_marked: 283B */
+/* function ia_css_bufq_sp_init_buffer_queues: 2B8C */
 
-/* function ia_css_bufq_sp_init_buffer_queues: 296D */
+/* function ia_css_pipeline_sp_stop: 17E2 */
 
-/* function ia_css_pipeline_sp_stop: 17CF */
-
-/* function ia_css_tagger_sp_connect_pipes: 250E */
+/* function ia_css_tagger_sp_connect_pipes: 26EF */
 
 /* function sp_isys_copy_wait: 794 */
 
 /* function is_isp_debug_buffer_full: 3BC */
 
-/* function ia_css_dmaproxy_sp_configure_channel_from_info: 3023 */
+/* function ia_css_dmaproxy_sp_configure_channel_from_info: 325E */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_per_frame_data
 #define HIVE_MEM_sp_per_frame_data scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_per_frame_data 0x41F8
+#define HIVE_ADDR_sp_per_frame_data 0x41D4
 #define HIVE_SIZE_sp_per_frame_data 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_per_frame_data scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_per_frame_data 0x41F8
+#define HIVE_ADDR_sp_sp_per_frame_data 0x41D4
 #define HIVE_SIZE_sp_sp_per_frame_data 4
 
-/* function ia_css_rmgr_sp_vbuf_dequeue: 63F7 */
+/* function ia_css_rmgr_sp_vbuf_dequeue: 667F */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_host2sp_psys_event_queue_handle
 #define HIVE_MEM_host2sp_psys_event_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_host2sp_psys_event_queue_handle 0x4AA4
+#define HIVE_ADDR_host2sp_psys_event_queue_handle 0x4A80
 #define HIVE_SIZE_host2sp_psys_event_queue_handle 12
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_host2sp_psys_event_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_host2sp_psys_event_queue_handle 0x4AA4
+#define HIVE_ADDR_sp_host2sp_psys_event_queue_handle 0x4A80
 #define HIVE_SIZE_sp_host2sp_psys_event_queue_handle 12
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_xmem_bin_addr
 #define HIVE_MEM_xmem_bin_addr scalar_processor_2400_dmem
-#define HIVE_ADDR_xmem_bin_addr 0x41FC
+#define HIVE_ADDR_xmem_bin_addr 0x41D8
 #define HIVE_SIZE_xmem_bin_addr 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_xmem_bin_addr scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_xmem_bin_addr 0x41FC
+#define HIVE_ADDR_sp_xmem_bin_addr 0x41D8
 #define HIVE_SIZE_sp_xmem_bin_addr 4
 
-/* function tmr_clock_init: AD3 */
-
-/* function ia_css_sp_rawcopy_unlock_buffer: 5647 */
+/* function tmr_clock_init: ADC */
 
-/* function ia_css_pipeline_sp_run: 1461 */
+/* function ia_css_pipeline_sp_run: 146C */
 
-/* function memcpy: 699D */
+/* function memcpy: 6C26 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_GP_DEVICE_BASE
@@ -431,51 +415,51 @@
 #define HIVE_ADDR_sp_ia_css_thread_sp_ready_queue 0x1E4
 #define HIVE_SIZE_sp_ia_css_thread_sp_ready_queue 12
 
-/* function input_system_reg_store: B52 */
+/* function input_system_reg_store: B5B */
 
-/* function sp_dma_proxy_set_width_ab: 2EC0 */
+/* function sp_dma_proxy_set_width_ab: 30FB */
 
-/* function ia_css_isys_sp_frontend_start: 5E3D */
+/* function ia_css_isys_sp_frontend_start: 60C2 */
 
-/* function ia_css_uds_sp_scale_params: 66C1 */
+/* function ia_css_uds_sp_scale_params: 694A */
 
-/* function ia_css_circbuf_increase_size: E8E */
+/* function ia_css_circbuf_increase_size: E97 */
 
-/* function __divu: 691B */
+/* function __divu: 6BA4 */
 
-/* function ia_css_thread_sp_get_state: CD1 */
+/* function ia_css_thread_sp_get_state: CDA */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_cont_capt_stop
 #define HIVE_MEM_sem_for_cont_capt_stop scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_cont_capt_stop 0x4688
+#define HIVE_ADDR_sem_for_cont_capt_stop 0x4664
 #define HIVE_SIZE_sem_for_cont_capt_stop 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_cont_capt_stop scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_cont_capt_stop 0x4688
+#define HIVE_ADDR_sp_sem_for_cont_capt_stop 0x4664
 #define HIVE_SIZE_sp_sem_for_cont_capt_stop 20
 
-/* function thread_fiber_sp_main: E87 */
+/* function thread_fiber_sp_main: E90 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_isp_pipe_thread
 #define HIVE_MEM_sp_isp_pipe_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_pipe_thread 0x47CC
+#define HIVE_ADDR_sp_isp_pipe_thread 0x47A8
 #define HIVE_SIZE_sp_isp_pipe_thread 340
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_isp_pipe_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_isp_pipe_thread 0x47CC
+#define HIVE_ADDR_sp_sp_isp_pipe_thread 0x47A8
 #define HIVE_SIZE_sp_sp_isp_pipe_thread 340
 
-/* function ia_css_parambuf_sp_handle_parameter_sets: 1304 */
+/* function ia_css_parambuf_sp_handle_parameter_sets: 130D */
 
-/* function ia_css_spctrl_sp_set_state: 5A16 */
+/* function ia_css_spctrl_sp_set_state: 5C9B */
 
-/* function ia_css_thread_sem_sp_signal: 6B73 */
+/* function ia_css_thread_sem_sp_signal: 6DFC */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_IRQ_BASE
@@ -501,13 +485,13 @@
 #define HIVE_ADDR_sp_TIMED_CTRL_BASE 0x40
 #define HIVE_SIZE_sp_TIMED_CTRL_BASE 4
 
-/* function ia_css_isys_sp_isr: 70DF */
+/* function ia_css_isys_sp_isr: 736A */
 
-/* function ia_css_isys_sp_generate_exp_id: 61EF */
+/* function ia_css_isys_sp_generate_exp_id: 6474 */
 
-/* function ia_css_rmgr_sp_init: 62E6 */
+/* function ia_css_rmgr_sp_init: 656E */
 
-/* function ia_css_thread_sem_sp_init: 6C46 */
+/* function ia_css_thread_sem_sp_init: 6ECF */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_is_isp_requested
@@ -524,20 +508,20 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_reading_cb_frame
 #define HIVE_MEM_sem_for_reading_cb_frame scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_reading_cb_frame 0x469C
+#define HIVE_ADDR_sem_for_reading_cb_frame 0x4678
 #define HIVE_SIZE_sem_for_reading_cb_frame 40
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_reading_cb_frame scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_reading_cb_frame 0x469C
+#define HIVE_ADDR_sp_sem_for_reading_cb_frame 0x4678
 #define HIVE_SIZE_sp_sem_for_reading_cb_frame 40
 
-/* function ia_css_dmaproxy_sp_execute: 2F7B */
+/* function ia_css_dmaproxy_sp_execute: 31B6 */
 
-/* function ia_css_queue_is_empty: 47FC */
+/* function ia_css_queue_is_empty: 4A44 */
 
-/* function ia_css_pipeline_sp_has_stopped: 17C5 */
+/* function ia_css_pipeline_sp_has_stopped: 17D8 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_verbosity
@@ -551,7 +535,9 @@
 #define HIVE_ADDR_sp_verbosity 0x2680
 #define HIVE_SIZE_sp_verbosity 4
 
-/* function ia_css_circbuf_extract: F9C */
+/* function ia_css_circbuf_extract: FA5 */
+
+/* function ia_css_tagger_buf_sp_is_locked_from_start: 2A3E */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_current_sp_thread
@@ -565,52 +551,52 @@
 #define HIVE_ADDR_sp_current_sp_thread 0x1E0
 #define HIVE_SIZE_sp_current_sp_thread 4
 
-/* function ia_css_spctrl_sp_get_spid: 5A1D */
+/* function ia_css_spctrl_sp_get_spid: 5CA2 */
 
-/* function ia_css_dmaproxy_sp_read_byte_addr: 6F5F */
+/* function ia_css_dmaproxy_sp_read_byte_addr: 71E8 */
 
-/* function ia_css_rmgr_sp_uninit: 62DF */
+/* function ia_css_rmgr_sp_uninit: 6567 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_threads_stack
 #define HIVE_MEM_sp_threads_stack scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_threads_stack 0x15C
+#define HIVE_ADDR_sp_threads_stack 0x164
 #define HIVE_SIZE_sp_threads_stack 28
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_threads_stack scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_threads_stack 0x15C
+#define HIVE_ADDR_sp_sp_threads_stack 0x164
 #define HIVE_SIZE_sp_sp_threads_stack 28
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_trace_buffer_sp
 #define HIVE_MEM_trace_buffer_sp scalar_processor_2400_dmem
-#define HIVE_ADDR_trace_buffer_sp 0x1B4
+#define HIVE_ADDR_trace_buffer_sp 0x2684
 #define HIVE_SIZE_trace_buffer_sp 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_trace_buffer_sp scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_trace_buffer_sp 0x1B4
+#define HIVE_ADDR_sp_trace_buffer_sp 0x2684
 #define HIVE_SIZE_sp_trace_buffer_sp 4
 
-/* function ia_css_circbuf_peek: F7B */
+/* function ia_css_circbuf_peek: F84 */
 
-/* function ia_css_parambuf_sp_wait_for_in_param: 10B2 */
+/* function ia_css_parambuf_sp_wait_for_in_param: 10BB */
 
-/* function ia_css_isys_sp_token_map_get_exp_id: 60AA */
+/* function ia_css_isys_sp_token_map_get_exp_id: 632F */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cb_elems_param
 #define HIVE_MEM_sp_all_cb_elems_param scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_all_cb_elems_param 0x46C4
+#define HIVE_ADDR_sp_all_cb_elems_param 0x46A0
 #define HIVE_SIZE_sp_all_cb_elems_param 16
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_all_cb_elems_param scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_all_cb_elems_param 0x46C4
+#define HIVE_ADDR_sp_sp_all_cb_elems_param 0x46A0
 #define HIVE_SIZE_sp_sp_all_cb_elems_param 16
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -628,13 +614,13 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cbs_frame_desc
 #define HIVE_MEM_sp_all_cbs_frame_desc scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_all_cbs_frame_desc 0x46D4
+#define HIVE_ADDR_sp_all_cbs_frame_desc 0x46B0
 #define HIVE_SIZE_sp_all_cbs_frame_desc 8
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_all_cbs_frame_desc scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_all_cbs_frame_desc 0x46D4
+#define HIVE_ADDR_sp_sp_all_cbs_frame_desc 0x46B0
 #define HIVE_SIZE_sp_sp_all_cbs_frame_desc 8
 
 /* function sp_isys_copy_func_v2: 78D */
@@ -642,101 +628,103 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_reading_cb_param
 #define HIVE_MEM_sem_for_reading_cb_param scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_reading_cb_param 0x46DC
+#define HIVE_ADDR_sem_for_reading_cb_param 0x46B8
 #define HIVE_SIZE_sem_for_reading_cb_param 40
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_reading_cb_param scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_reading_cb_param 0x46DC
+#define HIVE_ADDR_sp_sem_for_reading_cb_param 0x46B8
 #define HIVE_SIZE_sp_sem_for_reading_cb_param 40
 
-/* function ia_css_queue_get_used_space: 48CB */
+/* function ia_css_queue_get_used_space: 4B13 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_cont_capt_start
 #define HIVE_MEM_sem_for_cont_capt_start scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_cont_capt_start 0x4704
+#define HIVE_ADDR_sem_for_cont_capt_start 0x46E0
 #define HIVE_SIZE_sem_for_cont_capt_start 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_cont_capt_start scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_cont_capt_start 0x4704
+#define HIVE_ADDR_sp_sem_for_cont_capt_start 0x46E0
 #define HIVE_SIZE_sp_sem_for_cont_capt_start 20
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_tmp_heap
 #define HIVE_MEM_tmp_heap scalar_processor_2400_dmem
-#define HIVE_ADDR_tmp_heap 0x5F08
+#define HIVE_ADDR_tmp_heap 0x5F00
 #define HIVE_SIZE_tmp_heap 640
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_tmp_heap scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_tmp_heap 0x5F08
+#define HIVE_ADDR_sp_tmp_heap 0x5F00
 #define HIVE_SIZE_sp_tmp_heap 640
 
-/* function ia_css_tagger_buf_sp_mark: 28C7 */
+/* function ia_css_rmgr_sp_get_num_vbuf: 6885 */
 
-/* function ia_css_rmgr_sp_get_num_vbuf: 65FC */
+/* function ia_css_ispctrl_sp_output_compute_dma_info: 3F59 */
 
-/* function ia_css_ispctrl_sp_output_compute_dma_info: 3D11 */
+/* function ia_css_tagger_sp_lock_exp_id: 2057 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_s3a_bufs
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_s3a_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_s3a_bufs 0x4AB0
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_s3a_bufs 0x4A8C
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_s3a_bufs 60
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_s3a_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_s3a_bufs 0x4AB0
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_s3a_bufs 0x4A8C
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_s3a_bufs 60
 
-/* function ia_css_queue_is_full: 4968 */
+/* function ia_css_queue_is_full: 4BB0 */
 
 /* function debug_buffer_init_isp: 105 */
 
-/* function ia_css_isys_sp_frontend_uninit: 5DEE */
+/* function ia_css_isys_sp_frontend_uninit: 6073 */
+
+/* function ia_css_tagger_sp_exp_id_is_locked: 1F9D */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_rmgr_sp_mipi_frame_sem
 #define HIVE_MEM_ia_css_rmgr_sp_mipi_frame_sem scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_rmgr_sp_mipi_frame_sem 0x6658
+#define HIVE_ADDR_ia_css_rmgr_sp_mipi_frame_sem 0x65D8
 #define HIVE_SIZE_ia_css_rmgr_sp_mipi_frame_sem 60
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_rmgr_sp_mipi_frame_sem scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_rmgr_sp_mipi_frame_sem 0x6658
+#define HIVE_ADDR_sp_ia_css_rmgr_sp_mipi_frame_sem 0x65D8
 #define HIVE_SIZE_sp_ia_css_rmgr_sp_mipi_frame_sem 60
 
-/* function ia_css_rmgr_sp_refcount_dump: 63D2 */
+/* function ia_css_rmgr_sp_refcount_dump: 665A */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_isp_parameters_id
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_isp_parameters_id scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_isp_parameters_id 0x4AEC
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_isp_parameters_id 0x4AC8
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_isp_parameters_id 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_isp_parameters_id scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_isp_parameters_id 0x4AEC
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_isp_parameters_id 0x4AC8
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_isp_parameters_id 20
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_pipe_threads
 #define HIVE_MEM_sp_pipe_threads scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_pipe_threads 0x148
+#define HIVE_ADDR_sp_pipe_threads 0x150
 #define HIVE_SIZE_sp_pipe_threads 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_pipe_threads scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_pipe_threads 0x148
+#define HIVE_ADDR_sp_sp_pipe_threads 0x150
 #define HIVE_SIZE_sp_sp_pipe_threads 20
 
 /* function sp_event_proxy_func: 7A2 */
@@ -744,54 +732,54 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_host2sp_isys_event_queue_handle
 #define HIVE_MEM_host2sp_isys_event_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_host2sp_isys_event_queue_handle 0x4B00
+#define HIVE_ADDR_host2sp_isys_event_queue_handle 0x4ADC
 #define HIVE_SIZE_host2sp_isys_event_queue_handle 12
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_host2sp_isys_event_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_host2sp_isys_event_queue_handle 0x4B00
+#define HIVE_ADDR_sp_host2sp_isys_event_queue_handle 0x4ADC
 #define HIVE_SIZE_sp_host2sp_isys_event_queue_handle 12
 
-/* function ia_css_thread_sp_yield: 6AE9 */
+/* function ia_css_thread_sp_yield: 6D72 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cbs_param_desc
 #define HIVE_MEM_sp_all_cbs_param_desc scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_all_cbs_param_desc 0x4718
+#define HIVE_ADDR_sp_all_cbs_param_desc 0x46F4
 #define HIVE_SIZE_sp_all_cbs_param_desc 8
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_all_cbs_param_desc scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_all_cbs_param_desc 0x4718
+#define HIVE_ADDR_sp_sp_all_cbs_param_desc 0x46F4
 #define HIVE_SIZE_sp_sp_all_cbs_param_desc 8
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_dmaproxy_sp_invalidate_tlb
 #define HIVE_MEM_ia_css_dmaproxy_sp_invalidate_tlb scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_dmaproxy_sp_invalidate_tlb 0x5AF0
+#define HIVE_ADDR_ia_css_dmaproxy_sp_invalidate_tlb 0x5AE0
 #define HIVE_SIZE_ia_css_dmaproxy_sp_invalidate_tlb 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_dmaproxy_sp_invalidate_tlb scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_dmaproxy_sp_invalidate_tlb 0x5AF0
+#define HIVE_ADDR_sp_ia_css_dmaproxy_sp_invalidate_tlb 0x5AE0
 #define HIVE_SIZE_sp_ia_css_dmaproxy_sp_invalidate_tlb 4
 
-/* function ia_css_thread_sp_fork: D5E */
+/* function ia_css_thread_sp_fork: D67 */
 
-/* function ia_css_tagger_sp_destroy: 2518 */
+/* function ia_css_tagger_sp_destroy: 26F9 */
 
-/* function ia_css_dmaproxy_sp_vmem_read: 2F04 */
+/* function ia_css_dmaproxy_sp_vmem_read: 313F */
 
-/* function ia_css_ifmtr_sp_init: 623D */
+/* function ia_css_ifmtr_sp_init: 64C5 */
 
 /* function initialize_sp_group: 75B */
 
-/* function ia_css_thread_sp_init: D8A */
+/* function ia_css_thread_sp_init: D93 */
 
-/* function ia_css_ispctrl_sp_set_stream_base_addr: 4509 */
+/* function ia_css_ispctrl_sp_set_stream_base_addr: 4751 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ISP_DMEM_BASE
@@ -817,7 +805,7 @@
 #define HIVE_ADDR_sp_SP_DMEM_BASE 0x4
 #define HIVE_SIZE_sp_SP_DMEM_BASE 4
 
-/* function ia_css_dmaproxy_sp_read: 2F9C */
+/* function ia_css_dmaproxy_sp_read: 31D7 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_raw_copy_line_count
@@ -834,27 +822,27 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_host2sp_tag_cmd_queue_handle
 #define HIVE_MEM_host2sp_tag_cmd_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_host2sp_tag_cmd_queue_handle 0x4B0C
+#define HIVE_ADDR_host2sp_tag_cmd_queue_handle 0x4AE8
 #define HIVE_SIZE_host2sp_tag_cmd_queue_handle 12
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_host2sp_tag_cmd_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_host2sp_tag_cmd_queue_handle 0x4B0C
+#define HIVE_ADDR_sp_host2sp_tag_cmd_queue_handle 0x4AE8
 #define HIVE_SIZE_sp_host2sp_tag_cmd_queue_handle 12
 
-/* function ia_css_queue_peek: 4840 */
+/* function ia_css_queue_peek: 4A88 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_flash_sp_frame_cnt
 #define HIVE_MEM_ia_css_flash_sp_frame_cnt scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_flash_sp_frame_cnt 0x49B8
+#define HIVE_ADDR_ia_css_flash_sp_frame_cnt 0x4994
 #define HIVE_SIZE_ia_css_flash_sp_frame_cnt 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_flash_sp_frame_cnt scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_flash_sp_frame_cnt 0x49B8
+#define HIVE_ADDR_sp_ia_css_flash_sp_frame_cnt 0x4994
 #define HIVE_SIZE_sp_ia_css_flash_sp_frame_cnt 4
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -884,119 +872,133 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_thread
 #define HIVE_MEM_isp_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_isp_thread 0x5E38
+#define HIVE_ADDR_isp_thread 0x5E30
 #define HIVE_SIZE_isp_thread 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isp_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_thread 0x5E38
+#define HIVE_ADDR_sp_isp_thread 0x5E30
 #define HIVE_SIZE_sp_isp_thread 4
 
-/* function encode_and_post_sp_event_non_blocking: A8A */
+/* function encode_and_post_sp_event_non_blocking: A92 */
 
-/* function ia_css_isys_sp_frontend_destroy: 5ED6 */
+/* function ia_css_isys_sp_frontend_destroy: 615B */
 
 /* function is_ddr_debug_buffer_full: 33E */
 
-/* function ia_css_isys_sp_frontend_stop: 5E06 */
+/* function ia_css_isys_sp_frontend_stop: 608B */
 
-/* function ia_css_isys_sp_token_map_init: 618A */
+/* function ia_css_isys_sp_token_map_init: 640F */
 
-/* function sp_dma_proxy_isp_write_addr: 2F1C */
+/* function sp_dma_proxy_isp_write_addr: 3157 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_threads_fiber
 #define HIVE_MEM_sp_threads_fiber scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_threads_fiber 0x194
+#define HIVE_ADDR_sp_threads_fiber 0x19C
 #define HIVE_SIZE_sp_threads_fiber 28
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_threads_fiber scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_threads_fiber 0x194
+#define HIVE_ADDR_sp_sp_threads_fiber 0x19C
 #define HIVE_SIZE_sp_sp_threads_fiber 28
 
-/* function encode_and_post_sp_event: A5B */
+/* function encode_and_post_sp_event: A63 */
 
 /* function debug_enqueue_ddr: 114 */
 
-/* function ia_css_rmgr_sp_refcount_init_vbuf: 638D */
+/* function ia_css_rmgr_sp_refcount_init_vbuf: 6615 */
 
-/* function dmaproxy_sp_read_write: 700A */
+/* function dmaproxy_sp_read_write: 7295 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_dmaproxy_isp_dma_cmd_buffer
 #define HIVE_MEM_ia_css_dmaproxy_isp_dma_cmd_buffer scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_dmaproxy_isp_dma_cmd_buffer 0x5AF4
+#define HIVE_ADDR_ia_css_dmaproxy_isp_dma_cmd_buffer 0x5AE4
 #define HIVE_SIZE_ia_css_dmaproxy_isp_dma_cmd_buffer 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_dmaproxy_isp_dma_cmd_buffer scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_dmaproxy_isp_dma_cmd_buffer 0x5AF4
+#define HIVE_ADDR_sp_ia_css_dmaproxy_isp_dma_cmd_buffer 0x5AE4
 #define HIVE_SIZE_sp_ia_css_dmaproxy_isp_dma_cmd_buffer 4
 
-/* function ia_css_dmaproxy_sp_ack: 6C6E */
+/* function ia_css_dmaproxy_sp_ack: 6EF7 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_host2sp_buffer_queue_handle
 #define HIVE_MEM_host2sp_buffer_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_host2sp_buffer_queue_handle 0x4B18
+#define HIVE_ADDR_host2sp_buffer_queue_handle 0x4AF4
 #define HIVE_SIZE_host2sp_buffer_queue_handle 480
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_host2sp_buffer_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_host2sp_buffer_queue_handle 0x4B18
+#define HIVE_ADDR_sp_host2sp_buffer_queue_handle 0x4AF4
 #define HIVE_SIZE_sp_host2sp_buffer_queue_handle 480
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_flash_sp_in_service
 #define HIVE_MEM_ia_css_flash_sp_in_service scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_flash_sp_in_service 0x3214
+#define HIVE_ADDR_ia_css_flash_sp_in_service 0x321C
 #define HIVE_SIZE_ia_css_flash_sp_in_service 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_flash_sp_in_service scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_flash_sp_in_service 0x3214
+#define HIVE_ADDR_sp_ia_css_flash_sp_in_service 0x321C
 #define HIVE_SIZE_sp_ia_css_flash_sp_in_service 4
 
-/* function ia_css_dmaproxy_sp_process: 6C9D */
+/* function ia_css_dmaproxy_sp_process: 6F26 */
 
-/* function ia_css_isys_sp_backend_rcv_acquire_ack: 5AC2 */
+/* function ia_css_tagger_buf_sp_mark_from_end: 2AEE */
 
-/* function ia_css_isys_sp_backend_pre_acquire_request: 5AD8 */
+/* function ia_css_isys_sp_backend_rcv_acquire_ack: 5D47 */
 
-/* function ia_css_ispctrl_sp_init_cs: 3402 */
+/* function ia_css_isys_sp_backend_pre_acquire_request: 5D5D */
 
-/* function ia_css_spctrl_sp_init: 5A2B */
+/* function ia_css_ispctrl_sp_init_cs: 364A */
+
+/* function ia_css_spctrl_sp_init: 5CB0 */
 
 /* function sp_event_proxy_init: 7B7 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
+#ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_previous_clock_tick
+#define HIVE_MEM_ia_css_bufq_sp_pipe_private_previous_clock_tick scalar_processor_2400_dmem
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_previous_clock_tick 0x4CD4
+#define HIVE_SIZE_ia_css_bufq_sp_pipe_private_previous_clock_tick 20
+#else
+#endif
+#endif
+#define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_previous_clock_tick scalar_processor_2400_dmem
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_previous_clock_tick 0x4CD4
+#define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_previous_clock_tick 20
+
+#ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_output
 #define HIVE_MEM_sp_output scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_output 0x4200
+#define HIVE_ADDR_sp_output 0x41DC
 #define HIVE_SIZE_sp_output 16
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_output scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_output 0x4200
+#define HIVE_ADDR_sp_sp_output 0x41DC
 #define HIVE_SIZE_sp_sp_output 16
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_sems_for_host2sp_buf_queues
 #define HIVE_MEM_ia_css_bufq_sp_sems_for_host2sp_buf_queues scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_sems_for_host2sp_buf_queues 0x4CF8
+#define HIVE_ADDR_ia_css_bufq_sp_sems_for_host2sp_buf_queues 0x4CE8
 #define HIVE_SIZE_ia_css_bufq_sp_sems_for_host2sp_buf_queues 800
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_sems_for_host2sp_buf_queues scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_sems_for_host2sp_buf_queues 0x4CF8
+#define HIVE_ADDR_sp_ia_css_bufq_sp_sems_for_host2sp_buf_queues 0x4CE8
 #define HIVE_SIZE_sp_ia_css_bufq_sp_sems_for_host2sp_buf_queues 800
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -1023,54 +1025,52 @@
 #define HIVE_ADDR_sp_INPUT_FORMATTER_BASE 0x4C
 #define HIVE_SIZE_sp_INPUT_FORMATTER_BASE 16
 
-/* function sp_dma_proxy_reset_channels: 3216 */
+/* function sp_dma_proxy_reset_channels: 345E */
 
-/* function ia_css_bufq_set_clock_tick: 2965 */
+/* function ia_css_isys_sp_backend_acquire: 5E6E */
 
-/* function ia_css_isys_sp_backend_acquire: 5BE9 */
-
-/* function ia_css_tagger_sp_update_size: 261A */
+/* function ia_css_tagger_sp_update_size: 2801 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_host_sp_queue
 #define HIVE_MEM_ia_css_bufq_host_sp_queue scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_host_sp_queue 0x5018
+#define HIVE_ADDR_ia_css_bufq_host_sp_queue 0x5008
 #define HIVE_SIZE_ia_css_bufq_host_sp_queue 2008
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_host_sp_queue scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_host_sp_queue 0x5018
+#define HIVE_ADDR_sp_ia_css_bufq_host_sp_queue 0x5008
 #define HIVE_SIZE_sp_ia_css_bufq_host_sp_queue 2008
 
-/* function thread_fiber_sp_create: DF6 */
+/* function thread_fiber_sp_create: DFF */
 
-/* function ia_css_dmaproxy_sp_set_increments: 3091 */
+/* function ia_css_dmaproxy_sp_set_increments: 32CC */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_writing_cb_frame
 #define HIVE_MEM_sem_for_writing_cb_frame scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_writing_cb_frame 0x4720
+#define HIVE_ADDR_sem_for_writing_cb_frame 0x46FC
 #define HIVE_SIZE_sem_for_writing_cb_frame 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_writing_cb_frame scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_writing_cb_frame 0x4720
+#define HIVE_ADDR_sp_sem_for_writing_cb_frame 0x46FC
 #define HIVE_SIZE_sp_sem_for_writing_cb_frame 20
 
-/* function receiver_reg_store: AFE */
+/* function receiver_reg_store: B07 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_writing_cb_param
 #define HIVE_MEM_sem_for_writing_cb_param scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_writing_cb_param 0x4734
+#define HIVE_ADDR_sem_for_writing_cb_param 0x4710
 #define HIVE_SIZE_sem_for_writing_cb_param 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_writing_cb_param scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_writing_cb_param 0x4734
+#define HIVE_ADDR_sp_sem_for_writing_cb_param 0x4710
 #define HIVE_SIZE_sp_sem_for_writing_cb_param 20
 
 /* function sp_start_isp_entry: 4F7 */
@@ -1081,45 +1081,47 @@
 #endif
 #define HIVE_ADDR_sp_sp_start_isp_entry 0x4F7
 
-/* function ia_css_tagger_buf_sp_unmark_all: 285F */
+/* function ia_css_tagger_buf_sp_unmark_all: 2A86 */
+
+/* function ia_css_tagger_buf_sp_unmark_from_start: 2AC7 */
 
-/* function ia_css_dmaproxy_sp_channel_acquire: 3245 */
+/* function ia_css_dmaproxy_sp_channel_acquire: 348D */
 
-/* function ia_css_rmgr_sp_add_num_vbuf: 65D8 */
+/* function ia_css_rmgr_sp_add_num_vbuf: 6861 */
 
-/* function ia_css_isys_sp_token_map_create: 61D6 */
+/* function ia_css_isys_sp_token_map_create: 645B */
 
-/* function __ia_css_dmaproxy_sp_wait_for_ack_text: 2EB7 */
+/* function __ia_css_dmaproxy_sp_wait_for_ack_text: 30F2 */
 
-/* function ia_css_tagger_buf_sp_push_marked: 2789 */
+/* function ia_css_tagger_buf_sp_push_marked: 298A */
 
-/* function ia_css_bufq_sp_is_dynamic_buffer: 2CE4 */
+/* function ia_css_bufq_sp_is_dynamic_buffer: 2F1F */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_group
 #define HIVE_MEM_sp_group scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_group 0x4210
+#define HIVE_ADDR_sp_group 0x41EC
 #define HIVE_SIZE_sp_group 1084
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_group scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_group 0x4210
+#define HIVE_ADDR_sp_sp_group 0x41EC
 #define HIVE_SIZE_sp_sp_group 1084
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_event_proxy_thread
 #define HIVE_MEM_sp_event_proxy_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_event_proxy_thread 0x4920
+#define HIVE_ADDR_sp_event_proxy_thread 0x48FC
 #define HIVE_SIZE_sp_event_proxy_thread 68
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_event_proxy_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_event_proxy_thread 0x4920
+#define HIVE_ADDR_sp_sp_event_proxy_thread 0x48FC
 #define HIVE_SIZE_sp_sp_event_proxy_thread 68
 
-/* function ia_css_thread_sp_kill: D24 */
+/* function ia_css_thread_sp_kill: D2D */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_cur_loc
@@ -1133,9 +1135,9 @@
 #define HIVE_ADDR_sp_cur_loc 0x2674
 #define HIVE_SIZE_sp_cur_loc 4
 
-/* function ia_css_tagger_sp_create: 25D1 */
+/* function ia_css_tagger_sp_create: 27B1 */
 
-/* function tmpmem_acquire_dmem: 6688 */
+/* function tmpmem_acquire_dmem: 6911 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_MMU_BASE
@@ -1149,38 +1151,40 @@
 #define HIVE_ADDR_sp_MMU_BASE 0x24
 #define HIVE_SIZE_sp_MMU_BASE 8
 
-/* function ia_css_dmaproxy_sp_channel_release: 322E */
+/* function ia_css_dmaproxy_sp_channel_release: 3476 */
 
-/* function ia_css_dmaproxy_sp_is_idle: 3201 */
+/* function ia_css_dmaproxy_sp_is_idle: 3449 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_qos_start
 #define HIVE_MEM_sem_for_qos_start scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_qos_start 0x4748
+#define HIVE_ADDR_sem_for_qos_start 0x4724
 #define HIVE_SIZE_sem_for_qos_start 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_qos_start scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_qos_start 0x4748
+#define HIVE_ADDR_sp_sem_for_qos_start 0x4724
 #define HIVE_SIZE_sp_sem_for_qos_start 20
 
-/* function isp_hmem_load: B92 */
+/* function isp_hmem_load: B9B */
 
-/* function ia_css_eventq_sp_send: 328A */
+/* function ia_css_eventq_sp_send: 34D2 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_isys_sp_error_cnt
 #define HIVE_MEM_ia_css_isys_sp_error_cnt scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_isys_sp_error_cnt 0x6244
+#define HIVE_ADDR_ia_css_isys_sp_error_cnt 0x61C4
 #define HIVE_SIZE_ia_css_isys_sp_error_cnt 16
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_isys_sp_error_cnt scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_isys_sp_error_cnt 0x6244
+#define HIVE_ADDR_sp_ia_css_isys_sp_error_cnt 0x61C4
 #define HIVE_SIZE_sp_ia_css_isys_sp_error_cnt 16
 
+/* function ia_css_tagger_buf_sp_unlock_from_start: 29F8 */
+
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_debug_buffer_ddr_address
 #define HIVE_MEM_debug_buffer_ddr_address scalar_processor_2400_dmem
@@ -1195,29 +1199,31 @@
 
 /* function sp_isys_copy_request: 79B */
 
-/* function ia_css_rmgr_sp_refcount_retain_vbuf: 6467 */
+/* function ia_css_rmgr_sp_refcount_retain_vbuf: 66EF */
 
-/* function ia_css_thread_sp_set_priority: D1C */
+/* function ia_css_thread_sp_set_priority: D25 */
 
-/* function sizeof_hmem: C48 */
+/* function sizeof_hmem: C51 */
 
-/* function tmpmem_release_dmem: 6675 */
+/* function tmpmem_release_dmem: 68FE */
 
 /* function cnd_input_system_cfg: 419 */
 
-/* function __ia_css_sp_rawcopy_func_critical: 7068 */
+/* function __ia_css_sp_rawcopy_func_critical: 72F3 */
 
-/* function __ia_css_dmaproxy_sp_process_text: 2DF3 */
+/* function __ia_css_dmaproxy_sp_process_text: 302E */
 
-/* function ia_css_dmaproxy_sp_set_width_exception: 307B */
+/* function ia_css_dmaproxy_sp_set_width_exception: 32B6 */
 
-/* function ia_css_flash_sp_init_internal_params: 295A */
+/* function sp_event_assert: 916 */
 
-/* function ia_css_tagger_buf_sp_pop_unmarked_and_unlocked: 263F */
+/* function ia_css_flash_sp_init_internal_params: 2B81 */
 
-/* function __modu: 6961 */
+/* function ia_css_tagger_buf_sp_pop_unmarked_and_unlocked: 2826 */
 
-/* function ia_css_dmaproxy_sp_init_isp_vector: 2ED6 */
+/* function __modu: 6BEA */
+
+/* function ia_css_dmaproxy_sp_init_isp_vector: 3111 */
 
 /* function isp_vamem_store: 0 */
 
@@ -1236,13 +1242,13 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_major_masks
 #define HIVE_MEM_major_masks scalar_processor_2400_dmem
-#define HIVE_ADDR_major_masks 0x1B0
+#define HIVE_ADDR_major_masks 0x1B8
 #define HIVE_SIZE_major_masks 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_major_masks scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_major_masks 0x1B0
+#define HIVE_ADDR_sp_major_masks 0x1B8
 #define HIVE_SIZE_sp_major_masks 4
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -1257,57 +1263,57 @@
 #define HIVE_ADDR_sp_GDC_BASE 0x44
 #define HIVE_SIZE_sp_GDC_BASE 8
 
-/* function ia_css_queue_local_init: 4B3C */
+/* function ia_css_queue_local_init: 4D84 */
 
-/* function sp_event_proxy_callout_func: 69F3 */
+/* function sp_event_proxy_callout_func: 6C7C */
 
-/* function ia_css_dmaproxy_sp_deregister_channel_from_port: 2E9E */
+/* function ia_css_dmaproxy_sp_deregister_channel_from_port: 30D9 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_thread_sp_num_ready_threads
 #define HIVE_MEM_ia_css_thread_sp_num_ready_threads scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_thread_sp_num_ready_threads 0x49AC
+#define HIVE_ADDR_ia_css_thread_sp_num_ready_threads 0x4988
 #define HIVE_SIZE_ia_css_thread_sp_num_ready_threads 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_thread_sp_num_ready_threads scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_thread_sp_num_ready_threads 0x49AC
+#define HIVE_ADDR_sp_ia_css_thread_sp_num_ready_threads 0x4988
 #define HIVE_SIZE_sp_ia_css_thread_sp_num_ready_threads 4
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_threads_stack_size
 #define HIVE_MEM_sp_threads_stack_size scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_threads_stack_size 0x178
+#define HIVE_ADDR_sp_threads_stack_size 0x180
 #define HIVE_SIZE_sp_threads_stack_size 28
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_threads_stack_size scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_threads_stack_size 0x178
+#define HIVE_ADDR_sp_sp_threads_stack_size 0x180
 #define HIVE_SIZE_sp_sp_threads_stack_size 28
 
-/* function ia_css_ispctrl_sp_isp_done_row_striping: 3CF7 */
+/* function ia_css_ispctrl_sp_isp_done_row_striping: 3F3F */
 
-/* function __ia_css_isys_sp_isr_text: 5F01 */
+/* function __ia_css_isys_sp_isr_text: 6186 */
 
-/* function ia_css_queue_dequeue: 49B0 */
+/* function ia_css_queue_dequeue: 4BF8 */
 
-/* function ia_css_dmaproxy_sp_configure_channel: 6F76 */
+/* function ia_css_dmaproxy_sp_configure_channel: 71FF */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_current_thread_fiber_sp
 #define HIVE_MEM_current_thread_fiber_sp scalar_processor_2400_dmem
-#define HIVE_ADDR_current_thread_fiber_sp 0x49B4
+#define HIVE_ADDR_current_thread_fiber_sp 0x4990
 #define HIVE_SIZE_current_thread_fiber_sp 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_current_thread_fiber_sp scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_current_thread_fiber_sp 0x49B4
+#define HIVE_ADDR_sp_current_thread_fiber_sp 0x4990
 #define HIVE_SIZE_sp_current_thread_fiber_sp 4
 
-/* function ia_css_circbuf_pop: 1034 */
+/* function ia_css_circbuf_pop: 103D */
 
 /* function irq_raise_set_token: C1 */
 
@@ -1323,81 +1329,83 @@
 #define HIVE_ADDR_sp_GPIO_BASE 0x3C
 #define HIVE_SIZE_sp_GPIO_BASE 4
 
-/* function ia_css_pipeline_acc_stage_enable: 17A5 */
+/* function ia_css_tagger_sp_unlock_exp_id: 1FC2 */
+
+/* function ia_css_pipeline_acc_stage_enable: 17B8 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_ph
 #define HIVE_MEM_isp_ph scalar_processor_2400_dmem
-#define HIVE_ADDR_isp_ph 0x6254
+#define HIVE_ADDR_isp_ph 0x61D4
 #define HIVE_SIZE_isp_ph 28
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isp_ph scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_ph 0x6254
+#define HIVE_ADDR_sp_isp_ph 0x61D4
 #define HIVE_SIZE_sp_isp_ph 28
 
-/* function ia_css_isys_sp_token_map_flush: 6113 */
+/* function ia_css_isys_sp_token_map_flush: 6398 */
 
-/* function ia_css_ispctrl_sp_init_ds: 35A0 */
+/* function ia_css_ispctrl_sp_init_ds: 37E8 */
 
-/* function get_xmem_base_addr_raw: 395A */
+/* function get_xmem_base_addr_raw: 3BA2 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cbs_param
 #define HIVE_MEM_sp_all_cbs_param scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_all_cbs_param 0x475C
+#define HIVE_ADDR_sp_all_cbs_param 0x4738
 #define HIVE_SIZE_sp_all_cbs_param 16
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_all_cbs_param scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_all_cbs_param 0x475C
+#define HIVE_ADDR_sp_sp_all_cbs_param 0x4738
 #define HIVE_SIZE_sp_sp_all_cbs_param 16
 
-/* function ia_css_circbuf_create: 1085 */
+/* function ia_css_circbuf_create: 108E */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_sp_group
 #define HIVE_MEM_sem_for_sp_group scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_sp_group 0x476C
+#define HIVE_ADDR_sem_for_sp_group 0x4748
 #define HIVE_SIZE_sem_for_sp_group 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_sp_group scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_sp_group 0x476C
+#define HIVE_ADDR_sp_sem_for_sp_group 0x4748
 #define HIVE_SIZE_sp_sem_for_sp_group 20
 
-/* function ia_css_framebuf_sp_wait_for_in_frame: 6603 */
+/* function ia_css_framebuf_sp_wait_for_in_frame: 688C */
 
-/* function ia_css_tagger_buf_sp_push_unmarked: 26B2 */
+/* function ia_css_tagger_buf_sp_push_unmarked: 2899 */
 
-/* function isp_hmem_clear: B59 */
+/* function isp_hmem_clear: B62 */
 
-/* function ia_css_framebuf_sp_release_in_frame: 6646 */
+/* function ia_css_framebuf_sp_release_in_frame: 68CF */
 
-/* function ia_css_isys_sp_backend_snd_acquire_request: 5B3B */
+/* function ia_css_isys_sp_backend_snd_acquire_request: 5DC0 */
 
-/* function ia_css_isys_sp_token_map_is_full: 5F88 */
+/* function ia_css_isys_sp_token_map_is_full: 620D */
 
-/* function input_system_acquisition_run: B27 */
+/* function input_system_acquisition_run: B30 */
 
-/* function ia_css_ispctrl_sp_start_binary: 33E0 */
+/* function ia_css_ispctrl_sp_start_binary: 3628 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_h_pipe_private_ddr_ptrs
 #define HIVE_MEM_ia_css_bufq_sp_h_pipe_private_ddr_ptrs scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 0x57F0
+#define HIVE_ADDR_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 0x57E0
 #define HIVE_SIZE_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 0x57F0
+#define HIVE_ADDR_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 0x57E0
 #define HIVE_SIZE_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 20
 
-/* function ia_css_eventq_sp_recv: 325C */
+/* function ia_css_eventq_sp_recv: 34A4 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_pool
@@ -1411,9 +1419,9 @@
 #define HIVE_ADDR_sp_isp_pool 0x2D4
 #define HIVE_SIZE_sp_isp_pool 4
 
-/* function ia_css_rmgr_sp_rel_gen: 6328 */
+/* function ia_css_rmgr_sp_rel_gen: 65B0 */
 
-/* function css_get_frame_processing_time_end: 1F74 */
+/* function css_get_frame_processing_time_end: 1F8B */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_event_any_pending_mask
@@ -1427,13 +1435,13 @@
 #define HIVE_ADDR_sp_event_any_pending_mask 0x2F0
 #define HIVE_SIZE_sp_event_any_pending_mask 8
 
-/* function ia_css_isys_sp_backend_push: 5AEC */
+/* function ia_css_isys_sp_backend_push: 5D71 */
 
 /* function sh_css_decode_tag_descr: 3D7 */
 
 /* function debug_enqueue_isp: 2E9 */
 
-/* function ia_css_spctrl_sp_uninit: 5A24 */
+/* function ia_css_spctrl_sp_uninit: 5CA9 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_HIVE_IF_SWITCH_CODE
@@ -1450,30 +1458,34 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_dis_bufs
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_dis_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_dis_bufs 0x5804
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_dis_bufs 0x57F4
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_dis_bufs 140
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_dis_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_dis_bufs 0x5804
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_dis_bufs 0x57F4
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_dis_bufs 140
 
+/* function ia_css_tagger_buf_sp_lock_from_start: 2A1B */
+
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_isp_idle
 #define HIVE_MEM_sem_for_isp_idle scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_isp_idle 0x4780
+#define HIVE_ADDR_sem_for_isp_idle 0x475C
 #define HIVE_SIZE_sem_for_isp_idle 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_isp_idle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_isp_idle 0x4780
+#define HIVE_ADDR_sp_sem_for_isp_idle 0x475C
 #define HIVE_SIZE_sp_sem_for_isp_idle 20
 
-/* function ia_css_dmaproxy_sp_write_byte_addr: 2F4A */
+/* function ia_css_dmaproxy_sp_write_byte_addr: 3185 */
+
+/* function ia_css_dmaproxy_sp_init: 30AB */
 
-/* function ia_css_dmaproxy_sp_init: 2E70 */
+/* function ia_css_bufq_sp_release_dynamic_buf_clock_tick: 2C14 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ISP_VAMEM_BASE
@@ -1490,46 +1502,46 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_rawcopy_sp_tagger
 #define HIVE_MEM_ia_css_rawcopy_sp_tagger scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_rawcopy_sp_tagger 0x61C8
+#define HIVE_ADDR_ia_css_rawcopy_sp_tagger 0x6184
 #define HIVE_SIZE_ia_css_rawcopy_sp_tagger 24
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_rawcopy_sp_tagger scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_rawcopy_sp_tagger 0x61C8
+#define HIVE_ADDR_sp_ia_css_rawcopy_sp_tagger 0x6184
 #define HIVE_SIZE_sp_ia_css_rawcopy_sp_tagger 24
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_exp_ids
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_exp_ids scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_exp_ids 0x5890
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_exp_ids 0x5880
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_exp_ids 70
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_exp_ids scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_exp_ids 0x5890
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_exp_ids 0x5880
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_exp_ids 70
 
-/* function ia_css_queue_item_load: 4C51 */
+/* function ia_css_queue_item_load: 4E99 */
 
-/* function ia_css_spctrl_sp_get_state: 5A0F */
+/* function ia_css_spctrl_sp_get_state: 5C94 */
 
-/* function ia_css_isys_sp_token_map_uninit: 6132 */
+/* function ia_css_isys_sp_token_map_uninit: 63B7 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_callout_sp_thread
 #define HIVE_MEM_callout_sp_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_callout_sp_thread 0x49A8
+#define HIVE_ADDR_callout_sp_thread 0x4984
 #define HIVE_SIZE_callout_sp_thread 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_callout_sp_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_callout_sp_thread 0x49A8
+#define HIVE_ADDR_sp_callout_sp_thread 0x4984
 #define HIVE_SIZE_sp_callout_sp_thread 4
 
-/* function thread_fiber_sp_init: E7D */
+/* function thread_fiber_sp_init: E86 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_SP_PMEM_BASE
@@ -1543,31 +1555,31 @@
 #define HIVE_ADDR_sp_SP_PMEM_BASE 0x0
 #define HIVE_SIZE_sp_SP_PMEM_BASE 4
 
-/* function ia_css_isys_sp_token_map_snd_acquire_req: 6091 */
+/* function ia_css_isys_sp_token_map_snd_acquire_req: 6316 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_isp_input_stream_format
 #define HIVE_MEM_sp_isp_input_stream_format scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_input_stream_format 0x3FE4
+#define HIVE_ADDR_sp_isp_input_stream_format 0x3FC0
 #define HIVE_SIZE_sp_isp_input_stream_format 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_isp_input_stream_format scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_isp_input_stream_format 0x3FE4
+#define HIVE_ADDR_sp_sp_isp_input_stream_format 0x3FC0
 #define HIVE_SIZE_sp_sp_isp_input_stream_format 20
 
-/* function __mod: 694D */
+/* function __mod: 6BD6 */
 
-/* function ia_css_dmaproxy_sp_init_dmem_channel: 2FB6 */
+/* function ia_css_dmaproxy_sp_init_dmem_channel: 31F1 */
 
-/* function ia_css_thread_sp_join: D4D */
+/* function ia_css_thread_sp_join: D56 */
 
-/* function ia_css_dmaproxy_sp_add_command: 704C */
+/* function ia_css_dmaproxy_sp_add_command: 72D7 */
 
-/* function ia_css_sp_metadata_thread_func: 5885 */
+/* function ia_css_sp_metadata_thread_func: 5B40 */
 
-/* function __sp_event_proxy_func_critical: 69E0 */
+/* function __sp_event_proxy_func_critical: 6C69 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_dmaproxy_sp_proxy_status
@@ -1581,29 +1593,27 @@
 #define HIVE_ADDR_sp_dmaproxy_sp_proxy_status 0x208
 #define HIVE_SIZE_sp_dmaproxy_sp_proxy_status 4
 
-/* function ia_css_sp_metadata_wait: 59D6 */
+/* function ia_css_sp_metadata_wait: 5C5B */
 
-/* function ia_css_circbuf_peek_from_start: F5A */
+/* function ia_css_circbuf_peek_from_start: F63 */
 
-/* function ia_css_sp_rawcopy_buffer_is_locked: 56D4 */
+/* function ia_css_event_sp_encode: 3530 */
 
-/* function ia_css_event_sp_encode: 32E8 */
-
-/* function ia_css_thread_sp_run: DC0 */
+/* function ia_css_thread_sp_run: DC9 */
 
 /* function sp_isys_copy_func: 77D */
 
-/* function ia_css_isys_sp_backend_flush: 5B5B */
+/* function ia_css_isys_sp_backend_flush: 5DE0 */
 
-/* function ia_css_isys_sp_backend_frame_exists: 5A7A */
+/* function ia_css_isys_sp_backend_frame_exists: 5CFF */
 
-/* function ia_css_sp_isp_param_init_isp_memories: 468B */
+/* function ia_css_sp_isp_param_init_isp_memories: 48D3 */
 
 /* function register_isr: 901 */
 
 /* function irq_raise: D3 */
 
-/* function ia_css_dmaproxy_sp_mmu_invalidate: 2DAE */
+/* function ia_css_dmaproxy_sp_mmu_invalidate: 2FE9 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_HIVE_IF_SRST_ADDRESS
@@ -1617,27 +1627,27 @@
 #define HIVE_ADDR_sp_HIVE_IF_SRST_ADDRESS 0x1BC
 #define HIVE_SIZE_sp_HIVE_IF_SRST_ADDRESS 16
 
-/* function pipeline_sp_initialize_stage: 18C4 */
+/* function pipeline_sp_initialize_stage: 18D7 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_isys_sp_frontend_states
 #define HIVE_MEM_ia_css_isys_sp_frontend_states scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_isys_sp_frontend_states 0x6238
+#define HIVE_ADDR_ia_css_isys_sp_frontend_states 0x61B8
 #define HIVE_SIZE_ia_css_isys_sp_frontend_states 12
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_isys_sp_frontend_states scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_isys_sp_frontend_states 0x6238
+#define HIVE_ADDR_sp_ia_css_isys_sp_frontend_states 0x61B8
 #define HIVE_SIZE_sp_ia_css_isys_sp_frontend_states 12
 
-/* function ia_css_dmaproxy_sp_read_byte_addr_mmio: 6F48 */
+/* function ia_css_dmaproxy_sp_read_byte_addr_mmio: 71D1 */
 
-/* function ia_css_ispctrl_sp_done_ds: 3583 */
+/* function ia_css_ispctrl_sp_done_ds: 37CB */
 
-/* function ia_css_sp_isp_param_get_mem_inits: 4666 */
+/* function ia_css_sp_isp_param_get_mem_inits: 48AE */
 
-/* function ia_css_parambuf_sp_init_buffer_queues: 1449 */
+/* function ia_css_parambuf_sp_init_buffer_queues: 1452 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_vbuf_pfp_spref
@@ -1651,7 +1661,7 @@
 #define HIVE_ADDR_sp_vbuf_pfp_spref 0x2DC
 #define HIVE_SIZE_sp_vbuf_pfp_spref 4
 
-/* function input_system_cfg: AE2 */
+/* function input_system_cfg: AEB */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ISP_HMEM_BASE
@@ -1668,148 +1678,132 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_frames
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_frames scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_frames 0x58D8
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_frames 0x58C8
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_frames 280
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_frames scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_frames 0x58D8
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_frames 0x58C8
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_frames 280
 
-/* function ia_css_isys_sp_backend_release: 5BD0 */
+/* function ia_css_isys_sp_backend_release: 5E55 */
 
-/* function ia_css_isys_sp_backend_destroy: 5BFA */
+/* function ia_css_isys_sp_backend_destroy: 5E7F */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp2host_buffer_queue_handle
 #define HIVE_MEM_sp2host_buffer_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp2host_buffer_queue_handle 0x59F0
+#define HIVE_ADDR_sp2host_buffer_queue_handle 0x59E0
 #define HIVE_SIZE_sp2host_buffer_queue_handle 96
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp2host_buffer_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp2host_buffer_queue_handle 0x59F0
+#define HIVE_ADDR_sp_sp2host_buffer_queue_handle 0x59E0
 #define HIVE_SIZE_sp_sp2host_buffer_queue_handle 96
 
-/* function ia_css_isys_sp_token_map_check_mipi_frame_size: 6055 */
+/* function ia_css_isys_sp_token_map_check_mipi_frame_size: 62DA */
 
-/* function ia_css_ispctrl_sp_init_isp_vars: 436C */
+/* function ia_css_ispctrl_sp_init_isp_vars: 45B4 */
 
-/* function ia_css_isys_sp_frontend_has_empty_mipi_buffer_cb: 5C4D */
+/* function ia_css_isys_sp_frontend_has_empty_mipi_buffer_cb: 5ED2 */
 
-/* function sp_warning: 916 */
+/* function sp_warning: 941 */
 
-/* function ia_css_rmgr_sp_vbuf_enqueue: 6427 */
+/* function ia_css_rmgr_sp_vbuf_enqueue: 66AF */
 
-/* function ia_css_tagger_sp_tag_exp_id: 1F86 */
+/* function ia_css_tagger_sp_tag_exp_id: 20D4 */
 
-/* function ia_css_dmaproxy_sp_write: 2F61 */
+/* function ia_css_dmaproxy_sp_write: 319C */
 
-#ifndef HIVE_MULTIPLE_PROGRAMS
-#ifndef HIVE_MEM_raw_buff_pool_lock_params_handles
-#define HIVE_MEM_raw_buff_pool_lock_params_handles scalar_processor_2400_dmem
-#define HIVE_ADDR_raw_buff_pool_lock_params_handles 0x61E0
-#define HIVE_SIZE_raw_buff_pool_lock_params_handles 60
-#else
-#endif
-#endif
-#define HIVE_MEM_sp_raw_buff_pool_lock_params_handles scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_raw_buff_pool_lock_params_handles 0x61E0
-#define HIVE_SIZE_sp_raw_buff_pool_lock_params_handles 60
-
-/* function ia_css_parambuf_sp_release_in_param: 12C9 */
+/* function ia_css_parambuf_sp_release_in_param: 12D2 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_irq_sw_interrupt_token
 #define HIVE_MEM_irq_sw_interrupt_token scalar_processor_2400_dmem
-#define HIVE_ADDR_irq_sw_interrupt_token 0x3FE0
+#define HIVE_ADDR_irq_sw_interrupt_token 0x3FBC
 #define HIVE_SIZE_irq_sw_interrupt_token 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_irq_sw_interrupt_token scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_irq_sw_interrupt_token 0x3FE0
+#define HIVE_ADDR_sp_irq_sw_interrupt_token 0x3FBC
 #define HIVE_SIZE_sp_irq_sw_interrupt_token 4
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_isp_addresses
 #define HIVE_MEM_sp_isp_addresses scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_addresses 0x5E3C
+#define HIVE_ADDR_sp_isp_addresses 0x5E34
 #define HIVE_SIZE_sp_isp_addresses 172
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_isp_addresses scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_isp_addresses 0x5E3C
+#define HIVE_ADDR_sp_sp_isp_addresses 0x5E34
 #define HIVE_SIZE_sp_sp_isp_addresses 172
 
-/* function ia_css_rmgr_sp_acq_gen: 634C */
+/* function ia_css_rmgr_sp_acq_gen: 65D4 */
 
-/* function receiver_reg_load: AF7 */
+/* function receiver_reg_load: B00 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isps
 #define HIVE_MEM_isps scalar_processor_2400_dmem
-#define HIVE_ADDR_isps 0x6270
+#define HIVE_ADDR_isps 0x61F0
 #define HIVE_SIZE_isps 28
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isps scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isps 0x6270
+#define HIVE_ADDR_sp_isps 0x61F0
 #define HIVE_SIZE_sp_isps 28
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_host_sp_queues_initialized
 #define HIVE_MEM_host_sp_queues_initialized scalar_processor_2400_dmem
-#define HIVE_ADDR_host_sp_queues_initialized 0x3FF8
+#define HIVE_ADDR_host_sp_queues_initialized 0x3FD4
 #define HIVE_SIZE_host_sp_queues_initialized 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_host_sp_queues_initialized scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_host_sp_queues_initialized 0x3FF8
+#define HIVE_ADDR_sp_host_sp_queues_initialized 0x3FD4
 #define HIVE_SIZE_sp_host_sp_queues_initialized 4
 
-/* function ia_css_queue_uninit: 4AFA */
-
-/* function ia_css_tagger_buf_sp_is_locked: 27F7 */
+/* function ia_css_queue_uninit: 4D42 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_ispctrl_sp_isp_started
 #define HIVE_MEM_ia_css_ispctrl_sp_isp_started scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_ispctrl_sp_isp_started 0x5AF8
+#define HIVE_ADDR_ia_css_ispctrl_sp_isp_started 0x5AE8
 #define HIVE_SIZE_ia_css_ispctrl_sp_isp_started 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_ispctrl_sp_isp_started scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_ispctrl_sp_isp_started 0x5AF8
+#define HIVE_ADDR_sp_ia_css_ispctrl_sp_isp_started 0x5AE8
 #define HIVE_SIZE_sp_ia_css_ispctrl_sp_isp_started 4
 
-/* function ia_css_bufq_sp_release_dynamic_buf: 29F5 */
-
-/* function ia_css_sp_metadata_thread_terminate: 59BE */
+/* function ia_css_bufq_sp_release_dynamic_buf: 2C68 */
 
-/* function ia_css_dmaproxy_sp_set_height_exception: 3069 */
+/* function ia_css_dmaproxy_sp_set_height_exception: 32A4 */
 
-/* function ia_css_dmaproxy_sp_init_vmem_channel: 2FEC */
+/* function ia_css_dmaproxy_sp_init_vmem_channel: 3227 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_num_ready_threads
 #define HIVE_MEM_num_ready_threads scalar_processor_2400_dmem
-#define HIVE_ADDR_num_ready_threads 0x49B0
+#define HIVE_ADDR_num_ready_threads 0x498C
 #define HIVE_SIZE_num_ready_threads 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_num_ready_threads scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_num_ready_threads 0x49B0
+#define HIVE_ADDR_sp_num_ready_threads 0x498C
 #define HIVE_SIZE_sp_num_ready_threads 4
 
-/* function ia_css_dmaproxy_sp_write_byte_addr_mmio: 2F33 */
+/* function ia_css_dmaproxy_sp_write_byte_addr_mmio: 316E */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_vbuf_spref
@@ -1826,54 +1820,52 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_metadata_thread
 #define HIVE_MEM_sp_metadata_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_metadata_thread 0x4964
+#define HIVE_ADDR_sp_metadata_thread 0x4940
 #define HIVE_SIZE_sp_metadata_thread 68
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_metadata_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_metadata_thread 0x4964
+#define HIVE_ADDR_sp_sp_metadata_thread 0x4940
 #define HIVE_SIZE_sp_sp_metadata_thread 68
 
-/* function ia_css_queue_enqueue: 4A3A */
+/* function ia_css_queue_enqueue: 4C82 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_flash_sp_request
 #define HIVE_MEM_ia_css_flash_sp_request scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_flash_sp_request 0x49BC
+#define HIVE_ADDR_ia_css_flash_sp_request 0x4998
 #define HIVE_SIZE_ia_css_flash_sp_request 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_flash_sp_request scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_flash_sp_request 0x49BC
+#define HIVE_ADDR_sp_ia_css_flash_sp_request 0x4998
 #define HIVE_SIZE_sp_ia_css_flash_sp_request 4
 
-/* function ia_css_dmaproxy_sp_vmem_write: 2EED */
+/* function ia_css_dmaproxy_sp_vmem_write: 3128 */
 
-/* function ia_css_tagger_buf_sp_unmark: 28A0 */
-
-/* function ia_css_isys_sp_token_map_snd_capture_req: 60B7 */
+/* function ia_css_isys_sp_token_map_snd_capture_req: 633C */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_reading_if
 #define HIVE_MEM_sem_for_reading_if scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_reading_if 0x4794
+#define HIVE_ADDR_sem_for_reading_if 0x4770
 #define HIVE_SIZE_sem_for_reading_if 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_reading_if scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_reading_if 0x4794
+#define HIVE_ADDR_sp_sem_for_reading_if 0x4770
 #define HIVE_SIZE_sp_sem_for_reading_if 20
 
-/* function sp_generate_interrupts: 9B8 */
+/* function sp_generate_interrupts: 9C0 */
 
-/* function ia_css_pipeline_sp_start: 17D7 */
+/* function ia_css_pipeline_sp_start: 17EA */
 
-/* function ia_css_sp_rawcopy_init: 50D5 */
+/* function ia_css_sp_rawcopy_init: 531D */
 
-/* function tmr_clock_read: AC9 */
+/* function tmr_clock_read: AD2 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ISP_BAMEM_BASE
@@ -1887,65 +1879,67 @@
 #define HIVE_ADDR_sp_ISP_BAMEM_BASE 0x2E8
 #define HIVE_SIZE_sp_ISP_BAMEM_BASE 4
 
-/* function ia_css_isys_sp_frontend_rcv_capture_ack: 5D05 */
+/* function ia_css_isys_sp_frontend_rcv_capture_ack: 5F8A */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_sems_for_sp2host_buf_queues
 #define HIVE_MEM_ia_css_bufq_sp_sems_for_sp2host_buf_queues scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_sems_for_sp2host_buf_queues 0x5A50
+#define HIVE_ADDR_ia_css_bufq_sp_sems_for_sp2host_buf_queues 0x5A40
 #define HIVE_SIZE_ia_css_bufq_sp_sems_for_sp2host_buf_queues 160
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues 0x5A50
+#define HIVE_ADDR_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues 0x5A40
 #define HIVE_SIZE_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues 160
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_mem_map
 #define HIVE_MEM_mem_map scalar_processor_2400_dmem
-#define HIVE_ADDR_mem_map 0x3FFC
+#define HIVE_ADDR_mem_map 0x3FD8
 #define HIVE_SIZE_mem_map 284
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_mem_map scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_mem_map 0x3FFC
+#define HIVE_ADDR_sp_mem_map 0x3FD8
 #define HIVE_SIZE_sp_mem_map 284
 
-/* function css_get_frame_processing_time_start: 1F7D */
+/* function css_get_frame_processing_time_start: 1F94 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cbs_frame
 #define HIVE_MEM_sp_all_cbs_frame scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_all_cbs_frame 0x47A8
+#define HIVE_ADDR_sp_all_cbs_frame 0x4784
 #define HIVE_SIZE_sp_all_cbs_frame 16
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_all_cbs_frame scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_all_cbs_frame 0x47A8
+#define HIVE_ADDR_sp_sp_all_cbs_frame 0x4784
 #define HIVE_SIZE_sp_sp_all_cbs_frame 16
 
-/* function thread_sp_queue_print: DDD */
+/* function thread_sp_queue_print: DE6 */
 
-/* function sp_notify_eof: 964 */
+/* function sp_notify_eof: 96C */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_str2mem
 #define HIVE_MEM_sem_for_str2mem scalar_processor_2400_dmem
-#define HIVE_ADDR_sem_for_str2mem 0x47B8
+#define HIVE_ADDR_sem_for_str2mem 0x4794
 #define HIVE_SIZE_sem_for_str2mem 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sem_for_str2mem scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sem_for_str2mem 0x47B8
+#define HIVE_ADDR_sp_sem_for_str2mem 0x4794
 #define HIVE_SIZE_sp_sem_for_str2mem 20
 
-/* function ia_css_bufq_sp_acquire_dynamic_buf: 2C02 */
+/* function ia_css_tagger_buf_sp_is_marked_from_start: 2A62 */
+
+/* function ia_css_bufq_sp_acquire_dynamic_buf: 2E42 */
 
-/* function ia_css_circbuf_destroy: 107C */
+/* function ia_css_circbuf_destroy: 1085 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ISP_PMEM_BASE
@@ -1959,38 +1953,38 @@
 #define HIVE_ADDR_sp_ISP_PMEM_BASE 0xC
 #define HIVE_SIZE_sp_ISP_PMEM_BASE 4
 
-/* function ia_css_sp_isp_param_mem_load: 45EE */
+/* function ia_css_sp_isp_param_mem_load: 4836 */
 
-/* function __div: 6905 */
+/* function __div: 6B8E */
 
-/* function ia_css_isys_sp_frontend_create: 5EE7 */
+/* function ia_css_isys_sp_frontend_create: 616C */
 
-/* function ia_css_rmgr_sp_refcount_release_vbuf: 6446 */
+/* function ia_css_rmgr_sp_refcount_release_vbuf: 66CE */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_flash_sp_in_use
 #define HIVE_MEM_ia_css_flash_sp_in_use scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_flash_sp_in_use 0x49C0
+#define HIVE_ADDR_ia_css_flash_sp_in_use 0x499C
 #define HIVE_SIZE_ia_css_flash_sp_in_use 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_flash_sp_in_use scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_flash_sp_in_use 0x49C0
+#define HIVE_ADDR_sp_ia_css_flash_sp_in_use 0x499C
 #define HIVE_SIZE_sp_ia_css_flash_sp_in_use 4
 
-/* function ia_css_thread_sem_sp_wait: 6BBE */
+/* function ia_css_thread_sem_sp_wait: 6E47 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_sleep_mode
 #define HIVE_MEM_sp_sleep_mode scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sleep_mode 0x4118
+#define HIVE_ADDR_sp_sleep_mode 0x40F4
 #define HIVE_SIZE_sp_sleep_mode 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_sleep_mode scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_sleep_mode 0x4118
+#define HIVE_ADDR_sp_sp_sleep_mode 0x40F4
 #define HIVE_SIZE_sp_sp_sleep_mode 4
 
 /* function mmu_invalidate_cache: EA */
@@ -1998,29 +1992,29 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_max_cb_elems
 #define HIVE_MEM_sp_max_cb_elems scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_max_cb_elems 0x140
+#define HIVE_ADDR_sp_max_cb_elems 0x148
 #define HIVE_SIZE_sp_max_cb_elems 8
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_max_cb_elems scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_max_cb_elems 0x140
+#define HIVE_ADDR_sp_sp_max_cb_elems 0x148
 #define HIVE_SIZE_sp_sp_max_cb_elems 8
 
-/* function ia_css_dmaproxy_sp_register_channel_to_port: 2EAB */
+/* function ia_css_dmaproxy_sp_register_channel_to_port: 30E6 */
 
-/* function ia_css_queue_remote_init: 4B1C */
+/* function ia_css_queue_remote_init: 4D64 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_stop_req
 #define HIVE_MEM_isp_stop_req scalar_processor_2400_dmem
-#define HIVE_ADDR_isp_stop_req 0x464C
+#define HIVE_ADDR_isp_stop_req 0x4628
 #define HIVE_SIZE_isp_stop_req 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isp_stop_req scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_stop_req 0x464C
+#define HIVE_ADDR_sp_isp_stop_req 0x4628
 #define HIVE_SIZE_sp_isp_stop_req 4
 
 #define HIVE_ICACHE_sp_critical_SEGMENT_START 0
-- 
1.7.9.5

