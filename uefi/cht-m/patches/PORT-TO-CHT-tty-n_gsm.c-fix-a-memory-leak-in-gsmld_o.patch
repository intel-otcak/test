From 1f895bb6609534ef8fa663f36d7db1d32f5b57d7 Mon Sep 17 00:00:00 2001
From: "xinhui.pan" <xinhuix.pan@intel.com>
Date: Wed, 27 May 2015 13:44:30 +0800
Subject: [PATCH] [PORT TO CHT]tty/n_gsm.c: fix a memory leak in gsmld_open

If gsmld_attach_gsm fails, mux is not used anymore.
gsmld_close will not be called to do the cleanup work.
that always cause memory leak.

Change-Id: I135feba3b2a51b1ab7046fd93bf41082d5bb72af
Tracked-On: https://jira01.devtools.intel.com/browse/AKP-1778
Signed-off-by: xinhui.pan <xinhuiX.pan@intel.com>
Reviewed-by: Zhang Yanmin <yanmin_zhang@linux.intel.com>
---
 drivers/tty/n_gsm.c | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/drivers/tty/n_gsm.c b/drivers/tty/n_gsm.c
index bf95a485d95a..a90662976baa 100644
--- a/drivers/tty/n_gsm.c
+++ b/drivers/tty/n_gsm.c
@@ -2588,6 +2588,7 @@ static void gsmld_close(struct tty_struct *tty)
 static int gsmld_open(struct tty_struct *tty)
 {
 	struct gsm_mux *gsm;
+	int ret;
 
 	if (tty->ops->write == NULL)
 		return -EINVAL;
@@ -2603,7 +2604,11 @@ static int gsmld_open(struct tty_struct *tty)
 
 	/* Attach the initial passive connection */
 	gsm->encoding = 1;
-	return gsmld_attach_gsm(tty, gsm);
+
+	ret = gsmld_attach_gsm(tty, gsm);
+	if (ret != 0)
+		mux_put(gsm);
+	return ret;
 }
 
 /**
-- 
1.9.1

