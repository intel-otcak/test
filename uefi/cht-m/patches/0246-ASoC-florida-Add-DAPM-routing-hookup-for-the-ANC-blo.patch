From 2d73dd6eba3114096f232c0c55634713f2b7156d Mon Sep 17 00:00:00 2001
From: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date: Tue, 1 Apr 2014 15:31:44 +0100
Subject: [PATCH 246/351] ASoC: florida: Add DAPM/routing hookup for the ANC
 block

The Florida device contains a hardware ANC block, this patch connects up
controls and routing for this.

Change-Id: I344e3ad76b34620a8834ce1846c17efe66d1072f
Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
---
 sound/soc/codecs/arizona.c |  139 ++++++++++++++++++++++++++++++++++++++++++++
 sound/soc/codecs/arizona.h |    9 +++
 sound/soc/codecs/florida.c |  109 ++++++++++++++++++++++++++++++++++
 3 files changed, 257 insertions(+)

diff --git a/sound/soc/codecs/arizona.c b/sound/soc/codecs/arizona.c
index f4858fc..556b85a 100644
--- a/sound/soc/codecs/arizona.c
+++ b/sound/soc/codecs/arizona.c
@@ -713,6 +713,122 @@ const struct soc_enum arizona_in_dmic_osr[] = {
 };
 EXPORT_SYMBOL_GPL(arizona_in_dmic_osr);
 
+static const char *arizona_anc_input_src_text[] = {
+	"None", "IN1L", "IN1R", "IN1L + IN1R", "IN2L", "IN2R", "IN2L + IN2R",
+	"IN3L", "IN3R", "IN3L + IN3R", "IN4L", "IN4R", "IN4L + IN4R",
+};
+static const int arizona_anc_input_src_val[] = {
+	0x0000, 0x0101, 0x0201, 0x0301, 0x0102, 0x0202, 0x0302,
+	0x0103, 0x0203, 0x0303, 0x0104, 0x0204, 0x0304,
+};
+
+int arizona_put_anc_input(struct snd_kcontrol *kcontrol,
+			  struct snd_ctl_elem_value *ucontrol)
+{
+	struct snd_soc_dapm_widget_list *wlist = snd_kcontrol_chip(kcontrol);
+	struct snd_soc_dapm_widget *widget = wlist->widgets[0];
+	struct snd_soc_codec *codec = widget->codec;
+	struct soc_enum *e =
+		(struct soc_enum *)kcontrol->private_value;
+	int sel = ucontrol->value.enumerated.item[0];
+	unsigned int val, mask, shift;
+
+	if (sel >= e->max)
+		return -EINVAL;
+
+	switch (e->reg) {
+	case ARIZONA_FCL_ADC_REFORMATTER_CONTROL:
+		mask = ARIZONA_IN_RXANCL_SEL_MASK;
+		shift = ARIZONA_IN_RXANCL_SEL_SHIFT;
+		break;
+	case ARIZONA_FCR_ADC_REFORMATTER_CONTROL:
+		mask = ARIZONA_IN_RXANCR_SEL_MASK;
+		shift = ARIZONA_IN_RXANCR_SEL_SHIFT;
+		break;
+	default:
+		return -EINVAL;
+	}
+
+	val = (e->values[sel] & 0xFF00) >> 8;
+	snd_soc_write(codec, e->reg, val << e->shift_l);
+
+	val = (e->values[sel] & 0xFF);
+	snd_soc_update_bits(codec, ARIZONA_ANC_SRC, mask, val << shift);
+
+	return snd_soc_dapm_put_enum_virt(kcontrol, ucontrol);
+}
+EXPORT_SYMBOL_GPL(arizona_put_anc_input);
+
+const struct soc_enum arizona_anc_input_src[] = {
+	SOC_VALUE_ENUM_SINGLE(ARIZONA_FCL_ADC_REFORMATTER_CONTROL,
+			      ARIZONA_FCL_MIC_MODE_SEL_SHIFT, 0,
+			      ARRAY_SIZE(arizona_anc_input_src_text),
+			      arizona_anc_input_src_text,
+			      arizona_anc_input_src_val),
+	SOC_VALUE_ENUM_SINGLE(ARIZONA_FCR_ADC_REFORMATTER_CONTROL,
+			      ARIZONA_FCR_MIC_MODE_SEL_SHIFT, 0,
+			      ARRAY_SIZE(arizona_anc_input_src_text),
+			      arizona_anc_input_src_text,
+			      arizona_anc_input_src_val),
+};
+EXPORT_SYMBOL_GPL(arizona_anc_input_src);
+
+static const char *arizona_output_anc_src_text[] = {
+	"None", "RXANCL", "RXANCR",
+};
+
+const struct soc_enum arizona_output_anc_src[] = {
+	SOC_ENUM_SINGLE(ARIZONA_OUTPUT_PATH_CONFIG_1L,
+			ARIZONA_OUT1L_ANC_SRC_SHIFT,
+			ARRAY_SIZE(arizona_output_anc_src_text),
+			arizona_output_anc_src_text),
+	SOC_ENUM_SINGLE(ARIZONA_OUTPUT_PATH_CONFIG_1R,
+			ARIZONA_OUT1R_ANC_SRC_SHIFT,
+			ARRAY_SIZE(arizona_output_anc_src_text),
+			arizona_output_anc_src_text),
+	SOC_ENUM_SINGLE(ARIZONA_OUTPUT_PATH_CONFIG_2L,
+			ARIZONA_OUT2L_ANC_SRC_SHIFT,
+			ARRAY_SIZE(arizona_output_anc_src_text),
+			arizona_output_anc_src_text),
+	SOC_ENUM_SINGLE(ARIZONA_OUTPUT_PATH_CONFIG_2R,
+			ARIZONA_OUT2R_ANC_SRC_SHIFT,
+			ARRAY_SIZE(arizona_output_anc_src_text),
+			arizona_output_anc_src_text),
+	SOC_ENUM_SINGLE(ARIZONA_OUTPUT_PATH_CONFIG_3L,
+			ARIZONA_OUT3L_ANC_SRC_SHIFT,
+			ARRAY_SIZE(arizona_output_anc_src_text),
+			arizona_output_anc_src_text),
+	SOC_ENUM_SINGLE(ARIZONA_DAC_VOLUME_LIMIT_3R,
+			ARIZONA_OUT3R_ANC_SRC_SHIFT,
+			ARRAY_SIZE(arizona_output_anc_src_text),
+			arizona_output_anc_src_text),
+	SOC_ENUM_SINGLE(ARIZONA_OUTPUT_PATH_CONFIG_4L,
+			ARIZONA_OUT4L_ANC_SRC_SHIFT,
+			ARRAY_SIZE(arizona_output_anc_src_text),
+			arizona_output_anc_src_text),
+	SOC_ENUM_SINGLE(ARIZONA_OUTPUT_PATH_CONFIG_4R,
+			ARIZONA_OUT4R_ANC_SRC_SHIFT,
+			ARRAY_SIZE(arizona_output_anc_src_text),
+			arizona_output_anc_src_text),
+	SOC_ENUM_SINGLE(ARIZONA_OUTPUT_PATH_CONFIG_5L,
+			ARIZONA_OUT5L_ANC_SRC_SHIFT,
+			ARRAY_SIZE(arizona_output_anc_src_text),
+			arizona_output_anc_src_text),
+	SOC_ENUM_SINGLE(ARIZONA_OUTPUT_PATH_CONFIG_5R,
+			ARIZONA_OUT5R_ANC_SRC_SHIFT,
+			ARRAY_SIZE(arizona_output_anc_src_text),
+			arizona_output_anc_src_text),
+	SOC_ENUM_SINGLE(ARIZONA_OUTPUT_PATH_CONFIG_6L,
+			ARIZONA_OUT6L_ANC_SRC_SHIFT,
+			ARRAY_SIZE(arizona_output_anc_src_text),
+			arizona_output_anc_src_text),
+	SOC_ENUM_SINGLE(ARIZONA_OUTPUT_PATH_CONFIG_6R,
+			ARIZONA_OUT6R_ANC_SRC_SHIFT,
+			ARRAY_SIZE(arizona_output_anc_src_text),
+			arizona_output_anc_src_text),
+};
+EXPORT_SYMBOL_GPL(arizona_output_anc_src);
+
 static void arizona_in_set_vu(struct snd_soc_codec *codec, int ena)
 {
 	struct arizona_priv *priv = snd_soc_codec_get_drvdata(codec);
@@ -1117,6 +1233,29 @@ int arizona_hp_ev(struct snd_soc_dapm_widget *w,
 }
 EXPORT_SYMBOL_GPL(arizona_hp_ev);
 
+int arizona_anc_ev(struct snd_soc_dapm_widget *w,
+		   struct snd_kcontrol *kcontrol,
+		   int event)
+{
+	unsigned int mask = 0x3 << w->shift;
+	unsigned int val;
+
+	switch (event) {
+	case SND_SOC_DAPM_POST_PMU:
+		val = 1 << w->shift;
+		break;
+	case SND_SOC_DAPM_PRE_PMD:
+		val = 1 << (w->shift + 1);
+	default:
+		return 0;
+	}
+
+	snd_soc_update_bits(w->codec, ARIZONA_CLOCK_CONTROL, mask, val);
+
+	return 0;
+}
+EXPORT_SYMBOL_GPL(arizona_anc_ev);
+
 static unsigned int arizona_sysclk_48k_rates[] = {
 	6144000,
 	12288000,
diff --git a/sound/soc/codecs/arizona.h b/sound/soc/codecs/arizona.h
index b370c2c..000b768 100644
--- a/sound/soc/codecs/arizona.h
+++ b/sound/soc/codecs/arizona.h
@@ -209,6 +209,12 @@ extern const struct soc_enum arizona_ng_hold;
 extern const struct soc_enum arizona_in_hpf_cut_enum;
 extern const struct soc_enum arizona_in_dmic_osr[];
 
+extern const struct soc_enum arizona_anc_input_src[];
+extern const struct soc_enum arizona_output_anc_src[];
+
+extern int arizona_put_anc_input(struct snd_kcontrol *kcontrol,
+			  struct snd_ctl_elem_value *ucontrol);
+
 extern int arizona_in_ev(struct snd_soc_dapm_widget *w,
 			 struct snd_kcontrol *kcontrol,
 			 int event);
@@ -218,6 +224,9 @@ extern int arizona_out_ev(struct snd_soc_dapm_widget *w,
 extern int arizona_hp_ev(struct snd_soc_dapm_widget *w,
 			 struct snd_kcontrol *kcontrol,
 			 int event);
+extern int arizona_anc_ev(struct snd_soc_dapm_widget *w,
+			  struct snd_kcontrol *kcontrol,
+			  int event);
 
 extern int arizona_set_sysclk(struct snd_soc_codec *codec, int clk_id,
 			      int source, unsigned int freq, int dir);
diff --git a/sound/soc/codecs/florida.c b/sound/soc/codecs/florida.c
index 70c8ce0..09843da 100644
--- a/sound/soc/codecs/florida.c
+++ b/sound/soc/codecs/florida.c
@@ -264,6 +264,30 @@ static DECLARE_TLV_DB_SCALE(ng_tlv, -10200, 600, 0);
 	SOC_SINGLE(name " NG SPKDAT2L Switch", base, 10, 1, 0), \
 	SOC_SINGLE(name " NG SPKDAT2R Switch", base, 11, 1, 0)
 
+#define FLORIDA_RXANC_INPUT_ROUTES(widget, name) \
+	{ widget, NULL, name " Input" }, \
+	{ name " Input", "IN1L", "IN1L PGA" }, \
+	{ name " Input", "IN1R", "IN1R PGA" }, \
+	{ name " Input", "IN1L + IN1R", "IN1L PGA" }, \
+	{ name " Input", "IN1L + IN1R", "IN1R PGA" }, \
+	{ name " Input", "IN2L", "IN2L PGA" }, \
+	{ name " Input", "IN2R", "IN2R PGA" }, \
+	{ name " Input", "IN2L + IN2R", "IN2L PGA" }, \
+	{ name " Input", "IN2L + IN2R", "IN2R PGA" }, \
+	{ name " Input", "IN3L", "IN3L PGA" }, \
+	{ name " Input", "IN3R", "IN3R PGA" }, \
+	{ name " Input", "IN3L + IN3R", "IN3L PGA" }, \
+	{ name " Input", "IN3L + IN3R", "IN3R PGA" }, \
+	{ name " Input", "IN4L", "IN4L PGA" }, \
+	{ name " Input", "IN4R", "IN4R PGA" }, \
+	{ name " Input", "IN4L + IN4R", "IN4L PGA" }, \
+	{ name " Input", "IN4L + IN4R", "IN4R PGA" }
+
+#define FLORIDA_RXANC_OUTPUT_ROUTES(widget, name) \
+	{ widget, NULL, name " ANC Source" }, \
+	{ name " ANC Source", "RXANCL", "RXANCL" }, \
+	{ name " ANC Source", "RXANCR", "RXANCR" }
+
 static const struct snd_kcontrol_new florida_snd_controls[] = {
 SOC_ENUM("IN1 OSR", arizona_in_dmic_osr[0]),
 SOC_ENUM("IN2 OSR", arizona_in_dmic_osr[1]),
@@ -322,6 +346,18 @@ SOC_SINGLE_TLV("IN4R Digital Volume", ARIZONA_ADC_DIGITAL_VOLUME_4R,
 SOC_ENUM("Input Ramp Up", arizona_in_vi_ramp),
 SOC_ENUM("Input Ramp Down", arizona_in_vd_ramp),
 
+SND_SOC_BYTES_MASK("RXANC Config", ARIZONA_CLOCK_CONTROL, 1,
+		   ARIZONA_CLK_R_ENA_CLR | ARIZONA_CLK_R_ENA_SET |
+		   ARIZONA_CLK_L_ENA_CLR | ARIZONA_CLK_L_ENA_SET),
+SND_SOC_BYTES("RXANC Coefficients", ARIZONA_ANC_COEFF_START,
+	      ARIZONA_ANC_COEFF_END - ARIZONA_ANC_COEFF_START + 1),
+SND_SOC_BYTES("RXANCL Config", ARIZONA_FCL_FILTER_CONTROL, 1),
+SND_SOC_BYTES("RXANCL Coefficients", ARIZONA_FCL_COEFF_START,
+	      ARIZONA_FCL_COEFF_END - ARIZONA_FCL_COEFF_START + 1),
+SND_SOC_BYTES("RXANCR Config", ARIZONA_FCR_FILTER_CONTROL, 1),
+SND_SOC_BYTES("RXANCR Coefficients", ARIZONA_FCR_COEFF_START,
+	      ARIZONA_FCR_COEFF_END - ARIZONA_FCR_COEFF_START + 1),
+
 ARIZONA_MIXER_CONTROLS("EQ1", ARIZONA_EQ1MIX_INPUT_1_SOURCE),
 ARIZONA_MIXER_CONTROLS("EQ2", ARIZONA_EQ2MIX_INPUT_1_SOURCE),
 ARIZONA_MIXER_CONTROLS("EQ3", ARIZONA_EQ3MIX_INPUT_1_SOURCE),
@@ -711,6 +747,28 @@ static const struct soc_enum florida_aec_loopback =
 static const struct snd_kcontrol_new florida_aec_loopback_mux =
 	SOC_DAPM_VALUE_ENUM("AEC Loopback", florida_aec_loopback);
 
+static const struct snd_kcontrol_new florida_anc_input_mux[] = {
+	SOC_DAPM_ENUM_EXT("RXANCL Input", arizona_anc_input_src[0],
+			  snd_soc_dapm_get_enum_virt, arizona_put_anc_input),
+	SOC_DAPM_ENUM_EXT("RXANCR Input", arizona_anc_input_src[1],
+			  snd_soc_dapm_get_enum_virt, arizona_put_anc_input),
+};
+
+static const struct snd_kcontrol_new florida_output_anc_src[] = {
+	SOC_DAPM_ENUM("HPOUT1L ANC Source", arizona_output_anc_src[0]),
+	SOC_DAPM_ENUM("HPOUT1R ANC Source", arizona_output_anc_src[1]),
+	SOC_DAPM_ENUM("HPOUT2L ANC Source", arizona_output_anc_src[2]),
+	SOC_DAPM_ENUM("HPOUT2R ANC Source", arizona_output_anc_src[3]),
+	SOC_DAPM_ENUM("HPOUT3L ANC Source", arizona_output_anc_src[4]),
+	SOC_DAPM_ENUM("HPOUT3R ANC Source", arizona_output_anc_src[5]),
+	SOC_DAPM_ENUM("SPKOUTL ANC Source", arizona_output_anc_src[6]),
+	SOC_DAPM_ENUM("SPKOUTR ANC Source", arizona_output_anc_src[7]),
+	SOC_DAPM_ENUM("SPKDAT1L ANC Source", arizona_output_anc_src[8]),
+	SOC_DAPM_ENUM("SPKDAT1R ANC Source", arizona_output_anc_src[9]),
+	SOC_DAPM_ENUM("SPKDAT2L ANC Source", arizona_output_anc_src[10]),
+	SOC_DAPM_ENUM("SPKDAT2R ANC Source", arizona_output_anc_src[11]),
+};
+
 static const struct snd_soc_dapm_widget florida_dapm_widgets[] = {
 SND_SOC_DAPM_SUPPLY("SYSCLK", ARIZONA_SYSTEM_CLOCK_1, ARIZONA_SYSCLK_ENA_SHIFT,
 		    0, florida_sysclk_ev, SND_SOC_DAPM_POST_PMU),
@@ -897,6 +955,41 @@ SND_SOC_DAPM_VALUE_MUX("AEC Loopback", ARIZONA_DAC_AEC_CONTROL_1,
 		       ARIZONA_AEC_LOOPBACK_ENA_SHIFT, 0,
 		       &florida_aec_loopback_mux),
 
+SND_SOC_DAPM_MUX("RXANCL Input", SND_SOC_NOPM, 0, 0, &florida_anc_input_mux[0]),
+SND_SOC_DAPM_MUX("RXANCR Input", SND_SOC_NOPM, 0, 0, &florida_anc_input_mux[1]),
+
+SND_SOC_DAPM_PGA_E("RXANCL", SND_SOC_NOPM, ARIZONA_CLK_L_ENA_SET_SHIFT,
+		   0, NULL, 0, arizona_anc_ev,
+		   SND_SOC_DAPM_POST_PMU | SND_SOC_DAPM_PRE_PMD),
+SND_SOC_DAPM_PGA_E("RXANCR", SND_SOC_NOPM, ARIZONA_CLK_R_ENA_SET_SHIFT,
+		   0, NULL, 0, arizona_anc_ev,
+		   SND_SOC_DAPM_POST_PMU | SND_SOC_DAPM_PRE_PMD),
+
+SND_SOC_DAPM_MUX("HPOUT1L ANC Source", SND_SOC_NOPM, 0, 0,
+		 &florida_output_anc_src[0]),
+SND_SOC_DAPM_MUX("HPOUT1R ANC Source", SND_SOC_NOPM, 0, 0,
+		 &florida_output_anc_src[1]),
+SND_SOC_DAPM_MUX("HPOUT2L ANC Source", SND_SOC_NOPM, 0, 0,
+		 &florida_output_anc_src[2]),
+SND_SOC_DAPM_MUX("HPOUT2R ANC Source", SND_SOC_NOPM, 0, 0,
+		 &florida_output_anc_src[3]),
+SND_SOC_DAPM_MUX("HPOUT3L ANC Source", SND_SOC_NOPM, 0, 0,
+		 &florida_output_anc_src[4]),
+SND_SOC_DAPM_MUX("HPOUT3R ANC Source", SND_SOC_NOPM, 0, 0,
+		 &florida_output_anc_src[5]),
+SND_SOC_DAPM_MUX("SPKOUTL ANC Source", SND_SOC_NOPM, 0, 0,
+		 &florida_output_anc_src[6]),
+SND_SOC_DAPM_MUX("SPKOUTR ANC Source", SND_SOC_NOPM, 0, 0,
+		 &florida_output_anc_src[7]),
+SND_SOC_DAPM_MUX("SPKDAT1L ANC Source", SND_SOC_NOPM, 0, 0,
+		 &florida_output_anc_src[8]),
+SND_SOC_DAPM_MUX("SPKDAT1R ANC Source", SND_SOC_NOPM, 0, 0,
+		 &florida_output_anc_src[9]),
+SND_SOC_DAPM_MUX("SPKDAT2L ANC Source", SND_SOC_NOPM, 0, 0,
+		 &florida_output_anc_src[10]),
+SND_SOC_DAPM_MUX("SPKDAT2R ANC Source", SND_SOC_NOPM, 0, 0,
+		 &florida_output_anc_src[11]),
+
 SND_SOC_DAPM_AIF_OUT("AIF1TX1", NULL, 0,
 		     ARIZONA_AIF1_TX_ENABLES, ARIZONA_AIF1TX1_ENA_SHIFT, 0),
 SND_SOC_DAPM_AIF_OUT("AIF1TX2", NULL, 0,
@@ -1574,6 +1667,22 @@ static const struct snd_soc_dapm_route florida_dapm_routes[] = {
 	{ "SPKDAT2L", NULL, "OUT6L" },
 	{ "SPKDAT2R", NULL, "OUT6R" },
 
+	FLORIDA_RXANC_INPUT_ROUTES("RXANCL", "RXANCL"),
+	FLORIDA_RXANC_INPUT_ROUTES("RXANCR", "RXANCR"),
+
+	FLORIDA_RXANC_OUTPUT_ROUTES("OUT1L", "HPOUT1L"),
+	FLORIDA_RXANC_OUTPUT_ROUTES("OUT1R", "HPOUT1R"),
+	FLORIDA_RXANC_OUTPUT_ROUTES("OUT2L", "HPOUT2L"),
+	FLORIDA_RXANC_OUTPUT_ROUTES("OUT2R", "HPOUT2R"),
+	FLORIDA_RXANC_OUTPUT_ROUTES("OUT3L", "HPOUT3L"),
+	FLORIDA_RXANC_OUTPUT_ROUTES("OUT3R", "HPOUT3R"),
+	FLORIDA_RXANC_OUTPUT_ROUTES("OUT4L", "SPKOUTL"),
+	FLORIDA_RXANC_OUTPUT_ROUTES("OUT4R", "SPKOUTR"),
+	FLORIDA_RXANC_OUTPUT_ROUTES("OUT5L", "SPKDAT1L"),
+	FLORIDA_RXANC_OUTPUT_ROUTES("OUT5R", "SPKDAT1R"),
+	FLORIDA_RXANC_OUTPUT_ROUTES("OUT6L", "SPKDAT2L"),
+	FLORIDA_RXANC_OUTPUT_ROUTES("OUT6R", "SPKDAT2R"),
+
 	{ "MICSUPP", NULL, "SYSCLK" },
 
 	{ "DRC1 Signal Activity", NULL, "DRC1L" },
-- 
1.7.9.5

