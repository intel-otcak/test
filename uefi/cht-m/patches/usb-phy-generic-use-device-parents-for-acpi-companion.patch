From: David Cohen <david.a.cohen@intel.com>
Subject: [PATCH] usb: phy-generic: looks for parent's ACPI resources too

We need to discuss about how to add ACPI phy driver. For now, phy driver will
request ACPI resources from parent (OTG controller).

Signed-off-by: David Cohen <david.a.cohen@intel.com>
---
---
 drivers/usb/phy/phy-generic.c |   10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

--- linux.orig/drivers/usb/phy/phy-generic.c
+++ linux/drivers/usb/phy/phy-generic.c
@@ -26,6 +26,7 @@
  *	autonomous such as isp1504, isp1707, etc.
  */
 
+#include <linux/acpi.h>
 #include <linux/module.h>
 #include <linux/platform_device.h>
 #include <linux/dma-mapping.h>
@@ -165,6 +166,7 @@ int usb_phy_gen_create_phy(struct device
 		struct usb_phy_gen_xceiv_platform_data *pdata)
 {
 	enum usb_phy_type type = USB_PHY_TYPE_USB2;
+	struct device *gpio_dev = dev;
 	int err;
 
 	u32 clk_rate = 0;
@@ -211,7 +213,11 @@ int usb_phy_gen_create_phy(struct device
 			return -EPROBE_DEFER;
 	}
 
-	nop->gpio_reset = devm_gpiod_get_index(dev, "reset", 0);
+	/* HACK: use parent's ACPI companion if only available */
+	if (!ACPI_HANDLE(dev) && ACPI_HANDLE(dev->parent))
+		gpio_dev = dev->parent;
+
+	nop->gpio_reset = devm_gpiod_get_index(gpio_dev, "reset", 0);
 	if (IS_ERR(nop->gpio_reset)) {
 		if (PTR_ERR(nop->gpio_reset) == -EPROBE_DEFER) {
 			dev_err(dev, "Error requesting RESET GPIO\n");
@@ -220,7 +226,7 @@ int usb_phy_gen_create_phy(struct device
 		dev_info(dev, "No RESET GPIO is available\n");
 	}
 
-	nop->gpio_cs = devm_gpiod_get_index(dev, "cs", 1);
+	nop->gpio_cs = devm_gpiod_get_index(gpio_dev, "cs", 1);
 	if (IS_ERR(nop->gpio_cs)) {
 		if (PTR_ERR(nop->gpio_cs) == -EPROBE_DEFER) {
 			dev_err(dev, "Error requesting CS GPIO\n");
