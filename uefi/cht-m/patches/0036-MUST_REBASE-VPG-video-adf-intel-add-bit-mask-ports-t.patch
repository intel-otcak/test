From 121fa25e1ed7dcafca8bc48c9b7e176fe636ba23 Mon Sep 17 00:00:00 2001
Message-Id: <121fa25e1ed7dcafca8bc48c9b7e176fe636ba23.1423872525.git.feitong.yi@intel.com>
In-Reply-To: <3062c7e6b919c393846ff0e13558e7f648b352ca.1423872525.git.feitong.yi@intel.com>
References: <3062c7e6b919c393846ff0e13558e7f648b352ca.1423872525.git.feitong.yi@intel.com>
From: Gaurav K Singh <gaurav.k.singh@intel.com>
Date: Wed, 28 Jan 2015 20:05:09 +0530
Subject: [PATCH 36/95] MUST_REBASE [VPG]: video/adf/intel: add bit mask ports
 to describe the ports being driven

Later on this can include multiple ports (e.g. (1 << PORT_A) | (1 <<PORT_C))
to describe dual link DSI.

MUST_REBASE: Since Google ADF framework is not in upstream and also
we cannot have two display drivers, other one being i915, we need to
work on i915 and ADF convergence path before it can be upstreamed

For: GMINL-5276
Change-Id: I88c3c17c2b78c331ba092da1580e9bedede5f894
Signed-off-by: Gaurav K Singh <gaurav.k.singh@intel.com>
---
 .../video/adf/intel/core/common/dsi/gen_dsi_pipe.c |    4 ++-
 drivers/video/adf/intel/core/vlv/vlv_dc_config.c   |   31 +++++++++++++++-----
 .../adf/intel/include/core/common/dsi/dsi_config.h |    3 ++
 .../adf/intel/include/core/common/dsi/dsi_pipe.h   |    7 ++++-
 4 files changed, 36 insertions(+), 9 deletions(-)

diff --git a/drivers/video/adf/intel/core/common/dsi/gen_dsi_pipe.c b/drivers/video/adf/intel/core/common/dsi/gen_dsi_pipe.c
index 32fdae5..8934978 100644
--- a/drivers/video/adf/intel/core/common/dsi/gen_dsi_pipe.c
+++ b/drivers/video/adf/intel/core/common/dsi/gen_dsi_pipe.c
@@ -604,7 +604,7 @@ void dsi_pipe_destroy(struct dsi_pipe *pipe)
 
 int dsi_pipe_init(struct dsi_pipe *pipe, struct device *dev,
 	struct intel_plane *primary_plane, u8 idx,
-	struct intel_pipeline *pipeline)
+	struct intel_pipeline *pipeline, int port)
 {
 	struct dsi_panel *panel;
 	struct dsi_vbt *vbt;
@@ -616,6 +616,8 @@ int dsi_pipe_init(struct dsi_pipe *pipe, struct device *dev,
 		return -EINVAL;
 
 	memset(pipe, 0, sizeof(struct dsi_pipe));
+
+	pipe->config.ctx.ports = 1 << port;
 	pipe->base.pipeline = pipeline;
 
 	/*get panel*/
diff --git a/drivers/video/adf/intel/core/vlv/vlv_dc_config.c b/drivers/video/adf/intel/core/vlv/vlv_dc_config.c
index b326360..d97fe5f 100644
--- a/drivers/video/adf/intel/core/vlv/vlv_dc_config.c
+++ b/drivers/video/adf/intel/core/vlv/vlv_dc_config.c
@@ -169,7 +169,7 @@ void vlv_dc_config_destroy(struct intel_dc_config *config)
 }
 
 static int vlv_display_encoder_init(struct vlv_dc_config *vlv_config, int pipe,
-				u8 disp_no)
+				int port, u8 disp_no)
 {
 	struct dsi_pipe *dsi_pipe = NULL;
 	struct hdmi_pipe *hdmi_pipe = NULL;
@@ -186,7 +186,7 @@ static int vlv_display_encoder_init(struct vlv_dc_config *vlv_config, int pipe,
 		dsi_pipe = &disp->gen.dsi;
 		intel_pipeline = &disp->base;
 		err = dsi_pipe_init(dsi_pipe, vlv_config->base.dev,
-				&disp->pplane.base, pipe, intel_pipeline);
+				&disp->pplane.base, pipe, intel_pipeline, port);
 		if (err) {
 			dev_err(vlv_config->base.dev,
 				"%s: failed to init pipe(%d)\n", __func__, err);
@@ -344,11 +344,28 @@ static int vlv_initialize_disp(struct vlv_dc_config *vlv_config,
 	pll = &disp->pll;
 	err = vlv_pll_init(pll, type, (enum pipe) pipe, port);
 
-	/* Initialize port */
-	vlv_initialize_port(vlv_config, pipe, port, type, disp_no);
+	if (type == INTEL_PIPE_DSI) {
+		/*
+		 * For DSI we are calling the vlv_display_encoder_init() first
+		 * because we need to set the port bit mask which gets used
+		 * in vlv_initialize_port() to assign the proper register
+		 * address offsets for DSI.
+		 */
 
-	/* Initialize encoder */
-	vlv_display_encoder_init(vlv_config, pipe, disp_no);
+		/* Initialize encoder */
+		vlv_display_encoder_init(vlv_config, pipe, port, disp_no);
+
+		/* Initialize port */
+		vlv_initialize_port(vlv_config, pipe, port, type, disp_no);
+	} else if ((type == INTEL_PIPE_HDMI) || (type == INTEL_PIPE_EDP) ||
+				(type == INTEL_PIPE_DP)) {
+
+		/* Initialize port */
+		vlv_initialize_port(vlv_config, pipe, port, type, disp_no);
+
+		/* Initialize encoder */
+		vlv_display_encoder_init(vlv_config, pipe, port, disp_no);
+	}
 
 	return err;
 }
@@ -491,7 +508,7 @@ struct intel_dc_config *vlv_get_dc_config(struct pci_dev *pdev, u32 id)
 		}
 	}
 
-	/* To check the EPF */
+	/* To check the EFP */
 	for (i = 0; i <= dev_num; i++) {
 		dvo_port = child_dev[i].common.dvo_port;
 		devtype = child_dev[i].common.device_type;
diff --git a/drivers/video/adf/intel/include/core/common/dsi/dsi_config.h b/drivers/video/adf/intel/include/core/common/dsi/dsi_config.h
index efab956..11cd96d 100644
--- a/drivers/video/adf/intel/include/core/common/dsi/dsi_config.h
+++ b/drivers/video/adf/intel/include/core/common/dsi/dsi_config.h
@@ -166,6 +166,9 @@ struct dsi_context {
 	/* Video mode or command mode */
 	u16 operation_mode;
 
+	/* bit mask of ports being driven */
+	u16 ports;
+
 	/* dual link support */
 	u8 dual_link;
 
diff --git a/drivers/video/adf/intel/include/core/common/dsi/dsi_pipe.h b/drivers/video/adf/intel/include/core/common/dsi/dsi_pipe.h
index d88152a..762dd89 100644
--- a/drivers/video/adf/intel/include/core/common/dsi/dsi_pipe.h
+++ b/drivers/video/adf/intel/include/core/common/dsi/dsi_pipe.h
@@ -29,6 +29,11 @@
 #include "core/common/backlight_dev.h"
 #endif
 
+#define for_each_dsi_port(__port, __ports_mask)  \
+	for ((__port) = PORT_A; (__port) < ADF_MAX_PORTS; (__port)++) \
+		if ((__ports_mask) & (1 << (__port)))
+
+
 struct dsi_pipe;
 
 /**
@@ -75,7 +80,7 @@ static inline struct dsi_pipe *to_dsi_pipe(struct intel_pipe *pipe)
 #ifdef CONFIG_ADF_INTEL_VLV
 extern int dsi_pipe_init(struct dsi_pipe *pipe, struct device *dev,
 	struct intel_plane *primary_plane, u8 idx,
-	struct intel_pipeline *pipeline);
+	struct intel_pipeline *pipeline, int port);
 #else
 extern int dsi_pipe_init(struct dsi_pipe *pipe, struct device *dev,
 	struct intel_plane *primary_plane, u8 idx, u32 gtt_phy_addr);
-- 
1.7.9.5

