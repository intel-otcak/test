From f9ecaa1ddf1a2f2df89e266e4bf6d49786c2c707 Mon Sep 17 00:00:00 2001
From: Zhang Yanmin <yanmin.zhang@intel.com>
Date: Mon, 11 Jan 2016 15:26:25 +0800
Subject: [PATCH 13/14] sst: set fw state to SST_SHUTDOWN

On Cherrytrail, ctx->use_32bit_ops is equal to 0. During
shutdown, sst_do_shutdown doesn't change fw state to SST_SHUTDOWN.

Later on, application might start/stop streams frequently.
However, sst device halts and kernel prints out lots of error
messages continuously.

The patch fixes it by set fw state to SST_SHUTDOWN.

Change-Id: Ic8bd93b7cc5b9535afd053aedf9e24d41ee51a12
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-15684
Signed-off-by: Zhang Yanmin <yanmin.zhang@intel.com>
Reviewed-on: https://android.intel.com:443/456306
---
 sound/soc/intel/sst/sst.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/sound/soc/intel/sst/sst.c b/sound/soc/intel/sst/sst.c
index a8e3a2b..424d201 100644
--- a/sound/soc/intel/sst/sst.c
+++ b/sound/soc/intel/sst/sst.c
@@ -1372,10 +1372,12 @@ static void sst_do_shutdown(struct intel_sst_drv *ctx)
 		pr_debug("sst is already in suspended/RESET state\n");
 		return;
 	}
+
+	sst_set_fw_state_locked(ctx, SST_SHUTDOWN);
+
 	if (!ctx->use_32bit_ops)
 		return;
 
-	sst_set_fw_state_locked(ctx, SST_SHUTDOWN);
 	flush_workqueue(ctx->post_msg_wq);
 	pvt_id = sst_assign_pvt_id(ctx);
 	retval = sst_create_block_and_ipc_msg(&msg, false,
-- 
1.9.1

