From 2b0e82c375535c4a0f58239ffd4a41b2dc4d704d Mon Sep 17 00:00:00 2001
From: Manish Regmi <manish.regmi@intel.com>
Date: Tue, 26 Aug 2014 14:23:24 -0700
Subject: [PATCH] IRDA-495: USB: mtp: fix the buffer overflow issue for
 transfers larger than 2GB

When the user connects the tablet to the host and tries to transfer a
file larger than 2 GB, the kernel instantly freezes and panics. This
patch fixes this issue.
The len variable is declared as int so when the length of file which is
larger than 2 GB is assigned to it, it becomes negative and invalid
length is assigned to read_req->length causing the buffer overwrite later.
To fix this we just make the len, the same type as count.

Bug: IRDA-495
Change-Id: I8897f6b47dd0a2b085b624de01ec330198f9c977
Signed-off-by: Manish Regmi <manish.regmi@intel.com>
---
 drivers/usb/gadget/f_mtp.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/usb/gadget/f_mtp.c b/drivers/usb/gadget/f_mtp.c
index a7f1b62..14b6e4f 100644
--- a/drivers/usb/gadget/f_mtp.c
+++ b/drivers/usb/gadget/f_mtp.c
@@ -743,8 +743,8 @@ static void receive_file_work(struct work_struct *data)
 	struct usb_request *read_req = NULL, *write_req = NULL;
 	struct file *filp;
 	loff_t offset;
-	int64_t count;
-	int ret, len, cur_buf = 0;
+	int64_t count, len;
+	int ret, cur_buf = 0;
 	int r = 0;
 
 	/* read our parameters */
-- 
1.9.1

