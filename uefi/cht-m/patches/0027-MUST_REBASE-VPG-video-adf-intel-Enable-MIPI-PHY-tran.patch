From 4d8436b7e89a5532d1d574ebe49b85a7aa4abc99 Mon Sep 17 00:00:00 2001
Message-Id: <4d8436b7e89a5532d1d574ebe49b85a7aa4abc99.1423172493.git.feitong.yi@intel.com>
In-Reply-To: <18bb7324f916bffbc75e07ea0ffd3e6e68e7b6d8.1423172493.git.feitong.yi@intel.com>
References: <18bb7324f916bffbc75e07ea0ffd3e6e68e7b6d8.1423172493.git.feitong.yi@intel.com>
From: Gaurav K Singh <gaurav.k.singh@intel.com>
Date: Thu, 15 Jan 2015 01:13:19 +0530
Subject: [PATCH 27/29] MUST_REBASE [VPG]: video/adf/intel: Enable MIPI PHY
 transparent latch for DSI Port C

Due to hardware limitations, MIPI Port C DPI Enable bit
does not get set. To check whether DSI Port C was enabled in BIOS,
check the Pipe B enable bit for DSI Port C as software workaround.

MUST_REBASE: Since Google ADF framework is not in upstream and also
we cannot have two display drivers, other one being i915, we need to
work on i915 and ADF convergence path before it can be upstreamed

For: GMINL-4868
Change-Id: I5eaf5d7404ebd2109ec1215116392636b9bdbeba
Signed-off-by: Gaurav K Singh <gaurav.k.singh@intel.com>
---
 drivers/video/adf/intel/core/vlv/vlv_dsi_port.c |   21 ++++++++++++++++++---
 1 file changed, 18 insertions(+), 3 deletions(-)

diff --git a/drivers/video/adf/intel/core/vlv/vlv_dsi_port.c b/drivers/video/adf/intel/core/vlv/vlv_dsi_port.c
index e332035..0cce97a 100644
--- a/drivers/video/adf/intel/core/vlv/vlv_dsi_port.c
+++ b/drivers/video/adf/intel/core/vlv/vlv_dsi_port.c
@@ -102,7 +102,14 @@ bool vlv_dsi_port_set_device_ready(struct vlv_dsi_port *port)
 	usleep_range(1000, 1500);
 
 	val = REG_READ(port->offset);
-	REG_WRITE(port->offset, val | LP_OUTPUT_HOLD);
+	/*
+	 * Enable MIPI PHY transparent latch. Common bit to be used for
+	 * both DSI Port A & DSI Port C. No similar bit in MIPI Port C reg
+	 */
+	if (port->port_id == PORT_C)
+		REG_WRITE(MIPI_PORT_CTRL(0), val | LP_OUTPUT_HOLD);
+	else
+		REG_WRITE(port->offset, val | LP_OUTPUT_HOLD);
 	usleep_range(1000, 1500);
 
 	if (wait_for(((REG_READ(port->offset) & AFE_LATCHOUT)
@@ -403,11 +410,19 @@ u32 vlv_dsi_port_disable(struct vlv_dsi_port *port,
 
 bool vlv_dsi_port_can_be_disabled(struct vlv_dsi_port *port)
 {
-	u32 val = REG_READ(port->offset);
+	u32 dpi_enabled = REG_READ(port->offset) & DPI_ENABLE;
 	u32 func = REG_READ(port->func_prg_offset);
 	bool ret = false;
 
-	if ((val & DPI_ENABLE) || (func & CMD_MODE_DATA_WIDTH_MASK)) {
+	/*
+	 * Due to hardware limitations, MIPI Port C DPI Enable bit
+	 * does not get set. To check whether DSI Port was enabled in BIOS,
+	 * check the Pipe B enable bit.
+	 */
+	if (port->port_id == PORT_C)
+		dpi_enabled = REG_READ(PIPECONF(PIPE_B)) & PIPECONF_ENABLE;
+
+	if (dpi_enabled || (func & CMD_MODE_DATA_WIDTH_MASK)) {
 		if (REG_READ(port->dr_offset) & DEVICE_READY)
 			ret = true;
 	}
-- 
1.7.9.5

