From e250d02cada4d145e6b6970bac9c924808be2839 Mon Sep 17 00:00:00 2001
From: jianqian <jianqiang.tang@intel.com>
Date: Fri, 7 Nov 2014 11:38:54 +0800
Subject: [PATCH 3/8] usb: cdc-acm: handle unlink urb in acm read callback
 function

In current acm driver, the bulk-in callback function doesn't
handle the URB unlink return from usb core.

This will cause unexpected packet lost in suspend entry due to
urb will be unlink and urb->status == -2 (ENOENT) during runtime
suspend routine even these urb have data not processed yet, this cause
lose data.

This patch let bulk-in callback function able to handle unlink
urb to avoid data loss.

Change-Id: I7c8121b779701223f83ac2a8a35d729c69ef69e1
Signed-off-by: Tang Jian Qiang <jianqiang.tang@intel.com>
---
 drivers/usb/class/cdc-acm.c | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/drivers/usb/class/cdc-acm.c b/drivers/usb/class/cdc-acm.c
index 35edc1f..e1e4ca8 100644
--- a/drivers/usb/class/cdc-acm.c
+++ b/drivers/usb/class/cdc-acm.c
@@ -421,7 +421,12 @@ static void acm_read_bulk_callback(struct urb *urb)
 	if (urb->status) {
 		dev_dbg(&acm->data->dev, "%s - non-zero urb status: %d\n",
 							__func__, urb->status);
-		return;
+		if ((urb->status != -ENOENT) || (urb->actual_length == 0)) {
+			dev_dbg(&acm->data->dev,
+				"%s - no handling for ENOENT and ZLP urb\n",
+					__func__);
+			return;
+		}
 	}
 	acm_process_read_urb(acm, urb);
 
-- 
1.9.1

