From e5d30924f807a001bc7c11949a829bc9c37833e4 Mon Sep 17 00:00:00 2001
From: Huiquan Zhong <huiquan.zhong@intel.com>
Date: Fri, 13 Nov 2015 22:31:11 +0800
Subject: [PATCH] HSU: add hardware assisted h/w flow control for CHT UART

Add flag UPF_HARD_FLOW for CHT UART since DW_apb_uart can be configured
to have a Auto RTS and Auto CTS serial data flow control mode available.

Also implemented throttle/unthrottle callbacks if UPF_HARD_FLOW is set.

Change-Id: I0329ab0ccb07471612d195b6c03f4ab19e006ec9
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-9210
Signed-off-by: Huiquan Zhong <huiquan.zhong@intel.com>
---
 drivers/tty/serial/hsu/hsu_core.c | 28 ++++++++++++++++++++++++++++
 drivers/tty/serial/hsu/hsu_plat.c |  4 +++-
 2 files changed, 31 insertions(+), 1 deletion(-)

diff --git a/drivers/tty/serial/hsu/hsu_core.c b/drivers/tty/serial/hsu/hsu_core.c
index 1763c5a..0783158 100644
--- a/drivers/tty/serial/hsu/hsu_core.c
+++ b/drivers/tty/serial/hsu/hsu_core.c
@@ -907,6 +907,32 @@ static void serial_hsu_break_ctl(struct uart_port *port, int break_state)
 	pm_runtime_put(up->dev);
 }
 
+static void serial_hsu_throttle(struct uart_port *port)
+{
+	struct tty_struct *tty = port->state->port.tty;
+	unsigned long flags;
+
+	if (tty->termios.c_cflag & CRTSCTS) {
+		spin_lock_irqsave(&port->lock, flags);
+		port->mctrl &= ~TIOCM_RTS;
+		serial_hsu_set_mctrl(port, port->mctrl);
+		spin_unlock_irqrestore(&port->lock, flags);
+	}
+}
+
+static void serial_hsu_unthrottle(struct uart_port *port)
+{
+	struct tty_struct *tty = port->state->port.tty;
+	unsigned long flags;
+
+	if (tty->termios.c_cflag & CRTSCTS) {
+		spin_lock_irqsave(&port->lock, flags);
+		port->mctrl |= TIOCM_RTS;
+		serial_hsu_set_mctrl(port, port->mctrl);
+		spin_unlock_irqrestore(&port->lock, flags);
+	}
+}
+
 /*
  * What special to do:
  * 1. chose the 64B fifo mode
@@ -1475,6 +1501,8 @@ struct uart_ops serial_hsu_pops = {
 	.stop_tx	= serial_hsu_stop_tx,
 	.start_tx	= serial_hsu_start_tx,
 	.stop_rx	= serial_hsu_stop_rx,
+	.throttle	= serial_hsu_throttle,
+	.unthrottle	= serial_hsu_unthrottle,
 	.enable_ms	= serial_hsu_enable_ms,
 	.break_ctl	= serial_hsu_break_ctl,
 	.startup	= serial_hsu_startup,
diff --git a/drivers/tty/serial/hsu/hsu_plat.c b/drivers/tty/serial/hsu/hsu_plat.c
index 40ae546..f008a77 100644
--- a/drivers/tty/serial/hsu/hsu_plat.c
+++ b/drivers/tty/serial/hsu/hsu_plat.c
@@ -199,8 +199,10 @@ static void hsu_set_termios(struct uart_port *p, struct ktermios *termios,
 	/* DesignWare UART CTS is auto controlled by HW IP,
 	 * ignore sw-assisted CTS flow control
 	 */
-	if (termios->c_cflag & CRTSCTS)
+	if (termios->c_cflag & CRTSCTS) {
 		clear_bit(ASYNCB_CTS_FLOW, &tport->flags);
+		p->flags |= UPF_HARD_FLOW;
+	}
 
 	serial_hsu_do_set_termios(p, termios, old);
 }
-- 
1.9.1

