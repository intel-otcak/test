From d4c1342d8fb3b733a5937033c19a079806c22294 Mon Sep 17 00:00:00 2001
From: Xiang Wang <xiang.a.wang@intel.com>
Date: Wed, 13 Jan 2016 13:13:21 +0800
Subject: [PATCH 7/7] REVERTME i2c: designware: debug patch for pmic kernel
 panic issue

This patch adds debug log for the i2c controller timed out issue.
Christian Processe suggests to put this patch in mainline:
"The point is that the issue is reproduced by SQE validation team mainly
& boards are used for official validation in priority then the boards
have few availability for the debug except if we  can integrate the
patch in mainline."

This patch will be reverted once we capture the issue.

Change-Id: I1f62fc8b5d67568e0ce0af7187e23a11ead12ca8
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-14705
Signed-off-by: Xiang Wang <xiang.a.wang@intel.com>
Reviewed-on: https://android.intel.com:443/457298
---
 drivers/i2c/busses/i2c-designware-core.c | 16 ++++++++++++++--
 1 file changed, 14 insertions(+), 2 deletions(-)

diff --git a/drivers/i2c/busses/i2c-designware-core.c b/drivers/i2c/busses/i2c-designware-core.c
index c6b3054..1c13a68 100644
--- a/drivers/i2c/busses/i2c-designware-core.c
+++ b/drivers/i2c/busses/i2c-designware-core.c
@@ -203,6 +203,15 @@ void dw_writel(struct dw_i2c_dev *dev, u32 b, int offset)
 	}
 }
 
+static void dump_registers(struct dw_i2c_dev *dev)
+{
+	int offset;
+	for (offset = 0; offset <= DW_IC_COMP_TYPE; offset += 4) {
+		dev_err(dev->dev, "Offset 0x%02x, Value 0x%08x\n", offset,
+				dw_readl(dev, offset));
+	}
+
+}
 static u32
 i2c_dw_scl_hcnt(u32 ic_clk, u32 tSYMBOL, u32 tf, int cond, int offset)
 {
@@ -311,7 +320,6 @@ int i2c_dw_init(struct dw_i2c_dev *dev)
 		 * reset apb and clock domain
 		 */
 		dw_writel(dev, 0, DW_IC_RESETS);
-		dw_writel(dev, 0, DW_IC_GENERAL);
 		if (dev->polling)
 			udelay(10);
 		else
@@ -324,8 +332,11 @@ int i2c_dw_init(struct dw_i2c_dev *dev)
 			usleep_range(10, 100);
 	} while (--timeout);
 
-	if (unlikely(timeout == 0))
+	if (unlikely(timeout == 0)) {
 		dev_err(dev->dev, "controller time out\n");
+		dump_stack();
+		dump_registers(dev);
+	}
 
 	reg = dw_readl(dev, DW_IC_COMP_TYPE);
 	if (reg == ___constant_swab32(DW_IC_COMP_TYPE_VALUE)) {
@@ -630,6 +641,7 @@ static int i2c_dw_handle_tx_abort(struct dw_i2c_dev *dev)
 	unsigned long abort_source = dev->abort_source;
 	int i;
 
+	dev_err(dev->dev, "abort_source = 0x%08lx\n", abort_source);
 	if (abort_source & DW_IC_TX_ABRT_NOACK) {
 		for_each_set_bit(i, &abort_source, ARRAY_SIZE(abort_sources))
 			dev_dbg(dev->dev,
-- 
1.9.1

