From 906b41f596d9c16f0eead2bbbc3e30ceeabbac8f Mon Sep 17 00:00:00 2001
From: Bin Han <bin.b.han@intel.com>
Date: Tue, 4 Nov 2014 16:30:26 +0800
Subject: [PATCH 156/164] atomisp2: get exp_id from right places

BZ: 228241

The exp_id in the ia_css_buffer is going to be obsolete, thus driver should
get the exp_id from specific type of buffer data.

Change-Id: I375ac581caa19ee94ddac09a3e7ca50d90b21860
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-8929
Signed-off-by: Bin Han <bin.b.han@intel.com>
Reviewed-on: https://android.intel.com:443/296505
Reviewed-on: https://icggerrit.ir.intel.com/29118
Approver: Wei Tao <wei.tao@intel.com>
Build: Wei Tao <wei.tao@intel.com>
Reviewed-by: Wei Tao <wei.tao@intel.com>
Maintainer: Wei Tao <wei.tao@intel.com>
---
 .../pci/atomisp2/atomisp_driver/atomisp_cmd.c      |   16 ++++++----------
 .../atomisp2/atomisp_driver/atomisp_compat_css20.c |    2 +-
 .../atomisp2/atomisp_driver/atomisp_compat_css20.h |    1 -
 3 files changed, 7 insertions(+), 12 deletions(-)

diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c
index c1573f4..910c2d4 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c
@@ -975,7 +975,7 @@ void atomisp_buf_done(struct atomisp_sub_device *asd, int error,
 			asd->s3a_bufs_in_css[css_pipe_id]--;
 			atomisp_3a_stats_ready_event(asd, buffer.css_buffer.exp_id);
 			dev_dbg(isp->dev, "%s: s3a stat with exp_id %d is ready\n",
-				__func__, buffer.css_buffer.exp_id);
+				__func__, s3a_buf->s3a_data->exp_id);
 			break;
 		case CSS_BUFFER_TYPE_METADATA:
 			if (error)
@@ -993,8 +993,7 @@ void atomisp_buf_done(struct atomisp_sub_device *asd, int error,
 			asd->metadata_bufs_in_css[stream_id][css_pipe_id]--;
 			atomisp_metadata_ready_event(asd, md_type);
 			dev_dbg(isp->dev, "%s: metadata with exp_id %d is ready\n",
-				__func__,
-				buffer.css_buffer.data.metadata->exp_id);
+				__func__, md_buf->metadata->exp_id);
 			break;
 		case CSS_BUFFER_TYPE_DIS_STATISTICS:
 			list_for_each_entry_safe(dis_buf, _dis_buf_tmp,
@@ -1002,7 +1001,6 @@ void atomisp_buf_done(struct atomisp_sub_device *asd, int error,
 				if (dis_buf->dis_data == buffer.css_buffer.data.stats_dvs) {
 					spin_lock_irqsave(&asd->dis_stats_lock, irqflags);
 					list_del_init(&dis_buf->list);
-					dis_buf->exp_id = buffer.css_buffer.exp_id;
 					list_add(&dis_buf->list, &asd->dis_stats);
 					asd->params.dis_proj_data_valid = true;
 					spin_unlock_irqrestore(&asd->dis_stats_lock, irqflags);
@@ -1011,7 +1009,7 @@ void atomisp_buf_done(struct atomisp_sub_device *asd, int error,
 			}
 			asd->dis_bufs_in_css--;
 			dev_dbg(isp->dev, "%s: dis stat with exp_id %d is ready\n",
-				__func__, buffer.css_buffer.exp_id);
+				__func__, dis_buf->dis_data->exp_id);
 			break;
 		case CSS_BUFFER_TYPE_VF_OUTPUT_FRAME:
 		case CSS_BUFFER_TYPE_SEC_VF_OUTPUT_FRAME:
@@ -1139,22 +1137,20 @@ void atomisp_buf_done(struct atomisp_sub_device *asd, int error,
 				asd->frame_status[vb->i];
 
 			if (asd->continuous_mode->val) {
-				unsigned int exp_id = frame->exp_id;
-
 				if (css_pipe_id == CSS_PIPE_ID_PREVIEW ||
 				    css_pipe_id == CSS_PIPE_ID_VIDEO) {
-					asd->latest_preview_exp_id = exp_id;
+					asd->latest_preview_exp_id = frame->exp_id;
 				} else if (css_pipe_id ==
 						CSS_PIPE_ID_CAPTURE) {
 					if (asd->run_mode->val ==
 					    ATOMISP_RUN_MODE_VIDEO)
 					    dev_dbg(isp->dev,
 						    "SDV capture raw buffer id: %u\n",
-						    exp_id);
+						    frame->exp_id);
 					else
 					    dev_dbg(isp->dev,
 						    "ZSL capture raw buffer id: %u\n",
-						    exp_id);
+						    frame->exp_id);
 				}
 			}
 			/*
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_compat_css20.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_compat_css20.c
index 05757b8..5f355e6 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_compat_css20.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_compat_css20.c
@@ -4175,7 +4175,7 @@ int atomisp_css_get_dis_stat(struct atomisp_sub_device *asd,
 	else
 		ia_css_get_dvs2_statistics(asd->params.dvs_stat,
 			dis_buf->dis_data);
-	stats->exp_id = dis_buf->exp_id;
+	stats->exp_id = dis_buf->dis_data->exp_id;
 
 	spin_lock_irqsave(&asd->dis_stats_lock, flags);
 	list_add_tail(&dis_buf->list, &asd->dis_stats);
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_compat_css20.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_compat_css20.h
index 72d109b..e0cf98a 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_compat_css20.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_compat_css20.h
@@ -189,7 +189,6 @@ struct atomisp_s3a_buf {
 struct atomisp_dis_buf {
 	struct atomisp_css_dis_data *dis_data;
 	struct ia_css_isp_dvs_statistics_map *dvs_map;
-	unsigned int exp_id;
 	struct list_head list;
 };
 
-- 
1.7.9.5

