From d887b40df742bbdc08fdccac258d156865f082a4 Mon Sep 17 00:00:00 2001
From: "Du, Changbin" <changbin.du@intel.com>
Date: Mon, 20 Apr 2015 17:39:03 +0800
Subject: [PATCH] usb/gadget: add reset callback for gadget driver

Give gadget driver a chance to do something on bus reset event. For
example, limit vbus draw to meet usb-if compliance requirement.

Change-Id: I502c7a488b833b5a7b40ada0cea76f730dc1e05b
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-30602
Signed-off-by: Du, Changbin <changbin.du@intel.com>
---
 drivers/usb/gadget/composite.c | 10 ++++++++++
 include/linux/usb/gadget.h     |  2 ++
 2 files changed, 12 insertions(+)

diff --git a/drivers/usb/gadget/composite.c b/drivers/usb/gadget/composite.c
index ded21cea9445..be041c72e5a6 100644
--- a/drivers/usb/gadget/composite.c
+++ b/drivers/usb/gadget/composite.c
@@ -1239,6 +1239,15 @@ void composite_setup_complete(struct usb_ep *ep, struct usb_request *req)
 }
 EXPORT_SYMBOL_GPL(composite_setup_complete);
 
+void
+composite_reset(struct usb_gadget *gadget)
+{
+	struct usb_composite_dev *cdev = get_gadget_data(gadget);
+
+	DBG(cdev, "reset\n");
+	usb_gadget_vbus_draw(gadget, unconfigured_vbus_draw(cdev));
+}
+
 /*
  * The setup() callback implements all the ep0 functionality that's
  * not handled lower down, in hardware or the hardware driver(like
@@ -1798,6 +1807,7 @@ static const struct usb_gadget_driver composite_driver_template = {
 	.bind		= composite_bind,
 	.unbind		= composite_unbind,
 
+	.reset		= composite_reset,
 	.setup		= composite_setup,
 	.disconnect	= composite_disconnect,
 
diff --git a/include/linux/usb/gadget.h b/include/linux/usb/gadget.h
index c3a61853cd13..68d8463e0814 100644
--- a/include/linux/usb/gadget.h
+++ b/include/linux/usb/gadget.h
@@ -800,6 +800,7 @@ static inline int usb_gadget_disconnect(struct usb_gadget *gadget)
  * struct usb_gadget_driver - driver for usb 'slave' devices
  * @function: String describing the gadget's function
  * @max_speed: Highest speed the driver handles.
+ * @reset: Invoked when host reset device.
  * @setup: Invoked for ep0 control requests that aren't handled by
  *	the hardware level driver. Most calls must be handled by
  *	the gadget driver, including descriptor and configuration
@@ -868,6 +869,7 @@ struct usb_gadget_driver {
 	int			(*bind)(struct usb_gadget *gadget,
 					struct usb_gadget_driver *driver);
 	void			(*unbind)(struct usb_gadget *);
+	void			(*reset)(struct usb_gadget *);
 	int			(*setup)(struct usb_gadget *,
 					const struct usb_ctrlrequest *);
 	void			(*disconnect)(struct usb_gadget *);
-- 
1.9.1

