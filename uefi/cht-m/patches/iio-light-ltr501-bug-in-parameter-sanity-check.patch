From b5a8cae56a4bff19154e1af660be5adcf1671332 Mon Sep 17 00:00:00 2001
From: Jonathan Cameron <jic23@kernel.org>
Date: Sat, 2 May 2015 11:25:48 +0100
Subject: [PATCH 11/18] iio:light:ltr501 bug in parameter sanity check.

Clearly the intent was to error if the value was not 0 or 1.
As implemented we have (A != 0 || A != 1) which is always true
as A is never both 0 and 1 at the same time.

As the autobuilder suggested, && makes more sense for this error
check.

Change-Id: Ib0870b0482d59c8a142fcec031037109d8d9ab21
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-25778
Reported-by: kbuild test robot <fengguang.wu@intel.com>
Acked-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
Cc: Daniel Baluta <daniel.baluta@intel.com>
Signed-off-by: Jonathan Cameron <jic23@kernel.org>
Reviewed-on: https://android.intel.com:443/470064
Reviewed-on: https://android.intel.com:443/484455
---
 drivers/iio/light/ltr501.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/drivers/iio/light/ltr501.c b/drivers/iio/light/ltr501.c
index ca4bf47..280eff1 100644
--- a/drivers/iio/light/ltr501.c
+++ b/drivers/iio/light/ltr501.c
@@ -976,7 +976,7 @@ static int ltr501_write_event_config(struct iio_dev *indio_dev,
 	int ret;
 
 	/* only 1 and 0 are valid inputs */
-	if (state != 1  || state != 0)
+	if (state != 1  && state != 0)
 		return -EINVAL;
 
 	switch (chan->type) {
-- 
1.9.1

