From bd012bd8f4c0da1c6e1119c56ea8d064e54dc5f3 Mon Sep 17 00:00:00 2001
From: Samreen Nilofer <samreen.nilofer@intel.com>
Date: Mon, 20 Apr 2015 11:32:29 +0530
Subject: [PATCH] ASoC: Intel: Enable Low Latency Playback & Capture stream

Issue: GMINL-8559

Enable Low Latency Playback and Capture.

Change-Id: I963041baf52d254273163bbd5c77911ad475bf89
Signed-off-by: Samreen Nilofer <samreen.nilofer@intel.com>
---
 arch/x86/include/asm/platform_cht_audio.h        |  1 +
 sound/soc/intel/board/cht_bl_dpcm_rt5672.c       | 11 +++++++++++
 sound/soc/intel/board/cht_cr_aic3100.c           | 11 +++++++++++
 sound/soc/intel/pcm.c                            | 18 ++++++++++++++++++
 sound/soc/intel/platform-libs/atom_controls.h    |  3 ++-
 sound/soc/intel/platform-libs/atom_pipes.h       |  3 +++
 sound/soc/intel/platform-libs/controls_v2_dpcm.c |  2 +-
 sound/soc/intel/sst/sst_platform.c               |  4 ++++
 8 files changed, 51 insertions(+), 2 deletions(-)

diff --git a/arch/x86/include/asm/platform_cht_audio.h b/arch/x86/include/asm/platform_cht_audio.h
index 2f4c92e11768..859c4a6b9101 100644
--- a/arch/x86/include/asm/platform_cht_audio.h
+++ b/arch/x86/include/asm/platform_cht_audio.h
@@ -17,6 +17,7 @@ enum {
 	CHT_DPCM_DB,
 	CHT_DPCM_COMPR,
 	CHT_DPCM_VOIP,
+	CHT_DPCM_LL,
 	CHT_DPCM_PROBE,
 };
 
diff --git a/sound/soc/intel/board/cht_bl_dpcm_rt5672.c b/sound/soc/intel/board/cht_bl_dpcm_rt5672.c
index 765ac9864777..0e4dfae87fa5 100644
--- a/sound/soc/intel/board/cht_bl_dpcm_rt5672.c
+++ b/sound/soc/intel/board/cht_bl_dpcm_rt5672.c
@@ -821,6 +821,17 @@ static struct snd_soc_dai_link cht_dailink[] = {
 		.ops = &cht_8k_16k_ops,
 		.dynamic = 1,
 	},
+	[CHT_DPCM_LL] = {
+		.name = "Cherrytrail LL Audio Port",
+		.stream_name = "Low Latency Audio",
+		.cpu_dai_name = "Lowlatency-cpu-dai",
+		.codec_name = "snd-soc-dummy",
+		.codec_dai_name = "snd-soc-dummy-dai",
+		.platform_name = "sst-platform",
+		.ignore_suspend = 1,
+		.dynamic = 1,
+		.ops = &cht_aif1_ops,
+	},
 	[CHT_DPCM_PROBE] = {
 		.name = "Cherrytrail Probe Port",
 		.stream_name = "Cherrytrail Probe",
diff --git a/sound/soc/intel/board/cht_cr_aic3100.c b/sound/soc/intel/board/cht_cr_aic3100.c
index be28bfad68b1..e9d416a6d6ae 100644
--- a/sound/soc/intel/board/cht_cr_aic3100.c
+++ b/sound/soc/intel/board/cht_cr_aic3100.c
@@ -811,6 +811,17 @@ static struct snd_soc_dai_link cht_dailink[] = {
 		.ops = &cht_8k_16k_ops,
 		.dynamic = 1,
 	},
+	[CHT_DPCM_LL] = {
+		.name = "Cherrytrail LL Audio Port",
+		.stream_name = "Low Latency Audio",
+		.cpu_dai_name = "Lowlatency-cpu-dai",
+		.codec_name = "snd-soc-dummy",
+		.codec_dai_name = "snd-soc-dummy-dai",
+		.platform_name = "sst-platform",
+		.ignore_suspend = 1,
+		.dynamic = 1,
+		.ops = &cht_aif1_ops,
+	},
 	[CHT_DPCM_PROBE] = {
 		.name = "Cherrytrail Probe Port",
 		.stream_name = "Cherrytrail Probe",
diff --git a/sound/soc/intel/pcm.c b/sound/soc/intel/pcm.c
index 764c108476b4..0724d3d232f7 100644
--- a/sound/soc/intel/pcm.c
+++ b/sound/soc/intel/pcm.c
@@ -647,6 +647,24 @@ static struct snd_soc_dai_driver sst_platform_dai[] = {
 	},
 },
 {
+	.name = SST_LOWLATENCY_DAI,
+	.ops = &sst_media_dai_ops,
+	.playback = {
+		.stream_name = "Low Latency Playback",
+		.channels_min = SST_STEREO,
+		.channels_max = SST_STEREO,
+		.rates = SNDRV_PCM_RATE_48000,
+		.formats = SNDRV_PCM_FMTBIT_S16_LE,
+	},
+	.capture = {
+		.stream_name = "Low Latency Capture",
+		.channels_min = SST_STEREO,
+		.channels_max = SST_STEREO,
+		.rates = SNDRV_PCM_RATE_48000,
+		.formats = SNDRV_PCM_FMTBIT_S16_LE,
+	},
+},
+{
 	.name = SST_SPEAKER_DAI,
 	.ops = &sst_media_dai_ops,
 	.playback = {
diff --git a/sound/soc/intel/platform-libs/atom_controls.h b/sound/soc/intel/platform-libs/atom_controls.h
index 918b3b7f8eb0..f17efa899a06 100644
--- a/sound/soc/intel/platform-libs/atom_controls.h
+++ b/sound/soc/intel/platform-libs/atom_controls.h
@@ -62,8 +62,9 @@
 #define SST_MIX_PCM4		SST_MIX(22)
 #define SST_MIX_HF_SNS_3	SST_MIX(23)
 #define SST_MIX_HF_SNS_4	SST_MIX(24)
+#define SST_MIX_LL_PCM0		SST_MIX(25)
 
-#define SST_NUM_MIX		(SST_MIX_HF_SNS_4 + 1)
+#define SST_NUM_MIX		(SST_MIX_LL_PCM0 + 1)
 
 #define SST_MIX_SWITCH		(SST_NUM_MIX + 1)
 #define SST_OUT_SWITCH		(SST_NUM_MIX + 2)
diff --git a/sound/soc/intel/platform-libs/atom_pipes.h b/sound/soc/intel/platform-libs/atom_pipes.h
index 183d3e5fa3a1..0411b2ff8b63 100644
--- a/sound/soc/intel/platform-libs/atom_pipes.h
+++ b/sound/soc/intel/platform-libs/atom_pipes.h
@@ -77,6 +77,7 @@ enum sst_dfw_path_index {
 	SST_DFW_PATH_INDEX_SIDETONE_OUT	      = (0x21 << SST_DFW_PATH_ID_SHIFT),
 	SST_DFW_PATH_INDEX_HF_SNS_3_OUT	      = (0x23 << SST_DFW_PATH_ID_SHIFT),
 	SST_DFW_PATH_INDEX_HF_SNS_4_OUT	      = (0x24 << SST_DFW_PATH_ID_SHIFT),
+	SST_DFW_PATH_INDEX_LOW_PCM0_OUT	      = (0x25 << SST_DFW_PATH_ID_SHIFT),
 
 	/* Start of input paths */
 	SST_DFW_PATH_INDEX_MODEM_IN	      = (0x80 << SST_DFW_PATH_ID_SHIFT),
@@ -225,6 +226,8 @@ enum sst_dfw_swm_outputs {
 						SST_DFW_DEFAULT_CELL_NBR),
 	SST_DFW_SWM_OUT_FM		= (SST_DFW_PATH_INDEX_FM_OUT	      |
 						SST_DFW_DEFAULT_CELL_NBR),
+	SST_DFW_SWM_OUT_LOW_PCM0	= (SST_DFW_PATH_INDEX_LOW_PCM0_OUT    |
+						SST_DFW_DEFAULT_CELL_NBR),
 	SST_DFW_SWM_OUT_END		= (SST_DFW_PATH_INDEX_RESERVED	      |
 						SST_DFW_DEFAULT_CELL_NBR),
 };
diff --git a/sound/soc/intel/platform-libs/controls_v2_dpcm.c b/sound/soc/intel/platform-libs/controls_v2_dpcm.c
index c6aafa5ef8dd..35044675410e 100644
--- a/sound/soc/intel/platform-libs/controls_v2_dpcm.c
+++ b/sound/soc/intel/platform-libs/controls_v2_dpcm.c
@@ -2005,7 +2005,7 @@ static const struct snd_kcontrol_new sst_probe_controls[] = {
 /* Note: NUM_GAIN is common between DFW and kernel,
  * keep note while modifying this
  */
-#define SST_NUM_GAINS 37
+#define SST_NUM_GAINS 38
 static struct sst_gain_value sst_gains[SST_NUM_GAINS];
 
 static const struct snd_kcontrol_new sst_gain_controls[] = {
diff --git a/sound/soc/intel/sst/sst_platform.c b/sound/soc/intel/sst/sst_platform.c
index af682d89e5ea..607910af5600 100644
--- a/sound/soc/intel/sst/sst_platform.c
+++ b/sound/soc/intel/sst/sst_platform.c
@@ -49,6 +49,8 @@ static struct sst_dev_stream_map dpcm_strm_map_cht[] = {
 		SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
 	{CHT_DPCM_VOIP,  0, SNDRV_PCM_STREAM_PLAYBACK, PIPE_RSVD,
 		SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
+	{CHT_DPCM_LL,    0, SNDRV_PCM_STREAM_PLAYBACK, PIPE_RSVD,
+		SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
 	{CHT_DPCM_PROBE, 0, SNDRV_PCM_STREAM_PLAYBACK,
 		SST_DFW_PATH_INDEX_PROBE1_PIPE_IN >> SST_DFW_PATH_ID_SHIFT,
 		SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
@@ -77,6 +79,8 @@ static struct sst_dev_stream_map dpcm_strm_map_cht[] = {
 		SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
 	{CHT_DPCM_VOIP,  0, SNDRV_PCM_STREAM_CAPTURE, PIPE_RSVD,
 		SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
+	{CHT_DPCM_LL,    0, SNDRV_PCM_STREAM_CAPTURE, PIPE_RSVD,
+		SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
 	{CHT_DPCM_PROBE, 0, SNDRV_PCM_STREAM_CAPTURE,
 		SST_DFW_PATH_INDEX_PROBE1_PIPE_OUT >> SST_DFW_PATH_ID_SHIFT,
 		SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
-- 
1.9.1

