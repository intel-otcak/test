From 17c2b99ce95f56477f966b2ea0e3b0678d896088 Mon Sep 17 00:00:00 2001
From: "Thulasimani,Sivakumar" <sivakumar.thulasimani@intel.com>
Date: Tue, 12 Jan 2016 10:56:20 +0530
Subject: [PATCH 4/5] Revert "REVERTME [VPG]: drm/i915: Fix m2 programming for
 CHT"

This reverts commit efb1b7659c943dc8e21f75522f2284b63943b5e5.
DP m2 values alone required additional shift of 2 bits since
the precalculated values were with the shift.
The pll calculation logic used for hdmi is implemented in
such a way that it considers this shift thus requiring
special handling for DP alone. Once this patch is reverted
and the precalculation is updated both DP and HDMI pll values
will have m2 at the same offset and work as expected.

Change-Id: Ia62da90ee011612640326c7bb72a753b591a5ec5
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-14849
Signed-off-by: Sivakumar Thulasimani <sivakumar.thulasimani@intel.com>
Reviewed-on: https://android.intel.com:443/468193
---
 drivers/gpu/drm/i915/i915_reg.h      |  3 ---
 drivers/gpu/drm/i915/intel_display.c | 22 ++--------------------
 2 files changed, 2 insertions(+), 23 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_reg.h b/drivers/gpu/drm/i915/i915_reg.h
index 0d8e9e9..6315be9 100644
--- a/drivers/gpu/drm/i915/i915_reg.h
+++ b/drivers/gpu/drm/i915/i915_reg.h
@@ -1050,9 +1050,6 @@ enum punit_power_well {
 /* CHV dpPhy registers */
 #define _CHV_PLL_DW0_CH0		0x8000
 #define _CHV_PLL_DW0_CH1		0x8180
-#define  DPIO_CHV_M2_FRACTION_MASK	0x3fffff
-#define  DPIO_CHV_M2_HDMI_NON_FRACTION_SHIFT	22
-#define  DPIO_CHV_M2_DP_NON_FRACTION_SHIFT	24
 #define CHV_PLL_DW0(ch) _PIPE(ch, _CHV_PLL_DW0_CH0, _CHV_PLL_DW0_CH1)
 
 #define _CHV_PLL_DW1_CH0		0x8004
diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index 2b09c4f..7a80803 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -6822,8 +6822,6 @@ static void chv_update_pll(struct intel_crtc *crtc)
 	int dpll_reg = DPLL(crtc->pipe);
 	enum dpio_channel port = vlv_pipe_to_channel(pipe);
 	u32 loopfilter, tribuf_calcntr;
-	struct intel_encoder *encoder;
-	struct drm_crtc *drm_crtc = &crtc->base;
 	u32 bestn, bestm1, bestm2, bestp1, bestp2, bestm2_frac;
 	u32 dpio_val = 0;
 	int vco;
@@ -6838,25 +6836,9 @@ static void chv_update_pll(struct intel_crtc *crtc)
 		(crtc->config.pixel_multiplier - 1) << DPLL_MD_UDI_MULTIPLIER_SHIFT;
 
 	bestn = crtc->config.dpll.n;
-	bestm2_frac = crtc->config.dpll.m2 & DPIO_CHV_M2_FRACTION_MASK;
+	bestm2_frac = crtc->config.dpll.m2 & 0x3fffff;
 	bestm1 = crtc->config.dpll.m1;
-	bestm2 = crtc->config.dpll.m2 >> DPIO_CHV_M2_HDMI_NON_FRACTION_SHIFT;
-
-	for_each_encoder_on_crtc(dev, drm_crtc, encoder) {
-		if ((encoder->type == INTEL_OUTPUT_DISPLAYPORT) ||
-			(encoder->type == INTEL_OUTPUT_EDP)) {
-
-			/*
-			 * Correct shift is 24 as per Spec but
-			 * restricting this to DP for now since
-			 * this causes regression on HDMI
-			 */
-			bestm2 = crtc->config.dpll.m2 >>
-				DPIO_CHV_M2_DP_NON_FRACTION_SHIFT;
-			break;
-		}
-	}
-
+	bestm2 = crtc->config.dpll.m2 >> 22;
 	bestp1 = crtc->config.dpll.p1;
 	bestp2 = crtc->config.dpll.p2;
 	vco = crtc->config.dpll.vco;
-- 
1.9.1

