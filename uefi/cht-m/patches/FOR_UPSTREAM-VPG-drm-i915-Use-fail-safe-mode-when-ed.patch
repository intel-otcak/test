From 6684828ad55631959b1833ccbe0cf783c2c08ae9 Mon Sep 17 00:00:00 2001
From: "Thulasimani,Sivakumar" <sivakumar.thulasimani@intel.com>
Date: Wed, 4 Nov 2015 20:15:08 +0530
Subject: [PATCH 25/28] FOR_UPSTREAM [VPG]: drm/i915: Use fail safe mode when
 edid is corrupt

This patch forces panel to use fail safe mode when it is detected
that edid is corrupt.

For now this is performed only when automated test request is
received. This is because DRM's edid parser recovers from
basic corruption in edid resulting in normal functioning.

This can be modified to be used anytime by using edid_corrupt
flag instead of checking for Atomated test request flag.

v2: use 18bpp when using failsafe mode

Change-Id: I843696f005e519a51394c0834bf0f01e50e53b19
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-9749
Signed-off-by: Sivakumar Thulasimani <sivakumar.thulasimani@intel.com>
Reviewed-on: https://android.intel.com:443/439698
---
 drivers/gpu/drm/i915/intel_dp.c | 22 +++++++++++++++++++---
 1 file changed, 19 insertions(+), 3 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_dp.c b/drivers/gpu/drm/i915/intel_dp.c
index 708a857..c98d61f 100644
--- a/drivers/gpu/drm/i915/intel_dp.c
+++ b/drivers/gpu/drm/i915/intel_dp.c
@@ -1040,9 +1040,12 @@ intel_dp_compute_config(struct intel_encoder *encoder,
 		      max_lane_count, bws[max_clock],
 		      adjusted_mode->crtc_clock);
 
-	/* Walk through all bpp values. Luckily they're all nicely spaced with 2
-	 * bpc in between. */
-	bpp = pipe_config->pipe_bpp;
+	if (intel_dp->compliance_test_data == INTEL_DP_RESOLUTION_FAILSAFE)
+		bpp = 18;
+	else {
+		bpp = pipe_config->pipe_bpp;
+	}
+
 	if (is_edp(intel_dp)) {
 		edid = intel_dp_get_edid(drm_connector, &intel_dp->aux.ddc);
 
@@ -1073,6 +1076,10 @@ intel_dp_compute_config(struct intel_encoder *encoder,
 		}
 	}
 
+	/*
+	 * Walk through all bpp values. Luckily they're all nicely spaced with 2
+	 * bpc in between.
+	 */
 	for (; bpp >= 6*3; bpp -= 2*3) {
 		mode_rate = intel_dp_link_required(adjusted_mode->crtc_clock,
 						   bpp);
@@ -4942,6 +4949,15 @@ static int intel_dp_get_modes(struct drm_connector *connector)
 	enum intel_display_power_domain power_domain;
 	int ret;
 
+	if (intel_dp->compliance_test_data == INTEL_DP_RESOLUTION_FAILSAFE) {
+		int count;
+
+		count = drm_add_modes_noedid(connector, 640, 480);
+		drm_set_preferred_mode(connector, 640, 480);
+		DRM_ERROR("Using fail mode since edid is corrupt\n");
+		return count;
+	}
+
 	/* We should parse the EDID data and find out if it has an audio sink
 	 */
 
-- 
1.9.1

