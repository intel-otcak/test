From 3491cf3d2e41864b61a194a55f23e9054bbf37d9 Mon Sep 17 00:00:00 2001
From: haiqiang yao <haiqiangx.yao@intel.com>
Date: Wed, 22 Apr 2015 19:04:05 +0800
Subject: [PATCH 380/462] atomisp2:fix multiple calls compat_alloc_user_space
 in one func

(The patch was ported form r51-stable branch to main)

Actually, we get the same memory address when calling multiple
times to the compat_alloc_user_space, that lead to incorrect ISP
parameters to the atomisp drivers. so we need to fix multiple
calls to compat_alloc_user_space in one single function and can
be called only once.

Change-Id: I20b791c5b250b492b9e3e68decefc9674aa2558c
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-35172
Signed-off-by: haiqiang yao <haiqiangx.yao@intel.com>
Reviewed-on: https://icggerrit.ir.intel.com/52927
Build: IMIN-legacy (SC)
Approver: Bin B Han <bin.b.han@intel.com>
Reviewed-by: Bin B Han <bin.b.han@intel.com>
Validation-Android: Wei Tao <wei.tao@intel.com>
Integrator: HaipingX Yang <haipingx.yang@intel.com>
Signed-off-by: Ding Yunliang <yunliang.ding@intel.com>
Reviewed-on: https://icggerrit.ir.intel.com/54312
Reviewed-by: Bingbu Cao <bingbu.cao@intel.com>
Approver: Bingbu Cao <bingbu.cao@intel.com>
Build: IMIN (SC)
Integrator: WeiX Meng <weix.meng@intel.com>
Build: WeiX Meng <weix.meng@intel.com>
Reviewed-by: WeiX Meng <weix.meng@intel.com>
Maintainer: WeiX Meng <weix.meng@intel.com>
---
 .../atomisp_driver/atomisp_compat_ioctl32.c        | 25 ++++++++++++++--------
 1 file changed, 16 insertions(+), 9 deletions(-)

diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_compat_ioctl32.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_compat_ioctl32.c
index 862d349..64de0b0 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_compat_ioctl32.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_compat_ioctl32.c
@@ -693,7 +693,8 @@ static int get_atomisp_parameters32(struct atomisp_parameters *kp,
 {
 	int n = offsetof(struct atomisp_parameters32, output_frame) /
 				sizeof(compat_uptr_t);
-
+	unsigned int size, offset = 0;
+	void  __user *user_ptr;
 	if (!access_ok(VERIFY_READ, up, sizeof(struct atomisp_parameters32)))
 			return -EFAULT;
 
@@ -717,6 +718,12 @@ static int get_atomisp_parameters32(struct atomisp_parameters *kp,
 			struct atomisp_dvs_6axis_config dvs_6axis_config;
 		} karg;
 
+		size = sizeof(struct atomisp_shading_table) +
+				sizeof(struct atomisp_morph_table) +
+				sizeof(struct atomisp_dis_coefficients) +
+				sizeof(struct atomisp_dvs_6axis_config);
+		user_ptr = compat_alloc_user_space(size);
+
 		/* handle shading table */
 		if (up->shading_table != 0) {
 			if (get_atomisp_shading_table32(&karg.shading_table,
@@ -724,8 +731,8 @@ static int get_atomisp_parameters32(struct atomisp_parameters *kp,
 						(uintptr_t)up->shading_table))
 				return -EFAULT;
 
-			kp->shading_table = compat_alloc_user_space(
-					sizeof(struct atomisp_shading_table));
+			kp->shading_table = user_ptr + offset;
+			offset = sizeof(struct atomisp_shading_table);
 			if (!kp->shading_table)
 				return -EFAULT;
 
@@ -742,8 +749,8 @@ static int get_atomisp_parameters32(struct atomisp_parameters *kp,
 						(uintptr_t)up->morph_table))
 				return -EFAULT;
 
-			kp->morph_table = compat_alloc_user_space(
-					sizeof(struct atomisp_morph_table));
+			kp->morph_table = user_ptr + offset;
+			offset += sizeof(struct atomisp_morph_table);
 			if (!kp->morph_table)
 				return -EFAULT;
 
@@ -759,8 +766,8 @@ static int get_atomisp_parameters32(struct atomisp_parameters *kp,
 						(uintptr_t)up->dvs2_coefs))
 				return -EFAULT;
 
-			kp->dvs2_coefs = compat_alloc_user_space(
-				sizeof(struct atomisp_dis_coefficients));
+			kp->dvs2_coefs = user_ptr + offset;
+			offset += sizeof(struct atomisp_dis_coefficients);
 			if (!kp->dvs2_coefs)
 				return -EFAULT;
 
@@ -775,8 +782,8 @@ static int get_atomisp_parameters32(struct atomisp_parameters *kp,
 						(uintptr_t)up->dvs_6axis_config))
 				return -EFAULT;
 
-			kp->dvs_6axis_config = compat_alloc_user_space(
-				sizeof(struct atomisp_dvs_6axis_config));
+			kp->dvs_6axis_config = user_ptr + offset;
+			offset += sizeof(struct atomisp_dvs_6axis_config);
 			if (!kp->dvs_6axis_config)
 				return -EFAULT;
 
-- 
1.9.1

