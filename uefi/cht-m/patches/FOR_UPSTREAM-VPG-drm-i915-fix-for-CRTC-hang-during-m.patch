From 0dccef9bc901ccfe46d31938280b9404fb7378df Mon Sep 17 00:00:00 2001
From: "Thulasimani,Sivakumar" <sivakumar.thulasimani@intel.com>
Date: Tue, 20 Oct 2015 20:23:23 +0530
Subject: [PATCH 20/28] FOR_UPSTREAM [VPG]: drm/i915: fix for CRTC hang during
 modeset failure

It is possible for link training in DP to fail resulting in
failure to apply the mode. This patch checks the active status
of the connector and returns failure if connector is not
set to active after crtc enable call.

v2: fixed condition inside set_display to check for !active

Change-Id: I2ce78bc341fa98ce1c20d78b1e5b033898a42c36
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-9749
Signed-off-by: Sivakumar Thulasimani <sivakumar.thulasimani@intel.com>
Reviewed-on: https://android.intel.com:443/439693
---
 drivers/gpu/drm/i915/intel_display.c | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index 2981e4e..fa96d50 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -11470,6 +11470,12 @@ static int intel_crtc_set_display(struct drm_crtc *crtc,
 		DRM_ERROR("Atomicity version or struct size mismatch");
 		return -EINVAL;
 	}
+
+	if (!intel_crtc_active(crtc)) {
+		DRM_ERROR("CRTC not active\n");
+		return -EINVAL;
+	}
+
 	intel_crtc->atomic_update = true;
 
 	intel_runtime_pm_get(dev_priv);
@@ -12774,6 +12780,11 @@ static int __intel_set_mode(struct drm_crtc *crtc,
 			to_intel_encoder(connector->encoder)->connectors_active = true;
 			dev_priv->display.crtc_enable(&intel_crtc->base);
 
+			if (!intel_crtc->active) {
+				ret = -EINVAL;
+				intel_crtc->skip_check_state = true;
+			}
+
 			/*
 			 * if DP display was used might have to retry if
 			 * link training failed
-- 
1.9.1

