From 9eba8e06b389c0c906eb53e192a5c846fd0fb0c5 Mon Sep 17 00:00:00 2001
From: Zhang Yanmin <yanmin.zhang@intel.com>
Date: Mon, 25 Jan 2016 10:44:05 +0800
Subject: [PATCH 02/28] sst: deal with the failure of intel_sst_runtime_suspend
 in intel_sst_suspend

intel_sst_runtime_suspend might fail and intel_sst_suspend
need abort s3.

Change-Id: I45150f1f35d57024728e805ef71a0754221ec30c
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-17630
Signed-off-by: Zhang Yanmin <yanmin.zhang@intel.com>
Reviewed-on: https://android.intel.com:443/462722
---
 sound/soc/intel/sst/sst.c | 11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

diff --git a/sound/soc/intel/sst/sst.c b/sound/soc/intel/sst/sst.c
index 424d201..f4acab1 100644
--- a/sound/soc/intel/sst/sst.c
+++ b/sound/soc/intel/sst/sst.c
@@ -1302,6 +1302,7 @@ static int intel_sst_suspend(struct device *dev)
 	struct intel_sst_drv *ctx = dev_get_drvdata(dev);
 	bool reset_dapm;
 	struct sst_platform_cb_params cb_params;
+	int ret = 0;
 
 	pr_debug("Enter: %s\n", __func__);
 
@@ -1320,10 +1321,18 @@ static int intel_sst_suspend(struct device *dev)
 	sst_drv_ctx->sst_suspend_state = true;
 	mutex_unlock(&ctx->sst_lock);
 
+	ret = intel_sst_runtime_suspend(dev);
+	if (ret){
+		dev_err(dev, "can't suspend, ret[%d]\n", ret);
+		mutex_lock(&ctx->sst_lock);
+		sst_drv_ctx->sst_suspend_state = false;
+		mutex_unlock(&ctx->sst_lock);
+		return ret;
+	}
+
 	if (ctx->pdata->start_recovery_timer)
 		sst_set_timer(&ctx->monitor_lpe, false);
 
-	intel_sst_runtime_suspend(dev);
 	cb_params.params = &reset_dapm;
 	cb_params.event = SST_PLATFORM_TRIGGER_DAPM_STATE_CHANGE;
 	reset_dapm = true;
-- 
1.9.1

