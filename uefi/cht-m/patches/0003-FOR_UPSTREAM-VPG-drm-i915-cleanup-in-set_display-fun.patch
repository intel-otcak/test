From ef070767d373a4285f784b7cab56f0aeee192916 Mon Sep 17 00:00:00 2001
Message-Id: <ef070767d373a4285f784b7cab56f0aeee192916.1423872525.git.feitong.yi@intel.com>
In-Reply-To: <3062c7e6b919c393846ff0e13558e7f648b352ca.1423872525.git.feitong.yi@intel.com>
References: <3062c7e6b919c393846ff0e13558e7f648b352ca.1423872525.git.feitong.yi@intel.com>
From: "Kumar, Kiran S" <kiran.s.kumar@intel.com>
Date: Wed, 28 Jan 2015 15:03:25 +0530
Subject: [PATCH 03/95] FOR_UPSTREAM [VPG]: drm/i915: cleanup in set_display
 function

Cleaning up unused code. No need to return error if drm mode object is
failing. And also timeout is not being used, hence can be removed.

Issue: GMINL-5637
Change-Id: Ic4a91ad368ed37cea1ef666522aba2326c1f48fa
Signed-off-by: Arun R Murthy <arun.r.murthy@intel.com>
---
 drivers/gpu/drm/i915/intel_display.c |    6 ++----
 1 file changed, 2 insertions(+), 4 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index 1a2f8dd..7fc7e3d 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -10700,6 +10700,7 @@ static void i915_commit(struct drm_i915_private *dev_priv,
 	struct intel_disp_reg *reg;
 	int plane = 0;
 
+	/* Enable Primary plane */
 	if (type == SPRITE_PLANE) {
 		reg = &intel_plane->reg;
 		plane = intel_plane->plane;
@@ -11000,8 +11001,6 @@ int intel_set_disp_commit_regs(struct drm_mode_set_display *disp,
 				obj = drm_mode_object_find(dev,
 					disp->plane[i].obj_id,
 					DRM_MODE_OBJECT_PLANE);
-				if (!obj)
-					return -ENOENT;
 				drm_plane = obj_to_plane(obj);
 				intel_plane = to_intel_plane(drm_plane);
 				i915_commit(dev_priv, (void *)intel_plane,
@@ -11032,14 +11031,13 @@ static void intel_pipe_vblank_evade(struct drm_crtc *crtc)
 	/* FIXME needs to be calibrated sensibly */
 	u32 min = crtc->hwmode.crtc_vdisplay - usecs_to_scanlines(crtc, 50);
 	u32 max = crtc->hwmode.crtc_vdisplay - 1;
-	long timeout = msecs_to_jiffies(3);
 	u32 val;
 
 	local_irq_disable();
 	val = I915_READ(PIPEDSL(pipe));
 	local_irq_enable();
 
-	while (val >= min && val <= max && timeout > 0) {
+	while (val >= min && val <= max) {
 
 		intel_wait_for_vblank(dev_priv->dev, intel_crtc->pipe);
 		local_irq_disable();
-- 
1.7.9.5

