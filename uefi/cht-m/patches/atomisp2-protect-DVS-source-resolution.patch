From 05273a710651b4633b44848d24af7c6383b73c12 Mon Sep 17 00:00:00 2001
From: Bin Han <bin.b.han@intel.com>
Date: Fri, 26 Feb 2016 18:42:08 +0800
Subject: [PATCH 1/3] atomisp2: protect DVS source resolution

This patch detects that if DVS source resolution is
smaller than output resolution when ISP padding pixels
are removed from source resolution.  If this happens,
count in this pading pixels to make the video pipeline
can still work even there is some garbage data may show
up.

Change-Id: I8b4b5859a48fe3369e1fb613eead35e31250f460
Original-Tracked_On: #H1504167283
Signed-off-by: Bin Han <bin.b.han@intel.com>
Reviewed-on: https://icggerrit.ir.intel.com/104231
Build: Dessert M CHT FFD (SC)
Build: Dessert M BXT RVP (SC)
Reviewed-by: GuoqingX Zhang <guoqingx.zhang@intel.com>
Reviewed-by: HaiqiangX Yao <haiqiangx.yao@intel.com>
Approver: Tian Shu Qiu <tian.shu.qiu@intel.com>
Validation-Android: Wei Tao <wei.tao@intel.com>
Integrator: WeiX Meng <weix.meng@intel.com>
Reviewed-by: WeiX Meng <weix.meng@intel.com>
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-22356
Signed-off-by: Tao Wei <wei.tao@intel.com>
Reviewed-on: https://android.intel.com:443/477514
---
 .../drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c | 13 ++++++++++++-
 1 file changed, 12 insertions(+), 1 deletion(-)

diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c
index 36c72a2..7d9a6be 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c
@@ -2627,9 +2627,20 @@ int atomisp_get_dvs2_bq_resolutions(struct atomisp_sub_device *asd,
 		cropped_w = input_config->input_res.width - pad_width;
 		cropped_h = input_config->input_res.height - pad_height;
 
-		/* the GDC input resolution */
+		/*
+		 * the GDC input resolution
+		 * If the cropped resolution (pad removed), then count
+		 * in the pad as input.
+		 */
 		bq_res->source_bq.width_bq = cropped_w / 2;
+		if (bq_res->source_bq.width_bq < bq_res->output_bq.width_bq)
+			bq_res->source_bq.width_bq =
+				bq_res->output_bq.width_bq;
 		bq_res->source_bq.height_bq = cropped_h / 2;
+		if (bq_res->source_bq.height_bq < bq_res->output_bq.height_bq)
+			bq_res->source_bq.height_bq =
+				bq_res->output_bq.height_bq;
+
 		/* spatial filter shift, always 4 pixels */
 		bq_res->gdc_shift_bq.width_bq = 4 / 2;
 		bq_res->gdc_shift_bq.height_bq = 4 / 2;
-- 
1.9.1

