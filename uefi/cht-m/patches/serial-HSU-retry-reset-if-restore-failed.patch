From c936f95af806c240302c3db7c8a7cb40e9e4745b Mon Sep 17 00:00:00 2001
From: Huiquan Zhong <huiquan.zhong@intel.com>
Date: Mon, 6 Jul 2015 20:25:44 +0800
Subject: [PATCH] serial: HSU: retry reset if restore failed

Sometimes, HSU devices restore failed after one reset, read IIR
register is '0'. Add retry mechanism to avoid HSU controller is
not ready.

Change-Id: Id796f3dc2d4dacca22ca74f0ca46892a5b59d1cc
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-40827
Signed-off-by: Huiquan Zhong <huiquan.zhong@intel.com>
---
 drivers/tty/serial/hsu/hsu_core.c | 13 ++++++++++---
 drivers/tty/serial/hsu/hsu_plat.c |  2 ++
 2 files changed, 12 insertions(+), 3 deletions(-)

diff --git a/drivers/tty/serial/hsu/hsu_core.c b/drivers/tty/serial/hsu/hsu_core.c
index 21a565ab463b..1763c5a73ecb 100644
--- a/drivers/tty/serial/hsu/hsu_core.c
+++ b/drivers/tty/serial/hsu/hsu_core.c
@@ -1506,12 +1506,19 @@ static struct uart_driver serial_hsu_reg = {
 static void hsu_regs_context(struct uart_hsu_port *up, int op)
 {
 	struct hsu_port_cfg *cfg = up->port_cfg;
+	int retry = 10;
 
 	if (op == context_load) {
-		usleep_range(10, 100);
+		do {
+			if (cfg->hw_reset)
+				cfg->hw_reset(up->port.membase);
 
-		if (cfg->hw_reset)
-			cfg->hw_reset(up->port.membase);
+			if (serial_in(up, UART_IIR))
+				break;
+		} while (--retry);
+
+		if (unlikely(retry == 0))
+			pr_err("HSU resume failed\n");
 
 		serial_out(up, UART_LCR, up->lcr);
 		serial_out(up, UART_LCR, up->lcr | UART_LCR_DLAB);
diff --git a/drivers/tty/serial/hsu/hsu_plat.c b/drivers/tty/serial/hsu/hsu_plat.c
index f68cccae9a63..40ae54632255 100644
--- a/drivers/tty/serial/hsu/hsu_plat.c
+++ b/drivers/tty/serial/hsu/hsu_plat.c
@@ -159,7 +159,9 @@ static int cht_hsu_hw_resume(struct uart_hsu_port *up)
 static void cht_hsu_reset(void __iomem *addr)
 {
 	writel(0, addr + CHT_HSU_RESET);
+	usleep_range(10, 100);
 	writel(3, addr + CHT_HSU_RESET);
+	usleep_range(10, 100);
 
 	/* Disable the tx overflow IRQ */
 	writel(2, addr + CHT_HSU_OVF_IRQ);
-- 
1.9.1

