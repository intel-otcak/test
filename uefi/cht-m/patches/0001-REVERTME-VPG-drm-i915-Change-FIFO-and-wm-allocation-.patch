From 5842f3eb0e5c99754b75ef0d7258838bd167e9f8 Mon Sep 17 00:00:00 2001
Message-Id: <5842f3eb0e5c99754b75ef0d7258838bd167e9f8.1433393840.git.chang-joon.lee@intel.com>
From: vandita kulkarni <vandita.kulkarni@intel.com>
Date: Thu, 14 May 2015 05:35:53 +0530
Subject: [PATCH] REVERTME: [VPG]: drm/i915: Change FIFO and wm allocation for
 multiplane transition.

In a single plane scenario entire FIFO (100%) is allocated
for that particular Plane. In the current logic whenever
multi plane transition happens from single Plane,
FIFO allocation is changed to 50:50 if only two planes are
active and 50:25:25 if three planes are active. This causes
too frequent changes to FIFO Size allocations and contributes
to pipe hang scenario. To fix this always allocate 50:25:25
if more than one plane is active. Watermarks are updated
based on FIFO size allocation.

REVERTME: This patch is a revertme as it depends on atomicity
design and will be reverted once nuclear flip gets merged.

Issue: IMINAN-33414
Change-Id: I59fefe38d22bdea7dd6d74ec39ebd9e3b2e51d83
Signed-off-by: Arun R Murthy <arun.r.murthy@intel.com>
Signed-off-by: vandita kulkarni <vandita.kulkarni@intel.com>
---
 drivers/gpu/drm/i915/intel_pm.c | 40 +++-------------------------------------
 1 file changed, 3 insertions(+), 37 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_pm.c b/drivers/gpu/drm/i915/intel_pm.c
index 5e9ff76..98e73d2 100644
--- a/drivers/gpu/drm/i915/intel_pm.c
+++ b/drivers/gpu/drm/i915/intel_pm.c
@@ -1497,8 +1497,8 @@ void vlv_update_dsparb(struct intel_crtc *intel_crtc)
 			sr = vlv_update_wm_val(fifo_size,
 					intel_crtc->vlv_wm.sr);
 		}
-	} else if (hweight32(plane_stat) == 3) {
-		/* all 3 planes enabled, fifo allocation 50:25:25 */
+	} else {
+		/* multiplane mode, fifo allocation 50:25:25 */
 		dsparb |= DSPARB_50_25_25;
 		dsparb_h |= DSPARB2_50_25_25;
 
@@ -1506,46 +1506,11 @@ void vlv_update_dsparb(struct intel_crtc *intel_crtc)
 		fifo_size = (32 * 1024 * 50) / 100;
 		pa = vlv_update_wm_val(fifo_size,
 					intel_crtc->vlv_wm.pa);
-		pa = 0x0f;
 		fifo_size = (32 * 1024 * 25) / 100;
 		sa = vlv_update_wm_val(fifo_size,
 					intel_crtc->vlv_wm.sa);
-		sa = 0x04;
 		sb = vlv_update_wm_val(fifo_size,
 					intel_crtc->vlv_wm.sb);
-		sb = 0x04;
-
-	} else if (hweight32(plane_stat) == 2) {
-		/* 2 planes, enable fifo allocation 50:50 */
-		fifo_size = (32 * 1024 * 50) / 100;
-		if ((plane_stat & PRI_SA) == PRI_SA) {
-			dsparb |= DSPARB_PRI50_SA50;
-			dsparb_h |= DSPARB2_PRI50_SA50;
-
-			pa = vlv_update_wm_val(fifo_size,
-					intel_crtc->vlv_wm.pa);
-			sa = vlv_update_wm_val(fifo_size,
-					intel_crtc->vlv_wm.sa);
-
-		} else if ((plane_stat & PRI_SB) == PRI_SB) {
-			dsparb |= DSPARB_PRI50_SB50;
-			dsparb_h |= DSPARB2_PRI50_SB50;
-
-			pa = vlv_update_wm_val(fifo_size,
-					intel_crtc->vlv_wm.pa);
-			sb = vlv_update_wm_val(fifo_size,
-					intel_crtc->vlv_wm.sb);
-		} else {
-			dsparb |= DSPARB_SA50_SB50;
-			dsparb_h |= DSPARB2_SA50_SB50;
-
-			sa = vlv_update_wm_val(fifo_size,
-					intel_crtc->vlv_wm.sa);
-			sb = vlv_update_wm_val(fifo_size,
-					intel_crtc->vlv_wm.sb);
-		}
-	} else {
-		DRM_ERROR("Invalid pipe\n");
 	}
 
 	if (!single_pipe_enabled(pipe_stat) ||
@@ -1553,6 +1518,7 @@ void vlv_update_dsparb(struct intel_crtc *intel_crtc)
 		pa = 0;
 		sa = 0;
 		sb = 0;
+		sr = 0;
 	}
 
 	if (sr) {
-- 
1.9.1

