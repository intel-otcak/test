From 53d9a8c02aef15797b61189e52f3dc0e18ecf584 Mon Sep 17 00:00:00 2001
From: Mythri P K <mythri.p.k@intel.com>
Date: Sat, 17 May 2014 03:39:32 +0530
Subject: [PATCH 25/39] ASoC: DFW platform: use soc_bytes_ext struct for algo

Issue: GMINL-3680

Use the standard soc_bytes_ext struct for algo and
have the local struct as a private data of bytes_ext
struct

Change-Id: Ib1f2d3668f0b93eac934b885e1909451ec1a86b9
Signed-off-by: Mythri P K <mythri.p.k@intel.com>
---
 sound/soc/intel/platform-libs/controls_v2_dpcm.c | 20 ++++++++++++++------
 sound/soc/intel/platform-libs/sst_widgets.h      |  8 +++++---
 2 files changed, 19 insertions(+), 9 deletions(-)

diff --git a/sound/soc/intel/platform-libs/controls_v2_dpcm.c b/sound/soc/intel/platform-libs/controls_v2_dpcm.c
index 6b5b638..02c9d90 100644
--- a/sound/soc/intel/platform-libs/controls_v2_dpcm.c
+++ b/sound/soc/intel/platform-libs/controls_v2_dpcm.c
@@ -391,13 +391,15 @@ static void sst_send_algo_cmd(struct sst_data *sst,
 static void sst_find_and_send_pipe_algo(struct sst_data *sst,
 					const char *pipe, struct sst_ids *ids)
 {
+	struct soc_bytes_ext *sb;
 	struct sst_algo_control *bc;
 	struct module *algo = NULL;
 
 	pr_debug("Enter: %s, widget=%s\n", __func__, pipe);
 
 	list_for_each_entry(algo, &ids->algo_list, node) {
-		bc = (void *)algo->kctl->private_value;
+		sb = (void *) algo->kctl->private_value;
+		bc = (struct sst_algo_control *)sb->pvt_data;
 
 		pr_debug("Found algo control name=%s pipe=%s\n", algo->kctl->id.name, pipe);
 		sst_send_algo_cmd(sst, bc);
@@ -407,7 +409,8 @@ static void sst_find_and_send_pipe_algo(struct sst_data *sst,
 int sst_algo_bytes_ctl_info(struct snd_kcontrol *kcontrol,
 			    struct snd_ctl_elem_info *uinfo)
 {
-	struct sst_algo_control *bc = (void *)kcontrol->private_value;
+	struct soc_bytes_ext *sb = (void *) kcontrol->private_value;
+	struct sst_algo_control *bc = (struct sst_algo_control *)sb->pvt_data;
 	struct snd_soc_platform *platform = snd_kcontrol_chip(kcontrol);
 
 	uinfo->type = SNDRV_CTL_ELEM_TYPE_BYTES;
@@ -427,7 +430,8 @@ int sst_algo_bytes_ctl_info(struct snd_kcontrol *kcontrol,
 static int sst_algo_control_get(struct snd_kcontrol *kcontrol,
 				struct snd_ctl_elem_value *ucontrol)
 {
-	struct sst_algo_control *bc = (void *)kcontrol->private_value;
+	struct soc_bytes_ext *sb = (void *) kcontrol->private_value;
+	struct sst_algo_control *bc = (struct sst_algo_control *)sb->pvt_data;
 
 	switch (bc->type) {
 	case SST_ALGO_PARAMS:
@@ -451,7 +455,8 @@ static int sst_algo_control_set(struct snd_kcontrol *kcontrol,
 {
 	struct snd_soc_platform *platform = snd_kcontrol_chip(kcontrol);
 	struct sst_data *sst = snd_soc_platform_get_drvdata(platform);
-	struct sst_algo_control *bc = (void *)kcontrol->private_value;
+	struct soc_bytes_ext *sb = (void *) kcontrol->private_value;
+	struct sst_algo_control *bc = (struct sst_algo_control *)sb->pvt_data;
 
 	pr_debug("in %s control_name=%s\n", __func__, kcontrol->id.name);
 	switch (bc->type) {
@@ -1137,13 +1142,15 @@ static int sst_tone_generator_event(struct snd_soc_dapm_widget *w,
 	if (SND_SOC_DAPM_EVENT_ON(event)) {
 		int len;
 		struct module *algo;
+		struct soc_bytes_ext *sb;
 		struct sst_algo_control *bc;
 		struct sst_cmd_set_params *cmd;
 
 		algo = list_first_entry(&ids->algo_list, struct module, node);
 		if (algo == NULL)
 			return -EINVAL;
-		bc = (void *)algo->kctl->private_value;
+		sb = (void *)algo->kctl->private_value;
+		bc = (struct sst_algo_control *)sb->pvt_data;
 		len = sizeof(cmd->dst) + sizeof(cmd->command_id) + bc->max;
 
 		cmd = kzalloc(len, GFP_KERNEL);
@@ -1899,7 +1906,8 @@ static int sst_fill_module_list(struct snd_kcontrol *kctl,
 		module->kctl = kctl;
 		list_add_tail(&module->node, &ids->gain_list);
 	} else if (type == SST_MODULE_ALGO) {
-		struct sst_algo_control *bc = (void *)kctl->private_value;
+		struct soc_bytes_ext *sb = (void *) kctl->private_value;
+		struct sst_algo_control *bc = (struct sst_algo_control *)sb->pvt_data;
 
 		bc->w = w;
 		module->kctl = kctl;
diff --git a/sound/soc/intel/platform-libs/sst_widgets.h b/sound/soc/intel/platform-libs/sst_widgets.h
index be63971..b87bc27 100644
--- a/sound/soc/intel/platform-libs/sst_widgets.h
+++ b/sound/soc/intel/platform-libs/sst_widgets.h
@@ -262,9 +262,11 @@ struct sst_algo_control {
 
 /* size of the control = size of params + size of length field */
 #define SST_ALGO_CTL_VALUE(xcount, xtype, xpipe, xmod, xtask, xcmd)			\
-	(struct sst_algo_control){							\
-		.max = xcount + sizeof(u16), .type = xtype, .module_id = xmod,			\
-		.pipe_id = xpipe, .task_id = xtask, .cmd_id = xcmd,			\
+	(struct soc_bytes_ext) {.max = xcount + sizeof(u16),							\
+		.pvt_data = (char *) &(struct sst_algo_control)				\
+		{.max = xcount + sizeof(u16), .type = xtype, .module_id = xmod,		\
+			.pipe_id = xpipe, .task_id = xtask, .cmd_id = xcmd,		\
+		}									\
 	}
 
 #define SST_ALGO_KCONTROL(xname, xcount, xmod, xpipe,					\
-- 
1.9.1

