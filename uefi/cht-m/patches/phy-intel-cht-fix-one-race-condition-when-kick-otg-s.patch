From fdeaf81e90038b76767317687695d6cd941618be Mon Sep 17 00:00:00 2001
From: "Wu, Hao" <hao.wu@intel.com>
Date: Wed, 3 Jun 2015 16:11:14 +0800
Subject: [PATCH] phy-intel-cht: fix one race condition when kick otg
 statemachine

Cache host/gadget value before record the USB events (e.g b_sess_vld),
will cause some problem if set_host/set_peripheral update the host or
gadget value. This patch is to fix this problem.

Change-Id: I621a2117fc65a02054bae215b4f1373047be43ca
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-38297
Signed-off-by: Wu, Hao <hao.wu@intel.com>
---
 drivers/usb/phy/phy-intel-cht.c | 19 +++++++++++--------
 1 file changed, 11 insertions(+), 8 deletions(-)

diff --git a/drivers/usb/phy/phy-intel-cht.c b/drivers/usb/phy/phy-intel-cht.c
index 8cf94e47326f..3879b25162b1 100644
--- a/drivers/usb/phy/phy-intel-cht.c
+++ b/drivers/usb/phy/phy-intel-cht.c
@@ -300,19 +300,22 @@ static void cht_otg_stop(struct platform_device *pdev)
 		iounmap(cht_otg_dev->regs);
 }
 
+static int cht_host_gadget_ready(struct cht_otg *otg_dev)
+{
+	if (otg_dev && otg_dev->phy.otg->host && otg_dev->phy.otg->gadget)
+		return 1;
+
+	return 0;
+}
+
 static int cht_otg_handle_notification(struct notifier_block *nb,
 				unsigned long event, void *data)
 {
-	struct usb_bus *host;
-	struct usb_gadget *gadget;
 	int state;
 
 	if (!cht_otg_dev)
 		return NOTIFY_BAD;
 
-	host = cht_otg_dev->phy.otg->host;
-	gadget = cht_otg_dev->phy.otg->gadget;
-
 	switch (event) {
 	/* USB_EVENT_VBUS: vbus valid event */
 	case USB_EVENT_VBUS:
@@ -322,7 +325,7 @@ static int cht_otg_handle_notification(struct notifier_block *nb,
 		/* don't kick the state machine if host or device controller
 		 * is not registered. Just wait to kick it when set_host or
 		 * set_peripheral.*/
-		if (host && gadget)
+		if (cht_host_gadget_ready(cht_otg_dev))
 			schedule_work(&cht_otg_dev->fsm_work);
 		state = NOTIFY_OK;
 		break;
@@ -331,7 +334,7 @@ static int cht_otg_handle_notification(struct notifier_block *nb,
 		dev_info(cht_otg_dev->phy.dev, "USB_EVENT_ID id ground\n");
 		cht_otg_dev->fsm.id = 0;
 		/* Same as above */
-		if (host && gadget)
+		if (cht_host_gadget_ready(cht_otg_dev))
 			schedule_work(&cht_otg_dev->fsm_work);
 		state = NOTIFY_OK;
 		break;
@@ -346,7 +349,7 @@ static int cht_otg_handle_notification(struct notifier_block *nb,
 		else
 			dev_err(cht_otg_dev->phy.dev, "why USB_EVENT_NONE?\n");
 		/* Same as above */
-		if (host && gadget)
+		if (cht_host_gadget_ready(cht_otg_dev))
 			schedule_work(&cht_otg_dev->fsm_work);
 		state = NOTIFY_OK;
 		break;
-- 
1.9.1

