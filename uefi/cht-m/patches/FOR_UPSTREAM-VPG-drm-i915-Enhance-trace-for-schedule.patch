From bff46cb87c797fc8f28801fc4b2501b4c796630c Mon Sep 17 00:00:00 2001
From: "River, Li" <river.li@intel.com>
Date: Thu, 24 Dec 2015 18:15:00 +0800
Subject: [PATCH 5/8] FOR_UPSTREAM [VPG]: drm/i915: Enhance trace for scheduler
 irq.

This commit is used to enhance trace for scheduler irq.

Tracked-On: https://jira01.devtools.intel.com/browse/OAM-27143
Change-Id: If6a7679714f1e093d70893c3867d7a6fa314a883
Signed-off-by: River, Li <river.li@intel.com>
Reviewed-on: https://android.intel.com:443/477658
Reviewed-on: https://android.intel.com:443/466812
---
 drivers/gpu/drm/i915/i915_scheduler.c |  3 ++-
 drivers/gpu/drm/i915/i915_trace.h     | 32 +++++++++++++++++++++-----------
 2 files changed, 23 insertions(+), 12 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_scheduler.c b/drivers/gpu/drm/i915/i915_scheduler.c
index 5c126cf..8047521 100644
--- a/drivers/gpu/drm/i915/i915_scheduler.c
+++ b/drivers/gpu/drm/i915/i915_scheduler.c
@@ -643,7 +643,8 @@ int i915_scheduler_handle_irq(struct intel_engine_cs *ring)
 
 	seqno = ring->get_seqno(ring, false);
 
-	trace_i915_scheduler_irq(ring, seqno);
+	trace_i915_scheduler_irq(scheduler, ring, seqno,
+			i915.scheduler_override & i915_so_direct_submit);
 
 	if (i915.scheduler_override & i915_so_direct_submit)
 		return 0;
diff --git a/drivers/gpu/drm/i915/i915_trace.h b/drivers/gpu/drm/i915/i915_trace.h
index a1ab7be..b6079eb 100644
--- a/drivers/gpu/drm/i915/i915_trace.h
+++ b/drivers/gpu/drm/i915/i915_trace.h
@@ -979,21 +979,31 @@ TRACE_EVENT(i915_scheduler_node_state_change,
 		      __entry->ring, __entry->uniq, __entry->seqno, __entry->status)
 );
 
+
 TRACE_EVENT(i915_scheduler_irq,
-	    TP_PROTO(struct intel_engine_cs *ring, uint32_t seqno),
-	    TP_ARGS(ring, seqno),
+	TP_PROTO(struct i915_scheduler *scheduler,
+		 struct intel_engine_cs *ring,
+		 uint32_t seqno, bool direct_submit),
+	TP_ARGS(scheduler, ring, seqno, direct_submit),
 
-	    TP_STRUCT__entry(
-			     __field(u32, ring)
-			     __field(u32, seqno)
-			     ),
+	TP_STRUCT__entry(
+		__field(u32, ring_id)
+		__field(u32, seqno)
+		__field(u32, last_seqno)
+		__field(bool, direct_submit)
+		),
 
-	    TP_fast_assign(
-			   __entry->ring   = ring->id;
-			   __entry->seqno  = seqno;
-			   ),
+	TP_fast_assign(
+		__entry->ring_id    = ring->id;
+		__entry->seqno	    = seqno;
+		__entry->last_seqno =
+		    direct_submit ? 0 : scheduler->last_irq_seqno[ring->id];
+		__entry->direct_submit = direct_submit;
+		),
 
-	    TP_printk("ring=%d, seqno=%d", __entry->ring, __entry->seqno)
+	TP_printk("ring=%d,seqno=%d,last_seqno=%d, direct_submit=%d",
+		__entry->ring_id, __entry->seqno, __entry->last_seqno,
+		__entry->direct_submit)
 );
 
 TRACE_EVENT(i915_gem_ring_queue,
-- 
1.9.1

