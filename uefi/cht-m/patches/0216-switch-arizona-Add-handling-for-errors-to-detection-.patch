From 781cba995ecf675f820053fc394ff354f86d0a18 Mon Sep 17 00:00:00 2001
From: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date: Fri, 30 May 2014 09:54:21 +0100
Subject: [PATCH 216/351] switch: arizona: Add handling for errors to
 detection state handlers

We should abort the handler if we got a reading error. It is preferred
to keep this error handling in the state handlers such that custom
trigger states have the options to respond to read errors in specific
ways.

Change-Id: Ie82c040f24ec31e5fb49d56df2e06a1dc9b0fa42
Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Signed-off-by: Nikesh Oswal <Nikesh.Oswal@wolfsonmicro.com>
---
 drivers/switch/switch-arizona.c |   16 +++++++++++++++-
 1 file changed, 15 insertions(+), 1 deletion(-)

diff --git a/drivers/switch/switch-arizona.c b/drivers/switch/switch-arizona.c
index 35935a5..e60ebd5 100644
--- a/drivers/switch/switch-arizona.c
+++ b/drivers/switch/switch-arizona.c
@@ -808,7 +808,9 @@ static int arizona_hpdet_moisture_reading(struct arizona_extcon_info *info,
 {
 	struct arizona *arizona = info->arizona;
 
-	if (val < arizona->pdata.hpdet_moisture_imp) {
+	if (val < 0) {
+		return val;
+	} else if (val < arizona->pdata.hpdet_moisture_imp) {
 		arizona_jds_set_state(info, &arizona_micd_microphone);
 	} else {
 		dev_warn(arizona->dev,
@@ -823,6 +825,9 @@ int arizona_hpdet_reading(struct arizona_extcon_info *info, int val)
 {
 	struct arizona *arizona = info->arizona;
 
+	if (val < 0)
+		return val;
+
 	arizona->hp_impedance = val;
 
 	if (arizona->pdata.hpdet_cb)
@@ -926,6 +931,9 @@ int arizona_micd_button_reading(struct arizona_extcon_info *info,
 	struct arizona *arizona = info->arizona;
 	int lvl, i, key;
 
+	if (val < 0)
+		return val;
+
 	if (val & MICD_LVL_0_TO_7) {
 		dev_dbg(arizona->dev, "Mic button detected\n");
 
@@ -997,6 +1005,9 @@ int arizona_micd_mic_reading(struct arizona_extcon_info *info, int val)
 	struct arizona *arizona = info->arizona;
 	int ret;
 
+	if (val < 0)
+		return val;
+
 	/* Due to jack detect this should never happen */
 	if (!(val & ARIZONA_MICD_STS)) {
 		dev_warn(arizona->dev, "Detected open circuit\n");
@@ -1088,6 +1099,9 @@ static int arizona_hpdet_acc_id_reading(struct arizona_extcon_info *info,
 	struct arizona *arizona = info->arizona;
 	int id_gpio = arizona->pdata.hpdet_id_gpio;
 
+	if (reading < 0)
+		return reading;
+
 	/*
 	 * When we're using HPDET for accessory identification we need
 	 * to take multiple measurements, step through them in sequence.
-- 
1.7.9.5

