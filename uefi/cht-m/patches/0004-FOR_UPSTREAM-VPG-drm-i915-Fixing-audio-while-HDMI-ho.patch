From 41c4564ccba53adf0c13ac5c49b2338672670f3d Mon Sep 17 00:00:00 2001
Message-Id: <41c4564ccba53adf0c13ac5c49b2338672670f3d.1425109419.git.chang-joon.lee@intel.com>
In-Reply-To: <ce15578fa48a21eff276ee8163d395e39785921c.1425109418.git.chang-joon.lee@intel.com>
References: <ce15578fa48a21eff276ee8163d395e39785921c.1425109418.git.chang-joon.lee@intel.com>
From: Sonika Jindal <sonika.jindal@intel.com>
Date: Wed, 4 Feb 2015 15:01:50 +0530
Subject: [PATCH 4/4] FOR_UPSTREAM [VPG]: drm/i915: Fixing audio while HDMI
 hotplug

Send HDMI events to Audio driver and userspace:
1. Send HDMI unplug events in hdmi_detect function.
2. Send HDMI hotplug events in get_modes call

While hotplug, event is sent first to sound driver and then to
userspace and while unplug the order is vice-versa.
The userspace call to open the sound device used to fail sometimes when
sound driver was not updated with eld. Thats why send event to
userspace only after sending it to sound driver

Issue: IMINAN-13404
Change-Id: I3ab42f0527894f99225520b840ce86ce32f7a5ce
Cc: Uma Shankar <uma.shankar@intel.com>
Signed-off-by: Sonika Jindal <sonika.jindal@intel.com>
---
 drivers/gpu/drm/i915/hdmi_audio_if.c |    7 +-----
 drivers/gpu/drm/i915/hdmi_audio_if.h |    1 -
 drivers/gpu/drm/i915/intel_hdmi.c    |   40 +++++++++++++++++++++++-----------
 3 files changed, 28 insertions(+), 20 deletions(-)

diff --git a/drivers/gpu/drm/i915/hdmi_audio_if.c b/drivers/gpu/drm/i915/hdmi_audio_if.c
index 2226996..2769341 100644
--- a/drivers/gpu/drm/i915/hdmi_audio_if.c
+++ b/drivers/gpu/drm/i915/hdmi_audio_if.c
@@ -34,7 +34,6 @@
 #ifdef CONFIG_SUPPORT_LPDMA_HDMI_AUDIO
 
 int i915_hdmi_state;
-int i915_notify_had;
 
 /*
  * Audio register range 0x65000 to 0x65FFF
@@ -57,11 +56,7 @@ void hdmi_get_eld(uint8_t *eld)
 	struct drm_i915_private *dev_priv =
 		(struct drm_i915_private *) dev->dev_private;
 	memcpy(hdmi_eld, eld, HAD_MAX_ELD_BYTES);
-	if (i915_notify_had) {
-		mid_hdmi_audio_signal_event(dev_priv->dev,
-			HAD_EVENT_HOT_PLUG);
-		i915_notify_had = 0;
-	}
+	mid_hdmi_audio_signal_event(dev_priv->dev, HAD_EVENT_HOT_PLUG);
 }
 
 static inline int android_hdmi_get_eld(struct drm_device *dev, void *eld)
diff --git a/drivers/gpu/drm/i915/hdmi_audio_if.h b/drivers/gpu/drm/i915/hdmi_audio_if.h
index b398f11..f1d8ac7 100644
--- a/drivers/gpu/drm/i915/hdmi_audio_if.h
+++ b/drivers/gpu/drm/i915/hdmi_audio_if.h
@@ -41,7 +41,6 @@
 #define MONITOR_TYPE_DVI  2
 
 extern int i915_hdmi_state;
-extern int i915_notify_had;
 
 enum had_caps_list {
 	HAD_GET_ELD = 1,
diff --git a/drivers/gpu/drm/i915/intel_hdmi.c b/drivers/gpu/drm/i915/intel_hdmi.c
index e3f1dd8..34d6a45 100644
--- a/drivers/gpu/drm/i915/intel_hdmi.c
+++ b/drivers/gpu/drm/i915/intel_hdmi.c
@@ -43,6 +43,8 @@
 #define LIMIT_BW_MAX_HDISPLAY	1280
 #define LIMIT_BW_MAX_VDISPLAY	800
 
+static int i915_notify_had;
+
 /* CEA Mode 4 - 1280x720@60Hz */
 struct drm_display_mode hdmi_fallback_mode = {
 	DRM_MODE("1280x720", DRM_MODE_TYPE_DRIVER,
@@ -1278,6 +1280,11 @@ intel_hdmi_detect(struct drm_connector *connector, bool force)
 	} else {
 #ifdef CONFIG_SUPPORT_LPDMA_HDMI_AUDIO
 		if ((status != i915_hdmi_state) && (IS_VALLEYVIEW(dev))) {
+#ifdef CONFIG_EXTCON
+			if (strlen(intel_connector->hotplug_switch.name) != 0)
+				extcon_set_state(
+				&intel_connector->hotplug_switch, 0);
+#endif
 			/* Send a disconnect event to audio */
 			DRM_DEBUG_DRIVER("Sending event to audio");
 			mid_hdmi_audio_signal_event(dev_priv->dev,
@@ -1286,17 +1293,6 @@ intel_hdmi_detect(struct drm_connector *connector, bool force)
 #endif
 	}
 
-#ifdef CONFIG_EXTCON
-	if (strlen(intel_connector->hotplug_switch.name) != 0) {
-		if (status == connector_status_connected)
-			extcon_set_state(
-				&intel_connector->hotplug_switch, 1);
-		else
-			extcon_set_state(
-				&intel_connector->hotplug_switch, 0);
-	}
-#endif
-
 det_out:
 	intel_display_power_put(dev_priv, power_domain);
 
@@ -1316,6 +1312,10 @@ static int intel_hdmi_get_modes(struct drm_connector *connector)
 	enum intel_display_power_domain power_domain;
 	struct edid *edid = NULL;
 	int ret = 0;
+#ifdef CONFIG_EXTCON
+	struct intel_connector *intel_connector =
+				to_intel_connector(connector);
+#endif
 
 	/* We should parse the EDID data and find out if it's an HDMI sink so
 	 * we can send audio to it.
@@ -1325,8 +1325,13 @@ static int intel_hdmi_get_modes(struct drm_connector *connector)
 	intel_display_power_get(dev_priv, power_domain);
 
 	/* No need to read modes if no connection */
-	if (connector->status != connector_status_connected)
+	if (connector->status != connector_status_connected) {
+#ifdef CONFIG_EXTCON
+		if (strlen(intel_connector->hotplug_switch.name) != 0)
+			extcon_set_state(&intel_connector->hotplug_switch, 0);
+#endif
 		goto e_out;
+	}
 
 	DRM_DEBUG_DRIVER("Reading modes from EDID");
 
@@ -1341,7 +1346,16 @@ static int intel_hdmi_get_modes(struct drm_connector *connector)
 		ret = drm_add_edid_modes(connector, edid);
 #ifdef CONFIG_SUPPORT_LPDMA_HDMI_AUDIO
 		drm_edid_to_eld(connector, edid);
-		hdmi_get_eld(connector->eld);
+		if (i915_notify_had) {
+			hdmi_get_eld(connector->eld);
+#ifdef CONFIG_EXTCON
+			if (strlen(intel_connector->hotplug_switch.name) != 0) {
+				extcon_set_state(
+				&intel_connector->hotplug_switch, 1);
+			}
+#endif
+			i915_notify_had = 0;
+		}
 #endif
 	}
 
-- 
1.7.9.5

