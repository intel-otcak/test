From 78e100e14656579874e07c735ab9882caaa1ccba Mon Sep 17 00:00:00 2001
From: Shuguang Gong <shuguang.gong@intel.com>
Date: Wed, 11 Mar 2015 17:12:19 +0800
Subject: [PATCH 297/307] gc2235: fix auto/manual exposure not work issue

root cause:
1. no exposure ioctl implement in gc2235, so no s_exposure call
   into gc2235 driver
2. coarse_integration_time_max_margin is a very large value, so
   coarse_integration_time_max (coarse_integration_time_max =
   line_periods_per_field - coarse_integration_time_max_margin)
   is wrong, that means the exposure time (take line as unit) is
   negative number, it is un-reasonable.

Change-Id: Ie980538d5a85ab44f95b52c63e2bc7b8723d74ac
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-25063
Signed-off-by: Qing Xu <qing.xu@intel.com>
Signed-off-by: Shuguang Gong <shuguang.gong@intel.com>
Reviewed-on: https://icggerrit.ir.intel.com/45811
Validation-Android: Wei Tao <wei.tao@intel.com>
Build: IMIN-legacy (SC)
Integrator: Wei Tao <wei.tao@intel.com>
Build: Wei Tao <wei.tao@intel.com>
Reviewed-by: Wei Tao <wei.tao@intel.com>
Maintainer: Wei Tao <wei.tao@intel.com>
---
 drivers/external_drivers/camera/drivers/media/i2c/gc2235.c | 11 +----------
 drivers/external_drivers/camera/drivers/media/i2c/gc2235.h |  2 +-
 2 files changed, 2 insertions(+), 11 deletions(-)

diff --git a/drivers/external_drivers/camera/drivers/media/i2c/gc2235.c b/drivers/external_drivers/camera/drivers/media/i2c/gc2235.c
index d19b566..f7d03bb 100644
--- a/drivers/external_drivers/camera/drivers/media/i2c/gc2235.c
+++ b/drivers/external_drivers/camera/drivers/media/i2c/gc2235.c
@@ -111,7 +111,6 @@ static int gc2235_i2c_write(struct i2c_client *client, u16 len, u8 *data)
 	return ret == num_msg ? 0 : -EIO;
 }
 
-#ifndef CONFIG_GMIN_INTEL_MID
 static int gc2235_write_reg(struct i2c_client *client, u16 data_length,
 							u8 reg, u8 val)
 {
@@ -137,7 +136,7 @@ static int gc2235_write_reg(struct i2c_client *client, u16 data_length,
 
 	return ret;
 }
-#endif
+
 static int __gc2235_flush_reg_array(struct i2c_client *client,
 				    struct gc2235_write_ctrl *ctrl)
 {
@@ -352,7 +351,6 @@ static int gc2235_get_intg_factor(struct i2c_client *client,
 	return 0;
 }
 
-#ifndef CONFIG_GMIN_INTEL_MID
 static long __gc2235_set_exposure(struct v4l2_subdev *sd, int coarse_itg,
 				 int gain, int digitgain)
 
@@ -418,20 +416,16 @@ static long gc2235_s_exposure(struct v4l2_subdev *sd,
 
 	return gc2235_set_exposure(sd, exp, gain, digitgain);
 }
-#endif
 static long gc2235_ioctl(struct v4l2_subdev *sd, unsigned int cmd, void *arg)
 {
-#ifndef CONFIG_GMIN_INTEL_MID /*FIXME: kenrel panic in bringup*/
 	switch (cmd) {
 	case ATOMISP_IOC_S_EXPOSURE:
 		return gc2235_s_exposure(sd, arg);
 	default:
 		return -EINVAL;
 	}
-#endif
 	return 0;
 }
-#ifndef CONFIG_GMIN_INTEL_MID
 /* This returns the exposure time being used. This should only be used
    for filling in EXIF data, not for actual image processing. */
 static int gc2235_q_exposure(struct v4l2_subdev *sd, s32 *value)
@@ -459,9 +453,7 @@ static int gc2235_q_exposure(struct v4l2_subdev *sd, s32 *value)
 err:
 	return ret;
 }
-#endif
 struct gc2235_control gc2235_controls[] = {
-#ifndef CONFIG_GMIN_INTEL_MID
 	{
 		.qc = {
 			.id = V4L2_CID_EXPOSURE_ABSOLUTE,
@@ -475,7 +467,6 @@ struct gc2235_control gc2235_controls[] = {
 		},
 		.query = gc2235_q_exposure,
 	},
-#endif
 	{
 		.qc = {
 			.id = V4L2_CID_FOCAL_ABSOLUTE,
diff --git a/drivers/external_drivers/camera/drivers/media/i2c/gc2235.h b/drivers/external_drivers/camera/drivers/media/i2c/gc2235.h
index 5ef9894..615c32a 100644
--- a/drivers/external_drivers/camera/drivers/media/i2c/gc2235.h
+++ b/drivers/external_drivers/camera/drivers/media/i2c/gc2235.h
@@ -75,7 +75,7 @@
 #define GC2235_FINE_INTG_TIME_MIN 0
 #define GC2235_FINE_INTG_TIME_MAX_MARGIN 0
 #define GC2235_COARSE_INTG_TIME_MIN 1
-#define GC2235_COARSE_INTG_TIME_MAX_MARGIN (0xffff - 6)
+#define GC2235_COARSE_INTG_TIME_MAX_MARGIN 6
 
 /*
  * GC2235 System control registers
-- 
1.9.1

