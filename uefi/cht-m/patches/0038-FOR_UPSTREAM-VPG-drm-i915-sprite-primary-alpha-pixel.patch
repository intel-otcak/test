From 4b050d899bf8c396fcd4c9b3132e8997900c4950 Mon Sep 17 00:00:00 2001
Message-Id: <4b050d899bf8c396fcd4c9b3132e8997900c4950.1413837856.git.chang-joon.lee@intel.com>
In-Reply-To: <006497b7323eca32c2f489a1a9f662743c0d16d2.1413837855.git.chang-joon.lee@intel.com>
References: <006497b7323eca32c2f489a1a9f662743c0d16d2.1413837855.git.chang-joon.lee@intel.com>
From: Pallavi <pallavi.g@intel.com>
Date: Fri, 27 Sep 2013 14:16:57 +0530
Subject: [PATCH 038/312] FOR_UPSTREAM [VPG]: drm/i915: sprite/primary alpha
 pixel format fix

Previously initial support was added as part of patch
"Added alpha channel enable/disable control".
In this patch we removed unwanted and added all the pixel format
in the primary and sprite alpha control programming and also check
for plane enable/disable.

Issue: APDEV-1174
OTC-Tracker: VIZ-3486
Change-Id: Ib287c415d68db507038a1b2429d7315b9a885346
Signed-off-by: Pallavi <pallavi.g@intel.com>
Reviewed-on: http://android.intel.com:8080/127724
Reviewed-by: Kumar, Shobhit <shobhit.kumar@intel.com>
Reviewed-by: Ernst, Eric <eric.ernst@intel.com>
Tested-by: Sun, Hang L <hang.l.sun@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
Signed-off-by: A.Sunil Kamath <sunil.kamath@intel.com>
(cherry picked from commit a17919cef5ff4546a8a709d811c8d1dc0f24baa7)

Signed-off-by: Jon Bloomfield <jon.bloomfield@intel.com>
---
 drivers/gpu/drm/i915/intel_sprite.c |   45 +++++++++++++++++++++++++++++------
 1 file changed, 38 insertions(+), 7 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_sprite.c b/drivers/gpu/drm/i915/intel_sprite.c
index 480b0fa..54657aa 100644
--- a/drivers/gpu/drm/i915/intel_sprite.c
+++ b/drivers/gpu/drm/i915/intel_sprite.c
@@ -316,19 +316,16 @@ i915_set_primary_alpha(struct drm_i915_private *dev_priv, int zorder, int plane)
 
 	reg = DSPCNTR(plane);
 	dspcntr = I915_READ(reg);
+
+	if (!(dspcntr & DISPLAY_PLANE_ENABLE))
+		return;
+
 	pixformat = dspcntr & DISPPLANE_PIXFORMAT_MASK;
 	dspcntr &= ~DISPPLANE_PIXFORMAT_MASK;
 
 	DRM_DEBUG_DRIVER("pixformat = %x, alpha = %d", pixformat, alpha);
 
 	switch (pixformat) {
-	case DISPPLANE_BGRX555:
-	case DISPPLANE_BGRA555:
-		if (alpha)
-			dspcntr |= DISPPLANE_BGRA555;
-		else
-			dspcntr |= DISPPLANE_BGRX555;
-		break;
 	case DISPPLANE_BGRX888:
 	case DISPPLANE_BGRA888:
 		if (alpha)
@@ -343,6 +340,25 @@ i915_set_primary_alpha(struct drm_i915_private *dev_priv, int zorder, int plane)
 		else
 			dspcntr |= DISPPLANE_RGBX888;
 		break;
+	case DISPPLANE_BGRX101010:
+	case DISPPLANE_BGRA101010:
+		if (alpha)
+			dspcntr |= DISPPLANE_BGRA101010;
+		else
+			dspcntr |= DISPPLANE_BGRX101010;
+		break;
+	case DISPPLANE_RGBX101010:
+	case DISPPLANE_RGBA101010:
+		if (alpha)
+			dspcntr |= DISPPLANE_RGBA101010;
+		else
+			dspcntr |= DISPPLANE_RGBX101010;
+	case DISPPLANE_BGRX565:
+		dspcntr |= DISPPLANE_BGRX565;
+		break;
+	case DISPPLANE_8BPP:
+		dspcntr |= DISPPLANE_8BPP;
+		break;
 	default:
 		DRM_ERROR("Unknown pixel format 0x%08x\n", pixformat);
 		break;
@@ -372,6 +388,8 @@ void i915_set_sprite_alpha(struct drm_i915_private *dev_priv, int zorder,
 		alpha = false;
 
 	spcntr = I915_READ(SPCNTR(pipe, plane));
+	if (!(spcntr & DISPLAY_PLANE_ENABLE))
+		return;
 	pixformat = spcntr & SP_PIXFORMAT_MASK;
 	spcntr &= ~SP_PIXFORMAT_MASK;
 
@@ -392,6 +410,19 @@ void i915_set_sprite_alpha(struct drm_i915_private *dev_priv, int zorder,
 		else
 			spcntr |= SP_FORMAT_RGBX8888;
 		break;
+	case SP_FORMAT_RGBA1010102:
+	case SP_FORMAT_RGBX1010102:
+		if (alpha)
+			spcntr |= SP_FORMAT_RGBA1010102;
+		else
+			spcntr |= SP_FORMAT_RGBX1010102;
+		break;
+	case SP_FORMAT_YUV422:
+		spcntr |= SP_FORMAT_YUV422;
+		break;
+	case SP_FORMAT_BGR565:
+		spcntr |= SP_FORMAT_BGR565;
+		break;
 	default:
 		DRM_ERROR("Unknown pixel format 0x%08x\n", pixformat);
 		break;
-- 
1.7.9.5

