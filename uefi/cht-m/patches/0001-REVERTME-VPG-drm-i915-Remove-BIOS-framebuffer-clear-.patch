From 82ad9aead067aa43f9f97590dc42dc8938ba77bf Mon Sep 17 00:00:00 2001
Message-Id: <82ad9aead067aa43f9f97590dc42dc8938ba77bf.1441138478.git.yunwei.zhang@intel.com>
From: harrisch <chris.harris@intel.com>
Date: Thu, 27 Aug 2015 11:58:31 +0100
Subject: [PATCH] REVERTME [VPG]: drm/i915: Remove BIOS framebuffer clear on
 resume

At S3 resuming, the taken-over BIOS framebuffer is cleared with an memset_io.
This is necessary when the framebuffer is in stolen memory as stolen memory
contents are not preserved across hibernation/wake. The framebuffer is
cleared to avoid garbage being displayed immediately after wake.

However, this framebuffer can be unpinned and new buffers allocated in its
virtual address range, but the frame buffer clear code clears the memory in
that range regardless. This causes these buffers to be cleared at S3 resume
causing unpredictable behaviour and GPU hangs.

This patch removes the framebuffer clear. It is safe to do so on Android as
hibernation is not supported.

REVERTME: There's an upstream fix at
http://patchwork.freedesktop.org/patch/57958/

However this upstream fix is not ideal for Android as it keeps the BIOS
framebuffer pinned permanently. We would like to be able to free it when not in
use to reclaim valuable memory and as hibernation is not used we don't need to
spend time clearing this large buffer. When a solution that suits both Linux and
Android is developed this patch can be reverted and the new upstream patch
pulled in.

Change-Id: Idb45dadb53ebb664700c211379cf3de836117ace
Signed-off-by: Chris Harris <chris.harris@intel.com>
Signed-off-by: xiao jin <jin.xiao@intel.com>
Signed-off-by: Zhang Yanmin <yanmin.zhang@intel.com>
Signed-off-by: Shi Yang <yang.a.shi@intel.com>
Tested-by: Sun, Yi <yix.sun@intel.com>
Tested-by: Zhang, Long <longx.zhang@intel.com>
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-39787
---
 drivers/gpu/drm/i915/intel_fbdev.c | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/i915/intel_fbdev.c b/drivers/gpu/drm/i915/intel_fbdev.c
index c09b686..3c91e7a 100644
--- a/drivers/gpu/drm/i915/intel_fbdev.c
+++ b/drivers/gpu/drm/i915/intel_fbdev.c
@@ -675,13 +675,21 @@ void intel_fbdev_set_suspend(struct drm_device *dev, int state)
 
 	info = ifbdev->helper.fbdev;
 
+	/* When the FB object becomes inactive and is unpinned, other buffers
+	 * can be allocated virtual addresses within its range.  Therefore we
+	 * must not clear this memory range after the FB is unpinned otherwise
+	 * we will clear these buffers causing unpredictable behaviour and GPU
+	 * hangs.  On Android we never hibernate so there is no need to clear
+	 * the memory in any case.
+	 */
+#if 0
 	/* On resume from hibernation: If the object is shmemfs backed, it has
 	 * been restored from swap. If the object is stolen however, it will be
 	 * full of whatever garbage was left in there.
 	 */
 	if (state == FBINFO_STATE_RUNNING && ifbdev->fb->obj->stolen)
 		memset_io(info->screen_base, 0, info->screen_size);
-
+#endif
 	fb_set_suspend(info, state);
 }
 
-- 
1.9.1

