From 50e6ed47155bc0926363e67a9a407ab9eb8a1172 Mon Sep 17 00:00:00 2001
From: ysiyer <yegnesh.s.iyer@intel.com>
Date: Wed, 27 Apr 2016 18:28:42 +0530
Subject: [PATCH 23/41] EM/extcon-dc-pwrsrc: Register extcon notifier on all
 cases

Issue:
USB host/peripheral mode notification can come in 2 ways.
1. On platforms where USB ID and VBUS are controlled by OTG,
the notification is received from otg driver.
2. On platforms where ID and VBUS are controlled by GPIO,
the notification could be routed through extcon.
In the 2 approach, the mode detection could be done in 3gpio
extcon driver or in this pwrsrc driver itself. Current implementation
would fail if the detection is done in 3gpio extcon driver.

Solution:
Register for the extcon notifications no matter which driver does
the USB host/peripheral mode detection. If the GPIO resources for ID
and VBUS are defined for PMIC device in BIOS, this power source driver
would send the notification and is processed here itself. If the GPIO
resources for ID and VBUS are defined for OTG2 device in BIOS, 3gpio
extcon driver would send the notification and processing is done
here in pwrsrc driver.

This driver has to listen to this notification as to identify whether
the VBUS event was received for ID or for charger connect.

Change-Id: Ia9f6de7e95e91880cfa22f6a4070046bda131838
Signed-off-by: ysiyer <yegnesh.s.iyer@intel.com>
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-31683
Reviewed-on: https://android.intel.com:443/500738
Reviewed-on: https://android.intel.com:443/504759
---
 drivers/extcon/extcon-dc-pwrsrc.c | 17 +++++++++--------
 1 file changed, 9 insertions(+), 8 deletions(-)

diff --git a/drivers/extcon/extcon-dc-pwrsrc.c b/drivers/extcon/extcon-dc-pwrsrc.c
index a29009c..06ee3f3 100644
--- a/drivers/extcon/extcon-dc-pwrsrc.c
+++ b/drivers/extcon/extcon-dc-pwrsrc.c
@@ -531,6 +531,15 @@ static int dc_xpwr_pwrsrc_probe(struct platform_device *pdev)
 		}
 	}
 
+	/* Register extcon notifier */
+	info->extcon_nb.notifier_call = dc_pwrsrc_handle_extcon_event;
+	ret = extcon_register_interest(&info->cable_obj, NULL,
+				"USB-Host", &info->extcon_nb);
+	if (ret)
+		dev_err(&pdev->dev, "failed to register extcon notifier\n");
+
+	if (info->cable_obj.edev)
+		info->id_short = is_usb_host_mode(info->cable_obj.edev);
 
 	dev_info(&info->pdev->dev, "%s: gpio_mux_cntl=%d\n",
 			__func__, desc_to_gpio(info->pdata->gpio_mux_cntl));
@@ -550,14 +559,6 @@ static int dc_xpwr_pwrsrc_probe(struct platform_device *pdev)
 				__func__,
 				desc_to_gpio(info->pdata->gpio_mux_cntl));
 
-		info->extcon_nb.notifier_call = dc_pwrsrc_handle_extcon_event;
-		ret = extcon_register_interest(&info->cable_obj, NULL,
-					"USB-Host", &info->extcon_nb);
-		if (ret)
-			dev_err(&pdev->dev, "failed to register extcon notifier\n");
-
-		if (info->cable_obj.edev)
-			info->id_short = is_usb_host_mode(info->cable_obj.edev);
 		if (info->id_short)
 			gpiod_set_value(info->pdata->gpio_mux_cntl,
 					PWRSRC_GPIO_MUX_SEL_SOC);
-- 
1.9.1

