From 36d3e6fffc154cf85303cb18ff64ff6d2b273cea Mon Sep 17 00:00:00 2001
Message-Id: <36d3e6fffc154cf85303cb18ff64ff6d2b273cea.1425610844.git.chang-joon.lee@intel.com>
In-Reply-To: <6fa2ab23adf6d7de781e906d04a0224410262d9b.1425610844.git.chang-joon.lee@intel.com>
References: <6fa2ab23adf6d7de781e906d04a0224410262d9b.1425610844.git.chang-joon.lee@intel.com>
From: Nabendu Maiti <nabendu.bikash.maiti@intel.com>
Date: Fri, 6 Feb 2015 12:14:54 +0530
Subject: [PATCH 11/27] Revert "MUST_REBASE [VPG]: adf/intel/vlv: Add support
 for per pixel alpha"

This reverts commit 7b153db39b549b15072c1f9919102561bea1959f.

Pixel format of planes are handled by frame buffer by Hardware composer in ADF.

Conflicts:
	drivers/video/adf/intel/core/vlv/vlv_pri_plane.c
	drivers/video/adf/intel/core/vlv/vlv_sp_plane.c

Issue: GMINL-5795
Change-Id: I6ecc369ab9e63f4378c3553a3b86c1d8e01c37a0
Signed-off-by: Nabendu Maiti <nabendu.bikash.maiti@intel.com>
---
 drivers/video/adf/intel/core/vlv/vlv_pri_plane.c |   31 +++-------------------
 drivers/video/adf/intel/core/vlv/vlv_sp_plane.c  |   30 ++++-----------------
 2 files changed, 9 insertions(+), 52 deletions(-)

diff --git a/drivers/video/adf/intel/core/vlv/vlv_pri_plane.c b/drivers/video/adf/intel/core/vlv/vlv_pri_plane.c
index 79374df..ae58cb1 100644
--- a/drivers/video/adf/intel/core/vlv/vlv_pri_plane.c
+++ b/drivers/video/adf/intel/core/vlv/vlv_pri_plane.c
@@ -140,40 +140,18 @@ static const u32 pri_supported_tiling[] = {
 	INTEL_PLANE_TILE_X,
 };
 
-static int get_format_config(u32 drm_format, u32 *config, u8 *bpp,
-		u8 alpha)
+static int get_format_config(u32 drm_format, u32 *config, u8 *bpp)
 {
 	int i;
-	int ret = -EINVAL;
-
 	for (i = 0; i < ARRAY_SIZE(format_mapping); i++) {
 		if (format_mapping[i].drm_format == drm_format) {
 			*config = format_mapping[i].hw_config;
 			*bpp = format_mapping[i].bpp;
-			ret = 0;
-			break;
+			return 0;
 		}
 	}
 
-	if (alpha)
-		return ret;
-
-	switch (*config) {
-	case DISPPLANE_BGRA888:
-		*config = DISPPLANE_BGRX888;
-		break;
-	case DISPPLANE_RGBA101010:
-		*config = DISPPLANE_RGBX101010;
-		break;
-	case DISPPLANE_BGRA101010:
-		*config = DISPPLANE_BGRX101010;
-		break;
-	case DISPPLANE_RGBA888:
-		*config = DISPPLANE_RGBX888;
-		break;
-	}
-
-	return ret;
+	return -EINVAL;
 }
 
 static int init_context(struct vlv_pri_plane_context *ctx, u8 idx)
@@ -263,8 +241,7 @@ static int vlv_pri_calculate(struct intel_plane *plane,
 	u8 bpp = 0, prev_bpp = 0;
 	u8 i = 0;
 
-	get_format_config(buf->format, &format_config, &bpp,
-			config->alpha);
+	get_format_config(buf->format, &format_config, &bpp);
 
 	if ((buf->format == DRM_FORMAT_XRGB8888) ||
 				(buf->format == DRM_FORMAT_ARGB8888))
diff --git a/drivers/video/adf/intel/core/vlv/vlv_sp_plane.c b/drivers/video/adf/intel/core/vlv/vlv_sp_plane.c
index cc8aefd..aeb62a3 100644
--- a/drivers/video/adf/intel/core/vlv/vlv_sp_plane.c
+++ b/drivers/video/adf/intel/core/vlv/vlv_sp_plane.c
@@ -148,37 +148,19 @@ static void context_destroy(struct vlv_sp_plane_context *ctx)
 	return;
 }
 
-static int get_format_config(u32 drm_format, u32 *format, u32 *bpp,
-		u8 alpha)
+static int get_format_config(u32 drm_format, u32 *format, u32 *bpp)
 {
 	int i;
-	int ret = -EINVAL;
 
 	for (i = 0; i < ARRAY_SIZE(format_mappings); i++) {
 		if (format_mappings[i].drm_format == drm_format) {
 			*format = format_mappings[i].hw_config;
 			*bpp = format_mappings[i].bpp;
-			ret = 0;
-			break;
+			return 0;
 		}
 	}
 
-	if (alpha)
-		return ret;
-
-	switch (*format) {
-	case DISPPLANE_BGRA888:
-		*format = DISPPLANE_BGRX888;
-		break;
-	case DISPPLANE_RGBA101010:
-		*format = DISPPLANE_RGBX101010;
-		break;
-	case DISPPLANE_RGBA888:
-		*format = DISPPLANE_RGBX888;
-		break;
-	}
-
-	return ret;
+	return -EINVAL;
 }
 
 static void vlv_sp_suspend(struct intel_dc_component *component)
@@ -322,8 +304,7 @@ static int vlv_sp_calculate(struct intel_plane *planeptr,
 	s2_zorder = (order >> 1) & 0x1;
 	s2_bottom = (order >> 0) & 0x1;
 
-	get_format_config(buf->format, &hw_format, &bpp,
-			config->alpha);
+	get_format_config(buf->format, &hw_format, &bpp);
 	sprctl = REG_READ(SPCNTR(pipe, plane));
 	prev_sprctl = sprctl;
 
@@ -544,8 +525,7 @@ static int vlv_sp_validate(struct intel_plane *planeptr,
 		clip.y2 = mode.vdisplay;
 	}
 
-	if (get_format_config(buf->format, &format_config, &bpp,
-				config->alpha)) {
+	if (get_format_config(buf->format, &format_config, &bpp)) {
 		pr_err("ADF: pixel format not supported %s\n", __func__);
 		return -EINVAL;
 	}
-- 
1.7.9.5

