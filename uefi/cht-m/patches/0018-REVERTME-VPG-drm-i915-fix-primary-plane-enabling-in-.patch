From 62558743d7671541d8ab99475dd7ab76a7056d41 Mon Sep 17 00:00:00 2001
Message-Id: <62558743d7671541d8ab99475dd7ab76a7056d41.1414143271.git.chang-joon.lee@intel.com>
In-Reply-To: <f393e797ccaaf66a25ee3d7c4e6136083a6effeb.1414143271.git.chang-joon.lee@intel.com>
References: <f393e797ccaaf66a25ee3d7c4e6136083a6effeb.1414143271.git.chang-joon.lee@intel.com>
From: Yogesh Mohan Marimuthu <yogesh.mohan.marimuthu@intel.com>
Date: Fri, 12 Sep 2014 12:09:17 +0530
Subject: [PATCH 18/26] REVERTME [VPG]: drm/i915: fix primary plane enabling
 in CHV B0

CHT B0 SoC has MPO support in hardware only on pipe B. Hence
for primary plan on pipe B need to program primay plane
size and position registers.

REVERTME: This patch is only temporary and can be reverted when the
MPO patches are checked in.

Issue: GMINL-1532
Change-Id: Ia8469c53fad98b8dfe1a0c154b80dc17db1bc935
Signed-off-by: Yogesh Mohan Marimuthu <yogesh.mohan.marimuthu@intel.com>
---
 drivers/gpu/drm/i915/i915_reg.h      |    3 +++
 drivers/gpu/drm/i915/intel_display.c |   18 ++++++++++++++++++
 2 files changed, 21 insertions(+)

diff --git a/drivers/gpu/drm/i915/i915_reg.h b/drivers/gpu/drm/i915/i915_reg.h
index 442e317..211a1ba 100644
--- a/drivers/gpu/drm/i915/i915_reg.h
+++ b/drivers/gpu/drm/i915/i915_reg.h
@@ -4485,6 +4485,9 @@ enum punit_power_well {
 #define _SPRB_SCALE		0x71304
 #define _SPRB_GAMC		0x71400
 
+#define CHV_PRIMPOS_B (dev_priv->info.display_mmio_offset + 0x61A08)
+#define CHV_PRIMSIZE_B (dev_priv->info.display_mmio_offset + 0x61A0C)
+
 #define SPRCTL(pipe) _PIPE(pipe, _SPRA_CTL, _SPRB_CTL)
 #define SPRLINOFF(pipe) _PIPE(pipe, _SPRA_LINOFF, _SPRB_LINOFF)
 #define SPRSTRIDE(pipe) _PIPE(pipe, _SPRA_STRIDE, _SPRB_STRIDE)
diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index 8ddad75..4e4e072 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -3145,6 +3145,15 @@ intel_pipe_set_base(struct drm_crtc *crtc, int x, int y,
 		const struct drm_display_mode *adjusted_mode =
 			&intel_crtc->config.adjusted_mode;
 
+		if (IS_CHERRYVIEW(dev) && STEP_FROM(STEP_B0) &&
+						intel_crtc->pipe == PIPE_B) {
+			I915_WRITE(CHV_PRIMPOS_B, 0);
+
+			I915_WRITE(CHV_PRIMSIZE_B,
+				((adjusted_mode->crtc_vdisplay - 1) << 16) |
+				(adjusted_mode->crtc_hdisplay - 1));
+		}
+
 		I915_WRITE(PIPESRC(intel_crtc->pipe),
 			   ((adjusted_mode->crtc_hdisplay - 1) << 16) |
 			   (adjusted_mode->crtc_vdisplay - 1));
@@ -6459,6 +6468,15 @@ static void intel_set_pipe_timings(struct intel_crtc *intel_crtc)
 	I915_WRITE(PIPESRC(pipe),
 		   ((intel_crtc->config.pipe_src_w - 1) << 16) |
 		   (intel_crtc->config.pipe_src_h - 1));
+
+	if (IS_CHERRYVIEW(dev) && STEP_FROM(STEP_B0) &&
+					intel_crtc->pipe == PIPE_B) {
+		I915_WRITE(CHV_PRIMPOS_B, 0);
+
+		I915_WRITE(CHV_PRIMSIZE_B,
+				((intel_crtc->config.pipe_src_h - 1) << 16) |
+				(intel_crtc->config.pipe_src_w - 1));
+	}
 }
 
 static void intel_get_pipe_timings(struct intel_crtc *crtc,
-- 
1.7.9.5

