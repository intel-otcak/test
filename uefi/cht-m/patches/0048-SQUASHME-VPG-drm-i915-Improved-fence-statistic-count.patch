From 89ad8c6e4e0a016b94b07f7e1fa5c9b363ac1dd4 Mon Sep 17 00:00:00 2001
Message-Id: <89ad8c6e4e0a016b94b07f7e1fa5c9b363ac1dd4.1431284209.git.chang-joon.lee@intel.com>
In-Reply-To: <89460f3fc3d6c0659d44897a6adec3c3fecc5564.1431284209.git.chang-joon.lee@intel.com>
References: <89460f3fc3d6c0659d44897a6adec3c3fecc5564.1431284209.git.chang-joon.lee@intel.com>
From: John Harrison <John.C.Harrison@Intel.com>
Date: Tue, 31 Mar 2015 11:21:13 +0100
Subject: [PATCH 48/68] SQUASHME! [VPG]: drm/i915: Improved fence statistic
 counting

The scheduler's native sync waiting interface was improved in a
previous checkin. This allows more useful statistics about fence waits
to be gathered. This patch adds such stats.

This patch could be squashed in to the one that originally added the
scheduler's statistic reporting:
  commit fd145db84867d29fa68795a3286e76e550285fbd
  Author: John Harrison <John.C.Harrison@Intel.com>
  Date:   Thu May 8 15:20:19 2014 +0100
  Subject: FOR_UPSTREAM [VPG]: drm/i915: Added scheduler statistic reporting to debugfs
  Change-Id: I3266c631cd70c9eeb2c235f88f493e60462f85d7

Change-Id: I2206082e91871e6d149b453aa3940e8fdb99599f
For: VIZ-1587
For: VIZ-4741
Signed-off-by: John Harrison <John.C.Harrison@Intel.com>
---
 drivers/gpu/drm/i915/i915_debugfs.c   |    2 ++
 drivers/gpu/drm/i915/i915_scheduler.c |   14 ++++++++++----
 drivers/gpu/drm/i915/i915_scheduler.h |    2 ++
 3 files changed, 14 insertions(+), 4 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_debugfs.c b/drivers/gpu/drm/i915/i915_debugfs.c
index e5d1abe..9ed303f 100644
--- a/drivers/gpu/drm/i915/i915_debugfs.c
+++ b/drivers/gpu/drm/i915/i915_debugfs.c
@@ -3039,6 +3039,8 @@ static int i915_scheduler_info(struct seq_file *m, void *unused)
 	PRINT_VAR("  ExecFinal requeue",    "u", stats[r].exec_again);
 	PRINT_VAR("  ExecFinal killed",     "u", stats[r].exec_dead);
 	PRINT_VAR("  Fence wait",           "u", stats[r].fence_wait);
+	PRINT_VAR("  Fence wait again",     "u", stats[r].fence_again);
+	PRINT_VAR("  Fence supplied",       "u", stats[r].fence_got);
 	PRINT_VAR("  Hung flying",          "u", stats[r].kill_flying);
 	PRINT_VAR("  Hung queued",          "u", stats[r].kill_queued);
 	seq_putc(m, '\n');
diff --git a/drivers/gpu/drm/i915/i915_scheduler.c b/drivers/gpu/drm/i915/i915_scheduler.c
index 8fc5f0c..968792b 100644
--- a/drivers/gpu/drm/i915/i915_scheduler.c
+++ b/drivers/gpu/drm/i915/i915_scheduler.c
@@ -213,6 +213,9 @@ int i915_scheduler_queue_execbuffer(struct i915_scheduler_queue_entry *qe)
 
 	BUG_ON(!scheduler);
 
+	if (qe->params.fence_wait)
+		scheduler->stats[ring->id].fence_got++;
+
 	if (i915.scheduler_override & i915_so_direct_submit) {
 		int ret;
 
@@ -1251,15 +1254,20 @@ static void i915_scheduler_wait_fence_signaled(struct sync_fence *fence,
 static bool i915_scheduler_async_fence_wait(struct drm_device *dev,
 					    struct i915_scheduler_queue_entry *node)
 {
+	struct drm_i915_private         *dev_priv = node->params.ring->dev->dev_private;
+	struct i915_scheduler           *scheduler = dev_priv->scheduler;
 	struct i915_sync_fence_waiter	*fence_waiter;
 	struct sync_fence		*fence = node->params.fence_wait;
 	int				signaled;
 	bool				success = true;
 
-	if ((node->flags & i915_qef_fence_waiting) == 0)
+	if ((node->flags & i915_qef_fence_waiting) == 0) {
 		node->flags |= i915_qef_fence_waiting;
-	else
+		scheduler->stats[node->params.ring->id].fence_wait++;
+	} else {
+		scheduler->stats[node->params.ring->id].fence_again++;
 		return true;
+	}
 
 	if (fence == NULL)
 		return false;
@@ -1418,8 +1426,6 @@ static int i915_scheduler_pop_from_queue_locked(struct intel_engine_cs *ring,
 		spin_unlock_irqrestore(&scheduler->lock, *flags);
 		i915_scheduler_async_fence_wait(ring->dev, fence_wait);
 		spin_lock_irqsave(&scheduler->lock, *flags);
-
-		scheduler->stats[ring->id].fence_wait++;
 #else
 		BUG_ON(true);
 #endif
diff --git a/drivers/gpu/drm/i915/i915_scheduler.h b/drivers/gpu/drm/i915/i915_scheduler.h
index 0c3261e..4e0d813 100644
--- a/drivers/gpu/drm/i915/i915_scheduler.h
+++ b/drivers/gpu/drm/i915/i915_scheduler.h
@@ -111,6 +111,8 @@ struct i915_scheduler_stats {
 	uint32_t            kill_queued;
 
 	uint32_t            fence_wait;
+	uint32_t            fence_again;
+	uint32_t            fence_got;
 };
 
 struct i915_scheduler {
-- 
1.7.9.5

