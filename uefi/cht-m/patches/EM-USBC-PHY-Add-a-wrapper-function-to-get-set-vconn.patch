From 68ab94d1f43c284210263e3ce15c38f267c8d054 Mon Sep 17 00:00:00 2001
From: Albin B <albin.bala.krishnan@intel.com>
Date: Thu, 21 Jan 2016 16:18:13 +0530
Subject: [PATCH 03/13] [EM/USBC PHY]: Add a wrapper function to get/set vconn

To enable or disable the vconn during the vconn swap from Policy
engine via device policy manager, added a wrapper function to
get/set the vconn state.

Change-Id: I6b21dd2869ff77bd19946c00e2d198e80f814768
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-16539
Signed-off-by: Albin B <albin.bala.krishnan@intel.com>
Reviewed-on: https://android.intel.com:443/460778
---
 drivers/usb/typec/phy-fusb300.c |  5 ++---
 include/linux/usb_typec_phy.h   | 20 ++++++++++++++++++--
 2 files changed, 20 insertions(+), 5 deletions(-)

diff --git a/drivers/usb/typec/phy-fusb300.c b/drivers/usb/typec/phy-fusb300.c
index b646661..dff1b8f 100644
--- a/drivers/usb/typec/phy-fusb300.c
+++ b/drivers/usb/typec/phy-fusb300.c
@@ -1105,7 +1105,6 @@ static int fusb300_enable_vconn(struct typec_phy *phy, bool en)
 	int ret;
 	unsigned int val = 0;
 
-
 	mutex_lock(&chip->lock);
 	if (en) {
 		if (phy->valid_cc == TYPEC_PIN_CC1)
@@ -1761,6 +1760,8 @@ static int fusb300_probe(struct i2c_client *client,
 	chip->phy.ops.measure_cc = fusb300_measure_cc;
 	chip->phy.ops.set_host_current = fusb300_set_host_current;
 	chip->phy.ops.get_host_current = fusb300_get_host_current;
+	chip->phy.ops.is_vconn_enabled = fusb300_is_vconn_enabled;
+	chip->phy.ops.enable_vconn = fusb300_enable_vconn;
 	chip->phy.ops.switch_mode = fusb300_switch_mode;
 	chip->phy.ops.setup_cc = fusb300_setup_cc;
 	chip->phy.ops.enable_valid_pu = fusb300_enable_valid_pu;
@@ -1774,8 +1775,6 @@ static int fusb300_probe(struct i2c_client *client,
 	chip->phy.is_vbus_on = fusb300_is_vbus_on;
 	chip->phy.set_pu_pd = fusb300_set_pu_pd;
 	chip->phy.set_swap_state = fusb300_set_swap_state;
-	chip->phy.is_vconn_enabled = fusb300_is_vconn_enabled;
-	chip->phy.enable_vconn = fusb300_enable_vconn;
 	if (!chip->is_fusb300) {
 		chip->phy.setup_role = fusb300_setup_role;
 		chip->phy.enable_autocrc = fusb300_enable_autocrc;
diff --git a/include/linux/usb_typec_phy.h b/include/linux/usb_typec_phy.h
index 77f94b7..a87e0f6 100644
--- a/include/linux/usb_typec_phy.h
+++ b/include/linux/usb_typec_phy.h
@@ -181,6 +181,8 @@ struct typec_ops {
 	int (*setup_cc)(struct typec_phy *phy, enum typec_cc_pin cc,
 					enum typec_state state);
 	int (*enable_valid_pu)(struct typec_phy *phy);
+	bool (*is_vconn_enabled)(struct typec_phy *phy);
+	int (*enable_vconn)(struct typec_phy *phy, bool en);
 };
 
 
@@ -223,8 +225,6 @@ struct typec_phy {
 	int (*set_swap_state)(struct typec_phy *phy, bool swap);
 	int (*enable_detection)(struct typec_phy *phy, bool en);
 	bool (*is_vbus_on)(struct typec_phy *phy);
-	bool (*is_vconn_enabled)(struct typec_phy *phy);
-	int (*enable_vconn)(struct typec_phy *phy, bool en);
 };
 
 extern struct typec_phy *typec_get_phy(int type);
@@ -255,6 +255,22 @@ static inline int typec_set_host_current(struct typec_phy *phy,
 	return -ENOTSUPP;
 }
 
+static inline bool typec_is_vconn_enabled(struct typec_phy *phy)
+{
+	if (phy && phy->ops.is_vconn_enabled)
+		return phy->ops.is_vconn_enabled(phy);
+
+	return false;
+}
+
+static inline int typec_enable_vconn(struct typec_phy *phy, bool en)
+{
+	if (phy && phy->ops.enable_vconn)
+		return phy->ops.enable_vconn(phy, en);
+
+	return -ENOTSUPP;
+}
+
 static inline int typec_enable_valid_pu(struct typec_phy *phy)
 {
 	if (phy && phy->ops.enable_valid_pu)
-- 
1.9.1

