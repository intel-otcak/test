From d54a65982697097f5939bb73009ecc4ef0d4ae88 Mon Sep 17 00:00:00 2001
From: Samreen Nilofer <samreen.nilofer@intel.com>
Date: Thu, 20 Nov 2014 11:43:28 +0530
Subject: [PATCH 09/24] ASoC: intel: platform: Cleanup the low-latency and deep
 buffer sysfs

The low-latency & deep buffer sysfs and related code is removed.

Issue: GMINL-4319

Change-Id: I94a4bb5c19f174c15c7019b51b7f67cc8a86f683
Signed-off-by: Samreen Nilofer <samreen.nilofer@intel.com>
---
 sound/soc/intel/pcm.c                       | 12 +++---------
 sound/soc/intel/platform-libs/controls_v2.c | 28 ----------------------------
 sound/soc/intel/sst_platform_pvt.h          |  8 --------
 3 files changed, 3 insertions(+), 45 deletions(-)

diff --git a/sound/soc/intel/pcm.c b/sound/soc/intel/pcm.c
index c80159b..a04c84d 100644
--- a/sound/soc/intel/pcm.c
+++ b/sound/soc/intel/pcm.c
@@ -173,8 +173,7 @@ static void sst_fill_pcm_params(struct snd_pcm_substream *substream,
 }
 
 static int sst_get_stream_mapping(int dev, int sdev, int dir,
-	struct sst_dev_stream_map *map, int size, u8 pipe_id,
-	const struct sst_lowlatency_deepbuff *ll_db)
+	struct sst_dev_stream_map *map, int size)
 {
 	int index;
 
@@ -219,7 +218,7 @@ int sst_fill_stream_params(void *substream,
 	if (pstream) {
 		index = sst_get_stream_mapping(pstream->pcm->device,
 					  pstream->number, pstream->stream,
-					  map, map_size, ctx->pipe_id, &ctx->ll_db);
+					  map, map_size);
 		if (index <= 0)
 			return -EINVAL;
 
@@ -242,7 +241,7 @@ int sst_fill_stream_params(void *substream,
 		 * snd_compr_stream */
 		index = sst_get_stream_mapping(cstream->device->device,
 					       0, cstream->direction,
-					       map, map_size, ctx->pipe_id, &ctx->ll_db);
+					       map, map_size);
 		if (index <= 0)
 			return -EINVAL;
 		str_params->stream_id = index;
@@ -257,8 +256,6 @@ int sst_fill_stream_params(void *substream,
 	return 0;
 }
 
-#define CALC_PERIODTIME(period_size, rate) (((period_size) * 1000) / (rate))
-
 static int sst_platform_alloc_stream(struct snd_pcm_substream *substream,
 		struct snd_soc_platform *platform)
 {
@@ -278,9 +275,6 @@ static int sst_platform_alloc_stream(struct snd_pcm_substream *substream,
 	str_params.aparams = alloc_params;
 	str_params.codec = SST_CODEC_TYPE_PCM;
 
-	ctx->ll_db.period_time = CALC_PERIODTIME(substream->runtime->period_size,
-					substream->runtime->rate);
-
 	/* fill the device type and stream id to pass to SST driver */
 	ret_val = sst_fill_stream_params(substream, ctx, &str_params, false);
 	pr_debug("platform prepare: fill stream params ret_val = 0x%x\n", ret_val);
diff --git a/sound/soc/intel/platform-libs/controls_v2.c b/sound/soc/intel/platform-libs/controls_v2.c
index b1d9702..edb7df5 100644
--- a/sound/soc/intel/platform-libs/controls_v2.c
+++ b/sound/soc/intel/platform-libs/controls_v2.c
@@ -41,12 +41,6 @@
 		.mc.rshift = xshift, .mc.max = xmax, .mc.platform_max = xmax, \
 		.mc.invert = xinvert, .module_id = xmod, .pipe_id = xpipe, \
 		.instance_id = xinstance, .value = default_val } }
-/* Thresholds for Low Latency & Deep Buffer*/
-#define DEFAULT_LOW_LATENCY 10 /* In Ms */
-#define DEFAULT_DEEP_BUFFER 96
-
-unsigned long ll_threshold = DEFAULT_LOW_LATENCY;
-unsigned long db_threshold = DEFAULT_DEEP_BUFFER;
 
 int sst_algo_int_ctl_info(struct snd_kcontrol *kcontrol,
 		struct snd_ctl_elem_info *uinfo)
@@ -1707,19 +1701,6 @@ static const struct snd_kcontrol_new sst_mrfld_controls[] = {
 		       sst_vtsv_enroll_set),
 };
 
-static DEVICE_ULONG_ATTR(low_latency_threshold, 0644, ll_threshold);
-static DEVICE_ULONG_ATTR(deep_buffer_threshold, 0644, db_threshold);
-
-static struct attribute *device_sysfs_attrs[] = {
-	&dev_attr_low_latency_threshold.attr.attr,
-	&dev_attr_deep_buffer_threshold.attr.attr,
-	NULL,
-};
-
-static struct attribute_group attr_group = {
-	.attrs = device_sysfs_attrs,
-};
-
 int sst_dsp_init(struct snd_soc_platform *platform)
 {
 	struct sst_data *sst = snd_soc_platform_get_drvdata(platform);
@@ -1741,11 +1722,6 @@ int sst_dsp_init(struct snd_soc_platform *platform)
 	}
 
 	sst->vtsv_enroll = false;
-	/* Assign the pointer variables */
-	sst->ll_db.low_latency = &ll_threshold;
-	sst->ll_db.deep_buffer = &db_threshold;
-
-	pr_debug("Default ll thres %lu db thres %lu\n", ll_threshold, db_threshold);
 
 	snd_soc_dapm_new_controls(&platform->dapm, sst_dapm_widgets,
 			ARRAY_SIZE(sst_dapm_widgets));
@@ -1755,9 +1731,5 @@ int sst_dsp_init(struct snd_soc_platform *platform)
 	snd_soc_add_platform_controls(platform, sst_mrfld_controls,
 			ARRAY_SIZE(sst_mrfld_controls));
 
-	error = sysfs_create_group(&platform->dev->kobj, &attr_group);
-	if (error)
-		pr_err("failed to create sysfs files  %d\n", error);
-
 	return error;
 }
diff --git a/sound/soc/intel/sst_platform_pvt.h b/sound/soc/intel/sst_platform_pvt.h
index 3a6284e..f8b4213 100644
--- a/sound/soc/intel/sst_platform_pvt.h
+++ b/sound/soc/intel/sst_platform_pvt.h
@@ -110,13 +110,6 @@ struct sst_algo_int_control_v2 {
 	unsigned int value; /* Value received is stored here */
 };
 
-struct sst_lowlatency_deepbuff {
-	/* Thresholds for low latency & deep buffer */
-	unsigned long	*low_latency;
-	unsigned long	*deep_buffer;
-	unsigned long	period_time;
-};
-
 struct sst_pcm_format {
 	unsigned int sample_bits;
 	unsigned int rate_min;
@@ -141,7 +134,6 @@ struct sst_data {
 	/* Pipe_id for probe_stream to be saved in stream map */
 	u8 pipe_id;
 	bool vtsv_enroll;
-	struct sst_lowlatency_deepbuff ll_db;
 	struct sst_vtsv_result vtsv_result;
 };
 #endif
-- 
1.9.1

