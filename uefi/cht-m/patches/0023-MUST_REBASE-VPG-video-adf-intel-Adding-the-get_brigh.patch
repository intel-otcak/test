From 1006c3431d3169e866b42806df22b261d7a0510e Mon Sep 17 00:00:00 2001
Message-Id: <1006c3431d3169e866b42806df22b261d7a0510e.1425610844.git.chang-joon.lee@intel.com>
In-Reply-To: <6fa2ab23adf6d7de781e906d04a0224410262d9b.1425610844.git.chang-joon.lee@intel.com>
References: <6fa2ab23adf6d7de781e906d04a0224410262d9b.1425610844.git.chang-joon.lee@intel.com>
From: Deepak M <m.deepak@intel.com>
Date: Fri, 20 Feb 2015 10:01:12 +0530
Subject: [PATCH 23/27] MUST_REBASE [VPG]: video/adf/intel: Adding the
 get_brightness function

The get brightness was just returning the props value insteading
of reading the register value to get the actual brightness. To fix
this get brightness is implemented in the dsi encoder and the same
is called from the backlight get brightness.

MUST_REBASE: Since Google ADF framework is not in upstream and also
we cannot have two display drivers, other one being i915, we need to
work on i915 and ADF convergence path before it can be upstreamed.

Issue: GMINL-6237
Change-Id: Iea88671286f2053985d757b2499067bb8d29fc5a
Signed-off-by: Deepak M <m.deepak@intel.com>
---
 .../video/adf/intel/core/common/backlight_dev.c    |   29 ++++++++++++++++++--
 .../video/adf/intel/core/common/dsi/gen_dsi_pipe.c |   26 ++++++++++++++++++
 2 files changed, 53 insertions(+), 2 deletions(-)

diff --git a/drivers/video/adf/intel/core/common/backlight_dev.c b/drivers/video/adf/intel/core/common/backlight_dev.c
index e4e44cde..ee049fb 100644
--- a/drivers/video/adf/intel/core/common/backlight_dev.c
+++ b/drivers/video/adf/intel/core/common/backlight_dev.c
@@ -17,14 +17,39 @@
 
 static int get_brightness(struct backlight_device *bl_dev)
 {
+	int i = 0;
+	struct intel_adf_context *adf_ctx;
+	struct intel_adf_interface *intf;
+	struct intel_pipe *pipe;
+
 	if (!bl_dev) {
 		pr_err("%s: invalid argument\n", __func__);
 		return -EINVAL;
 	}
 
-	pr_debug("brightness = 0x%x\n", bl_dev->props.brightness);
+	adf_ctx = bl_get_data(bl_dev);
+	if (!adf_ctx)
+		return -EINVAL;
+
+	for (i = 0; i < adf_ctx->n_intfs; i++) {
+		intf = &adf_ctx->intfs[i];
 
-	return bl_dev->props.brightness;
+		if (intf && intf->pipe && intf->pipe->ops) {
+			pipe = intf->pipe;
+
+			/*
+			 * Primary display should support brightness setting,
+			 * but external display may not.
+			 */
+			if (!pipe->ops->get_brightness) {
+				pr_debug("%s: pipe %s doesn't support brightness",
+						__func__, pipe->base.name);
+			} else {
+				return pipe->ops->get_brightness(pipe);
+			}
+		}
+	}
+	return -EINVAL;
 }
 
 static int set_brightness(struct backlight_device *bl_dev)
diff --git a/drivers/video/adf/intel/core/common/dsi/gen_dsi_pipe.c b/drivers/video/adf/intel/core/common/dsi/gen_dsi_pipe.c
index 964b524..b73b6cd 100644
--- a/drivers/video/adf/intel/core/common/dsi/gen_dsi_pipe.c
+++ b/drivers/video/adf/intel/core/common/dsi/gen_dsi_pipe.c
@@ -84,6 +84,31 @@ static int dsi_set_brightness(struct intel_pipe *pipe, int level)
 
 	return err;
 }
+
+static int dsi_get_brightness(struct intel_pipe *pipe)
+{
+	struct dsi_pipe *dsi_pipe = to_dsi_pipe(pipe);
+	struct dsi_config *config = NULL;
+	int ret = 0;
+
+	if (!dsi_pipe) {
+		pr_err("%s: invalid DSI interface", __func__);
+		return -EINVAL;
+	}
+
+	config = &dsi_pipe->config;
+
+	mutex_lock(&config->ctx_lock);
+
+	if (dsi_pipe->ops.get_brightness)
+		ret = dsi_pipe->ops.get_brightness();
+	else
+		ret = -EINVAL;
+
+	mutex_unlock(&config->ctx_lock);
+
+	return ret;
+}
 #endif
 
 static int dsi_pipe_hw_init(struct intel_pipe *pipe)
@@ -591,6 +616,7 @@ static struct intel_pipe_ops dsi_base_ops = {
 	.dpst_irq_handler = dsi_pipe_dpst_irq_handler,
 #ifdef CONFIG_BACKLIGHT_CLASS_DEVICE
 	.set_brightness = dsi_set_brightness,
+	.get_brightness = dsi_get_brightness,
 #endif
 };
 
-- 
1.7.9.5

