From 87a56eee8183a2ed199f9999cfbd4da2ef3360dd Mon Sep 17 00:00:00 2001
From: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@intel.com>
Date: Wed, 23 Jul 2014 22:34:54 -0700
Subject: [PATCH 1/2] dw_i2c: skip suspend/resume for shared i2c controller

This patch adds support to skip suspend()/resume()
routine for shared i2c controllers.

Signed-off-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@intel.com>
---
 drivers/i2c/busses/i2c-designware-platdrv.c |   13 ++++++++-----
 1 file changed, 8 insertions(+), 5 deletions(-)

diff --git a/drivers/i2c/busses/i2c-designware-platdrv.c b/drivers/i2c/busses/i2c-designware-platdrv.c
index 5581ee6ef336..2b327307faa7 100644
--- a/drivers/i2c/busses/i2c-designware-platdrv.c
+++ b/drivers/i2c/busses/i2c-designware-platdrv.c
@@ -329,6 +329,7 @@ static int dw_i2c_probe(struct platform_device *pdev)
 		dev->rx_fifo_depth = ((param1 >> 8)  & 0xff) + 1;
 		dev->adapter.nr = pdev->id;
 	}
+
 	r = i2c_dw_init(dev);
 	if (r)
 		return r;
@@ -401,8 +402,10 @@ static int dw_i2c_suspend(struct device *dev)
 	struct platform_device *pdev = to_platform_device(dev);
 	struct dw_i2c_dev *i_dev = platform_get_drvdata(pdev);
 
-	i2c_dw_disable(i_dev);
-	clk_disable_unprepare(i_dev->clk);
+	if (!i_dev->shared_host) {
+		i2c_dw_disable(i_dev);
+		clk_disable_unprepare(i_dev->clk);
+	}
 
 	return 0;
 }
@@ -412,11 +415,11 @@ static int dw_i2c_resume(struct device *dev)
 	struct platform_device *pdev = to_platform_device(dev);
 	struct dw_i2c_dev *i_dev = platform_get_drvdata(pdev);
 
-	clk_prepare_enable(i_dev->clk);
 
-	if (!i_dev->shared_host)
+	if (!i_dev->shared_host) {
+		clk_prepare_enable(i_dev->clk);
 		i2c_dw_init(i_dev);
-
+	}
 	return 0;
 }
 #endif
-- 
1.7.9.5

