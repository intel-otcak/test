From d147fc8515acecf0abca1763f0901a754529074c Mon Sep 17 00:00:00 2001
Message-Id: <d147fc8515acecf0abca1763f0901a754529074c.1413836944.git.chang-joon.lee@intel.com>
In-Reply-To: <5d8aa9994fff43965a6fab8c9a528b8b47a9d624.1413836944.git.chang-joon.lee@intel.com>
References: <5d8aa9994fff43965a6fab8c9a528b8b47a9d624.1413836944.git.chang-joon.lee@intel.com>
From: Vidya Srinivas <vidya.srinivas@intel.com>
Date: Tue, 7 Oct 2014 15:33:03 +0530
Subject: [PATCH 69/71] FOR_UPSTREAM [VPG]: Remove check for plane register
 when sending flip events from primary

Primary flip events were being sent after checking the primary
plane register. However, this condition check is creating issue
in some scenarios causing pending flips and further leading to
some flip failures. The condition check is being removed
in this patch. Instead call the handler when there is work to do.

Issue: GMINL-1797
Change-Id: I1dccd4fe6b281f6fed5405c0e2b71c79c3d924fa
Signed-off-by: Pallavi <pallavi.g@intel.com>
Signed-off-by: Vidya Srinivas <vidya.srinivas@intel.com>
---
 drivers/gpu/drm/i915/i915_irq.c      |   15 +++++++++------
 drivers/gpu/drm/i915/intel_display.c |    1 +
 2 files changed, 10 insertions(+), 6 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_irq.c b/drivers/gpu/drm/i915/i915_irq.c
index 020f88d..46dc76e 100644
--- a/drivers/gpu/drm/i915/i915_irq.c
+++ b/drivers/gpu/drm/i915/i915_irq.c
@@ -2012,6 +2012,8 @@ static bool intel_pipe_handle_vblank(struct drm_device *dev, enum pipe pipe)
 static void valleyview_pipestat_irq_handler(struct drm_device *dev, u32 iir)
 {
 	struct drm_i915_private *dev_priv = dev->dev_private;
+	struct drm_crtc *crtc;
+	struct intel_crtc *intel_crtc;
 	u32 pipe_stats[I915_MAX_PIPES] = { };
 	int pipe;
 #ifdef CONFIG_SUPPORT_LPDMA_HDMI_AUDIO
@@ -2086,19 +2088,20 @@ static void valleyview_pipestat_irq_handler(struct drm_device *dev, u32 iir)
 		}
 
 		if (pipe_stats[pipe] & PLANE_FLIP_DONE_INT_STATUS_VLV) {
-			/* Primary flips only when primary plane enabled */
-			if (I915_READ(DSPCNTR(pipe)) & DISPLAY_PLANE_ENABLE) {
+			crtc = intel_get_crtc_for_pipe(dev, pipe);
+			intel_crtc = to_intel_crtc(crtc);
+			if (intel_crtc->unpin_work) {
 				intel_prepare_page_flip(dev, pipe);
 				intel_finish_page_flip(dev, pipe);
 			}
 		}
 		if (pipe_stats[pipe] & SPRITE0_FLIP_DONE_INT_STATUS_VLV) {
-				intel_prepare_sprite_page_flip(dev, pipe);
-				intel_finish_sprite_page_flip(dev, pipe);
+			intel_prepare_sprite_page_flip(dev, pipe);
+			intel_finish_sprite_page_flip(dev, pipe);
 		}
 		if (pipe_stats[pipe] & SPRITE1_FLIP_DONE_INT_STATUS_VLV) {
-				intel_prepare_sprite_page_flip(dev, pipe);
-				intel_finish_sprite_page_flip(dev, pipe);
+			intel_prepare_sprite_page_flip(dev, pipe);
+			intel_finish_sprite_page_flip(dev, pipe);
 		}
 		if (pipe_stats[pipe] & PIPE_CRC_DONE_INTERRUPT_STATUS)
 			i9xx_pipe_crc_irq_handler(dev, pipe);
diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index 6a31bf2..5003202 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -9573,6 +9573,7 @@ static void do_intel_finish_page_flip(struct drm_device *dev,
 
 	if (work == NULL || atomic_read(&work->pending) < INTEL_FLIP_COMPLETE) {
 		spin_unlock_irqrestore(&dev->event_lock, flags);
+		DRM_ERROR("invalid or inactive unpin_work!\n");
 		return;
 	}
 
-- 
1.7.9.5

