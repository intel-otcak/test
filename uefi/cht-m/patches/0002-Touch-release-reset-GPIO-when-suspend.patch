From 264cd7307eee901fd688e1a3d591d5cdd209fc5f Mon Sep 17 00:00:00 2001
From: "qipeng.zha" <qipeng.zha@intel.com>
Date: Thu, 27 Nov 2014 19:38:15 +0800
Subject: [PATCH 2/2] Touch: release reset GPIO when suspend

The issue is touch method defined in ACPI table can't be
executed correctly.
When system suspend, ACPI late suspend will request reset GPIO
and output 0, and output 1 in ACPI early resume when system
resume.
In this patch, will release reset GPIO when suspend.

Change-Id: I6130dbea6702925cdc9f188c4fe72ff5027c91aa
Tracked-On: https://jira01.devtools.intel.com/browse/AKP-697
Signed-off-by: qipeng.zha <qipeng.zha@intel.com>
---
 drivers/input/touchscreen/atmel_mxt_ts.c | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/drivers/input/touchscreen/atmel_mxt_ts.c b/drivers/input/touchscreen/atmel_mxt_ts.c
index 4abbc2f..e45a18d 100644
--- a/drivers/input/touchscreen/atmel_mxt_ts.c
+++ b/drivers/input/touchscreen/atmel_mxt_ts.c
@@ -3900,6 +3900,9 @@ static int mxt_suspend(struct device *dev)
 	if (input_dev->users)
 		mxt_stop(data);
 
+	/*ACPI will driver this pin when parse touch Method in IFWI*/
+	if (gpio_is_valid(data->pdata->gpio_reset))
+		gpio_free(data->pdata->gpio_reset);
 	mutex_unlock(&input_dev->mutex);
 
 	return 0;
@@ -3910,8 +3913,13 @@ static int mxt_resume(struct device *dev)
 	struct i2c_client *client = to_i2c_client(dev);
 	struct mxt_data *data = i2c_get_clientdata(client);
 	struct input_dev *input_dev = data->input_dev;
+	int ret;
 
 	mutex_lock(&input_dev->mutex);
+	ret = gpio_request(data->pdata->gpio_reset, "atml_gpio_rst");
+	/*skip this error, since GPIO-ACPI module will not release it*/
+	if (ret)
+		dev_info(&client->dev, "Can't request reset gpio\n");
 
 	if (input_dev->users)
 		mxt_start(data);
-- 
1.9.1

