From 42f173bb1c28a4bbc31b82ddcbbbea8e1f493f98 Mon Sep 17 00:00:00 2001
From: Ding Yunliang <yunliang.ding@intel.com>
Date: Mon, 8 Jun 2015 11:20:02 +0800
Subject: [PATCH 409/415] gmin_platform: add v1p2_ctrl support

    + Add v1p2a regulator arch support

Change-Id: I291dd1a41bbf76e5ebaa7111c60b01e6449e5f42
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-37622
Signed-off-by: Ding Yunliang <yunliang.ding@intel.com>
---
 .../x86/platform/intel-mid/atomisp_gmin_platform.c |   33 +++++++++++++++-----
 include/linux/atomisp_platform.h                   |    1 +
 2 files changed, 26 insertions(+), 8 deletions(-)

diff --git a/arch/x86/platform/intel-mid/atomisp_gmin_platform.c b/arch/x86/platform/intel-mid/atomisp_gmin_platform.c
index a907884..f578c33 100644
--- a/arch/x86/platform/intel-mid/atomisp_gmin_platform.c
+++ b/arch/x86/platform/intel-mid/atomisp_gmin_platform.c
@@ -68,14 +68,6 @@ EXPORT_SYMBOL(spid);
 #define CRYSTAL_ON      0x63
 #define CRYSTAL_OFF     0x62
 
-/*Whiskey Cove reg*/
-#define WCOVE_V1P8SX_CTRL	0x57
-#define WCOVE_V2P8SX_CTRL	0x5d
-#define WCOVE_CTRL_MASK		0x7
-#define WCOVE_CTRL_ENABLE	0x2
-#define WCOVE_CTRL_DISABLE	0x0
-
-
 struct gmin_subdev {
 	struct v4l2_subdev *subdev;
 	int clock_num;
@@ -84,12 +76,14 @@ struct gmin_subdev {
 	struct gpio_desc *gpio1;
 	struct regulator *v1p8_reg;
 	struct regulator *v2p8_reg;
+	struct regulator *v1p2_reg;
 	enum atomisp_camera_port csi_port;
 	unsigned int csi_lanes;
 	enum atomisp_input_format csi_fmt;
 	enum atomisp_bayer_order csi_bayer;
 	bool v1p8_on;
 	bool v2p8_on;
+	bool v1p2_on;
 	int eldo1_sel_reg, eldo1_1p8v, eldo1_ctrl_shift;
 	int eldo2_sel_reg, eldo2_1p8v, eldo2_ctrl_shift;
 };
@@ -270,6 +264,7 @@ int atomisp_gmin_remove_subdev(struct v4l2_subdev *sd)
 			if (pmic_id == PMIC_REGULATOR) {
 				regulator_put(gmin_subdevs[i].v1p8_reg);
 				regulator_put(gmin_subdevs[i].v2p8_reg);
+				regulator_put(gmin_subdevs[i].v1p2_reg);
 			}
 			gmin_subdevs[i].subdev = NULL;
 		}
@@ -406,6 +401,7 @@ static struct gmin_subdev *gmin_subdev_add(struct v4l2_subdev *subdev)
 	if (pmic_id == PMIC_REGULATOR) {
 		gmin_subdevs[i].v1p8_reg = regulator_get(dev, "V1P8SX");
 		gmin_subdevs[i].v2p8_reg = regulator_get(dev, "V2P8SX");
+		gmin_subdevs[i].v1p2_reg = regulator_get(dev, "V1P2A");
 
 		/* Note: ideally we would initialize v[12]p8_on to the
 		 * output of regulator_is_enabled(), but sadly that
@@ -516,6 +512,26 @@ static int axp_v2p8_off(void)
 				 ALDO1_CTRL3_SHIFT, false);
 }
 
+int gmin_v1p2_ctrl(struct v4l2_subdev *subdev, int on)
+{
+	struct gmin_subdev *gs = find_gmin_subdev(subdev);
+
+	if (gs && gs->v1p2_on == on)
+		return 0;
+	gs->v1p2_on = on;
+
+	if (gs->v1p2_reg) {
+		if (on)
+			return regulator_enable(gs->v1p2_reg);
+		else
+			return regulator_disable(gs->v1p2_reg);
+	}
+
+	/*TODO:v1p2 needs to extend to other PMICs*/
+
+	return -EINVAL;
+}
+
 int gmin_v1p8_ctrl(struct v4l2_subdev *subdev, int on)
 {
 	struct gmin_subdev *gs = find_gmin_subdev(subdev);
@@ -685,6 +701,7 @@ static struct camera_sensor_platform_data gmin_plat = {
 	.gpio1_ctrl = gmin_gpio1_ctrl,
 	.v1p8_ctrl = gmin_v1p8_ctrl,
 	.v2p8_ctrl = gmin_v2p8_ctrl,
+	.v1p2_ctrl = gmin_v1p2_ctrl,
 	.flisclk_ctrl = gmin_flisclk_ctrl,
 	.platform_init = gmin_platform_init,
 	.platform_deinit = gmin_platform_deinit,
diff --git a/include/linux/atomisp_platform.h b/include/linux/atomisp_platform.h
index 78b0ff2..156a23c 100644
--- a/include/linux/atomisp_platform.h
+++ b/include/linux/atomisp_platform.h
@@ -229,6 +229,7 @@ struct camera_sensor_platform_data {
 	int (*gpio1_ctrl)(struct v4l2_subdev *subdev, int on);
 	int (*v1p8_ctrl)(struct v4l2_subdev *subdev, int on);
 	int (*v2p8_ctrl)(struct v4l2_subdev *subdev, int on);
+	int (*v1p2_ctrl)(struct v4l2_subdev *subdev, int on);
 	struct camera_vcm_control * (*get_vcm_ctrl)(struct v4l2_subdev *subdev,
 						    char *module_id);
 #endif
-- 
1.7.9.5

