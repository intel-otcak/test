From cb4adb16a4a7c9f042b386f9a955ed625eecb4e4 Mon Sep 17 00:00:00 2001
Message-Id: <cb4adb16a4a7c9f042b386f9a955ed625eecb4e4.1424394676.git.feitong.yi@intel.com>
In-Reply-To: <00f4430a265007e8e2c016cc7926bf530835ea30.1424394676.git.feitong.yi@intel.com>
References: <00f4430a265007e8e2c016cc7926bf530835ea30.1424394676.git.feitong.yi@intel.com>
From: Durgadoss R <durgadoss.r@intel.com>
Date: Sun, 25 Jan 2015 19:16:05 +0530
Subject: [PATCH 16/61] MUST_REBASE [VPG]: drivers/video/adf: Update CDclk
 during boot

This patch programs CDclk to max possible value
(that works as of now) to enable High Resolution displays.

MUST_REBASE: Since Google ADF framework is not in upstream and also
we cannot have two display drivers, other one being i915, we need to
work on i915 and ADF convergence path before it can be upstreamed.

Issue: GMINL-5444
Change-Id: Ib5957b77bf4ee4976e7632940e5c02ff2e40efe6
Signed-off-by: Durgadoss R <durgadoss.r@intel.com>
---
 drivers/video/adf/intel/core/vlv/vlv_dc_config.c   |   49 ++++++++++++++++++++
 .../video/adf/intel/include/core/vlv/vlv_dc_regs.h |    6 +++
 2 files changed, 55 insertions(+)

diff --git a/drivers/video/adf/intel/core/vlv/vlv_dc_config.c b/drivers/video/adf/intel/core/vlv/vlv_dc_config.c
index 60a9ad1..6ef37fa 100644
--- a/drivers/video/adf/intel/core/vlv/vlv_dc_config.c
+++ b/drivers/video/adf/intel/core/vlv/vlv_dc_config.c
@@ -652,6 +652,52 @@ static void vlv_disable_displays(struct vlv_dc_config *config,
 	pr_debug("Disabling displays enabled by BIOS: Done\n");
 }
 
+static int valleyview_get_vco(void)
+{
+	int hpll_freq, vco_freq[] = { 800, 1600, 2000, 2400 };
+
+	/* Obtain SKU information */
+	hpll_freq = vlv_cck_read(CCK_FUSE_REG) &
+		CCK_FUSE_HPLL_FREQ_MASK;
+
+	return vco_freq[hpll_freq];
+}
+
+static void vlv_update_cdclk(int cdclk)
+{
+	u32 cmd, val, vco;
+
+	vco = valleyview_get_vco();
+	cmd = DIV_ROUND_CLOSEST((vco << 1), cdclk) - 1;
+
+	pr_info("Obtained cmd %d for cdclk %d\n", cmd, cdclk);
+
+	val = vlv_punit_read(PUNIT_REG_DSPFREQ);
+	val &= ~DSPFREQGUAR_MASK_CHV;
+	val |= (cmd << DSPFREQGUAR_SHIFT_CHV);
+	vlv_punit_write(PUNIT_REG_DSPFREQ, val);
+	if (wait_for((vlv_punit_read(PUNIT_REG_DSPFREQ) &
+		      DSPFREQSTAT_MASK_CHV) == (cmd << DSPFREQSTAT_SHIFT_CHV),
+		     50)) {
+		pr_err("timed out waiting for CDclk change\n");
+		return;
+	}
+
+	/* Adjust the GMBUS frequency also */
+	REG_WRITE(GMBUSFREQ_VLV, cdclk);
+}
+
+static void vlv_update_global_params(void)
+{
+	/* TODO:
+	 * 1. Add method to Calculate CDclk.
+	 * 2. When programming CDclk > CZCLK, set PFI credits
+	 * For now, hard-code to max possible value that works
+	 * i.e. 320 MHZ.
+	 */
+	vlv_update_cdclk(320);
+}
+
 struct intel_dc_config *vlv_get_dc_config(struct pci_dev *pdev, u32 id)
 {
 	struct vlv_dc_config *config;
@@ -718,6 +764,9 @@ struct intel_dc_config *vlv_get_dc_config(struct pci_dev *pdev, u32 id)
 	/* Disable all displays enabled by BIOS */
 	vlv_disable_displays(config, child_dev, dev_num, stepping);
 
+	/* Now that all displays are off, update CDclk, PLL etc, if needed */
+	vlv_update_global_params();
+
 	/*
 	 * LFP
 	 *      if MIPI A --> PIPEA
diff --git a/drivers/video/adf/intel/include/core/vlv/vlv_dc_regs.h b/drivers/video/adf/intel/include/core/vlv/vlv_dc_regs.h
index 52fa16e..a0d479e 100644
--- a/drivers/video/adf/intel/include/core/vlv/vlv_dc_regs.h
+++ b/drivers/video/adf/intel/include/core/vlv/vlv_dc_regs.h
@@ -427,6 +427,12 @@ extern int chv_cursor_offsets[];
 #define   DSPFREQSTAT_MASK			(0x3 << DSPFREQSTAT_SHIFT)
 #define   DSPFREQGUAR_SHIFT			14
 #define   DSPFREQGUAR_MASK			(0x3 << DSPFREQGUAR_SHIFT)
+
+#define DSPFREQSTAT_SHIFT_CHV			24
+#define DSPFREQSTAT_MASK_CHV			(0x1f << DSPFREQSTAT_SHIFT_CHV)
+#define DSPFREQGUAR_SHIFT_CHV			8
+#define DSPFREQGUAR_MASK_CHV			(0x1f << DSPFREQGUAR_SHIFT_CHV)
+
 #define PUNIT_REG_PWRGT_CTRL			0x60
 #define PUNIT_REG_PWRGT_STATUS			0x61
 #define	  PUNIT_CLK_GATE			1
-- 
1.7.9.5

