From f0ca9878e29d9c9e69cbce6af9e6336e5fbe1a0a Mon Sep 17 00:00:00 2001
From: "Thulasimani,Sivakumar" <sivakumar.thulasimani@intel.com>
Date: Mon, 21 Sep 2015 19:12:07 +0530
Subject: [PATCH] REVERTME [VPG]: drm/i915: Fix m2 programming for CHT

PLL values to be used in CHT depends on the various calculated values
such as P1, P2, M1, M2, M2 fractional part and N. M2 out of these
should be programmed from the top byte of calculated value. Instead of
taking the topmost byte we are taking from BIT22 which results in
incorrect value programmed for M2.

This patch fixes this by correcting the shift to take the top byte
from calculated M2 for DP on CHT alone since making this for HDMI
results in regression.

REVERTME: This needs further debugging to enable the same change
for HDMI too.

v2: limit the change only for DP

Change-Id: I06406f0e573bba9dff1db185c552f812ee17623d
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-5971
Signed-off-by: Sivakumar Thulasimani <sivakumar.thulasimani@intel.com>
---
 drivers/gpu/drm/i915/i915_reg.h      |  3 +++
 drivers/gpu/drm/i915/intel_display.c | 22 ++++++++++++++++++++--
 2 files changed, 23 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_reg.h b/drivers/gpu/drm/i915/i915_reg.h
index ef6df49..1b377e8 100644
--- a/drivers/gpu/drm/i915/i915_reg.h
+++ b/drivers/gpu/drm/i915/i915_reg.h
@@ -1050,6 +1050,9 @@ enum punit_power_well {
 /* CHV dpPhy registers */
 #define _CHV_PLL_DW0_CH0		0x8000
 #define _CHV_PLL_DW0_CH1		0x8180
+#define  DPIO_CHV_M2_FRACTION_MASK	0x3fffff
+#define  DPIO_CHV_M2_HDMI_NON_FRACTION_SHIFT	22
+#define  DPIO_CHV_M2_DP_NON_FRACTION_SHIFT	24
 #define CHV_PLL_DW0(ch) _PIPE(ch, _CHV_PLL_DW0_CH0, _CHV_PLL_DW0_CH1)
 
 #define _CHV_PLL_DW1_CH0		0x8004
diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index a469f64..ab67a78 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -6736,6 +6736,8 @@ static void chv_update_pll(struct intel_crtc *crtc)
 	int dpll_reg = DPLL(crtc->pipe);
 	enum dpio_channel port = vlv_pipe_to_channel(pipe);
 	u32 loopfilter, tribuf_calcntr;
+	struct intel_encoder *encoder;
+	struct drm_crtc *drm_crtc = &crtc->base;
 	u32 bestn, bestm1, bestm2, bestp1, bestp2, bestm2_frac;
 	u32 dpio_val = 0;
 	int vco;
@@ -6750,9 +6752,25 @@ static void chv_update_pll(struct intel_crtc *crtc)
 		(crtc->config.pixel_multiplier - 1) << DPLL_MD_UDI_MULTIPLIER_SHIFT;
 
 	bestn = crtc->config.dpll.n;
-	bestm2_frac = crtc->config.dpll.m2 & 0x3fffff;
+	bestm2_frac = crtc->config.dpll.m2 & DPIO_CHV_M2_FRACTION_MASK;
 	bestm1 = crtc->config.dpll.m1;
-	bestm2 = crtc->config.dpll.m2 >> 22;
+	bestm2 = crtc->config.dpll.m2 >> DPIO_CHV_M2_HDMI_NON_FRACTION_SHIFT;
+
+	for_each_encoder_on_crtc(dev, drm_crtc, encoder) {
+		if ((encoder->type == INTEL_OUTPUT_DISPLAYPORT) ||
+			(encoder->type == INTEL_OUTPUT_EDP)) {
+
+			/*
+			 * Correct shift is 24 as per Spec but
+			 * restricting this to DP for now since
+			 * this causes regression on HDMI
+			 */
+			bestm2 = crtc->config.dpll.m2 >>
+				DPIO_CHV_M2_DP_NON_FRACTION_SHIFT;
+			break;
+		}
+	}
+
 	bestp1 = crtc->config.dpll.p1;
 	bestp2 = crtc->config.dpll.p2;
 	vco = crtc->config.dpll.vco;
-- 
1.9.1

