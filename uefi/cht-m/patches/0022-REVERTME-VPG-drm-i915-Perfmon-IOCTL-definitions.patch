From 58bb3f346d5166a02cb249b301d6e6e8db76683d Mon Sep 17 00:00:00 2001
Message-Id: <58bb3f346d5166a02cb249b301d6e6e8db76683d.1417780177.git.chang-joon.lee@intel.com>
In-Reply-To: <e293659a31a2970805251d9fed030ac809a9a6d0.1417780177.git.chang-joon.lee@intel.com>
References: <e293659a31a2970805251d9fed030ac809a9a6d0.1417780177.git.chang-joon.lee@intel.com>
From: Adam Rutkowski <adam.j.rutkowski@intel.com>
Date: Sat, 23 Aug 2014 11:19:59 -0400
Subject: [PATCH 22/30] REVERTME [VPG]: drm/i915: Perfmon IOCTL definitions

Definitions for Perfmon IOCTL.

Patch is marked with REVERTME as Perfmon IOCTL will be removed
once OA couters are exposed via 'perf event' framework.

Issue: GMINL-3120
Change-Id: I57691be15333d650013aa379c767ac3ca114a355
Signed-off-by: Adam Rutkowski <adam.j.rutkowski@intel.com>
---
 include/uapi/drm/i915_perfmon.h |   71 +++++++++++++++++++++++++++++++++++++--
 1 file changed, 68 insertions(+), 3 deletions(-)

diff --git a/include/uapi/drm/i915_perfmon.h b/include/uapi/drm/i915_perfmon.h
index 323059e..6f8f562 100644
--- a/include/uapi/drm/i915_perfmon.h
+++ b/include/uapi/drm/i915_perfmon.h
@@ -26,7 +26,7 @@
 
 #include "drm.h"
 
-#define I915_PERFMON_IOCTL_VERSION           2
+#define I915_PERFMON_IOCTL_VERSION      5
 
 #define I915_PERFMON_WAIT_IRQ_MAX_TIMEOUT_MS 10000
 
@@ -46,17 +46,82 @@ struct drm_i915_perfmon_wait_irqs {
 	__u32 ret_code;
 };
 
+struct drm_i915_perfmon_config_entry {
+	__u32 offset;
+	__u32 value;
+};
+
+static const unsigned int I915_PERFMON_CONFIG_SIZE = 256;
+
+/* Explicitly aligned to 8 bytes to avoid mismatch
+   between 64-bit KM and 32-bit UM. */
+typedef __u64 drm_i915_perfmon_shared_ptr __aligned(8);
+
+struct drm_i915_perfmon_user_config {
+	/* This is pointer to struct drm_i915_perfmon_config_entry.*/
+	drm_i915_perfmon_shared_ptr entries;
+	__u32 size;
+	__u32 id;
+};
+
+enum DRM_I915_PERFMON_CONFIG_TARGET {
+	I915_PERFMON_CONFIG_TARGET_CTX,
+	I915_PERFMON_CONFIG_TARGET_PID,
+	I915_PERFMON_CONFIG_TARGET_ALL,
+};
+
+struct drm_i915_perfmon_set_config {
+	enum DRM_I915_PERFMON_CONFIG_TARGET target;
+	struct drm_i915_perfmon_user_config oa;
+	struct drm_i915_perfmon_user_config gp;
+	__u32 pid;
+};
+
+struct drm_i915_perfmon_load_config {
+	__u32 ctx_id;
+	__u32 oa_id;
+	__u32 gp_id;
+};
+
+
+static const unsigned int I915_PERFMON_MAX_HW_CTX_IDS = 1024;
+
+struct drm_i915_perfmon_get_hw_ctx_ids {
+	__u32 pid;
+	__u32 count;
+	 /* This is pointer to __u32. */
+	drm_i915_perfmon_shared_ptr ids;
+};
+
+
+struct drm_i915_perfmon_get_hw_ctx_id {
+	__u32 ctx_id;
+	__u32 hw_ctx_id;
+};
+
 enum I915_PERFMON_IOCTL_OP {
 	I915_PERFMON_SET_BUFFER_IRQS = 5,
 	I915_PERFMON_WAIT_BUFFER_IRQS,
+	I915_PERFMON_CANCEL_WAIT_BUFFER_IRQS,
+	I915_PERFMON_OPEN,
+	I915_PERFMON_CLOSE,
+	I915_PERFMON_ENABLE_CONFIG,
+	I915_PERFMON_DISABLE_CONFIG,
+	I915_PERFMON_SET_CONFIG,
+	I915_PERFMON_LOAD_CONFIG,
+	I915_PERFMON_GET_HW_CTX_ID,
+	I915_PERFMON_GET_HW_CTX_IDS,
 };
 
 struct drm_i915_perfmon {
 	enum I915_PERFMON_IOCTL_OP op;
 	union {
 		struct drm_i915_perfmon_wait_irqs	wait_irqs;
-		struct drm_i915_perfmon_set_buffer_irqs set_irqs;
-		__u32 reserved[64];
+		struct drm_i915_perfmon_set_buffer_irqs	set_irqs;
+		struct drm_i915_perfmon_set_config	set_config;
+		struct drm_i915_perfmon_load_config	load_config;
+		struct drm_i915_perfmon_get_hw_ctx_id	get_hw_ctx_id;
+		struct drm_i915_perfmon_get_hw_ctx_ids	get_hw_ctx_ids;
 	} data;
 };
 
-- 
1.7.9.5

