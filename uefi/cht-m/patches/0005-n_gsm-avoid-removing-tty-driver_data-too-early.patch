From ec2d908f2e447b49fdf1c750898431e8cf094b4a Mon Sep 17 00:00:00 2001
From: Mustapha Ben Zoubeir <mustaphax.ben.zoubeir@intel.com>
Date: Tue, 19 Aug 2014 11:53:12 +0200
Subject: [PATCH 5/8] n_gsm: avoid removing tty->driver_data too early

In kernel 3.10, all n_gsm tty operations fetch tty ldisc by tty->driver_data,
If n_gsm driver set tty->driver_data NULL earlier than tty is really detached
from tty driver, it will cause panic.

In current n_gsm code, it set tty->driver_data NULL when tty detach ldisc,
that is too early, because at that time the tty is still associated to tty driver,
if userspace syscall open tty, the tty framework will find current tty throuth tty
driver, so tty framework reopen this tty, it will not call gsmtty_install to restore
tty->driver_data, but directly call gsmtty_open, that will lead to panic because
tty->driver_data is NULL.

This patch is to set tty->driver_data NULL in the standard tty framework's API:
tty_operations.remove().

Change-Id: I64005a113d1a77a2c41e761f5760abf76061a3af
Orig-Change-Id: I2598d28c95726f762fda917de4baa7370467cc5a
Signed-off-by: chao.bi <chao.bi@intel.com>
Reviewed-on: http://android.intel.com:8080/137763
Reviewed-by: Bourree, Gwenn <gwenn.bourree@intel.com>
Reviewed-by: Li, Fei <fei.li@intel.com>
Reviewed-by: Bel Aj Ali, HabibX <habibx.bel.aj.ali@intel.com>
Reviewed-by: Ben Zoubeir, MustaphaX <mustaphax.ben.zoubeir@intel.com>
Reviewed-by: Yang, Fei <fei.yang@intel.com>
Reviewed-by: Liu, Chuansheng <chuansheng.liu@intel.com>
Reviewed-by: Xiao, Jin <jin.xiao@intel.com>
Reviewed-by: Lucas, Guillaume <guillaume.lucas@intel.com>
Reviewed-by: Predon, Frederic <frederic.predon@intel.com>
Reviewed-by: Ravindran, Arun <arun.ravindran@intel.com>
Tested-by: Louis, NicolasX <nicolasx.louis@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
---
 drivers/tty/n_gsm.c |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

--- linux.orig/drivers/tty/n_gsm.c
+++ linux/drivers/tty/n_gsm.c
@@ -3117,10 +3117,9 @@ static void gsmtty_detach_dlci(struct tt
 	}
 	spin_lock(&dlci->gsmtty_lock);
 	has_open = --dlci->gsmtty_count;
-	if (!has_open) {
+	if (!has_open)
 		tty_port_tty_set(&dlci->port, NULL);
-		tty->driver_data = NULL;
-	}
+
 	spin_unlock(&dlci->gsmtty_lock);
 
 	gsm = dlci->gsm;
@@ -3471,6 +3470,7 @@ static void gsmtty_cleanup(struct tty_st
 	dlci_put(dlci);
 	dlci_put(gsm->dlci[0]);
 	mux_put(gsm);
+	tty->driver_data = NULL;
 }
 
 /* Virtual ttys for the demux */
