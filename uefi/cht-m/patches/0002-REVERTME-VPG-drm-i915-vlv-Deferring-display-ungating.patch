From 88c74fdace1e16ba5adbf9b94b05866af8ec2f1d Mon Sep 17 00:00:00 2001
Message-Id: <88c74fdace1e16ba5adbf9b94b05866af8ec2f1d.1421390813.git.chang-joon.lee@intel.com>
In-Reply-To: <55165e324aa18c65d2b754de3f9d891b8a8477e9.1421390813.git.chang-joon.lee@intel.com>
References: <55165e324aa18c65d2b754de3f9d891b8a8477e9.1421390813.git.chang-joon.lee@intel.com>
From: Sagar Kamble <sagar.a.kamble@intel.com>
Date: Thu, 27 Nov 2014 08:22:26 +0530
Subject: [PATCH 2/6] REVERTME [VPG]: drm/i915/vlv: Deferring display ungating
 & uncore sanitize to resume from early resume

Due to disabling of RC6 in uncore_sanitize & ungating of Display power wells in
early resume, power is drained till it RC6 is re-enabled post resume & Display
wells are gated back in subsequent pm/runtime suspend calls post resume.
With this change RC6 disabling & Display ungating  will be done at beginning
of resume only. There is > 80 ms gap between early-resume & resume calls.
This helps yielding additional power benefits for the Active idle KPI.
The Display ungating part can not be upstreamed as this will break HDMI audio
dependency for display wells in linux stack which is not applicable for BYT
android. In Linux, display wells have to be ungated in early resume for handling
HDMI audio dependency.

Patch is marked as REVERTME, as we intend to replace this VLV specific solution
with a platform agnostic implementation from upstream.

v2: Changing the IS_VLV check in __i915_drm_thaw to IS_VLV && !IS_CHV (Akash)

For: GMINL-2847
Change-Id: Iebfb4ab14c9eb44d8bd9a31cda9610657df0ce77
Signed-off-by: Sagar Kamble <sagar.a.kamble@intel.com>
Signed-off-by: Akash Goel <akash.goel@intel.com>
---
 drivers/gpu/drm/i915/i915_drv.c |   13 +++++++++----
 1 file changed, 9 insertions(+), 4 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_drv.c b/drivers/gpu/drm/i915/i915_drv.c
index 080b07e..a5f4507 100644
--- a/drivers/gpu/drm/i915/i915_drv.c
+++ b/drivers/gpu/drm/i915/i915_drv.c
@@ -680,9 +680,11 @@ static int i915_drm_thaw_early(struct drm_device *dev)
 {
 	struct drm_i915_private *dev_priv = dev->dev_private;
 
-	intel_uncore_early_sanitize(dev);
-	intel_uncore_sanitize(dev);
-	intel_power_domains_init_hw(dev_priv);
+	if (!IS_VALLEYVIEW(dev) || IS_CHERRYVIEW(dev)) {
+		intel_uncore_early_sanitize(dev);
+		intel_uncore_sanitize(dev);
+		intel_power_domains_init_hw(dev_priv);
+	}
 
 	dev_priv->thaw_early_done = true;
 
@@ -694,12 +696,15 @@ static int __i915_drm_thaw(struct drm_device *dev, bool restore_gtt_mappings)
 	struct drm_i915_private *dev_priv = dev->dev_private;
 	int ret;
 
-	if (!dev_priv->thaw_early_done) {
+	if (IS_VALLEYVIEW(dev) && !IS_CHERRYVIEW(dev)) {
 		intel_uncore_early_sanitize(dev);
 		intel_uncore_sanitize(dev);
 		intel_power_domains_init_hw(dev_priv);
 	}
 
+	if (!dev_priv->thaw_early_done)
+		i915_drm_thaw_early(dev);
+
 	dev_priv->thaw_early_done = false;
 
 	ret = intel_resume_prepare(dev_priv, false);
-- 
1.7.9.5

