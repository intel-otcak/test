From 132f605f8f0c6f437456f9d880465e0ce93ebcf3 Mon Sep 17 00:00:00 2001
From: Bidipta Samadder <bidiptax.samadder@intel.com>
Date: Wed, 13 May 2015 12:11:17 +0530
Subject: [PATCH] mfd/intel_pmic: Fix IRQ handling b/w pmic_i2c and pmic_core

pmic_i2c driver implements the suspend/resume calls for
intel PMIC modules and it disables/enables the interrupt
in suspend/resume calls accordingly.

This patch make sure that the right IRQ number is acquired
in pmic_i2c driver to handling suspend/resume flows. If the
IRQ number is not updated correctly we may get the PMIC
access errors during IRQ handling if the resume sequence is
not invoked properly.

Change-Id: I1d0d9d3dc87bb287d97ff652f9be1bfb314c3d38
Tracked-On: https://jira01.devtools.intel.com/browse/AKP-1591
Signed-off-by: Bidipta Samadder <bidiptax.samadder@intel.com>
Signed-off-by: Ramakrishna Pallala <ramakrishna.pallala@intel.com>
---
 drivers/mfd/intel_soc_pmic_core.c | 11 -----------
 drivers/mfd/intel_soc_pmic_i2c.c  | 14 ++++++++++++++
 2 files changed, 14 insertions(+), 11 deletions(-)

diff --git a/drivers/mfd/intel_soc_pmic_core.c b/drivers/mfd/intel_soc_pmic_core.c
index 63198a008721..bc1249e525da 100644
--- a/drivers/mfd/intel_soc_pmic_core.c
+++ b/drivers/mfd/intel_soc_pmic_core.c
@@ -414,17 +414,6 @@ static int pmic_irq_init(void)
 		irq_set_noprobe(cur_irq);
 	}
 
-	if (gpio_is_valid(pmic->pmic_int_gpio)) {
-		ret = gpio_request_one(pmic->pmic_int_gpio,
-				       GPIOF_DIR_IN, "PMIC Interupt");
-		if (ret) {
-			dev_err(pmic->dev, "Request PMIC_INT gpio error\n");
-			return ret;
-		}
-
-		pmic->irq = gpio_to_irq(pmic->pmic_int_gpio);
-	}
-
 	ret = request_threaded_irq(pmic->irq, pmic_irq_isr, pmic_irq_thread,
 				   pmic->irq_flags, "intel_soc_pmic", pmic);
 	if (ret != 0) {
diff --git a/drivers/mfd/intel_soc_pmic_i2c.c b/drivers/mfd/intel_soc_pmic_i2c.c
index 12167399fdbe..ee1a4626b405 100644
--- a/drivers/mfd/intel_soc_pmic_i2c.c
+++ b/drivers/mfd/intel_soc_pmic_i2c.c
@@ -102,6 +102,8 @@ static int pmic_i2c_lookup_gpio(struct device *dev, int acpi_index)
 static int pmic_i2c_probe(struct i2c_client *i2c,
 			  const struct i2c_device_id *id)
 {
+	int ret;
+
 	if (pmic_i2c_client != NULL || pmic_i2c != NULL)
 		return -EBUSY;
 
@@ -117,6 +119,18 @@ static int pmic_i2c_probe(struct i2c_client *i2c,
 	pmic_i2c->readb	= pmic_i2c_readb;
 	pmic_i2c->writeb = pmic_i2c_writeb;
 
+	if (gpio_is_valid(pmic_i2c->pmic_int_gpio)) {
+		ret = gpio_request_one(pmic_i2c->pmic_int_gpio,
+				       GPIOF_DIR_IN, "PMIC Interupt");
+		if (ret) {
+			dev_err(pmic_i2c->dev, "Request PMIC_INT gpio error\n");
+			return ret;
+		}
+
+		pmic_i2c->irq = gpio_to_irq(pmic_i2c->pmic_int_gpio);
+		pmic_i2c_client->irq = pmic_i2c->irq;
+	}
+
 	return intel_pmic_add(pmic_i2c);
 }
 
-- 
1.9.1

