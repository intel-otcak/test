From 4608b2793913f34d303ef5d5ef47e4508559bdc8 Mon Sep 17 00:00:00 2001
From: Ramalingam C <ramalingam.c@intel.com>
Date: Wed, 13 Jan 2016 13:31:55 +0530
Subject: [PATCH 3/6] FOR_UPSTREAM [VPG]: drm/i915: Prioritizing the DRRS logs

In case of DRRS failures we want to have the logs captured for the
debugging purpose. But at the same time existance of lot of error
messages will cause unnecessary panic at multiple layer of debugging.
So reprioritizing few drm logs from DRM_ERROR to DRM_DEBUG.

Change-Id: I8d4798df18fea982e6e7d7e8593f9a2772071257
Signed-off-by: Ramalingam C <ramalingam.c@intel.com>
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-18026
Reviewed-on: https://android.intel.com:443/463652
---
 drivers/gpu/drm/i915/intel_drrs.c     | 16 ++++++++--------
 drivers/gpu/drm/i915/intel_dsi_drrs.c | 14 +++++++-------
 drivers/gpu/drm/i915/intel_edp_drrs.c |  2 +-
 3 files changed, 16 insertions(+), 16 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_drrs.c b/drivers/gpu/drm/i915/intel_drrs.c
index 3e22cbf..ec218371 100644
--- a/drivers/gpu/drm/i915/intel_drrs.c
+++ b/drivers/gpu/drm/i915/intel_drrs.c
@@ -310,19 +310,19 @@ int intel_drrs_init(struct drm_device *dev,
 	int ret = 0, index;
 
 	if (!IS_PLATFORM_HAS_DRRS(dev)) {
-		DRM_ERROR("DRRS is not enabled on this platform\n");
+		DRM_DEBUG("DRRS is not enabled on this platform\n");
 		return -EPERM;
 	}
 
 	if (get_drrs_struct_index_for_connector(dev_priv, intel_connector)
 									>= 0) {
-		DRM_ERROR("DRRS is already initialized for this connector\n");
+		DRM_DEBUG("DRRS is already initialized for this connector\n");
 		return -EINVAL;
 	}
 
 	index = get_free_drrs_struct_index(dev_priv);
 	if (index < 0) {
-		DRM_ERROR("DRRS is initialized for all pipes\n");
+		DRM_DEBUG("DRRS is initialized for all pipes\n");
 		return -EBUSY;
 	}
 
@@ -340,34 +340,34 @@ int intel_drrs_init(struct drm_device *dev,
 	} else if (intel_encoder->type == INTEL_OUTPUT_EDP) {
 		drrs->encoder_ops = get_intel_edp_drrs_ops();
 	} else {
-		DRM_ERROR("DRRS: Unsupported Encoder\n");
+		DRM_DEBUG("DRRS: Unsupported Encoder\n");
 		ret = -EINVAL;
 		goto err_out;
 	}
 
 	if (!drrs->encoder_ops) {
-		DRM_ERROR("Encoder ops not initialized\n");
+		DRM_DEBUG("Encoder ops not initialized\n");
 		ret = -EINVAL;
 		goto err_out;
 	}
 
 	/* First check if DRRS is enabled from VBT struct */
 	if (dev_priv->vbt.drrs_type != SEAMLESS_DRRS_SUPPORT) {
-		DRM_INFO("Panel doesn't support SEAMLESS DRRS\n");
+		DRM_DEBUG("Panel doesn't support SEAMLESS DRRS\n");
 		ret = -EPERM;
 		goto err_out;
 	}
 
 	if (!drrs->encoder_ops->init || !drrs->encoder_ops->exit ||
 					!drrs->encoder_ops->set_drrs_state) {
-		DRM_ERROR("Essential func ptrs are NULL\n");
+		DRM_DEBUG("Essential func ptrs are NULL\n");
 		ret = -EINVAL;
 		goto err_out;
 	}
 
 	ret = drrs->encoder_ops->init(drrs, fixed_mode);
 	if (ret < 0) {
-		DRM_ERROR("Encoder DRRS init failed\n");
+		DRM_DEBUG("Encoder DRRS init failed\n");
 		goto err_out;
 	}
 
diff --git a/drivers/gpu/drm/i915/intel_dsi_drrs.c b/drivers/gpu/drm/i915/intel_dsi_drrs.c
index d5b33bb..59102dd 100644
--- a/drivers/gpu/drm/i915/intel_dsi_drrs.c
+++ b/drivers/gpu/drm/i915/intel_dsi_drrs.c
@@ -84,7 +84,7 @@ retry:
 		 * PLL Didn't lock for the programmed value
 		 * fall back to prev mode
 		 */
-		DRM_ERROR("Falling back to the previous DRRS state. %d->%d\n",
+		DRM_DEBUG("Falling back to the previous DRRS state. %d->%d\n",
 					work->target_rr_type,
 					drrs->drrs_state.current_rr_type);
 
@@ -112,9 +112,9 @@ retry:
 		 * mode all didn't go through.
 		 */
 		if (fallback_attempt)
-			DRM_ERROR("DRRS State Fallback attempt failed\n");
+			DRM_DEBUG("DRRS State Fallback attempt failed\n");
 		if (ret == -ETIMEDOUT)
-			DRM_ERROR("TIMEDOUT in all retry attempt\n");
+			DRM_DEBUG("TIMEDOUT in all retry attempt\n");
 	}
 
 	drm_mode_destroy(intel_encoder->base.dev, work->target_mode);
@@ -205,7 +205,7 @@ intel_dsi_calc_panel_downclock(struct i915_drrs *drrs,
 
 	if (dsi_drrs->min_vrefresh == 0 ||
 			dsi_drrs->min_vrefresh >= fixed_mode->vrefresh) {
-		DRM_ERROR("Invalid min Vrefresh. %d\n", dsi_drrs->min_vrefresh);
+		DRM_DEBUG("Invalid min Vrefresh. %d\n", dsi_drrs->min_vrefresh);
 		return NULL;
 	}
 
@@ -246,7 +246,7 @@ int intel_dsi_drrs_init(struct i915_drrs *drrs,
 	/* Modes Initialization */
 	downclock_mode = intel_dsi_calc_panel_downclock(drrs, fixed_mode);
 	if (!downclock_mode) {
-		DRM_ERROR("Downclock mode not Found\n");
+		DRM_DEBUG("Downclock mode not Found\n");
 		ret = -ENOMEM;
 		goto out_err_1;
 	}
@@ -261,14 +261,14 @@ int intel_dsi_drrs_init(struct i915_drrs *drrs,
 		/* VLV and CHV */
 		dsi_drrs->ops = get_vlv_dsi_drrs_ops();
 	} else {
-		DRM_ERROR("DRRS: Unsupported platform\n");
+		DRM_DEBUG("DRRS: Unsupported platform\n");
 		ret = -EINVAL;
 		goto out_err_2;
 	}
 
 	if (!dsi_drrs->ops || !dsi_drrs->ops->mnp_calculate_for_mode ||
 					!dsi_drrs->ops->configure_dsi_pll) {
-		DRM_ERROR("DSI platform ops not initialized\n");
+		DRM_DEBUG("DSI platform ops not initialized\n");
 		ret = -EINVAL;
 		goto out_err_2;
 	}
diff --git a/drivers/gpu/drm/i915/intel_edp_drrs.c b/drivers/gpu/drm/i915/intel_edp_drrs.c
index 65a80fa..cef9172 100644
--- a/drivers/gpu/drm/i915/intel_edp_drrs.c
+++ b/drivers/gpu/drm/i915/intel_edp_drrs.c
@@ -113,7 +113,7 @@ int intel_edp_drrs_init(struct i915_drrs *drrs,
 
 	if (!intel_dp->drrs_ops ||
 			!intel_dp->drrs_ops->set_drrs_state) {
-		DRM_ERROR("Required platform ops are NULL\n");
+		DRM_DEBUG("Required platform ops are NULL\n");
 		return ret;
 	}
 
-- 
1.9.1

