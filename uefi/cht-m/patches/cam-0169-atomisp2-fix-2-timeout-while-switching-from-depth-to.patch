From f20dc7a4806dadb1c050f13ad6c398e3f52ad3d7 Mon Sep 17 00:00:00 2001
From: Jianxu Zheng <jian.xu.zheng@intel.com>
Date: Thu, 14 Aug 2014 19:14:34 +0800
Subject: [PATCH 169/176] atomisp2: fix 2 timeout while switching from depth to
 2D

this patch is aimed to reduce the time while switching from depth
to 2D mode.
for depth mode switch to 2D mode,isp timeout is triggered
because of sensor is not streamed on correctly in
recovery function.

Depends on: I2df711d83f2ae7b556b546df85932c0a7c8b289d
Depends on: I3d7c4f28567065b655399eb353766057d8102f14

Change-Id: I797816357c0dadc5c66b972d7b253ac1b96a5309
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-8555
Signed-off-by: Jianxu Zheng <jian.xu.zheng@intel.com>
Reviewed-on: https://icggerrit.ir.intel.com/28017
Integrator: Wei Tao <wei.tao@intel.com>
Reviewed-by: Jukka O Kaartinen <jukka.o.kaartinen@intel.com>
Approver: Wei Tao <wei.tao@intel.com>
Build: Wei Tao <wei.tao@intel.com>
Reviewed-by: Wei Tao <wei.tao@intel.com>
Maintainer: Wei Tao <wei.tao@intel.com>
---
 .../drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c       | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c
index 9d0e6e2..64de1c6 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c
@@ -1233,7 +1233,7 @@ static void __atomisp_css_recover(struct atomisp_device *isp)
 	enum atomisp_css_pipe_id css_pipe_id;
 	bool stream_restart[MAX_STREAM_NUM] = {0};
 	bool depth_mode = false;
-	int i, ret;
+	int i, ret, depth_cnt = 0;
 
 	if (!isp->sw_contex.file_input)
 		atomisp_css_irq_enable(isp,
@@ -1247,6 +1247,9 @@ static void __atomisp_css_recover(struct atomisp_device *isp)
 		if (asd->streaming !=
 				ATOMISP_DEVICE_STREAMING_ENABLED)
 			continue;
+
+		depth_cnt++;
+
 		if (asd->delayed_init == ATOMISP_DELAYED_INIT_QUEUED)
 			cancel_work_sync(&asd->delayed_init_work);
 
@@ -1349,7 +1352,8 @@ static void __atomisp_css_recover(struct atomisp_device *isp)
 		 */
 		atomisp_flush_bufs_and_wakeup(asd);
 
-		if (asd->depth_mode->val) {
+		if ((asd->depth_mode->val) &&
+			(depth_cnt == ATOMISP_DEPTH_SENSOR_STREAMON_COUNT)) {
 			depth_mode = true;
 			continue;
 		}
-- 
1.9.1

