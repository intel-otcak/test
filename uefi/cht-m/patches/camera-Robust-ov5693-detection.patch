From 1ffb04d54933c835fcc63ef7ccce11cbab3349bb Mon Sep 17 00:00:00 2001
From: Mikael Persson <mikael.persson@intel.com>
Date: Tue, 19 Jan 2016 13:18:41 +0100
Subject: [PATCH 1/2] camera: Robust ov5693 detection

In rare cases, the ov5693 detection fails to
read the sensor ID for unknown reasons
(error code is EREMOTEIO).

When this happens, the sensor is stuck since no
I2C communication works. Re-start the sensor
and try detection again, at maximum 5 attempts.

Change-Id: I6454327596e907b4b437d9689c03c76919476530
Original-Tracked_On: https://jira01.devtools.intel.com/browse/OAM-17530
Signed-off-by: Mikael Persson <mikael.persson@intel.com>
Reviewed-on: https://icggerrit.ir.intel.com/97729
Reviewed-by: Vns Murthy Sristi <vns.murthy.sristi@intel.com>
Build: Dessert M BXT RVP (SC)
Reviewed-by: B Binusha <b.binusha@intel.com>
Build: Dessert M CHT FFD (SC)
Validation-Android: Dessert M CHT FFD (SC)
Approver: Yunliang Ding <yunliang.ding@intel.com>
Integrator: WeiX Meng <weix.meng@intel.com>
Reviewed-by: WeiX Meng <weix.meng@intel.com>
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-18316
Signed-off-by: Tao Wei <wei.tao@intel.com>
Reviewed-on: https://android.intel.com:443/461226
---
 .../camera/drivers/media/i2c/ov5693-ecs/ov5693.c   | 33 ++++++++++++++++++++--
 1 file changed, 31 insertions(+), 2 deletions(-)

diff --git a/drivers/external_drivers/camera/drivers/media/i2c/ov5693-ecs/ov5693.c b/drivers/external_drivers/camera/drivers/media/i2c/ov5693-ecs/ov5693.c
index 2135828..a05e3ed 100644
--- a/drivers/external_drivers/camera/drivers/media/i2c/ov5693-ecs/ov5693.c
+++ b/drivers/external_drivers/camera/drivers/media/i2c/ov5693-ecs/ov5693.c
@@ -1474,6 +1474,7 @@ static int power_up(struct v4l2_subdev *sd)
 		if (!ret)
 			return 0;
 
+
 		power_down(sd);
 	}
 	return ret;
@@ -1728,7 +1729,7 @@ static int ov5693_g_mbus_fmt(struct v4l2_subdev *sd,
 	return 0;
 }
 
-static int ov5693_detect(struct i2c_client *client)
+static int __ov5693_detect(struct i2c_client *client)
 {
 	struct i2c_adapter *adapter = client->adapter;
 	u16 high, low;
@@ -1763,6 +1764,34 @@ static int ov5693_detect(struct i2c_client *client)
 	return 0;
 }
 
+static int ov5693_detect(struct v4l2_subdev *sd)
+{
+	struct i2c_client *client = v4l2_get_subdevdata(sd);
+	int i, ret = 0;
+
+	for (i = 0; i < OV5693_POWER_UP_RETRY_NUM; i++) {
+		ret = __ov5693_detect(client);
+		if (!ret)
+			return 0;
+
+		dev_err(&client->dev, "ov5693 detect failure! Re-starting sensor.\n");
+		ret = power_down(sd);
+		if (ret) {
+			dev_err(&client->dev, "ov5693 power-off err.\n");
+			// Don't return, try to power-up anyway.
+		}
+
+		ret = power_up(sd);
+		if (ret) {
+			dev_err(&client->dev, "ov5693 power-up err.\n");
+			// No need to power it down here.
+			return ret;
+		}
+	}
+
+	return ret;
+}
+
 static int ov5693_s_stream(struct v4l2_subdev *sd, int enable)
 {
 	struct ov5693_device *dev = to_ov5693_sensor(sd);
@@ -1861,7 +1890,7 @@ static int ov5693_s_config(struct v4l2_subdev *sd,
 		goto fail_csi_cfg;
 
 	/* config & detect sensor */
-	ret = ov5693_detect(client);
+	ret = ov5693_detect(sd);
 	if (ret) {
 		dev_err(&client->dev, "ov5693_detect err s_config.\n");
 		goto fail_csi_cfg;
-- 
1.9.1

