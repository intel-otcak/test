From 6472a3f07229fbbda56b749c73638b982333290b Mon Sep 17 00:00:00 2001
From: Subhankar Paul <subhankar.paul@intel.com>
Date: Mon, 25 May 2015 16:38:43 +0530
Subject: [PATCH] ASoC: Intel: Fix ANR crash for LPAL VTSV.

Issue: GMINL-10234

VTSV model files were getting downloaded in new lib download address
if the size is greater than the last model files in case of ,multiple
re-enrollment causing corruption to subsequent PIL lib.

Changes done to avoid downloading model file in new address and
generating error in case of oversize model files. Currently MAX
120kB of vtsv_net.bin and 7kB of vtsv_grammar.bin is allowed

Change-Id: I568a20cff85192b09c770704288ae26dfd854ace
Signed-off-by: Subhankar Paul <subhankar.paul@intel.com>
---
 sound/soc/intel/sst/sst_stream.c | 22 +++++++++++++++-------
 1 file changed, 15 insertions(+), 7 deletions(-)

diff --git a/sound/soc/intel/sst/sst_stream.c b/sound/soc/intel/sst/sst_stream.c
index 3cddc7a6caca..afb13c6dac37 100644
--- a/sound/soc/intel/sst/sst_stream.c
+++ b/sound/soc/intel/sst/sst_stream.c
@@ -720,7 +720,7 @@ int sst_free_stream(int str_id)
 }
 
 int sst_request_vtsv_file(char *fname, struct intel_sst_drv *ctx,
-		void **out_file, u32 *out_size)
+		void **out_file, u32 *out_size, int max_size)
 {
 	int retval = 0;
 	const struct firmware *file;
@@ -742,9 +742,13 @@ int sst_request_vtsv_file(char *fname, struct intel_sst_drv *ctx,
 		pr_err("request fw failed %d\n", retval);
 		return retval;
 	}
+	if (file->size > max_size) {
+		pr_err("VTSV file is exceeding max limit %x\n", max_size);
+		return -ENOMEM;
+	}
 
-	if ((*out_file == NULL) || (*out_size < file->size)) {
-		retval = sst_get_next_lib_mem(&ctx->lib_mem_mgr, file->size,
+	if (*out_file == NULL) {
+		retval = sst_get_next_lib_mem(&ctx->lib_mem_mgr, max_size,
 			&file_base);
 		*out_file = (void *)file_base;
 	}
@@ -804,6 +808,10 @@ int sst_format_vtsv_message(struct intel_sst_drv *ctx,
 	return 0;
 }
 
+/* Total 127 KB is allocated for vtsv net/grammar file */
+#define VTSV_NET_MAX_SIZE 0x1E000	/* max net file size: 120 KB */
+#define VTSV_GRAMMAR_MAX_SIZE 0x1C00 /* max grammar file size: 7 KB */
+
 int sst_cache_vtsv_libs(struct intel_sst_drv *ctx)
 {
 	int retval;
@@ -813,8 +821,8 @@ int sst_cache_vtsv_libs(struct intel_sst_drv *ctx)
 						"vtsv_net.bin");
 
 	/* Download both the data files */
-	retval = sst_request_vtsv_file(buff, ctx,
-			&ctx->vcache.file1_in_mem, &ctx->vcache.size1);
+	retval = sst_request_vtsv_file(buff, ctx, &ctx->vcache.file1_in_mem,
+					&ctx->vcache.size1, VTSV_NET_MAX_SIZE);
 	if (retval) {
 		pr_err("vtsv data file1 request failed %d\n", retval);
 		return retval;
@@ -823,8 +831,8 @@ int sst_cache_vtsv_libs(struct intel_sst_drv *ctx)
 	snprintf(buff, sizeof(buff), "%s/%s", ctx->vtsv_path.bytes,
 						"vtsv_grammar.bin");
 
-	retval = sst_request_vtsv_file(buff, ctx,
-			&ctx->vcache.file2_in_mem, &ctx->vcache.size2);
+	retval = sst_request_vtsv_file(buff, ctx, &ctx->vcache.file2_in_mem,
+				&ctx->vcache.size2, VTSV_GRAMMAR_MAX_SIZE);
 	if (retval) {
 		pr_err("vtsv data file2 request failed %d\n", retval);
 		return retval;
-- 
1.9.1

