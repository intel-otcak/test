From 32a6ac32d936f9d68c29c8a3be8b361222d7685a Mon Sep 17 00:00:00 2001
Message-Id: <32a6ac32d936f9d68c29c8a3be8b361222d7685a.1417780177.git.chang-joon.lee@intel.com>
In-Reply-To: <e293659a31a2970805251d9fed030ac809a9a6d0.1417780177.git.chang-joon.lee@intel.com>
References: <e293659a31a2970805251d9fed030ac809a9a6d0.1417780177.git.chang-joon.lee@intel.com>
From: Shashank Sharma <shashank.sharma@intel.com>
Date: Wed, 18 Dec 2013 15:04:51 +0530
Subject: [PATCH 02/30] REVERTME [VPG]: drm/i915/hdmi: Read EDID only when
 live status is up

While detecting HDMI hot plug, try to read EDID over DDC only
when live status is up.This behavior is as per hardware Bspecs
and allows to support soft HPDs.

It was agreed that REVERTME is the most appropriate tag for this patch.
These patches will be reverted and replaced when the official upstream
versions are available.

Change-Id: Ieba7f4d090818de5cf2d229f061e34978fb70581
Tracked-On: https://jira01.devtools.intel.com/browse/GMINL-3419
Signed-off-by: Shashank Sharma <shashank.sharma@intel.com>
Signed-off-by: Nabendu Maiti <nabendu.bikash.maiti@intel.com>
---
 drivers/gpu/drm/drm_dp_helper.c   |    2 +-
 drivers/gpu/drm/i915/intel_hdmi.c |   23 +++++++++++++++++------
 2 files changed, 18 insertions(+), 7 deletions(-)

diff --git a/drivers/gpu/drm/drm_dp_helper.c b/drivers/gpu/drm/drm_dp_helper.c
index 08e33b8..9ea5830 100644
--- a/drivers/gpu/drm/drm_dp_helper.c
+++ b/drivers/gpu/drm/drm_dp_helper.c
@@ -197,7 +197,7 @@ static int
 i2c_dp_aux_prepare_bus(struct i2c_adapter *adapter)
 {
 	adapter->algo = &i2c_dp_aux_algo;
-	adapter->retries = 3;
+	adapter->retries = 50;
 	i2c_dp_aux_reset_bus(adapter);
 	return 0;
 }
diff --git a/drivers/gpu/drm/i915/intel_hdmi.c b/drivers/gpu/drm/i915/intel_hdmi.c
index 30afc01..f32e705 100644
--- a/drivers/gpu/drm/i915/intel_hdmi.c
+++ b/drivers/gpu/drm/i915/intel_hdmi.c
@@ -1046,7 +1046,8 @@ intel_hdmi_detect(struct drm_connector *connector, bool force)
 		hdmi_to_dig_port(intel_hdmi);
 	struct intel_encoder *intel_encoder = &intel_dig_port->base;
 	struct drm_i915_private *dev_priv = dev->dev_private;
-	struct edid *edid;
+	struct i2c_adapter *i2c_adpter = NULL;
+	struct edid *edid = NULL;
 	enum intel_display_power_domain power_domain;
 	enum drm_connector_status status = connector_status_disconnected;
 #ifdef CONFIG_SUPPORT_LPDMA_HDMI_AUDIO
@@ -1071,7 +1072,8 @@ intel_hdmi_detect(struct drm_connector *connector, bool force)
 	}
 
 	/* Suppress spurious IRQ, if current status is same as live status */
-	if (connector->status == hdmi_live_status(dev, intel_hdmi)) {
+	status = hdmi_live_status(dev, intel_hdmi);
+	if (connector->status == status) {
 		status = connector->status;
 		goto det_out;
 	}
@@ -1089,13 +1091,22 @@ intel_hdmi_detect(struct drm_connector *connector, bool force)
 	}
 #endif
 
-	edid = drm_get_edid(connector,
-			    intel_gmbus_get_adapter(dev_priv,
-						    intel_hdmi->ddc_bus));
+	/* Read EDID only if live status permits */
+	if (status == connector_status_connected) {
+		i2c_adpter = intel_gmbus_get_adapter(dev_priv,
+						intel_hdmi->ddc_bus);
+
+		if (i2c_adpter == NULL) {
+			DRM_ERROR("Can't get correct I2C [ddc_bus:%x]\n",
+					intel_hdmi->ddc_bus);
+		} else {
+			DRM_INFO("Probed [ddc_bus:%x]\n", intel_hdmi->ddc_bus);
+			edid = drm_get_edid(connector, i2c_adpter);
+		}
+	}
 
 	if (edid) {
 		if (edid->input & DRM_EDID_INPUT_DIGITAL) {
-			status = connector_status_connected;
 			if (intel_hdmi->force_audio != HDMI_AUDIO_OFF_DVI)
 				intel_hdmi->has_hdmi_sink =
 						drm_detect_hdmi_monitor(edid);
-- 
1.7.9.5

