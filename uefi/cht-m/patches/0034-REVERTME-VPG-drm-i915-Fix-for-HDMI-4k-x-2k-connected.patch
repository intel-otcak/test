From 222df1d0258a6e24edc42f9256c59de0c02b35a4 Mon Sep 17 00:00:00 2001
Message-Id: <222df1d0258a6e24edc42f9256c59de0c02b35a4.1417780878.git.chang-joon.lee@intel.com>
In-Reply-To: <cb098d33cdac3271103834fbce08218248d7bddb.1417780878.git.chang-joon.lee@intel.com>
References: <cb098d33cdac3271103834fbce08218248d7bddb.1417780878.git.chang-joon.lee@intel.com>
From: vkanduri <venkatrajkumar.kanduri@intel.com>
Date: Wed, 22 Oct 2014 15:00:27 +0530
Subject: [PATCH 34/34] REVERTME [VPG]: drm/i915: Fix for HDMI 4k x 2k
 connected boot.

In CHV, there can be more than one pipe marked as prepare_pipes in __intel_set_mode.
This is because in CHV we need to disable all pipes to change CDCLK.
During boot time, it is possible for a pipe to have a null FB associated with primary plane.
So added a quick check to see if there is a null FB, we bypass crtc enable call.

Revert plan: 2 steps
1) To understand why we are getting null FB for primary plane for 4K monitor only and see if that needs a fix.
2) Need to see if we need a better solution for DVFS to do cdclk change in CHV.

Issue: GMINL-2708
Change-Id: I9d562d5cb166d9077b9d5767bd2d7a444be68608
Signed-off-by: vkanduri <venkatrajkumar.kanduri@intel.com>
---
 drivers/gpu/drm/i915/intel_display.c |   11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index e5a207d..f197b26 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -12071,6 +12071,17 @@ static int __intel_set_mode(struct drm_crtc *crtc,
 			 * Now enable the clocks, plane, pipe, and connectors that we 
 			 * set up.
 			*/
+			if (!connector->encoder->crtc->primary->fb) {
+
+				/*
+				 * as Primary plane FB is null, this connector
+				 * should not be enabled here. This happens
+				 * possibly if this is CHV or VLV and there are
+				 * multiple pipes during boot.
+				 */
+				DRM_DEBUG_KMS("Primary plane FB is null");
+				continue;
+			}
 			update_scanline_offset(intel_crtc);
 			to_intel_encoder(connector->encoder)->connectors_active = true;
 			dev_priv->display.crtc_enable(&intel_crtc->base);
-- 
1.7.9.5

