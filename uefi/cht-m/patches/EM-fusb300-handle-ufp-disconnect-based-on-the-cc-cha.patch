From 78c7908e22151a1254693953f8148df833eab994 Mon Sep 17 00:00:00 2001
From: Albin B <albin.bala.krishnan@intel.com>
Date: Thu, 15 Oct 2015 16:27:30 +0530
Subject: [PATCH 1/5] [EM/fusb300]: handle ufp disconnect based on the cc
 change

when pd hard reset issued by the source vbus will be
turned-off, which should not considered as disconnect.
ufp should wait for cc debounce period whether it is a
real cable removal by measuring the valid cc.

Change-Id: Ia5f87677b3bddf3abfcf874a5bfb5b94e040886f
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-11921
Signed-off-by: Albin B <albin.bala.krishnan@intel.com>
Reviewed-on: https://android.intel.com:443/441233
Reviewed-on: https://android.intel.com:443/445712
---
 drivers/usb/typec/phy-fusb300.c | 19 ++++++-------------
 1 file changed, 6 insertions(+), 13 deletions(-)

diff --git a/drivers/usb/typec/phy-fusb300.c b/drivers/usb/typec/phy-fusb300.c
index 6c36a1a..fcb7cce 100644
--- a/drivers/usb/typec/phy-fusb300.c
+++ b/drivers/usb/typec/phy-fusb300.c
@@ -901,14 +901,8 @@ static void fusb300_handle_vbus_int(struct fusb300_chip *chip, int vbus_on)
 				 TYPEC_EVENT_VBUS, phy);
 		/* TOG_DONE will be used with FUSB302 */
 	} else {
-		if (state == TYPEC_STATE_ATTACHED_UFP) {
-			mutex_lock(&chip->lock);
-			fusb300_reset_valid_cc(phy);
-			mutex_unlock(&chip->lock);
-
-			atomic_notifier_call_chain(&phy->notifier,
-					TYPEC_EVENT_NONE, phy);
-		}
+		if (state == TYPEC_STATE_ATTACHED_UFP)
+			schedule_work(&chip->dfp_disconn_work);
 	}
 }
 
@@ -1463,10 +1457,6 @@ static void fusb300_valid_disconnect(struct work_struct *work)
 	struct typec_phy *phy = &chip->phy;
 	unsigned int val, stat;
 
-	/* In UFP, VBUS drop is considered disconnect */
-	if (phy->state == TYPEC_STATE_ATTACHED_UFP)
-		return;
-
 	/*
 	 * According to TypeC Spec DFP transistion to unattached state
 	 * if CC open for tPDDebounce period (10ms)
@@ -1485,7 +1475,10 @@ static void fusb300_valid_disconnect(struct work_struct *work)
 	regmap_read(chip->map, FUSB300_STAT0_REG, &stat);
 
 	dev_dbg(chip->dev, "%s: stat0 %x", __func__, stat);
-	if (stat & FUSB300_STAT0_COMP) {
+	if ((stat & FUSB300_STAT0_COMP) ||
+		(phy->state == TYPEC_STATE_ATTACHED_UFP &&
+		!(stat & FUSB300_STAT0_VBUS_OK) &&
+		!(stat & FUSB300_STAT0_BC_LVL))) {
 		fusb300_reset_valid_cc(phy);
 		atomic_notifier_call_chain(&phy->notifier,
 						 TYPEC_EVENT_NONE, phy);
-- 
1.9.1

