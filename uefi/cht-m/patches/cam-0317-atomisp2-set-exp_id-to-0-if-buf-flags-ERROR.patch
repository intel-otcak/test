From 975bb21ed3be5bb08f647f59c5dc006eeb28262c Mon Sep 17 00:00:00 2001
From: Zaikuo Wang <zaikuo.wang@intel.com>
Date: Tue, 24 Mar 2015 18:17:03 +0800
Subject: [PATCH 317/323] atomisp2:set exp_id to 0 if buf->flags == ERROR

set exp_id to 0 if buf->flags == V4L2_BUF_FLAG_ERROR
when atomisp_dqbuf();
this patch only make exp_id log not to confuse debug, would not
fix any bug

Change-Id: Ie1aa155a762c4a16cccfd635b8a93ddc7d9780aa
Tracked-On: #JIMINAN-25665
Signed-off-by: Zaikuo Wang <zaikuo.wang@intel.com>
Reviewed-on: https://icggerrit.ir.intel.com/47703
Reviewed-by: Tian Shu Qiu <tian.shu.qiu@intel.com>
Validation-Android: Wei Tao <wei.tao@intel.com>
Approver: Tian Shu Qiu <tian.shu.qiu@intel.com>
Integrator: Wei Tao <wei.tao@intel.com>
Build: Wei Tao <wei.tao@intel.com>
Reviewed-by: Wei Tao <wei.tao@intel.com>
Maintainer: Wei Tao <wei.tao@intel.com>
---
 .../drivers/media/pci/atomisp2/atomisp_driver/atomisp_ioctl.c       | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_ioctl.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_ioctl.c
index a8119e9..5fc9939 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_ioctl.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_ioctl.c
@@ -1480,6 +1480,7 @@ static int atomisp_dqbuf(struct file *file, void *fh, struct v4l2_buffer *buf)
 	rt_mutex_lock(&isp->mutex);
 	buf->bytesused = pipe->pix.sizeimage;
 	buf->reserved = asd->frame_status[buf->index];
+
 	/*
 	 * Hack:
 	 * Currently frame_status in the enum type which takes no more lower
@@ -1487,12 +1488,13 @@ static int atomisp_dqbuf(struct file *file, void *fh, struct v4l2_buffer *buf)
 	 * use bit[31:16] for exp_id as it is only in the range of 1~255
 	 */
 	buf->reserved &= 0x0000ffff;
-	buf->reserved |= __get_frame_exp_id(pipe, buf) << 16;
+	if (!(buf->flags & V4L2_BUF_FLAG_ERROR))
+		buf->reserved |= __get_frame_exp_id(pipe, buf) << 16;
 	buf->reserved2 = pipe->frame_config_id[buf->index];
 	rt_mutex_unlock(&isp->mutex);
 
 	dev_dbg(isp->dev, "dqbuf buffer %d (%s) for asd%d with exp_id %d, isp_config_id %d\n",
-		buf->index, vdev->name, asd->index, __get_frame_exp_id(pipe, buf),
+		buf->index, vdev->name, asd->index, buf->reserved >> 16,
 		buf->reserved2);
 	return 0;
 }
-- 
1.9.1

