From 3df7c1a05e2618044f228e9c32d253699db35138 Mon Sep 17 00:00:00 2001
Message-Id: <3df7c1a05e2618044f228e9c32d253699db35138.1413837857.git.chang-joon.lee@intel.com>
In-Reply-To: <006497b7323eca32c2f489a1a9f662743c0d16d2.1413837855.git.chang-joon.lee@intel.com>
References: <006497b7323eca32c2f489a1a9f662743c0d16d2.1413837855.git.chang-joon.lee@intel.com>
From: Deepak S <deepak.s@intel.com>
Date: Thu, 17 Jul 2014 11:51:56 +0530
Subject: [PATCH 199/312] FOR_UPSTREAM [VPG]: drm/i915/chv: Wait for Ack
 before reading current freq status

On CHV, it was observed that requesting freq back to back without waiting
for completion of last requested freq causing the current freq to be invalid or
zero or sometimes the next requested freq is not honered by FW.
HW team as update the spec and suggested to wait for the the Ack in 0xd8
register before reading the current freq status.

Change-Id: Ib2ae851a9746839be3058db80a616619c3c77339
Signed-off-by: Deepak S <deepak.s@intel.com>
---
 drivers/gpu/drm/i915/i915_drv.h |    1 +
 drivers/gpu/drm/i915/i915_irq.c |    8 ++++++++
 drivers/gpu/drm/i915/intel_pm.c |   31 +++++++++++++++++++++++++++++++
 3 files changed, 40 insertions(+)

diff --git a/drivers/gpu/drm/i915/i915_drv.h b/drivers/gpu/drm/i915/i915_drv.h
index 235d8bd..02addb1 100644
--- a/drivers/gpu/drm/i915/i915_drv.h
+++ b/drivers/gpu/drm/i915/i915_drv.h
@@ -2814,6 +2814,7 @@ extern void gen6_set_rps_mode(struct drm_device *dev, bool manual);
 extern void vlv_set_rps_mode(struct drm_device *dev, bool disable);
 extern void gen6_set_rps(struct drm_device *dev, u8 val);
 extern void bdw_software_turbo(struct drm_device *dev);
+extern void chv_update_rps_cur_delay(struct drm_i915_private *dev_priv);
 extern void valleyview_set_rps(struct drm_device *dev, u8 val);
 extern void intel_detect_pch(struct drm_device *dev);
 extern int intel_trans_dp_port_sel(struct drm_crtc *crtc);
diff --git a/drivers/gpu/drm/i915/i915_irq.c b/drivers/gpu/drm/i915/i915_irq.c
index 61468c5..b258270 100644
--- a/drivers/gpu/drm/i915/i915_irq.c
+++ b/drivers/gpu/drm/i915/i915_irq.c
@@ -1435,6 +1435,14 @@ static void gen6_pm_rps_work(struct work_struct *work)
 		return;
 	}
 
+	/* Make sure we have current freq updated properly. Doing this
+	 * here becuase, on VLV, P-Unit doesnt garauntee that last requested
+	 * freq by driver is actually the current running frequency
+	 */
+
+	if (IS_CHERRYVIEW(dev_priv->dev))
+		chv_update_rps_cur_delay(dev_priv);
+
 	adj = dev_priv->rps.last_adj;
 	if (pm_iir & GEN6_PM_RP_UP_THRESHOLD) {
 		if (adj > 0)
diff --git a/drivers/gpu/drm/i915/intel_pm.c b/drivers/gpu/drm/i915/intel_pm.c
index cbc612c..16f973e 100644
--- a/drivers/gpu/drm/i915/intel_pm.c
+++ b/drivers/gpu/drm/i915/intel_pm.c
@@ -3772,6 +3772,34 @@ void gen6_rps_boost(struct drm_i915_private *dev_priv)
 	}
 	mutex_unlock(&dev_priv->rps.hw_lock);
 }
+/*
+ * Wait until the previous freq change has completed,
+ * or the timeout elapsed, and then update our notion
+ * of the current GPU frequency.
+ */
+void chv_update_rps_cur_delay(struct drm_i915_private *dev_priv)
+{
+	u32 pval;
+
+	WARN_ON(!mutex_is_locked(&dev_priv->rps.hw_lock));
+
+	if (wait_for_atomic((
+		(vlv_punit_read(dev_priv, PUNIT_REG_GPU_FREQ_STS))
+			& GENFREQSTATUS) == 0, 10))
+		DRM_DEBUG_DRIVER("Timed out waiting for Punit\n");
+
+	pval = vlv_punit_read(dev_priv, PUNIT_REG_GPU_FREQ_STS);
+	pval = (pval >> 8) & 0xff;
+
+	if (pval != dev_priv->rps.cur_freq)
+		DRM_DEBUG_DRIVER("Punit overrode GPU freq: %d MHz (%u) requested, but got %d Mhz (%u)\n",
+				vlv_gpu_freq(dev_priv, dev_priv->rps.cur_freq),
+				dev_priv->rps.cur_freq,
+				vlv_gpu_freq(dev_priv, pval), pval);
+
+	dev_priv->rps.cur_freq = pval;
+	return;
+}
 
 void valleyview_set_rps(struct drm_device *dev, u8 val)
 {
@@ -3781,6 +3809,9 @@ void valleyview_set_rps(struct drm_device *dev, u8 val)
 	WARN_ON(val > dev_priv->rps.max_freq_softlimit);
 	WARN_ON(val < dev_priv->rps.min_freq_softlimit);
 
+	if (IS_CHERRYVIEW(dev))
+		chv_update_rps_cur_delay(dev_priv);
+
 	DRM_DEBUG_DRIVER("GPU freq request from %d MHz (%u) to %d MHz (%u)\n",
 			 vlv_gpu_freq(dev_priv, dev_priv->rps.cur_freq),
 			 dev_priv->rps.cur_freq,
-- 
1.7.9.5

