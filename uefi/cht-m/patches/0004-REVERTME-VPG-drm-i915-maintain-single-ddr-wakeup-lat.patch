From cc2647d6af7efa76525edfd6d966b6ac326d67cb Mon Sep 17 00:00:00 2001
Message-Id: <cc2647d6af7efa76525edfd6d966b6ac326d67cb.1434670190.git.chang-joon.lee@intel.com>
In-Reply-To: <5c49cb8f884ecf227e44159a5a4931d2c0814d5c.1434670190.git.chang-joon.lee@intel.com>
References: <5c49cb8f884ecf227e44159a5a4931d2c0814d5c.1434670190.git.chang-joon.lee@intel.com>
From: vandita kulkarni <vandita.kulkarni@intel.com>
Date: Tue, 2 Jun 2015 00:19:52 +0530
Subject: [PATCH 4/6] REVERTME [VPG]: drm/i915: maintain single ddr wakeup
 latency

This will help to maintain same ddr wakeup latency for maxfifo
and non maxfifo cases.

REVERTME: This patch is revertme because latency
value needs to be revisited for both maxfifo and
non maxfifo cases, based on the power architect's
input.

Issue: IMINAN-33414
Change-Id: Ia5f94e9a67e5a7bf5cd5a463d4e622084c5485e6
Signed-off-by: Arun R Murthy <arun.r.murthy@intel.com>
Signed-off-by: vandita kulkarni <vandita.kulkarni@intel.com>
---
 drivers/gpu/drm/i915/intel_pm.c | 14 ++++----------
 1 file changed, 4 insertions(+), 10 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_pm.c b/drivers/gpu/drm/i915/intel_pm.c
index f6c9de8..deb81a6 100644
--- a/drivers/gpu/drm/i915/intel_pm.c
+++ b/drivers/gpu/drm/i915/intel_pm.c
@@ -78,6 +78,9 @@ static const struct file_operations rpm_file_ops = {
 #define PRI_SB	0x5
 #define SA_SB	0x6
 
+/* ddr wakeup latency in us */
+#define DDR_WAKEUP_LATENCY 33000
+
 /* FBC, or Frame Buffer Compression, is a technique employed to compress the
  * framebuffer contents in-memory, aiming at reducing the required bandwidth
  * during in-memory transfers and, therefore, reduce the power packet.
@@ -1417,12 +1420,7 @@ bool vlv_calculate_ddl(struct drm_crtc *crtc,
 
 u32 vlv_calculate_wm(struct intel_crtc *crtc, int pixel_size)
 {
-	struct drm_device *dev = crtc->base.dev;
-	struct drm_i915_private *dev_priv = dev->dev_private;
 	const struct drm_display_mode *adjusted_mode;
-	int pipe = crtc->pipe;
-	int plane_stat = VLV_PLANE_STATS(dev_priv->pipe_plane_stat, pipe);
-	int pipe_stat = VLV_PIPE_STATS(dev_priv->pipe_plane_stat);
 	u32 line_time = 0, buffer_wm = 0;
 	int latency;
 	int hdisplay, htotal, clock;
@@ -1432,11 +1430,7 @@ u32 vlv_calculate_wm(struct intel_crtc *crtc, int pixel_size)
 	hdisplay = crtc->config.pipe_src_w;
 	clock = crtc->config.adjusted_mode.crtc_clock;
 
-	if (single_plane_enabled(plane_stat)
-			&& !(pipe_stat & PIPE_ENABLE(PIPE_C)))
-		latency = 33000;
-	else
-		latency = 20000;
+	latency = DDR_WAKEUP_LATENCY;
 
 	if (clock)
 		line_time = (htotal * 1000) / clock;
-- 
1.9.1

