From 3f0a13932e52ebecbf660a86fff9fa7eb99f9e13 Mon Sep 17 00:00:00 2001
Message-Id: <3f0a13932e52ebecbf660a86fff9fa7eb99f9e13.1423872525.git.feitong.yi@intel.com>
In-Reply-To: <3062c7e6b919c393846ff0e13558e7f648b352ca.1423872525.git.feitong.yi@intel.com>
References: <3062c7e6b919c393846ff0e13558e7f648b352ca.1423872525.git.feitong.yi@intel.com>
From: "Kumar, Kiran S" <kiran.s.kumar@intel.com>
Date: Wed, 28 Jan 2015 15:33:29 +0530
Subject: [PATCH 05/95] FOR_UPSTREAM [VPG]: drm/i915: handle failures in the
 set_display

When a flip fails due to multiple reason, return by properly
cleaning up the previously initialized flags/variables and
return error so that the user space can again trigger the flip.

Issue: GMINL-5637
Change-Id: I9b7446492418f78ba1ccb98ca09cecb8e24db07e
Signed-off-by: Arun R Murthy <arun.r.murthy@intel.com>
---
 drivers/gpu/drm/i915/intel_display.c |    6 ++++--
 drivers/gpu/drm/i915/intel_sprite.c  |    4 ++++
 2 files changed, 8 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index 1988f6c..d847310 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -10801,7 +10801,8 @@ int intel_set_disp_plane_update(struct drm_mode_set_display *disp,
 		if (tmp_ret) {
 			DRM_ERROR("flip ioctl failed\n");
 			disp->errored |= (1 << i);
-			ret = -EINVAL;
+			kfree(flip);
+			return tmp_ret;
 		} else
 			disp->presented |= (1 << i);
 		kfree(flip);
@@ -10856,8 +10857,9 @@ int intel_set_disp_plane_update(struct drm_mode_set_display *disp,
 		tmp_ret = drm_mode_setplane(dev, plane, file_priv);
 		if (tmp_ret) {
 			DRM_ERROR("drm_mode_setplane failed\n");
-			ret = -EINVAL;
 			disp->errored |= (1<<i);
+			kfree(plane);
+			return tmp_ret;
 		} else
 			disp->presented |= (1<<i);
 		kfree(plane);
diff --git a/drivers/gpu/drm/i915/intel_sprite.c b/drivers/gpu/drm/i915/intel_sprite.c
index 050383e..5f848c0 100644
--- a/drivers/gpu/drm/i915/intel_sprite.c
+++ b/drivers/gpu/drm/i915/intel_sprite.c
@@ -1701,6 +1701,10 @@ intel_update_plane(struct drm_plane *plane, struct drm_crtc *crtc,
 	ret = intel_pin_and_fence_fb_obj(dev, obj, NULL);
 	mutex_unlock(&dev->struct_mutex);
 	if (ret) {
+		DRM_ERROR("pin and fence of fb failed with %d\n", ret);
+		spin_lock_irqsave(&dev->event_lock, flags);
+		intel_crtc->sprite_unpin_work = NULL;
+		spin_unlock_irqrestore(&dev->event_lock, flags);
 		if (event)
 			drm_vblank_put(dev, intel_crtc->pipe);
 		goto out_unlock;
-- 
1.7.9.5

