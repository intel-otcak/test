From a86c17f0ea0a450a082a39c2f4b32d875ea92789 Mon Sep 17 00:00:00 2001
From: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date: Mon, 19 May 2014 12:58:34 +0100
Subject: [PATCH 206/351] mfd: arizona: Add locking for specific register
 settings

Some operations on the CODEC need to be done under specific register
settings, to ensure that instances of this don't interfer with each
other add a register settings lock that can be held in situations where
this is the case.

Change-Id: I33c38a7127770e6b29a67927e575106b13780e24
Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Signed-off-by: Nikesh Oswal <Nikesh.Oswal@wolfsonmicro.com>
---
 drivers/mfd/arizona-core.c       |    3 +++
 drivers/switch/switch-arizona.c  |    4 ++++
 include/linux/mfd/arizona/core.h |    2 ++
 sound/soc/codecs/arizona.c       |   15 +++++++++------
 4 files changed, 18 insertions(+), 6 deletions(-)

diff --git a/drivers/mfd/arizona-core.c b/drivers/mfd/arizona-core.c
index 33a89e5..4143511 100644
--- a/drivers/mfd/arizona-core.c
+++ b/drivers/mfd/arizona-core.c
@@ -1041,6 +1041,7 @@ static bool arizona_florida_get_input_state(struct arizona* arizona)
 
 void arizona_florida_clear_input(struct arizona *arizona)
 {
+	mutex_lock(&arizona->reg_setting_lock);
 	regmap_write(arizona->regmap, 0x80, 0x3);
 
 	if (arizona_florida_get_input_state(arizona)) {
@@ -1066,6 +1067,7 @@ void arizona_florida_clear_input(struct arizona *arizona)
 	}
 
 	regmap_write(arizona->regmap, 0x80, 0x0);
+	mutex_unlock(&arizona->reg_setting_lock);
 }
 EXPORT_SYMBOL_GPL(arizona_florida_clear_input);
 
@@ -1080,6 +1082,7 @@ int arizona_dev_init(struct arizona *arizona)
 
 	dev_set_drvdata(arizona->dev, arizona);
 	mutex_init(&arizona->clk_lock);
+	mutex_init(&arizona->reg_setting_lock);
 
 	if (dev_get_platdata(arizona->dev))
 		memcpy(&arizona->pdata, dev_get_platdata(arizona->dev),
diff --git a/drivers/switch/switch-arizona.c b/drivers/switch/switch-arizona.c
index c81d7f1..e979ad3 100644
--- a/drivers/switch/switch-arizona.c
+++ b/drivers/switch/switch-arizona.c
@@ -859,9 +859,11 @@ int arizona_micd_start(struct arizona_extcon_info *info)
 	}
 
 	if (info->micd_reva) {
+		mutex_lock(&arizona->reg_setting_lock);
 		regmap_write(arizona->regmap, 0x80, 0x3);
 		regmap_write(arizona->regmap, 0x294, 0);
 		regmap_write(arizona->regmap, 0x80, 0x0);
+		mutex_unlock(&arizona->reg_setting_lock);
 	}
 
 	mode = info->state->mode;
@@ -899,9 +901,11 @@ void arizona_micd_stop(struct arizona_extcon_info *info)
 	snd_soc_dapm_sync(dapm);
 
 	if (info->micd_reva) {
+		mutex_lock(&arizona->reg_setting_lock);
 		regmap_write(arizona->regmap, 0x80, 0x3);
 		regmap_write(arizona->regmap, 0x294, 2);
 		regmap_write(arizona->regmap, 0x80, 0x0);
+		mutex_unlock(&arizona->reg_setting_lock);
 	}
 
 	regulator_disable(info->micvdd);
diff --git a/include/linux/mfd/arizona/core.h b/include/linux/mfd/arizona/core.h
index a2c9f06..852efa0 100644
--- a/include/linux/mfd/arizona/core.h
+++ b/include/linux/mfd/arizona/core.h
@@ -115,6 +115,8 @@ struct arizona {
 	int clk32k_ref;
 
 	struct snd_soc_dapm_context *dapm;
+
+	struct mutex reg_setting_lock;
 };
 
 int arizona_clk32k_enable(struct arizona *arizona);
diff --git a/sound/soc/codecs/arizona.c b/sound/soc/codecs/arizona.c
index 473078e..1830cf4 100644
--- a/sound/soc/codecs/arizona.c
+++ b/sound/soc/codecs/arizona.c
@@ -715,14 +715,13 @@ static int arizona_update_input(struct arizona* arizona, bool enable)
 		return 0;
 	}
 
+	mutex_lock(&arizona->reg_setting_lock);
+	regmap_write(arizona->regmap, 0x80,  0x3);
+
 	if (enable) {
-		regmap_write(arizona->regmap, 0x80,  0x3);
 		regmap_write(arizona->regmap, 0x3A6, 0x5555);
 		regmap_write(arizona->regmap, 0x3A5, 0x3);
-		regmap_write(arizona->regmap, 0x80,  0x0);
 	} else {
-		regmap_write(arizona->regmap, 0x80,  0x3);
-
 		regmap_read(arizona->regmap, 0x3A5, &val);
 		if (val) {
 			msleep(10);
@@ -730,10 +729,11 @@ static int arizona_update_input(struct arizona* arizona, bool enable)
 			regmap_write(arizona->regmap, 0x3A6, 0x0);
 			msleep(5);
 		}
-
-		regmap_write(arizona->regmap, 0x80,  0x0);
 	}
 
+	regmap_write(arizona->regmap, 0x80,  0x0);
+	mutex_unlock(&arizona->reg_setting_lock);
+
 	return 0;
 }
 
@@ -1463,6 +1463,7 @@ static int arizona_hw_params_rate(struct snd_pcm_substream *substream,
 {
 	struct snd_soc_codec *codec = dai->codec;
 	struct arizona_priv *priv = snd_soc_codec_get_drvdata(codec);
+	struct arizona *arizona = priv->arizona;
 	struct arizona_dai_priv *dai_priv = &priv->dai[dai->id - 1];
 	int base = dai->driver->base;
 	int i, sr_val;
@@ -1484,12 +1485,14 @@ static int arizona_hw_params_rate(struct snd_pcm_substream *substream,
 	switch (priv->arizona->type) {
 	case WM5102:
 		if (priv->arizona->pdata.ultrasonic_response) {
+			mutex_lock(&arizona->reg_setting_lock);
 			snd_soc_write(codec, 0x80, 0x3);
 			if (params_rate(params) >= 176400)
 				snd_soc_write(codec, 0x4dd, 0x1);
 			else
 				snd_soc_write(codec, 0x4dd, 0x0);
 			snd_soc_write(codec, 0x80, 0x0);
+			mutex_unlock(&arizona->reg_setting_lock);
 		}
 		break;
 	default:
-- 
1.7.9.5

