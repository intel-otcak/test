From bd51beb97190f747cb96a5f434e0e09f819c9d06 Mon Sep 17 00:00:00 2001
Message-Id: <bd51beb97190f747cb96a5f434e0e09f819c9d06.1413837857.git.chang-joon.lee@intel.com>
In-Reply-To: <006497b7323eca32c2f489a1a9f662743c0d16d2.1413837855.git.chang-joon.lee@intel.com>
References: <006497b7323eca32c2f489a1a9f662743c0d16d2.1413837855.git.chang-joon.lee@intel.com>
From: Vidya Srinivas <vidya.srinivas@intel.com>
Date: Thu, 7 Aug 2014 20:41:00 +0530
Subject: [PATCH 300/312] FOR_UPSTREAM [VPG]: drm/i915: Dynamic pixel format
 fix for VLV.

Patch fixes the issue of dynamic pixel format not being handled
properly in vlv_set_pixelformat

Issue: GMIN-2972
Change-Id: I3508c3772284bfe9e8b27a56f71ee4ea5e7c179d
Signed-off-by: Pallavi <pallavi.g@intel.com>
Signed-off-by: Vidya Srinivas <vidya.srinivas@intel.com>
---
 drivers/gpu/drm/i915/intel_display.c |   72 ++++------------------------------
 1 file changed, 8 insertions(+), 64 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index e5c7994..360b820 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -2880,57 +2880,6 @@ static int hsw_set_pixelformat(struct drm_crtc *crtc, u32 pixel_format)
 	return 0;
 }
 
-/* Set Pixel format for ValleyView */
-static int vlv_set_pixelformat(struct drm_crtc *crtc, u32 pixel_format)
-{
-	u32 dspcntr, reg;
-	struct drm_device *dev = crtc->dev;
-	struct drm_i915_private *dev_priv = dev->dev_private;
-	struct intel_crtc *intel_crtc = to_intel_crtc(crtc);
-
-	reg = DSPCNTR(intel_crtc->pipe);
-	dspcntr = I915_READ(reg);
-	DRM_DEBUG_DRIVER("pixel format = %d\n", pixel_format);
-	/* Mask out pixel format bits in case we change it */
-	dspcntr &= ~DISPPLANE_PIXFORMAT_MASK;
-
-	switch (pixel_format) {
-	case DRM_FORMAT_C8:
-		dspcntr |= DISPPLANE_8BPP;
-		break;
-	case DRM_FORMAT_XRGB1555:
-	case DRM_FORMAT_ARGB1555:
-		dspcntr |= DISPPLANE_BGRX555;
-		break;
-	case DRM_FORMAT_RGB565:
-		dspcntr |= DISPPLANE_BGRX565;
-		break;
-	case DRM_FORMAT_XRGB8888:
-	case DRM_FORMAT_ARGB8888:
-		dspcntr |= DISPPLANE_BGRX888;
-		break;
-	case DRM_FORMAT_XBGR8888:
-	case DRM_FORMAT_ABGR8888:
-		dspcntr |= DISPPLANE_RGBX888;
-		break;
-	case DRM_FORMAT_XRGB2101010:
-	case DRM_FORMAT_ARGB2101010:
-		dspcntr |= DISPPLANE_BGRX101010;
-		break;
-	case DRM_FORMAT_XBGR2101010:
-	case DRM_FORMAT_ABGR2101010:
-		dspcntr |= DISPPLANE_RGBX101010;
-		break;
-	default:
-		DRM_ERROR("Unsupported pixel format 0x%08x\n", pixel_format);
-		return -EINVAL;
-	}
-
-	I915_WRITE(reg, dspcntr);
-	return 0;
-}
-
-
 /* This sets the params using MI commands */
 static int hsw_update_plane(struct drm_crtc *crtc,
 				struct drm_framebuffer *fb, int x, int y)
@@ -10113,8 +10062,12 @@ static int intel_crtc_page_flip(struct drm_crtc *crtc,
 
 	if (INTEL_INFO(dev)->gen > 3 &&
 	    (fb->offsets[0] != crtc->primary->fb->offsets[0] ||
-	     fb->pitches[0] != crtc->primary->fb->pitches[0]))
-		return -EINVAL;
+	     fb->pitches[0] != crtc->primary->fb->pitches[0])) {
+		if (IS_VALLEYVIEW(dev))
+			DRM_DEBUG("Allow dynamic pixel format for vlv\n");
+		else
+			return -EINVAL;
+	}
 
 	if (i915_terminally_wedged(&dev_priv->gpu_error))
 		goto out_hang;
@@ -10253,17 +10206,8 @@ static int intel_crtc_set_pixel_format(struct drm_crtc *crtc,
 
 		return hsw_set_pixelformat(crtc, fb->pixel_format);
 	} else if (IS_VALLEYVIEW(dev)) {
-
-		obj = to_intel_framebuffer(fb)->obj;
-		if (obj == NULL)
-			return -EINVAL;
-
-		if (list_empty(&obj->vma_list)) {
-			DRM_ERROR("empty list in object\n");
-			return -EINVAL;
-		}
-
-		return vlv_set_pixelformat(crtc, fb->pixel_format);
+		/* MMIO flip handles this for VLV */
+		return 0;
 	} else {
 		DRM_ERROR("Pixel format change not allowed.\n");
 		return -EINVAL;
-- 
1.7.9.5

