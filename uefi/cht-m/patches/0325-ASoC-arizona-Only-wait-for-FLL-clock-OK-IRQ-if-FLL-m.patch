From 333a749c8e4e49eb3ec9ed2c45471315d89f0682 Mon Sep 17 00:00:00 2001
From: Richard Fitzgerald <rf@opensource.wolfsonmicro.com>
Date: Fri, 7 Nov 2014 11:06:22 +0000
Subject: [PATCH 325/351] ASoC: arizona: Only wait for FLL clock OK IRQ if FLL
 must relock

We only need to wait for the FLL clock OK IRQ if the input settings of
the FLL change. Changing the output divider does not require the FLL to
relock.

Change-Id: Idf3f3d8a428817c72b69d722adbfaffb871f2a51
Signed-off-by: Nikesh Oswal <Nikesh.Oswal@wolfsonmicro.com>
Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
---
 sound/soc/codecs/arizona.c |   86 +++++++++++++++++++++++++++-----------------
 1 file changed, 54 insertions(+), 32 deletions(-)

diff --git a/sound/soc/codecs/arizona.c b/sound/soc/codecs/arizona.c
index d059ced..41b5032 100644
--- a/sound/soc/codecs/arizona.c
+++ b/sound/soc/codecs/arizona.c
@@ -2425,39 +2425,51 @@ static int arizona_calc_fll(struct arizona_fll *fll,
 
 }
 
-static void arizona_apply_fll(struct arizona *arizona, unsigned int base,
+static bool arizona_apply_fll(struct arizona *arizona, unsigned int base,
 			      struct arizona_fll_cfg *cfg, int source,
 			      bool sync)
 {
-	regmap_update_bits_async(arizona->regmap, base + 3,
-				 ARIZONA_FLL1_THETA_MASK, cfg->theta);
-	regmap_update_bits_async(arizona->regmap, base + 4,
-				 ARIZONA_FLL1_LAMBDA_MASK, cfg->lambda);
-	regmap_update_bits_async(arizona->regmap, base + 5,
-				 ARIZONA_FLL1_FRATIO_MASK,
-				 cfg->fratio << ARIZONA_FLL1_FRATIO_SHIFT);
-	regmap_update_bits_async(arizona->regmap, base + 6,
-				 ARIZONA_FLL1_CLK_REF_DIV_MASK |
-				 ARIZONA_FLL1_CLK_REF_SRC_MASK,
-				 cfg->refdiv << ARIZONA_FLL1_CLK_REF_DIV_SHIFT |
-				 source << ARIZONA_FLL1_CLK_REF_SRC_SHIFT);
+	bool change, fll_change;
+
+	fll_change = false;
+	regmap_update_bits_check_async(arizona->regmap, base + 3,
+			   ARIZONA_FLL1_THETA_MASK, cfg->theta, &change);
+	fll_change |= change;
+	regmap_update_bits_check_async(arizona->regmap, base + 4,
+			   ARIZONA_FLL1_LAMBDA_MASK, cfg->lambda, &change);
+	fll_change |= change;
+	regmap_update_bits_check_async(arizona->regmap, base + 5,
+			   ARIZONA_FLL1_FRATIO_MASK,
+			   cfg->fratio << ARIZONA_FLL1_FRATIO_SHIFT, &change);
+	fll_change |= change;
+	regmap_update_bits_check_async(arizona->regmap, base + 6,
+			   ARIZONA_FLL1_CLK_REF_DIV_MASK |
+			   ARIZONA_FLL1_CLK_REF_SRC_MASK,
+			   cfg->refdiv << ARIZONA_FLL1_CLK_REF_DIV_SHIFT |
+			   source << ARIZONA_FLL1_CLK_REF_SRC_SHIFT, &change);
+	fll_change |= change;
 
 	if (sync) {
-		regmap_update_bits_async(arizona->regmap, base + 0x7,
-					 ARIZONA_FLL1_GAIN_MASK,
-					 cfg->gain << ARIZONA_FLL1_GAIN_SHIFT);
+		regmap_update_bits_check_async(arizona->regmap, base + 0x7,
+				   ARIZONA_FLL1_GAIN_MASK,
+				   cfg->gain << ARIZONA_FLL1_GAIN_SHIFT, &change);
+		fll_change |= change;
 	} else {
-		regmap_update_bits(arizona->regmap, base + 0x5,
+		regmap_update_bits_async(arizona->regmap, base + 0x5,
 				   ARIZONA_FLL1_OUTDIV_MASK,
 				   cfg->outdiv << ARIZONA_FLL1_OUTDIV_SHIFT);
-		regmap_update_bits_async(arizona->regmap, base + 0x9,
-					 ARIZONA_FLL1_GAIN_MASK,
-					 cfg->gain << ARIZONA_FLL1_GAIN_SHIFT);
+		regmap_update_bits_check_async(arizona->regmap, base + 0x9,
+				   ARIZONA_FLL1_GAIN_MASK,
+				   cfg->gain << ARIZONA_FLL1_GAIN_SHIFT, &change);
+		fll_change |= change;
 	}
 
-	regmap_update_bits_async(arizona->regmap, base + 2,
-				 ARIZONA_FLL1_CTRL_UPD | ARIZONA_FLL1_N_MASK,
-				 ARIZONA_FLL1_CTRL_UPD | cfg->n);
+	regmap_update_bits_check_async(arizona->regmap, base + 2,
+			   ARIZONA_FLL1_CTRL_UPD | ARIZONA_FLL1_N_MASK,
+			   ARIZONA_FLL1_CTRL_UPD | cfg->n, &change);
+	fll_change |= change;
+
+	return fll_change;
 }
 
 static int arizona_is_enabled_fll(struct arizona_fll *fll)
@@ -2483,10 +2495,14 @@ static int arizona_enable_fll(struct arizona_fll *fll)
 	bool use_sync = false;
 	int already_enabled = arizona_is_enabled_fll(fll);
 	struct arizona_fll_cfg cfg;
+	bool fll_change;
 
 	if (already_enabled < 0)
 		return already_enabled;
 
+	arizona_fll_dbg(fll, "Enabling FLL, initially %s\n",
+			already_enabled ? "enabled" : "disabled");
+
 	if (already_enabled) {
 		/* Facilitate smooth refclk across the transition */
 		regmap_update_bits(fll->arizona->regmap, fll->base + 0x7,
@@ -2503,18 +2519,19 @@ static int arizona_enable_fll(struct arizona_fll *fll)
 	    fll->ref_src != fll->sync_src) {
 		arizona_calc_fll(fll, &cfg, fll->ref_freq, false);
 
-		arizona_apply_fll(arizona, fll->base, &cfg, fll->ref_src,
-				  false);
+		fll_change = arizona_apply_fll(arizona, fll->base, &cfg,
+						fll->ref_src, false);
 		if (fll->sync_src >= 0) {
 			arizona_calc_fll(fll, &cfg, fll->sync_freq, true);
 
-			arizona_apply_fll(arizona, fll->base + 0x10, &cfg,
-					  fll->sync_src, true);
+			fll_change |= arizona_apply_fll(arizona,
+							fll->base + 0x10, &cfg,
+							fll->sync_src, true);
 			use_sync = true;
 		}
 	} else if (fll->sync_src >= 0) {
 		arizona_calc_fll(fll, &cfg, fll->sync_freq, false);
-		arizona_apply_fll(arizona, fll->base, &cfg,
+		fll_change = arizona_apply_fll(arizona, fll->base, &cfg,
 				  fll->sync_src, false);
 
 		regmap_update_bits_async(arizona->regmap, fll->base + 0x11,
@@ -2553,10 +2570,13 @@ static int arizona_enable_fll(struct arizona_fll *fll)
 		regmap_update_bits(arizona->regmap, fll->base + 1,
 				   ARIZONA_FLL1_FREERUN, 0);
 
-	ret = wait_for_completion_timeout(&fll->ok,
-					  msecs_to_jiffies(250));
-	if (ret == 0)
-		arizona_fll_warn(fll, "Timed out waiting for lock\n");
+	if (fll_change ||  !already_enabled) {
+		arizona_fll_dbg(fll, "Waiting for FLL lock...\n");
+		ret = wait_for_completion_timeout(&fll->ok,
+						  msecs_to_jiffies(250));
+		if (ret == 0)
+			arizona_fll_warn(fll, "Timed out waiting for lock\n");
+	}
 
 	return 0;
 }
@@ -2566,6 +2586,8 @@ static void arizona_disable_fll(struct arizona_fll *fll)
 	struct arizona *arizona = fll->arizona;
 	bool change;
 
+	arizona_fll_dbg(fll, "Disabling FLL\n");
+
 	regmap_update_bits_async(arizona->regmap, fll->base + 1,
 				 ARIZONA_FLL1_FREERUN, ARIZONA_FLL1_FREERUN);
 	regmap_update_bits_check(arizona->regmap, fll->base + 1,
-- 
1.7.9.5

