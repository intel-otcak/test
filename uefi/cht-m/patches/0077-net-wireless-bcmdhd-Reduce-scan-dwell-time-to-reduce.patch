From 8bbc471e00d34dc31da21f245871444302d34e61 Mon Sep 17 00:00:00 2001
From: Dmitry Shmidt <dimitrysh@google.com>
Date: Fri, 12 Sep 2014 14:01:32 -0700
Subject: [PATCH 77/77] net: wireless: bcmdhd: Reduce scan dwell time to reduce
 power

Scan dwell time is reduced for 40/80 to 20/40 (normal)
and 20/30 (power-save). Scan quality reduction is ~ 20%.

b/17485849

Change-Id: I00d6e5ef83df8b075b48736daaa6e814dd09054a
Signed-off-by: Dmitry Shmidt <dimitrysh@google.com>
---
 drivers/net/wireless/bcmdhd/dhd.h       |  5 +++--
 drivers/net/wireless/bcmdhd/dhd_linux.c | 19 ++++++++++---------
 2 files changed, 13 insertions(+), 11 deletions(-)

diff --git a/drivers/net/wireless/bcmdhd/dhd.h b/drivers/net/wireless/bcmdhd/dhd.h
index 20c569e1da46..7c29a33813f8 100644
--- a/drivers/net/wireless/bcmdhd/dhd.h
+++ b/drivers/net/wireless/bcmdhd/dhd.h
@@ -120,8 +120,9 @@ enum dhd_op_flags {
 #define MAX_CNTL_RX_TIMEOUT 1
 #endif /* MAX_CNTL_RX_TIMEOUT */
 
-#define DHD_SCAN_ASSOC_ACTIVE_TIME	40 /* ms: Embedded default Active setting from DHD */
-#define DHD_SCAN_UNASSOC_ACTIVE_TIME 80 /* ms: Embedded def. Unassoc Active setting from DHD */
+#define DHD_SCAN_ASSOC_ACTIVE_TIME	20 /* ms: Embedded default Active setting from DHD */
+#define DHD_SCAN_UNASSOC_ACTIVE_TIME	40 /* ms: Embedded def. Unassoc Active setting from DHD */
+#define DHD_SCAN_UNASSOC_ACTIVE_TIME_PS	30
 #define DHD_SCAN_PASSIVE_TIME		130 /* ms: Embedded default Passive setting from DHD */
 
 #ifndef POWERUP_MAX_RETRY
diff --git a/drivers/net/wireless/bcmdhd/dhd_linux.c b/drivers/net/wireless/bcmdhd/dhd_linux.c
index 9d78a6efa5b7..ccb5a95bd0fb 100644
--- a/drivers/net/wireless/bcmdhd/dhd_linux.c
+++ b/drivers/net/wireless/bcmdhd/dhd_linux.c
@@ -8371,20 +8371,21 @@ void dhd_set_short_dwell_time(dhd_pub_t *dhd, int set)
 
 	DHD_TRACE(("%s: Enter: %d\n", __FUNCTION__, set));
 	if (dhd->short_dwell_time != set) {
-		dhd->short_dwell_time = set;
 		if (set) {
-			scan_assoc_time = DHD_SCAN_ASSOC_ACTIVE_TIME >> 1;
-			scan_unassoc_time = DHD_SCAN_UNASSOC_ACTIVE_TIME >> 1;
+			scan_unassoc_time = DHD_SCAN_UNASSOC_ACTIVE_TIME_PS;
 		}
-		dhd_wl_ioctl_cmd(dhd, WLC_SET_SCAN_CHANNEL_TIME,
-				(char *)&scan_assoc_time,
-				sizeof(scan_assoc_time), TRUE, 0);
 		dhd_wl_ioctl_cmd(dhd, WLC_SET_SCAN_UNASSOC_TIME,
 				(char *)&scan_unassoc_time,
 				sizeof(scan_unassoc_time), TRUE, 0);
-		dhd_wl_ioctl_cmd(dhd, WLC_SET_SCAN_PASSIVE_TIME,
-				(char *)&scan_passive_time,
-				sizeof(scan_passive_time), TRUE, 0);
+		if (dhd->short_dwell_time == -1) {
+			dhd_wl_ioctl_cmd(dhd, WLC_SET_SCAN_CHANNEL_TIME,
+					(char *)&scan_assoc_time,
+					sizeof(scan_assoc_time), TRUE, 0);
+			dhd_wl_ioctl_cmd(dhd, WLC_SET_SCAN_PASSIVE_TIME,
+					(char *)&scan_passive_time,
+					sizeof(scan_passive_time), TRUE, 0);
+		}
+		dhd->short_dwell_time = set;
 	}
 }
 
-- 
2.0.3

