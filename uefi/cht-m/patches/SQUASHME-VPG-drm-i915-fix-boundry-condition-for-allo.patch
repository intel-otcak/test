From 368ee0c51a344a8b7a74f28f94f2b610e93b185c Mon Sep 17 00:00:00 2001
From: "Thulasimani,Sivakumar" <sivakumar.thulasimani@intel.com>
Date: Thu, 31 Mar 2016 00:30:48 +0530
Subject: [PATCH 16/22] SQUASHME! [VPG]: drm/i915: fix boundry condition for
 allow_dpcd

allow_dpcd was set during the port enable itself, this resulted
in a timing issue where a short pulse is received before link
training is complete, since we allow dpcd access during port
enable itself we try to read link status and find that it is
not up. this in turn triggers fake detach and attach. To
avoid this scenario it is better to allow dpcd access
post link training alone.

In addition this patch fixes the boundry condition so
we will exit when we reach the retry count.

This patch has to be squashed into the following patch
Change-Id: Id67e8ae7701c2eed6d04b0fb715a764eac6b9b2f
Author: Thulasimani,Sivakumar <sivakumar.thulasimani@intel.com>
Date:   Tue Nov 3 14:49:29 2015 +0530
FOR_UPSTREAM [VPG]: drm/i915: delay short pulse handling till display
is up

Change-Id: Ic9a364c853b43226407511feee86710e2ebdbadf
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-27481
Signed-off-by: Sivakumar Thulasimani <sivakumar.thulasimani@intel.com>
Reviewed-on: https://android.intel.com:443/496017
---
 drivers/gpu/drm/i915/intel_dp.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_dp.c b/drivers/gpu/drm/i915/intel_dp.c
index a4652c9..34c0329 100644
--- a/drivers/gpu/drm/i915/intel_dp.c
+++ b/drivers/gpu/drm/i915/intel_dp.c
@@ -3137,7 +3137,6 @@ static void chv_pre_enable_dp(struct intel_encoder *encoder)
 	if (is_edp(intel_dp))
 		vlv_init_panel_power_sequencer(intel_dp);
 
-	intel_dp->allow_dpcd = true;
 	intel_enable_dp(encoder);
 
 	vlv_wait_port_ready(dev_priv, dport);
@@ -4088,6 +4087,7 @@ intel_dp_complete_link_train(struct intel_dp *intel_dp)
 
 	if (channel_eq) {
 		intel_dp->has_fast_link_train = true;
+		intel_dp->allow_dpcd = true;
 		DRM_DEBUG_KMS("Channel EQ done. DP Training successful\n");
 	}
 
@@ -4562,7 +4562,7 @@ intel_dp_check_link_status(struct intel_dp *intel_dp, bool *perform_full_detect)
 	intel_dp->compliance_test_type = 0;
 	intel_dp->compliance_test_data = 0;
 
-	while (!intel_dp->allow_dpcd && counter-- > 0)
+	while (!intel_dp->allow_dpcd && counter-- > 1)
 		mdelay(10);
 
 	DRM_DEBUG_KMS("\n");
-- 
1.9.1

