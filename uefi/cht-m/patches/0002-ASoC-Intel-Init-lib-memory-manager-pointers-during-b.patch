From c3d8cbecb02baab34bf3860b3d04d4c71424b123 Mon Sep 17 00:00:00 2001
From: Ramesh Babu <Ramesh.Babu@intel.com>
Date: Mon, 19 Jan 2015 14:10:54 +0530
Subject: [PATCH 02/15] ASoC: Intel: Init lib memory manager pointers during
 boot

Issue: GMINL-6292

Currently this is done during module download,
however these addresses are required for downloading
WOV binaries during boot.

Move this the init to probe.

Change-Id: I4a2469cd5bb25caab63c64f56a6c0a71ee89e4c9
Signed-off-by: Ramesh Babu <Ramesh.Babu@intel.com>
Signed-off-by: Fabien Marotte <fabien.marotte@intel.com>
---
 sound/soc/intel/sst/sst.c      | 16 +++++++++++++++-
 sound/soc/intel/sst/sst.h      |  1 +
 sound/soc/intel/sst/sst_acpi.c |  1 +
 sound/soc/intel/sst/sst_dsp.c  | 16 ----------------
 4 files changed, 17 insertions(+), 17 deletions(-)

diff --git a/sound/soc/intel/sst/sst.c b/sound/soc/intel/sst/sst.c
index b756d96..cdca28b 100644
--- a/sound/soc/intel/sst/sst.c
+++ b/sound/soc/intel/sst/sst.c
@@ -618,6 +618,20 @@ static struct platform_device cht_t_mach_dev = {
 	.num_resources  = 0,
 };
 
+void sst_init_lib_mem_mgr(struct intel_sst_drv *ctx)
+{
+	struct sst_mem_mgr *mgr = &ctx->lib_mem_mgr;
+	const struct sst_lib_dnld_info *lib_info = ctx->pdata->lib_info;
+
+	memset(mgr, 0, sizeof(*mgr));
+	mgr->current_base = lib_info->mod_base + lib_info->mod_table_offset
+						+ lib_info->mod_table_size;
+	mgr->avail = lib_info->mod_end - mgr->current_base + 1;
+
+	pr_debug("current base = 0x%lx , avail = 0x%x\n",
+		(unsigned long)mgr->current_base, mgr->avail);
+}
+
 int sst_request_firmware_async(struct intel_sst_drv *ctx)
 {
 	int ret = 0;
@@ -819,7 +833,7 @@ static int intel_sst_probe(struct pci_dev *pci,
 	} else {
 		sst_drv_ctx->ddr = NULL;
 	}
-
+	sst_init_lib_mem_mgr(sst_drv_ctx);
 	/* SHIM */
 	sst_drv_ctx->shim_phy_add = pci_resource_start(pci, 1);
 	sst_drv_ctx->shim = pci_ioremap_bar(pci, 1);
diff --git a/sound/soc/intel/sst/sst.h b/sound/soc/intel/sst/sst.h
index 3a2f092..45fad6e 100644
--- a/sound/soc/intel/sst/sst.h
+++ b/sound/soc/intel/sst/sst.h
@@ -659,6 +659,7 @@ int sst_load_fw(void);
 int sst_load_library(struct snd_sst_lib_download *lib, u8 ops);
 int sst_load_all_modules_elf(struct intel_sst_drv *ctx,
 		struct sst_module_info *mod_table, int mod_table_size);
+void sst_init_lib_mem_mgr(struct intel_sst_drv *ctx);
 int sst_get_next_lib_mem(struct sst_mem_mgr *mgr, int size,
 			unsigned long *lib_base);
 void sst_post_download_ctp(struct intel_sst_drv *ctx);
diff --git a/sound/soc/intel/sst/sst_acpi.c b/sound/soc/intel/sst/sst_acpi.c
index f2fe209a..733f5e2 100644
--- a/sound/soc/intel/sst/sst_acpi.c
+++ b/sound/soc/intel/sst/sst_acpi.c
@@ -634,6 +634,7 @@ int sst_acpi_probe(struct platform_device *pdev)
 		struct stream_info *stream = &ctx->streams[i];
 		mutex_init(&stream->lock);
 	}
+	sst_init_lib_mem_mgr(ctx);
 	ret = sst_request_firmware_async(ctx);
 	if (ret) {
 		pr_err("Request Firmware failed:%d\n", ret);
diff --git a/sound/soc/intel/sst/sst_dsp.c b/sound/soc/intel/sst/sst_dsp.c
index d716504..5ce67d5 100644
--- a/sound/soc/intel/sst/sst_dsp.c
+++ b/sound/soc/intel/sst/sst_dsp.c
@@ -1525,20 +1525,6 @@ void sst_post_download_byt(struct intel_sst_drv *ctx)
 	}
 }
 
-static void sst_init_lib_mem_mgr(struct intel_sst_drv *ctx)
-{
-	struct sst_mem_mgr *mgr = &ctx->lib_mem_mgr;
-	const struct sst_lib_dnld_info *lib_info = ctx->pdata->lib_info;
-
-	memset(mgr, 0, sizeof(*mgr));
-	mgr->current_base = lib_info->mod_base + lib_info->mod_table_offset
-						+ lib_info->mod_table_size;
-	mgr->avail = lib_info->mod_end - mgr->current_base + 1;
-
-	pr_debug("current base = 0x%lx , avail = 0x%x\n",
-		(unsigned long)mgr->current_base, mgr->avail);
-}
-
 /**
  * sst_load_fw - function to load FW into DSP
  *
@@ -1952,8 +1938,6 @@ int sst_load_all_modules_elf(struct intel_sst_drv *ctx, struct sst_module_info *
 
 	pr_debug("In %s", __func__);
 
-	sst_init_lib_mem_mgr(ctx);
-
 	for (i = 0; i < num_modules; i++) {
 		mod = &mod_table[i];
 		trace_sst_lib_download("Start of Request Lib", mod->name);
-- 
1.9.1

