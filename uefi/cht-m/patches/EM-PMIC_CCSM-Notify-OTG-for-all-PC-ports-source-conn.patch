From 114e98903fcc00e45aeea4297ddf54d103bdb72c Mon Sep 17 00:00:00 2001
From: Albin B <albin.bala.krishnan@intel.com>
Date: Thu, 3 Dec 2015 10:36:35 +0530
Subject: [PATCH 4/4] [EM/PMIC_CCSM]: Notify OTG for all PC ports source
 connect/disconnect

When USB is disconnect while checking the cable type for sending
notification to OTG, if the cabe type is none not sending notification
to the otg driver. This breaks the next detections. Hence enabled the
flag to send the notification to otg for all type of pc port's connect
or disconnect only.

Change-Id: Iec557b7d7bc282443200b5460a648cbf06d8510d
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-12471
Signed-off-by: Albin B <albin.bala.krishnan@intel.com>
Reviewed-on: https://android.intel.com:443/443774
Reviewed-on: https://android.intel.com:443/447383
---
 drivers/power/intel_pmic_ccsm.c |   44 +++++++++++++---------------------------
 drivers/power/intel_pmic_ccsm.h |    1 
 2 files changed, 16 insertions(+), 29 deletions(-)

Index: b/drivers/power/intel_pmic_ccsm.c
===================================================================
--- a/drivers/power/intel_pmic_ccsm.c	2016-03-08 13:38:33.138718551 -0800
+++ b/drivers/power/intel_pmic_ccsm.c	2016-03-08 13:42:37.042379658 -0800
@@ -918,6 +918,9 @@
 		cap.chrg_type = chc.charger_type;
 	}
 
+	/* by default all the events should be notified to USB */
+	chc.is_notify_otg = true;
+
 	switch (cap.chrg_type) {
 	case POWER_SUPPLY_CHARGER_TYPE_USB_SDP:
 		if (cap.chrg_evt == POWER_SUPPLY_CHARGER_EVENT_CONNECT)
@@ -939,7 +942,17 @@
 	case POWER_SUPPLY_CHARGER_TYPE_USB_DCP:
 	case POWER_SUPPLY_CHARGER_TYPE_SE1:
 	case POWER_SUPPLY_CHARGER_TYPE_USB_ACA:
+	case POWER_SUPPLY_CHARGER_TYPE_AC:
+	case POWER_SUPPLY_CHARGER_TYPE_ACA_B:
+	case POWER_SUPPLY_CHARGER_TYPE_ACA_C:
+	case POWER_SUPPLY_CHARGER_TYPE_MHL:
+	case POWER_SUPPLY_CHARGER_TYPE_B_DEVICE:
 		cap.ma = HIGH_POWER_CHRG_CURRENT;
+		/*
+		 * don't notify to OTG driver incase of non PC/Dock ports
+		 * connect/disconenct.
+		 */
+		chc.is_notify_otg = false;
 		break;
 	case POWER_SUPPLY_CHARGER_TYPE_ACA_DOCK:
 	case POWER_SUPPLY_CHARGER_TYPE_ACA_A:
@@ -949,16 +962,10 @@
 		else
 			evt = USB_EVENT_NONE;
 		break;
-	case POWER_SUPPLY_CHARGER_TYPE_AC:
-	case POWER_SUPPLY_CHARGER_TYPE_ACA_B:
-	case POWER_SUPPLY_CHARGER_TYPE_ACA_C:
-	case POWER_SUPPLY_CHARGER_TYPE_MHL:
-	case POWER_SUPPLY_CHARGER_TYPE_B_DEVICE:
-		cap.ma = HIGH_POWER_CHRG_CURRENT;
-		break;
 	case POWER_SUPPLY_CHARGER_TYPE_NONE:
 	default:
 		cap.ma = 0;
+		chc.is_notify_otg = false;
 	}
 
 	dev_dbg(chc.dev, "Notifying OTG ev:%d, evt:%d, chrg_type:%d, mA:%d\n",
@@ -1884,27 +1891,6 @@
 	return 0;
 }
 
-static bool is_notify_otg(void)
-{
-	enum power_supply_charger_cable_type ctype = chc.charger_type;
-
-	/* don't do charger detection again if already charger type is set */
-	if (!ctype) {
-		ctype = get_charger_type();
-		if (ctype == 0)
-			return false;
-	}
-
-	/* don't notify to OTG driver in case of DCP/SE1/ACA
-	 * connect/disconenct */
-	if (ctype == POWER_SUPPLY_CHARGER_TYPE_USB_DCP ||
-			ctype == POWER_SUPPLY_CHARGER_TYPE_SE1 ||
-			ctype == POWER_SUPPLY_CHARGER_TYPE_USB_ACA)
-		return false;
-
-	return true;
-}
-
 static void pmic_ccsm_process_cable_events(enum cable_type cbl_type,
 						bool cable_state)
 {
@@ -1932,7 +1918,7 @@
 		/* Send VBUS notification to USB subsystem so that system will
 		 * switch device mode of operation.
                  */
-		if (is_notify_otg()) {
+		if (chc.is_notify_otg) {
 			otg_evt = cable_state ? USB_EVENT_VBUS : USB_EVENT_NONE;
 			notify_otg = true;
 		}
Index: b/drivers/power/intel_pmic_ccsm.h
===================================================================
--- a/drivers/power/intel_pmic_ccsm.h	2016-03-08 13:38:33.138718551 -0800
+++ b/drivers/power/intel_pmic_ccsm.h	2016-03-08 13:38:54.019033396 -0800
@@ -406,6 +406,7 @@
 	bool src_cable_state;
 	bool snk_cable_state;
 	bool is_usb_typec;
+	bool is_notify_otg;
 
 	bool tt_lock;
 	unsigned int irq[PMIC_CCSM_IRQ_MAX];		/* GPE_ID or IRQ# */
