From 3474074cfcffca4e32e1968e513fc0e41ddeece1 Mon Sep 17 00:00:00 2001
Message-Id: <3474074cfcffca4e32e1968e513fc0e41ddeece1.1427265330.git.chang-joon.lee@intel.com>
In-Reply-To: <b4c66aa6a04d2be0fca9fa4448c7188a581a57a5.1427265330.git.chang-joon.lee@intel.com>
References: <b4c66aa6a04d2be0fca9fa4448c7188a581a57a5.1427265330.git.chang-joon.lee@intel.com>
From: Sangani Suryanarayana Raju <suryanarayana.r.sangani@intel.com>
Date: Fri, 6 Mar 2015 13:14:25 +0530
Subject: [PATCH 21/22] FROM_UPSTREAM [VPG]: drm/i915: Fix device boot issue
 with DSI ULPS sequence

Keeping DEVICE_READY bit set in the ULPS exit sequence causes
blankout for some devices. This patch fixes this issue and
also takes care of programming delay as per spec.

Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=80818
Signed-off-by: Shobhit Kumar <shobhit.kumar@intel.com>
Tested-by: Chris Wilson <chris@chris-wilson.co.uk>
Signed-off-by: Jani Nikula <jani.nikula@intel.com>

Issue: GMINL-5496
Change-Id: I284bae2b5b607334792f000553a62d2ac6fcb9f0
Upstream-repo: git://anongit.freedesktop.org/drm-intel
Upstream-commit: aceb365ca9a51fb604313c08ed3061d6cc643237
Signed-off-by: Sangani Suryanarayana Raju <suryanarayana.r.sangani@intel.com>
---
 drivers/gpu/drm/i915/intel_dsi.c |   15 +++++----------
 1 file changed, 5 insertions(+), 10 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_dsi.c b/drivers/gpu/drm/i915/intel_dsi.c
index b2da3fe..71e3eeb 100644
--- a/drivers/gpu/drm/i915/intel_dsi.c
+++ b/drivers/gpu/drm/i915/intel_dsi.c
@@ -164,9 +164,6 @@ static void intel_dsi_device_ready(struct intel_encoder *encoder)
 	/* bandgap reset is needed after everytime we do power gate */
 	band_gap_reset(dev_priv);
 
-	I915_WRITE(MIPI_DEVICE_READY(pipe), ULPS_STATE_ENTER);
-	usleep_range(2500, 3000);
-
 	val = I915_READ(MIPI_PORT_CTRL(0));
 
 	/*
@@ -177,22 +174,20 @@ static void intel_dsi_device_ready(struct intel_encoder *encoder)
 		val |= pipe ? DELAY_180_PHASE_SHIFT_MIPIC :
 				DELAY_180_PHASE_SHIFT_MIPIA;
 
-	intel_dsi_write_dev_rdy_on_A_and_C(encoder, DEVICE_READY |
-							ULPS_STATE_ENTER);
+	intel_dsi_write_dev_rdy_on_A_and_C(encoder, ULPS_STATE_ENTER);
 
 	/* wait for LP state to go 00 */
-	usleep_range(2000, 2500);
+	usleep_range(2500, 3000);
 	I915_WRITE(MIPI_PORT_CTRL(0), val | LP_OUTPUT_HOLD);
 	usleep_range(1000, 1500);
-	intel_dsi_write_dev_rdy_on_A_and_C(encoder, DEVICE_READY |
-							ULPS_STATE_EXIT);
+	intel_dsi_write_dev_rdy_on_A_and_C(encoder, ULPS_STATE_EXIT);
 
 	/* wait for LP state to goto 11 */
-	usleep_range(2000, 2500);
+	usleep_range(2500, 3000);
 	intel_dsi_write_dev_rdy_on_A_and_C(encoder, DEVICE_READY);
 
 	/* wait for dsi controller hw enumeration */
-	usleep_range(2000, 2500);
+	usleep_range(2500, 3000);
 }
 
 static void intel_dsi_port_enable(struct intel_encoder *encoder)
-- 
1.7.9.5

