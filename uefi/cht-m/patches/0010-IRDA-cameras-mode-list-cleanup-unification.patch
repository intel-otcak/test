From 6fb0eebc032883006f6149a79cd628145e4ea169 Mon Sep 17 00:00:00 2001
From: Andy Ross <andrew.j.ross@intel.com>
Date: Mon, 26 Jan 2015 14:48:39 -0800
Subject: [PATCH] IRDA cameras: mode list cleanup/unification

Mode selection in these drivers was sort of a mess.  Different modes
were specified in different PREVIEW/STILL/VIDEO lists, which are known
*not* to match the actual state at runtime (this seems to be a legacy
feature, the run_mode from atomisp doesn't arrive until too late now).

+ gc2155's modes are 20 Hz, not 30 Hz.  Fix naming to reflect that.

+ Remove 16:10 modes from gc2155 and ov5648 as they don't match the
  16:9 and 4:3 ratios in all modes exercised in userspace and will
  cause aspect skew if chosen.

+ Remove a ton of cropped ("zoomed") modes in ov2680.  These are not
  useful in the current architecture, which needs full-frame modes
  only.  Likewise clean up a bunch of previously-removed-by-#if modes.

+ ov5648 was missing the binned 720p mode in its PREVIEW and STILL
  lists, causing (at least) CtsVerifier to pick a 4:3 5MP 15 Hz mode
  for preview which doesn't match the video mode it had to test
  against.

Change-Id: I241007f289f59193e79df1281f8a044233701464
Tracked-On: https://jira01.devtools.intel.com/browse/IRDA-3386
Signed-off-by: Andy Ross <andrew.j.ross@intel.com>
---
 drivers/media/i2c/atomisp/gc2155.h |  44 +++++------
 drivers/media/i2c/atomisp/ov2680.h | 156 ++++---------------------------------
 drivers/media/i2c/atomisp/ov5648.h |  46 +++++------
 3 files changed, 62 insertions(+), 184 deletions(-)

diff --git a/drivers/media/i2c/atomisp/gc2155.h b/drivers/media/i2c/atomisp/gc2155.h
index 2dd19a8..7924d2a 100644
--- a/drivers/media/i2c/atomisp/gc2155.h
+++ b/drivers/media/i2c/atomisp/gc2155.h
@@ -546,7 +546,7 @@ static struct gc2155_reg const gc2155_720p_30fps[] = {
 	{GC2155_TOK_TERM, 0, 0},
 };
 
-static struct gc2155_reg const gc2155_2M_30fps[] = {
+static struct gc2155_reg const gc2155_2M_20fps[] = {
 	/* window */
 	{GC2155_8BIT, 0xfe, 0x00},
 	{GC2155_8BIT, 0x0a, 0x00},
@@ -573,7 +573,7 @@ static struct gc2155_reg const gc2155_2M_30fps[] = {
 	{GC2155_TOK_TERM, 0, 0},
 };
 
-static struct gc2155_reg const gc2155_1616x916_30fps[] = {
+static struct gc2155_reg const gc2155_1616x916_20fps[] = {
 	/* window */
 	{GC2155_8BIT, 0xfe, 0x00},
 	{GC2155_8BIT, 0x0a, 0x00},
@@ -629,10 +629,10 @@ static struct gc2155_reg const gc2155_1616x1080_30fps[] = {
 
 struct gc2155_resolution gc2155_res_preview[] = {
 	{
-		.desc = "gc2155_2M_30fps",
+		.desc = "gc2155_2M_20fps",
 		.width = 1616,
 		.height = 1216,
-		.fps = 30,
+		.fps = 20,
 		//.pix_clk_freq = 73,
 		.used = 0,
 		.pixels_per_line = 1632,
@@ -641,13 +641,13 @@ struct gc2155_resolution gc2155_res_preview[] = {
 		.bin_factor_y = 1,
 		.bin_mode = 0,
 		.skip_frames = 2,
-		.regs = gc2155_2M_30fps,
+		.regs = gc2155_2M_20fps,
 	},
 	{
-		.desc = "gc2155_1616x916_30fps",
+		.desc = "gc2155_1616x916_20fps",
 		.width = 1616,
 		.height = 916,
-		.fps = 30,
+		.fps = 20,
 		//.pix_clk_freq = 73,
 		.used = 0,
 		.pixels_per_line = 1632,
@@ -656,17 +656,17 @@ struct gc2155_resolution gc2155_res_preview[] = {
 		.bin_factor_y = 1,
 		.bin_mode = 0,
 		.skip_frames = 2,
-		.regs = gc2155_1616x916_30fps,
+		.regs = gc2155_1616x916_20fps,
 	},
 };
 #define N_RES_PREVIEW (ARRAY_SIZE(gc2155_res_preview))
 
 struct gc2155_resolution gc2155_res_still[] = {
 	{
-		.desc = "gc2155_2M_30fps",
+		.desc = "gc2155_2M_20fps",
 		.width = 1616,
 		.height = 1216,
-		.fps = 30,
+		.fps = 20,
 		//.pix_clk_freq = 73,//calculator in gc2155_get_intg_factor
 		.used = 0,
 		.pixels_per_line = 1632,//calculator in gc2155_get_intg_factor
@@ -675,13 +675,13 @@ struct gc2155_resolution gc2155_res_still[] = {
 		.bin_factor_y = 1,
 		.bin_mode = 0,
 		.skip_frames = 2,
-		.regs = gc2155_2M_30fps,
+		.regs = gc2155_2M_20fps,
 	},
 	{
-		.desc = "gc2155_1616x916_30fps",
+		.desc = "gc2155_1616x916_20fps",
 		.width = 1616,
 		.height = 916,
-		.fps = 30,
+		.fps = 20,
 		//.pix_clk_freq = 73,
 		.used = 0,
 		.pixels_per_line = 1632,
@@ -690,17 +690,17 @@ struct gc2155_resolution gc2155_res_still[] = {
 		.bin_factor_y = 1,
 		.bin_mode = 0,
 		.skip_frames = 2,
-		.regs = gc2155_1616x916_30fps,
+		.regs = gc2155_1616x916_20fps,
 	},
 };
 #define N_RES_STILL (ARRAY_SIZE(gc2155_res_still))
 
 struct gc2155_resolution gc2155_res_video[] = {
 	{
-		.desc = "gc2155_1616x916_30fps",
+		.desc = "gc2155_2M_20fps",
 		.width = 1616,
-		.height = 916,
-		.fps = 30,
+		.height = 1216,
+		.fps = 20,
 		//.pix_clk_freq = 73,
 		.used = 0,
 		.pixels_per_line = 1632,
@@ -709,13 +709,13 @@ struct gc2155_resolution gc2155_res_video[] = {
 		.bin_factor_y = 1,
 		.bin_mode = 0,
 		.skip_frames = 2,
-		.regs = gc2155_1616x916_30fps,
+		.regs = gc2155_2M_20fps,
 	},
 	{
-		.desc = "gc2155_1616x1080_30fps",
+		.desc = "gc2155_1616x916_20fps",
 		.width = 1616,
-		.height = 1080,
-		.fps = 30,
+		.height = 916,
+		.fps = 20,
 		//.pix_clk_freq = 73,
 		.used = 0,
 		.pixels_per_line = 1632,
@@ -724,7 +724,7 @@ struct gc2155_resolution gc2155_res_video[] = {
 		.bin_factor_y = 1,
 		.bin_mode = 0,
 		.skip_frames = 2,
-		.regs = gc2155_1616x1080_30fps,
+		.regs = gc2155_1616x916_20fps,
 	},
 };
 #define N_RES_VIDEO (ARRAY_SIZE(gc2155_res_video))
diff --git a/drivers/media/i2c/atomisp/ov2680.h b/drivers/media/i2c/atomisp/ov2680.h
index 55d125e..bed7224 100644
--- a/drivers/media/i2c/atomisp/ov2680.h
+++ b/drivers/media/i2c/atomisp/ov2680.h
@@ -840,66 +840,6 @@ struct ov2680_control {
 
 	static struct ov2680_resolution ov2680_res_preview[] = {
 	{
-		.desc = "ov2680_720x592_30fps",
-		.width = 720,
-		.height = 592,
-		.fps = 30,
-		.pix_clk_freq = 33,
-		.used = 0,
-		.pixels_per_line = 1706,//1708,
-		.lines_per_frame = 644,
-		.bin_factor_x = 1,
-		.bin_factor_y = 1,
-		.bin_mode = 1,
-		.skip_frames = 3,
-		.regs = ov2680_720x592_30fps,
-	},
-	{
-		.desc = "ov2680_800x600_30fps",
-		.width = 800,
-		.height = 600,
-		.fps = 30,
-		.pix_clk_freq = 33,
-		.used = 0,
-		.pixels_per_line = 1706,//1712,
-		.lines_per_frame = 644,
-		.bin_factor_x = 1,
-		.bin_factor_y = 1,
-		.bin_mode = 1,
-		.skip_frames = 3,
-		.regs = ov2680_800x600_30fps,
-	},
-   	{
-		.desc = "ov2680_1616x916_30fps",
-		.width = 1616,
-		.height = 916,
-		.fps = 30,
-		.pix_clk_freq = 66,
-		.used = 0,
-		.pixels_per_line = 1698,//1704,
-		.lines_per_frame = 1294,
-		.bin_factor_x = 0,
-		.bin_factor_y = 0,
-		.bin_mode = 0,
-		.skip_frames = 3,
-		.regs = ov2680_1616x916_30fps,
-	},
-	{
-		.desc = "ov2680_1616x1082_30fps",
-		.width = 1616,
-		.height = 1082,
-		.pix_clk_freq = 66,
-		.fps = 30,
-		.used = 0,
-		.pixels_per_line = 1698,//1704,
-		.lines_per_frame = 1294,
-		.bin_factor_x = 0,
-		.bin_factor_y = 0,
-		.bin_mode = 0,
-		.skip_frames = 3,
-		.regs = ov2680_1616x1082_30fps,
-	},
-	{
 		.desc = "ov2680_1616x1216_30fps",
  	  	.width = 1616,
 		.height = 1216,
@@ -914,10 +854,6 @@ struct ov2680_control {
 		.skip_frames = 3,
 		.regs = ov2680_1616x1216_30fps,
 	},
-};
-#define N_RES_PREVIEW (ARRAY_SIZE(ov2680_res_preview))
-
-static struct ov2680_resolution ov2680_res_still[] = {
    	{
 		.desc = "ov2680_1616x916_30fps",
 		.width = 1616,
@@ -933,10 +869,14 @@ static struct ov2680_resolution ov2680_res_still[] = {
 		.skip_frames = 3,
 		.regs = ov2680_1616x916_30fps,
 	},
+};
+#define N_RES_PREVIEW (ARRAY_SIZE(ov2680_res_preview))
+
+static struct ov2680_resolution ov2680_res_still[] = {
 	{
-		.desc = "ov2680_1616x1082_30fps",
+		.desc = "ov2680_1616x1216_30fps",
 		.width = 1616,
-		.height = 1082,
+		.height = 1216,
 		.pix_clk_freq = 66,
 		.fps = 30,
 		.used = 0,
@@ -946,14 +886,14 @@ static struct ov2680_resolution ov2680_res_still[] = {
 		.bin_factor_y = 0,
 		.bin_mode = 0,
 		.skip_frames = 3,
-		.regs = ov2680_1616x1082_30fps,
-	 },
-	{
-		.desc = "ov2680_1616x1216_30fps",
+		.regs = ov2680_1616x1216_30fps,
+	},
+   	{
+		.desc = "ov2680_1616x916_30fps",
 		.width = 1616,
-		.height = 1216,
-		.pix_clk_freq = 66,
+		.height = 916,
 		.fps = 30,
+		.pix_clk_freq = 66,
 		.used = 0,
 		.pixels_per_line = 1698,//1704,
 		.lines_per_frame = 1294,
@@ -961,80 +901,18 @@ static struct ov2680_resolution ov2680_res_still[] = {
 		.bin_factor_y = 0,
 		.bin_mode = 0,
 		.skip_frames = 3,
-		.regs = ov2680_1616x1216_30fps,
+		.regs = ov2680_1616x916_30fps,
 	},
 };
 #define N_RES_STILL (ARRAY_SIZE(ov2680_res_still))
 
 static struct ov2680_resolution ov2680_res_video[] = {
-#if 0
-	{
-		.desc = "ov2680_QCIF_30fps",
-		.width = 192,
-		.height = 160,
-		.fps = 30,
-		.pix_clk_freq = 33,
-		.used = 0,
-		.pixels_per_line = 1706,//1712,
-		.lines_per_frame = 644,
-		.bin_factor_x = 1,
-		.bin_factor_y = 1,
-		.bin_mode = 1,
-		.skip_frames = 3,
-		.regs = ov2680_QCIF_30fps,
-	},
 	{
-		.desc = "ov2680_QVGA_30fps",
-		.width = 336,
-		.height = 256,
-		.fps = 30,
-		.pix_clk_freq = 33,
-		.used = 0,
-		.pixels_per_line = 1706,//1712,
-		.lines_per_frame = 644,
-		.bin_factor_x = 1,
-		.bin_factor_y = 1,
-		.bin_mode = 1,
-		.skip_frames = 3,
-		.regs = ov2680_QVGA_30fps,
-	},
-	{
-		.desc = "ov2680_CIF_30fps",
-		.width = 368,
-		.height = 304,
-		.fps = 30,
-		.pix_clk_freq = 33,
-		.used = 0,
-		.pixels_per_line = 1706,//1712,
-		.lines_per_frame = 644,
-		.bin_factor_x = 1,
-		.bin_factor_y = 1,
-		.bin_mode = 1,
-		.skip_frames = 3,
-		.regs = ov2680_CIF_30fps,
-	},
-#endif
-	{
-		.desc = "ov2680_720x592_30fps",
-		.width = 720,
-		.height = 592,
-		.fps = 30,
-		.pix_clk_freq = 33,
-		.used = 0,
-		.pixels_per_line = 1706,//1712,
-		.lines_per_frame = 644,
-		.bin_factor_x = 1,
-		.bin_factor_y = 1,
-		.bin_mode = 1,
-		.skip_frames = 3,
-		.regs = ov2680_720x592_30fps,
-	},
-	{
-		.desc = "ov2680_480p_30fps",
+		.desc = "ov2680_1616x1216_30fps",
 		.width = 1616,
-		.height = 1082,
-		.fps = 30,
+		.height = 1216,
 		.pix_clk_freq = 66,
+		.fps = 30,
 		.used = 0,
 		.pixels_per_line = 1698,//1704,
 		.lines_per_frame = 1294,
@@ -1042,7 +920,7 @@ static struct ov2680_resolution ov2680_res_video[] = {
 		.bin_factor_y = 0,
 		.bin_mode = 0,
 		.skip_frames = 3,
-		.regs = ov2680_1616x1082_30fps,
+		.regs = ov2680_1616x1216_30fps,
 	},
 	{
 		.desc = "ov2680_720p_30fps",
diff --git a/drivers/media/i2c/atomisp/ov5648.h b/drivers/media/i2c/atomisp/ov5648.h
index 24eb543..0f5dd0a 100644
--- a/drivers/media/i2c/atomisp/ov5648.h
+++ b/drivers/media/i2c/atomisp/ov5648.h
@@ -670,6 +670,21 @@ struct ov5648_resolution ov5648_res_preview[] = {
 	 .skip_frames = 3,
 	 .regs = ov5648_5M_15fps_2lanes,
 	 },
+	{
+	 .desc = "ov5648_720P_30fps",
+	 .width = 1296,
+	 .height = 736,
+	 .fps = 30,
+	 .pix_clk_freq = 84,
+	 .used = 0,
+	 .pixels_per_line = 2397,
+	 .lines_per_frame = 1186,
+	 .bin_factor_x = 2,
+	 .bin_factor_y = 2,
+	 .bin_mode = 1,
+	 .skip_frames = 3,
+	 .regs = ov5648_720p_30fps_2lanes,
+	 },
 };
 
 #define N_RES_PREVIEW (ARRAY_SIZE(ov5648_res_preview))
@@ -690,26 +705,6 @@ struct ov5648_resolution ov5648_res_still[] = {
 	 .skip_frames = 3,
 	 .regs = ov5648_5M_15fps_2lanes,
 	 },
-};
-
-#define N_RES_STILL (ARRAY_SIZE(ov5648_res_still))
-
-struct ov5648_resolution ov5648_res_video[] = {
-	{
-	 .desc = "ov5648_1080P_30fps",
-	 .width = 1940,
-	 .height = 1096,
-	 .fps = 30,
-	 .pix_clk_freq = 84,
-	 .used = 0,
-	 .pixels_per_line = 2500,
-	 .lines_per_frame = 1120,
-	 .bin_factor_x = 1,
-	 .bin_factor_y = 1,
-	 .bin_mode = 0,
-	 .skip_frames = 3,
-	 .regs = ov5648_1080p_30fps_2lanes,
-	},
 	{
 	 .desc = "ov5648_720P_30fps",
 	 .width = 1296,
@@ -725,10 +720,15 @@ struct ov5648_resolution ov5648_res_video[] = {
 	 .skip_frames = 3,
 	 .regs = ov5648_720p_30fps_2lanes,
 	 },
+};
+
+#define N_RES_STILL (ARRAY_SIZE(ov5648_res_still))
+
+struct ov5648_resolution ov5648_res_video[] = {
 	{
-	 .desc = "ov5648_480P_30fps",
+	 .desc = "ov5648_720P_30fps",
 	 .width = 1296,
-	 .height = 864,
+	 .height = 736,
 	 .fps = 30,
 	 .pix_clk_freq = 84,
 	 .used = 0,
@@ -738,7 +738,7 @@ struct ov5648_resolution ov5648_res_video[] = {
 	 .bin_factor_y = 2,
 	 .bin_mode = 1,
 	 .skip_frames = 3,
-	 .regs = ov5648_1296x864_30fps_2lanes,
+	 .regs = ov5648_720p_30fps_2lanes,
 	 },
 };
 
-- 
2.1.0

