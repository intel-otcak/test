From 967dfbc1e9e57e9d13f531a89b1ac49e6628b081 Mon Sep 17 00:00:00 2001
From: Yang Fan F <fan.f.yang@intel.com>
Date: Wed, 29 Apr 2015 02:07:31 +0800
Subject: [PATCH 08/28] Revert "atomisp: Fix memtrack support"

This reverts commit 9431bc43e3c30e73b759619c881730a200f4b918.

Change-Id: Ic2c4e161668bf5feb801ddf6fdf1a1f80c6c3153
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-9279
Reviewed-on: https://android.intel.com:443/440494
---
 .../media/pci/atomisp2/atomisp_driver/hmm/hmm.c       | 19 ++++++++-----------
 1 file changed, 8 insertions(+), 11 deletions(-)

diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/hmm/hmm.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/hmm/hmm.c
index f61dd6c..7519acf 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/hmm/hmm.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/hmm/hmm.c
@@ -59,7 +59,7 @@ const char *hmm_bo_type_strings[HMM_BO_LAST] = {
 };
 
 static ssize_t bo_show(struct device *dev, struct device_attribute *attr,
-			char *buf, struct list_head *bo_list, bool active)
+			char *buf, struct list_head *bo_list)
 {
 	ssize_t ret = 0;
 	struct hmm_buffer_object *bo;
@@ -78,17 +78,14 @@ static ssize_t bo_show(struct device *dev, struct device_attribute *attr,
 
 	spin_lock_irqsave(&bo_device.list_lock, flags);
 	list_for_each_entry(bo, bo_list, list) {
-		if ((active && !(bo->status & HMM_BO_FREE)) ||
-			(!active && (bo->status & HMM_BO_FREE))) {
-			ret = scnprintf(buf + index1, PAGE_SIZE - index1,
+		ret = scnprintf(buf + index1, PAGE_SIZE - index1,
 				"%s %d\n",
 				hmm_bo_type_strings[bo->type], bo->pgnr);
 
-			total[bo->type] += bo->pgnr;
-			count[bo->type]++;
-			if (ret > 0)
-				index1 += ret;
-		}
+		total[bo->type] += bo->pgnr;
+		count[bo->type]++;
+		if (ret > 0)
+			index1 += ret;
 	}
 	spin_unlock_irqrestore(&bo_device.list_lock, flags);
 
@@ -111,14 +108,14 @@ static ssize_t active_bo_show(struct device *dev,
 		struct device_attribute *attr,
 		char *buf)
 {
-	return bo_show(dev, attr, buf, &bo_device.entire_bo_list, true);
+	return bo_show(dev, attr, buf, &bo_device.active_bo_list);
 }
 
 static ssize_t free_bo_show(struct device *dev,
 		struct device_attribute *attr,
 		char *buf)
 {
-	return bo_show(dev, attr, buf, &bo_device.entire_bo_list, false);
+	return bo_show(dev, attr, buf, &bo_device.free_bo_list);
 }
 
 static ssize_t reserved_pool_show(struct device *dev,
-- 
1.9.1

