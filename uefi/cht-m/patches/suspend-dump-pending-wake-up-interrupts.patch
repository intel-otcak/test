From ca5a71a7cfea7bb24072706fe08e3fd5d0b6fee3 Mon Sep 17 00:00:00 2001
From: Zhang Yanmin <yanmin.zhang@intel.com>
Date: Thu, 3 Mar 2016 13:57:34 +0800
Subject: [PATCH 5/7] suspend: dump pending wake-up interrupts

Sometimes, system might be woken up frequently. We need a
method to know who wakes up system.

The patch dumps pending wake-up interrupts when system be
woken up from deep sleep.

Change-Id: I87b146025cd552ae209f17d0e9c0d9c0d95f15bb
Signed-off-by: Zhang Yanmin <yanmin.zhang@intel.com>
Signed-off-by: Li Youx <youx.li@intel.com>
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-26841
Reviewed-on: https://android.intel.com:443/477223
---
 drivers/base/power/main.c |  1 +
 include/linux/interrupt.h |  2 ++
 kernel/irq/pm.c           | 21 +++++++++++++++++++++
 3 files changed, 24 insertions(+)

diff --git a/drivers/base/power/main.c b/drivers/base/power/main.c
index fe2c656..3612658 100644
--- a/drivers/base/power/main.c
+++ b/drivers/base/power/main.c
@@ -736,6 +736,7 @@ static void dpm_resume_early(pm_message_t state)
 void dpm_resume_start(pm_message_t state)
 {
 	dpm_resume_noirq(state);
+	dump_wakeup_irqs();
 	dpm_resume_early(state);
 }
 EXPORT_SYMBOL_GPL(dpm_resume_start);
diff --git a/include/linux/interrupt.h b/include/linux/interrupt.h
index 203c43d..284e9cd 100644
--- a/include/linux/interrupt.h
+++ b/include/linux/interrupt.h
@@ -194,8 +194,10 @@ extern void suspend_device_irqs(void);
 extern void resume_device_irqs(void);
 #ifdef CONFIG_PM_SLEEP
 extern int check_wakeup_irqs(void);
+extern void dump_wakeup_irqs(void);
 #else
 static inline int check_wakeup_irqs(void) { return 0; }
+static inline void dump_wakeup_irqs(void) { return; }
 #endif
 
 #if defined(CONFIG_SMP)
diff --git a/kernel/irq/pm.c b/kernel/irq/pm.c
index da5f2ff..14dc364 100644
--- a/kernel/irq/pm.c
+++ b/kernel/irq/pm.c
@@ -95,6 +95,27 @@ void resume_device_irqs(void)
 EXPORT_SYMBOL_GPL(resume_device_irqs);
 
 /**
+ * dump_wakeup_irqs - dump info if any wake-up interrupts are pending
+ */
+void dump_wakeup_irqs(void)
+{
+	struct irq_desc *desc;
+	int irq;
+
+	for_each_irq_desc(irq, desc) {
+		if (irqd_is_wakeup_set(&desc->irq_data)) {
+			if (desc->istate & IRQS_PENDING) {
+				pr_info("Wakeup IRQ %d %s pending\n",
+					irq,
+					desc->action && desc->action->name ?
+					desc->action->name : "");
+			}
+			continue;
+		}
+	}
+}
+
+/**
  * check_wakeup_irqs - check if any wake-up interrupts are pending
  */
 int check_wakeup_irqs(void)
-- 
1.9.1

