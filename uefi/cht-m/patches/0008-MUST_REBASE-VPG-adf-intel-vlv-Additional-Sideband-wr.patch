From 3c84cc399febf32c67832d224a3372451938192a Mon Sep 17 00:00:00 2001
Message-Id: <3c84cc399febf32c67832d224a3372451938192a.1424979244.git.feitong.yi@intel.com>
In-Reply-To: <d8466aca83b11ab8b0870e775536306782d73e9f.1424979244.git.feitong.yi@intel.com>
References: <d8466aca83b11ab8b0870e775536306782d73e9f.1424979244.git.feitong.yi@intel.com>
From: Ramalingam C <ramalingam.c@intel.com>
Date: Wed, 18 Feb 2015 13:36:52 +0530
Subject: [PATCH 08/28] MUST_REBASE [VPG]: adf/intel/vlv: Additional Sideband
 wrappers in vlv_dc_config.h

Inline wrapper functions for sideband read and write with out mutex
protection is added in vlv_dc_config.h. And also another wrapper
function to acquire and release the dpio mutex is added.

MUST_REBASE: Since Google ADF framework is not in upstream and also
we cannot have two display drivers, other one being i915, we need to
work on i915 and ADF convergence path before it can be upstreamed.

Issue: GMINL-5610
Change-Id: Iec00d777dfe832ebe97dbf9a05cd3ccfa7b1dded
Signed-off-by: Ramalingam C <ramalingam.c@intel.com>
---
 .../adf/intel/include/core/vlv/vlv_dc_config.h     |   19 +++++++++++++++++++
 1 file changed, 19 insertions(+)

diff --git a/drivers/video/adf/intel/include/core/vlv/vlv_dc_config.h b/drivers/video/adf/intel/include/core/vlv/vlv_dc_config.h
index 33e5b84..8163f91 100644
--- a/drivers/video/adf/intel/include/core/vlv/vlv_dc_config.h
+++ b/drivers/video/adf/intel/include/core/vlv/vlv_dc_config.h
@@ -123,6 +123,11 @@ static inline void vlv_gps_core_write(u32 reg, u32 val)
 					IOSF_PORT_GPS_CORE, reg, &val);
 }
 
+static inline void vlv_cck_mutex_acquire(bool acquire)
+{
+	intel_adf_dpio_mutex(acquire);
+}
+
 static inline u32 vlv_cck_read(u32 reg)
 {
 	u32 val;
@@ -131,12 +136,26 @@ static inline u32 vlv_cck_read(u32 reg)
 	return val;
 }
 
+static inline u32 vlv_cck_read_no_lock(u32 reg)
+{
+	u32 val;
+	intel_adf_pci_sideband_rw_no_lock(INTEL_SIDEBAND_REG_READ,
+						IOSF_PORT_CCK, reg, &val);
+	return val;
+}
+
 static inline void vlv_cck_write(u32 reg, u32 val)
 {
 	intel_adf_pci_sideband_rw(INTEL_SIDEBAND_REG_WRITE, IOSF_PORT_CCK,
 					reg, &val);
 }
 
+static inline void vlv_cck_write_no_lock(u32 reg, u32 val)
+{
+	intel_adf_pci_sideband_rw_no_lock(INTEL_SIDEBAND_REG_WRITE,
+						IOSF_PORT_CCK, reg, &val);
+}
+
 static inline u32 vlv_punit_read(u32 reg)
 {
 	u32 val;
-- 
1.7.9.5

