From 2489763f107d52e8e9df276a5b18d0b7203388a8 Mon Sep 17 00:00:00 2001
Message-Id: <2489763f107d52e8e9df276a5b18d0b7203388a8.1432858002.git.chang-joon.lee@intel.com>
In-Reply-To: <944dfa31d45b9ee101932dfa029ec3452a83cb30.1432858002.git.chang-joon.lee@intel.com>
References: <944dfa31d45b9ee101932dfa029ec3452a83cb30.1432858002.git.chang-joon.lee@intel.com>
From: Deepak S <deepak.s@intel.com>
Date: Fri, 20 Mar 2015 20:51:34 +0530
Subject: [PATCH 5/7] FOR_UPSTREAM [VPG]: drm/i915: Avoid unneccessary wakeup
 in lrc irq handler.

While processing GT interrupts we read ELSP context regreisters which
wakes up power wells. This patch avoid ELSP register reads to get
status_id if not needed.

Issue: GMINL-7573
Change-Id: I22aa32eca3f95c0bcef6f81fb2de18969e3d7cdf
Signed-off-by: Deepak S <deepak.s@intel.com>
---
 drivers/gpu/drm/i915/intel_lrc.c |   16 +++++++++-------
 1 file changed, 9 insertions(+), 7 deletions(-)

Index: b/drivers/gpu/drm/i915/intel_lrc.c
===================================================================
--- a/drivers/gpu/drm/i915/intel_lrc.c	2016-04-19 17:52:57.901367726 +0800
+++ b/drivers/gpu/drm/i915/intel_lrc.c	2016-04-19 17:59:01.072280842 +0800
@@ -981,9 +981,11 @@
 }
 
 static bool execlists_check_remove_request(struct intel_engine_cs *ring,
-					   u32 request_id)
+						u8 read_pointer)
 {
 	struct intel_ctx_submit_request *head_req;
+	struct drm_i915_private *dev_priv = ring->dev->dev_private;
+	u32 request_id;
 
 	assert_spin_locked(&ring->execlist_lock);
 
@@ -994,6 +996,8 @@
 	if (head_req != NULL) {
 		struct drm_i915_gem_object *ctx_obj =
 				head_req->ctx->engine[ring->id].state;
+		request_id = I915_READ(RING_CONTEXT_STATUS_BUF(ring) +
+				       (read_pointer % 6) * 8 + 4);
 		if (intel_execlists_ctx_id(ctx_obj) == request_id) {
 			WARN(head_req->elsp_submitted == 0,
 			     "Never submitted head request\n");
@@ -1074,7 +1078,6 @@
 	u8 read_pointer;
 	u8 write_pointer;
 	u32 status;
-	u32 status_id;
 	u32 submit_contexts = 0;
 
 	if (do_lock)
@@ -1092,8 +1095,6 @@
 
 		status = I915_READ(RING_CONTEXT_STATUS_BUF(ring) +
 				(read_pointer % 6) * 8);
-		status_id = I915_READ(RING_CONTEXT_STATUS_BUF(ring) +
-				(read_pointer % 6) * 8 + 4);
 
 		if (status & GEN8_CTX_STATUS_PREEMPTED) {
 			if (status & GEN8_CTX_STATUS_LITE_RESTORE) {
@@ -1114,19 +1115,20 @@
 				     */
 				    goto exit;
 				}
-				if (execlists_check_remove_request(ring, status_id))
+				if (execlists_check_remove_request(ring,
+								read_pointer))
 					WARN(1, "Lite Restored request removed from queue\n");
 			} else
 				WARN(1, "Preemption without Lite Restore\n");
 		}
 
 		 if ((status & GEN8_CTX_STATUS_ACTIVE_IDLE) ||
-		     (status & GEN8_CTX_STATUS_ELEMENT_SWITCH)) {
+			(status & GEN8_CTX_STATUS_ELEMENT_SWITCH)) {
 
 			if (fake_lost_ctx_event_irq(dev_priv, ring))
 			    goto exit;
 
-			if (execlists_check_remove_request(ring, status_id))
+			if (execlists_check_remove_request(ring, read_pointer))
 				submit_contexts++;
 		}
 	}
