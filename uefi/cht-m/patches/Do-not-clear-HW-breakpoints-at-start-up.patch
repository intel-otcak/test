From 1006b5c92683b81edee1ae162097bbfb4cb90b0f Mon Sep 17 00:00:00 2001
From: Laurent JOSSE <laurent.josse@intel.com>
Date: Thu, 2 Apr 2015 10:11:56 +0200
Subject: [PATCH] Do not clear HW breakpoints at start-up

Add an early kernel param in order to skip the clearing of debug registers.
These registers can be used by an external HW debugger, and be initialized
before Linux boot in order to stop early.

Change-Id: I94fee47699b0aa021b2aad59444d2c088c9a33fd
Tracked-On: https://jira01.devtools.intel.com/browse/AKP-1323
Signed-off-by: Laurent JOSSE <laurent.josse@intel.com>
---
 Documentation/kernel-parameters.txt |  4 ++++
 arch/x86/kernel/cpu/common.c        | 14 ++++++++++++++
 2 files changed, 18 insertions(+)

diff --git a/Documentation/kernel-parameters.txt b/Documentation/kernel-parameters.txt
index 5d91ba1..eb9cfef 100644
--- a/Documentation/kernel-parameters.txt
+++ b/Documentation/kernel-parameters.txt
@@ -1140,6 +1140,10 @@ bytes respectively. Such letter suffixes can also be entirely omitted.
 			       If specified, z/VM IUCV HVC accepts connections
 			       from listed z/VM user IDs only.
 
+	hw_debugger [HW]
+			Tells the kernel to not clear debug registers at start-up.
+			This is useful when using JTAG debugger.
+
 	hwthread_map=	[METAG] Comma-separated list of Linux cpu id to
 			        hardware thread id mappings.
 				Format: <cpu>:<hwthread>
diff --git a/arch/x86/kernel/cpu/common.c b/arch/x86/kernel/cpu/common.c
index e6bddd5..1fc30e2 100644
--- a/arch/x86/kernel/cpu/common.c
+++ b/arch/x86/kernel/cpu/common.c
@@ -1192,6 +1192,18 @@ DEFINE_PER_CPU_ALIGNED(struct stack_canary, stack_canary);
 
 #endif	/* CONFIG_X86_64 */
 
+static int __read_mostly hw_debugger;
+
+static __init int set_hw_debugger(char *arg)
+{
+#ifdef CONFIG_KGDB
+	pr_warn("KGDB and external debugger use the same ressources !\n");
+#endif    /* CONFIG_KGDB */
+	hw_debugger = 1;
+	return 0;
+}
+early_param("hw_debugger", set_hw_debugger);
+
 /*
  * Clear all 6 debug registers:
  */
@@ -1199,6 +1211,8 @@ static void clear_all_debug_regs(void)
 {
 	int i;
 
+	if (hw_debugger)
+		return;
 	for (i = 0; i < 8; i++) {
 		/* Ignore db4, db5 */
 		if ((i == 4) || (i == 5))
-- 
1.9.1

