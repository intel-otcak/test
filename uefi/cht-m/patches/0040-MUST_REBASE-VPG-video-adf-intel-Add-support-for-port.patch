From a69c4748580d0a46ac457881599a720d933c235b Mon Sep 17 00:00:00 2001
Message-Id: <a69c4748580d0a46ac457881599a720d933c235b.1423872525.git.feitong.yi@intel.com>
In-Reply-To: <3062c7e6b919c393846ff0e13558e7f648b352ca.1423872525.git.feitong.yi@intel.com>
References: <3062c7e6b919c393846ff0e13558e7f648b352ca.1423872525.git.feitong.yi@intel.com>
From: Gaurav K Singh <gaurav.k.singh@intel.com>
Date: Tue, 27 Jan 2015 13:28:01 +0530
Subject: [PATCH 40/95] MUST_REBASE [VPG]: video/adf/intel: Add support for
 port enable/disable for dual link

For Dual Link MIPI Panels, both Port A and Port C should be enabled
during the MIPI encoder enabling sequence. Similarly, during the
disabling sequence, both ports needs to be disabled.

MUST_REBASE: Since Google ADF framework is not in upstream and also
we cannot have two display drivers, other one being i915, we need to
work on i915 and ADF convergence path before it can be upstreamed.

For: GMINL-5276
Change-Id: I9c16928695235bc011cf6c0ceabfad65ca02b685
Signed-off-by: Gaurav K Singh <gaurav.k.singh@intel.com>
---
 drivers/video/adf/intel/core/vlv/vlv_dsi_port.c    |    7 +---
 drivers/video/adf/intel/core/vlv/vlv_pipeline.c    |   43 ++++++++++++++++----
 .../video/adf/intel/include/core/vlv/vlv_dc_regs.h |    1 +
 3 files changed, 36 insertions(+), 15 deletions(-)

diff --git a/drivers/video/adf/intel/core/vlv/vlv_dsi_port.c b/drivers/video/adf/intel/core/vlv/vlv_dsi_port.c
index 40321cb..491e0344 100644
--- a/drivers/video/adf/intel/core/vlv/vlv_dsi_port.c
+++ b/drivers/video/adf/intel/core/vlv/vlv_dsi_port.c
@@ -354,16 +354,11 @@ u32 vlv_dsi_port_pre_enable(struct vlv_dsi_port *port,
 	return 0;
 }
 
-u32 vlv_dsi_port_enable(struct vlv_dsi_port *port, u32 port_bits)
+u32 vlv_dsi_port_enable(struct vlv_dsi_port *port, u32 val)
 {
-	u32 val;
 	if (vlv_dsi_port_is_vid_mode(port)) {
 		vlv_dsi_port_wait_for_fifo_empty(port);
 
-		/* assert ip_tg_enable signal */
-		val = REG_READ(port->offset) &
-				~LANE_CONFIGURATION_MASK;
-		val |= port_bits;
 		REG_WRITE(port->offset, val | DPI_ENABLE);
 		REG_POSTING_READ(port->offset);
 	}
diff --git a/drivers/video/adf/intel/core/vlv/vlv_pipeline.c b/drivers/video/adf/intel/core/vlv/vlv_pipeline.c
index e52e282..0ba0bfc 100644
--- a/drivers/video/adf/intel/core/vlv/vlv_pipeline.c
+++ b/drivers/video/adf/intel/core/vlv/vlv_pipeline.c
@@ -143,15 +143,33 @@ u32 vlv_port_enable(struct intel_pipeline *pipeline,
 	struct vlv_pipeline *disp = to_vlv_pipeline(pipeline);
 	struct dsi_config *config = pipeline->params.dsi.dsi_config;
 	struct dsi_context *intel_dsi = &config->ctx;
-	struct vlv_pll *pll = &disp->pll;
-	struct vlv_dsi_port *dsi_port = &disp->port.dsi_port[pll->port_id];
+	struct vlv_dsi_port *dsi_port = NULL;
+	enum port port;
+	enum pipe pipe = disp->gen.dsi.config.pipe;
+	u32 temp;
 
 	if (disp->type == INTEL_PIPE_DSI) {
-		/* DSI PORT */
-		ret = vlv_dsi_port_enable(dsi_port, intel_dsi->port_bits);
+		for_each_dsi_port(port, intel_dsi->ports) {
+			dsi_port = &disp->port.dsi_port[port];
+
+			temp = REG_READ(dsi_port->offset);
+			temp &= ~LANE_CONFIGURATION_MASK;
+			temp &= ~DUAL_LINK_MODE_MASK;
+
+			if (intel_dsi->ports ==
+					((1 << PORT_A) | (1 << PORT_C))) {
+				temp |= (intel_dsi->dual_link - 1)
+						<< DUAL_LINK_MODE_SHIFT;
+				temp |= pipe ? LANE_CONFIGURATION_DUAL_LINK_B :
+						LANE_CONFIGURATION_DUAL_LINK_A;
+			}
+
+			/* DSI PORT */
+			ret = vlv_dsi_port_enable(dsi_port, temp);
+		}
+
 		if (ret)
 			pr_err("ADF: %s Enable DSI port failed\n", __func__);
-		/* enable will be done in next call for dsi */
 	} else if (disp->type == INTEL_PIPE_HDMI) {
 		/* HDMI pre port enable */
 		chv_dpio_pre_port_enable(pipeline);
@@ -324,14 +342,21 @@ static inline u32 vlv_port_disable(struct intel_pipeline *pipeline)
 	struct vlv_pipeline *disp = to_vlv_pipeline(pipeline);
 	struct vlv_dsi_port *dsi_port = NULL;
 	struct vlv_hdmi_port *hdmi_port = NULL;
-	struct vlv_pll *pll = &disp->pll;
+	struct dsi_pipe *dsi_pipe = NULL;
+	struct dsi_context *dsi_ctx = NULL;
+	enum port port;
 	u32 err = 0;
 
 	switch (disp->type) {
 	case INTEL_PIPE_DSI:
-		dsi_port = &disp->port.dsi_port[pll->port_id];
-		err = vlv_dsi_port_disable(dsi_port,
-			pipeline->params.dsi.dsi_config);
+		dsi_pipe = &disp->gen.dsi;
+		dsi_ctx = &dsi_pipe->config.ctx;
+		for_each_dsi_port(port, dsi_ctx->ports) {
+			dsi_port = &disp->port.dsi_port[port];
+			err = vlv_dsi_port_disable(dsi_port,
+					pipeline->params.dsi.dsi_config);
+		}
+
 		/*
 		 * pll is disabled in the next call to
 		 * vlv_post_pipeline_off
diff --git a/drivers/video/adf/intel/include/core/vlv/vlv_dc_regs.h b/drivers/video/adf/intel/include/core/vlv/vlv_dc_regs.h
index aa4c557..b0ac184 100644
--- a/drivers/video/adf/intel/include/core/vlv/vlv_dc_regs.h
+++ b/drivers/video/adf/intel/include/core/vlv/vlv_dc_regs.h
@@ -5785,6 +5785,7 @@ extern int chv_cursor_offsets[];
 #define  DPI_ENABLE					(1 << 31) /* A + B */
 #define  MIPIA_MIPI4DPHY_DELAY_COUNT_SHIFT		27
 #define  MIPIA_MIPI4DPHY_DELAY_COUNT_MASK		(0xf << 27)
+#define  DUAL_LINK_MODE_SHIFT				26
 #define  DUAL_LINK_MODE_MASK				(1 << 26)
 #define  DUAL_LINK_MODE_FRONT_BACK			(0 << 26)
 #define  DUAL_LINK_MODE_PIXEL_ALTERNATIVE		(1 << 26)
-- 
1.7.9.5

