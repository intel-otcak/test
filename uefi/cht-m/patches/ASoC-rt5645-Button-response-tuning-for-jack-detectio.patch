From dc3b8a954a76b32bdfe3af4845692d099f57adb4 Mon Sep 17 00:00:00 2001
From: Francisco Mendez <francisco.mendez@intel.com>
Date: Thu, 10 Mar 2016 16:24:39 -0600
Subject: [PATCH 6/6] ASoC: rt5645: Button response tuning for jack detection

Headset buttons sometimes fails because there is a long sleep
between the codec interruption and the machine driver response
that forces the user to press the button for a long time before
it can catch the event.

Sleep has been removed and JD_1 has been changed to mode 2, only one
port is used for jack detection.

Change-Id: I5152c770a760957cf13794afba4e60938263a1da
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-26153
Depends-On: https://android.intel.com/#/c/477433
Signed-off-by: Francisco Mendez <francisco.mendez@intel.com>
Reviewed-on: https://android.intel.com:443/480348
Reviewed-on: https://android.intel.com:443/490260
---
 sound/soc/codecs/rt5645.c                  | 3 ++-
 sound/soc/codecs/rt5645.h                  | 6 ++++++
 sound/soc/intel/board/cht_cr_dpcm_rt5645.c | 5 ++++-
 3 files changed, 12 insertions(+), 2 deletions(-)

diff --git a/sound/soc/codecs/rt5645.c b/sound/soc/codecs/rt5645.c
index 0e4cbbd..4806e0a 100644
--- a/sound/soc/codecs/rt5645.c
+++ b/sound/soc/codecs/rt5645.c
@@ -58,7 +58,7 @@ static struct rt5645_init_reg init_list[] = {
 	{ RT5645_IL_CMD3	, 0x0009 },
 	{ RT5645_PRIV_INDEX	, 0x003d },
 	{ RT5645_PRIV_DATA	, 0x3600 },
-	{ RT5645_A_JD_CTRL1	, 0x0202 },/* for combo jack 1.8v */
+	{ RT5645_A_JD_CTRL1	, 0x0201 }, /* mode 2, one port used in JD*/
 	{ RT5645_GEN_CTRL2	, 0x0028 },
 
 	/* playback */
@@ -619,6 +619,7 @@ int rt5645_button_detect(struct snd_soc_codec *codec)
 			pr_debug("%s(): button release\n", __func__);
 			btn_type = 0;
 	}
+	snd_soc_update_bits(codec, RT5645_INT_IRQ_ST, 0x4, 0x0);
 
 	return btn_type;
 }
diff --git a/sound/soc/codecs/rt5645.h b/sound/soc/codecs/rt5645.h
index 2fdbc6f..aff964b 100644
--- a/sound/soc/codecs/rt5645.h
+++ b/sound/soc/codecs/rt5645.h
@@ -2088,8 +2088,14 @@
 #define RT5645_ZCD_HP_EN			(0x1 << 15)
 
 /* Inline Command Control 1 (0xdb) */
+#define RT5645_STA_ONE_UP_BTN			(0x1 << 15)
+#define RT5645_STA_DOUBLE_UP_BTN		(0x1 << 14)
 #define RT5645_STA_HOLD_UP_BTN			(0x1 << 13)
+#define RT5645_STA_ONE_CENTER_BTN		(0x1 << 12)
+#define RT5645_STA_DOUBLE_CENTER_BTN		(0x1 << 11)
 #define RT5645_STA_HOLD_CENTER_BTN		(0x1 << 10)
+#define RT5645_STA_ONE_DOWN_BTN			(0x1 << 9)
+#define RT5645_STA_DOUBLE_DOWN_BTN		(0x1 << 8)
 #define RT5645_STA_HOLD_DOWN_BTN		(0x1 << 7)
 #define RT5645_INLINE_EN			(0x1 << 5)
 
diff --git a/sound/soc/intel/board/cht_cr_dpcm_rt5645.c b/sound/soc/intel/board/cht_cr_dpcm_rt5645.c
index 7362fe2..e8095e7 100644
--- a/sound/soc/intel/board/cht_cr_dpcm_rt5645.c
+++ b/sound/soc/intel/board/cht_cr_dpcm_rt5645.c
@@ -44,7 +44,7 @@
 #define CHT_INTR_DEBOUNCE               0
 #define CHT_HS_INSERT_DET_DELAY         300
 #define CHT_HS_REMOVE_DET_DELAY         400
-#define CHT_BUTTON_DET_DELAY            100
+#define CHT_BUTTON_DET_DELAY            0
 #define CHT_HS_DET_POLL_INTRVL          100
 #define CHT_BUTTON_EN_DELAY             1500
 
@@ -363,16 +363,19 @@ static void cht_check_hs_button_status(struct work_struct *work)
 		status = rt5645_button_detect(codec);
 		switch (status) {
 		case RT5645_STA_HOLD_UP_BTN:
+		case RT5645_STA_ONE_UP_BTN:
 			/* Up */
 			jack_type = SND_JACK_HEADSET |
 				SND_JACK_BTN_1;
 			break;
 		case RT5645_STA_HOLD_CENTER_BTN:
+		case RT5645_STA_ONE_CENTER_BTN:
 			/* Center */
 			jack_type = SND_JACK_HEADSET |
 				SND_JACK_BTN_0;
 			break;
 		case RT5645_STA_HOLD_DOWN_BTN:
+		case RT5645_STA_ONE_DOWN_BTN:
 			/* Down */
 			jack_type = SND_JACK_HEADSET |
 				SND_JACK_BTN_2;
-- 
1.9.1

