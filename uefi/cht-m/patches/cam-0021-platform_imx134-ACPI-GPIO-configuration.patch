From f603a617dec2ded13edf8cff920d8adb7ef243cc Mon Sep 17 00:00:00 2001
From: Andy Ross <andrew.j.ross@intel.com>
Date: Mon, 12 May 2014 16:14:20 -0700
Subject: [PATCH 021/117] platform_imx134: ACPI GPIO configuration

The IMX134 had what turned out to be a hardcoded GPIO number, which is
wrong on G-Min even on identical hardware (the GPIO controllers are
probed in a different order).  Amusingly, in a DSDT that gets pretty
much everything else wrong the GPIO number for this device turned out
to be correct.

Also cleanup: don't redetect the reset GPIO every time it is used, set
the direction just once when it is requested, and initialize the
output value to the requested flag.

Signed-off-by: Andy Ross <andrew.j.ross@intel.com>
---
 arch/x86/platform/intel-mid/platform_imx134.c | 23 +++++++++++++++++------
 1 file changed, 17 insertions(+), 6 deletions(-)

diff --git a/arch/x86/platform/intel-mid/platform_imx134.c b/arch/x86/platform/intel-mid/platform_imx134.c
index 1c0802d..84698eb 100644
--- a/arch/x86/platform/intel-mid/platform_imx134.c
+++ b/arch/x86/platform/intel-mid/platform_imx134.c
@@ -247,17 +247,31 @@ static int imx134_gpio_ctrl(struct v4l2_subdev *sd, int flag)
 	 * not implemented currently
 	 */
 	if (camera_reset < 0) {
-		camera_reset = CAMERA_0_RESET;
+		struct i2c_client *client = v4l2_get_subdevdata(sd);
+		if(config_enabled(CONFIG_GMIN_INTEL_MID) &&
+		   ACPI_COMPANION(&client->dev)) {
+			struct gpio_desc *gd = gpiod_get_index(&client->dev, "", 0);
+			if (gd) {
+				camera_reset = desc_to_gpio(gd);
+				gpiod_put(gd);
+			}
+		}
+
+		if (camera_reset < 0)
+			camera_reset = CAMERA_0_RESET;
 
 		ret = gpio_request(camera_reset, "camera_reset");
 		if (ret) {
 			pr_err("%s: failed to request gpio(pin %d)\n",
-			       __func__, CAMERA_0_RESET);
+			       __func__, camera_reset);
 			return -EINVAL;
 		}
+
+		ret = gpio_direction_output(camera_reset, flag);
+		if (ret)
+			return ret;
 	}
 
-	ret = gpio_direction_output(camera_reset, 1);
 	if (ret) {
 		pr_err("%s: failed to set gpio(pin %d) direction\n",
 		       __func__, camera_reset);
@@ -276,9 +290,6 @@ static int imx134_gpio_ctrl(struct v4l2_subdev *sd, int flag)
 		gpio_set_value(camera_reset, 0);
 		/* 1us - Falling time of REGEN after XCLR H -> L */
 		udelay(1);
-
-		gpio_free(camera_reset);
-		camera_reset = -1;
 	}
 
 	return 0;
-- 
1.9.3

