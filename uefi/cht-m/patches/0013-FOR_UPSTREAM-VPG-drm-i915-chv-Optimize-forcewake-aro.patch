From d7a2a8ee7b88feb6e7121c2e2fa0e681969b490a Mon Sep 17 00:00:00 2001
Message-Id: <d7a2a8ee7b88feb6e7121c2e2fa0e681969b490a.1427265330.git.chang-joon.lee@intel.com>
In-Reply-To: <b4c66aa6a04d2be0fca9fa4448c7188a581a57a5.1427265330.git.chang-joon.lee@intel.com>
References: <b4c66aa6a04d2be0fca9fa4448c7188a581a57a5.1427265330.git.chang-joon.lee@intel.com>
From: Deepak S <deepak.s@intel.com>
Date: Tue, 30 Dec 2014 11:11:44 +0530
Subject: [PATCH 13/22] FOR_UPSTREAM [VPG]: drm/i915/chv: Optimize forcewake
 around ELSP submission

When we are submitting the context to the render ring we are waking up
both the Media & Render engines which causes us to consume more power.
To lower our power consumption we will stop using the shadow registers
for the Ring Tail registers so that we only wake up the engine that is
needed.

Issue: GMINL-7185
Change-Id: I1d4ebaef142e36cb16a279a0aa21e880a39bb491
Signed-off-by: Deepak S <deepak.s@intel.com>
---
 drivers/gpu/drm/i915/intel_lrc.c    |    6 ++++--
 drivers/gpu/drm/i915/intel_uncore.c |   16 +++++++++++++---
 2 files changed, 17 insertions(+), 5 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_lrc.c b/drivers/gpu/drm/i915/intel_lrc.c
index e045b51..ab76d52 100644
--- a/drivers/gpu/drm/i915/intel_lrc.c
+++ b/drivers/gpu/drm/i915/intel_lrc.c
@@ -326,7 +326,8 @@ static void execlists_elsp_write(struct intel_engine_cs *ring,
 	 * because that function calls intel_runtime_pm_get(), which might sleep.
 	 * Instead, we do the runtime_pm_get/put when creating/destroying requests.
 	 */
-	gen8_gt_force_wake_get(dev_priv);
+	if (!IS_CHERRYVIEW(dev_priv->dev))
+		gen8_gt_force_wake_get(dev_priv);
 
 	I915_WRITE(RING_ELSP(ring), desc[1]);
 	I915_WRITE(RING_ELSP(ring), desc[0]);
@@ -338,7 +339,8 @@ static void execlists_elsp_write(struct intel_engine_cs *ring,
 	POSTING_READ(RING_EXECLIST_STATUS(ring));
 
 	/* Release Force Wakeup (see the big comment above). */
-	gen8_gt_force_wake_put(dev_priv);
+	if (!IS_CHERRYVIEW(dev_priv->dev))
+		gen8_gt_force_wake_put(dev_priv);
 }
 
 /*
diff --git a/drivers/gpu/drm/i915/intel_uncore.c b/drivers/gpu/drm/i915/intel_uncore.c
index d0d465b..5808f2d 100644
--- a/drivers/gpu/drm/i915/intel_uncore.c
+++ b/drivers/gpu/drm/i915/intel_uncore.c
@@ -757,10 +757,14 @@ hsw_write##x(struct drm_i915_private *dev_priv, off_t reg, u##x val, bool trace)
 	REG_WRITE_FOOTER; \
 }
 
-static const u32 gen8_shadowed_regs[] = {
+static const u32 common_shadowed_regs[] = {
 	FORCEWAKE_MT,
 	GEN6_RPNSWREQ,
 	GEN6_RC_VIDEO_FREQ,
+	/* TODO: Other registers are not yet used */
+};
+
+static const u32 gen8_shadowed_regs[] = {
 	RING_TAIL(RENDER_RING_BASE),
 	RING_TAIL(GEN6_BSD_RING_BASE),
 	RING_TAIL(VEBOX_RING_BASE),
@@ -771,10 +775,16 @@ static const u32 gen8_shadowed_regs[] = {
 static bool is_gen8_shadowed(struct drm_i915_private *dev_priv, u32 reg)
 {
 	int i;
-	for (i = 0; i < ARRAY_SIZE(gen8_shadowed_regs); i++)
-		if (reg == gen8_shadowed_regs[i])
+	for (i = 0; i < ARRAY_SIZE(common_shadowed_regs); i++)
+		if (reg == common_shadowed_regs[i])
 			return true;
 
+	if (!IS_CHERRYVIEW(dev_priv->dev)) {
+		for (i = 0; i < ARRAY_SIZE(gen8_shadowed_regs); i++)
+			if (reg == gen8_shadowed_regs[i])
+				return true;
+	}
+
 	return false;
 }
 
-- 
1.7.9.5

