From b51fd5874f1f3bb1a8dbfe63e223befbe07de76a Mon Sep 17 00:00:00 2001
From: Simon Dubray <simonx.dubray@intel.com>
Date: Tue, 26 May 2015 18:05:52 +0200
Subject: [PATCH] Trigger uevent buffering after F/W caching during suspend

This will give a chance to F/W caching to communicate with user space
through uevents.

Change-Id: I1d404bf74f6504bcd5c9afaf587231bbf749a741
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-37491
Signed-off-by: Catalin Popescu <catalin.popescu@intel.com>
Reviewed-on: https://android.intel.com:443/292361
---
 lib/kobject_uevent.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/lib/kobject_uevent.c b/lib/kobject_uevent.c
index 7ed6eecf5769..bbca622f6cbd 100644
--- a/lib/kobject_uevent.c
+++ b/lib/kobject_uevent.c
@@ -528,7 +528,13 @@ static struct pernet_operations uevent_net_ops = {
 static int __init kobject_uevent_init(void)
 {
 #ifdef CONFIG_PM_SLEEP
-	pm_notifier(uevent_buffer_pm_notify, 0);
+	/*
+	 * F/W caching PM notifier has a priority of 0. Since it needs
+	 * to communicate with user space during suspend prepare, make
+	 * sure that uevent_buffer_pm_notify has a lower priority
+	 * otherwise it would break F/W caching.
+	 */
+	pm_notifier(uevent_buffer_pm_notify, -1);
 #endif
 	return register_pernet_subsys(&uevent_net_ops);
 }
-- 
1.9.1

