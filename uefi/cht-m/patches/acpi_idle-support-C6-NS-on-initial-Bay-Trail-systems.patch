From ad4766a5ead71598a7a36e49dd7220224ddc7b54 Mon Sep 17 00:00:00 2001
Message-Id: <ad4766a5ead71598a7a36e49dd7220224ddc7b54.1398812351.git.mark.gross@intel.com>
In-Reply-To: <e87e3533536ae5eec0e06ceb7ef7428e42855790.1398812350.git.mark.gross@intel.com>
References: <e87e3533536ae5eec0e06ceb7ef7428e42855790.1398812350.git.mark.gross@intel.com>
From: Len Brown <len.brown@intel.com>
Date: Fri, 14 Feb 2014 01:14:13 -0500
Subject: [PATCH 260/429] acpi_idle: support C6-NS on initial Bay Trail systems

Linux uses CPUID.MWAIT.EDX to validate the C-states
reported by ACPI, and discards states that the HW says
it does not support.

But all states exported by the FW should be supported
by the HW -- otherwise it is a FW bug.  So we should say so.

Also, we were too stringent, as some HW now uses sparse sub-state
numbering, so the sub-state number may be higher than the
number of sub-states...

So now we continue to check that _some_ sub-states are supported
for a given C-state, but we have to stop checking the size
of the sub-state number.

Bay Trail systems originally supported C6-no-shrink as
MWAIT sub-state 0x58, and in CPUID.MWAIT.EDX 0x03000000
indicated that there were 3 MWAIT-C6 sub-states.
So acpi_idle would discard that C-state because 8 >= 3.

Upon discovering this issue, the ucode was changed to that
C6-no-shrink was also exported as 0x51, and the BIOS was
updated to match.  However, systems shipped with 0x58,
will never get a BIOS update, and this patch allows those
systems to see this ACPI C-state.

Signed-off-by: Len Brown <len.brown@intel.com>
---
 arch/x86/kernel/acpi/cstate.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/arch/x86/kernel/acpi/cstate.c b/arch/x86/kernel/acpi/cstate.c
index e69182f..4b28159 100644
--- a/arch/x86/kernel/acpi/cstate.c
+++ b/arch/x86/kernel/acpi/cstate.c
@@ -87,7 +87,9 @@ static long acpi_processor_ffh_cstate_probe_cpu(void *_cx)
 	num_cstate_subtype = edx_part & MWAIT_SUBSTATE_MASK;
 
 	retval = 0;
-	if (num_cstate_subtype < (cx->address & MWAIT_SUBSTATE_MASK)) {
+	/* If the HW does not support any sub-states in this C-state */
+	if (num_cstate_subtype == 0) {
+		pr_warn(FW_BUG "ACPI MWAIT C-state 0x%x not supported by HW (0x%x)\n", cx->address, edx_part);
 		retval = -1;
 		goto out;
 	}
-- 
1.8.3.2

