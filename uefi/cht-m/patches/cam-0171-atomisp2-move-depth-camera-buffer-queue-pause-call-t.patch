From 355fb64a4f151907869473c59f9410b66ed44eb1 Mon Sep 17 00:00:00 2001
From: Jianxu Zheng <jian.xu.zheng@intel.com>
Date: Wed, 20 Aug 2014 19:31:46 +0800
Subject: [PATCH 171/176] atomisp2: move depth camera buffer queue pause call
 to driver

while taking depth picture, buffer queue of ov680 would be stopped.
there is one call from App to HAL to stop the queue refresh in
original design.

but the App call timing is not stable while system is over loaded.
This would cause the right frame lost in ov680 buffer queue.

so similar call is moved from App to Driver.
after driver called CSS API to take a picture,
this event is send to HAL to pause the queue

Depends on: I07f077d448273fc15dc8bb25154103ae95a19928
Depends on: Iaadc9679aa41c106df80984b7cced37e06b99bac
Depends on: I09db06558f172b448dfe72e68cfa65badcc4a02d
Depends on: I50b41b83508da584d9ca7cb6e6fcd45787a2ee7b

Change-Id: I9a270733137676f31df8ca03bb52570cd3fd60e8
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-8033
Signed-off-by: Jianxu Zheng <jian.xu.zheng@intel.com>
Reviewed-on: https://icggerrit.ir.intel.com/28028
Reviewed-by: Soren Friis <soren.friis@intel.com>
Reviewed-by: Jukka O Kaartinen <jukka.o.kaartinen@intel.com>
Integrator: Wei Tao <wei.tao@intel.com>
Approver: Wei Tao <wei.tao@intel.com>
Build: Wei Tao <wei.tao@intel.com>
Reviewed-by: Wei Tao <wei.tao@intel.com>
Maintainer: Wei Tao <wei.tao@intel.com>
---
 .../pci/atomisp2/atomisp_driver/atomisp_ioctl.c      | 20 ++++++++++++++++++++
 .../pci/atomisp2/atomisp_driver/atomisp_subdev.c     |  1 +
 2 files changed, 21 insertions(+)

diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_ioctl.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_ioctl.c
index a75f3cb..9771a12 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_ioctl.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_ioctl.c
@@ -29,6 +29,7 @@
 #include <asm/intel-mid.h>
 
 #include <media/v4l2-ioctl.h>
+#include <media/v4l2-event.h>
 #include <media/videobuf-vmalloc.h>
 
 #include "atomisp_acc.h"
@@ -1598,6 +1599,23 @@ void __wdt_on_master_slave_sensor(struct atomisp_device *isp, unsigned int wdt_d
 		atomisp_wdt_refresh(&isp->asd[1], wdt_duration);
 }
 
+static void atomisp_pause_buffer_event(struct atomisp_device *isp)
+{
+	struct v4l2_event event = {0};
+	int i;
+
+	event.type = V4L2_EVENT_ATOMISP_PAUSE_BUFFER;
+
+	for (i = 0; i < isp->num_of_streams; i++) {
+		int sensor_index = isp->asd[i].input_curr;
+		if (isp->inputs[sensor_index].camera_caps->
+				sensor[isp->asd[i].sensor_curr].is_slave) {
+			v4l2_event_queue(isp->asd[i].subdev.devnode, &event);
+			break;
+		}
+	}
+}
+
 /*
  * This ioctl start the capture during streaming I/O.
  */
@@ -1702,6 +1720,8 @@ static int atomisp_streamon(struct file *file, void *fh,
 					ret = -EINVAL;
 					goto out;
 				}
+				if (asd->depth_mode->val)
+					atomisp_pause_buffer_event(isp);
 			}
 		}
 		atomisp_qbuffers_to_css(asd);
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_subdev.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_subdev.c
index 86b704c..283ac83 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_subdev.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_subdev.c
@@ -193,6 +193,7 @@ static int isp_subdev_subscribe_event(struct v4l2_subdev *sd,
 	    sub->type != V4L2_EVENT_FRAME_END &&
 	    sub->type != V4L2_EVENT_ATOMISP_3A_STATS_READY &&
 	    sub->type != V4L2_EVENT_ATOMISP_METADATA_READY &&
+	    sub->type != V4L2_EVENT_ATOMISP_PAUSE_BUFFER &&
 	    sub->type != V4L2_EVENT_ATOMISP_RAW_BUFFERS_ALLOC_DONE &&
 	    sub->type != V4L2_EVENT_ATOMISP_ACC_COMPLETE)
 		return -EINVAL;
-- 
1.9.1

