From 8a37e19ad7c2919c26d2c7637abcd06ae523059b Mon Sep 17 00:00:00 2001
From: Mythri P K <mythri.p.k@intel.com>
Date: Fri, 23 May 2014 21:51:00 +0530
Subject: [PATCH 26/39] ASoC: DFW platform: rename sst_algo_control to
 sst_algo_data

Issue: GMINL-3680

As the sst_algo_control struct is currently only private data
for the soc_bytes_ext rename accordingly.

Change-Id: I06d008eb21777d5e9a88247e6e37ec963413b005
Signed-off-by: Mythri P K <mythri.p.k@intel.com>
---
 sound/soc/intel/platform-libs/controls_v2_dpcm.c | 18 +++++++++---------
 sound/soc/intel/platform-libs/sst_widgets.h      |  4 ++--
 2 files changed, 11 insertions(+), 11 deletions(-)

diff --git a/sound/soc/intel/platform-libs/controls_v2_dpcm.c b/sound/soc/intel/platform-libs/controls_v2_dpcm.c
index 02c9d90..d0686d1 100644
--- a/sound/soc/intel/platform-libs/controls_v2_dpcm.c
+++ b/sound/soc/intel/platform-libs/controls_v2_dpcm.c
@@ -357,7 +357,7 @@ static int sst_mode_put(struct snd_kcontrol *kcontrol,
 }
 
 static void sst_send_algo_cmd(struct sst_data *sst,
-			      struct sst_algo_control *bc)
+			      struct sst_algo_data *bc)
 {
 	int len;
 	struct sst_cmd_set_params *cmd;
@@ -392,14 +392,14 @@ static void sst_find_and_send_pipe_algo(struct sst_data *sst,
 					const char *pipe, struct sst_ids *ids)
 {
 	struct soc_bytes_ext *sb;
-	struct sst_algo_control *bc;
+	struct sst_algo_data *bc;
 	struct module *algo = NULL;
 
 	pr_debug("Enter: %s, widget=%s\n", __func__, pipe);
 
 	list_for_each_entry(algo, &ids->algo_list, node) {
 		sb = (void *) algo->kctl->private_value;
-		bc = (struct sst_algo_control *)sb->pvt_data;
+		bc = (struct sst_algo_data *)sb->pvt_data;
 
 		pr_debug("Found algo control name=%s pipe=%s\n", algo->kctl->id.name, pipe);
 		sst_send_algo_cmd(sst, bc);
@@ -410,7 +410,7 @@ int sst_algo_bytes_ctl_info(struct snd_kcontrol *kcontrol,
 			    struct snd_ctl_elem_info *uinfo)
 {
 	struct soc_bytes_ext *sb = (void *) kcontrol->private_value;
-	struct sst_algo_control *bc = (struct sst_algo_control *)sb->pvt_data;
+	struct sst_algo_data *bc = (struct sst_algo_data *)sb->pvt_data;
 	struct snd_soc_platform *platform = snd_kcontrol_chip(kcontrol);
 
 	uinfo->type = SNDRV_CTL_ELEM_TYPE_BYTES;
@@ -431,7 +431,7 @@ static int sst_algo_control_get(struct snd_kcontrol *kcontrol,
 				struct snd_ctl_elem_value *ucontrol)
 {
 	struct soc_bytes_ext *sb = (void *) kcontrol->private_value;
-	struct sst_algo_control *bc = (struct sst_algo_control *)sb->pvt_data;
+	struct sst_algo_data *bc = (struct sst_algo_data *)sb->pvt_data;
 
 	switch (bc->type) {
 	case SST_ALGO_PARAMS:
@@ -456,7 +456,7 @@ static int sst_algo_control_set(struct snd_kcontrol *kcontrol,
 	struct snd_soc_platform *platform = snd_kcontrol_chip(kcontrol);
 	struct sst_data *sst = snd_soc_platform_get_drvdata(platform);
 	struct soc_bytes_ext *sb = (void *) kcontrol->private_value;
-	struct sst_algo_control *bc = (struct sst_algo_control *)sb->pvt_data;
+	struct sst_algo_data *bc = (struct sst_algo_data *)sb->pvt_data;
 
 	pr_debug("in %s control_name=%s\n", __func__, kcontrol->id.name);
 	switch (bc->type) {
@@ -1143,14 +1143,14 @@ static int sst_tone_generator_event(struct snd_soc_dapm_widget *w,
 		int len;
 		struct module *algo;
 		struct soc_bytes_ext *sb;
-		struct sst_algo_control *bc;
+		struct sst_algo_data *bc;
 		struct sst_cmd_set_params *cmd;
 
 		algo = list_first_entry(&ids->algo_list, struct module, node);
 		if (algo == NULL)
 			return -EINVAL;
 		sb = (void *)algo->kctl->private_value;
-		bc = (struct sst_algo_control *)sb->pvt_data;
+		bc = (struct sst_algo_data *)sb->pvt_data;
 		len = sizeof(cmd->dst) + sizeof(cmd->command_id) + bc->max;
 
 		cmd = kzalloc(len, GFP_KERNEL);
@@ -1907,7 +1907,7 @@ static int sst_fill_module_list(struct snd_kcontrol *kctl,
 		list_add_tail(&module->node, &ids->gain_list);
 	} else if (type == SST_MODULE_ALGO) {
 		struct soc_bytes_ext *sb = (void *) kctl->private_value;
-		struct sst_algo_control *bc = (struct sst_algo_control *)sb->pvt_data;
+		struct sst_algo_data *bc = (struct sst_algo_data *)sb->pvt_data;
 
 		bc->w = w;
 		module->kctl = kctl;
diff --git a/sound/soc/intel/platform-libs/sst_widgets.h b/sound/soc/intel/platform-libs/sst_widgets.h
index b87bc27..f0d8c8b 100644
--- a/sound/soc/intel/platform-libs/sst_widgets.h
+++ b/sound/soc/intel/platform-libs/sst_widgets.h
@@ -248,7 +248,7 @@ enum sst_algo_kcontrol_type {
 	SST_ALGO_BYPASS,
 };
 
-struct sst_algo_control {
+struct sst_algo_data {
 	enum sst_algo_kcontrol_type type;
 	int max;
 	u16 module_id;
@@ -263,7 +263,7 @@ struct sst_algo_control {
 /* size of the control = size of params + size of length field */
 #define SST_ALGO_CTL_VALUE(xcount, xtype, xpipe, xmod, xtask, xcmd)			\
 	(struct soc_bytes_ext) {.max = xcount + sizeof(u16),							\
-		.pvt_data = (char *) &(struct sst_algo_control)				\
+		.pvt_data = (char *) &(struct sst_algo_data)				\
 		{.max = xcount + sizeof(u16), .type = xtype, .module_id = xmod,		\
 			.pipe_id = xpipe, .task_id = xtask, .cmd_id = xcmd,		\
 		}									\
-- 
1.9.1

