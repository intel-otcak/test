From 9960f4beb1a03c93bac1a687f8d05b55f3af3fe3 Mon Sep 17 00:00:00 2001
From: "Liu,Dalei" <daleix.liu@intel.com>
Date: Wed, 13 Jan 2016 12:17:39 +0800
Subject: [PATCH 4/4] atomisp2: set effective_res crop for ISP2.7

The ISP2.7 request effective resolution is output resolution
width add 128 and height add 96. So we need this patch to
conform to ISP2.7.

Change-Id: I7325e6dac5be8d66e58146e44fde3495b45e02fb
Original-Tracked-On: #H1504133721
Signed-off-by: Liu,Dalei <daleix.liu@intel.com>
Reviewed-on: https://icggerrit.ir.intel.com/95094
Build: Dessert M BXT RVP (SC)
Reviewed-by: HaiqiangX Yao <haiqiangx.yao@intel.com>
Build: Dessert M CHT FFD (SC)
Approver: Jing Tao <jing.tao@intel.com>
Validation-Android: Wei Tao <wei.tao@intel.com>
Integrator: WeiX Meng <weix.meng@intel.com>
Reviewed-by: WeiX Meng <weix.meng@intel.com>
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-15952
Signed-off-by: Yang Fan F <fan.f.yang@intel.com>
Reviewed-on: https://android.intel.com:443/459058
---
 .../media/pci/atomisp2/atomisp_driver/atomisp_cmd.c | 21 +++++++--------------
 .../pci/atomisp2/atomisp_driver/atomisp_common.h    |  2 ++
 .../atomisp2/atomisp_driver/atomisp_compat_css20.c  | 19 -------------------
 .../pci/atomisp2/atomisp_driver/atomisp_subdev.c    | 13 +++++++++++++
 4 files changed, 22 insertions(+), 33 deletions(-)

diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c
index 1786864..4ecde58 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c
@@ -89,12 +89,7 @@ union host {
 	} ptr;
 };
 
-#ifdef CONFIG_PLATFORM_BTNS
-/* This flag is for 5M(2560x1920) request from customer.
- * It's a workaround method to conform FW request because
- * we didn't have appropriate resolutiong settings */
-int btns_5mp_crop_workaround = 0;
-#endif
+bool isp27_crop_flag = false;
 
 /*
  * atomisp_kernel_malloc: chooses whether kmalloc() or vmalloc() is preferable.
@@ -5619,14 +5614,12 @@ int atomisp_set_fmt(struct video_device *vdev, struct v4l2_format *f)
 			|| r->height > f->fmt.pix.height))
 			dev_warn(isp->dev,
 				 "Main Resolution config smaller then Vf Resolution. Force to be equal with Vf Resolution.");
-#ifdef CONFIG_PLATFORM_BTNS
-	/* When customer need capture 2560x1920, we set flag to workaround */
-		if ((f->fmt.pix.width == 2560) &&
-				(f->fmt.pix.height == 1920))
-			btns_5mp_crop_workaround = 1;
-		else
-			btns_5mp_crop_workaround = 0;
-#endif
+		if (asd->select_isp_version->val ==
+			ATOMISP_CSS_ISP_PIPE_VERSION_2_7) {
+			isp27_crop_flag = true;
+		} else {
+			isp27_crop_flag = false;
+		}
 	}
 
 	/* Pipeline configuration done through subdevs. Bail out now. */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_common.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_common.h
index 8cb8ea7..aa8526f 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_common.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_common.h
@@ -40,6 +40,8 @@ extern int mipicsi_flag;
 extern int pad_w;
 extern int pad_h;
 
+extern bool isp27_crop_flag;
+
 #define CSS_DTRACE_VERBOSITY_LEVEL	5	/* Controls trace verbosity */
 #define CSS_DTRACE_VERBOSITY_TIMEOUT	9	/* Verbosity on ISP timeout */
 #define MRFLD_MAX_ZOOM_FACTOR	1024
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_compat_css20.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_compat_css20.c
index 1337d22..00d5170 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_compat_css20.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_compat_css20.c
@@ -72,13 +72,6 @@ struct bayer_ds_factor {
 	unsigned int denominator;
 };
 
-#ifdef CONFIG_PLATFORM_BTNS
-#define BTNS_CROP_PADDING_WIDTH		128
-#define BTNS_CROP_PADDING_HEIGHT	96
-
-extern int btns_5mp_crop_workaround;
-#endif
-
 void atomisp_css_debug_dump_sp_sw_debug_info(void)
 {
 	ia_css_debug_dump_sp_sw_debug_info();
@@ -2016,20 +2009,8 @@ int atomisp_css_input_set_effective_resolution(
 	struct ia_css_stream_config *s_config =
 			&asd->stream_env[stream_id].stream_config;
 
-#ifdef CONFIG_PLATFORM_BTNS
-	if (btns_5mp_crop_workaround == 1) {
-		s_config->input_config.effective_res.width =
-			2560 + BTNS_CROP_PADDING_WIDTH;
-		s_config->input_config.effective_res.height =
-			1920 + BTNS_CROP_PADDING_HEIGHT;
-	} else {
-		s_config->input_config.effective_res.width = width;
-		s_config->input_config.effective_res.height = height;
-	}
-#else
 	s_config->input_config.effective_res.width = width;
 	s_config->input_config.effective_res.height = height;
-#endif
 
 	return 0;
 }
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_subdev.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_subdev.c
index e4d4a80..dd74c41 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_subdev.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_subdev.c
@@ -34,6 +34,9 @@
 #include "atomisp_compat.h"
 #include "atomisp_internal.h"
 
+#define BTNS_CROP_PADDING_WIDTH     128
+#define BTNS_CROP_PADDING_HEIGHT     96
+
 const struct atomisp_in_fmt_conv atomisp_in_fmt_conv[] = {
 	{ V4L2_MBUS_FMT_SBGGR8_1X8, 8, 8, ATOMISP_INPUT_FORMAT_RAW_8, CSS_BAYER_ORDER_BGGR, CSS_FORMAT_RAW_8 },
 	{ V4L2_MBUS_FMT_SGBRG8_1X8, 8, 8, ATOMISP_INPUT_FORMAT_RAW_8, CSS_BAYER_ORDER_GBRG, CSS_FORMAT_RAW_8 },
@@ -490,6 +493,16 @@ int atomisp_subdev_set_selection(struct v4l2_subdev *sd,
 			crop[ATOMISP_SUBDEV_PAD_SINK]->width == 0 ||
 			crop[ATOMISP_SUBDEV_PAD_SINK]->height == 0)
 			break;
+		if ((isp27_crop_flag) &&
+				(pad == ATOMISP_SUBDEV_PAD_SOURCE_CAPTURE)) {
+			unsigned int t_w, t_h;
+			t_w = r->width + BTNS_CROP_PADDING_WIDTH;
+			t_h = r->height + BTNS_CROP_PADDING_HEIGHT;
+
+			atomisp_css_input_set_effective_resolution(isp_sd,
+					stream_id, t_w, t_h);
+			break;
+		}
 		/*
 		 * do cropping on sensor input if ratio of required resolution
 		 * is different with sensor output resolution ratio:
-- 
1.9.1

