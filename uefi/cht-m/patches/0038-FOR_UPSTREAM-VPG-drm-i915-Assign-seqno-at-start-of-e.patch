From 060fbd72622316aadc9a9111699d6bf9aa703655 Mon Sep 17 00:00:00 2001
Message-Id: <060fbd72622316aadc9a9111699d6bf9aa703655.1424394676.git.feitong.yi@intel.com>
In-Reply-To: <00f4430a265007e8e2c016cc7926bf530835ea30.1424394676.git.feitong.yi@intel.com>
References: <00f4430a265007e8e2c016cc7926bf530835ea30.1424394676.git.feitong.yi@intel.com>
From: John Harrison <John.C.Harrison@Intel.com>
Date: Mon, 13 Oct 2014 14:40:15 +0100
Subject: [PATCH 38/61] FOR_UPSTREAM [VPG]: drm/i915: Assign seqno at start of
 exec_final()

Various bits of code during the execbuf code path need a seqno value to be
assigned to the request. This change makes this assignment explicit at the start
of submission_final() rather than relying on an auto-generated seqno to have
happened already. This is in preparation for a future patch which changes seqno
values to be assigned lazily (during add_request).

Change-Id: I852cb4910a6f735d35c2d63b0847d244b0dc2217
For: VIZ-1587
For: VIZ-4741
For: GMIN-3638
Signed-off-by: John Harrison <John.C.Harrison@Intel.com>
---
 drivers/gpu/drm/i915/i915_gem.c            |    8 +++++---
 drivers/gpu/drm/i915/i915_gem_execbuffer.c |    6 ++++++
 drivers/gpu/drm/i915/intel_lrc.c           |    7 +++++++
 3 files changed, 18 insertions(+), 3 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_gem.c b/drivers/gpu/drm/i915/i915_gem.c
index 8c9ddec..9b94e40 100644
--- a/drivers/gpu/drm/i915/i915_gem.c
+++ b/drivers/gpu/drm/i915/i915_gem.c
@@ -2571,9 +2571,11 @@ int __i915_add_request(struct intel_engine_cs *ring,
 	}
 
 	/* Assign an identifier to track this request through the hardware: */
-	ret = i915_gem_get_seqno(ring->dev, &request->seqno);
-	if (ret)
-		goto end;
+	if (!request->seqno) {
+		ret = i915_gem_get_seqno(ring->dev, &request->seqno);
+		if (ret)
+			goto end;
+	}
 
 	/* Record the position of the start of the request so that
 	 * should we detect the updated seqno part-way through the
diff --git a/drivers/gpu/drm/i915/i915_gem_execbuffer.c b/drivers/gpu/drm/i915/i915_gem_execbuffer.c
index df4611e..198b733 100644
--- a/drivers/gpu/drm/i915/i915_gem_execbuffer.c
+++ b/drivers/gpu/drm/i915/i915_gem_execbuffer.c
@@ -1199,6 +1199,12 @@ int i915_gem_ringbuffer_submission_final(struct i915_execbuffer_params *params)
 
 	intel_runtime_pm_get(dev_priv);
 
+	/* Assign an identifier to track this request through the hardware: */
+	WARN_ON(params->request->seqno != 0);
+	ret = i915_gem_get_seqno(ring->dev, &params->request->seqno);
+	if (ret)
+		goto error;
+
 	/* Ensure the correct request gets assigned to the correct buffer: */
 	WARN_ON(ring->outstanding_lazy_request != NULL);
 	WARN_ON(params->request == NULL);
diff --git a/drivers/gpu/drm/i915/intel_lrc.c b/drivers/gpu/drm/i915/intel_lrc.c
index c0097e9..fe32c18 100644
--- a/drivers/gpu/drm/i915/intel_lrc.c
+++ b/drivers/gpu/drm/i915/intel_lrc.c
@@ -1420,6 +1420,13 @@ int intel_execlists_submission_final(struct i915_execbuffer_params *params)
 
 	/* The mutex must be acquired before calling this function */
 	BUG_ON(!mutex_is_locked(&params->dev->struct_mutex));
+
+	/* Assign an identifier to track this request through the hardware: */
+	WARN_ON(params->request->seqno != 0);
+	ret = i915_gem_get_seqno(ring->dev, &params->request->seqno);
+	if (ret)
+		goto error;
+
 	/* Ensure the correct request gets assigned to the correct buffer: */
 	WARN_ON(ring->outstanding_lazy_request != NULL);
 	WARN_ON(params->request == NULL);
-- 
1.7.9.5

