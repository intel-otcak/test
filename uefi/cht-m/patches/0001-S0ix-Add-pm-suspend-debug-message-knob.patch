From 43cf613c85fa172bfc7172b286edecd62617a5f6 Mon Sep 17 00:00:00 2001
From: Aubrey Li <aubrey.li@intel.com>
Date: Thu, 8 May 2014 08:20:44 -0500
Subject: [PATCH 086/152] Add pm suspend debug message knob

I saw device 80860F28 suspend prepare hang from time to time.
I encountered device INTL9C60:01 suspend noirq hang everytime.
This change adds a kernel parameter "pm_suspend_debug" to enable
suspend device list debug message during suspend

Signed-off-by: Aubrey Li <aubrey.li@intel.com>
---
 drivers/base/power/main.c |   18 ++++++++++++++++++
 include/linux/suspend.h   |    7 +++++++
 kernel/power/suspend.c    |   10 ++++++++++
 3 files changed, 35 insertions(+)

diff --git a/drivers/base/power/main.c b/drivers/base/power/main.c
index 1b41fca..51556d4 100644
--- a/drivers/base/power/main.c
+++ b/drivers/base/power/main.c
@@ -964,8 +964,14 @@ static int dpm_suspend_noirq(pm_message_t state)
 		get_device(dev);
 		mutex_unlock(&dpm_list_mtx);
 
+		pm_suspend_dbg("PM: device[%s] driver[%s] suspend noirq enter\n",
+			dev_name(dev), dev_driver_string(dev));
+
 		error = device_suspend_noirq(dev, state);
 
+		pm_suspend_dbg("PM: device[%s] driver[%s] suspend noirq exit\n",
+			dev_name(dev), dev_driver_string(dev));
+
 		mutex_lock(&dpm_list_mtx);
 		if (error) {
 			pm_dev_err(dev, state, " noirq", error);
@@ -1268,8 +1274,14 @@ int dpm_suspend(pm_message_t state)
 		get_device(dev);
 		mutex_unlock(&dpm_list_mtx);
 
+		pm_suspend_dbg("PM: device[%s] driver[%s] suspend enter\n",
+			dev_name(dev), dev_driver_string(dev));
+
 		error = device_suspend(dev);
 
+		pm_suspend_dbg("PM: device %s driver [%s] suspend exit\n",
+			dev_name(dev), dev_driver_string(dev));
+
 		mutex_lock(&dpm_list_mtx);
 		if (error) {
 			pm_dev_err(dev, state, "", error);
@@ -1375,8 +1387,14 @@ int dpm_prepare(pm_message_t state)
 		get_device(dev);
 		mutex_unlock(&dpm_list_mtx);
 
+		pm_suspend_dbg("PM: device[%s] driver[%s] suspend prepare enter\n",
+			dev_name(dev), dev_driver_string(dev));
+
 		error = device_prepare(dev, state);
 
+		pm_suspend_dbg("PM: device[%s] driver[%s] suspend prepare exit\n",
+			dev_name(dev), dev_driver_string(dev));
+
 		mutex_lock(&dpm_list_mtx);
 		if (error) {
 			if (error == -EAGAIN) {
diff --git a/include/linux/suspend.h b/include/linux/suspend.h
index f73cabf..ff0af95 100644
--- a/include/linux/suspend.h
+++ b/include/linux/suspend.h
@@ -464,4 +464,11 @@ static inline void page_key_write(void *address) {}
 
 #endif /* !CONFIG_ARCH_SAVE_PAGE_KEYS */
 
+extern bool pm_suspend_debug;
+#define pm_suspend_dbg(fmt, arg...)                                     \
+do {                                                                    \
+        if (pm_suspend_debug)                                           \
+                printk(KERN_INFO fmt, ##arg);				\
+} while (0)
+
 #endif /* _LINUX_SUSPEND_H */
diff --git a/kernel/power/suspend.c b/kernel/power/suspend.c
index dd8c326..6c8fe45 100644
--- a/kernel/power/suspend.c
+++ b/kernel/power/suspend.c
@@ -387,3 +387,13 @@ int pm_suspend(suspend_state_t state)
 	return error;
 }
 EXPORT_SYMBOL(pm_suspend);
+
+bool pm_suspend_debug = 0;
+EXPORT_SYMBOL(pm_suspend_debug);
+
+static int __init pm_suspend_debug_enable(char *str)
+{
+        pm_suspend_debug = 1;
+        return 1;
+}
+__setup("pm_suspend_debug", pm_suspend_debug_enable);
-- 
1.7.10.4

