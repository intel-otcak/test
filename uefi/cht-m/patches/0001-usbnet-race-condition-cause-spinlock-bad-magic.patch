From b205984244fe3bd17ddb3058ecde2c8824db1b1c Mon Sep 17 00:00:00 2001
From: feng wang <feng.a.wang@intel.com>
Date: Sat, 12 Oct 2013 18:43:51 +0800
Subject: [PATCH 1/2] usbnet: race condition cause spinlock bad magic

usbnet_bh will check if the URB unlink finish,then wakeup usbnet_terminate_urbs.
However schedule_timeout is used in usbnet_terminate_urbs. There is possible
that usbnet_bh and usbnet_terminate_urbs run at the same time. It will cause
dev->wait is released in usbnet_terminate_urbs but is used in usbnet_bh

The following error log hit this race.
<0>[ 7532.311847] BUG: spinlock bad magic on CPU#1, app_process/27413
<0>[ 7532.311957]  lock: ebdade78, .magic: ecd644a0, .owner: app_process/27413, .owner_cpu: 0
<4>[ 7532.312054] Pid: 27413, comm: app_process Tainted: G        W  O 3.4.43-188015-g179c84c #1
<4>[ 7532.312113] Call Trace:
<4>[ 7532.312212]  [<c195213b>] ? printk+0x1d/0x1f
<4>[ 7532.312274]  [<c1956e02>] spin_dump+0x95/0x9d
<4>[ 7532.312335]  [<c1956e25>] spin_bug+0x1b/0x1f
<4>[ 7532.312430]  [<c151573a>] do_raw_spin_unlock+0x4a/0x80
<4>[ 7532.312491]  [<c195d1e0>] _raw_spin_unlock_irqrestore+0x10/0x50
<4>[ 7532.312587]  [<c1265445>] __wake_up+0x45/0x60
<4>[ 7532.312649]  [<c167943b>] usbnet_bh+0x18b/0x310
<4>[ 7532.312744]  [<c1242329>] tasklet_action+0x59/0xc0
<4>[ 7532.312804]  [<c1241d5f>] __do_softirq+0xaf/0x200

Change-Id: I04874cb79d2193b35acf39c126130a0eedc59253
Signed-off-by: feng wang <feng.a.wang@intel.com>
Signed-off-by: Li Aixiong <aixiong.li@intel.com>
---
 drivers/net/usb/usbnet.c | 5 +----
 1 file changed, 1 insertion(+), 4 deletions(-)

diff --git a/drivers/net/usb/usbnet.c b/drivers/net/usb/usbnet.c
index f9e96c4..3f9bb68 100644
--- a/drivers/net/usb/usbnet.c
+++ b/drivers/net/usb/usbnet.c
@@ -73,9 +73,6 @@
 // us (it polls at HZ/4 usually) before we report too many false errors.
 #define THROTTLE_JIFFIES	(HZ/8)
 
-// between wakeups
-#define UNLINK_TIMEOUT_MS	3
-
 /*-------------------------------------------------------------------------*/
 
 // randomly generated ethernet address
@@ -765,7 +762,7 @@ static void usbnet_terminate_urbs(struct usbnet *dev)
 	while (!skb_queue_empty(&dev->rxq)
 		&& !skb_queue_empty(&dev->txq)
 		&& !skb_queue_empty(&dev->done)) {
-			schedule_timeout(msecs_to_jiffies(UNLINK_TIMEOUT_MS));
+			schedule();
 			set_current_state(TASK_UNINTERRUPTIBLE);
 			netif_dbg(dev, ifdown, dev->net,
 				  "waited for %d urb completions\n", temp);
-- 
1.9.1

