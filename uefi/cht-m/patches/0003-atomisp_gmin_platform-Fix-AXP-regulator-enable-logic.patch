From b182629f289a39edc0a6eaf028fd0acf9e185cbc Mon Sep 17 00:00:00 2001
From: Andy Ross <andrew.j.ross@intel.com>
Date: Thu, 8 Jan 2015 11:07:33 -0800
Subject: [PATCH 3/3] atomisp_gmin_platform: Fix AXP regulator enable logic

Dumb code error led to the enable bit always being ignored.  This
worked on previous boards only by dumb luck because the firmware set
up the lines right.

Change-Id: I42a785d4cbde685e5b13fd1f432701c97be5584f
Signed-off-by: Andy Ross <andrew.j.ross@intel.com>
---
 arch/x86/platform/intel-mid/atomisp_gmin_platform.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/arch/x86/platform/intel-mid/atomisp_gmin_platform.c b/arch/x86/platform/intel-mid/atomisp_gmin_platform.c
index 67409c7..a0082a3 100644
--- a/arch/x86/platform/intel-mid/atomisp_gmin_platform.c
+++ b/arch/x86/platform/intel-mid/atomisp_gmin_platform.c
@@ -382,7 +382,6 @@ static int axp_regulator_set(int sel_reg, u8 setting, int ctrl_reg, int shift, b
 {
 	int ret;
 	int val;
-	u8 val_u8;
 
 	ret = intel_soc_pmic_writeb(sel_reg, setting);
 	if (ret)
@@ -390,12 +389,13 @@ static int axp_regulator_set(int sel_reg, u8 setting, int ctrl_reg, int shift, b
 	val = intel_soc_pmic_readb(ctrl_reg);
 	if (val < 0)
 		return val;
-	val_u8 = (u8)val;
+
 	if (on)
-		val |= ((u8)1 << shift);
+		val |= (1 << shift);
 	else
-		val &= ~((u8)1 << shift);
-	ret = intel_soc_pmic_writeb(ctrl_reg, val_u8);
+		val &= ~(1 << shift);
+
+	ret = intel_soc_pmic_writeb(ctrl_reg, (u8)val);
 	if (ret)
 		return ret;
 
-- 
2.1.0

