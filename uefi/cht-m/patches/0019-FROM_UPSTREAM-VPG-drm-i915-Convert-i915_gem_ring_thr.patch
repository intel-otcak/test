From a027ed1d2a3fd61d76f725d3ebaee6680d24b5fd Mon Sep 17 00:00:00 2001
Message-Id: <a027ed1d2a3fd61d76f725d3ebaee6680d24b5fd.1421835210.git.chang-joon.lee@intel.com>
In-Reply-To: <aa9849875fd9575e7de3d51e779ec326100b81c0.1421835210.git.chang-joon.lee@intel.com>
References: <aa9849875fd9575e7de3d51e779ec326100b81c0.1421835210.git.chang-joon.lee@intel.com>
From: John Harrison <John.C.Harrison@Intel.com>
Date: Mon, 24 Nov 2014 18:49:27 +0000
Subject: [PATCH 19/63] FROM_UPSTREAM [VPG]: drm/i915: Convert
 i915_gem_ring_throttle to use requests

Convert the throttle code to use the request structure rather than extracting a
ring/seqno pair from it and using those. This is in preparation for
__wait_seqno() becoming __wait_request().

Change-Id: I0916a10b761260e77819946b5b69ab7e14c583de
For: VIZ-4377
Signed-off-by: John Harrison <John.C.Harrison@Intel.com>
Reviewed-by: Thomas Daniel <Thomas.Daniel@intel.com>
Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
Upstream-repo: git://anongit.freedesktop.org/drm-intel
Upstream-commit: 54fb2411dd0b4d7d91e9d77536ac84295607a93b
Upstream-as-of-tag: n/a
---
 drivers/gpu/drm/i915/i915_gem.c |   26 +++++++++++---------------
 1 file changed, 11 insertions(+), 15 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_gem.c b/drivers/gpu/drm/i915/i915_gem.c
index 7a71d65..a62e2e5 100644
--- a/drivers/gpu/drm/i915/i915_gem.c
+++ b/drivers/gpu/drm/i915/i915_gem.c
@@ -4195,10 +4195,8 @@ i915_gem_ring_throttle(struct drm_device *dev, struct drm_file *file)
 	struct drm_i915_private *dev_priv = dev->dev_private;
 	struct drm_i915_file_private *file_priv = file->driver_priv;
 	unsigned long recent_enough = jiffies - msecs_to_jiffies(20);
-	struct drm_i915_gem_request *request;
-	struct intel_engine_cs *ring = NULL;
+	struct drm_i915_gem_request *request, *target = NULL;
 	unsigned reset_counter;
-	u32 seqno = 0;
 	int ret;
 
 	ret = i915_gem_wait_for_error(dev, &dev_priv->gpu_error);
@@ -4210,25 +4208,23 @@ i915_gem_ring_throttle(struct drm_device *dev, struct drm_file *file)
 		if (time_after_eq(request->emitted_jiffies, recent_enough))
 			break;
 
-		ring = request->ring;
-		seqno = request->seqno;
+		target = request;
 	}
 	reset_counter = atomic_read(&dev_priv->gpu_error.reset_counter);
 	spin_unlock(&file_priv->mm.lock);
 
-	if (seqno == 0)
+	if (target == NULL)
 		return 0;
 
-	if (ring) {
-		if (i915_gem_wedged(dev, 1) != 0)
-			return -EIO;
+	if (i915_gem_wedged(dev, 1) != 0)
+		return -EIO;
 
-		ret = __wait_seqno(ring, seqno, reset_counter, true,
-								NULL, NULL);
-		if (ret == 0)
-			queue_delayed_work(dev_priv->wq,
-				&dev_priv->mm.retire_work, 0);
-	}
+	ret = __wait_seqno(i915_gem_request_get_ring(target),
+			   i915_gem_request_get_seqno(target),
+			   reset_counter, true, NULL, NULL);
+	if (ret == 0)
+		queue_delayed_work(dev_priv->wq,
+			&dev_priv->mm.retire_work, 0);
 
 	return ret;
 }
-- 
1.7.9.5

