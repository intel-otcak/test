From 36c4105e89ee23e2d53aef934395cea8da1c505e Mon Sep 17 00:00:00 2001
Message-Id: <36c4105e89ee23e2d53aef934395cea8da1c505e.1441918786.git.yunwei.zhang@intel.com>
In-Reply-To: <8631704be06e00cb7a7a415f13811ca4ece99e8b.1441918786.git.yunwei.zhang@intel.com>
References: <8631704be06e00cb7a7a415f13811ca4ece99e8b.1441918786.git.yunwei.zhang@intel.com>
From: Shubhangi Shrivastava <shubhangi.shrivastava@intel.com>
Date: Tue, 8 Sep 2015 11:16:42 +0530
Subject: [PATCH 03/10] REVERTME [VPG]: drm/i915: Moving hotplug_switch to
 dev_priv structure

This patch moves the structure hotplug_switch to dev_priv
structure from intel_connector structure in order to allow
it to be common for different external devices.
This change will allow common init rather than per encoder
init which will help in audio registration with externa
devices on their hotplug.

REVERTME:LP audio is not available upstream and may not be for
some more time which is required for this.

Change-Id: Ia44b638afd8a725c0c9ec4c753d8006f8091bd51
Tracked-On: https://jira01.devtools.intel.com/browse/GMINL-10172
Signed-off-by: Sivakumar Thulasimani <sivakumar.thulasimani@intel.com>
Signed-off-by: Shubhangi Shrivastava <shubhangi.shrivastava@intel.com>
---
 drivers/gpu/drm/i915/i915_drv.h   |    8 ++++++++
 drivers/gpu/drm/i915/intel_dp.c   |   26 +++++++++++++++-----------
 drivers/gpu/drm/i915/intel_drv.h  |    6 ------
 drivers/gpu/drm/i915/intel_hdmi.c |   37 ++++++++++++++-----------------------
 4 files changed, 37 insertions(+), 40 deletions(-)

Index: b/drivers/gpu/drm/i915/i915_drv.h
===================================================================
--- a/drivers/gpu/drm/i915/i915_drv.h	2016-03-08 10:24:54.329009539 -0800
+++ b/drivers/gpu/drm/i915/i915_drv.h	2016-03-08 10:25:18.745279483 -0800
@@ -48,6 +48,9 @@
 #include <linux/kref.h>
 #include <linux/pm_qos.h>
 #include <linux/bitops.h>
+#ifdef CONFIG_EXTCON
+#include <linux/extcon.h>
+#endif
 #ifdef CONFIG_SUPPORT_LPDMA_HDMI_AUDIO
 	#include "hdmi_audio_if.h"
 #endif
@@ -1720,6 +1723,11 @@
 	struct work_struct hdmi_audio_wq;
 #endif
 
+#ifdef CONFIG_EXTCON
+	/* Android uses switch to inform userspace about hotplug events. */
+	struct extcon_dev hotplug_switch;
+#endif
+
 	/* Atomicity fixes */
 	u32 pfit_pipe;
 	bool pfit_changed;
Index: b/drivers/gpu/drm/i915/intel_dp.c
===================================================================
--- a/drivers/gpu/drm/i915/intel_dp.c	2016-03-08 10:24:54.329009539 -0800
+++ b/drivers/gpu/drm/i915/intel_dp.c	2016-03-08 10:25:18.745279483 -0800
@@ -4577,6 +4577,8 @@
 {
 	struct intel_connector *intel_connector = to_intel_connector(connector);
 	struct intel_dp *intel_dp = intel_attached_dp(connector);
+	struct drm_device *dev = connector->dev;
+	struct drm_i915_private *dev_priv = dev->dev_private;
 
 	/* use cached edid if we have one */
 	if (intel_connector->edid) {
@@ -4589,8 +4591,8 @@
 		if (intel_dp->notify_had) {
 			hdmi_get_eld(connector->eld);
 #ifdef CONFIG_EXTCON
-			if (strlen(intel_connector->hotplug_switch.name) != 0)
-				extcon_set_state(&intel_connector->
+			if (strlen(dev_priv->hotplug_switch.name) != 0)
+				extcon_set_state(&dev_priv->
 					hotplug_switch, true);
 #endif
 			intel_dp->notify_had = false;
@@ -4692,9 +4694,9 @@
 				intel_dp->notify_had = true;
 		} else {
 #ifdef CONFIG_EXTCON
-			if (strlen(intel_connector->hotplug_switch.name) != 0)
+			if (strlen(dev_priv->hotplug_switch.name) != 0)
 				extcon_set_state(
-				&intel_connector->hotplug_switch, false);
+				&dev_priv->hotplug_switch, false);
 #endif
 			/* Send a disconnect event to audio */
 			DRM_DEBUG_DRIVER("Sending event to audio");
@@ -4897,11 +4899,13 @@
 intel_dp_connector_destroy(struct drm_connector *connector)
 {
 	struct intel_connector *intel_connector = to_intel_connector(connector);
+	struct drm_device *dev = connector->dev;
+	struct drm_i915_private *dev_priv = dev->dev_private;
 
 #ifdef CONFIG_EXTCON
-	extcon_dev_unregister(&intel_connector->hotplug_switch);
-	if (&intel_connector->hotplug_switch)
-		kfree(intel_connector->hotplug_switch.name);
+	extcon_dev_unregister(&dev_priv->hotplug_switch);
+	if (&dev_priv->hotplug_switch)
+		kfree(dev_priv->hotplug_switch.name);
 #endif
 
 	if (!IS_ERR_OR_NULL(intel_connector->edid))
@@ -5392,16 +5396,16 @@
 	} else {
 #ifdef CONFIG_EXTCON
 		/* use the same name as hdmi for now  */
-		intel_connector->hotplug_switch.name =
+		dev_priv->hotplug_switch.name =
 			kasprintf(GFP_KERNEL, "hdmi_%c", 'a' + port);
 #ifdef CONFIG_SUPPORT_LPDMA_HDMI_AUDIO
 		if (IS_VALLEYVIEW(dev))
-			intel_connector->hotplug_switch.name = "hdmi";
+			dev_priv->hotplug_switch.name = "hdmi";
 #endif
-		if (!intel_connector->hotplug_switch.name)
+		if (!dev_priv->hotplug_switch.name)
 			DRM_ERROR("Couldn't allocate memory for audio");
 
-		extcon_dev_register(&intel_connector->hotplug_switch);
+		extcon_dev_register(&dev_priv->hotplug_switch);
 #endif
 	}
 
Index: b/drivers/gpu/drm/i915/intel_drv.h
===================================================================
--- a/drivers/gpu/drm/i915/intel_drv.h	2016-03-08 10:24:54.329009539 -0800
+++ b/drivers/gpu/drm/i915/intel_drv.h	2016-03-08 10:25:18.745279483 -0800
@@ -26,7 +26,6 @@
 #define __INTEL_DRV_H__
 
 #include <linux/i2c.h>
-#include <linux/extcon.h>
 #include <linux/hdmi.h>
 #include <drm/i915_drm.h>
 #include "i915_drv.h"
@@ -217,11 +216,6 @@
 	 */
 	struct intel_encoder *new_encoder;
 
-#ifdef CONFIG_EXTCON
-	/* Android uses switch to inform userspace about hotplug events. */
-	struct extcon_dev hotplug_switch;
-#endif
-
 	/* Reads out the current hw, returning true if the connector is enabled
 	 * and active (i.e. dpms ON state). */
 	bool (*get_hw_state)(struct intel_connector *);
Index: b/drivers/gpu/drm/i915/intel_hdmi.c
===================================================================
--- a/drivers/gpu/drm/i915/intel_hdmi.c	2016-03-08 10:24:54.333009583 -0800
+++ b/drivers/gpu/drm/i915/intel_hdmi.c	2016-03-08 10:27:52.786983993 -0800
@@ -1217,11 +1217,6 @@
 	enum intel_display_power_domain power_domain;
 	enum drm_connector_status status = connector_status_disconnected;
 
-#ifdef CONFIG_EXTCON
-	struct intel_connector *intel_connector =
-				to_intel_connector(connector);
-#endif
-
 	DRM_DEBUG_KMS("[CONNECTOR:%d:%s]\n",
 		      connector->base.id, connector->name);
 
@@ -1285,9 +1280,9 @@
 #ifdef CONFIG_SUPPORT_LPDMA_HDMI_AUDIO
 		if ((status != i915_hdmi_state) && (IS_VALLEYVIEW(dev))) {
 #ifdef CONFIG_EXTCON
-			if (strlen(intel_connector->hotplug_switch.name) != 0)
+			if (strlen(dev_priv->hotplug_switch.name) != 0)
 				extcon_set_state(
-				&intel_connector->hotplug_switch, 0);
+				&dev_priv->hotplug_switch, 0);
 #endif
 			/* Send a disconnect event to audio */
 			DRM_DEBUG_DRIVER("Sending event to audio");
@@ -1316,10 +1311,6 @@
 	enum intel_display_power_domain power_domain;
 	struct edid *edid = NULL;
 	int ret = 0;
-#ifdef CONFIG_EXTCON
-	struct intel_connector *intel_connector =
-				to_intel_connector(connector);
-#endif
 
 	/* We should parse the EDID data and find out if it's an HDMI sink so
 	 * we can send audio to it.
@@ -1331,8 +1322,8 @@
 	/* No need to read modes if no connection */
 	if (connector->status != connector_status_connected) {
 #ifdef CONFIG_EXTCON
-		if (strlen(intel_connector->hotplug_switch.name) != 0)
-			extcon_set_state(&intel_connector->hotplug_switch, 0);
+		if (strlen(dev_priv->hotplug_switch.name) != 0)
+			extcon_set_state(&dev_priv->hotplug_switch, 0);
 #endif
 		goto e_out;
 	}
@@ -1353,9 +1344,9 @@
 		if (intel_hdmi->notify_had) {
 			hdmi_get_eld(connector->eld);
 #ifdef CONFIG_EXTCON
-			if (strlen(intel_connector->hotplug_switch.name) != 0) {
+			if (strlen(dev_priv->hotplug_switch.name) != 0) {
 				extcon_set_state(
-				&intel_connector->hotplug_switch, 1);
+				&dev_priv->hotplug_switch, 1);
 			}
 #endif
 			intel_hdmi->notify_had = 0;
@@ -1924,10 +1915,10 @@
 static void intel_hdmi_destroy(struct drm_connector *connector)
 {
 #ifdef CONFIG_EXTCON
-	struct intel_connector *intel_connector =
-			to_intel_connector(connector);
-	extcon_dev_unregister(&intel_connector->hotplug_switch);
-	kfree(intel_connector->hotplug_switch.name);
+	struct drm_device *dev = connector->dev;
+	struct drm_i915_private *dev_priv = dev->dev_private;
+	extcon_dev_unregister(&dev_priv->hotplug_switch);
+	kfree(dev_priv->hotplug_switch.name);
 #endif
 	drm_connector_cleanup(connector);
 	kfree(connector);
@@ -2053,20 +2044,20 @@
 	drm_connector_register(connector);
 
 #ifdef CONFIG_EXTCON
-	intel_connector->hotplug_switch.name =
+	dev_priv->hotplug_switch.name =
 		kasprintf(GFP_KERNEL, "hdmi_%c", 'a' + port);
 #ifdef CONFIG_SUPPORT_LPDMA_HDMI_AUDIO
 		if (IS_VALLEYVIEW(dev))
-			intel_connector->hotplug_switch.name = "hdmi";
+			dev_priv->hotplug_switch.name = "hdmi";
 #endif
-	if (!intel_connector->hotplug_switch.name) {
+	if (!dev_priv->hotplug_switch.name) {
 		DRM_ERROR("%s failed to allocate memory", __func__);
 		kfree(intel_connector);
 		kfree(intel_dig_port);
 		return;
 	}
 
-	extcon_dev_register(&intel_connector->hotplug_switch);
+	extcon_dev_register(&dev_priv->hotplug_switch);
 #endif
 
 	/* For G4X desktop chip, PEG_BAND_GAP_DATA 3:0 must first be written
