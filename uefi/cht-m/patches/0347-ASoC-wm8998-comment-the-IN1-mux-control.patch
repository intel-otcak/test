From cec82232518acf939516e755b03ebdadb3b1dad7 Mon Sep 17 00:00:00 2001
From: Richard Fitzgerald <rf@opensource.wolfsonmicro.com>
Date: Thu, 23 Oct 2014 11:02:33 +0100
Subject: [PATCH 347/351] ASoC: wm8998: comment the IN1 mux control

The handling of the IN1MUX could benefit from some
comments to explain why it needs to do what it does

Change-Id: Iab763ba87986229c793aea9b845ca4c46b9dc585
Signed-off-by: Richard Fitzgerald <rf@opensource.wolfsonmicro.com>
---
 sound/soc/codecs/wm8998.c |   12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

diff --git a/sound/soc/codecs/wm8998.c b/sound/soc/codecs/wm8998.c
index 2df44af..5b64dc3 100644
--- a/sound/soc/codecs/wm8998.c
+++ b/sound/soc/codecs/wm8998.c
@@ -1173,17 +1173,20 @@ static int wm8998_in1mux_ev(struct snd_soc_dapm_widget *w,
 
 	switch (event) {
 	case SND_SOC_DAPM_PRE_PMU:
+		/* Validate the mux configuration */
 		left_mux = snd_soc_read(codec, ARIZONA_ADC_DIGITAL_VOLUME_1L) &
 				  ARIZONA_IN1L_SRC_MASK;
 		right_mux = snd_soc_read(codec, ARIZONA_ADC_DIGITAL_VOLUME_1R) &
 				  ARIZONA_IN1R_SRC_MASK;
 
+		/* Only IN1A can be digital, IN1B is always analogue */
 		in1mode = (arizona->pdata.inmode[0] & 2)
 				<< (ARIZONA_IN1_MODE_SHIFT - 1);
 
 		if (in1mode != 0) {
-			/* IN1A is digital, check whether IN1A is selected */
-
+			/* if IN1A is digital, the only valid mux configs
+			 * are both channels A or both channels B.
+			 */
 			if (left_mux != right_mux) {
 				dev_err(arizona->dev,
 					"IN1=DMIC and 'IN1MUXL Input'"
@@ -1191,8 +1194,11 @@ static int wm8998_in1mux_ev(struct snd_soc_dapm_widget *w,
 				return -EINVAL;
 			}
 
+			/* IN1A is digital so need to ensure mode is set back
+			 * to analogue if IN1B is selected
+			 */
 			if (left_mux != 0)
-				in1mode = 0; /* IN1B selected, set analogue */
+				in1mode = 0;
 		}
 
 		old = snd_soc_read(codec, ARIZONA_IN1L_CONTROL) &
-- 
1.7.9.5

