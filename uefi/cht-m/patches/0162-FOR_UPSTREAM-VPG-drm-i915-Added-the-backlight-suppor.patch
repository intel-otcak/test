From 216a3dd4713aa7b7c7fe5fa6f165c84b7e9ca8e1 Mon Sep 17 00:00:00 2001
Message-Id: <216a3dd4713aa7b7c7fe5fa6f165c84b7e9ca8e1.1413837857.git.chang-joon.lee@intel.com>
In-Reply-To: <006497b7323eca32c2f489a1a9f662743c0d16d2.1413837855.git.chang-joon.lee@intel.com>
References: <006497b7323eca32c2f489a1a9f662743c0d16d2.1413837855.git.chang-joon.lee@intel.com>
From: Deepak M <m.deepak@intel.com>
Date: Fri, 4 Jul 2014 08:32:22 +0530
Subject: [PATCH 162/312] FOR_UPSTREAM [VPG]: drm/i915: Added the backlight
 support for the MIPI panel

This patch adds the backlight controls functions for the
MIPI panel.

Issue: GMIN-1549
Change-Id: I45e7288d38833b487e179920275dfe091f6d6d66
Signed-off-by: Deepak M <m.deepak@intel.com>
---
 drivers/gpu/drm/i915/intel_bios.h          |    2 +-
 drivers/gpu/drm/i915/intel_dsi.h           |   27 ++++++++
 drivers/gpu/drm/i915/intel_dsi_panel_vbt.c |   25 -------
 drivers/gpu/drm/i915/intel_panel.c         |   98 +++++++++++++++++++++++-----
 4 files changed, 111 insertions(+), 41 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_bios.h b/drivers/gpu/drm/i915/intel_bios.h
index b986677..162a624 100644
--- a/drivers/gpu/drm/i915/intel_bios.h
+++ b/drivers/gpu/drm/i915/intel_bios.h
@@ -774,7 +774,7 @@ struct mipi_config {
 	u32 video_transfer_mode:2;
 
 	u32 cabc_supported:1;
-	u32 pwm_blc:1;
+	u32 pmic_soc_blc:1;
 
 	/* Bit 13:10 */
 #define PIXEL_FORMAT_RGB565			0x1
diff --git a/drivers/gpu/drm/i915/intel_dsi.h b/drivers/gpu/drm/i915/intel_dsi.h
index 7e4689e..447a07f 100644
--- a/drivers/gpu/drm/i915/intel_dsi.h
+++ b/drivers/gpu/drm/i915/intel_dsi.h
@@ -33,6 +33,33 @@
 #define PMIC_BKL_EN		0x4B
 #define PMIC_PWM_LEVEL		0x4E
 
+#define GPI0_NC_0_HV_DDI0_HPD		0x4130
+#define GPIO_NC_0_HV_DDI0_PAD		0x4138
+#define GPIO_NC_1_HV_DDI0_DDC_SDA	0x4120
+#define GPIO_NC_1_HV_DDI0_DDC_SDA_PAD	0x4128
+#define GPIO_NC_2_HV_DDI0_DDC_SCL	0x4110
+#define GPIO_NC_2_HV_DDI0_DDC_SCL_PAD	0x4118
+#define GPIO_NC_3_PANEL0_VDDEN		0x4140
+#define GPIO_NC_3_PANEL0_VDDEN_PAD	0x4148
+#define GPIO_NC_4_PANEL0_BLKEN		0x4150
+#define GPIO_NC_4_PANEL0_BLKEN_PAD	0x4158
+#define GPIO_NC_5_PANEL0_BLKCTL		0x4160
+#define GPIO_NC_5_PANEL0_BLKCTL_PAD	0x4168
+#define GPIO_NC_6_PCONF0		0x4180
+#define GPIO_NC_6_PAD			0x4188
+#define GPIO_NC_7_PCONF0		0x4190
+#define GPIO_NC_7_PAD			0x4198
+#define GPIO_NC_8_PCONF0		0x4170
+#define GPIO_NC_8_PAD			0x4178
+#define GPIO_NC_9_PCONF0		0x4100
+#define GPIO_NC_9_PAD			0x4108
+#define GPIO_NC_10_PCONF0		0x40E0
+#define GPIO_NC_10_PAD			0x40E8
+#define GPIO_NC_11_PCONF0		0x40F0
+#define GPIO_NC_11_PAD			0x40F8
+#define GPIO_NC_22_PCONF0		0x40A0
+#define GPIO_NC_22_PAD			0x40A8
+
 struct intel_dsi_device {
 	unsigned int panel_id;
 	const char *name;
diff --git a/drivers/gpu/drm/i915/intel_dsi_panel_vbt.c b/drivers/gpu/drm/i915/intel_dsi_panel_vbt.c
index 21a0d34..dc5ab89 100644
--- a/drivers/gpu/drm/i915/intel_dsi_panel_vbt.c
+++ b/drivers/gpu/drm/i915/intel_dsi_panel_vbt.c
@@ -48,31 +48,6 @@
 
 #define NS_KHZ_RATIO 1000000
 
-#define GPI0_NC_0_HV_DDI0_HPD           0x4130
-#define GPIO_NC_0_HV_DDI0_PAD           0x4138
-#define GPIO_NC_1_HV_DDI0_DDC_SDA       0x4120
-#define GPIO_NC_1_HV_DDI0_DDC_SDA_PAD   0x4128
-#define GPIO_NC_2_HV_DDI0_DDC_SCL       0x4110
-#define GPIO_NC_2_HV_DDI0_DDC_SCL_PAD   0x4118
-#define GPIO_NC_3_PANEL0_VDDEN          0x4140
-#define GPIO_NC_3_PANEL0_VDDEN_PAD      0x4148
-#define GPIO_NC_4_PANEL0_BLKEN          0x4150
-#define GPIO_NC_4_PANEL0_BLKEN_PAD      0x4158
-#define GPIO_NC_5_PANEL0_BLKCTL         0x4160
-#define GPIO_NC_5_PANEL0_BLKCTL_PAD     0x4168
-#define GPIO_NC_6_PCONF0                0x4180
-#define GPIO_NC_6_PAD                   0x4188
-#define GPIO_NC_7_PCONF0                0x4190
-#define GPIO_NC_7_PAD                   0x4198
-#define GPIO_NC_8_PCONF0                0x4170
-#define GPIO_NC_8_PAD                   0x4178
-#define GPIO_NC_9_PCONF0                0x4100
-#define GPIO_NC_9_PAD                   0x4108
-#define GPIO_NC_10_PCONF0               0x40E0
-#define GPIO_NC_10_PAD                  0x40E8
-#define GPIO_NC_11_PCONF0               0x40F0
-#define GPIO_NC_11_PAD                  0x40F8
-
 struct gpio_table {
 	u16 function_reg;
 	u16 pad_reg;
diff --git a/drivers/gpu/drm/i915/intel_panel.c b/drivers/gpu/drm/i915/intel_panel.c
index 3eec940..a4664b6 100644
--- a/drivers/gpu/drm/i915/intel_panel.c
+++ b/drivers/gpu/drm/i915/intel_panel.c
@@ -32,6 +32,7 @@
 
 #include <linux/moduleparam.h>
 #include <linux/mfd/intel_soc_pmic.h>
+#include <linux/pwm.h>
 #include "intel_drv.h"
 #include "intel_dsi.h"
 
@@ -461,11 +462,18 @@ static u32 _vlv_get_backlight(struct drm_device *dev, enum pipe pipe)
 {
 	struct drm_i915_private *dev_priv = dev->dev_private;
 
-	if (dev_priv->vbt.has_mipi)
-		return intel_soc_pmic_readb(PMIC_PWM_LEVEL);
+	return I915_READ(VLV_BLC_PWM_CTL(pipe)) &
+			BACKLIGHT_DUTY_CYCLE_MASK;
+}
+
+static u32 vlv_get_mipi_backlight(struct drm_device *dev)
+{
+	struct drm_i915_private *dev_priv = dev->dev_private;
+
+	if (dev_priv->vbt.dsi.config->pmic_soc_blc)
+		return lpio_bl_read(0, LPIO_PWM_CTRL) & 0xff;
 	else
-		return I915_READ(VLV_BLC_PWM_CTL(pipe)) &
-					BACKLIGHT_DUTY_CYCLE_MASK;
+		return intel_soc_pmic_readb(PMIC_PWM_LEVEL);
 }
 
 static u32 vlv_get_backlight(struct intel_connector *connector)
@@ -565,7 +573,17 @@ static void vlv_set_backlight(struct intel_connector *connector, u32 level)
 
 static void vlv_set_mipi_backlight(struct intel_connector *connector, u32 level)
 {
-	intel_soc_pmic_writeb(PMIC_PWM_LEVEL, level);
+	struct drm_device *dev = connector->base.dev;
+	struct drm_i915_private *dev_priv = dev->dev_private;
+	if (dev_priv->vbt.dsi.config->pmic_soc_blc) {
+		/* FixMe: if level is zero still a pulse is observed consuming
+		 * power. To fix this issue if requested level is zero then
+		 * disable pwm and enabled it again if brightness changes
+		 */
+		lpio_bl_write_bits(0, LPIO_PWM_CTRL, (0xff - level), 0xFF);
+		lpio_bl_update(0, LPIO_PWM_CTRL);
+	} else
+		intel_soc_pmic_writeb(PMIC_PWM_LEVEL, level);
 }
 
 void
@@ -668,10 +686,21 @@ static void vlv_disable_backlight(struct intel_connector *connector)
 
 static void vlv_disable_mipi_backlight(struct intel_connector *connector)
 {
+	struct drm_device *dev = connector->base.dev;
+	struct drm_i915_private *dev_priv = dev->dev_private;
+
 	intel_panel_actually_set_backlight(connector, 0);
 
-	intel_soc_pmic_writeb(PMIC_PWM_EN, 0x00);
-	intel_soc_pmic_writeb(PMIC_BKL_EN, 0x7F);
+	if (dev_priv->vbt.dsi.config->pmic_soc_blc) {
+		/* disable the backlight enable signal */
+		vlv_gpio_nc_write(dev_priv, GPIO_NC_10_PCONF0, 0x2000CC00);
+		vlv_gpio_nc_write(dev_priv, GPIO_NC_10_PAD, 0x00000004);
+		udelay(500);
+		lpio_bl_write_bits(0, LPIO_PWM_CTRL, 0x00, 0x80000000);
+	} else {
+		intel_soc_pmic_writeb(PMIC_PWM_EN, 0x00);
+		intel_soc_pmic_writeb(PMIC_BKL_EN, 0x7F);
+	}
 }
 
 void intel_panel_disable_backlight(struct intel_connector *connector)
@@ -746,6 +775,28 @@ static void bdw_enable_backlight(struct intel_connector *connector)
 	intel_panel_actually_set_backlight(connector, panel->backlight.level);
 }
 
+static void lpio_enable_backlight(struct drm_i915_private *dev_priv)
+{
+	uint32_t val;
+
+	/* GPIOC_94 config to PWM0 function */
+	val = vlv_gps_core_read(dev_priv, GPIO_NC_22_PCONF0);
+	vlv_gps_core_write(dev_priv, GPIO_NC_22_PCONF0, 0x2000CC01);
+	vlv_gps_core_write(dev_priv, GPIO_NC_22_PAD, 0x5);
+
+	/* PWM enable*/
+	lpio_bl_write(0, LPIO_PWM_CTRL, 0x20c00);
+	lpio_bl_update(0, LPIO_PWM_CTRL);
+	lpio_bl_write_bits(0, LPIO_PWM_CTRL, 0x80000000,
+			0x80000000);
+	lpio_bl_update(0, LPIO_PWM_CTRL);
+
+	/* Backlight enable */
+	vlv_gpio_nc_write(dev_priv, GPIO_NC_10_PCONF0, 0x2000CC00);
+	vlv_gpio_nc_write(dev_priv, GPIO_NC_10_PAD, 0x00000005);
+	udelay(500);
+}
+
 static void pch_enable_backlight(struct intel_connector *connector)
 {
 	struct drm_device *dev = connector->base.dev;
@@ -894,8 +945,17 @@ static void vlv_enable_mipi_backlight(struct intel_connector *connector)
 {
 	struct intel_panel *panel = &connector->panel;
 
-	intel_soc_pmic_writeb(PMIC_BKL_EN, 0xFF);
-	intel_soc_pmic_writeb(PMIC_PWM_EN, 0x01);
+	struct drm_device *dev = connector->base.dev;
+	struct drm_i915_private *dev_priv = dev->dev_private;
+	/* Adding the check whether we are using the SOC PWM or
+	 * PMIC PWM
+	 */
+	if (dev_priv->vbt.dsi.config->pmic_soc_blc) {
+		lpio_enable_backlight(dev_priv);
+	} else {
+		intel_soc_pmic_writeb(PMIC_BKL_EN, 0xFF);
+		intel_soc_pmic_writeb(PMIC_PWM_EN, 0x01);
+	}
 
 	intel_panel_actually_set_backlight(connector, panel->backlight.level);
 }
@@ -1184,15 +1244,23 @@ static int vlv_setup_mipi_backlight(struct intel_connector *connector)
 {
 	struct drm_device *dev = connector->base.dev;
 	struct intel_panel *panel = &connector->panel;
+	struct drm_i915_private *dev_priv = dev->dev_private;
 	u32 val;
 
 	panel->backlight.max = 0xFF;
 
-	val = _vlv_get_backlight(dev, PIPE_A);
+	val = vlv_get_mipi_backlight(dev);
 	panel->backlight.level = intel_panel_compute_brightness(connector, val);
 
-	panel->backlight.enabled = (intel_soc_pmic_readb(PMIC_PWM_EN) & 0x1) &&
-						panel->backlight.level != 0;
+	if (dev_priv->vbt.dsi.config->pmic_soc_blc) {
+		panel->backlight.enabled = lpio_bl_read(0, LPIO_PWM_CTRL) &
+			0x80000000;
+	} else {
+		panel->backlight.enabled =
+			(intel_soc_pmic_readb(PMIC_PWM_EN) & 0x1) &&
+			panel->backlight.level != 0;
+	}
+
 	return 0;
 }
 
@@ -1273,6 +1341,8 @@ void intel_panel_init_backlight_funcs(struct drm_device *dev)
 						vlv_disable_mipi_backlight;
 			dev_priv->display.set_backlight =
 						vlv_set_mipi_backlight;
+			dev_priv->display.get_backlight =
+						vlv_get_mipi_backlight;
 		} else {
 			dev_priv->display.setup_backlight = vlv_setup_backlight;
 			dev_priv->display.enable_backlight =
@@ -1280,10 +1350,8 @@ void intel_panel_init_backlight_funcs(struct drm_device *dev)
 			dev_priv->display.disable_backlight =
 						vlv_disable_backlight;
 			dev_priv->display.set_backlight = vlv_set_backlight;
+			dev_priv->display.get_backlight = vlv_get_backlight;
 		}
-
-		dev_priv->display.get_backlight = vlv_get_backlight;
-
 	} else if (IS_GEN4(dev)) {
 		dev_priv->display.setup_backlight = i965_setup_backlight;
 		dev_priv->display.enable_backlight = i965_enable_backlight;
-- 
1.7.9.5

