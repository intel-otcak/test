From 0ed5679990153ca46c11197f051279713daf00fa Mon Sep 17 00:00:00 2001
Message-Id: <0ed5679990153ca46c11197f051279713daf00fa.1426574757.git.chang-joon.lee@intel.com>
In-Reply-To: <eba22108096acc90a0516b200c616db90ae0cb5f.1426574757.git.chang-joon.lee@intel.com>
References: <eba22108096acc90a0516b200c616db90ae0cb5f.1426574757.git.chang-joon.lee@intel.com>
From: Deepak S <deepak.s@intel.com>
Date: Wed, 11 Mar 2015 16:51:30 +0530
Subject: [PATCH 7/8] FOR_UPSTREAM [VPG]: drm/i915: Simplified the logic for
 delaying Display power gating.
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

On Valleyview, we found that Punit is entering S0i1 before Gfx driver hasÂ 
entered D0ix state which causes system instability. To workaround the issue we
defer the display power gating to end of runtime suspend allowing Gfx driver to
enter D0i3 state before the P-unit firmware enters S0i1.

Drop this patch once fix gets accepted in upstream

Issue: GMINL-6977
Change-Id: Iaa30d56cc4dd78c78e2809f62ef1a0be37778f7d
Signed-off-by: Deepak S <deepak.s@intel.com>
---
 drivers/gpu/drm/i915/i915_drv.c  |    3 +++
 drivers/gpu/drm/i915/intel_drv.h |    4 ++++
 drivers/gpu/drm/i915/intel_pm.c  |   30 ++++++++++++++++++++++++------
 3 files changed, 31 insertions(+), 6 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_drv.c b/drivers/gpu/drm/i915/i915_drv.c
index 220b306..620f127 100644
--- a/drivers/gpu/drm/i915/i915_drv.c
+++ b/drivers/gpu/drm/i915/i915_drv.c
@@ -1815,6 +1815,8 @@ static int vlv_suspend_complete(struct drm_i915_private *dev_priv)
 	if (err)
 		goto err2;
 
+	intel_display_power_rpm_put(dev_priv, PIPE_A, false);
+
 	return 0;
 
 err2:
@@ -1862,6 +1864,7 @@ static int vlv_resume_prepare(struct drm_i915_private *dev_priv,
 	if (rpm_resume) {
 		intel_init_clock_gating(dev);
 		i915_gem_restore_fences(dev);
+		intel_display_power_rpm_get(dev_priv, PIPE_A, false);
 	}
 
 	return ret;
diff --git a/drivers/gpu/drm/i915/intel_drv.h b/drivers/gpu/drm/i915/intel_drv.h
index 1f0b5fc..de25f89 100644
--- a/drivers/gpu/drm/i915/intel_drv.h
+++ b/drivers/gpu/drm/i915/intel_drv.h
@@ -1114,6 +1114,10 @@ bool intel_display_power_enabled(struct drm_i915_private *dev_priv,
 				 enum intel_display_power_domain domain);
 bool intel_display_power_enabled_unlocked(struct drm_i915_private *dev_priv,
 					  enum intel_display_power_domain domain);
+void intel_display_power_rpm_get(struct drm_i915_private *dev_priv,
+			     enum intel_display_power_domain domain, bool rpm);
+void intel_display_power_rpm_put(struct drm_i915_private *dev_priv,
+			     enum intel_display_power_domain domain, bool rpm);
 void intel_display_power_get(struct drm_i915_private *dev_priv,
 			     enum intel_display_power_domain domain);
 void intel_display_power_put(struct drm_i915_private *dev_priv,
diff --git a/drivers/gpu/drm/i915/intel_pm.c b/drivers/gpu/drm/i915/intel_pm.c
index 3741e6e..b3e3b61 100644
--- a/drivers/gpu/drm/i915/intel_pm.c
+++ b/drivers/gpu/drm/i915/intel_pm.c
@@ -7066,14 +7066,15 @@ mismatch:
 		  power_well->count, i915.disable_power_well);
 }
 
-void intel_display_power_get(struct drm_i915_private *dev_priv,
-			     enum intel_display_power_domain domain)
+void intel_display_power_rpm_get(struct drm_i915_private *dev_priv,
+			     enum intel_display_power_domain domain, bool rpm)
 {
 	struct i915_power_domains *power_domains;
 	struct i915_power_well *power_well;
 	int i;
 
-	intel_runtime_pm_get(dev_priv);
+	if (rpm)
+		intel_runtime_pm_get(dev_priv);
 
 	power_domains = &dev_priv->power_domains;
 
@@ -7099,8 +7100,8 @@ void intel_display_power_get(struct drm_i915_private *dev_priv,
 	mutex_unlock(&power_domains->lock);
 }
 
-void intel_display_power_put(struct drm_i915_private *dev_priv,
-			     enum intel_display_power_domain domain)
+void intel_display_power_rpm_put(struct drm_i915_private *dev_priv,
+			     enum intel_display_power_domain domain, bool rpm)
 {
 	struct i915_power_domains *power_domains;
 	struct i915_power_well *power_well;
@@ -7132,9 +7133,23 @@ void intel_display_power_put(struct drm_i915_private *dev_priv,
 
 	mutex_unlock(&power_domains->lock);
 
-	intel_runtime_pm_put(dev_priv);
+	if (rpm)
+		intel_runtime_pm_put(dev_priv);
+}
+
+void intel_display_power_get(struct drm_i915_private *dev_priv,
+				enum intel_display_power_domain domain)
+{
+	intel_display_power_rpm_get(dev_priv, domain, true);
 }
 
+void intel_display_power_put(struct drm_i915_private *dev_priv,
+				enum intel_display_power_domain domain)
+{
+	intel_display_power_rpm_put(dev_priv, domain, true);
+}
+
+
 static struct i915_power_domains *hsw_pwr;
 
 /* Display audio driver power well request */
@@ -7640,6 +7655,9 @@ void intel_power_domains_init_hw(struct drm_i915_private *dev_priv)
 	intel_display_set_init_power(dev_priv, true);
 	intel_power_domains_resume(dev_priv);
 	power_domains->initializing = false;
+
+	if (IS_VALLEYVIEW(dev_priv->dev))
+		intel_display_power_rpm_get(dev_priv, PIPE_A, false);
 }
 
 void intel_aux_display_runtime_get(struct drm_i915_private *dev_priv)
-- 
1.7.9.5

