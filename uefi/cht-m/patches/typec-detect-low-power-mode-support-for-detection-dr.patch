From 932ffcb1dd94a100c3c54f2e9ef7b6c0a7189d84 Mon Sep 17 00:00:00 2001
From: Albin B <albin.bala.krishnan@intel.com>
Date: Fri, 1 May 2015 20:55:07 +0530
Subject: [PATCH] [typec-detect]: low power mode support for detection driver

since the software does continous toggling every 50ms, system
can't enter low power mode. To prevent that, DRP toggling timer
is not enable by default or during unplug event. The phy should
inform detection driver to do DRP toggling on CC change. Since
the low power mode is handled from the phy suspend / resume
notifications are removed

Tracked-On: https://jira01.devtools.intel.com/browse/AKP-1521
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-34755
Change-Id: Iac72a6621ba8996680f2e94f17c6fb53c9327a6a
Signed-off-by: R, Kannappan <r.kannappan@intel.com>
---
 drivers/usb/typec/usb_typec_detect.c | 33 +++------------------------------
 include/linux/usb_typec_phy.h        |  2 --
 2 files changed, 3 insertions(+), 32 deletions(-)

diff --git a/drivers/usb/typec/usb_typec_detect.c b/drivers/usb/typec/usb_typec_detect.c
index 4a427c4..ea63744 100644
--- a/drivers/usb/typec/usb_typec_detect.c
+++ b/drivers/usb/typec/usb_typec_detect.c
@@ -270,11 +270,9 @@ static void detect_lock_ufp_work(struct work_struct *work)
 	ret = wait_for_completion_timeout(&detect->lock_ufp_complete, timeout);
 	if (ret == 0) {
 		mutex_lock(&detect->lock);
-		detect->state = DETECT_STATE_UNATTACHED_UFP;
+		detect->state = DETECT_STATE_UNATTACHED_DRP;
 		mutex_unlock(&detect->lock);
-		/* start the timer asap goto unattached dfp */
-		mod_timer(&detect->drp_timer, jiffies +
-					msecs_to_jiffies(1));
+		typec_switch_mode(detect->phy, TYPEC_MODE_DRP);
 	}
 	/* got vbus, goto attached ufp */
 
@@ -388,7 +386,7 @@ static void update_phy_state(struct work_struct *work)
 		detect->got_vbus = false;
 		typec_setup_cc(phy, 0, TYPEC_STATE_UNATTACHED_UFP);
 		mutex_unlock(&detect->lock);
-		if (phy->state == TYPEC_STATE_ATTACHED_UFP) {
+		if (detect->state == DETECT_STATE_ATTACHED_UFP) {
 			extcon_set_cable_state(detect->edev, "USB", false);
 			/* notify power supply */
 			cable_props.chrg_evt =
@@ -418,9 +416,6 @@ static void update_phy_state(struct work_struct *work)
 		mutex_lock(&detect->lock);
 		detect->state = DETECT_STATE_UNATTACHED_DRP;
 		mutex_unlock(&detect->lock);
-		/* start the timer asap */
-		mod_timer(&detect->drp_timer, jiffies +
-					msecs_to_jiffies(1));
 		break;
 	default:
 		dev_err(detect->phy->dev, "unknown event %d", detect->event);
@@ -452,28 +447,6 @@ static int typec_handle_phy_ntf(struct notifier_block *nb,
 		mod_timer(&detect->drp_timer, jiffies +
 				msecs_to_jiffies(1));
 		break;
-	case TYPEC_EVENT_DEV_SUSPEND:
-		if (detect->state == DETECT_STATE_ATTACHED_DFP) {
-			/* disable vbus */
-		} else if (detect->state == DETECT_STATE_UNATTACHED_UFP ||
-				detect->state == DETECT_STATE_UNATTACHED_DFP ||
-				detect->state == DETECT_STATE_UNATTACHED_DRP)  {
-			cancel_work_sync(&detect->dfp_work);
-			del_timer(&detect->drp_timer);
-			detect->state = DETECT_STATE_UNATTACHED_DRP;
-		}
-		break;
-	case TYPEC_EVENT_DEV_RESUME:
-		if (detect->state == DETECT_STATE_ATTACHED_DFP) {
-			/* enable vbus */
-		} else if (detect->state == DETECT_STATE_UNATTACHED_UFP ||
-			detect->state == DETECT_STATE_UNATTACHED_DFP ||
-			detect->state == DETECT_STATE_UNATTACHED_DRP) {
-			/* start the timer now */
-			mod_timer(&detect->drp_timer, jiffies +
-					msecs_to_jiffies(1));
-		}
-		break;
 	default:
 		handled = NOTIFY_DONE;
 	}
diff --git a/include/linux/usb_typec_phy.h b/include/linux/usb_typec_phy.h
index 1b4d36d..89f2b66 100644
--- a/include/linux/usb_typec_phy.h
+++ b/include/linux/usb_typec_phy.h
@@ -70,8 +70,6 @@ enum typec_event {
 	TYPEC_EVENT_DRP,
 	TYPEC_EVENT_TIMER,
 	TYPEC_EVENT_NONE,
-	TYPEC_EVENT_DEV_SUSPEND,
-	TYPEC_EVENT_DEV_RESUME,
 	TYPEC_EVENT_DEV_REMOVE,
 };
 
-- 
1.9.1

