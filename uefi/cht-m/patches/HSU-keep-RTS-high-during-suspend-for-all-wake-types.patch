From 620117c35ddc16aa6b9e50c4184a13014ad5b8c9 Mon Sep 17 00:00:00 2001
From: Frode Isaksen <frodex.isaksen@intel.com>
Date: Wed, 3 Jun 2015 17:03:36 +0200
Subject: [PATCH] HSU: keep RTS high during suspend for all wake types

Keep RTS high during suspend for all wake types, to
avoid loosing data when resuming.
RTS was not kept high for out-of-band wake sources,
and this caused Bluetooth loosing data if HW reset
is done in resume path.

Change-Id: I10abd2f634d0739e597bfbac13f609c5a98aae5d
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-38219
Signed-off-by: Frode Isaksen <frodex.isaksen@intel.com>
---
 drivers/tty/serial/hsu/hsu_plat.c | 5 +----
 1 file changed, 1 insertion(+), 4 deletions(-)

diff --git a/drivers/tty/serial/hsu/hsu_plat.c b/drivers/tty/serial/hsu/hsu_plat.c
index d7311f491dba..3f7ebd027535 100644
--- a/drivers/tty/serial/hsu/hsu_plat.c
+++ b/drivers/tty/serial/hsu/hsu_plat.c
@@ -50,9 +50,6 @@ static int cht_hw_set_rts(struct uart_hsu_port *up, int value)
 {
 	struct hsu_port_pin_cfg *pin_cfg = &up->port_cfg->pin_cfg;
 
-	if (!pin_cfg || pin_cfg->wake_src == no_wake)
-		return 0;
-
 	if (value) {
 		if (!pin_cfg->rts_gpio) {
 			pin_cfg->rts_gpio = gpiod_get_index(up->dev, "hsu_rts",
@@ -79,7 +76,7 @@ static int cht_hsu_hw_suspend(struct uart_hsu_port *up)
 	struct hsu_port_pin_cfg *pin_cfg = &up->port_cfg->pin_cfg;
 	int ret;
 
-	if (!pin_cfg || pin_cfg->wake_src == no_wake)
+	if (pin_cfg->wake_src == no_wake)
 		return 0;
 
 	switch (pin_cfg->wake_src) {
-- 
1.9.1

