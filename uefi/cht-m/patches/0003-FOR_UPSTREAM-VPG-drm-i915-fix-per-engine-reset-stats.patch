From 6337fd6eb061cdea37ca21772c5413374ef30ded Mon Sep 17 00:00:00 2001
Message-Id: <6337fd6eb061cdea37ca21772c5413374ef30ded.1436312509.git.chang-joon.lee@intel.com>
In-Reply-To: <d7f55a0f6423e9b14861f607af19ccac4e7f31d5.1436312509.git.chang-joon.lee@intel.com>
References: <d7f55a0f6423e9b14861f607af19ccac4e7f31d5.1436312509.git.chang-joon.lee@intel.com>
From: Tim Gore <tim.gore@intel.com>
Date: Fri, 5 Jun 2015 09:45:29 +0100
Subject: [PATCH 03/15] FOR_UPSTREAM [VPG]: drm/i915 fix per engine reset stats

With a per engine reset (in i915_handle_hung_ring) the
calls to i915_set_reset_status for each non-completed
batch buffer request are all made with guilty=false.
This means that hang_stats->batch_active remains zero,
implying that no batch buffer was involved in the hang.
This causes gem_reset_stats subtest reset-stats-render
(from IGT) to fail.
Modify the calls to i915_set_reset_status so that the
first request in the list that has not completed is
marked as "guilty". This is most likely the problem
batch, and in any case we are just counting stats and
we know that one batch must be responsible for the hang.

Change-Id: Iec5e1a0651e4295a4ec92e0208339539f7e5f207
For: VIZ-5758
Signed-off-by: Tim Gore <tim.gore@intel.com>
---
 drivers/gpu/drm/i915/i915_drv.c | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_drv.c b/drivers/gpu/drm/i915/i915_drv.c
index d3d0ae1..a94e4aa 100644
--- a/drivers/gpu/drm/i915/i915_drv.c
+++ b/drivers/gpu/drm/i915/i915_drv.c
@@ -908,6 +908,7 @@ int i915_handle_hung_ring(struct drm_device *dev, uint32_t ringid)
 	struct intel_context *current_context = NULL;
 	uint32_t hw_context_id1 = ~0u;
 	uint32_t hw_context_id2 = ~0u;
+	int guilty = 1;
 
 	acthd = intel_ring_get_active_head(ring);
 	completed_seqno = ring->get_seqno(ring, false);
@@ -920,8 +921,10 @@ int i915_handle_hung_ring(struct drm_device *dev, uint32_t ringid)
 	/* Search the request list to see which batch buffer caused
 	* the hang. Only checks requests that haven't yet completed.*/
 	list_for_each_entry(request, &ring->request_list, list) {
-		if (request && (request->seqno > completed_seqno))
-			i915_set_reset_status(dev_priv, request->ctx, false);
+		if (request && (request->seqno > completed_seqno)) {
+			i915_set_reset_status(dev_priv, request->ctx, guilty);
+			guilty = 0;
+		}
 	}
 
 	if (i915.enable_execlists) {
-- 
1.9.1

