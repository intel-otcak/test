From 772adfbb0fe1b984e6a53a62a8921666c11b26de Mon Sep 17 00:00:00 2001
From: Praveen Diwakar <praveen.diwakar@intel.com>
Date: Fri, 4 Jul 2014 01:41:00 +0530
Subject: [PATCH] ASoC: dapm: Fix hw_params override for CODEC<->CODEC link

be_fixup params were not applying properly during dai_link_event
callback. Need to derive param values again after be_fixup
is triggered.

Change-Id: I1890cfda96edd766c1a79c2249a7969bedd7dfdc
Tracked-On: https://jira01.devtools.intel.com/browse/GMINL-12531
Signed-off-by: Praveen Diwakar <praveen.diwakar@intel.com>
Signed-off-by: Samreen Nilofer <samreen.nilofer@intel.com>
---
 sound/soc/soc-dapm.c | 38 ++++++++++++++++++++++++++------------
 1 file changed, 26 insertions(+), 12 deletions(-)

diff --git a/sound/soc/soc-dapm.c b/sound/soc/soc-dapm.c
index 276c793d9aba..a585222aa5b4 100644
--- a/sound/soc/soc-dapm.c
+++ b/sound/soc/soc-dapm.c
@@ -3446,12 +3446,26 @@ int snd_soc_dapm_new_controls(struct snd_soc_dapm_context *dapm,
 }
 EXPORT_SYMBOL_GPL(snd_soc_dapm_new_controls);
 
+static int snd_soc_get_hw_params(struct snd_pcm_hw_params *params,
+		const struct snd_soc_pcm_stream *config)
+{
+	hw_param_interval(params, SNDRV_PCM_HW_PARAM_RATE)->min =
+		config->rate_min;
+	hw_param_interval(params, SNDRV_PCM_HW_PARAM_RATE)->max =
+		config->rate_max;
+
+	hw_param_interval(params, SNDRV_PCM_HW_PARAM_CHANNELS)->min
+		= config->channels_min;
+	hw_param_interval(params, SNDRV_PCM_HW_PARAM_CHANNELS)->max
+		= config->channels_max;
+}
+
 static int snd_soc_dai_link_event(struct snd_soc_dapm_widget *w,
 				  struct snd_kcontrol *kcontrol, int event)
 {
 	struct snd_soc_dapm_path *source_p, *sink_p;
 	struct snd_soc_dai *source, *sink;
-	const struct snd_soc_pcm_stream *config = w->params;
+	struct snd_soc_pcm_stream *config = w->params;
 	struct snd_pcm_substream substream;
 	struct snd_pcm_hw_params *params = NULL;
 	u64 fmt;
@@ -3490,18 +3504,9 @@ static int snd_soc_dai_link_event(struct snd_soc_dapm_widget *w,
 		ret = -ENOMEM;
 		goto out;
 	}
-	snd_mask_set(hw_param_mask(params, SNDRV_PCM_HW_PARAM_FORMAT), fmt);
-
-	hw_param_interval(params, SNDRV_PCM_HW_PARAM_RATE)->min =
-		config->rate_min;
-	hw_param_interval(params, SNDRV_PCM_HW_PARAM_RATE)->max =
-		config->rate_max;
-
-	hw_param_interval(params, SNDRV_PCM_HW_PARAM_CHANNELS)->min
-		= config->channels_min;
-	hw_param_interval(params, SNDRV_PCM_HW_PARAM_CHANNELS)->max
-		= config->channels_max;
 
+	snd_mask_set(hw_param_mask(params, SNDRV_PCM_HW_PARAM_FORMAT), fmt);
+	snd_soc_get_hw_params(params, config);
 	memset(&substream, 0, sizeof(substream));
 
 	switch (event) {
@@ -3538,6 +3543,10 @@ static int snd_soc_dai_link_event(struct snd_soc_dapm_widget *w,
 					dev_err(source->dev, "ASoC: fix_up_be()	failed: %d\n", ret);
 					goto out;
 				}
+				if (w->dai_link->params) {
+					config = w->dai_link->params;
+					snd_soc_get_hw_params(params, config);
+				}
 			}
 			ret = source->driver->ops->hw_params(&substream,
 							     params, source);
@@ -3558,6 +3567,11 @@ static int snd_soc_dai_link_event(struct snd_soc_dapm_widget *w,
 					dev_err(source->dev, "ASoC: fix_up_be() failed: %d\n", ret);
 					goto out;
 				}
+
+				if (w->dai_link->params) {
+					config = w->dai_link->params;
+					snd_soc_get_hw_params(params, config);
+				}
 			}
 			ret = sink->driver->ops->hw_params(&substream, params,
 							   sink);
-- 
1.9.1

