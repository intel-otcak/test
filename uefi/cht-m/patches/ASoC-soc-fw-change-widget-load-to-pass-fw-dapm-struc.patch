From a48988d859c0be5e2198bd525bf5ab3f17ada138 Mon Sep 17 00:00:00 2001
From: Mythri P K <mythri.p.k@intel.com>
Date: Mon, 12 May 2014 06:54:06 +0530
Subject: [PATCH 17/39] ASoC: soc-fw: change widget load to pass fw dapm struct

Issue: GMINL-3679

Modify widget load function to take fw_dapm struct as a
field so that it can be passed to the component drivers
to copy private data.

Change-Id: Id77a7b3fc7edec35deadfd32d353439d217f4672
Signed-off-by: Mythri P K <mythri.p.k@intel.com>
---
 include/sound/soc-fw.h |  9 ++++++---
 sound/soc/soc-fw.c     | 11 ++++++-----
 2 files changed, 12 insertions(+), 8 deletions(-)

diff --git a/include/sound/soc-fw.h b/include/sound/soc-fw.h
index 8a087b0f..2f74074 100644
--- a/include/sound/soc-fw.h
+++ b/include/sound/soc-fw.h
@@ -55,7 +55,8 @@ struct snd_soc_fw_codec_ops {
 	int (*control_load)(struct snd_soc_codec *, struct snd_kcontrol_new *);
 
 	/* external widget init - can be used to set ext funcs + pdata */
-	int (*widget_load)(struct snd_soc_codec *, struct snd_soc_dapm_widget *);
+	int (*widget_load)(struct snd_soc_codec *, struct snd_soc_dapm_widget *,
+				struct snd_soc_fw_dapm_widget *);
 
 	/* callback to handle vendor data */
 	int (*vendor_load)(struct snd_soc_codec *, struct snd_soc_fw_hdr *);
@@ -78,7 +79,8 @@ struct snd_soc_fw_platform_ops {
 	int (*control_load)(struct snd_soc_platform *, struct snd_kcontrol_new *);
 
 	/* external widget init - can be used to set ext funcs + pdata */
-	int (*widget_load)(struct snd_soc_platform *, struct snd_soc_dapm_widget *);
+	int (*widget_load)(struct snd_soc_platform *, struct snd_soc_dapm_widget *,
+			struct snd_soc_fw_dapm_widget *);
 
 	/* external dai init - can be used to set ext funcs + pdata */
 	int (*dai_load)(struct snd_soc_platform *, struct snd_soc_dai_driver *dai_drv, int n);
@@ -107,7 +109,8 @@ struct snd_soc_fw_card_ops {
 	int (*control_load)(struct snd_soc_card *, struct snd_kcontrol_new *);
 
 	/* external widget init - can be used to set ext funcs + pdata */
-	int (*widget_load)(struct snd_soc_card *, struct snd_soc_dapm_widget *);
+	int (*widget_load)(struct snd_soc_card *, struct snd_soc_dapm_widget *,
+			struct snd_soc_fw_dapm_widget *);
 
 	/* callback to handle vendor data */
 	int (*vendor_load)(struct snd_soc_card *, struct snd_soc_fw_hdr *);
diff --git a/sound/soc/soc-fw.c b/sound/soc/soc-fw.c
index 6cb4ad1..92bea0a 100644
--- a/sound/soc/soc-fw.c
+++ b/sound/soc/soc-fw.c
@@ -246,16 +246,17 @@ static int soc_fw_vendor_load(struct soc_fw *sfw, struct snd_soc_fw_hdr *hdr)
 
 /* optionally pass new dynamic widget to component driver. mainly for external
  widgets where we can assign private data/ops */
-static int soc_fw_widget_load(struct soc_fw *sfw, struct snd_soc_dapm_widget *w)
+static int soc_fw_widget_load(struct soc_fw *sfw, struct snd_soc_dapm_widget *w,
+		struct snd_soc_fw_dapm_widget *fw_w)
 {
 	if (sfw->codec && sfw->codec_ops && sfw->codec_ops->widget_load)
-		return sfw->codec_ops->widget_load(sfw->codec, w);
+		return sfw->codec_ops->widget_load(sfw->codec, w, fw_w);
 
 	if (sfw->platform && sfw->platform_ops && sfw->platform_ops->widget_load)
-		return sfw->platform_ops->widget_load(sfw->platform, w);
+		return sfw->platform_ops->widget_load(sfw->platform, w, fw_w);
 
 	if (sfw->card && sfw->card_ops && sfw->card_ops->widget_load)
-		return sfw->card_ops->widget_load(sfw->card, w);
+		return sfw->card_ops->widget_load(sfw->card, w, fw_w);
 
 	dev_dbg(sfw->dev, "ASoC: no handler specified for ext widget %s\n",
 		w->name);
@@ -1171,7 +1172,7 @@ static int soc_fw_dapm_widget_create(struct soc_fw *sfw,
 	}
 
 widget:
-	ret = soc_fw_widget_load(sfw, &widget);
+	ret = soc_fw_widget_load(sfw, &widget, w);
 		if (ret < 0)
 			goto hdr_err;
 
-- 
1.9.1

