From 2fcc266ed845deece16ba1c2813f13210749f1ab Mon Sep 17 00:00:00 2001
Message-Id: <2fcc266ed845deece16ba1c2813f13210749f1ab.1436852670.git.chang-joon.lee@intel.com>
In-Reply-To: <54e65a9ecec2815cf9cac81c7e32c2c6f7271166.1436852670.git.chang-joon.lee@intel.com>
References: <54e65a9ecec2815cf9cac81c7e32c2c6f7271166.1436852670.git.chang-joon.lee@intel.com>
From: Shubhangi Shrivastava <shubhangi.shrivastava@intel.com>
Date: Tue, 2 Jun 2015 11:26:25 +0530
Subject: [PATCH 3/4] REVERTME [VPG]: drm/i915: Enabling interrupts for LPE
 audio on DP

This patch enables LPE audio interrupts on the pipe that drives the
external panel, which is obtained from the pipe field of hdmi_priv
structure, which is commonly used by both DP and HDMI.
Depending on the driving pipe, audio status register and IMR are
programmed and audio buffer status is notified.

REVERTME:LP audio is not available upstream and may not be for
some more time which is required for this.

Issue: GMINL-10757
Change-Id: Ibaf9b5e629ececc1b54dbfa856fc3449586f8b74
Signed-off-by: Shubhangi Shrivastava <shubhangi.shrivastava@intel.com>
Signed-off-by: Sivakumar Thulasimani <sivakumar.thulasimani@intel.com>
Signed-off-by: Durgadoss R <durgadoss.r@intel.com>
---
 drivers/gpu/drm/i915/hdmi_audio_if.c |  7 ++---
 drivers/gpu/drm/i915/hdmi_audio_if.h |  4 +--
 drivers/gpu/drm/i915/i915_irq.c      | 51 +++++++++++++++++++++++-------------
 drivers/gpu/drm/i915/i915_reg.h      |  9 +++++++
 4 files changed, 48 insertions(+), 23 deletions(-)

diff --git a/drivers/gpu/drm/i915/hdmi_audio_if.c b/drivers/gpu/drm/i915/hdmi_audio_if.c
index 975d6f0..3f279b4 100644
--- a/drivers/gpu/drm/i915/hdmi_audio_if.c
+++ b/drivers/gpu/drm/i915/hdmi_audio_if.c
@@ -307,6 +307,7 @@ static int hdmi_audio_set_caps(enum had_caps_list set_element,
 	u32 int_masks = 0;
 	u32 chicken_bit;
 	u32 audio_enable;
+	int pipe = hdmi_priv->pipe;
 
 	DRM_DEBUG_DRIVER("\n");
 
@@ -352,7 +353,7 @@ static int hdmi_audio_set_caps(enum had_caps_list set_element,
 		if (*((u32 *)capabilties) & HDMI_AUDIO_UNDERRUN)
 			int_masks |= I915_HDMI_AUDIO_UNDERRUN_ENABLE;
 		dev_priv->hdmi_audio_interrupt_mask |= int_masks;
-		i915_enable_hdmi_audio_int(dev);
+		i915_enable_hdmi_audio_int(dev, pipe);
 		break;
 	case HAD_SET_DISABLE_AUDIO_INT:
 		if (*((u32 *)capabilties) & HDMI_AUDIO_UNDERRUN)
@@ -360,9 +361,9 @@ static int hdmi_audio_set_caps(enum had_caps_list set_element,
 		dev_priv->hdmi_audio_interrupt_mask &= ~int_masks;
 
 		if (dev_priv->hdmi_audio_interrupt_mask)
-			i915_enable_hdmi_audio_int(dev);
+			i915_enable_hdmi_audio_int(dev, pipe);
 		else
-			i915_disable_hdmi_audio_int(dev);
+			i915_disable_hdmi_audio_int(dev, pipe);
 		break;
 	default:
 		break;
diff --git a/drivers/gpu/drm/i915/hdmi_audio_if.h b/drivers/gpu/drm/i915/hdmi_audio_if.h
index ed2f1da..34b97d3 100644
--- a/drivers/gpu/drm/i915/hdmi_audio_if.h
+++ b/drivers/gpu/drm/i915/hdmi_audio_if.h
@@ -120,8 +120,8 @@ extern void mid_hdmi_audio_signal_event(struct drm_device *dev,
 		enum had_event_type event);
 
 extern void hdmi_get_eld(uint8_t *eld);
-extern int i915_enable_hdmi_audio_int(struct drm_device *dev);
-extern int i915_disable_hdmi_audio_int(struct drm_device *dev);
+extern int i915_enable_hdmi_audio_int(struct drm_device *dev, int pipe);
+extern int i915_disable_hdmi_audio_int(struct drm_device *dev, int pipe);
 extern uint32_t set_dp_mode(uint32_t reg, uint32_t val);
 extern int mid_hdmi_audio_setup(
 	had_event_call_back audio_callbacks,
diff --git a/drivers/gpu/drm/i915/i915_irq.c b/drivers/gpu/drm/i915/i915_irq.c
index 1034162..22f1b40 100644
--- a/drivers/gpu/drm/i915/i915_irq.c
+++ b/drivers/gpu/drm/i915/i915_irq.c
@@ -701,14 +701,15 @@ i915_disable_pipestat(struct drm_i915_private *dev_priv, enum pipe pipe,
 void
 i915_enable_lpe_pipestat(struct drm_i915_private *dev_priv, int pipe)
 {
-	u32 mask;
+	u32 mask, reg;
 	mask = dev_priv->hdmi_audio_interrupt_mask;
 	mask |= (I915_HDMI_AUDIO_UNDERRUN | I915_HDMI_AUDIO_BUFFER_DONE);
 
 	/* Enable the interrupt, clear any pending status */
 	if (IS_CHERRYVIEW(dev_priv->dev)) {
-		I915_WRITE(I915_LPE_AUDIO_HDMI_STATUS_C, mask);
-		POSTING_READ(I915_LPE_AUDIO_HDMI_STATUS_C);
+		reg = I915_LPE_AUDIO_HDMI_STATUS(pipe);
+		I915_WRITE(reg, mask);
+		POSTING_READ(reg);
 	} else {
 		I915_WRITE(I915_LPE_AUDIO_HDMI_STATUS_B, mask);
 		POSTING_READ(I915_LPE_AUDIO_HDMI_STATUS_B);
@@ -718,14 +719,15 @@ i915_enable_lpe_pipestat(struct drm_i915_private *dev_priv, int pipe)
 void
 i915_disable_lpe_pipestat(struct drm_i915_private *dev_priv, int pipe)
 {
-	u32 mask;
+	u32 mask, reg;
 	mask = dev_priv->hdmi_audio_interrupt_mask;
 	mask |= (I915_HDMI_AUDIO_UNDERRUN | I915_HDMI_AUDIO_BUFFER_DONE);
 
 	/* Disable the interrupt, clear any pending status */
 	if (IS_CHERRYVIEW(dev_priv->dev)) {
-		I915_WRITE(I915_LPE_AUDIO_HDMI_STATUS_C, mask);
-		POSTING_READ(I915_LPE_AUDIO_HDMI_STATUS_C);
+		reg = I915_LPE_AUDIO_HDMI_STATUS(pipe);
+		I915_WRITE(reg, mask);
+		POSTING_READ(reg);
 	} else {
 		I915_WRITE(I915_LPE_AUDIO_HDMI_STATUS_B, mask);
 		POSTING_READ(I915_LPE_AUDIO_HDMI_STATUS_B);
@@ -2225,6 +2227,12 @@ static void valleyview_pipestat_irq_handler(struct drm_device *dev, u32 iir)
 		if (iir & I915_LPE_PIPE_C_INTERRUPT)
 			i915_notify_audio_buffer_status(dev,
 						I915_LPE_AUDIO_HDMI_STATUS_C);
+		if (iir & CHV_I915_LPE_PIPE_B_INTERRUPT)
+			i915_notify_audio_buffer_status(dev,
+						I915_LPE_AUDIO_HDMI_STATUS_B);
+		if (iir & CHV_I915_LPE_PIPE_A_INTERRUPT)
+			i915_notify_audio_buffer_status(dev,
+						I915_LPE_AUDIO_HDMI_STATUS_A);
 	} else {
 		if (iir & I915_LPE_PIPE_B_INTERRUPT)
 			i915_notify_audio_buffer_status(dev,
@@ -3333,18 +3341,20 @@ static void i915_disable_vblank(struct drm_device *dev, int pipe)
 }
 
 #ifdef CONFIG_SUPPORT_LPDMA_HDMI_AUDIO
-int i915_enable_hdmi_audio_int(struct drm_device *dev)
+int i915_enable_hdmi_audio_int(struct drm_device *dev, int pipe)
 {
 	struct drm_i915_private *dev_priv = dev->dev_private;
 	unsigned long irqflags;
-	u32 imr;
-	int pipe = 1;
+	u32 imr, int_bit;
 
 	spin_lock_irqsave(&dev_priv->irq_lock, irqflags);
 	imr = I915_READ(VLV_IMR);
-	if (IS_CHERRYVIEW(dev_priv->dev))
-		imr &= ~I915_LPE_PIPE_C_INTERRUPT;
-	else {
+	if (IS_CHERRYVIEW(dev_priv->dev)) {
+		int_bit = (pipe ? (CHV_I915_LPE_PIPE_B_INTERRUPT >>
+					((pipe - 1) * 9)) :
+					CHV_I915_LPE_PIPE_A_INTERRUPT);
+		imr &= ~int_bit;
+	} else {
 		/* Audio is on Stream B */
 		imr &= ~I915_LPE_PIPE_B_INTERRUPT;
 	}
@@ -3355,17 +3365,20 @@ int i915_enable_hdmi_audio_int(struct drm_device *dev)
 	return 0;
 }
 
-int i915_disable_hdmi_audio_int(struct drm_device *dev)
+int i915_disable_hdmi_audio_int(struct drm_device *dev, int pipe)
 {
 	struct drm_i915_private *dev_priv = dev->dev_private;
 	unsigned long irqflags;
-	u32 imr;
-	int pipe = 1;
+	u32 imr, int_bit;
 
 	spin_lock_irqsave(&dev_priv->irq_lock, irqflags);
 	imr = I915_READ(VLV_IMR);
-	if (IS_CHERRYVIEW(dev_priv->dev))
-		imr |= I915_LPE_PIPE_C_INTERRUPT;
+	if (IS_CHERRYVIEW(dev_priv->dev)) {
+		int_bit = (pipe ? (CHV_I915_LPE_PIPE_B_INTERRUPT >>
+					((pipe - 1) * 9)) :
+					CHV_I915_LPE_PIPE_A_INTERRUPT);
+		imr |= int_bit;
+	}
 	else
 		/* Audio is on Stream B */
 		imr |= I915_LPE_PIPE_B_INTERRUPT;
@@ -4309,7 +4322,9 @@ static int cherryview_irq_postinstall(struct drm_device *dev)
 		I915_DISPLAY_PIPE_A_EVENT_INTERRUPT |
 		I915_DISPLAY_PIPE_B_EVENT_INTERRUPT |
 		I915_DISPLAY_PIPE_C_EVENT_INTERRUPT |
-		I915_LPE_PIPE_C_INTERRUPT;
+		I915_LPE_PIPE_C_INTERRUPT |
+		CHV_I915_LPE_PIPE_A_INTERRUPT |
+		CHV_I915_LPE_PIPE_B_INTERRUPT;
 	u32 pipestat_enable = PLANE_FLIP_DONE_INT_STATUS_VLV |
 		SPRITE0_FLIP_DONE_INT_STATUS_VLV |
 		SPRITE1_FLIP_DONE_INT_STATUS_VLV |
diff --git a/drivers/gpu/drm/i915/i915_reg.h b/drivers/gpu/drm/i915/i915_reg.h
index 43c1be0..a559a0a 100644
--- a/drivers/gpu/drm/i915/i915_reg.h
+++ b/drivers/gpu/drm/i915/i915_reg.h
@@ -1662,6 +1662,8 @@ enum punit_power_well {
 #define I915_LPE_PIPE_B_INTERRUPT	(1<<20)
 #define I915_LPE_PIPE_A_INTERRUPT	(1<<21)
 #define I915_LPE_PIPE_C_INTERRUPT			(1<<12)
+#define CHV_I915_LPE_PIPE_A_INTERRUPT		(1<<20)
+#define CHV_I915_LPE_PIPE_B_INTERRUPT		(1<<21)
 #define I915_HDMI_AUDIO_UNDERRUN	(1UL<<31)
 #define I915_HDMI_AUDIO_BUFFER_DONE	(1UL<<29)
 #define I915_HDMI_AUDIO_UNDERRUN_ENABLE	(1UL<<15)
@@ -1672,6 +1674,13 @@ enum punit_power_well {
 #define AUD_CONFIG_VALID_BIT			(1<<9)
 #define AUD_CONFIG_DP_MODE				(1<<15)
 #define AUD_CONFIG_BLOCK_BIT			(1<<7)
+#define HDMI_LPE_AUDIO_PIPE_OFFSET		0x100
+#define HDMI_LPE_AUDIO_PIPE_BC_OFFSET(pipe) \
+	(I915_LPE_AUDIO_HDMI_STATUS_B + \
+	(pipe - 1) * HDMI_LPE_AUDIO_PIPE_OFFSET)
+#define I915_LPE_AUDIO_HDMI_STATUS(pipe) \
+	(pipe ? (HDMI_LPE_AUDIO_PIPE_BC_OFFSET(pipe)) : \
+	I915_LPE_AUDIO_HDMI_STATUS_A)
 
 #define GEN7_FF_THREAD_MODE		0x20a0
 #define   GEN7_FF_SCHED_MASK		0x0077070
-- 
1.9.1

