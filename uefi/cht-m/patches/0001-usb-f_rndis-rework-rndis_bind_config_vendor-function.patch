From f63521c1594968956c7302b84b33bcc2a5120b83 Mon Sep 17 00:00:00 2001
From: "Du, Changbin" <changbinx.du@intel.com>
Date: Thu, 30 Oct 2014 17:23:06 +0800
Subject: [PATCH 1/1] usb: f_rndis: rework rndis_bind_config_vendor function

In current rndis driver, rndis function is declared by
DECLARE_USB_FUNCTION macro. So it should use
usb_get_function_instance() and  usb_get_function()
interface to alloc usb_function structure corresponding
to f_rndis driver update. It should be done in android
gadget specific bind function rndis_bind_config_vendor().

Change-Id: I54a4e90a29e03a675455c674f1956ba7c54f83c4
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-7385
Signed-off-by: Du, Changbin <changbinx.du@intel.com>
---
 drivers/usb/gadget/f_rndis.c |   70 +++++++++++++++---------------------------
 1 file changed, 25 insertions(+), 45 deletions(-)

diff --git a/drivers/usb/gadget/f_rndis.c b/drivers/usb/gadget/f_rndis.c
index a3a220890b58..2ac790c567ae 100644
--- a/drivers/usb/gadget/f_rndis.c
+++ b/drivers/usb/gadget/f_rndis.c
@@ -822,59 +822,39 @@ fail:
 	return status;
 }
 
-static void
-rndis_old_unbind(struct usb_configuration *c, struct usb_function *f)
-{
-	struct f_rndis		*rndis = func_to_rndis(f);
-
-	rndis_deregister(rndis->config);
-
-	usb_free_all_descriptors(f);
-
-	kfree(rndis->notify_req->buf);
-	usb_ep_free_request(rndis->notify, rndis->notify_req);
-
-	kfree(rndis);
-}
-
 int
 rndis_bind_config_vendor(struct usb_configuration *c, u8 ethaddr[ETH_ALEN],
 		u32 vendorID, const char *manufacturer, struct eth_dev *dev)
 {
-	struct f_rndis	*rndis;
-	int		status;
+	struct usb_function_instance *func_inst;
+	struct usb_function *func;
+	struct f_rndis_opts *opts;
+	int status;
 
 	/* allocate and initialize one new instance */
-	status = -ENOMEM;
-	rndis = kzalloc(sizeof *rndis, GFP_KERNEL);
-	if (!rndis)
-		goto fail;
-
-	memcpy(rndis->ethaddr, ethaddr, ETH_ALEN);
-	rndis->vendorID = vendorID;
-	rndis->manufacturer = manufacturer;
-
-	rndis->port.ioport = dev;
-	/* RNDIS activates when the host changes this filter */
-	rndis->port.cdc_filter = 0;
-
-	/* RNDIS has special (and complex) framing */
-	rndis->port.header_len = sizeof(struct rndis_packet_msg_type);
-	rndis->port.wrap = rndis_add_header;
-	rndis->port.unwrap = rndis_rm_hdr;
-
-	rndis->port.func.name = "rndis";
-	/* descriptors are per-instance copies */
-	rndis->port.func.bind = rndis_bind;
-	rndis->port.func.unbind = rndis_old_unbind;
-	rndis->port.func.set_alt = rndis_set_alt;
-	rndis->port.func.setup = rndis_setup;
-	rndis->port.func.disable = rndis_disable;
+	func_inst = usb_get_function_instance("rndis");
+	if (IS_ERR(func_inst))
+		return PTR_ERR(func_inst);
+
+	opts =  container_of(func_inst, struct f_rndis_opts, func_inst);
+	opts->vendor_id = vendorID;
+	opts->manufacturer = manufacturer;
+
+	func = usb_get_function(func_inst);
+	if (IS_ERR(func)) {
+		status = PTR_ERR(func);
+		goto err_put_func_inst;
+	}
 
-	status = usb_add_function(c, &rndis->port.func);
+	status = usb_add_function(c, func);
 	if (status)
-		kfree(rndis);
-fail:
+		goto err_put_func;
+	return 0;
+
+err_put_func:
+	usb_put_function(func);
+err_put_func_inst:
+	usb_put_function_instance(func_inst);
 	return status;
 }
 
-- 
1.7.9.5

