From 48d0b74ba8db298b9112409b21ca9627a174297f Mon Sep 17 00:00:00 2001
From: Biju Chakkachattil <bijux.chakkachattil@intel.com>
Date: Thu, 25 Jun 2015 02:26:27 +0530
Subject: [PATCH] typec: handle suspend/resume of fusb300

while resuming, fusb300 interrupt is trigerred before the
i2c controller resumed. Handling the suspend/resume of fusb300
by disable/enable fusb300 interrupt.

Change-Id: I7a793dd9ef0f9954c33a02b235181677b9307274
Signed-off-by: Biju Chakkachattil <bijux.chakkachattil@intel.com>
Signed-off-by: R, Kannappan <r.kannappan@intel.com>
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-37810
---
 drivers/usb/typec/phy-fusb300.c | 37 +++++++++++++++++++++++++++++++++++--
 1 file changed, 35 insertions(+), 2 deletions(-)

diff --git a/drivers/usb/typec/phy-fusb300.c b/drivers/usb/typec/phy-fusb300.c
index e5faa4e39af9..33a4a7706bb2 100644
--- a/drivers/usb/typec/phy-fusb300.c
+++ b/drivers/usb/typec/phy-fusb300.c
@@ -1437,8 +1437,7 @@ static int fusb300_probe(struct i2c_client *client,
 
 		ret = devm_request_threaded_irq(&client->dev, client->irq,
 				NULL, fusb300_interrupt,
-				IRQF_ONESHOT | IRQF_TRIGGER_LOW |
-				IRQF_NO_SUSPEND,
+				IRQF_ONESHOT | IRQF_TRIGGER_LOW,
 				client->name, chip);
 		if (ret < 0) {
 			dev_err(&client->dev,
@@ -1481,6 +1480,38 @@ static int fusb300_resume(struct device *dev)
 	return 0;
 }
 
+static int fusb300_late_suspend(struct device *dev)
+{
+	struct fusb300_chip *chip;
+
+	chip = dev_get_drvdata(dev);
+
+	/* Disable the irq during suspend to prevent fusb300
+	isr executed before the i2c controller resume.*/
+	if (chip->client->irq) {
+		disable_irq(chip->client->irq);
+		enable_irq_wake(chip->client->irq);
+	}
+
+	return 0;
+}
+
+static int fusb300_early_resume(struct device *dev)
+{
+	struct fusb300_chip *chip;
+
+	chip = dev_get_drvdata(dev);
+
+	/* Enable the irq after resume to prevent fusb300
+	isr executed before the i2c controller resume.*/
+	if (chip->client->irq) {
+		disable_irq_wake(chip->client->irq);
+		enable_irq(chip->client->irq);
+	}
+
+	return 0;
+}
+
 static int fusb300_runtime_suspend(struct device *dev)
 {
 	return 0;
@@ -1502,6 +1533,8 @@ static const struct dev_pm_ops fusb300_pm_ops = {
 	SET_RUNTIME_PM_OPS(fusb300_runtime_suspend,
 			fusb300_runtime_resume,
 			fusb300_runtime_idle)
+	SET_LATE_SYSTEM_SLEEP_PM_OPS(fusb300_late_suspend,
+			fusb300_early_resume)
 };
 
 
-- 
1.9.1

