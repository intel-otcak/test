From 50a5e06e9c862a3606966750d4c5ec5ea56f85c3 Mon Sep 17 00:00:00 2001
From: Ecco park <eccopark@broadcom.com>
Date: Thu, 2 Oct 2014 12:24:17 -0700
Subject: [PATCH 06/27] net: wireless: bcmdhd: add recovery logic for resumed
 on timeout

17755061 Wi-Fi stuck in Off position
17734434 Kernel Panic when Scanning wifi networks

Due to unknown reason of linkdown of PCIe, our DHD goes to weird stage.
Normally we should get linkdown irq of PCIe, but for some case, we don't
get any linkdown irq of PCIe.
In this case, we cannot recover PCIe registers when we turn off/on again.
To recover PCIe register properly, we should set bus->islinkdown=true for
resumed on timeout.

Change-Id: Ie135b05edb47a274cecaaa50c8e418118b7bbf89
Signed-off-by: Ecco park <eccopark@broadcom.com>
---
 drivers/net/wireless/bcmdhd/dhd_pcie.c | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/drivers/net/wireless/bcmdhd/dhd_pcie.c b/drivers/net/wireless/bcmdhd/dhd_pcie.c
index a6675d2..c8bcbc4 100644
--- a/drivers/net/wireless/bcmdhd/dhd_pcie.c
+++ b/drivers/net/wireless/bcmdhd/dhd_pcie.c
@@ -1182,9 +1182,12 @@ int dhd_bus_rxctl(struct dhd_bus *bus, uchar *msg, uint msglen)
 	else
 		bus->dhd->rx_ctlerrs++;
 
-	if (bus->dhd->rxcnt_timeout >= MAX_CNTL_TX_TIMEOUT)
+	if (bus->dhd->rxcnt_timeout >= MAX_CNTL_TX_TIMEOUT) {
+#ifdef MSM_PCIE_LINKDOWN_RECOVERY
+		bus->islinkdown = TRUE;
+#endif /* SUPPORT_LINKDOWN_RECOVERY */
 		return -ETIMEDOUT;
-
+	}
 	if (bus->dhd->dongle_trap_occured)
 		return -EREMOTEIO;
 
-- 
1.9.1

