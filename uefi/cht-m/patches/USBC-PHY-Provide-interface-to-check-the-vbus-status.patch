From 8f8f2c7bab66aca5e24d4df0b0c12e43a16af9fb Mon Sep 17 00:00:00 2001
From: Venkataramana Kotakonda <venkataramana.kotakonda@intel.com>
Date: Thu, 13 Aug 2015 18:11:01 +0530
Subject: [PATCH] USBC-PHY: Provide interface to check the vbus status.

This patch will add interface to typec phy to check the
VBUS present status.

Change-Id: I43033e69366e339ca9f9063d4c7c57ba5a1e93fb
Tracked-On: https://jira01.devtools.intel.com/browse/GMINL-16297
Signed-off-by: Venkataramana Kotakonda <venkataramana.kotakonda@intel.com>
---
 drivers/usb/typec/phy-fusb300.c | 14 ++++++++++++++
 include/linux/usb_typec_phy.h   |  1 +
 2 files changed, 15 insertions(+)

diff --git a/drivers/usb/typec/phy-fusb300.c b/drivers/usb/typec/phy-fusb300.c
index 0cc8861..9fd8aed 100644
--- a/drivers/usb/typec/phy-fusb300.c
+++ b/drivers/usb/typec/phy-fusb300.c
@@ -881,6 +881,7 @@ static void fusb300_handle_vbus_int(struct fusb300_chip *chip, int vbus_on)
 	state = phy->state;
 	chip->i_vbus = (bool)vbus_on;
 	mutex_unlock(&chip->lock);
+	dev_dbg(chip->dev, "%s: state=%d, vbus=%d\n", __func__, state, vbus_on);
 	if (vbus_on) {
 		if (state == TYPEC_STATE_PU_PD_SWAP) {
 			mutex_lock(&chip->lock);
@@ -1091,6 +1092,18 @@ static irqreturn_t fusb300_interrupt(int id, void *dev)
 	return IRQ_HANDLED;
 }
 
+static bool fusb300_is_vbus_on(struct typec_phy *phy)
+{
+	struct fusb300_chip *chip = dev_get_drvdata(phy->dev);
+	bool vbus;
+
+	mutex_lock(&chip->lock);
+	vbus = chip->i_vbus;
+	mutex_unlock(&chip->lock);
+
+	return vbus;
+}
+
 static int fusb300_reset_pd(struct typec_phy *phy)
 {
 	int ret;
@@ -1691,6 +1704,7 @@ static int fusb300_probe(struct i2c_client *client,
 	chip->phy.flush_fifo = fusb300_flush_fifo;
 	chip->phy.send_packet = fusb300_send_pkt;
 	chip->phy.recv_packet = fusb300_recv_pkt;
+	chip->phy.is_vbus_on = fusb300_is_vbus_on;
 	chip->phy.set_pu_pd = fusb300_set_pu_pd;
 	if (!chip->is_fusb300) {
 		chip->phy.setup_role = fusb300_setup_role;
diff --git a/include/linux/usb_typec_phy.h b/include/linux/usb_typec_phy.h
index 1b71e0b..441c343 100644
--- a/include/linux/usb_typec_phy.h
+++ b/include/linux/usb_typec_phy.h
@@ -210,6 +210,7 @@ struct typec_phy {
 	int (*enable_autocrc)(struct typec_phy *phy, bool en);
 	int (*set_pu_pd)(struct typec_phy *phy, bool pu_pd);
 	int (*enable_detection)(struct typec_phy *phy, bool en);
+	bool (*is_vbus_on)(struct typec_phy *phy);
 };
 
 extern struct typec_phy *typec_get_phy(int type);
-- 
1.9.1

