From 20f96b27c7ff931912b2ea02d2a165c1d7e2a9e1 Mon Sep 17 00:00:00 2001
Message-Id: <20f96b27c7ff931912b2ea02d2a165c1d7e2a9e1.1429601425.git.chang-joon.lee@intel.com>
In-Reply-To: <20df33cbe9e95d11653023b1a6201653c517d353.1429601425.git.chang-joon.lee@intel.com>
References: <20df33cbe9e95d11653023b1a6201653c517d353.1429601425.git.chang-joon.lee@intel.com>
From: vandita kulkarni <vandita.kulkarni@intel.com>
Date: Thu, 16 Apr 2015 23:04:44 +0530
Subject: [PATCH 6/9] SQUASHME! [VPG]: drm/i915: Update SR watermark in
 maxfifo mode.

This patch updates the SR wm values in case of maxfifo enabled.

SQUASHME: This patch needs to me squashed with
	commit e8c876f7944d03b2748c9afe355ba57d6d313e25
	Author: vandita kulkarni <vandita.kulkarni@intel.com>
	Date:   Fri Apr 10 21:10:24 2015 +0530

		REVERTME: [VPG]: drm/i915 : program dynamic dsparb and wm

Issue: GMINL-4468
Change-Id: I491a5c10fb4dae7631a73de7de3b3c36d0c21adc
Signed-off-by: vandita kulkarni <vandita.kulkarni@intel.com>
Signed-off-by: Arun R Murthy <arun.r.murthy@intel.com>
---
 drivers/gpu/drm/i915/i915_reg.h      |    2 ++
 drivers/gpu/drm/i915/intel_display.c |    1 +
 drivers/gpu/drm/i915/intel_drv.h     |    1 +
 drivers/gpu/drm/i915/intel_pm.c      |   20 +++++++++++++++++++-
 drivers/gpu/drm/i915/intel_sprite.c  |    2 ++
 5 files changed, 25 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/i915/i915_reg.h b/drivers/gpu/drm/i915/i915_reg.h
index 2786001..6d66c6a 100644
--- a/drivers/gpu/drm/i915/i915_reg.h
+++ b/drivers/gpu/drm/i915/i915_reg.h
@@ -4311,6 +4311,8 @@ enum punit_power_well {
 #define VLV_FW_PIPEB_WM1_MASK1	0xff00
 #define VLV_FW_PIPEB_WM1_MASK2	0xff000000
 
+#define VLV_FW_SR_MASK		0xff800000
+#define VLV_DSPHOWM_SR_MASK	0x3000000
 /* drain latency register values*/
 #define VLV_DDL(pipe)	_PIPE(pipe, VLV_DDL1, VLV_DDL2)
 #define DRAIN_LATENCY_PRECISION_64	64
diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index f1fe36f..16f3b66 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -2820,6 +2820,7 @@ static void i9xx_update_primary_plane(struct drm_crtc *crtc,
 	mask = 0x000000ff;
 	vlv_calculate_ddl(crtc, pixel_size, &plane_prec_multi, &plane_ddl);
 	intel_crtc->vlv_wm.pa = vlv_calculate_wm(intel_crtc, pixel_size);
+	intel_crtc->vlv_wm.sr = vlv_calculate_wm(intel_crtc, pixel_size);
 	plane_ddl = plane_prec_multi | (plane_ddl);
 
 	intel_crtc->reg_ddl.plane_ddl = plane_ddl;
diff --git a/drivers/gpu/drm/i915/intel_drv.h b/drivers/gpu/drm/i915/intel_drv.h
index b58b799..67a7349 100644
--- a/drivers/gpu/drm/i915/intel_drv.h
+++ b/drivers/gpu/drm/i915/intel_drv.h
@@ -426,6 +426,7 @@ struct vlv_wm_level {
 	u32 pa;
 	u32 sa;
 	u32 sb;
+	u32 sr;
 };
 
 struct intel_crtc {
diff --git a/drivers/gpu/drm/i915/intel_pm.c b/drivers/gpu/drm/i915/intel_pm.c
index 2c726f8..bce9050 100644
--- a/drivers/gpu/drm/i915/intel_pm.c
+++ b/drivers/gpu/drm/i915/intel_pm.c
@@ -1597,7 +1597,7 @@ void vlv_update_dsparb(struct intel_crtc *intel_crtc)
 	u32 dsparb_h = 0;
 	u32 dsparb3 = DSPARB_50_25_25;
 	u32 dsparb2 = DSPARB2_50_25_25;
-	u32 pa = 0, sa = 0, sb = 0;
+	u32 pa = 0, sa = 0, sb = 0, sr = 0;
 	int fifo_size = 0;
 
 	if (hweight32(plane_stat) == 1) {
@@ -1617,6 +1617,13 @@ void vlv_update_dsparb(struct intel_crtc *intel_crtc)
 		else
 			sb = vlv_update_wm_val(fifo_size,
 					intel_crtc->vlv_wm.sb);
+		/* update sr wm */
+		if (single_pipe_enabled(pipe_stat) &&
+				!(pipe_stat & PIPE_ENABLE(2))) {
+			fifo_size = 96 * 1024;
+			sr = vlv_update_wm_val(fifo_size,
+					intel_crtc->vlv_wm.sr);
+		}
 	} else if (hweight32(plane_stat) == 3) {
 		/* all 3 planes enabled, fifo allocation 50:25:25 */
 		dsparb |= DSPARB_50_25_25;
@@ -1672,6 +1679,13 @@ void vlv_update_dsparb(struct intel_crtc *intel_crtc)
 		sb = 0;
 	}
 
+	if (sr) {
+		I915_WRITE_BITS(DSPFW1, (sr << 23), VLV_FW_SR_MASK);
+		I915_WRITE(DSPHOWM, (I915_READ(DSPHOWM) &
+						~(VLV_DSPHOWM_SR_MASK)) |
+					((sr >> 9) << 24));
+	}
+
 	switch (pipe) {
 	case PIPE_A:
 		I915_WRITE_BITS(DSPARB, dsparb, DSPARB_PIPEA_MASK);
@@ -1778,6 +1792,10 @@ void intel_update_maxfifo(struct drm_i915_private *dev_priv,
 			vlv_punit_write(dev_priv, CHV_DPASSC,
 					(val & ~(CHV_PW_MAXFIFO_MASK)));
 			mutex_unlock(&dev_priv->rps.hw_lock);
+			/* update sr wm to 0 */
+			I915_WRITE_BITS(DSPFW1, 0, 0xff800000);
+			I915_WRITE(DSPHOWM, (I915_READ(DSPHOWM) &
+							~(0x3000000)));
 		} else
 			I915_WRITE(FW_BLC_SELF_VLV, ~FW_CSPWRDWNEN);
 		dev_priv->maxfifo_enabled = false;
diff --git a/drivers/gpu/drm/i915/intel_sprite.c b/drivers/gpu/drm/i915/intel_sprite.c
index accecdd..23c6fb5 100644
--- a/drivers/gpu/drm/i915/intel_sprite.c
+++ b/drivers/gpu/drm/i915/intel_sprite.c
@@ -680,6 +680,8 @@ vlv_update_plane(struct drm_plane *dplane, struct drm_crtc *crtc,
 		intel_crtc->vlv_wm.sb = vlv_calculate_wm(intel_crtc,
 							pixel_size);
 
+	intel_crtc->vlv_wm.sr = vlv_calculate_wm(intel_crtc,
+							pixel_size);
 	intel_plane->reg.surf = I915_READ(SPSURF(pipe, plane));
 
 	if (intel_plane->rrb2_enable)
-- 
1.7.9.5

