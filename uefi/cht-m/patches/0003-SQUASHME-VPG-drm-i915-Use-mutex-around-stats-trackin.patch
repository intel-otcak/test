From dd346ab3090452b2e89a0217108bbcfb1802b379 Mon Sep 17 00:00:00 2001
Message-Id: <dd346ab3090452b2e89a0217108bbcfb1802b379.1428642548.git.chang-joon.lee@intel.com>
In-Reply-To: <bf1030973d60050117965176cfa2e18cdaf9c0a1.1428642548.git.chang-joon.lee@intel.com>
References: <bf1030973d60050117965176cfa2e18cdaf9c0a1.1428642548.git.chang-joon.lee@intel.com>
From: sudheer gurram <sudheer.gurram@intel.com>
Date: Thu, 19 Mar 2015 11:37:44 +0530
Subject: [PATCH 3/7] SQUASHME! [VPG]: drm/i915: Use mutex around stats
 tracking.

The mutex lock instead of mutex interruptible lock around gem obj insert pid
& gem obj remove pid is needed as the gem handle will be freed, as those functions
are called during handle creation & destruction.

Squash this patch to:
commit e3b5c17c738b28c741e04a8429adae426f679bc1
Author: Sourab Gupta <sourab.gupta@intel.com>
Date:   Mon Aug 11 13:12:04 2014 +0530

    MUST_REBASE [VPG]: drm/i915: Sysfs interface to get GFX shmem usage
    stats per process

Issue: GMINL-6552
Change-Id: I7047255d362c9ed5b8b8ed0b1d962aa5683c1149
Signed-off-by: sudheer gurram <sudheer.gurram@intel.com>
---
 drivers/gpu/drm/i915/i915_gem_debug.c |   20 ++++++++------------
 1 file changed, 8 insertions(+), 12 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_gem_debug.c b/drivers/gpu/drm/i915/i915_gem_debug.c
index 80ac0d9..102342c 100644
--- a/drivers/gpu/drm/i915/i915_gem_debug.c
+++ b/drivers/gpu/drm/i915/i915_gem_debug.c
@@ -262,16 +262,14 @@ static int i915_obj_get_shmem_pages_alloced(struct drm_i915_gem_object *obj)
 
 int i915_gem_obj_insert_pid(struct drm_i915_gem_object *obj)
 {
-	int ret = 0, found = 0;
+	int found = 0;
 	struct drm_i915_obj_pid_info *entry;
 	pid_t current_tgid = task_tgid_nr(current);
 
 	if (!i915.memtrack_debug)
 		return 0;
 
-	ret = i915_mutex_lock_interruptible(obj->base.dev);
-	if (ret)
-		return ret;
+	mutex_lock(&obj->base.dev->struct_mutex);
 
 	list_for_each_entry(entry, &obj->pid_info, head) {
 		if (entry->tgid == current_tgid) {
@@ -284,17 +282,17 @@ int i915_gem_obj_insert_pid(struct drm_i915_gem_object *obj)
 		entry = kzalloc(sizeof(*entry), GFP_KERNEL);
 		if (entry == NULL) {
 			DRM_ERROR("alloc failed\n");
-			ret = -ENOMEM;
-			goto out;
+			mutex_unlock(&obj->base.dev->struct_mutex);
+			return -ENOMEM;
 		}
 		entry->tgid = current_tgid;
 		entry->open_handle_count = 1;
 		INIT_LIST_HEAD(&entry->virt_addr_head);
 		list_add_tail(&entry->head, &obj->pid_info);
 	}
-out:
+
 	mutex_unlock(&obj->base.dev->struct_mutex);
-	return ret;
+	return 0;
 }
 
 void i915_gem_obj_remove_pid(struct drm_i915_gem_object *obj)
@@ -302,14 +300,12 @@ void i915_gem_obj_remove_pid(struct drm_i915_gem_object *obj)
 	pid_t current_tgid = task_tgid_nr(current);
 	struct drm_i915_obj_pid_info *pid_entry, *pid_next;
 	struct drm_i915_obj_virt_addr *virt_entry, *virt_next;
-	int ret, found = 0;
+	int found = 0;
 
 	if (!i915.memtrack_debug)
 		return;
 
-	ret = i915_mutex_lock_interruptible(obj->base.dev);
-	if (ret)
-		return;
+	mutex_lock(&obj->base.dev->struct_mutex);
 
 	list_for_each_entry_safe(pid_entry, pid_next, &obj->pid_info, head) {
 		if (pid_entry->tgid == current_tgid) {
-- 
1.7.9.5

