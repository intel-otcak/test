From 819799b79a730b298088ae5c588218449de8ca82 Mon Sep 17 00:00:00 2001
Message-Id: <819799b79a730b298088ae5c588218449de8ca82.1423872525.git.feitong.yi@intel.com>
In-Reply-To: <3062c7e6b919c393846ff0e13558e7f648b352ca.1423872525.git.feitong.yi@intel.com>
References: <3062c7e6b919c393846ff0e13558e7f648b352ca.1423872525.git.feitong.yi@intel.com>
From: "Kumar, Kiran S" <kiran.s.kumar@intel.com>
Date: Wed, 28 Jan 2015 15:27:08 +0530
Subject: [PATCH 04/95] FOR_UPSTREAM [VPG]: drm/i915: Cleanup patch for update
 watermarks

We need not to update watermark values everytime when modeset
changes as these values are constant and will be set during
initialization.

Issue: GMINL-5637
Change-Id: I163d6ae203a6baf3fa77c1859b87b89a2d9fa727
Signed-off-by: Kumar, Kiran S <kiran.s.kumar@intel.com>
---
 drivers/gpu/drm/i915/intel_display.c |   13 +------------
 drivers/gpu/drm/i915/intel_pm.c      |    3 ---
 drivers/gpu/drm/i915/intel_sprite.c  |    3 ---
 3 files changed, 1 insertion(+), 18 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index 7fc7e3d..9f25bce 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -2684,9 +2684,6 @@ static void i9xx_update_primary_plane(struct drm_crtc *crtc,
 
 	pixel_size = drm_format_plane_cpp(fb->pixel_format, 0);
 
-	if (!dev_priv->atomic_update)
-		intel_update_watermarks(crtc);
-
 	reg = DSPCNTR(plane);
 	/*
 	 * In case of atomic update, primary enable/disable is already cached as
@@ -2910,9 +2907,6 @@ static void i9xx_update_primary_plane(struct drm_crtc *crtc,
 	} else
 		I915_WRITE(DSPADDR(plane), i915_gem_obj_ggtt_offset(obj) + linear_offset);
 	POSTING_READ(reg);
-
-	if (!dev_priv->atomic_update)
-		intel_update_watermarks(crtc);
 }
 
 static void ironlake_update_primary_plane(struct drm_crtc *crtc,
@@ -5429,10 +5423,7 @@ static void valleyview_crtc_enable(struct drm_crtc *crtc)
 
 	intel_crtc_load_lut(crtc);
 
-	if (!dev_priv->atomic_update)
-		intel_update_watermarks(crtc);
-	else
-		vlv_update_watermarks(dev_priv);
+	vlv_update_watermarks(dev_priv);
 
 	if (IS_VALLEYVIEW(dev) &&
 			intel_pipe_has_type(crtc, INTEL_OUTPUT_HDMI)) {
@@ -5702,8 +5693,6 @@ static void i9xx_crtc_disable(struct drm_crtc *crtc)
 		intel_set_cpu_fifo_underrun_reporting(dev, pipe, false);
 
 	intel_crtc->active = false;
-	if (!dev_priv->atomic_update)
-		intel_update_watermarks(crtc);
 
 	/*Reset lane for VLV platform*/
 	if (IS_VALLEYVIEW(dev)) {
diff --git a/drivers/gpu/drm/i915/intel_pm.c b/drivers/gpu/drm/i915/intel_pm.c
index 5ee1691..f097813 100644
--- a/drivers/gpu/drm/i915/intel_pm.c
+++ b/drivers/gpu/drm/i915/intel_pm.c
@@ -660,9 +660,6 @@ static void intel_drrs_work_fn(struct work_struct *__work)
 
 	intel_dp_set_drrs_state(work->crtc->dev,
 		dev_priv->drrs.connector->panel.downclock_mode->vrefresh);
-
-	if (!dev_priv->atomic_update)
-		intel_update_watermarks(work->crtc);
 }
 
 static void intel_cancel_drrs_work(struct drm_i915_private *dev_priv)
diff --git a/drivers/gpu/drm/i915/intel_sprite.c b/drivers/gpu/drm/i915/intel_sprite.c
index 4470864..050383e 100644
--- a/drivers/gpu/drm/i915/intel_sprite.c
+++ b/drivers/gpu/drm/i915/intel_sprite.c
@@ -1270,7 +1270,6 @@ intel_post_enable_primary(struct drm_crtc *crtc)
 {
 	struct drm_device *dev = crtc->dev;
 	struct intel_crtc *intel_crtc = to_intel_crtc(crtc);
-	struct drm_i915_private *dev_priv = dev->dev_private;
 
 	/*
 	 * BDW signals flip done immediately if the plane
@@ -1291,8 +1290,6 @@ intel_post_enable_primary(struct drm_crtc *crtc)
 	mutex_lock(&dev->struct_mutex);
 	intel_update_fbc(dev);
 	intel_update_drrs(dev);
-	if (!dev_priv->atomic_update)
-		intel_update_watermarks(crtc);
 	mutex_unlock(&dev->struct_mutex);
 }
 
-- 
1.7.9.5

