From 7bfc04cb948ac93766f3802fe39bb724cfd9f983 Mon Sep 17 00:00:00 2001
From: Andy Ross <andrew.j.ross@intel.com>
Date: Wed, 15 Oct 2014 18:18:05 +0800
Subject: [PATCH 101/117] atomisp: Rebase fixups

Some changes were broken across the atomisp core and the sensors
and/or atomisp_gmin_platform code.  The former has now accepted those
patches upstream, so add these here pending a final squash of the gmin
code:

+ Don't build non-gmin sensor platform drivers

+ Remove SPID from atomisp_platform_data

+ Add atomisp_gmin_find_subdev API used in the unified platform driver

+ Add gmin/deviceless mode for gmin_get_config_var

+ Remove v4l2 chip_ident API usage from sensors

Signed-off-by: Andy Ross <andrew.j.ross@intel.com>
---
 arch/x86/platform/intel-mid/Makefile               |  4 ---
 .../x86/platform/intel-mid/atomisp_gmin_platform.c | 34 ++++++++++++++-----
 .../camera/drivers/media/i2c/imx/ad5816g.c         |  1 -
 .../camera/drivers/media/i2c/imx/drv201.c          |  1 -
 .../camera/drivers/media/i2c/imx/dw9714.c          |  1 -
 .../camera/drivers/media/i2c/imx/imx.c             | 15 ---------
 .../camera/drivers/media/i2c/imx/imx.h             |  1 -
 .../camera/drivers/media/i2c/imx/otp.c             |  1 -
 .../camera/drivers/media/i2c/imx/otp_e2prom.c      |  1 -
 .../camera/drivers/media/i2c/imx/otp_imx.c         |  1 -
 .../camera/drivers/media/i2c/ov2722.c              |  1 -
 .../camera/drivers/media/i2c/ov2722.h              |  1 -
 include/linux/atomisp.h                            | 39 ++++++++++++++++++++++
 include/linux/atomisp_platform.h                   | 24 +++++++------
 14 files changed, 78 insertions(+), 47 deletions(-)

diff --git a/arch/x86/platform/intel-mid/Makefile b/arch/x86/platform/intel-mid/Makefile
index 7c8eaa8..bc0dbdf 100644
--- a/arch/x86/platform/intel-mid/Makefile
+++ b/arch/x86/platform/intel-mid/Makefile
@@ -4,10 +4,6 @@ obj-$(CONFIG_EARLY_PRINTK_INTEL_MID) += early_printk_intel_mid.o
 obj-$(CONFIG_GMIN_INTEL_MID) += intel_mid_pcihelpers.o
 obj-$(CONFIG_GMIN_INTEL_MID) += atomisp_gmin_platform.o
 
-obj-$(subst m,y,$(CONFIG_VIDEO_MT9M114)) += device_libs/platform_mt9m114.o
-obj-$(subst m,y,$(CONFIG_VIDEO_OV5693)) += device_libs/platform_ov5693.o
-obj-$(subst m,y,$(CONFIG_VIDEO_OV2722)) += platform_ov2722.o
-
 # SFI specific code
 ifdef CONFIG_X86_INTEL_MID
 obj-$(CONFIG_SFI) += sfi.o device_libs/
diff --git a/arch/x86/platform/intel-mid/atomisp_gmin_platform.c b/arch/x86/platform/intel-mid/atomisp_gmin_platform.c
index faae8b0..cecdc096 100644
--- a/arch/x86/platform/intel-mid/atomisp_gmin_platform.c
+++ b/arch/x86/platform/intel-mid/atomisp_gmin_platform.c
@@ -83,7 +83,6 @@ static struct intel_v4l2_subdev_table pdata_subdevs[MAX_SUBDEVS+1];
 
 static const struct atomisp_platform_data pdata = {
 	.subdevs = pdata_subdevs,
-	.spid = &spid,
 };
 
 /*
@@ -149,9 +148,9 @@ const struct camera_af_platform_data *camera_get_af_platform_data(void)
 }
 EXPORT_SYMBOL_GPL(camera_get_af_platform_data);
 
-int atomisp_register_i2c_module(struct i2c_client *client,
-                                enum intel_v4l2_subdev_type type,
-                                enum atomisp_camera_port port)
+int atomisp_register_i2c_module(struct v4l2_subdev *subdev,
+                                struct camera_sensor_platform_data *plat_data,
+                                enum intel_v4l2_subdev_type type)
 {
 	int i;
 	struct i2c_board_info *bi;
@@ -176,6 +175,7 @@ int atomisp_register_i2c_module(struct i2c_client *client,
 
 	pdata.subdevs[i].type = type;
 	pdata.subdevs[i].port = gs->csi_port;
+	pdata.subdevs[i].subdev = subdev;
 	pdata.subdevs[i].v4l2_subdev.i2c_adapter_id = client->adapter->nr;
 
 	/* Convert i2c_client to i2c_board_info */
@@ -193,6 +193,21 @@ int atomisp_register_i2c_module(struct i2c_client *client,
 }
 EXPORT_SYMBOL_GPL(atomisp_register_i2c_module);
 
+struct v4l2_subdev *atomisp_gmin_find_subdev(struct i2c_adapter *adapter,
+					     struct i2c_board_info *board_info)
+{
+	int i;
+	for (i=0; i < MAX_SUBDEVS && pdata.subdevs[i].type; i++) {
+		struct intel_v4l2_subdev_table *sd = &pdata.subdevs[i];
+		if (sd->v4l2_subdev.i2c_adapter_id == adapter->nr &&
+		    sd->v4l2_subdev.board_info.addr == board_info->addr)
+			return sd->subdev;
+	}
+	return NULL;
+}
+EXPORT_SYMBOL_GPL(atomisp_gmin_find_subdev);
+
+
 struct gmin_cfg_var {
 	const char *name, *val;
 };
@@ -551,7 +566,6 @@ EXPORT_SYMBOL_GPL(gmin_camera_platform_data);
  * configuration is based on firmware ID. */
 int gmin_get_config_var(struct device *dev, const char *var, char *out, size_t *out_len)
 {
-	struct device *adev;
 	char var8[CFG_VAR_NAME_MAX];
 	efi_char16_t var16[CFG_VAR_NAME_MAX];
 	struct efivar_entry *ev;
@@ -559,12 +573,14 @@ int gmin_get_config_var(struct device *dev, const char *var, char *out, size_t *
 	int i, j, ret;
 	unsigned long efilen;
 
-	if (!ACPI_COMPANION(dev))
-		return -ENODEV;
+        if (dev && ACPI_COMPANION(dev))
+                dev = &ACPI_COMPANION(dev)->dev;
 
-	adev = &ACPI_COMPANION(dev)->dev;
+        if (dev)
+                ret = snprintf(var8, sizeof(var8), "%s_%s", dev_name(dev), var);
+        else
+                ret = snprintf(var8, sizeof(var8), "gmin_%s", var);
 
-	ret = snprintf(var8, sizeof(var8), "%s_%s", dev_name(adev), var);
 	if (ret < 0 || ret >= sizeof(var8)-1)
 		return -EINVAL;
 
diff --git a/drivers/external_drivers/camera/drivers/media/i2c/imx/ad5816g.c b/drivers/external_drivers/camera/drivers/media/i2c/imx/ad5816g.c
index fdd0ebe..b27c854 100644
--- a/drivers/external_drivers/camera/drivers/media/i2c/imx/ad5816g.c
+++ b/drivers/external_drivers/camera/drivers/media/i2c/imx/ad5816g.c
@@ -15,7 +15,6 @@
 #include <linux/string.h>
 #include <linux/slab.h>
 #include <linux/types.h>
-#include <media/v4l2-chip-ident.h>
 #include <media/v4l2-device.h>
 
 #include "ad5816g.h"
diff --git a/drivers/external_drivers/camera/drivers/media/i2c/imx/drv201.c b/drivers/external_drivers/camera/drivers/media/i2c/imx/drv201.c
index fa74749..86b152b 100644
--- a/drivers/external_drivers/camera/drivers/media/i2c/imx/drv201.c
+++ b/drivers/external_drivers/camera/drivers/media/i2c/imx/drv201.c
@@ -15,7 +15,6 @@
 #include <linux/string.h>
 #include <linux/slab.h>
 #include <linux/types.h>
-#include <media/v4l2-chip-ident.h>
 #include <media/v4l2-device.h>
 #include <asm/intel-mid.h>
 
diff --git a/drivers/external_drivers/camera/drivers/media/i2c/imx/dw9714.c b/drivers/external_drivers/camera/drivers/media/i2c/imx/dw9714.c
index 3cb72ee..6ea3340 100644
--- a/drivers/external_drivers/camera/drivers/media/i2c/imx/dw9714.c
+++ b/drivers/external_drivers/camera/drivers/media/i2c/imx/dw9714.c
@@ -15,7 +15,6 @@
 #include <linux/string.h>
 #include <linux/slab.h>
 #include <linux/types.h>
-#include <media/v4l2-chip-ident.h>
 #include <media/v4l2-device.h>
 #include <asm/intel-mid.h>
 
diff --git a/drivers/external_drivers/camera/drivers/media/i2c/imx/imx.c b/drivers/external_drivers/camera/drivers/media/i2c/imx/imx.c
index 6d4397e..a2900d4 100644
--- a/drivers/external_drivers/camera/drivers/media/i2c/imx/imx.c
+++ b/drivers/external_drivers/camera/drivers/media/i2c/imx/imx.c
@@ -38,7 +38,6 @@
 #include <linux/slab.h>
 #include <linux/types.h>
 #include <linux/acpi.h>
-#include <media/v4l2-chip-ident.h>
 #include <media/v4l2-ctrls.h>
 #include <media/v4l2-device.h>
 #include <linux/atomisp_gmin_platform.h>
@@ -710,19 +709,6 @@ static int imx_s_power(struct v4l2_subdev *sd, int on)
 	return ret;
 }
 
-static int imx_g_chip_ident(struct v4l2_subdev *sd,
-				struct v4l2_dbg_chip_ident *chip)
-{
-	struct i2c_client *client = v4l2_get_subdevdata(sd);
-
-	if (!chip)
-		return -EINVAL;
-
-	v4l2_chip_ident_i2c_client(client, chip, V4L2_IDENT_IMX, 0);
-
-	return 0;
-}
-
 static int imx_get_intg_factor(struct i2c_client *client,
 				struct camera_mipi_info *info,
 				const struct imx_reg *reglist)
@@ -2193,7 +2179,6 @@ static const struct v4l2_subdev_video_ops imx_video_ops = {
 };
 
 static const struct v4l2_subdev_core_ops imx_core_ops = {
-	.g_chip_ident = imx_g_chip_ident,
 	.queryctrl = imx_queryctrl,
 	.g_ctrl = imx_g_ctrl,
 	.s_ctrl = imx_s_ctrl,
diff --git a/drivers/external_drivers/camera/drivers/media/i2c/imx/imx.h b/drivers/external_drivers/camera/drivers/media/i2c/imx/imx.h
index d01ae04..44b9a75 100644
--- a/drivers/external_drivers/camera/drivers/media/i2c/imx/imx.h
+++ b/drivers/external_drivers/camera/drivers/media/i2c/imx/imx.h
@@ -31,7 +31,6 @@
 #include <linux/videodev2.h>
 #include <linux/v4l2-mediabus.h>
 #include <media/media-entity.h>
-#include <media/v4l2-chip-ident.h>
 #include <media/v4l2-ctrls.h>
 #include <media/v4l2-device.h>
 #include <media/v4l2-subdev.h>
diff --git a/drivers/external_drivers/camera/drivers/media/i2c/imx/otp.c b/drivers/external_drivers/camera/drivers/media/i2c/imx/otp.c
index 5bec690..4622750 100644
--- a/drivers/external_drivers/camera/drivers/media/i2c/imx/otp.c
+++ b/drivers/external_drivers/camera/drivers/media/i2c/imx/otp.c
@@ -23,7 +23,6 @@
 #include <linux/mm.h>
 #include <linux/string.h>
 #include <linux/types.h>
-#include <media/v4l2-chip-ident.h>
 #include <media/v4l2-device.h>
 
 void *dummy_otp_read(struct v4l2_subdev *sd, u8 dev_addr,
diff --git a/drivers/external_drivers/camera/drivers/media/i2c/imx/otp_e2prom.c b/drivers/external_drivers/camera/drivers/media/i2c/imx/otp_e2prom.c
index 3668533..ce4e7ab 100644
--- a/drivers/external_drivers/camera/drivers/media/i2c/imx/otp_e2prom.c
+++ b/drivers/external_drivers/camera/drivers/media/i2c/imx/otp_e2prom.c
@@ -28,7 +28,6 @@
 #include <linux/slab.h>
 #include <linux/string.h>
 #include <linux/types.h>
-#include <media/v4l2-chip-ident.h>
 #include <media/v4l2-device.h>
 #include "common.h"
 
diff --git a/drivers/external_drivers/camera/drivers/media/i2c/imx/otp_imx.c b/drivers/external_drivers/camera/drivers/media/i2c/imx/otp_imx.c
index e527445..ba98ff3 100644
--- a/drivers/external_drivers/camera/drivers/media/i2c/imx/otp_imx.c
+++ b/drivers/external_drivers/camera/drivers/media/i2c/imx/otp_imx.c
@@ -29,7 +29,6 @@
 #include <linux/string.h>
 #include <linux/slab.h>
 #include <linux/types.h>
-#include <media/v4l2-chip-ident.h>
 #include <media/v4l2-device.h>
 #include <asm/intel-mid.h>
 #include "common.h"
diff --git a/drivers/external_drivers/camera/drivers/media/i2c/ov2722.c b/drivers/external_drivers/camera/drivers/media/i2c/ov2722.c
index edaf429..2a33f9f 100644
--- a/drivers/external_drivers/camera/drivers/media/i2c/ov2722.c
+++ b/drivers/external_drivers/camera/drivers/media/i2c/ov2722.c
@@ -34,7 +34,6 @@
 #include <linux/gpio.h>
 #include <linux/moduleparam.h>
 #include <media/v4l2-device.h>
-#include <media/v4l2-chip-ident.h>
 #include <linux/io.h>
 #include <linux/acpi.h>
 #include <linux/atomisp_gmin_platform.h>
diff --git a/drivers/external_drivers/camera/drivers/media/i2c/ov2722.h b/drivers/external_drivers/camera/drivers/media/i2c/ov2722.h
index ae0a5c5..f8353e6 100644
--- a/drivers/external_drivers/camera/drivers/media/i2c/ov2722.h
+++ b/drivers/external_drivers/camera/drivers/media/i2c/ov2722.h
@@ -29,7 +29,6 @@
 #include <linux/spinlock.h>
 #include <media/v4l2-subdev.h>
 #include <media/v4l2-device.h>
-#include <media/v4l2-chip-ident.h>
 #include <linux/v4l2-mediabus.h>
 #include <media/media-entity.h>
 #include <media/v4l2-ctrls.h>
diff --git a/include/linux/atomisp.h b/include/linux/atomisp.h
index abdecd2..bac5158 100644
--- a/include/linux/atomisp.h
+++ b/include/linux/atomisp.h
@@ -902,6 +902,29 @@ struct v4l2_private_int_data {
 	__u32 reserved[2];
 };
 
+enum atomisp_sensor_ae_bracketing_mode {
+	SENSOR_AE_BRACKETING_MODE_OFF = 0,
+	SENSOR_AE_BRACKETING_MODE_SINGLE, /* back to SW standby after bracketing */
+	SENSOR_AE_BRACKETING_MODE_SINGLE_TO_STREAMING, /* back to normal streaming after bracketing */
+	SENSOR_AE_BRACKETING_MODE_LOOP, /* continue AE bracketing in loop mode */
+};
+
+struct atomisp_sensor_ae_bracketing_info {
+	unsigned int modes; /* bit mask to indicate supported modes  */
+	unsigned int lut_depth;
+};
+
+struct atomisp_sensor_ae_bracketing_lut_entry {
+	__u16 coarse_integration_time;
+	__u16 analog_gain;
+	__u16 digital_gain;
+};
+
+struct atomisp_sensor_ae_bracketing_lut {
+	struct atomisp_sensor_ae_bracketing_lut_entry *lut;
+	unsigned int lut_size;
+};
+
 /*Private IOCTLs for ISP */
 #define ATOMISP_IOC_G_XNR \
 	_IOR('v', BASE_VIDIOC_PRIVATE + 0, int)
@@ -1121,6 +1144,22 @@ struct v4l2_private_int_data {
 #define ATOMISP_IOC_G_ACC_STATE \
 	_IOR('v', BASE_VIDIOC_PRIVATE + 41, struct atomisp_acc_state)
 
+#define ATOMISP_IOC_INJECT_A_FAKE_EVENT \
+	_IOW('v', BASE_VIDIOC_PRIVATE + 42, int)
+
+#define ATOMISP_IOC_G_SENSOR_AE_BRACKETING_INFO \
+	_IOR('v', BASE_VIDIOC_PRIVATE + 43, struct atomisp_sensor_ae_bracketing_info)
+
+#define ATOMISP_IOC_S_SENSOR_AE_BRACKETING_MODE \
+	_IOW('v', BASE_VIDIOC_PRIVATE + 43, unsigned int)
+
+#define ATOMISP_IOC_G_SENSOR_AE_BRACKETING_MODE \
+	_IOR('v', BASE_VIDIOC_PRIVATE + 43, unsigned int)
+
+#define ATOMISP_IOC_S_SENSOR_AE_BRACKETING_LUT \
+	_IOW('v', BASE_VIDIOC_PRIVATE + 43, struct atomisp_sensor_ae_bracketing_lut)
+
+
 /*
  * Reserved ioctls. We have customer implementing it internally.
  * We can't use both numbers to not cause ABI conflict.
diff --git a/include/linux/atomisp_platform.h b/include/linux/atomisp_platform.h
index 9d7e67f4..bd44829 100644
--- a/include/linux/atomisp_platform.h
+++ b/include/linux/atomisp_platform.h
@@ -18,9 +18,6 @@
  * 02110-1301, USA.
  *
  */
-#ifdef CSS15
-#include <linux/atomisp_platform_css15.h>
-#else
 #ifndef ATOMISP_PLATFORM_H_
 #define ATOMISP_PLATFORM_H_
 
@@ -134,11 +131,16 @@ struct intel_v4l2_subdev_table {
 	struct intel_v4l2_subdev_i2c_board_info v4l2_subdev;
 	enum intel_v4l2_subdev_type type;
 	enum atomisp_camera_port port;
+#ifdef CONFIG_GMIN_INTEL_MID
+	struct v4l2_subdev *subdev;
+#endif
 };
 
 struct atomisp_platform_data {
 	struct intel_v4l2_subdev_table *subdevs;
+#ifndef CONFIG_GMIN_INTEL_MID
 	const struct soft_platform_id *spid;
+#endif
 };
 
 /* Describe the capacities of one single sensor. */
@@ -230,12 +232,14 @@ struct camera_mipi_info {
 extern const struct atomisp_platform_data *atomisp_get_platform_data(void);
 extern const struct atomisp_camera_caps *atomisp_get_default_camera_caps(void);
 
-/* G-Min API */
-extern int atomisp_register_i2c_module(struct i2c_client *client,
-				       enum intel_v4l2_subdev_type type,
-				       enum atomisp_camera_port port);
-int gmin_get_config_var(struct device *dev, const char *var,
-			char *out, size_t *out_len);
+/* API from old platform_camera.h, new CPUID implementation */
+#define __IS_SOC(x) (boot_cpu_data.x86_vendor == X86_VENDOR_INTEL && \
+		     boot_cpu_data.x86 == 6 &&                       \
+		     boot_cpu_data.x86_model == x)
+
+#define IS_MFLD	__IS_SOC(0x27)
+#define IS_BYT	__IS_SOC(0x37)
+#define IS_CHT	__IS_SOC(0x4C)
+#define IS_MOFD	__IS_SOC(0x5A)
 
 #endif /* ATOMISP_PLATFORM_H_ */
-#endif
-- 
1.9.3

