From a3c0ec35c7645440c78da81615b09b3f3fcc6bca Mon Sep 17 00:00:00 2001
Message-Id: <a3c0ec35c7645440c78da81615b09b3f3fcc6bca.1417780878.git.chang-joon.lee@intel.com>
In-Reply-To: <cb098d33cdac3271103834fbce08218248d7bddb.1417780878.git.chang-joon.lee@intel.com>
References: <cb098d33cdac3271103834fbce08218248d7bddb.1417780878.git.chang-joon.lee@intel.com>
From: Durgadoss R <durgadoss.r@intel.com>
Date: Tue, 11 Nov 2014 17:46:20 +0530
Subject: [PATCH 17/34] FOR_UPSTREAM [VPG]: drm/i915: Activate PSR

Thia patch activates PSR if the required conditions are met.
PSR disabled in:
 * Crtc disable
 * Sprite flips
 * Hotplug interrupt handler
PSR enabled in:
 * Crtc enable (provided requirements are met)
 * unpin_work_fn (when a flip on primary plane ended)
PSR exit in:
 * Flip on primary plane

Issue: GMINL-3876
Change-Id: I8791a4778d9b8b7ada286506e270b6329254dc17
Signed-off-by: Durgadoss R <durgadoss.r@intel.com>
---
 drivers/gpu/drm/i915/intel_display.c |   22 ++++++++++++++++++++--
 drivers/gpu/drm/i915/intel_sprite.c  |    7 +++++++
 2 files changed, 27 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index 9402ea7..1965850 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -3338,9 +3338,12 @@ intel_pipe_set_base(struct drm_crtc *crtc, int x, int y,
 	}
 
 	mutex_lock(&dev->struct_mutex);
+	if (IS_VALLEYVIEW(dev))
+		intel_vlv_edp_psr_update(dev);
+	else
+		intel_edp_psr_update(dev);
 	intel_update_fbc(dev);
 	intel_update_drrs(dev);
-	intel_edp_psr_update(dev);
 	mutex_unlock(&dev->struct_mutex);
 
 	return 0;
@@ -4553,7 +4556,11 @@ static void intel_crtc_enable_planes(struct drm_crtc *crtc)
 
 	mutex_lock(&dev->struct_mutex);
 	intel_update_fbc(dev);
-	intel_edp_psr_update(dev);
+
+	if (IS_VALLEYVIEW(dev))
+		intel_vlv_edp_psr_update(dev);
+	else
+		intel_edp_psr_update(dev);
 	intel_update_drrs(dev);
 	mutex_unlock(&dev->struct_mutex);
 }
@@ -5538,6 +5545,10 @@ static void i9xx_crtc_disable(struct drm_crtc *crtc)
 	if (IS_GEN2(dev))
 		intel_set_cpu_fifo_underrun_reporting(dev, pipe, false);
 
+	/* Disable PSR if enabled on this pipe */
+	if (IS_VALLEYVIEW(dev))
+		intel_vlv_edp_psr_disable(dev);
+
 	if (I915_HAS_DPST(dev))
 		i915_dpst_display_off(dev);
 
@@ -9737,6 +9748,9 @@ void intel_unpin_work_fn(struct work_struct *__work)
 	drm_gem_object_unreference(&work->pending_flip_obj->base);
 	drm_gem_object_unreference(&work->old_fb_obj->base);
 
+	if (IS_VALLEYVIEW(dev))
+		intel_vlv_edp_psr_update(dev);
+
 	/* disable current DRRS work scheduled and restart
 	 * to push work by another x seconds
 	 */
@@ -10394,6 +10408,10 @@ static int intel_crtc_page_flip(struct drm_crtc *crtc,
 	if (ret)
 		goto cleanup;
 
+	/* Exit PSR */
+	if (IS_VALLEYVIEW(dev))
+		intel_vlv_edp_psr_exit(dev, false);
+
 	/* Reference the objects for the scheduled work. */
 	drm_gem_object_reference(&work->old_fb_obj->base);
 	drm_gem_object_reference(&obj->base);
diff --git a/drivers/gpu/drm/i915/intel_sprite.c b/drivers/gpu/drm/i915/intel_sprite.c
index 0a4ba5e..0033fa4 100644
--- a/drivers/gpu/drm/i915/intel_sprite.c
+++ b/drivers/gpu/drm/i915/intel_sprite.c
@@ -1644,6 +1644,9 @@ intel_update_plane(struct drm_plane *plane, struct drm_crtc *crtc,
 		if (ret)
 			goto cleanup;
 
+		if (IS_VALLEYVIEW(dev))
+			intel_vlv_edp_psr_disable(dev);
+
 		work->pending_flip_obj = obj;
 		/* Block clients from rendering to the new back buffer until
 		* the flip occurs and the object is no longer visible.
@@ -1654,6 +1657,10 @@ intel_update_plane(struct drm_plane *plane, struct drm_crtc *crtc,
 	} else
 		mutex_lock(&dev->struct_mutex);
 
+	/* Disable PSR */
+	if (IS_VALLEYVIEW(dev))
+		intel_vlv_edp_psr_disable(dev);
+
 	/* Note that this will apply the VT-d workaround for scanouts,
 	 * which is more restrictive than required for sprites. (The
 	 * primary plane requires 256KiB alignment with 64 PTE padding,
-- 
1.7.9.5

