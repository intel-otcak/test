From 1e9fbeeacedbd15c31299e999bbe49154e8dae57 Mon Sep 17 00:00:00 2001
From: Zhang Yanmin <yanmin.zhang@intel.com>
Date: Tue, 12 Apr 2016 07:33:10 +0800
Subject: [PATCH 8/9] Revert "[SSIC] Disable D3 entry on every SSIC
 disconnect."

This reverts commit f33978c0c4de9a299a26c28757baa9337614cc2f.

Change-Id: I4272d50b57bb09135449898e618461697f71d388
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-28971
Signed-off-by: Zhong Yang <yang.zhong@intel.com>
Signed-off-by: Zhang Yanmin <yanmin.zhang@intel.com>
Reviewed-on: https://android.intel.com:443/494019
---
 drivers/usb/core/hub.c            | 39 ++----------------
 drivers/usb/host/Makefile         |  1 -
 drivers/usb/host/hub-intel-cap.c  | 84 ---------------------------------------
 drivers/usb/host/hub-intel-cap.h  | 27 -------------
 drivers/usb/host/xhci-intel-cap.c |  1 -
 drivers/usb/host/xhci.h           |  4 --
 6 files changed, 3 insertions(+), 153 deletions(-)
 delete mode 100644 drivers/usb/host/hub-intel-cap.c
 delete mode 100644 drivers/usb/host/hub-intel-cap.h

diff --git a/drivers/usb/core/hub.c b/drivers/usb/core/hub.c
index 629ea8a..fd6eb5b 100644
--- a/drivers/usb/core/hub.c
+++ b/drivers/usb/core/hub.c
@@ -32,7 +32,6 @@
 #include <asm/byteorder.h>
 
 #include "hub.h"
-#include "../host/hub-intel-cap.h"
 
 #define USB_VENDOR_GENESYS_LOGIC		0x05e3
 #define HUB_QUIRK_CHECK_PORT_AUTOSUSPEND	0x01
@@ -1661,14 +1660,6 @@ static void hub_disconnect(struct usb_interface *intf)
 	if (hub->hdev->speed == USB_SPEED_HIGH)
 		highspeed_hubs--;
 
-	/* Free the timer as the context will be freed */
-	if (hub_intel_ssic_port_check(hdev)) {
-		struct usb_port	*port_dev = hub->ports[hdev->portnum - 1];
-		dev_dbg(&hdev->dev, "Enable D3 timer, portnum %d\n",
-				hdev->portnum);
-		hub_intel_ssic_d3_timer_set(hdev, port_dev, false);
-	}
-
 	usb_free_urb(hub->urb);
 	kfree(hub->ports);
 	kfree(hub->descriptor);
@@ -2127,17 +2118,9 @@ void usb_disconnect(struct usb_device **pdev)
 		sysfs_remove_link(&udev->dev.kobj, "port");
 		sysfs_remove_link(&port_dev->dev.kobj, "device");
 
-		if (!port_dev->did_runtime_put) {
-			/* Check for SSIC port disconnect
-			 * and enable the timer */
-			if (hub_intel_ssic_port_check(udev)) {
-				dev_dbg(&udev->dev, "Enable D3 timer, portnum %d\n",
-						udev->portnum);
-				hub_intel_ssic_d3_timer_set(udev,
-						port_dev, true);
-			} else
-				pm_runtime_put(&port_dev->dev);
-		} else
+		if (!port_dev->did_runtime_put)
+			pm_runtime_put(&port_dev->dev);
+		else
 			port_dev->did_runtime_put = false;
 	}
 
@@ -2452,13 +2435,6 @@ int usb_new_device(struct usb_device *udev)
 		}
 
 		pm_runtime_get_sync(&port_dev->dev);
-
-		/* Remove the timer as SSIC has enumerated correctly */
-		if (hub_intel_ssic_port_check(udev)) {
-			dev_dbg(&udev->dev, "Disable D3 timer, portnum %d\n",
-					udev->portnum);
-			hub_intel_ssic_d3_timer_set(udev, port_dev, false);
-		}
 	}
 
 	(void) usb_create_ep_devs(&udev->dev, &udev->ep0, udev);
@@ -4527,15 +4503,6 @@ hub_port_init (struct usb_hub *hub, struct usb_device *udev, int port1,
 	}
 
 	retval = 0;
-
-	/* Initialize the timer if it's empty */
-	if (hub_intel_ssic_port_check(udev)) {
-		struct usb_port	*port_dev = hub->ports[udev->portnum - 1];
-		dev_dbg(&udev->dev, "Initialize D3 timer, portnum %d\n",
-				udev->portnum);
-		hub_intel_ssic_d3_timer_init(hcd, port_dev);
-	}
-
 	/* notify HCD that we have a device connected and addressed */
 	if (hcd->driver->update_device)
 		hcd->driver->update_device(hcd, udev);
diff --git a/drivers/usb/host/Makefile b/drivers/usb/host/Makefile
index 5b2e873..ee6b036 100644
--- a/drivers/usb/host/Makefile
+++ b/drivers/usb/host/Makefile
@@ -17,7 +17,6 @@ xhci-hcd-y += xhci-ring.o xhci-hub.o xhci-dbg.o
 xhci-hcd-y += xhci-trace.o
 xhci-hcd-$(CONFIG_PCI)	+= xhci-pci.o
 xhci-hcd-y += xhci-intel-cap.o
-xhci-hcd-y += hub-intel-cap.o
 
 ifneq ($(CONFIG_USB_XHCI_PLATFORM), )
 	xhci-hcd-y		+= xhci-plat.o
diff --git a/drivers/usb/host/hub-intel-cap.c b/drivers/usb/host/hub-intel-cap.c
deleted file mode 100644
index ff82063..0000000
--- a/drivers/usb/host/hub-intel-cap.c
+++ /dev/null
@@ -1,84 +0,0 @@
-/*
- * Intel Vendor Defined xHCI hub-specific capability
- *
- * Copyright (C) 2015 Intel Corp.
- *
- * Author: Leszczynski, Konrad
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful, but
- * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
- * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
- * for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program;
- */
-
-#include <linux/usb/phy.h>
-#include <linux/usb/otg.h>
-
-#include "xhci.h"
-#include "../core/hub.h"
-#include "hub-intel-cap.h"
-
-bool hub_intel_ssic_port_check(struct usb_device *udev)
-{
-	struct usb_hcd *hcd = bus_to_hcd(udev->bus);
-	struct xhci_hcd *xhci = hcd_to_xhci(hcd);
-
-	/* Check if device present and the port matches */
-	return (xhci->ssic_device_present) &&
-			(udev->portnum == xhci->ssic_port_number);
-}
-
-void hub_intel_ssic_d3_set(unsigned long data)
-{
-	struct usb_port *port_dev = (struct usb_port *) data;
-
-	/* Decrement the usage counter */
-	pm_runtime_put(&port_dev->dev);
-}
-
-void hub_intel_ssic_d3_timer_init(struct usb_hcd *hcd,
-		struct usb_port *port_dev)
-{
-	struct xhci_hcd *xhci = hcd_to_xhci(hcd);
-
-	/* Check if already initialized */
-	if (xhci->set_d3_timer.data)
-		return;
-
-	/* Initialize the timer */
-	init_timer(&xhci->set_d3_timer);
-
-	/* Set the values for the timer */
-	xhci->set_d3_timer.data = (unsigned long) port_dev;
-	xhci->set_d3_timer.function = hub_intel_ssic_d3_set;
-	xhci->set_d3_timer.expires = jiffies +
-			msecs_to_jiffies(SSIC_D3_TIMEOUT);
-
-	xhci_dbg(xhci, "set_d3_timer initialized\n");
-}
-
-void hub_intel_ssic_d3_timer_set(struct usb_device *udev,
-		struct usb_port *port_dev, bool enable)
-{
-	struct usb_hcd *hcd = bus_to_hcd(udev->bus);
-	struct xhci_hcd *xhci = hcd_to_xhci(hcd);
-
-	/* Update the timer's data context */
-	xhci->set_d3_timer.data = (unsigned long) port_dev;
-
-	/* Enable the timer in disconnect case,
-	 * remove it on successful enumeration
-	 * (we need to decrease to counter) */
-	if (enable)
-		add_timer(&xhci->set_d3_timer);
-	else
-		if (del_timer(&xhci->set_d3_timer))
-			hub_intel_ssic_d3_set((unsigned long) port_dev);
-}
diff --git a/drivers/usb/host/hub-intel-cap.h b/drivers/usb/host/hub-intel-cap.h
deleted file mode 100644
index a40dbd1..0000000
--- a/drivers/usb/host/hub-intel-cap.h
+++ /dev/null
@@ -1,27 +0,0 @@
-/*
- * Copyright (C) 2015 Intel Corp.
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful, but
- * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
- * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
- * for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program;
- */
-
-/* SSIC D3 Disable Workaround
- * Timeout is set to 15 seconds.
- */
-#define SSIC_D3_TIMEOUT	15000
-
-extern bool hub_intel_ssic_port_check(struct usb_device *udev);
-extern void hub_intel_ssic_d3_set(unsigned long data);
-extern void hub_intel_ssic_d3_timer_init(struct usb_hcd *hcd,
-		struct usb_port *port_dev);
-extern void hub_intel_ssic_d3_timer_set(struct usb_device *udev,
-		struct usb_port *port_dev, bool enable);
diff --git a/drivers/usb/host/xhci-intel-cap.c b/drivers/usb/host/xhci-intel-cap.c
index 608bd7f..7728c53 100644
--- a/drivers/usb/host/xhci-intel-cap.c
+++ b/drivers/usb/host/xhci-intel-cap.c
@@ -83,7 +83,6 @@ int xhci_intel_need_disable_stall(struct xhci_hcd *xhci)
 
 	/* Assign the values */
 	modem_present = modem_data->package.elements[0].integer.value;
-	xhci->ssic_device_present = modem_present;
 	xhci->ssic_port_number = modem_data->package.elements[1].integer.value;
 	modem_type = modem_data->package.elements[2].integer.value;
 
diff --git a/drivers/usb/host/xhci.h b/drivers/usb/host/xhci.h
index 2d1c1fc..f9e42b6 100644
--- a/drivers/usb/host/xhci.h
+++ b/drivers/usb/host/xhci.h
@@ -1591,12 +1591,8 @@ struct xhci_hcd {
 	u32			port_status_u0;
 /* Compliance Mode Timer Triggered every 2 seconds */
 #define COMP_MODE_RCVRY_MSECS 2000
-	/* SSIC device present */
-	bool ssic_device_present;
 	/* SSIC port number */
 	int ssic_port_number;
-	/* Timer for SSIC D3 entry */
-	struct timer_list	set_d3_timer;
 };
 
 /* convert between an HCD pointer and the corresponding EHCI_HCD */
-- 
1.9.1

