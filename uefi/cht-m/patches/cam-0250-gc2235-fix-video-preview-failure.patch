From 327aed8d956fcc5d504ad8dc32d80af0e7493b3c Mon Sep 17 00:00:00 2001
From: Qing Xu <qing.xu@intel.com>
Date: Fri, 23 Jan 2015 15:37:51 +0800
Subject: [PATCH 250/255] gc2235: fix video preview failure

when switching from normal preview to video preview
atomisp timeout error happen, root cause is sensor
has not output correctly when switching res setting,

the solution is to do power reset and re-init

Change-Id: I20099a231bfad4b11ce7021eca358371389ac9eb
Signed-off-by: Qing Xu <qing.xu@intel.com>
Signed-off-by: Ding Yunliang <yunliang.ding@intel.com>
Reviewed-on: https://icggerrit.ir.intel.com/38902
Reviewed-by: Wei W Sun <wei.w.sun@intel.com>
Reviewed-by: Bingbu Cao <bingbu.cao@intel.com>
Approver: Wei Tao <wei.tao@intel.com>
Reviewed-by: Wei Tao <wei.tao@intel.com>
---
 drivers/external_drivers/camera/drivers/media/i2c/gc2235.c | 13 ++++++++-----
 1 file changed, 8 insertions(+), 5 deletions(-)

diff --git a/drivers/external_drivers/camera/drivers/media/i2c/gc2235.c b/drivers/external_drivers/camera/drivers/media/i2c/gc2235.c
index d0e488c..d19b566 100644
--- a/drivers/external_drivers/camera/drivers/media/i2c/gc2235.c
+++ b/drivers/external_drivers/camera/drivers/media/i2c/gc2235.c
@@ -592,12 +592,8 @@ static int __gc2235_init(struct v4l2_subdev *sd)
 
 static int gc2235_init(struct v4l2_subdev *sd)
 {
-	struct gc2235_device *dev = to_gc2235_sensor(sd);
 	int ret = 0;
-
-	mutex_lock(&dev->input_lock);
 	ret = __gc2235_init(sd);
-	mutex_unlock(&dev->input_lock);
 
 	return ret;
 }
@@ -728,8 +724,9 @@ static int power_down(struct v4l2_subdev *sd)
 static int gc2235_s_power(struct v4l2_subdev *sd, int on)
 {
 	int ret;
+
 	if (on == 0)
-		return power_down(sd);
+		ret = power_down(sd);
 	else {
 		ret = power_up(sd);
 		if (!ret)
@@ -836,6 +833,12 @@ static int startup(struct v4l2_subdev *sd)
 	struct i2c_client *client = v4l2_get_subdevdata(sd);
 	int ret = 0;
 
+	/* force gc2235 to do a reset, otherwise it
+	* can not output normal after switching res
+	*/
+	gc2235_s_power(sd, 0);
+	gc2235_s_power(sd, 1);
+
 	ret = gc2235_write_reg_array(client, gc2235_res[dev->fmt_idx].regs);
 	if (ret) {
 		dev_err(&client->dev, "gc2235 write register err.\n");
-- 
1.9.1

