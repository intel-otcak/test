From 8de075c1df34d84bf6884a587576a84018e6fc63 Mon Sep 17 00:00:00 2001
From: Albin B <albin.bala.krishnan@intel.com>
Date: Wed, 19 Nov 2014 18:45:41 +0530
Subject: [PATCH 1/1] pmic-ccsm: fix host mode detection during boot with otg
 device

PMIC status register will be used to determine ID detection,
when booting with otg device connected. Since the register bits
for ID Ground and Float are swapped between interrupt and status
register, use both(GND and Float)bits of interrupt register and
determine ID using the status register.

Change-Id: I8f7408162469be7c09ba33eda983872a1353fbd3
Tracked-on: https://jira01.devtools.intel.com/browse/IMINAN-9656
Signed-off-by: Albin B <albin.bala.krishnan@intel.com>
Signed-off-by: R, Kannappan <r.kannappan@intel.com>
---
 drivers/power/intel_pmic_ccsm.c | 29 ++++++++++++-----------------
 1 file changed, 12 insertions(+), 17 deletions(-)

diff --git a/drivers/power/intel_pmic_ccsm.c b/drivers/power/intel_pmic_ccsm.c
index ad4deec..d3dc8ca 100644
--- a/drivers/power/intel_pmic_ccsm.c
+++ b/drivers/power/intel_pmic_ccsm.c
@@ -970,9 +970,8 @@ static void handle_pwrsrc_interrupt(u16 int_reg, u16 stat_reg)
 	id_mask = BIT_POS(PMIC_INT_USBIDFLTDET) |
 				 BIT_POS(PMIC_INT_USBIDGNDDET);
 
-	if (int_reg & BIT_POS(PMIC_INT_USBIDGNDDET)) {
+	if (int_reg & id_mask) {
 		mask = (stat_reg & id_mask) == SHRT_GND_DET;
-		chc.otg_mode_enabled = mask;
 		/* Close/Open D+/D- lines in USB detection switch
 		 * due to WC PMIC bug
 		 */
@@ -981,10 +980,18 @@ static void handle_pwrsrc_interrupt(u16 int_reg, u16 stat_reg)
 			pmic_write_reg(chc.reg_map->pmic_usbphyctrl, 0x1);
 			atomic_notifier_call_chain(&chc.otg->notifier,
 				USB_EVENT_ID, &mask);
-		} else {
+		} else if ((int_reg & BIT_POS(PMIC_INT_USBIDFLTDET)) &&
+				chc.otg_mode_enabled) {
+			/* WA for OTG ID removal: PMIC interprets ID removal
+			 * as ID_FLOAT. Check for ID float and otg_mode enabled
+			 * to send ID disconnect.
+			 * In order to avoid ctyp detection flow, disable otg
+			 * mode during vbus turn off event
+			 */
 			atomic_notifier_call_chain(&chc.otg->notifier,
 				USB_EVENT_NONE, NULL);
 			pmic_write_reg(chc.reg_map->pmic_usbphyctrl, 0x0);
+
 		}
 	}
 
@@ -994,19 +1001,6 @@ static void handle_pwrsrc_interrupt(u16 int_reg, u16 stat_reg)
 				USB_EVENT_ID, &mask);
 	}
 
-	/* WA for OTG ID removal: PMIC interprets ID removal as ID_FLOAT.
-	 * Check for ID float and otg_mode enabled to send ID disconnect.
-	 */
-	if ((int_reg & BIT_POS(PMIC_INT_USBIDFLTDET)) &&
-				chc.otg_mode_enabled) {
-		atomic_notifier_call_chain(&chc.otg->notifier,
-			USB_EVENT_NONE, NULL);
-		pmic_write_reg(chc.reg_map->pmic_usbphyctrl, 0x0);
-		/* in order to avoid ctyp detection flow, disable otg mode
-		 * when vbus is turned off
-		 */
-	}
-
 	if (int_reg & BIT_POS(PMIC_INT_VBUS)) {
 		mask = !!(stat_reg & BIT_POS(PMIC_INT_VBUS));
 		if (mask) {
@@ -1027,7 +1021,8 @@ static void handle_pwrsrc_interrupt(u16 int_reg, u16 stat_reg)
 		if (chc.is_internal_usb_phy && !chc.otg_mode_enabled)
 			handle_internal_usbphy_notifications(mask);
 		else if (!mask)
-			intel_pmic_handle_otgmode(chc.otg_mode_enabled = false);
+			intel_pmic_handle_otgmode(chc.otg_mode_enabled =
+				(stat_reg & id_mask) == SHRT_GND_DET);
 	}
 }
 
-- 
1.9.1

