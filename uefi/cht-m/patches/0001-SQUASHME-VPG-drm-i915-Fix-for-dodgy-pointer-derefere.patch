From c5e9fa1af945ac4e7bd37c3035c0e756494f0273 Mon Sep 17 00:00:00 2001
Message-Id: <c5e9fa1af945ac4e7bd37c3035c0e756494f0273.1432852048.git.chang-joon.lee@intel.com>
From: John Harrison <John.C.Harrison@Intel.com>
Date: Thu, 23 Apr 2015 12:55:42 +0100
Subject: [PATCH 1/4] SQUASHME! [VPG]: drm/i915: Fix for dodgy pointer
 dereference in a scheduler trace point

In the case where the impossible and unexpected happens, one of the
scheduler's trace points would try to dereference an invalid pointer.
This patch makes sure the pointer is either valid or null (which is
checked for and handled correctly).

Also downgraded the BUG_ON that followed the broken pointer
dereference to a WARN_ON as these are preferred.

Note that the above bad things could only be hit if the hardware
somehow managed to return an invalid seqno value which should be
impossible. However, the BUG_ON was observed once by the testing
department. This change ensure that if it should happen again the
system will attempt to keep going. Although if it got here in the
first place then something is catastrohpically wrong so the chances of
survival are not great.

This patch could be squashed in to the one that originally added the
trace point:
  commit c64b5c1f236ee9c9362f06a675b4bc906ad3cb04
  Author: John Harrison <John.C.Harrison@Intel.com>
  Date:   Thu Apr 10 10:58:56 2014 +0100
  Subject: FOR_UPSTREAM [VPG]: drm/i915: Added trace points to scheduler
  Change-Id: I9886390cfc7897bc1faf50a104bc651d8baed8a5

Change-Id: Ic4eb084c755dabbfc5edeaf2e3dfa475c2b7a5f6
For: VIZ-1587
For: VIZ-4741
Signed-off-by: John Harrison <John.C.Harrison@Intel.com>
---
 drivers/gpu/drm/i915/i915_scheduler.c | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_scheduler.c b/drivers/gpu/drm/i915/i915_scheduler.c
index 52d6c7c..9fc6200 100644
--- a/drivers/gpu/drm/i915/i915_scheduler.c
+++ b/drivers/gpu/drm/i915/i915_scheduler.c
@@ -584,17 +584,19 @@ static void i915_scheduler_seqno_complete(struct intel_engine_cs *ring, uint32_t
 			break;
 	}
 
-	trace_i915_scheduler_landing(ring, seqno, node);
-
 	/*
 	 * NB: Lots of extra seqnos get added to the ring to track things
 	 * like cache flushes and page flips. So don't complain about if
 	 * no node was found.
 	 */
-	if (&node->link == &scheduler->node_queue[ring->id])
+	if (&node->link == &scheduler->node_queue[ring->id]) {
+		trace_i915_scheduler_landing(ring, seqno, NULL);
 		return;
+	}
 
-	BUG_ON(!I915_SQS_IS_FLYING(node));
+	trace_i915_scheduler_landing(ring, seqno, node);
+
+	WARN_ON(!I915_SQS_IS_FLYING(node));
 
 	/* Everything from here can be marked as done: */
 	list_for_each_entry_from(node, &scheduler->node_queue[ring->id], link) {
-- 
1.9.1

