From 00018c1f7afa05d424d8772ec0f87cb9e1e27459 Mon Sep 17 00:00:00 2001
From: Chuanxiao Dong <chuanxiao.dong@intel.com>
Date: Thu, 12 Feb 2015 14:30:24 +0800
Subject: [PATCH] mmc: host: change the max_req_size for Intel sdhci host to be
 4Mbytes

pnp team find that after using the 4Mbytes read head, the read performance
can be improved. Thus pnp team require driver to change to use 4Mbytes
as the max request size

The default max request size is 512Kbytes, which due to DMA boundary but
for Intel sdhci host controller, we can transfer even 4Mbytes in one
transferring in ADMA mode. Thus change to 4Mbytes per the pnp request.

Change-Id: I6997f09d9d6f279df80bfa725c064f8dec525ce5
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-22055
Signed-off-by: Chuanxiao Dong <chuanxiao.dong@intel.com>
---
 drivers/mmc/host/sdhci-acpi.c |  7 +++++++
 drivers/mmc/host/sdhci.c      | 16 ++++++++++++++--
 2 files changed, 21 insertions(+), 2 deletions(-)

diff --git a/drivers/mmc/host/sdhci-acpi.c b/drivers/mmc/host/sdhci-acpi.c
index b8988f1..a499f03 100644
--- a/drivers/mmc/host/sdhci-acpi.c
+++ b/drivers/mmc/host/sdhci-acpi.c
@@ -125,6 +125,10 @@ static const struct sdhci_acpi_chip sdhci_acpi_chip_int = {
  * on Baytrail based platforms, and should only be enabled on platforms with
  * host controller IP blocks that exhibit this.  We're calling based on the
  * ACPI-ID of the IP block.
+ *
+ * Intel SDHCI host controller can support up to 4Mbytes request size in ADMA
+ * mode, which is much larger than the default 512KBytes. Change to 4Mbytes
+ * per the performance requirements
  */
 static int sdhci_acpi_probe_slot(struct platform_device *pdev)
 {
@@ -139,6 +143,9 @@ static int sdhci_acpi_probe_slot(struct platform_device *pdev)
 	pm_qos_add_request(host->mmc->qos, PM_QOS_CPU_DMA_LATENCY,
 					PM_QOS_DEFAULT_VALUE);
 
+	/* change to 4Mbytes */
+	host->mmc->max_req_size = 4 * 1024 * 1024;
+
 	return 0;
 }
 
diff --git a/drivers/mmc/host/sdhci.c b/drivers/mmc/host/sdhci.c
index c204be8..1aad04b 100644
--- a/drivers/mmc/host/sdhci.c
+++ b/drivers/mmc/host/sdhci.c
@@ -745,7 +745,7 @@ static void sdhci_prepare_data(struct sdhci_host *host, struct mmc_command *cmd)
 	WARN_ON(host->data);
 
 	/* Sanity checks */
-	BUG_ON(data->blksz * data->blocks > 524288);
+	BUG_ON(data->blksz * data->blocks > host->mmc->max_req_size);
 	BUG_ON(data->blksz > host->mmc->max_blk_size);
 	BUG_ON(data->blocks > 65535);
 
@@ -3416,8 +3416,20 @@ int sdhci_add_host(struct sdhci_host *host)
 	/*
 	 * Maximum number of sectors in one transfer. Limited by DMA boundary
 	 * size (512KiB).
+	 * if host can support ADMA, let host controller choose the max request
+	 * size first.
 	 */
-	mmc->max_req_size = 524288;
+	if (mmc->max_req_size) {
+		/*
+		 * If host is in DMA mode, choose the smaller value between
+		 * 512KBytes DMA boundary and the choosen one.
+		 * If host is in ADMA mode, then use the choosen one
+		 */
+		if (!(host->flags & SDHCI_USE_ADMA) &&
+				(mmc->max_req_size > 524288))
+			mmc->max_req_size = 524288;
+	} else
+		mmc->max_req_size = 524288;
 
 	/*
 	 * Maximum segment size. Could be one segment with the maximum number
-- 
1.9.1

