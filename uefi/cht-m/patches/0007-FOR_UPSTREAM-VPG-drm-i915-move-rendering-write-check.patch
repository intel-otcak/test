From 694f03a46aeed4441ae2762277f07121d74508ac Mon Sep 17 00:00:00 2001
Message-Id: <694f03a46aeed4441ae2762277f07121d74508ac.1421897934.git.chang-joon.lee@intel.com>
In-Reply-To: <149a6863e085e113eb3c4f75ec994895411447d6.1421897934.git.chang-joon.lee@intel.com>
References: <149a6863e085e113eb3c4f75ec994895411447d6.1421897934.git.chang-joon.lee@intel.com>
From: Arun R Murthy <arun.r.murthy@intel.com>
Date: Fri, 12 Dec 2014 03:28:29 +0530
Subject: [PATCH 7/7] FOR_UPSTREAM [VPG]: drm/i915: move rendering write check
 path to atomic

In flip, while checking for completion of rendering on the buffer
to be flipped don't queue the flip function onto a workqueue in
case of atomic path, instead in the same context wait for the
rendering write to be completed and then perform the flip.

Issue: GMINL-4524
Change-Id: I413b5d83ae54f98525d3d6404bf744e65eefcb2b
Signed-off-by: Arun R Murthy <arun.r.murthy@intel.com>
Signed-off-by: Deepak M <m.deepak@intel.com>
Signed-off-by: CJ Lee <chang-joon.lee@intel.com>
---
 drivers/gpu/drm/i915/i915_drv.h      |    5 +++++
 drivers/gpu/drm/i915/i915_gem.c      |    2 +-
 drivers/gpu/drm/i915/intel_display.c |    6 ++++++
 3 files changed, 12 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/i915/i915_drv.h b/drivers/gpu/drm/i915/i915_drv.h
index 8d82b12..70c847c 100644
--- a/drivers/gpu/drm/i915/i915_drv.h
+++ b/drivers/gpu/drm/i915/i915_drv.h
@@ -2591,6 +2591,11 @@ void i915_gem_load(struct drm_device *dev);
 unsigned long i915_gem_shrink(struct drm_i915_private *dev_priv,
 			      long target,
 			      unsigned flags);
+int __wait_request(struct drm_i915_gem_request *req,
+			unsigned reset_counter,
+			bool interruptible,
+			struct timespec *timeout,
+			struct drm_i915_file_private *file_priv);
 #define I915_SHRINK_PURGEABLE 0x1
 #define I915_SHRINK_UNBOUND 0x2
 #define I915_SHRINK_BOUND 0x4
diff --git a/drivers/gpu/drm/i915/i915_gem.c b/drivers/gpu/drm/i915/i915_gem.c
index e482eea..d8c72cd 100644
--- a/drivers/gpu/drm/i915/i915_gem.c
+++ b/drivers/gpu/drm/i915/i915_gem.c
@@ -1212,7 +1212,7 @@ static int  intel_enable_rps_boost(struct drm_device *dev)
  * Returns 0 if the request was found within the alloted time. Else returns the
  * errno with remaining time filled in timeout argument.
  */
-static int __wait_request(struct drm_i915_gem_request *req,
+int __wait_request(struct drm_i915_gem_request *req,
 			  unsigned reset_counter,
 			  bool interruptible,
 			  struct timespec *timeout,
diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index a853ad8..c362d11e 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -10410,6 +10410,12 @@ static int intel_postpone_flip(struct drm_i915_gem_object *obj)
 	if (i915_seqno_passed(ring->get_seqno(ring, true),
 			      i915_gem_request_get_seqno(obj->last_write_req)))
 		return 0;
+	else {
+		if (!__wait_request(obj->last_write_req,
+			atomic_read(&dev_priv->gpu_error.reset_counter), true,
+			NULL, NULL))
+			return 0;
+	}
 
 	ret = i915_gem_check_olr(obj->last_write_req);
 	if (ret)
-- 
1.7.9.5

