From f47806f14b31640428210cbece6161d7e3639cf0 Mon Sep 17 00:00:00 2001
From: feng wang <feng.a.wang@intel.com>
Date: Mon, 21 Oct 2013 14:57:06 +0800
Subject: [PATCH 2/2] usb: handle unlink status in ncm driver

In ncm class driver, the bulk IN callback function doesn't handle
the URB unlink status from usb core. This will cause packet lost in
suspend entry.

Change-Id: I2b7919c1b15a294525d57654a78d3ba27ec34404
Signed-off-by: feng wang <feng.a.wang@intel.com>
Signed-off-by: Li Aixiong <aixiong.li@intel.com>
---
 drivers/net/usb/usbnet.c | 28 ++++++++++++++++++++++++++++
 1 file changed, 28 insertions(+)

diff --git a/drivers/net/usb/usbnet.c b/drivers/net/usb/usbnet.c
index 3f9bb68..53eee06 100644
--- a/drivers/net/usb/usbnet.c
+++ b/drivers/net/usb/usbnet.c
@@ -187,6 +187,14 @@ static void intr_complete (struct urb *urb)
 
 	/* software-driven interface shutdown */
 	case -ENOENT:		/* urb killed */
+		if (urb->actual_length) {
+			netdev_dbg(dev->net,
+				"intr status %d\, length: %dn",
+				status, urb->actual_length);
+			dev->driver_info->status(dev, urb);
+		}
+		break;
+
 	case -ESHUTDOWN:	/* hardware gone */
 		netif_dbg(dev, ifdown, dev->net,
 			  "intr shutdown, code %d\n", status);
@@ -586,7 +594,27 @@ static void rx_complete (struct urb *urb)
 		// FALLTHROUGH
 
 	/* software-driven interface shutdown */
+	case -ENOENT:		/* urb killed */
 	case -ECONNRESET:		/* async unlink */
+		if (urb->actual_length) {
+			if (skb->len < dev->net->hard_header_len) {
+				state = rx_cleanup;
+				dev->net->stats.rx_errors++;
+				dev->net->stats.rx_length_errors++;
+				netif_dbg(dev, rx_err, dev->net,
+					  "rx length %d\n", skb->len);
+			}
+			netif_dbg(dev, ifdown, dev->net,
+				  "rx length in async unlink: %d\n",
+					urb->actual_length);
+		} else {
+			netif_dbg(dev, ifdown, dev->net,
+				  "rx async unlink, code %d\n",
+					urb_status);
+			goto block;
+		}
+		break;
+
 	case -ESHUTDOWN:		/* hardware gone */
 		netif_dbg(dev, ifdown, dev->net,
 			  "rx shutdown, code %d\n", urb_status);
-- 
1.9.1

