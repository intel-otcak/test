From 172f59193fe210ad3f2ed35a9da258a3494809be Mon Sep 17 00:00:00 2001
Message-Id: <172f59193fe210ad3f2ed35a9da258a3494809be.1421709247.git.chang-joon.lee@intel.com>
In-Reply-To: <3650eb44734ad4fbe098313349da8185595a20d8.1421709247.git.chang-joon.lee@intel.com>
References: <3650eb44734ad4fbe098313349da8185595a20d8.1421709247.git.chang-joon.lee@intel.com>
From: Ramalingam C <ramalingam.c@intel.com>
Date: Fri, 26 Sep 2014 20:48:05 +0530
Subject: [PATCH 13/75] MUST_REBASE [VPG]: drm/i915/adf: i915 wrapper to get
 PWM_freq from VBT of i915

Added a wrapper function to get the PWM freq from the VBT of i915

MUST_REBASE: Since Google ADF framework is not in upstream and also
we cannot have two display drivers, other one being i915, we need to
work on i915 and ADF convergence path before it can be upstreamed

For: GMINL-3547
Change-Id: Ic2fe3859ab76c1a43933d0df27f69fc8c74e695f
Signed-off-by: Ramalingam C <ramalingam.c@intel.com>
Signed-off-by: Deepak S <deepak.s@intel.com>
---
 drivers/gpu/drm/i915/i915_adf_wrapper.c |    5 +++++
 include/drm/i915_adf.h                  |    1 +
 2 files changed, 6 insertions(+)

diff --git a/drivers/gpu/drm/i915/i915_adf_wrapper.c b/drivers/gpu/drm/i915/i915_adf_wrapper.c
index 058e51d..e0a32e1 100644
--- a/drivers/gpu/drm/i915/i915_adf_wrapper.c
+++ b/drivers/gpu/drm/i915/i915_adf_wrapper.c
@@ -128,5 +128,10 @@ void intel_adf_get_dsi_vbt_data(void **vbt_data, struct drm_display_mode **mode)
 }
 EXPORT_SYMBOL(intel_adf_get_dsi_vbt_data);
 
+u32 intel_adf_get_pwm_vbt_data(void)
+{
+	return i915_adf_dev->vbt.backlight.pwm_freq_hz;
+}
+EXPORT_SYMBOL(intel_adf_get_pwm_vbt_data);
 
 #endif
diff --git a/include/drm/i915_adf.h b/include/drm/i915_adf.h
index 78c2040..fe3a0e1 100644
--- a/include/drm/i915_adf.h
+++ b/include/drm/i915_adf.h
@@ -49,6 +49,7 @@ extern void intel_adf_pci_sideband_rw(u32 operation, u32 port,
 extern struct pci_dev *i915_adf_get_pci_dev(void);
 extern void intel_adf_get_dsi_vbt_data(void **vbt_data,
 				   struct drm_display_mode **mode);
+extern u32 intel_adf_get_pwm_vbt_data(void);
 extern void set_adf_ready(void);
 extern volatile bool g_adf_ready;
 extern int intel_adf_context_on_event(void);
-- 
1.7.9.5

