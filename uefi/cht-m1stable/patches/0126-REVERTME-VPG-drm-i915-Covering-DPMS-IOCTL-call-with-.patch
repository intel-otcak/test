From ebbe4bd5e392065a1b49c684311af5f9ec4d3cba Mon Sep 17 00:00:00 2001
Message-Id: <ebbe4bd5e392065a1b49c684311af5f9ec4d3cba.1413837857.git.chang-joon.lee@intel.com>
In-Reply-To: <006497b7323eca32c2f489a1a9f662743c0d16d2.1413837855.git.chang-joon.lee@intel.com>
References: <006497b7323eca32c2f489a1a9f662743c0d16d2.1413837855.git.chang-joon.lee@intel.com>
From: Sagar Kamble <sagar.a.kamble@intel.com>
Date: Mon, 9 Jun 2014 14:22:15 +0530
Subject: [PATCH 126/312] REVERTME [VPG]: drm/i915: Covering DPMS IOCTL call
 with runtime get and put

While resuming from D3_hot DPMS call is accessing registers when the
device is still suspended. This path was introduced in the following
commit: REVERTME: HACK: drm/i915: Force HW reset/modeset at DPMS ON

Hitting following warning.

<4>[  143.753399] ------------[ cut here ]------------
<4>[  143.783642] WARNING: CPU: 3 PID: 2391 at intel_uncore.c:47 assert_device_not_suspended.isra.7+0x4e/0x50()
<7>[  143.825223] Device suspended
<7>[  143.825240] Modules linked in:
<7>[  143.825269] CPU: 3 PID: 2391 Comm: surfaceflinger Tainted: G        W    3.14.0-i386-g1b3c07c #20
<7>[  143.825282] Hardware name: Intel Corp. VALLEYVIEW C0 (CR) PLATFORM/TABLET, BIOS BYTCCRB1.86C.0076.R21.1401071031 BYTC_IA32_R_2014_02_2_01 01/07/2014
<7>[  143.825295]  00000000 00000000 f4cc9d14 c195873f f4cc9d54 f4cc9d44 c108ac5e c1c69ef6
<7>[  143.825334]  f4cc9d70 00000957 c1ca1ff4 0000002f c150f54e c150f54e f6610000 f6610064
<7>[  143.825371]  001f0008 f4cc9d5c c108acb3 00000009 f4cc9d54 c1c69ef6 f4cc9d70 f4cc9d70
<7>[  143.825408] Call Trace:
<7>[  143.825443]  [<c195873f>] dump_stack+0x4b/0x75
<7>[  143.825469]  [<c108ac5e>] warn_slowpath_common+0x7e/0xa0
<7>[  143.825493]  [<c150f54e>] ? assert_device_not_suspended.isra.7+0x4e/0x50
<7>[  143.825514]  [<c150f54e>] ? assert_device_not_suspended.isra.7+0x4e/0x50
<7>[  143.825535]  [<c108acb3>] warn_slowpath_fmt+0x33/0x40
<7>[  143.825558]  [<c150f54e>] assert_device_not_suspended.isra.7+0x4e/0x50
<7>[  143.825581]  [<c15121f5>] vlv_read32+0x25/0x190
<7>[  143.825603]  [<c1511030>] ? gen6_write8+0x120/0x120
<7>[  143.825628]  [<c152b358>] intel_modeset_setup_hw_state+0x4c8/0xb60
<7>[  143.825653]  [<c195ec5c>] ? mutex_lock+0x1c/0x34
<7>[  143.825675]  [<c152ba67>] intel_connector_dpms+0x77/0x80
<7>[  143.825701]  [<c14bf04a>] drm_mode_obj_set_property_ioctl+0x38a/0x3b0
<7>[  143.825722]  [<c10b12b1>] ? finish_task_switch+0x41/0xd0
<7>[  143.825747]  [<c14becc0>] ? drm_mode_obj_get_properties_ioctl+0x120/0x120
<7>[  143.825770]  [<c14b05a9>] drm_ioctl+0x1d9/0x510
<7>[  143.825794]  [<c17b3c7c>] ? logger_aio_write+0x25c/0x2e0
<7>[  143.825817]  [<c14becc0>] ? drm_mode_obj_get_properties_ioctl+0x120/0x120
<7>[  143.825842]  [<c11c505f>] ? fsnotify+0x1ef/0x2c0
<7>[  143.825866]  [<c136f8f7>] ? avc_has_perm+0xc7/0x170
<7>[  143.825887]  [<c118ccb0>] ? do_readv_writev+0x140/0x230
<7>[  143.825910]  [<c14b03d0>] ? drm_ioctl_flags+0x40/0x40
<7>[  143.825932]  [<c119c73a>] do_vfs_ioctl+0x2fa/0x510
<7>[  143.825955]  [<c1371f82>] ? inode_has_perm.isra.40+0x32/0x40
<7>[  143.825976]  [<c137209f>] ? file_has_perm+0x7f/0x90
<7>[  143.825999]  [<c1372dec>] ? selinux_file_ioctl+0x4c/0xf0
<7>[  143.826020]  [<c119c9b0>] SyS_ioctl+0x60/0x90
<7>[  143.826041]  [<c196114b>] syscall_call+0x7/0xb
<7>[  143.826065]  [<c196007b>] ? rwsem_down_write_failed+0x12b/0x140
<7>[  143.826087]  [<c1960000>] ? rwsem_down_write_failed+0xb0/0x140
<4>[  143.826102] ---[ end trace 886872831d9bbaa9 ]---

Issue: GMIN-1416
Change-Id: Ifcc0c42932adbb514a67b01c5e4e7d498bda0c70
Signed-off-by: Sagar Kamble <sagar.a.kamble@intel.com>
---
 drivers/gpu/drm/i915/intel_display.c |    5 +++++
 1 file changed, 5 insertions(+)

diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index 95741ba..9ba13ff 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -5587,6 +5587,7 @@ static void intel_connector_check_state(struct intel_connector *connector)
 void intel_connector_dpms(struct drm_connector *connector, int mode)
 {
 	struct drm_device *dev = connector->dev;
+	struct drm_i915_private *dev_priv = dev->dev_private;
 
 	/* All the simple cases only support two dpms states. */
 	if (mode != DRM_MODE_DPMS_ON)
@@ -5597,6 +5598,8 @@ void intel_connector_dpms(struct drm_connector *connector, int mode)
 
 	connector->dpms = mode;
 
+	intel_runtime_pm_get(dev_priv);
+
 	if (mode == DRM_MODE_DPMS_ON)
 		intel_modeset_setup_hw_state(dev, true);
 
@@ -5605,6 +5608,8 @@ void intel_connector_dpms(struct drm_connector *connector, int mode)
 		intel_encoder_dpms(to_intel_encoder(connector->encoder), mode);
 
 	intel_modeset_check_state(connector->dev);
+	
+	intel_runtime_pm_put(dev_priv);
 }
 
 /* Simple connector->get_hw_state implementation for encoders that support only
-- 
1.7.9.5

