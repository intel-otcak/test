From 8d6a79f0a548a8450c742a9fa1962eb1fe7b2c73 Mon Sep 17 00:00:00 2001
From: Albin B <albin.bala.krishnan@intel.com>
Date: Tue, 11 Nov 2014 16:24:06 +0530
Subject: [PATCH] pmic-ccsm: fix the otg mode issues

1. set the otg mode bit in charger control register
   in order to disable the ctyp/charging flow
2. since the PMIC IC detects ID GND removal as ID FLT
   check for otg mode and send the otg notification.
3. open/close the USB switch for ID connect/disconnect
   appropriately.

Tracked-on: https://jira01.devtools.intel.com/browse/IMINAN-7549
Change-Id: I4f7147001a3e0da7ae0fc4ec1bbaf9f6d0da7936
Signed-off-by: R, Kannappan <r.kannappan@intel.com>
Signed-off-by: Albin B <albin.bala.krishnan@intel.com>
---
 drivers/power/intel_pmic_ccsm.c       | 38 ++++++++++++++++++++++++-----------
 include/linux/power/intel_pmic_ccsm.h |  1 -
 2 files changed, 26 insertions(+), 13 deletions(-)

diff --git a/drivers/power/intel_pmic_ccsm.c b/drivers/power/intel_pmic_ccsm.c
index fe1bf17..827c2a6 100644
--- a/drivers/power/intel_pmic_ccsm.c
+++ b/drivers/power/intel_pmic_ccsm.c
@@ -85,6 +85,7 @@
 
 /* Type definitions */
 static void pmic_bat_zone_changed(void);
+static int intel_pmic_handle_otgmode(bool enable);
 
 /* Extern definitions */
 
@@ -562,7 +563,7 @@ int intel_pmic_enable_vbus(bool enable)
 	return ret;
 }
 
-int intel_pmic_handle_otgmode(bool enable)
+static int intel_pmic_handle_otgmode(bool enable)
 {
 	int ret = 0;
 
@@ -966,19 +967,23 @@ static void handle_pwrsrc_interrupt(u16 int_reg, u16 stat_reg)
 
 	id_mask = BIT_POS(PMIC_INT_USBIDFLTDET) |
 				 BIT_POS(PMIC_INT_USBIDGNDDET);
+
 	if (int_reg & BIT_POS(PMIC_INT_USBIDGNDDET)) {
 		mask = (stat_reg & id_mask) == SHRT_GND_DET;
-		chc.otg_mode_enabled = !!mask;
-		/* Close D+/D- lines in USB detection switch
+		chc.otg_mode_enabled = mask;
+		/* Close/Open D+/D- lines in USB detection switch
 		 * due to WC PMIC bug
 		 */
-		pmic_write_reg(chc.reg_map->pmic_usbphyctrl, 0x1);
-		if (mask)
+		if (mask) {
+			intel_pmic_handle_otgmode(chc.otg_mode_enabled);
+			pmic_write_reg(chc.reg_map->pmic_usbphyctrl, 0x1);
 			atomic_notifier_call_chain(&chc.otg->notifier,
 				USB_EVENT_ID, &mask);
-		else
+		} else {
 			atomic_notifier_call_chain(&chc.otg->notifier,
 				USB_EVENT_NONE, NULL);
+			pmic_write_reg(chc.reg_map->pmic_usbphyctrl, 0x0);
+		}
 	}
 
 	if (int_reg & BIT_POS(PMIC_INT_USBIDDET)) {
@@ -987,18 +992,27 @@ static void handle_pwrsrc_interrupt(u16 int_reg, u16 stat_reg)
 				USB_EVENT_ID, &mask);
 	}
 
+	/* WA for OTG ID removal: PMIC interprets ID removal as ID_FLOAT.
+	 * Check for ID float and otg_mode enabled to send ID disconnect.
+	 */
+	if ((int_reg & BIT_POS(PMIC_INT_USBIDFLTDET)) &&
+				chc.otg_mode_enabled) {
+		atomic_notifier_call_chain(&chc.otg->notifier,
+			USB_EVENT_NONE, NULL);
+		pmic_write_reg(chc.reg_map->pmic_usbphyctrl, 0x0);
+		/* in order to avoid ctyp detection flow, disable otg mode
+		 * when vbus is turned off
+		 */
+	}
+
 	if (int_reg & BIT_POS(PMIC_INT_VBUS)) {
 		mask = !!(stat_reg & BIT_POS(PMIC_INT_VBUS));
 		if (mask) {
-			/* Open D+/D- lines in USB detection switch
-			 * due to WC PMIC bug
-			 */
-			pmic_write_reg(chc.reg_map->pmic_usbphyctrl, 0x0);
 			dev_info(chc.dev,
 				"USB VBUS Detected. Notifying OTG driver\n");
 			chc.vbus_connect_status = true;
 
-			ret = pmic_read_reg(chc.reg_map->pmic_chgrctrl0, &val);
+			ret = pmic_read_reg(chc.reg_map->pmic_chgrctrl1, &val);
 			if (!ret && (val & CHGRCTRL1_OTGMODE_MASK))
 				chc.otg_mode_enabled = true;
 		} else {
@@ -1011,7 +1025,7 @@ static void handle_pwrsrc_interrupt(u16 int_reg, u16 stat_reg)
 		if (chc.is_internal_usb_phy && !chc.otg_mode_enabled)
 			handle_internal_usbphy_notifications(mask);
 		else if (!mask)
-				chc.otg_mode_enabled = false;
+			intel_pmic_handle_otgmode(chc.otg_mode_enabled = false);
 	}
 }
 
diff --git a/include/linux/power/intel_pmic_ccsm.h b/include/linux/power/intel_pmic_ccsm.h
index 0119a6d..2f33e46 100644
--- a/include/linux/power/intel_pmic_ccsm.h
+++ b/include/linux/power/intel_pmic_ccsm.h
@@ -108,7 +108,6 @@ extern int intel_pmic_set_cc(int);
 extern int intel_pmic_set_cv(int);
 extern int intel_pmic_set_ilimma(int);
 extern int intel_pmic_enable_vbus(bool enable);
-extern int intel_pmic_handle_otgmode(bool enable);
 /* WA for ShadyCove VBUS removal detect issue */
 extern int intel_pmic_handle_low_supply(void);
 
-- 
1.9.1

