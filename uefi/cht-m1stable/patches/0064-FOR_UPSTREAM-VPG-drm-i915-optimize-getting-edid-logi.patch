From cfbc0bfe11aff1e625f3bcd20eac83d17b0cc107 Mon Sep 17 00:00:00 2001
Message-Id: <cfbc0bfe11aff1e625f3bcd20eac83d17b0cc107.1431284210.git.chang-joon.lee@intel.com>
In-Reply-To: <89460f3fc3d6c0659d44897a6adec3c3fecc5564.1431284209.git.chang-joon.lee@intel.com>
References: <89460f3fc3d6c0659d44897a6adec3c3fecc5564.1431284209.git.chang-joon.lee@intel.com>
From: Tan Wei <weix.z.tan@intel.com>
Date: Wed, 22 Apr 2015 10:12:41 +0800
Subject: [PATCH 64/68] FOR_UPSTREAM [VPG]: drm/i915: optimize getting edid
 logic

1) when boot without hdmi connected, we will fail to get edid with gmbus
and fallback to try to i2c bitbang, it will also lead a failure and loop
three times. These operation will impact boot progress about ~230ms and
other i2c transfer. Now we just retry only once.

2) don't set force_bit because we may fail in 1st edid when system
bootup without HDMI. Always try GMBUS first and then bit-banging.

Issue: IMINAN-30437
Change-Id: I707e8eaaf55f21910f3192aadae4ab38da4a4c37
Signed-off-by: Tan Wei <weix.z.tan@intel.com>
---
 drivers/gpu/drm/i915/intel_hdmi.c |    5 ++++-
 drivers/gpu/drm/i915/intel_i2c.c  |    2 --
 2 files changed, 4 insertions(+), 3 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_hdmi.c b/drivers/gpu/drm/i915/intel_hdmi.c
index b2006de..42a1cc6 100644
--- a/drivers/gpu/drm/i915/intel_hdmi.c
+++ b/drivers/gpu/drm/i915/intel_hdmi.c
@@ -1108,8 +1108,11 @@ struct edid *intel_hdmi_get_edid(struct drm_connector *connector, bool force)
 		/*
 		 * A few monitors issue EDID after some delay, so give them
 		 * a few chances but no longer than 30ms
+		 *
+		 * Force bit will be at bootup,
+		 * decrease retry times to optimize boot progress
 		 */
-		retry = 3;
+		retry = force ? 1 : 3;
 READ_EDID:
 		new_edid = drm_get_edid(connector, adapter);
 		if (!new_edid) {
diff --git a/drivers/gpu/drm/i915/intel_i2c.c b/drivers/gpu/drm/i915/intel_i2c.c
index 7ceafdf..28c61eb 100644
--- a/drivers/gpu/drm/i915/intel_i2c.c
+++ b/drivers/gpu/drm/i915/intel_i2c.c
@@ -544,8 +544,6 @@ fallback:
 	DRM_INFO("Falling back to bit banging on pin %d\n", bus->reg0 & 0xff);
 	I915_WRITE(GMBUS0 + reg_offset, 0);
 
-	/* Hardware may not support GMBUS over these pins? Try GPIO bitbanging instead. */
-	bus->force_bit = 1;
 	ret = i2c_bit_algo.master_xfer(adapter, msgs, num);
 
 out:
-- 
1.7.9.5

