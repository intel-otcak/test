From 1b9dedec6de1ebcd4baeef4c28ade25958821b6b Mon Sep 17 00:00:00 2001
From: Albin B <albin.bala.krishnan@intel.com>
Date: Mon, 1 Jun 2015 15:41:52 +0530
Subject: [PATCH] [USB_TYPEC]: Fix issue in unbinding detect driver

In unbinding the detect driver there is an issue while comparing the
label and iterating the list. This patch fixes the issue and unbind
the detect driver upon unloading by keeping list safe while iterating.

Change-Id: I8f989cda66171a30f73f5ab7960aaa4e9de8c964
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-38067
Signed-off-by: Albin B <albin.bala.krishnan@intel.com>
---
 drivers/usb/typec/phy-fusb300.c      |  2 +-
 drivers/usb/typec/usb_typec_detect.c | 10 +++++++---
 include/linux/usb_typec_phy.h        |  2 ++
 3 files changed, 10 insertions(+), 4 deletions(-)

diff --git a/drivers/usb/typec/phy-fusb300.c b/drivers/usb/typec/phy-fusb300.c
index 2276bd398d26..e5faa4e39af9 100644
--- a/drivers/usb/typec/phy-fusb300.c
+++ b/drivers/usb/typec/phy-fusb300.c
@@ -1466,7 +1466,7 @@ static int fusb300_remove(struct i2c_client *client)
 	struct fusb300_chip *chip = i2c_get_clientdata(client);
 	struct typec_phy *phy = &chip->phy;
 
-	typec_unbind_detect(&chip->phy);
+	typec_unbind_detect(phy);
 	typec_remove_phy(phy);
 	return 0;
 }
diff --git a/drivers/usb/typec/usb_typec_detect.c b/drivers/usb/typec/usb_typec_detect.c
index 49ccfd5b5f20..00a4cfc0a5e1 100644
--- a/drivers/usb/typec/usb_typec_detect.c
+++ b/drivers/usb/typec/usb_typec_detect.c
@@ -57,6 +57,7 @@ static const char *detect_extcon_cable[] = {
 };
 
 static LIST_HEAD(typec_detect_list);
+static DEFINE_SPINLOCK(slock);
 static void detect_remove(struct typec_detect *detect);
 
 static int detect_kthread(void *data)
@@ -603,13 +604,16 @@ static void detect_remove(struct typec_detect *detect)
 
 int typec_unbind_detect(struct typec_phy *phy)
 {
-	struct typec_detect *detect;
+	struct typec_detect *detect, *temp;
 
-	list_for_each_entry(detect, &typec_detect_list, list) {
-		if (strcmp(detect->phy->label, phy->label)) {
+	spin_lock(&slock);
+	list_for_each_entry_safe(detect, temp, &typec_detect_list, list) {
+		if (!strncmp(detect->phy->label, phy->label, MAX_LABEL_SIZE)) {
 			list_del(&detect->list);
 			detect_remove(detect);
 		}
 	}
+	spin_unlock(&slock);
+
 	return 0;
 }
diff --git a/include/linux/usb_typec_phy.h b/include/linux/usb_typec_phy.h
index c8bf57e0b19a..1d7a7862b4d7 100644
--- a/include/linux/usb_typec_phy.h
+++ b/include/linux/usb_typec_phy.h
@@ -130,6 +130,8 @@ struct typec_cc_psy {
 	enum typec_current cur;
 };
 
+#define MAX_LABEL_SIZE		16
+
 struct typec_phy;
 
 struct typec_ops {
-- 
1.9.1

