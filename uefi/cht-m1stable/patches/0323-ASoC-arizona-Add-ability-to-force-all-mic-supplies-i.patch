From 4a63aa3cfdefd4a137b8f5464c3879a3970fe276 Mon Sep 17 00:00:00 2001
From: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date: Tue, 23 Sep 2014 16:09:00 +0100
Subject: [PATCH 323/351] ASoC: arizona: Add ability to force all mic supplies
 into bypass mode

This is useful when suspending the system, with some low power audio
still running.

Change-Id: I82587b78e26eaf4cd45b219ad4bd184055046ad0
Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
---
 include/linux/mfd/arizona/core.h |    2 ++
 sound/soc/codecs/arizona.c       |   59 ++++++++++++++++++++++++++++++++++++++
 sound/soc/codecs/arizona.h       |    3 ++
 3 files changed, 64 insertions(+)

diff --git a/include/linux/mfd/arizona/core.h b/include/linux/mfd/arizona/core.h
index 8060aa4..e81f70f 100644
--- a/include/linux/mfd/arizona/core.h
+++ b/include/linux/mfd/arizona/core.h
@@ -151,6 +151,8 @@ struct arizona {
 
 	uint16_t out_comp_coeff;
 	uint8_t out_comp_enabled;
+
+	bool bypass_cache;
 };
 
 #define ARIZONA_DVFS_SR1_RQ          0x00000001
diff --git a/sound/soc/codecs/arizona.c b/sound/soc/codecs/arizona.c
index e9fbaf3..adf8e4f 100644
--- a/sound/soc/codecs/arizona.c
+++ b/sound/soc/codecs/arizona.c
@@ -2775,6 +2775,65 @@ int arizona_set_custom_jd(struct snd_soc_codec *codec,
 }
 EXPORT_SYMBOL_GPL(arizona_set_custom_jd);
 
+int arizona_enable_force_bypass(struct snd_soc_codec *codec)
+{
+	struct arizona *arizona = dev_get_drvdata(codec->dev->parent);
+	unsigned int val;
+
+	regmap_read(arizona->regmap, ARIZONA_MIC_CHARGE_PUMP_1, &val);
+	arizona->bypass_cache = !(val & ARIZONA_CPMIC_BYPASS);
+	if (arizona->bypass_cache) {
+		mutex_lock(&arizona->dapm->card->dapm_mutex);
+		snd_soc_dapm_disable_pin(arizona->dapm, "MICSUPP");
+		mutex_unlock(&arizona->dapm->card->dapm_mutex);
+
+		snd_soc_dapm_sync(arizona->dapm);
+
+		regmap_update_bits(arizona->regmap, ARIZONA_MIC_CHARGE_PUMP_1,
+				   ARIZONA_CPMIC_BYPASS, ARIZONA_CPMIC_BYPASS);
+	}
+
+	regmap_update_bits(arizona->regmap, ARIZONA_MIC_BIAS_CTRL_1,
+			   ARIZONA_MICB1_BYPASS, ARIZONA_MICB1_BYPASS);
+	regmap_update_bits(arizona->regmap, ARIZONA_MIC_BIAS_CTRL_2,
+			   ARIZONA_MICB2_BYPASS, ARIZONA_MICB2_BYPASS);
+	regmap_update_bits(arizona->regmap, ARIZONA_MIC_BIAS_CTRL_3,
+			   ARIZONA_MICB3_BYPASS, ARIZONA_MICB3_BYPASS);
+
+	return 0;
+}
+EXPORT_SYMBOL_GPL(arizona_enable_force_bypass);
+
+int arizona_disable_force_bypass(struct snd_soc_codec *codec)
+{
+	struct arizona *arizona = dev_get_drvdata(codec->dev->parent);
+	struct arizona_micbias *micbias = arizona->pdata.micbias;
+
+	if (arizona->bypass_cache) {
+		mutex_lock(&arizona->dapm->card->dapm_mutex);
+		snd_soc_dapm_force_enable_pin(arizona->dapm, "MICSUPP");
+		mutex_unlock(&arizona->dapm->card->dapm_mutex);
+
+		snd_soc_dapm_sync(arizona->dapm);
+
+		regmap_update_bits(arizona->regmap, ARIZONA_MIC_CHARGE_PUMP_1,
+				   ARIZONA_CPMIC_BYPASS, 0);
+	}
+
+	if (!micbias[0].bypass && micbias[0].mV)
+		regmap_update_bits(arizona->regmap, ARIZONA_MIC_BIAS_CTRL_1,
+				   ARIZONA_MICB1_BYPASS, 0);
+	if (!micbias[1].bypass && micbias[1].mV)
+		regmap_update_bits(arizona->regmap, ARIZONA_MIC_BIAS_CTRL_2,
+				   ARIZONA_MICB1_BYPASS, 0);
+	if (!micbias[2].bypass && micbias[2].mV)
+		regmap_update_bits(arizona->regmap, ARIZONA_MIC_BIAS_CTRL_3,
+				   ARIZONA_MICB1_BYPASS, 0);
+
+	return 0;
+}
+EXPORT_SYMBOL_GPL(arizona_disable_force_bypass);
+
 MODULE_DESCRIPTION("ASoC Wolfson Arizona class device support");
 MODULE_AUTHOR("Mark Brown <broonie@opensource.wolfsonmicro.com>");
 MODULE_LICENSE("GPL");
diff --git a/sound/soc/codecs/arizona.h b/sound/soc/codecs/arizona.h
index fa270ac..9790e09 100644
--- a/sound/soc/codecs/arizona.h
+++ b/sound/soc/codecs/arizona.h
@@ -301,4 +301,7 @@ extern int arizona_set_ez2ctrl_cb(struct snd_soc_codec *codec,
 extern int arizona_set_custom_jd(struct snd_soc_codec *codec,
 				 const struct arizona_jd_state *custom_jd);
 
+extern int arizona_enable_force_bypass(struct snd_soc_codec *codec);
+extern int arizona_disable_force_bypass(struct snd_soc_codec *codec);
+
 #endif
-- 
1.7.9.5

