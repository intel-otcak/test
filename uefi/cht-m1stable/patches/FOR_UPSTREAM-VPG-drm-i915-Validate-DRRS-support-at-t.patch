From 5d2e6eb4f9aae175bf5f584bc4984beb5466b3f8 Mon Sep 17 00:00:00 2001
From: Ramalingam C <ramalingam.c@intel.com>
Date: Wed, 13 Jan 2016 16:52:51 +0530
Subject: [PATCH 4/6] FOR_UPSTREAM [VPG]: drm/i915: Validate DRRS support at
 the start of DRRS init

At the start of DRRS initialization, to avoid the unneccessary CPU ops
we are vailidating the DRRS support for the attached encoders and also
validating the VBT parameter.

Change-Id: I6f44861f3c94072bdc0278b53288c69bcf99e726
Signed-off-by: Ramalingam C <ramalingam.c@intel.com>
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-18026
Reviewed-on: https://android.intel.com:443/463663
---
 drivers/gpu/drm/i915/i915_drv.h   |  2 ++
 drivers/gpu/drm/i915/intel_drrs.c | 18 +++++++++++-------
 2 files changed, 13 insertions(+), 7 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_drv.h b/drivers/gpu/drm/i915/i915_drv.h
index 94f0f41..aa9608a 100644
--- a/drivers/gpu/drm/i915/i915_drv.h
+++ b/drivers/gpu/drm/i915/i915_drv.h
@@ -2465,6 +2465,8 @@ enum context_submission_status {
 				 (dev)->pdev->device == 0x0A1E)
 #define IS_PRELIMINARY_HW(intel_info) ((intel_info)->is_preliminary)
 #define IS_PLATFORM_HAS_DRRS(dev)	IS_VALLEYVIEW(dev)
+#define IS_ENCODER_SUPPORTS_DRRS(type)	((type == INTEL_OUTPUT_DSI) || \
+					(type == INTEL_OUTPUT_EDP))
 
 /*
  * The genX designation typically refers to the render engine, so render
diff --git a/drivers/gpu/drm/i915/intel_drrs.c b/drivers/gpu/drm/i915/intel_drrs.c
index ec218371..dd07148 100644
--- a/drivers/gpu/drm/i915/intel_drrs.c
+++ b/drivers/gpu/drm/i915/intel_drrs.c
@@ -314,6 +314,17 @@ int intel_drrs_init(struct drm_device *dev,
 		return -EPERM;
 	}
 
+	if (!IS_ENCODER_SUPPORTS_DRRS(intel_encoder->type)) {
+		DRM_DEBUG("DRRS: Unsupported Encoder\n");
+		return -EINVAL;
+	}
+
+	/* First check if Seamless DRRS is enabled from VBT struct */
+	if (dev_priv->vbt.drrs_type != SEAMLESS_DRRS_SUPPORT) {
+		DRM_DEBUG("Panel doesn't support SEAMLESS DRRS\n");
+		return -EPERM;
+	}
+
 	if (get_drrs_struct_index_for_connector(dev_priv, intel_connector)
 									>= 0) {
 		DRM_DEBUG("DRRS is already initialized for this connector\n");
@@ -351,13 +362,6 @@ int intel_drrs_init(struct drm_device *dev,
 		goto err_out;
 	}
 
-	/* First check if DRRS is enabled from VBT struct */
-	if (dev_priv->vbt.drrs_type != SEAMLESS_DRRS_SUPPORT) {
-		DRM_DEBUG("Panel doesn't support SEAMLESS DRRS\n");
-		ret = -EPERM;
-		goto err_out;
-	}
-
 	if (!drrs->encoder_ops->init || !drrs->encoder_ops->exit ||
 					!drrs->encoder_ops->set_drrs_state) {
 		DRM_DEBUG("Essential func ptrs are NULL\n");
-- 
1.9.1

