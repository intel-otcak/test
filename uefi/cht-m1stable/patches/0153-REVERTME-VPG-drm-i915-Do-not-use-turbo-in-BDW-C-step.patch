From 40c7d9ddf650e92723936a4deba0d839b6620796 Mon Sep 17 00:00:00 2001
Message-Id: <40c7d9ddf650e92723936a4deba0d839b6620796.1413837857.git.chang-joon.lee@intel.com>
In-Reply-To: <006497b7323eca32c2f489a1a9f662743c0d16d2.1413837855.git.chang-joon.lee@intel.com>
References: <006497b7323eca32c2f489a1a9f662743c0d16d2.1413837855.git.chang-joon.lee@intel.com>
From: Michel Thierry <michel.thierry@intel.com>
Date: Tue, 27 May 2014 13:39:12 +0100
Subject: [PATCH 153/312] REVERTME [VPG]: drm/i915: Do not use turbo in BDW C
 stepping.
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Enabling turbo leads to GPU hangs in BDW C stepping.

The problem is that  MCHBAR_PCU_C0 is not recorded in BDW C steppings
(that’s MCHBAR_MIRROR_BASE + 0x5960, the number of cycles that GT was in
C0).

Because of this problem, current_c0 is always zero and
bdw_sw_calculate_freq() won’t work. The ucore register is OK in D
stepping and turbo operates correctly there.

Tagged as REVERTME as disabling turbo affects performance considerably,
but this workaround is needed until C steppings are phased out.

Signed-off-by: Michel Thierry <michel.thierry@intel.com>

Pulled from ABT/kernel-internal to GMin/gmin.

Change-Id: Ie9a4cd284f0df5b38da1097e3f43679da8ee0539
Signed-off-by: Oscar Mateo <oscar.mateo@intel.com>
---
 drivers/gpu/drm/i915/i915_reg.h |    2 ++
 drivers/gpu/drm/i915/intel_pm.c |   11 +++++++++++
 2 files changed, 13 insertions(+)

diff --git a/drivers/gpu/drm/i915/i915_reg.h b/drivers/gpu/drm/i915/i915_reg.h
index 4506d77..82a896c 100644
--- a/drivers/gpu/drm/i915/i915_reg.h
+++ b/drivers/gpu/drm/i915/i915_reg.h
@@ -116,6 +116,8 @@
 #define  GEN6_GRDOM_MEDIA		(1 << 2)
 #define  GEN6_GRDOM_BLT			(1 << 3)
 
+#define GEN8_SRID_0_2_0_PCI		0xf8
+
 #define RING_PP_DIR_BASE(ring)		((ring)->mmio_base+0x228)
 #define RING_PP_DIR_BASE_READ(ring)	((ring)->mmio_base+0x518)
 #define RING_PP_DIR_DCLV(ring)		((ring)->mmio_base+0x220)
diff --git a/drivers/gpu/drm/i915/intel_pm.c b/drivers/gpu/drm/i915/intel_pm.c
index 149996a..fef1c7d 100644
--- a/drivers/gpu/drm/i915/intel_pm.c
+++ b/drivers/gpu/drm/i915/intel_pm.c
@@ -5290,6 +5290,7 @@ static void intel_gen6_powersave_work(struct work_struct *work)
 void intel_enable_gt_powersave(struct drm_device *dev)
 {
 	struct drm_i915_private *dev_priv = dev->dev_private;
+	u32 val;
 
 	if (IS_IRONLAKE_M(dev)) {
 		mutex_lock(&dev->struct_mutex);
@@ -5298,6 +5299,16 @@ void intel_enable_gt_powersave(struct drm_device *dev)
 		intel_init_emon(dev);
 		mutex_unlock(&dev->struct_mutex);
 	} else if (IS_GEN6(dev) || IS_GEN7(dev) || IS_BROADWELL(dev)) {
+		/* Do not enable turbo in BDW C (or older) steppings */
+		if (IS_BROADWELL(dev)) {
+			pci_read_config_dword(dev->pdev, GEN8_SRID_0_2_0_PCI, &val);
+			DRM_DEBUG_DRIVER("Stepping revision ID = 0x%x\n",  val);
+			if ((val >> 16) <= 4) {
+				WARN(1, "Cannot enable Turbo! Expect low performance\n");
+				return;
+			}
+		}
+
 		/*
 		 * PCU communication is slow and this doesn't need to be
 		 * done at any specific time, so do this out of our fast path
-- 
1.7.9.5

