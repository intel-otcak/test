From e8e354bf27877b358d2f3a8384118dea8dc75f95 Mon Sep 17 00:00:00 2001
Message-Id: <e8e354bf27877b358d2f3a8384118dea8dc75f95.1441242314.git.yunwei.zhang@intel.com>
From: Chris Wilson <chris@chris-wilson.co.uk>
Date: Sun, 16 Aug 2015 09:48:21 +0100
Subject: [PATCH 1/2] FROM_UPSTREAM [VPG]: drm/i915: Mark the GTT as uncached,
 not WC, for Cherryview

I traced a stability issue on my Braswell nuc to a lack of visibility of
PTE writes into the GTT by the GPU. (The smoking gun was GPU hangs with
random fault addresses but correct command streams). Adding clflushes or
kicking the chipset flush harder had no effect, only disabling the WC
cache for the GSM like for Broxton removed the hangs.

Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-39787
Upstream-repo: http://patchwork.freedesktop.org/patch/57274/
Change-Id: I46c534f6f8d14ff614bcb6ec96a71c1301d595f6
Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
Tested-By: Intel Graphics QA PRTS (Patch Regression Test System Contact: shuang.he@intel.com)
Signed-off-by: Thomas Daniel <thomas.daniel@intel.com>
## Don't forget to add a JIRA URL to the Tracked-On metadata!
## https://wiki.ith.intel.com/display/CACTUS/Patch+requirements+check
## url should be in the form:
## Tracked-On: https://jira01.devtools.intel.com/browse/<PROJ>-<NUMB>
## Several Tracked-On lines are allowed
## you can fully prefill your Tracked-On commits using environment variable:
## export CURRENT_TRACKED_ON=https://jira01.devtools.intel.com/browse/<PROJ>-<NUMB>
##
---
 drivers/gpu/drm/i915/i915_gem_gtt.c | 14 +++++++++++++-
 1 file changed, 13 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/i915/i915_gem_gtt.c b/drivers/gpu/drm/i915/i915_gem_gtt.c
index 45a78b3..b8005ea 100644
--- a/drivers/gpu/drm/i915/i915_gem_gtt.c
+++ b/drivers/gpu/drm/i915/i915_gem_gtt.c
@@ -2468,7 +2468,19 @@ static int ggtt_probe_common(struct drm_device *dev,
 	gtt_phys_addr = pci_resource_start(dev->pdev, 0) +
 		(pci_resource_len(dev->pdev, 0) / 2);
 
-	dev_priv->gtt.gsm = ioremap_wc(gtt_phys_addr, gtt_size);
+	/*
+	 * On BXT writes larger than 64 bit to the GTT pagetable range will be
+	 * dropped. For WC mappings in general we have 64 byte burst writes
+	 * when the WC buffer is flushed, so we can't use it, but have to
+	 * resort to an uncached mapping. The WC issue is easily caught by the
+	 * readback check when writing GTT PTE entries.
+	 *
+	 * Hmm, it seems that BSW also has a similar deficiency...
+	 */
+	if (IS_CHERRYVIEW(dev))
+		dev_priv->gtt.gsm = ioremap_nocache(gtt_phys_addr, gtt_size);
+	else
+		dev_priv->gtt.gsm = ioremap_wc(gtt_phys_addr, gtt_size);
 	if (!dev_priv->gtt.gsm) {
 		DRM_ERROR("Failed to map the gtt page table\n");
 		return -ENOMEM;
-- 
1.9.1

