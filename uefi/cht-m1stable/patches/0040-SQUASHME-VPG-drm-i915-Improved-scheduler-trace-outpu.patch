From 81e45295177e6614a0b956346e9d568917a8f79c Mon Sep 17 00:00:00 2001
Message-Id: <81e45295177e6614a0b956346e9d568917a8f79c.1431284209.git.chang-joon.lee@intel.com>
In-Reply-To: <89460f3fc3d6c0659d44897a6adec3c3fecc5564.1431284209.git.chang-joon.lee@intel.com>
References: <89460f3fc3d6c0659d44897a6adec3c3fecc5564.1431284209.git.chang-joon.lee@intel.com>
From: John Harrison <John.C.Harrison@Intel.com>
Date: Mon, 9 Mar 2015 18:07:31 +0000
Subject: [PATCH 40/68] SQUASHME! [VPG]: drm/i915: Improved scheduler trace
 output

Seqno values are no longer valid at all times due to being lazily
allocated. Instead, the request structure has a 'uniq' field with is
valid at all times. This patch updates the scheduler's trace output
strings to include the uniq field so that they are actually useful.

This patch could be squashed in to the one that originally added the
scheduler trace entries:
  commit c64b5c1f236ee9c9362f06a675b4bc906ad3cb04
  Author: John Harrison <John.C.Harrison@Intel.com>
  Date:   Thu Apr 10 10:58:56 2014 +0100
  Subject: FOR_UPSTREAM [VPG]: drm/i915: Added trace points to scheduler
  Change-Id: I9886390cfc7897bc1faf50a104bc651d8baed8a5

Change-Id: I7334934f3dc20f938355ba95758ce631d280b724
For: VIZ-1587
For: VIZ-4741
Signed-off-by: John Harrison <John.C.Harrison@Intel.com>
---
 drivers/gpu/drm/i915/i915_trace.h |   62 +++++++++++++++++++++++--------------
 1 file changed, 38 insertions(+), 24 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_trace.h b/drivers/gpu/drm/i915/i915_trace.h
index 02a8933..b3faa58 100644
--- a/drivers/gpu/drm/i915/i915_trace.h
+++ b/drivers/gpu/drm/i915/i915_trace.h
@@ -711,16 +711,18 @@ TRACE_EVENT(i915_scheduler_queue,
 
 	    TP_STRUCT__entry(
 			     __field(u32, ring)
+			     __field(u32, uniq)
 			     __field(u32, seqno)
 			     ),
 
 	    TP_fast_assign(
-			   __entry->ring      = ring->id;
-			   __entry->seqno     = node ? node->params.request->seqno : 0;
+			   __entry->ring  = ring->id;
+			   __entry->uniq  = node ? node->params.request->uniq  : 0;
+			   __entry->seqno = node ? node->params.request->seqno : 0;
 			   ),
 
-	    TP_printk("ring=%d, seqno=%d",
-		      __entry->ring, __entry->seqno)
+	    TP_printk("ring=%d, uniq=%d, seqno=%d",
+		      __entry->ring, __entry->uniq, __entry->seqno)
 );
 
 TRACE_EVENT(i915_scheduler_fly,
@@ -730,16 +732,18 @@ TRACE_EVENT(i915_scheduler_fly,
 
 	    TP_STRUCT__entry(
 			     __field(u32, ring)
+			     __field(u32, uniq)
 			     __field(u32, seqno)
 			     ),
 
 	    TP_fast_assign(
-			   __entry->ring      = ring->id;
-			   __entry->seqno     = node ? node->params.request->seqno : 0;
+			   __entry->ring  = ring->id;
+			   __entry->uniq  = node ? node->params.request->uniq  : 0;
+			   __entry->seqno = node ? node->params.request->seqno : 0;
 			   ),
 
-	    TP_printk("ring=%d, seqno=%d",
-		      __entry->ring, __entry->seqno)
+	    TP_printk("ring=%d, uniq=%d, seqno=%d",
+		      __entry->ring, __entry->uniq, __entry->seqno)
 );
 
 TRACE_EVENT(i915_scheduler_unfly,
@@ -749,16 +753,18 @@ TRACE_EVENT(i915_scheduler_unfly,
 
 	    TP_STRUCT__entry(
 			     __field(u32, ring)
+			     __field(u32, uniq)
 			     __field(u32, seqno)
 			     ),
 
 	    TP_fast_assign(
-			   __entry->ring      = ring->id;
-			   __entry->seqno     = node ? node->params.request->seqno : 0;
+			   __entry->ring  = ring->id;
+			   __entry->uniq  = node ? node->params.request->uniq  : 0;
+			   __entry->seqno = node ? node->params.request->seqno : 0;
 			   ),
 
-	    TP_printk("ring=%d, seqno=%d",
-		      __entry->ring, __entry->seqno)
+	    TP_printk("ring=%d, uniq=%d, seqno=%d",
+		      __entry->ring, __entry->uniq, __entry->seqno)
 );
 
 TRACE_EVENT(i915_scheduler_landing,
@@ -768,18 +774,20 @@ TRACE_EVENT(i915_scheduler_landing,
 
 	    TP_STRUCT__entry(
 			     __field(u32, ring)
+			     __field(u32, uniq)
 			     __field(u32, seqno)
 			     __field(u32, status)
 			     ),
 
 	    TP_fast_assign(
 			   __entry->ring   = ring->id;
+			   __entry->uniq   = node ? node->params.request->uniq  : 0;
 			   __entry->seqno  = seqno;
 			   __entry->status = node ? node->status : ~0U;
 			   ),
 
-	    TP_printk("ring=%d, seqno=%d, status=%d",
-		      __entry->ring, __entry->seqno, __entry->status)
+	    TP_printk("ring=%d, uniq=%d, seqno=%d, status=%d",
+		      __entry->ring, __entry->uniq, __entry->seqno, __entry->status)
 );
 
 TRACE_EVENT(i915_scheduler_remove,
@@ -810,16 +818,18 @@ TRACE_EVENT(i915_scheduler_destroy,
 
 	    TP_STRUCT__entry(
 			     __field(u32, ring)
+			     __field(u32, uniq)
 			     __field(u32, seqno)
 			     ),
 
 	    TP_fast_assign(
-			   __entry->ring      = ring->id;
-			   __entry->seqno     = node ? node->params.request->seqno : 0;
+			   __entry->ring  = ring->id;
+			   __entry->uniq  = node ? node->params.request->uniq  : 0;
+			   __entry->seqno = node ? node->params.request->seqno : 0;
 			   ),
 
-	    TP_printk("ring=%d, seqno=%d",
-		      __entry->ring, __entry->seqno)
+	    TP_printk("ring=%d, uniq=%d, seqno=%d",
+		      __entry->ring, __entry->uniq, __entry->seqno)
 );
 
 TRACE_EVENT(i915_scheduler_pop_from_queue,
@@ -829,16 +839,18 @@ TRACE_EVENT(i915_scheduler_pop_from_queue,
 
 	    TP_STRUCT__entry(
 			     __field(u32, ring)
+			     __field(u32, uniq)
 			     __field(u32, seqno)
 			     ),
 
 	    TP_fast_assign(
-			   __entry->ring   = ring->id;
-			   __entry->seqno  = node ? node->params.request->seqno : 0;
+			   __entry->ring  = ring->id;
+			   __entry->uniq  = node ? node->params.request->uniq  : 0;
+			   __entry->seqno = node ? node->params.request->seqno : 0;
 			   ),
 
-	    TP_printk("ring=%d, seqno=%d",
-		      __entry->ring, __entry->seqno)
+	    TP_printk("ring=%d, uniq=%d, seqno=%d",
+		      __entry->ring, __entry->uniq, __entry->seqno)
 );
 
 TRACE_EVENT(i915_scheduler_node_state_change,
@@ -848,18 +860,20 @@ TRACE_EVENT(i915_scheduler_node_state_change,
 
 	    TP_STRUCT__entry(
 			     __field(u32, ring)
+			     __field(u32, uniq)
 			     __field(u32, seqno)
 			     __field(u32, status)
 			     ),
 
 	    TP_fast_assign(
 			   __entry->ring   = ring->id;
+			   __entry->uniq   = node ? node->params.request->uniq  : 0;
 			   __entry->seqno  = node->params.request->seqno;
 			   __entry->status = node->status;
 			   ),
 
-	    TP_printk("ring=%d, seqno=%d, status=%d",
-		      __entry->ring, __entry->seqno, __entry->status)
+	    TP_printk("ring=%d, uniq=%d, seqno=%d, status=%d",
+		      __entry->ring, __entry->uniq, __entry->seqno, __entry->status)
 );
 
 TRACE_EVENT(i915_scheduler_irq,
-- 
1.7.9.5

