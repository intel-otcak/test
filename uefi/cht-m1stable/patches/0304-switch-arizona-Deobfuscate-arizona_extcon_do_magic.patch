From 04a21cdec1c60005b2b09cd0afe229f8feba0f9d Mon Sep 17 00:00:00 2001
From: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date: Thu, 14 Aug 2014 15:35:53 +0100
Subject: [PATCH 304/351] switch: arizona: Deobfuscate arizona_extcon_do_magic

arizona_extcon_do_magic does not lend a lot of clarity to the purpose
of the function, and as all the registers used are described in the
datasheet there is no need to obfuscate the code. This patch renames the
function to arizona_extcon_hp_clamp, as it controls clamping on the
headphone output.

Change-Id: Iaf49d1088c43f41c7d2a9e900e0f5708525caf07
Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
---
 drivers/switch/switch-arizona.c |   51 +++++++++++++++++++++------------------
 1 file changed, 27 insertions(+), 24 deletions(-)

diff --git a/drivers/switch/switch-arizona.c b/drivers/switch/switch-arizona.c
index 7746d3b..0868576 100644
--- a/drivers/switch/switch-arizona.c
+++ b/drivers/switch/switch-arizona.c
@@ -232,8 +232,8 @@ static void arizona_jds_timeout_work(struct work_struct *work)
 	mutex_unlock(&info->lock);
 }
 
-static void arizona_extcon_do_magic(struct arizona_extcon_info *info,
-				    unsigned int magic)
+static void arizona_extcon_hp_clamp(struct arizona_extcon_info *info,
+				    bool clamp)
 {
 	struct arizona *arizona = info->arizona;
 	unsigned int mask, val = 0;
@@ -246,25 +246,26 @@ static void arizona_extcon_do_magic(struct arizona_extcon_info *info,
 		break;
 	case WM8280:
 	case WM5110:
-		mask = 0x0007;
-		if (magic)
-			val = 0x0001;
+		mask = ARIZONA_HP1L_SHRTO | ARIZONA_HP1L_FLWR |
+		       ARIZONA_HP1L_SHRTI;
+		if (clamp)
+			val = ARIZONA_HP1L_SHRTO;
 		else
-			val = 0x0006;
+			val = ARIZONA_HP1L_FLWR | ARIZONA_HP1L_SHRTI;
 		break;
 	default:
-		mask = 0x4000;
-		if (magic)
-			val = 0x4000;
+		mask = ARIZONA_RMV_SHRT_HP1L;
+		if (clamp)
+			val = ARIZONA_RMV_SHRT_HP1L;
 		break;
 	};
 
 	mutex_lock(&arizona->dapm->card->dapm_mutex);
 
-	arizona->hpdet_magic = magic;
+	arizona->hpdet_clamp = clamp;
 
-	/* Keep the HP output stages disabled while doing the magic */
-	if (magic) {
+	/* Keep the HP output stages disabled while doing the clamp */
+	if (clamp) {
 		ret = regmap_update_bits(arizona->regmap,
 					 ARIZONA_OUTPUT_ENABLES_1,
 					 ARIZONA_OUT1L_ENA |
@@ -276,19 +277,21 @@ static void arizona_extcon_do_magic(struct arizona_extcon_info *info,
 	}
 
 	if (mask) {
-		ret = regmap_update_bits(arizona->regmap, 0x225, mask, val);
+		ret = regmap_update_bits(arizona->regmap, ARIZONA_HP_CTRL_1L,
+					 mask, val);
 		if (ret != 0)
-			dev_warn(arizona->dev, "Failed to do magic: %d\n",
+			dev_warn(arizona->dev, "Failed to do clamp: %d\n",
 				 ret);
 
-		ret = regmap_update_bits(arizona->regmap, 0x226, mask, val);
+		ret = regmap_update_bits(arizona->regmap, ARIZONA_HP_CTRL_1R,
+					 mask, val);
 		if (ret != 0)
-			dev_warn(arizona->dev, "Failed to do magic: %d\n",
+			dev_warn(arizona->dev, "Failed to do clamp: %d\n",
 				 ret);
 	}
 
-	/* Restore the desired state while not doing the magic */
-	if (!magic && (arizona->hp_impedance > arizona->pdata.hpdet_short_circuit_imp)) {
+	/* Restore the desired state while not doing the clamp */
+	if (!clamp && (arizona->hp_impedance > arizona->pdata.hpdet_short_circuit_imp)) {
 		ret = regmap_update_bits(arizona->regmap,
 					 ARIZONA_OUTPUT_ENABLES_1,
 					 ARIZONA_OUT1L_ENA |
@@ -818,7 +821,7 @@ int arizona_hpdet_start(struct arizona_extcon_info *info)
 	/* Make sure we keep the device enabled during the measurement */
 	pm_runtime_get_sync(info->dev);
 
-	arizona_extcon_do_magic(info, 0x4000);
+	arizona_extcon_hp_clamp(info, true);
 
 	ret = regmap_update_bits(arizona->regmap,
 				 ARIZONA_ACCESSORY_DETECT_MODE_1,
@@ -841,7 +844,7 @@ int arizona_hpdet_start(struct arizona_extcon_info *info)
 	return 0;
 
 err:
-	arizona_extcon_do_magic(info, 0);
+	arizona_extcon_hp_clamp(info, false);
 
 	pm_runtime_put_autosuspend(info->dev);
 
@@ -881,7 +884,7 @@ void arizona_hpdet_stop(struct arizona_extcon_info *info)
 			   ARIZONA_ACCESSORY_DETECT_MODE_1,
 			   ARIZONA_ACCDET_MODE_MASK, 0);
 
-	arizona_extcon_do_magic(info, 0);
+	arizona_extcon_hp_clamp(info, false);
 
 	pm_runtime_mark_last_busy(info->dev);
 	pm_runtime_put_autosuspend(info->dev);
@@ -894,7 +897,7 @@ static int arizona_hpdet_moisture_start(struct arizona_extcon_info *info)
 
 	ret = arizona_hpdet_start(info);
 
-	arizona_extcon_do_magic(info, 0);
+	arizona_extcon_hp_clamp(info, false);
 
 	return ret;
 }
@@ -1281,7 +1284,7 @@ static int arizona_hpdet_acc_id_start(struct arizona_extcon_info *info)
 	/* Make sure we keep the device enabled during the measurement */
 	pm_runtime_get_sync(info->dev);
 
-	arizona_extcon_do_magic(info, 0x4000);
+	arizona_extcon_hp_clamp(info, true);
 
 	ret = regmap_update_bits(arizona->regmap,
 				 ARIZONA_ACCESSORY_DETECT_MODE_1,
@@ -1314,7 +1317,7 @@ static int arizona_hpdet_acc_id_start(struct arizona_extcon_info *info)
 	return 0;
 
 err:
-	arizona_extcon_do_magic(info, 0x0);
+	arizona_extcon_hp_clamp(info, false);
 
 	pm_runtime_put_autosuspend(info->dev);
 
-- 
1.7.9.5

