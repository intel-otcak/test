From 0af902453732890e78704b39cbd7f2efd5fa03de Mon Sep 17 00:00:00 2001
From: haiqiang yao <haiqiangx.yao@intel.com>
Date: Wed, 4 Feb 2015 17:47:01 +0800
Subject: [PATCH 258/269] atomisp2: Correct the crop region mapping algorithm

the patch correct the crop region mapping algorithm.

Change-Id: I4ea30c0ca0503c8bfdc071d09eb050ffe47cdf7c
Tracked-On:
https://hsdes.intel.com/home/default.html#article?id=1503905394
Signed-off-by: haiqiang yao <haiqiangx.yao@intel.com>
Reviewed-on: https://icggerrit.ir.intel.com/39370
Reviewed-by: Jing Tao <jing.tao@intel.com>
Approver: Wei Tao <wei.tao@intel.com>
Reviewed-by: Wei Tao <wei.tao@intel.com>
---
 .../pci/atomisp2/atomisp_driver/atomisp_cmd.c      | 37 ++++++++++------------
 1 file changed, 17 insertions(+), 20 deletions(-)

diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c
index 2b9444a..20f73eb 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c
@@ -2731,10 +2731,9 @@ int atomisp_calculate_real_zoom_region(struct atomisp_sub_device *asd,
 {
 	struct atomisp_stream_env *stream_env =
 			&asd->stream_env[ATOMISP_INPUT_STREAM_GENERAL];
-	struct atomisp_resolution  max_res, eff_res, out_res;
+	struct atomisp_resolution  eff_res, out_res;
 
 	memset(&eff_res, 0, sizeof(eff_res));
-	memset(&max_res, 0, sizeof(max_res));
 	memset(&out_res, 0, sizeof(out_res));
 
 	if (dz_config->dx || dz_config->dy)
@@ -2772,36 +2771,24 @@ int atomisp_calculate_real_zoom_region(struct atomisp_sub_device *asd,
 	/* FIXME:
 	 * This is not the correct implementation with Google's definition, due
 	 * to firmware limitation.
-	 */
-	if (eff_res.width * asd->sensor_array_res.height
-		> asd->sensor_array_res.width * eff_res.height) {
-		max_res.width = asd->sensor_array_res.width;
-		max_res.height = asd->sensor_array_res.width
-				* eff_res.height / eff_res.width;
-	} else {
-		max_res.width = asd->sensor_array_res.height
-				* eff_res.width / eff_res.height;
-		max_res.height = asd->sensor_array_res.height;
-	}
-	/*
-	 * Map real crop region base on above calculating base max crop region.
+	 * map real crop region base on above calculating base max crop region.
 	 */
 	dz_config->zoom_region.origin.x =
 			dz_config->zoom_region.origin.x
-			* max_res.width
+			* eff_res.width
 			/ asd->sensor_array_res.width;
 	dz_config->zoom_region.origin.y =
 			dz_config->zoom_region.origin.y
-			* max_res.height
+			* eff_res.height
 			/ asd->sensor_array_res.height;
 	dz_config->zoom_region.resolution.width =
 			dz_config->zoom_region.resolution.width
-			* max_res.width
+			* eff_res.width
 			/ asd->sensor_array_res.width;
 	dz_config->zoom_region.resolution.height =
 			dz_config->zoom_region.resolution.height
-			* max_res.height
-			/ eff_res.height;
+			* eff_res.height
+			/ asd->sensor_array_res.height;
 
 	/*
 	  * Set same ratio of crop region resolution and current pipe output
@@ -2827,6 +2814,16 @@ int atomisp_calculate_real_zoom_region(struct atomisp_sub_device *asd,
 				dz_config->zoom_region.resolution.height
 				* out_res.width / out_res.height;
 	}
+	dev_dbg(asd->isp->dev, "%s crop region:(%d,%d),(%d,%d) eff_res(%d, %d) array_size(%d,%d) out_res(%d, %d)\n",
+			__func__, dz_config->zoom_region.origin.x,
+			dz_config->zoom_region.origin.y,
+			dz_config->zoom_region.resolution.width,
+			dz_config->zoom_region.resolution.height,
+			eff_res.width, eff_res.height,
+			asd->sensor_array_res.width,
+			asd->sensor_array_res.height,
+			out_res.width, out_res.height);
+
 
 	if ((dz_config->zoom_region.origin.x +
 		dz_config->zoom_region.resolution.width
-- 
1.9.1

