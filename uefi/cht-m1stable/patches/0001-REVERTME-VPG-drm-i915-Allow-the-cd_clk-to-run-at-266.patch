From 58b01df1cceca63ad29c5d3026fe071bcc8e2015 Mon Sep 17 00:00:00 2001
Message-Id: <58b01df1cceca63ad29c5d3026fe071bcc8e2015.1429347747.git.chang-joon.lee@intel.com>
From: Durgadoss R <durgadoss.r@intel.com>
Date: Tue, 24 Mar 2015 12:02:28 +0530
Subject: [PATCH 1/4] REVERTME [VPG]: drm/i915: Allow the cd_clk to run at 266
 MHz in CHV

In this patch we allow the cd_clk to go to 266 MHz in case of CHV and
program the PFI credits after programming cd_clk.

REVERTME : This sequence is already implemented in upstream in a
different format. But pulling in the entire CDCLK patch series will
cause too much of rebase pain. This patch is a temporary fix and
can be dropped once the cdclk changes are merged in upstream and
land in next rebase or forklift.

Change-Id: I5d81e0e6ef41518bb5a25f6bd23742bfbf01aeaf
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-26531
Signed-off-by: Durgadoss R <durgadoss.r@intel.com>
Signed-off-by: Deepak M <m.deepak@intel.com>
Signed-off-by: Yogesh Mohan Marimuthu <yogesh.mohan.marimuthu@intel.com>
---
 drivers/gpu/drm/i915/intel_display.c |   39 +++++++++++++---------------------
 drivers/gpu/drm/i915/intel_pm.c      |    4 +++-
 2 files changed, 18 insertions(+), 25 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index 05416f4..cbbfb78 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -5257,7 +5257,7 @@ int valleyview_cur_cdclk(struct drm_i915_private *dev_priv)
 static int valleyview_calc_cdclk(struct drm_i915_private *dev_priv,
 				 int max_pixclk)
 {
-	int new_cdclk, cur_cdclk, czclk;
+	int new_cdclk;
 	/*
 	 * Really only a few cases to deal with, as only 4 CDclks are supported:
 	 *   200MHz
@@ -5275,17 +5275,6 @@ static int valleyview_calc_cdclk(struct drm_i915_private *dev_priv,
 		new_cdclk = 266;
 	/* Looks like the 200MHz CDclk freq doesn't work on some configs */
 
-	if (IS_CHERRYVIEW(dev_priv->dev)) {
-		/*
-		 * The existing CHT systems can work only when
-		 * CDclk freq is equal to OR higher than CZclk.
-		 * freq. So, cap the CDclk freq, if required.
-		 */
-		intel_get_cd_cz_clk(dev_priv, &cur_cdclk, &czclk);
-		if (new_cdclk < czclk)
-			new_cdclk = czclk;
-	}
-
 	return new_cdclk;
 }
 
@@ -5333,6 +5322,13 @@ static void valleyview_modeset_global_resources(struct drm_device *dev)
 			cherryview_set_cdclk(dev, req_cdclk);
 		else
 			valleyview_set_cdclk(dev, req_cdclk);
+
+		/*
+		 * The PFI credits has to be programmed after
+		 * the cd_clk change, else we were facing a display
+		 * blank in MIPI
+		 */
+		program_pfi_credits(dev_priv, true);
 	}
 	modeset_update_crtc_power_domains(dev);
 }
@@ -12231,12 +12227,6 @@ static int __intel_set_mode(struct drm_crtc *crtc,
 			mutex_unlock(&dev_priv->rps.hw_lock);
 		}
 
-	/* DO it only once */
-	if (IS_VALLEYVIEW(dev))
-		if (dev_priv->is_first_modeset) {
-			program_pfi_credits(dev_priv, true);
-			valleyview_update_wm_pm5(crtc);
-		}
 
 	/* crtc->mode is already used by the ->mode_set callbacks, hence we need
 	 * to set it here already despite that we pass it down the callchain.
@@ -12267,12 +12257,13 @@ static int __intel_set_mode(struct drm_crtc *crtc,
 	}
 
 	/* DO it only once */
-	if (IS_VALLEYVIEW(dev))
-		if (dev_priv->is_first_modeset) {
-			/* This will drop reference taken in i915_driver_load */
-			intel_runtime_pm_put(dev_priv);
-			dev_priv->is_first_modeset = false;
-		}
+	if (IS_VALLEYVIEW(dev) && dev_priv->is_first_modeset) {
+		valleyview_update_wm_pm5(crtc);
+
+		/* This will drop reference taken in i915_driver_load */
+		intel_runtime_pm_put(dev_priv);
+		dev_priv->is_first_modeset = false;
+	}
 
 	/* Set up the DPLL and any encoders state that needs to adjust or depend
 	 * on the DPLL.
diff --git a/drivers/gpu/drm/i915/intel_pm.c b/drivers/gpu/drm/i915/intel_pm.c
index c13f106..abc6fd0 100644
--- a/drivers/gpu/drm/i915/intel_pm.c
+++ b/drivers/gpu/drm/i915/intel_pm.c
@@ -8150,10 +8150,12 @@ void program_pfi_credits(struct drm_i915_private *dev_priv, bool flag)
 	} else {
 		if (IS_CHERRYVIEW(dev_priv->dev)) {
 			val |= PFI_CREDITS_12;
+
+			/* Disable before enabling */
 			I915_WRITE(GCI_CONTROL, VGA_FAST_MODE_DISABLE);
 			I915_WRITE(GCI_CONTROL, val);
+		} else
 			DRM_ERROR("cd clk < cz clk");
-		}
 	}
 }
 
-- 
1.7.9.5

