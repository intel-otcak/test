From 54091bda4b4daa99c14a47c267fd1d9fa0a6d033 Mon Sep 17 00:00:00 2001
From: Omair Mohammed Abdullah <omair.m.abdullah@linux.intel.com>
Date: Mon, 23 Feb 2015 15:53:58 +0530
Subject: [PATCH 06/15] ASoC: Intel: Add probe support to dpcm

Issue: GMINL-6292

Adds probe point support. There are 8 simultaneous
probe streams possible,with each of their connection
points defined using ALSA controls. The probe DAI is
opened with the correct substream (for which the ALSA
control has been programmed).

A _PROBE command is sent for that probe pipe after the
ALLOC has been sent.The probe pipe_id is filled from the
stream map into the _PROBE command.

A stream should be running in that pipeline
to probe any point in the pipeline.

FBA probes are not explicitly linked to module ID.
Update the FBA probe point index for uplink/downlink.

Change-Id: I111b45c9aa18cd98fed56b885512e7a1d86ddffd
Signed-off-by: Omair Mohammed Abdullah <omair.m.abdullah@linux.intel.com>
Signed-off-by: Subhransu S. Prusty <subhransu.s.prusty@intel.com>
Signed-off-by: Mythri P K <mythri.p.k@intel.com>
Signed-off-by: Samreen Nilofer <samreen.nilofer@intel.com>
Signed-off-by: MiguelX Gaio <miguelx.gaio@intel.com>
Signed-off-by: Fabien Marotte <fabien.marotte@intel.com>
---
 arch/x86/include/asm/platform_cht_audio.h        |   1 +
 sound/soc/intel/board/cht_bl_dpcm_rt5672.c       |  10 +
 sound/soc/intel/pcm.c                            |  69 +++-
 sound/soc/intel/platform-libs/atom_pipes.h       |  34 ++
 sound/soc/intel/platform-libs/probe_point_dpcm.c | 423 ++++++++++++++++-------
 sound/soc/intel/sst/sst_platform.c               |  61 +++-
 6 files changed, 464 insertions(+), 134 deletions(-)

diff --git a/arch/x86/include/asm/platform_cht_audio.h b/arch/x86/include/asm/platform_cht_audio.h
index 8a29405..2f4c92e 100644
--- a/arch/x86/include/asm/platform_cht_audio.h
+++ b/arch/x86/include/asm/platform_cht_audio.h
@@ -17,6 +17,7 @@ enum {
 	CHT_DPCM_DB,
 	CHT_DPCM_COMPR,
 	CHT_DPCM_VOIP,
+	CHT_DPCM_PROBE,
 };
 
 /* LPE viewpoint addresses */
diff --git a/sound/soc/intel/board/cht_bl_dpcm_rt5672.c b/sound/soc/intel/board/cht_bl_dpcm_rt5672.c
index 181e330..1a34447 100644
--- a/sound/soc/intel/board/cht_bl_dpcm_rt5672.c
+++ b/sound/soc/intel/board/cht_bl_dpcm_rt5672.c
@@ -804,6 +804,16 @@ static struct snd_soc_dai_link cht_dailink[] = {
 		.ops = &cht_8k_16k_ops,
 		.dynamic = 1,
 	},
+	[CHT_DPCM_PROBE] = {
+		.name = "Cherrytrail Probe Port",
+		.stream_name = "Cherrytrail Probe",
+		.cpu_dai_name = "Probe-cpu-dai",
+		.platform_name = "sst-platform",
+		.codec_dai_name = "snd-soc-dummy-dai",
+		.codec_name = "snd-soc-dummy",
+		.playback_count = 8,
+		.capture_count = 8,
+	},
 	/* CODEC<->CODEC link */
 	{
 		.name = "Cherrytrail Codec-Loop Port",
diff --git a/sound/soc/intel/pcm.c b/sound/soc/intel/pcm.c
index 39c0c34..7f009bd 100644
--- a/sound/soc/intel/pcm.c
+++ b/sound/soc/intel/pcm.c
@@ -33,6 +33,7 @@
 #include <sound/soc.h>
 #include <sound/intel_sst_ioctl.h>
 #include <asm/platform_sst_audio.h>
+#include <asm/platform_cht_audio.h>
 #include <asm/intel-mid.h>
 #include "platform_ipc_v2.h"
 #include "sst_platform.h"
@@ -272,8 +273,10 @@ int sst_fill_stream_params(void *substream,
 			}
 		}
 
-		if (str_params->device_type == SST_PROBE_IN)
-			str_params->stream_type = SST_STREAM_TYPE_PROBE;
+		if (pstream->pcm->device == CHT_DPCM_PROBE) {
+			str_params->device_type = map[index].device_id;
+			str_params->task = map[index].task_id;
+		}
 
 		pr_debug("str_id = %d, device_type = 0x%x, task = %d",
 			 str_params->stream_id, str_params->device_type,
@@ -489,6 +492,17 @@ static inline unsigned int get_current_pipe_id(struct snd_soc_platform *platform
 	return pipe_id;
 }
 
+static int sst_dpcm_probe_cmd(struct snd_soc_platform *platform,
+		struct snd_pcm_substream *substream, u16 pipe_id, bool on)
+{
+	int ret = 0;
+
+	if ((dpcm_enable == 1) && (substream->pcm->device == CHT_DPCM_PROBE))
+		ret = sst_dpcm_probe_send(platform, pipe_id, substream->number,
+							substream->stream, on);
+	return ret;
+}
+
 static int sst_media_prepare(struct snd_pcm_substream *substream,
 		struct snd_soc_dai *dai)
 {
@@ -554,6 +568,27 @@ static void sst_disable_ssp(struct snd_pcm_substream *substream,
 	}
 }
 
+static int sst_probe_prepare(struct snd_pcm_substream *substream,
+		struct snd_soc_dai *dai)
+{
+	u16 probe_pipe_id;
+
+	sst_media_prepare(substream, dai);
+	probe_pipe_id = get_current_pipe_id(dai->platform, substream);
+
+	return sst_dpcm_probe_cmd(dai->platform, substream, probe_pipe_id,
+								 true);
+}
+
+static void sst_probe_close(struct snd_pcm_substream *substream,
+		struct snd_soc_dai *dai)
+{
+	u16 probe_pipe_id = get_current_pipe_id(dai->platform, substream);
+
+	sst_dpcm_probe_cmd(dai->platform, substream, probe_pipe_id, false);
+	sst_media_close(substream, dai);
+}
+
 static struct snd_soc_dai_ops sst_media_dai_ops = {
 	.startup = sst_media_open,
 	.shutdown = sst_media_close,
@@ -568,6 +603,14 @@ static struct snd_soc_dai_ops sst_compr_dai_ops = {
 	.mute_stream = sst_media_digital_mute,
 };
 
+static struct snd_soc_dai_ops sst_probe_dai_ops = {
+	.startup = sst_media_open,
+	.hw_params = sst_media_hw_params,
+	.hw_free = sst_media_hw_free,
+	.shutdown = sst_probe_close,
+	.prepare = sst_probe_prepare,
+};
+
 static struct snd_soc_dai_ops sst_be_dai_ops = {
 	.startup = sst_enable_ssp,
 	.shutdown = sst_disable_ssp,
@@ -644,6 +687,28 @@ static struct snd_soc_dai_driver sst_platform_dai[] = {
 		.formats = SNDRV_PCM_FMTBIT_S16_LE,
 	},
 },
+{
+	.name = SST_PROBE_DAI,
+	.ops = &sst_probe_dai_ops,
+	.playback = {
+		.stream_name = "Probe Playback",
+		.channels_min = SST_MONO,
+		.channels_max = SST_STEREO,
+		.rates = SNDRV_PCM_RATE_8000 |
+				SNDRV_PCM_RATE_16000 | SNDRV_PCM_RATE_48000,
+		.formats = SNDRV_PCM_FMTBIT_S16_LE | SNDRV_PCM_FMTBIT_S24_LE |
+			   SNDRV_PCM_FMTBIT_S32_LE,
+	},
+	.capture = {
+		.stream_name = "Probe Capture",
+		.channels_min = SST_MONO,
+		.channels_max = SST_STEREO,
+		.rates = SNDRV_PCM_RATE_8000 |
+				SNDRV_PCM_RATE_16000 | SNDRV_PCM_RATE_48000,
+		.formats = SNDRV_PCM_FMTBIT_S16_LE | SNDRV_PCM_FMTBIT_S24_LE |
+			   SNDRV_PCM_FMTBIT_S32_LE,
+	},
+},
 /*BE CPU  Dais */
 {
 	.name = "ssp0-port",
diff --git a/sound/soc/intel/platform-libs/atom_pipes.h b/sound/soc/intel/platform-libs/atom_pipes.h
index 14c0136..0b6ba92 100644
--- a/sound/soc/intel/platform-libs/atom_pipes.h
+++ b/sound/soc/intel/platform-libs/atom_pipes.h
@@ -314,4 +314,38 @@ enum fba_fir_iir_cell_id {
 	FBA_FIR_IIR_CELL_ID_2 = (0x0002 << 11),
 	FBA_FIR_IIR_CELL_ID_3 = (0x0003 << 11),
 };
+
+/*
+ * FBA probe point index id
+ */
+enum sst_fba_path_index {
+	FBA_PROBE_INDEX_1	= 1,
+	FBA_PROBE_INDEX_2,
+	FBA_PROBE_INDEX_3,
+	FBA_PROBE_INDEX_4,
+	FBA_PROBE_INDEX_5,
+	FBA_PROBE_INDEX_6,
+	FBA_PROBE_INDEX_7,
+	FBA_PROBE_INDEX_8,
+	FBA_PROBE_INDEX_9,
+	FBA_PROBE_INDEX_10,
+	FBA_PROBE_INDEX_11,
+	FBA_PROBE_INDEX_12,
+	FBA_PROBE_INDEX_13,
+	FBA_PROBE_INDEX_14,
+	FBA_PROBE_INDEX_15,
+	FBA_PROBE_INDEX_16,
+	FBA_PROBE_INDEX_17,
+	FBA_PROBE_INDEX_18,
+	FBA_PROBE_INDEX_19,
+	FBA_PROBE_INDEX_20,
+	FBA_PROBE_INDEX_21,
+	FBA_PROBE_INDEX_22,
+	FBA_PROBE_INDEX_23,
+	FBA_PROBE_INDEX_24,
+	FBA_PROBE_INDEX_25,
+	FBA_PROBE_INDEX_26,
+	FBA_PROBE_INDEX_27,
+};
+
 #endif /* __ATOM_PIPES_H__ */
diff --git a/sound/soc/intel/platform-libs/probe_point_dpcm.c b/sound/soc/intel/platform-libs/probe_point_dpcm.c
index faaea12..8a158a8 100644
--- a/sound/soc/intel/platform-libs/probe_point_dpcm.c
+++ b/sound/soc/intel/platform-libs/probe_point_dpcm.c
@@ -19,150 +19,321 @@
 static const struct sst_probe_config sst_probes[] = {
 	/* TODO: get this struct from FW config data */
 	/* gain outputs  */
-	{ "pcm0_in gain", SST_PATH_INDEX_PCM0_IN, SST_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "pcm1_in gain", SST_PATH_INDEX_PCM1_IN, SST_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "pcm1_out gain", SST_PATH_INDEX_PCM1_OUT, SST_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "pcm2_out gain", SST_PATH_INDEX_PCM2_OUT, SST_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "voip_in gain", SST_PATH_INDEX_VOIP_IN, SST_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "voip_out gain", SST_PATH_INDEX_VOIP_OUT, SST_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "aware_out gain", SST_PATH_INDEX_AWARE_OUT, SST_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "vad_out gain", SST_PATH_INDEX_VAD_OUT, SST_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "hf_sns_out gain", SST_PATH_INDEX_HF_SNS_OUT, SST_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "hf_out gain", SST_PATH_INDEX_HF_OUT, SST_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "speech_out gain", SST_PATH_INDEX_SPEECH_OUT, SST_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "txspeech_in gain", SST_PATH_INDEX_TX_SPEECH_IN, SST_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "rxspeech_out gain", SST_PATH_INDEX_RX_SPEECH_OUT, SST_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "speech_in gain", SST_PATH_INDEX_SPEECH_IN, SST_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "media_loop1_out gain", SST_PATH_INDEX_MEDIA_LOOP1_OUT , SST_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "media_loop2_out gain", SST_PATH_INDEX_MEDIA_LOOP2_OUT , SST_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "tone_in gain", SST_PATH_INDEX_TONE_IN, SST_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "codec_out0 gain", SST_PATH_INDEX_CODEC_OUT0, SST_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "codec_out1 gain", SST_PATH_INDEX_CODEC_OUT1, SST_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "bt_out gain", SST_PATH_INDEX_BT_OUT, SST_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "fm_out gain", SST_PATH_INDEX_FM_OUT, SST_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "modem_out gain", SST_PATH_INDEX_MODEM_OUT, SST_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "codec_in0 gain", SST_PATH_INDEX_CODEC_IN0, SST_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "codec_in1 gain", SST_PATH_INDEX_CODEC_IN1, SST_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "bt_in gain", SST_PATH_INDEX_BT_IN, SST_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "fm_in gain", SST_PATH_INDEX_FM_IN, SST_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "modem_in gain", SST_PATH_INDEX_MODEM_IN, SST_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "sprot_loop_out gain", SST_PATH_INDEX_SPROT_LOOP_OUT, SST_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "sidetone_in", SST_PATH_INDEX_SIDETONE_IN, SST_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "pcm0_in gain", SST_DFW_PATH_INDEX_PCM0_IN,
+		SST_DFW_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "pcm1_in gain", SST_DFW_PATH_INDEX_PCM1_IN,
+		SST_DFW_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "pcm1_out gain", SST_DFW_PATH_INDEX_PCM1_OUT,
+		SST_DFW_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "pcm2_out gain", SST_DFW_PATH_INDEX_PCM2_OUT,
+		SST_DFW_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "pcm3_out gain", SST_DFW_PATH_INDEX_PCM3_OUT,
+		SST_DFW_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "pcm4_out gain", SST_DFW_PATH_INDEX_PCM4_OUT,
+		SST_DFW_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "voip_in gain", SST_DFW_PATH_INDEX_VOIP_IN,
+		SST_DFW_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "voip_out gain", SST_DFW_PATH_INDEX_VOIP_OUT,
+		SST_DFW_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "aware_out gain", SST_DFW_PATH_INDEX_AWARE_OUT,
+		SST_DFW_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "vad_out gain", SST_DFW_PATH_INDEX_VAD_OUT,
+		SST_DFW_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "hf_sns_out gain", SST_DFW_PATH_INDEX_HF_SNS_OUT,
+		SST_DFW_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "hf_out gain", SST_DFW_PATH_INDEX_HF_OUT,
+		SST_DFW_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "speech_out gain", SST_DFW_PATH_INDEX_SPEECH_OUT,
+		SST_DFW_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "txspeech_in gain", SST_DFW_PATH_INDEX_TX_SPEECH_IN,
+		SST_DFW_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "rxspeech_out gain", SST_DFW_PATH_INDEX_RX_SPEECH_OUT,
+		SST_DFW_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "speech_in gain", SST_DFW_PATH_INDEX_SPEECH_IN,
+		SST_DFW_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "media_loop1_out gain", SST_DFW_PATH_INDEX_MEDIA_LOOP1_OUT ,
+		SST_DFW_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "media_loop2_out gain", SST_DFW_PATH_INDEX_MEDIA_LOOP2_OUT ,
+		SST_DFW_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "tone_in gain", SST_DFW_PATH_INDEX_TONE_IN,
+		SST_DFW_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "codec_out0 gain", SST_DFW_PATH_INDEX_CODEC_OUT0,
+		SST_DFW_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "codec_out1 gain", SST_DFW_PATH_INDEX_CODEC_OUT1,
+		SST_DFW_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "bt_out gain", SST_DFW_PATH_INDEX_BT_OUT,
+		SST_DFW_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "fm_out gain", SST_DFW_PATH_INDEX_FM_OUT,
+		SST_DFW_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "modem_out gain", SST_DFW_PATH_INDEX_MODEM_OUT,
+		SST_DFW_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "codec_in0 gain", SST_DFW_PATH_INDEX_CODEC_IN0,
+		SST_DFW_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "codec_in1 gain", SST_DFW_PATH_INDEX_CODEC_IN1,
+		SST_DFW_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "bt_in gain", SST_DFW_PATH_INDEX_BT_IN,
+		SST_DFW_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "fm_in gain", SST_DFW_PATH_INDEX_FM_IN,
+		SST_DFW_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "modem_in gain", SST_DFW_PATH_INDEX_MODEM_IN,
+		SST_DFW_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "sprot_loop_out gain", SST_DFW_PATH_INDEX_SPROT_LOOP_OUT,
+		SST_DFW_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "sidetone_in", SST_DFW_PATH_INDEX_SIDETONE_IN,
+		SST_DFW_MODULE_ID_GAIN_CELL, SST_TASK_SBA, { 1, 2, 1 } },
 
 	/* SRC */
-	{ "media0_in src", SST_PATH_INDEX_MEDIA0_IN, SST_MODULE_ID_SRC, SST_TASK_MMX, { 1, 2, 1 } },
-	{ "rxspeech_out src", SST_PATH_INDEX_RX_SPEECH_OUT, SST_MODULE_ID_SRC, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "txspeech_in src", SST_PATH_INDEX_TX_SPEECH_IN, SST_MODULE_ID_SRC, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "speech_out src", SST_PATH_INDEX_SPEECH_OUT, SST_MODULE_ID_SRC, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "speech_in src", SST_PATH_INDEX_SPEECH_IN, SST_MODULE_ID_SRC, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "hf_out src", SST_PATH_INDEX_HF_OUT, SST_MODULE_ID_SRC, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "hf_sns_out src", SST_PATH_INDEX_HF_SNS_OUT, SST_MODULE_ID_SRC, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "pcm1_out src", SST_PATH_INDEX_PCM1_OUT, SST_MODULE_ID_SRC, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "pcm2_out src", SST_PATH_INDEX_PCM2_OUT, SST_MODULE_ID_SRC, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "voip_in src", SST_PATH_INDEX_VOIP_IN, SST_MODULE_ID_SRC, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "voip_out src", SST_PATH_INDEX_VOIP_OUT, SST_MODULE_ID_SRC, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "aware_out src", SST_PATH_INDEX_AWARE_OUT, SST_MODULE_ID_SRC, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "vad_out src", SST_PATH_INDEX_VAD_OUT, SST_MODULE_ID_SRC, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "media0_in src", SST_DFW_PATH_INDEX_MEDIA0_IN,
+		SST_DFW_MODULE_ID_SRC, SST_TASK_MMX, { 1, 2, 1 } },
+	{ "rxspeech_out src", SST_DFW_PATH_INDEX_RX_SPEECH_OUT,
+		SST_DFW_MODULE_ID_SRC, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "txspeech_in src", SST_DFW_PATH_INDEX_TX_SPEECH_IN,
+		SST_DFW_MODULE_ID_SRC, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "speech_out src", SST_DFW_PATH_INDEX_SPEECH_OUT,
+		SST_DFW_MODULE_ID_SRC, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "speech_in src", SST_DFW_PATH_INDEX_SPEECH_IN,
+		SST_DFW_MODULE_ID_SRC, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "hf_out src", SST_DFW_PATH_INDEX_HF_OUT,
+		SST_DFW_MODULE_ID_SRC, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "hf_sns_out src", SST_DFW_PATH_INDEX_HF_SNS_OUT,
+		SST_DFW_MODULE_ID_SRC, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "pcm1_out src", SST_DFW_PATH_INDEX_PCM1_OUT,
+		SST_DFW_MODULE_ID_SRC, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "pcm2_out src", SST_DFW_PATH_INDEX_PCM2_OUT,
+		SST_DFW_MODULE_ID_SRC, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "voip_in src", SST_DFW_PATH_INDEX_VOIP_IN,
+		SST_DFW_MODULE_ID_SRC, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "voip_out src", SST_DFW_PATH_INDEX_VOIP_OUT,
+		SST_DFW_MODULE_ID_SRC, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "aware_out src", SST_DFW_PATH_INDEX_AWARE_OUT,
+		SST_DFW_MODULE_ID_SRC, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "vad_out src", SST_DFW_PATH_INDEX_VAD_OUT,
+		SST_DFW_MODULE_ID_SRC, SST_TASK_SBA, { 1, 2, 1 } },
 
-	{ "media0_in downmix", SST_PATH_INDEX_MEDIA0_IN, SST_MODULE_ID_DOWNMIX, SST_TASK_MMX, { 1, 2, 1 } },
-	{ "sprot_loop_out lpro", SST_PATH_INDEX_SPROT_LOOP_OUT, SST_MODULE_ID_SPROT, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "media0_in downmix", SST_DFW_PATH_INDEX_MEDIA0_IN,
+		SST_DFW_MODULE_ID_DOWNMIX, SST_TASK_MMX, { 1, 2, 1 } },
+	{ "sprot_loop_out lpro", SST_DFW_PATH_INDEX_SPROT_LOOP_OUT,
+		SST_DFW_MODULE_ID_SPROT, SST_TASK_SBA, { 1, 2, 1 } },
 
-	{ "voice_downlink nr", SST_PATH_INDEX_VOICE_DOWNLINK, SST_MODULE_ID_NR, SST_TASK_FBA_DL , { 1, 2, 1 } },
-	{ "voice_uplink nr", SST_PATH_INDEX_VOICE_UPLINK, SST_MODULE_ID_NR, SST_TASK_FBA_UL, { 1, 2, 1 } },
-	{ "voice_downlink bwx", SST_PATH_INDEX_VOICE_DOWNLINK, SST_MODULE_ID_BWX, SST_TASK_FBA_DL, { 1, 2, 1 } },
-	{ "voice_downlink drp", SST_PATH_INDEX_VOICE_DOWNLINK, SST_MODULE_ID_DRP, SST_TASK_FBA_DL, { 1, 2, 1 } },
-	{ "voice_uplink drp", SST_PATH_INDEX_VOICE_UPLINK, SST_MODULE_ID_DRP, SST_TASK_FBA_UL, { 1, 2, 1 } },
-	{ "voice_downlink ana", SST_PATH_INDEX_VOICE_DOWNLINK, SST_MODULE_ID_ANA, SST_TASK_FBA_DL, { 1, 2, 1 } },
-	{ "voice_uplink aec", SST_PATH_INDEX_VOICE_UPLINK, SST_MODULE_ID_AEC, SST_TASK_FBA_UL, { 1, 2, 1 } },
-	{ "voice_uplink nr_sns", SST_PATH_INDEX_VOICE_UPLINK, SST_MODULE_ID_NR_SNS, SST_TASK_FBA_UL, { 1, 2, 1 } },
-	{ "voice_uplink ser", SST_PATH_INDEX_VOICE_UPLINK, SST_MODULE_ID_SER, SST_TASK_FBA_UL, { 1, 2, 1 } },
-	{ "voice_uplink agc", SST_PATH_INDEX_VOICE_UPLINK, SST_MODULE_ID_AGC, SST_TASK_FBA_UL, { 1, 2, 1 } },
-	{ "voice_downlink cni", SST_PATH_INDEX_VOICE_DOWNLINK, SST_MODULE_ID_CNI, SST_TASK_FBA_DL, { 1, 2, 1 } },
+	{ "voice_downlink nr", SST_DFW_PATH_INDEX_VOICE_DOWNLINK,
+		SST_DFW_MODULE_ID_NR, SST_TASK_FBA_DL , { 1, 2, 1 } },
+	{ "voice_uplink nr", SST_DFW_PATH_INDEX_VOICE_UPLINK,
+		SST_DFW_MODULE_ID_NR, SST_TASK_FBA_UL, { 1, 2, 1 } },
+	{ "voice_downlink bwx", SST_DFW_PATH_INDEX_VOICE_DOWNLINK,
+		SST_DFW_MODULE_ID_BWX, SST_TASK_FBA_DL, { 1, 2, 1 } },
+	{ "voice_downlink drp", SST_DFW_PATH_INDEX_VOICE_DOWNLINK,
+		SST_DFW_MODULE_ID_DRP, SST_TASK_FBA_DL, { 1, 2, 1 } },
+	{ "voice_uplink drp", SST_DFW_PATH_INDEX_VOICE_UPLINK,
+		SST_DFW_MODULE_ID_DRP, SST_TASK_FBA_UL, { 1, 2, 1 } },
+	{ "voice_downlink ana", SST_DFW_PATH_INDEX_VOICE_DOWNLINK,
+		SST_DFW_MODULE_ID_ANA, SST_TASK_FBA_DL, { 1, 2, 1 } },
+	{ "voice_uplink aec", SST_DFW_PATH_INDEX_VOICE_UPLINK,
+		SST_DFW_MODULE_ID_AEC, SST_TASK_FBA_UL, { 1, 2, 1 } },
+	{ "voice_uplink nr_sns", SST_DFW_PATH_INDEX_VOICE_UPLINK,
+		SST_DFW_MODULE_ID_NR_SNS, SST_TASK_FBA_UL, { 1, 2, 1 } },
+	{ "voice_uplink ser", SST_DFW_PATH_INDEX_VOICE_UPLINK,
+		SST_DFW_MODULE_ID_SER, SST_TASK_FBA_UL, { 1, 2, 1 } },
+	{ "voice_uplink agc", SST_DFW_PATH_INDEX_VOICE_UPLINK,
+		SST_DFW_MODULE_ID_AGC, SST_TASK_FBA_UL, { 1, 2, 1 } },
+	{ "voice_downlink cni", SST_DFW_PATH_INDEX_VOICE_DOWNLINK,
+		SST_DFW_MODULE_ID_CNI, SST_TASK_FBA_DL, { 1, 2, 1 } },
 
+	{ "voice_downlink 9", FBA_PROBE_INDEX_9, 0,
+		SST_TASK_FBA_DL , { 0, 0, 0 } },
+	{ "voice_downlink 10", FBA_PROBE_INDEX_10, 0,
+		SST_TASK_FBA_DL, { 0, 0, 0 } },
+	{ "voice_downlink 11", FBA_PROBE_INDEX_11, 0,
+		SST_TASK_FBA_DL, { 0, 0, 0 } },
+	{ "voice_downlink 12", FBA_PROBE_INDEX_12, 0,
+		SST_TASK_FBA_DL, { 0, 0, 0 } },
+	{ "voice_downlink 13", FBA_PROBE_INDEX_13, 0,
+		SST_TASK_FBA_DL, { 0, 0, 0 } },
+	{ "voice_downlink 14", FBA_PROBE_INDEX_14, 0,
+		SST_TASK_FBA_DL, { 0, 0, 0 } },
+	{ "voice_downlink 17", FBA_PROBE_INDEX_17, 0,
+		SST_TASK_FBA_DL, { 0, 0, 0 } },
+	{ "voice_downlink 18", FBA_PROBE_INDEX_18, 0,
+		SST_TASK_FBA_DL, { 0, 0, 0 } },
+	{ "voice_downlink 21", FBA_PROBE_INDEX_21, 0,
+		SST_TASK_FBA_DL, { 0, 0, 0 } },
+	{ "voice_downlink 27", FBA_PROBE_INDEX_27, 0,
+		SST_TASK_FBA_DL, { 0, 0, 0 } },
+	{ "voice_uplink 1", FBA_PROBE_INDEX_1, 0,
+		SST_TASK_FBA_UL, { 0, 0, 0 } },
+	{ "voice_uplink 2", FBA_PROBE_INDEX_2, 0,
+		SST_TASK_FBA_UL, { 0, 0, 0 } },
+	{ "voice_uplink 3", FBA_PROBE_INDEX_3, 0,
+		SST_TASK_FBA_UL, { 0, 0, 0 } },
+	{ "voice_uplink 4", FBA_PROBE_INDEX_4, 0,
+		SST_TASK_FBA_UL, { 0, 0, 0 } },
+	{ "voice_uplink 5", FBA_PROBE_INDEX_5, 0,
+		SST_TASK_FBA_UL, { 0, 0, 0 } },
+	{ "voice_uplink 6", FBA_PROBE_INDEX_6, 0,
+		SST_TASK_FBA_UL, { 0, 0, 0 } },
+	{ "voice_uplink 7", FBA_PROBE_INDEX_7, 0,
+		SST_TASK_FBA_UL, { 0, 0, 0 } },
+	{ "voice_uplink 8", FBA_PROBE_INDEX_8, 0,
+		SST_TASK_FBA_UL, { 0, 0, 0 } },
+	{ "voice_uplink 15", FBA_PROBE_INDEX_15, 0,
+		SST_TASK_FBA_UL, { 0, 0, 0 } },
+	{ "voice_uplink 16", FBA_PROBE_INDEX_16, 0,
+		SST_TASK_FBA_UL, { 0, 0, 0 } },
+	{ "voice_uplink 19", FBA_PROBE_INDEX_19, 0,
+		SST_TASK_FBA_UL, { 0, 0, 0 } },
+	{ "voice_uplink 20", FBA_PROBE_INDEX_20, 0,
+		SST_TASK_FBA_UL, { 0, 0, 0 } },
+	{ "voice_uplink 22", FBA_PROBE_INDEX_22, 0,
+		SST_TASK_FBA_UL, { 0, 0, 0 } },
+	{ "voice_uplink 23", FBA_PROBE_INDEX_23, 0,
+		SST_TASK_FBA_UL, { 0, 0, 0 } },
+	{ "voice_uplink 24", FBA_PROBE_INDEX_24, 0,
+		SST_TASK_FBA_UL, { 0, 0, 0 } },
+	{ "voice_uplink 25", FBA_PROBE_INDEX_25, 0,
+		SST_TASK_FBA_UL, { 0, 0, 0 } },
+	{ "voice_uplink 26", FBA_PROBE_INDEX_26, 0,
+		SST_TASK_FBA_UL, { 0, 0, 0 } },
 
-	{ "media_loop1_out mdrp", SST_PATH_INDEX_MEDIA_LOOP1_OUT , SST_MODULE_ID_MDRP, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "media_loop2_out mdrp", SST_PATH_INDEX_MEDIA_LOOP2_OUT , SST_MODULE_ID_MDRP, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "media_loop1_out mdrp", SST_DFW_PATH_INDEX_MEDIA_LOOP1_OUT ,
+		SST_DFW_MODULE_ID_MDRP, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "media_loop2_out mdrp", SST_DFW_PATH_INDEX_MEDIA_LOOP2_OUT ,
+		SST_DFW_MODULE_ID_MDRP, SST_TASK_SBA, { 1, 2, 1 } },
 
-	{ "media_loop1_out fir_stereo", SST_PATH_INDEX_MEDIA_LOOP1_OUT , SST_MODULE_ID_FIR_24, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "media_loop2_out fir_stereo", SST_PATH_INDEX_MEDIA_LOOP2_OUT , SST_MODULE_ID_FIR_24, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "media_loop1_out iir_stereo", SST_PATH_INDEX_MEDIA_LOOP1_OUT , SST_MODULE_ID_IIR_24, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "media_loop2_out iir_stereo", SST_PATH_INDEX_MEDIA_LOOP2_OUT , SST_MODULE_ID_IIR_24, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "sidetone_in iir_stereo", SST_PATH_INDEX_SIDETONE_IN, SST_MODULE_ID_IIR_24, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "media_loop1_out fir_stereo", SST_DFW_PATH_INDEX_MEDIA_LOOP1_OUT ,
+		SST_DFW_MODULE_ID_FIR_24, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "media_loop2_out fir_stereo", SST_DFW_PATH_INDEX_MEDIA_LOOP2_OUT ,
+		SST_DFW_MODULE_ID_FIR_24, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "media_loop1_out iir_stereo", SST_DFW_PATH_INDEX_MEDIA_LOOP1_OUT ,
+		SST_DFW_MODULE_ID_IIR_24, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "media_loop2_out iir_stereo", SST_DFW_PATH_INDEX_MEDIA_LOOP2_OUT ,
+		SST_DFW_MODULE_ID_IIR_24, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "sidetone_in iir_stereo", SST_DFW_PATH_INDEX_SIDETONE_IN,
+		SST_DFW_MODULE_ID_IIR_24, SST_TASK_SBA, { 1, 2, 1 } },
 
 	/* ASRC */
-	{ "modem_out asrc", SST_PATH_INDEX_MODEM_OUT, SST_MODULE_ID_ASRC, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "modem_in asrc", SST_PATH_INDEX_MODEM_IN, SST_MODULE_ID_ASRC, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "bt_out asrc", SST_PATH_INDEX_BT_OUT, SST_MODULE_ID_ASRC, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "bt_in asrc", SST_PATH_INDEX_BT_IN, SST_MODULE_ID_ASRC, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "fm_out asrc", SST_PATH_INDEX_FM_OUT, SST_MODULE_ID_ASRC, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "fm_in asrc", SST_PATH_INDEX_FM_IN, SST_MODULE_ID_ASRC, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "codec_out0 asrc", SST_PATH_INDEX_CODEC_OUT0, SST_MODULE_ID_ASRC, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "codec_out1 asrc", SST_PATH_INDEX_CODEC_OUT1, SST_MODULE_ID_ASRC, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "codec_in0 asrc", SST_PATH_INDEX_CODEC_IN0, SST_MODULE_ID_ASRC, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "codec_in1 asrc", SST_PATH_INDEX_CODEC_IN1, SST_MODULE_ID_ASRC, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "modem_out asrc", SST_DFW_PATH_INDEX_MODEM_OUT,
+		SST_DFW_MODULE_ID_ASRC, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "modem_in asrc", SST_DFW_PATH_INDEX_MODEM_IN,
+		SST_DFW_MODULE_ID_ASRC, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "bt_out asrc", SST_DFW_PATH_INDEX_BT_OUT,
+		SST_DFW_MODULE_ID_ASRC, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "bt_in asrc", SST_DFW_PATH_INDEX_BT_IN,
+		SST_DFW_MODULE_ID_ASRC, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "fm_out asrc", SST_DFW_PATH_INDEX_FM_OUT,
+		SST_DFW_MODULE_ID_ASRC, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "fm_in asrc", SST_DFW_PATH_INDEX_FM_IN,
+		SST_DFW_MODULE_ID_ASRC, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "codec_out0 asrc", SST_DFW_PATH_INDEX_CODEC_OUT0,
+		SST_DFW_MODULE_ID_ASRC, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "codec_out1 asrc", SST_DFW_PATH_INDEX_CODEC_OUT1,
+		SST_DFW_MODULE_ID_ASRC, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "codec_in0 asrc", SST_DFW_PATH_INDEX_CODEC_IN0,
+		SST_DFW_MODULE_ID_ASRC, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "codec_in1 asrc", SST_DFW_PATH_INDEX_CODEC_IN1,
+		SST_DFW_MODULE_ID_ASRC, SST_TASK_SBA, { 1, 2, 1 } },
 
-	{ "tone_in tone_gen", SST_PATH_INDEX_TONE_IN, SST_MODULE_ID_TONE_GEN, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "hf_sns_out bmf", SST_PATH_INDEX_HF_SNS_OUT, SST_MODULE_ID_BMF, SST_TASK_FBA_UL, { 1, 2, 1 } },
-	{ "hf_out edl", SST_PATH_INDEX_HF_OUT, SST_MODULE_ID_EDL, SST_TASK_FBA_UL, { 1, 2, 1 } },
-	{ "voice_downlink glc", SST_PATH_INDEX_VOICE_DOWNLINK, SST_MODULE_ID_GLC, SST_TASK_FBA_DL, { 1, 2, 1 } },
-	{ "voice_downlink fir", SST_PATH_INDEX_VOICE_DOWNLINK, SST_MODULE_ID_FIR_16, SST_TASK_FBA_DL, { 1, 2, 1 } },
-	{ "voice_uplink fir", SST_PATH_INDEX_VOICE_UPLINK, SST_MODULE_ID_FIR_16, SST_TASK_FBA_UL, { 1, 2, 1 } },
-	{ "hf_sns_out fir", SST_PATH_INDEX_HF_SNS_OUT, SST_MODULE_ID_FIR_16, SST_TASK_FBA_UL, { 1, 2, 1 } },
-	{ "voice_downlink iir", SST_PATH_INDEX_VOICE_DOWNLINK, SST_MODULE_ID_IIR_16, SST_TASK_FBA_DL, { 1, 2, 1 } },
-	{ "voice_uplink iir", SST_PATH_INDEX_VOICE_UPLINK, SST_MODULE_ID_IIR_16, SST_TASK_FBA_UL, { 1, 2, 1 } },
-	{ "hf_sns_out iir", SST_PATH_INDEX_HF_SNS_OUT, SST_MODULE_ID_IIR_16, SST_TASK_FBA_UL, { 1, 2, 1 } },
-	{ "voice_uplink dnr", SST_PATH_INDEX_VOICE_UPLINK, SST_MODULE_ID_DNR, SST_TASK_FBA_UL, { 1, 2, 1 } },
-	{ "voice_uplink cni", SST_PATH_INDEX_VOICE_UPLINK, SST_MODULE_ID_CNI_TX, SST_TASK_FBA_UL, { 1, 2, 1 } },
-	{ "hf_out ref_line", SST_PATH_INDEX_HF_OUT, SST_MODULE_ID_REF_LINE, SST_TASK_FBA_UL, { 1, 2, 1 } },
+	{ "tone_in tone_gen", SST_DFW_PATH_INDEX_TONE_IN,
+		SST_DFW_MODULE_ID_TONE_GEN, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "hf_sns_out bmf", SST_DFW_PATH_INDEX_HF_SNS_OUT,
+		SST_DFW_MODULE_ID_BMF, SST_TASK_FBA_UL, { 1, 2, 1 } },
+	{ "hf_out edl", SST_DFW_PATH_INDEX_HF_OUT,
+		SST_DFW_MODULE_ID_EDL, SST_TASK_FBA_UL, { 1, 2, 1 } },
+	{ "hf_sns_out fir", SST_DFW_PATH_INDEX_HF_SNS_OUT,
+		SST_DFW_MODULE_ID_FIR_16, SST_TASK_FBA_UL, { 1, 2, 1 } },
+	{ "hf_sns_out iir", SST_DFW_PATH_INDEX_HF_SNS_OUT,
+		SST_DFW_MODULE_ID_IIR_16, SST_TASK_FBA_UL, { 1, 2, 1 } },
+	{ "hf_out ref_line", SST_DFW_PATH_INDEX_HF_OUT,
+		SST_DFW_MODULE_ID_REF_LINE, SST_TASK_FBA_UL, { 1, 2, 1 } },
 
-	{ "media0_in volume", SST_PATH_INDEX_MEDIA0_IN, SST_MODULE_ID_VOLUME, SST_TASK_MMX, { 1, 2, 1 } },
+	{ "media0_in volume", SST_DFW_PATH_INDEX_MEDIA0_IN,
+		SST_DFW_MODULE_ID_VOLUME, SST_TASK_MMX, { 1, 2, 1 } },
 
 	/* DCR */
-	{ "modem_in dcr", SST_PATH_INDEX_MODEM_IN, SST_MODULE_ID_FILT_DCR, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "bt_in dcr", SST_PATH_INDEX_BT_IN, SST_MODULE_ID_FILT_DCR, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "fm_in dcr", SST_PATH_INDEX_FM_IN, SST_MODULE_ID_FILT_DCR, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "codec_in0 dcr", SST_PATH_INDEX_CODEC_IN0, SST_MODULE_ID_FILT_DCR, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "codec_in1 dcr", SST_PATH_INDEX_CODEC_IN1, SST_MODULE_ID_FILT_DCR, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "modem_in dcr", SST_DFW_PATH_INDEX_MODEM_IN,
+		SST_DFW_MODULE_ID_FILT_DCR, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "bt_in dcr", SST_DFW_PATH_INDEX_BT_IN,
+		SST_DFW_MODULE_ID_FILT_DCR, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "fm_in dcr", SST_DFW_PATH_INDEX_FM_IN,
+		SST_DFW_MODULE_ID_FILT_DCR, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "codec_in0 dcr", SST_DFW_PATH_INDEX_CODEC_IN0,
+		SST_DFW_MODULE_ID_FILT_DCR, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "codec_in1 dcr", SST_DFW_PATH_INDEX_CODEC_IN1,
+		SST_DFW_MODULE_ID_FILT_DCR, SST_TASK_SBA, { 1, 2, 1 } },
 
 	/* Log */
-	{ "modem_out log", SST_PATH_INDEX_MODEM_OUT, SST_MODULE_ID_LOG, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "modem_in log", SST_PATH_INDEX_MODEM_IN, SST_MODULE_ID_LOG, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "bt_out log", SST_PATH_INDEX_BT_OUT, SST_MODULE_ID_LOG, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "bt_in log", SST_PATH_INDEX_BT_IN, SST_MODULE_ID_LOG, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "fm_in log", SST_PATH_INDEX_FM_IN, SST_MODULE_ID_LOG, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "fm_out log", SST_PATH_INDEX_FM_OUT, SST_MODULE_ID_LOG, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "codec_out0 log", SST_PATH_INDEX_CODEC_OUT0, SST_MODULE_ID_LOG, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "codec_in0 log", SST_PATH_INDEX_CODEC_IN0, SST_MODULE_ID_LOG, SST_TASK_SBA, { 1, 2, 1 } },
-	{ "voice_downlink log", SST_PATH_INDEX_VOICE_DOWNLINK, SST_MODULE_ID_LOG, SST_TASK_FBA_DL, { 1, 2, 1 } },
-	{ "voice_uplink log", SST_PATH_INDEX_VOICE_UPLINK, SST_MODULE_ID_LOG, SST_TASK_FBA_UL, { 1, 2, 1 } },
-	{ "hf_out log", SST_PATH_INDEX_HF_OUT, SST_MODULE_ID_LOG, SST_TASK_FBA_UL, { 1, 2, 1 } },
-	{ "hf_sns_out log", SST_PATH_INDEX_HF_SNS_OUT, SST_MODULE_ID_LOG, SST_TASK_FBA_UL, { 1, 2, 1 } },
+	{ "modem_out log", SST_DFW_PATH_INDEX_MODEM_OUT,
+		SST_DFW_MODULE_ID_LOG, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "modem_in log", SST_DFW_PATH_INDEX_MODEM_IN,
+		SST_DFW_MODULE_ID_LOG, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "bt_out log", SST_DFW_PATH_INDEX_BT_OUT,
+		SST_DFW_MODULE_ID_LOG, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "bt_in log", SST_DFW_PATH_INDEX_BT_IN,
+		SST_DFW_MODULE_ID_LOG, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "fm_in log", SST_DFW_PATH_INDEX_FM_IN,
+		SST_DFW_MODULE_ID_LOG, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "fm_out log", SST_DFW_PATH_INDEX_FM_OUT,
+		SST_DFW_MODULE_ID_LOG, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "codec_out0 log", SST_DFW_PATH_INDEX_CODEC_OUT0,
+		SST_DFW_MODULE_ID_LOG, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "codec_in0 log", SST_DFW_PATH_INDEX_CODEC_IN0,
+		SST_DFW_MODULE_ID_LOG, SST_TASK_SBA, { 1, 2, 1 } },
+	{ "voice_downlink log", SST_DFW_PATH_INDEX_VOICE_DOWNLINK,
+		SST_DFW_MODULE_ID_LOG, SST_TASK_FBA_DL, { 1, 2, 1 } },
+	{ "voice_uplink log", SST_DFW_PATH_INDEX_VOICE_UPLINK,
+		SST_DFW_MODULE_ID_LOG, SST_TASK_FBA_UL, { 1, 2, 1 } },
+	{ "hf_out log", SST_DFW_PATH_INDEX_HF_OUT,
+		SST_DFW_MODULE_ID_LOG, SST_TASK_FBA_UL, { 1, 2, 1 } },
+	{ "hf_sns_out log", SST_DFW_PATH_INDEX_HF_SNS_OUT,
+		SST_DFW_MODULE_ID_LOG, SST_TASK_FBA_UL, { 1, 2, 1 } },
 
 	/* Decoder */
-	{ "media0_in pcm", SST_PATH_INDEX_MEDIA0_IN, SST_MODULE_ID_PCM, SST_TASK_MMX, { 1, 2, 1 } },
-	{ "media0_in mp3", SST_PATH_INDEX_MEDIA0_IN, SST_MODULE_ID_MP3, SST_TASK_MMX, { 1, 2, 1 } },
-	{ "media0_in mp24", SST_PATH_INDEX_MEDIA0_IN, SST_MODULE_ID_MP24, SST_TASK_MMX, { 1, 2, 1 } },
-	{ "media0_in aac", SST_PATH_INDEX_MEDIA0_IN, SST_MODULE_ID_AAC, SST_TASK_MMX, { 1, 2, 1 } },
-	{ "media0_in aacp", SST_PATH_INDEX_MEDIA0_IN, SST_MODULE_ID_AACP, SST_TASK_MMX, { 1, 2, 1 } },
-	{ "media0_in eaacp", SST_PATH_INDEX_MEDIA0_IN, SST_MODULE_ID_EAACP, SST_TASK_MMX, { 1, 2, 1 } },
-	{ "media0_in wma9", SST_PATH_INDEX_MEDIA0_IN, SST_MODULE_ID_WMA9, SST_TASK_MMX, { 1, 2, 1 } },
-	{ "media0_in wma10", SST_PATH_INDEX_MEDIA0_IN, SST_MODULE_ID_WMA10, SST_TASK_MMX, { 1, 2, 1 } },
-	{ "media0_in wma10p", SST_PATH_INDEX_MEDIA0_IN, SST_MODULE_ID_WMA10P, SST_TASK_MMX, { 1, 2, 1 } },
-	{ "media0_in ra", SST_PATH_INDEX_MEDIA0_IN, SST_MODULE_ID_RA, SST_TASK_MMX, { 1, 2, 1 } },
-	{ "media0_in ddac3", SST_PATH_INDEX_MEDIA0_IN, SST_MODULE_ID_DDAC3, SST_TASK_MMX, { 1, 2, 1 } },
-	{ "media0_in true_hd", SST_PATH_INDEX_MEDIA0_IN, SST_MODULE_ID_TRUE_HD, SST_TASK_MMX, { 1, 2, 1 } },
-	{ "media0_in hd_plus", SST_PATH_INDEX_MEDIA0_IN, SST_MODULE_ID_HD_PLUS, SST_TASK_MMX, { 1, 2, 1 } },
+	{ "media0_in pcm", SST_DFW_PATH_INDEX_MEDIA0_IN,
+		SST_DFW_MODULE_ID_PCM, SST_TASK_MMX, { 1, 2, 1 } },
+	{ "media0_in mp3", SST_DFW_PATH_INDEX_MEDIA0_IN,
+		SST_DFW_MODULE_ID_MP3, SST_TASK_MMX, { 1, 2, 1 } },
+	{ "media0_in mp24", SST_DFW_PATH_INDEX_MEDIA0_IN,
+		SST_DFW_MODULE_ID_MP24, SST_TASK_MMX, { 1, 2, 1 } },
+	{ "media0_in aac", SST_DFW_PATH_INDEX_MEDIA0_IN,
+		SST_DFW_MODULE_ID_AAC, SST_TASK_MMX, { 1, 2, 1 } },
+	{ "media0_in aacp", SST_DFW_PATH_INDEX_MEDIA0_IN,
+		SST_DFW_MODULE_ID_AACP, SST_TASK_MMX, { 1, 2, 1 } },
+	{ "media0_in eaacp", SST_DFW_PATH_INDEX_MEDIA0_IN,
+		SST_DFW_MODULE_ID_EAACP, SST_TASK_MMX, { 1, 2, 1 } },
+	{ "media0_in wma9", SST_DFW_PATH_INDEX_MEDIA0_IN,
+		SST_DFW_MODULE_ID_WMA9, SST_TASK_MMX, { 1, 2, 1 } },
+	{ "media0_in wma10", SST_DFW_PATH_INDEX_MEDIA0_IN,
+		SST_DFW_MODULE_ID_WMA10, SST_TASK_MMX, { 1, 2, 1 } },
+	{ "media0_in wma10p", SST_DFW_PATH_INDEX_MEDIA0_IN,
+		SST_DFW_MODULE_ID_WMA10P, SST_TASK_MMX, { 1, 2, 1 } },
+	{ "media0_in ra", SST_DFW_PATH_INDEX_MEDIA0_IN,
+		SST_DFW_MODULE_ID_RA, SST_TASK_MMX, { 1, 2, 1 } },
+	{ "media0_in ddac3", SST_DFW_PATH_INDEX_MEDIA0_IN,
+		SST_DFW_MODULE_ID_DDAC3, SST_TASK_MMX, { 1, 2, 1 } },
+	{ "media0_in true_hd", SST_DFW_PATH_INDEX_MEDIA0_IN,
+		SST_DFW_MODULE_ID_TRUE_HD, SST_TASK_MMX, { 1, 2, 1 } },
+	{ "media0_in hd_plus", SST_DFW_PATH_INDEX_MEDIA0_IN,
+		SST_DFW_MODULE_ID_HD_PLUS, SST_TASK_MMX, { 1, 2, 1 } },
 
 	/* Effects */
-	{ "media0_in bass_boost", SST_PATH_INDEX_MEDIA0_IN, SST_MODULE_ID_BASS_BOOST, SST_TASK_MMX, { 1, 2, 1 } },
-	{ "media0_in stereo_wdng", SST_PATH_INDEX_MEDIA0_IN, SST_MODULE_ID_STEREO_WDNG, SST_TASK_MMX, { 1, 2, 1 } },
-	{ "media0_in av_removal", SST_PATH_INDEX_MEDIA0_IN, SST_MODULE_ID_AV_REMOVAL, SST_TASK_MMX, { 1, 2, 1 } },
-	{ "media0_in mic_eq", SST_PATH_INDEX_MEDIA0_IN, SST_MODULE_ID_MIC_EQ, SST_TASK_MMX, { 1, 2, 1 } },
-	{ "media0_in spl", SST_PATH_INDEX_MEDIA0_IN, SST_MODULE_ID_SPL, SST_TASK_MMX, { 1, 2, 1 } },
-	{ "media0_in vtsv", SST_PATH_INDEX_MEDIA0_IN, SST_MODULE_ID_ALGO_VTSV, SST_TASK_MMX, { 1, 2, 1 } },
-	{ "media0_in virtualizer", SST_PATH_INDEX_MEDIA0_IN, SST_MODULE_ID_VIRTUALIZER, SST_TASK_MMX, { 1, 2, 1 } },
-	{ "media0_in visualization", SST_PATH_INDEX_MEDIA0_IN, SST_MODULE_ID_VISUALIZATION, SST_TASK_MMX, { 1, 2, 1 } },
-	{ "media0_in loudness_optimizer", SST_PATH_INDEX_MEDIA0_IN, SST_MODULE_ID_LOUDNESS_OPTIMIZER, SST_TASK_MMX, { 1, 2, 1 } },
-	{ "media0_in reverberation", SST_PATH_INDEX_MEDIA0_IN, SST_MODULE_ID_REVERBERATION, SST_TASK_MMX, { 1, 2, 1 } },
+	{ "media0_in bass_boost", SST_DFW_PATH_INDEX_MEDIA0_IN,
+		SST_DFW_MODULE_ID_BASS_BOOST, SST_TASK_MMX, { 1, 2, 1 } },
+	{ "media0_in stereo_wdng", SST_DFW_PATH_INDEX_MEDIA0_IN,
+		SST_DFW_MODULE_ID_STEREO_WDNG, SST_TASK_MMX, { 1, 2, 1 } },
+	{ "media0_in av_removal", SST_DFW_PATH_INDEX_MEDIA0_IN,
+		SST_DFW_MODULE_ID_AV_REMOVAL, SST_TASK_MMX, { 1, 2, 1 } },
+	{ "media0_in mic_eq", SST_DFW_PATH_INDEX_MEDIA0_IN,
+		SST_DFW_MODULE_ID_MIC_EQ, SST_TASK_MMX, { 1, 2, 1 } },
+	{ "media0_in spl", SST_DFW_PATH_INDEX_MEDIA0_IN,
+		SST_DFW_MODULE_ID_SPL, SST_TASK_MMX, { 1, 2, 1 } },
+	{ "media0_in vtsv", SST_DFW_PATH_INDEX_MEDIA0_IN,
+		SST_DFW_MODULE_ID_ALGO_VTSV, SST_TASK_MMX, { 1, 2, 1 } },
+	{ "media0_in virtualizer", SST_DFW_PATH_INDEX_MEDIA0_IN,
+		SST_DFW_MODULE_ID_VIRTUALIZER, SST_TASK_MMX, { 1, 2, 1 } },
+	{ "media0_in visualization", SST_DFW_PATH_INDEX_MEDIA0_IN,
+		SST_DFW_MODULE_ID_VISUALIZATION, SST_TASK_MMX, { 1, 2, 1 } },
+	{ "media0_in loudness_optimizer", SST_DFW_PATH_INDEX_MEDIA0_IN,
+		SST_DFW_MODULE_ID_LOUDNESS_OPTIMIZER, SST_TASK_MMX,
+								{ 1, 2, 1} },
+	{ "media0_in reverberation", SST_DFW_PATH_INDEX_MEDIA0_IN,
+		SST_DFW_MODULE_ID_REVERBERATION, SST_TASK_MMX, { 1, 2, 1 } },
 };
 
diff --git a/sound/soc/intel/sst/sst_platform.c b/sound/soc/intel/sst/sst_platform.c
index 1339a45..7dbf540 100644
--- a/sound/soc/intel/sst/sst_platform.c
+++ b/sound/soc/intel/sst/sst_platform.c
@@ -21,6 +21,7 @@
 #include <asm/platform_byt_audio.h>
 #include <asm/platform_cht_audio.h>
 #include <sound/asound.h>
+#include "../platform-libs/atom_pipes.h"
 #include "sst.h"
 
 static struct sst_platform_data sst_platform_pdata;
@@ -39,17 +40,65 @@ static struct sst_dev_stream_map dpcm_strm_map_byt[] = {
 static struct sst_dev_stream_map dpcm_strm_map_cht[] = {
 	{0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}, /* Reserved, not in use */
 	{CHT_DPCM_AUDIO, 0, SNDRV_PCM_STREAM_PLAYBACK, PIPE_RSVD,
-					SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
+		SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
 	{CHT_DPCM_DB,    0, SNDRV_PCM_STREAM_PLAYBACK, PIPE_RSVD,
-					SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
+		SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
 	{CHT_DPCM_COMPR, 0, SNDRV_PCM_STREAM_PLAYBACK, PIPE_RSVD,
-					SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
+		SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
 	{CHT_DPCM_VOIP,  0, SNDRV_PCM_STREAM_PLAYBACK, PIPE_RSVD,
-					SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
+		SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
+	{CHT_DPCM_PROBE, 0, SNDRV_PCM_STREAM_PLAYBACK,
+		SST_DFW_PATH_INDEX_PROBE1_PIPE_IN >> SST_DFW_PATH_ID_SHIFT,
+		SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
+	{CHT_DPCM_PROBE, 1, SNDRV_PCM_STREAM_PLAYBACK,
+		SST_DFW_PATH_INDEX_PROBE2_PIPE_IN >> SST_DFW_PATH_ID_SHIFT,
+		SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
+	{CHT_DPCM_PROBE, 2, SNDRV_PCM_STREAM_PLAYBACK,
+		SST_DFW_PATH_INDEX_PROBE3_PIPE_IN >> SST_DFW_PATH_ID_SHIFT,
+		SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
+	{CHT_DPCM_PROBE, 3, SNDRV_PCM_STREAM_PLAYBACK,
+		SST_DFW_PATH_INDEX_PROBE4_PIPE_IN >> SST_DFW_PATH_ID_SHIFT,
+		SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
+	{CHT_DPCM_PROBE, 4, SNDRV_PCM_STREAM_PLAYBACK,
+		SST_DFW_PATH_INDEX_PROBE5_PIPE_IN >> SST_DFW_PATH_ID_SHIFT,
+		SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
+	{CHT_DPCM_PROBE, 5, SNDRV_PCM_STREAM_PLAYBACK,
+		SST_DFW_PATH_INDEX_PROBE6_PIPE_IN >> SST_DFW_PATH_ID_SHIFT,
+		SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
+	{CHT_DPCM_PROBE, 6, SNDRV_PCM_STREAM_PLAYBACK,
+		SST_DFW_PATH_INDEX_PROBE7_PIPE_IN >> SST_DFW_PATH_ID_SHIFT,
+		SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
+	{CHT_DPCM_PROBE, 7, SNDRV_PCM_STREAM_PLAYBACK,
+		SST_DFW_PATH_INDEX_PROBE8_PIPE_IN >> SST_DFW_PATH_ID_SHIFT,
+		SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
 	{CHT_DPCM_AUDIO, 0, SNDRV_PCM_STREAM_CAPTURE, PIPE_RSVD,
-					SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
+		SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
 	{CHT_DPCM_VOIP,  0, SNDRV_PCM_STREAM_CAPTURE, PIPE_RSVD,
-					SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
+		SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
+	{CHT_DPCM_PROBE, 0, SNDRV_PCM_STREAM_CAPTURE,
+		SST_DFW_PATH_INDEX_PROBE1_PIPE_OUT >> SST_DFW_PATH_ID_SHIFT,
+		SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
+	{CHT_DPCM_PROBE, 1, SNDRV_PCM_STREAM_CAPTURE,
+		SST_DFW_PATH_INDEX_PROBE2_PIPE_OUT >> SST_DFW_PATH_ID_SHIFT,
+		SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
+	{CHT_DPCM_PROBE, 2, SNDRV_PCM_STREAM_CAPTURE,
+		SST_DFW_PATH_INDEX_PROBE3_PIPE_OUT >> SST_DFW_PATH_ID_SHIFT,
+		SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
+	{CHT_DPCM_PROBE, 3, SNDRV_PCM_STREAM_CAPTURE,
+		SST_DFW_PATH_INDEX_PROBE4_PIPE_OUT >> SST_DFW_PATH_ID_SHIFT,
+		SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
+	{CHT_DPCM_PROBE, 4, SNDRV_PCM_STREAM_CAPTURE,
+		SST_DFW_PATH_INDEX_PROBE5_PIPE_OUT >> SST_DFW_PATH_ID_SHIFT,
+		SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
+	{CHT_DPCM_PROBE, 5, SNDRV_PCM_STREAM_CAPTURE,
+		SST_DFW_PATH_INDEX_PROBE6_PIPE_OUT >> SST_DFW_PATH_ID_SHIFT,
+		SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
+	{CHT_DPCM_PROBE, 6, SNDRV_PCM_STREAM_CAPTURE,
+		SST_DFW_PATH_INDEX_PROBE7_PIPE_OUT >> SST_DFW_PATH_ID_SHIFT,
+		SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
+	{CHT_DPCM_PROBE, 7, SNDRV_PCM_STREAM_CAPTURE,
+		SST_DFW_PATH_INDEX_PROBE8_PIPE_OUT >> SST_DFW_PATH_ID_SHIFT,
+		SST_TASK_ID_MEDIA, SST_DEV_MAP_IN_USE},
 };
 
 static const int sst_ssp_mux_shift[SST_NUM_SSPS] = {
-- 
1.9.1

