From 8b08248e23d86b8c63e5fafa17167c3a9770e93b Mon Sep 17 00:00:00 2001
From: "Du, Changbin" <changbin.du@intel.com>
Date: Wed, 6 May 2015 20:47:35 +0800
Subject: [PATCH] usb: phy-intel-cht: support compliance setting of OEM1 table

If the aompliance setting of OEM1 table from BIOS is non-compliance
mode, ignore the given mA value and set the value as none-compliance
mode required.
For compliance mode, it has been done in composite driver.

Change-Id: Ia7423fbd48ded9a1fff442f0cf51f37cbc7bf2be
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-35478
Signed-off-by: Du, Changbin <changbin.du@intel.com>
---
 drivers/usb/phy/phy-intel-cht.c | 33 +++++++++++++++++++++++++++++++++
 drivers/usb/phy/phy-intel-cht.h |  1 +
 2 files changed, 34 insertions(+)

diff --git a/drivers/usb/phy/phy-intel-cht.c b/drivers/usb/phy/phy-intel-cht.c
index 5919629..a0d58ff 100644
--- a/drivers/usb/phy/phy-intel-cht.c
+++ b/drivers/usb/phy/phy-intel-cht.c
@@ -32,6 +32,7 @@
 #include "../host/xhci.h"
 #include "../host/xhci-intel-cap.h"
 
+#include <asm/intel_em_config.h>
 #include "phy-intel-cht.h"
 
 #define DRIVER_VERSION "Rev. 0.5"
@@ -39,6 +40,12 @@
 #define DRIVER_DESC "Intel CherryTrail USB OTG Transceiver Driver"
 #define DRIVER_INFO DRIVER_DESC " " DRIVER_VERSION
 
+#define FPO0_USB_COMP_OFFSET	0x01
+
+#define USB_VBUS_DRAW_HIGH	500
+#define USB_VBUS_DRAW_SUPER	900
+
+
 static const char driver_name[] = "intel-cht-otg";
 
 static struct cht_otg *cht_otg_dev;
@@ -153,6 +160,8 @@ static struct otg_fsm_ops cht_otg_ops = {
 
 static int cht_otg_set_power(struct usb_phy *phy, unsigned mA)
 {
+	struct usb_gadget *gadget = cht_otg_dev->fsm.otg->gadget;
+
 	dev_dbg(phy->dev, "%s --->\n", __func__);
 
 	if (!cht_otg_dev)
@@ -162,6 +171,15 @@ static int cht_otg_set_power(struct usb_phy *phy, unsigned mA)
 		dev_err(phy->dev, "ERR: Draw %d mA in state %s\n",
 			mA, usb_otg_state_string(cht_otg_dev->phy.state));
 
+	/* For none-compliance mode, ignore the given value
+	 * and always draw maxium. */
+	if (!cht_otg_dev->compliance) {
+		if (gadget->speed == USB_SPEED_SUPER)
+			mA = USB_VBUS_DRAW_SUPER;
+		else
+			mA = USB_VBUS_DRAW_HIGH;
+	}
+
 	/* Notify other drivers that device enumerated or not.
 	 * e.g It is needed by some charger driver, to set
 	 * charging current for SDP case */
@@ -500,6 +518,8 @@ static int cht_handle_extcon_otg_event(struct notifier_block *nb,
 static int cht_otg_probe(struct platform_device *pdev)
 {
 	struct cht_otg *cht_otg;
+	struct em_config_oem1_data em_config;
+	unsigned compliance_bit = 0;
 	int status;
 
 	cht_otg = kzalloc(sizeof(struct cht_otg), GFP_KERNEL);
@@ -551,6 +571,19 @@ static int cht_otg_probe(struct platform_device *pdev)
 	if (status)
 		dev_warn(&pdev->dev, "failed to register extcon notifier\n");
 
+#ifdef CONFIG_ACPI
+	status = em_config_get_oem1_data(&em_config);
+	if (!status)
+		pr_warn("%s: failed to fetch OEM1 table %d\n",
+			__func__, status);
+	else
+		/* 0 - usb compliance, 1 - no usb compliance */
+		compliance_bit = em_config.fpo_0 & FPO0_USB_COMP_OFFSET;
+	pr_info("%s : usb %s mode selected\n", __func__,
+		compliance_bit ? "none_compliance" : "compliance");
+	cht_otg->compliance = !compliance_bit;
+#endif
+
 	/* init otg-fsm */
 	status = cht_otg_start(pdev);
 	if (status) {
diff --git a/drivers/usb/phy/phy-intel-cht.h b/drivers/usb/phy/phy-intel-cht.h
index 9166d49..cd08713 100644
--- a/drivers/usb/phy/phy-intel-cht.h
+++ b/drivers/usb/phy/phy-intel-cht.h
@@ -29,4 +29,5 @@ struct cht_otg {
 	struct notifier_block id_nb;
 	struct work_struct fsm_work;
 	void __iomem *regs;
+	int compliance:1;
 };
-- 
1.9.1

