From 92ae10fc424b7f81f729938e728e9adf1a466933 Mon Sep 17 00:00:00 2001
From: Emmanuel Berthier <emmanuel.berthier@intel.com>
Date: Wed, 11 Feb 2015 18:37:28 +0100
Subject: [PATCH] [DEBUG] Panic in case of SLUB_DEBUG issue

Change-Id: Idf95caf184386cf6cf5940d915f71f2cf0484fb5
Signed-off-by: Emmanuel Berthier <emmanuel.berthier@intel.com>
---
 mm/slub.c | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/mm/slub.c b/mm/slub.c
index 7611f14..7a5b1c8 100644
--- a/mm/slub.c
+++ b/mm/slub.c
@@ -1090,6 +1090,8 @@ static noinline int alloc_debug_processing(struct kmem_cache *s,
 	return 1;
 
 bad:
+	panic("alloc_debug_processing corruption\n");
+#if 0
 	if (PageSlab(page)) {
 		/*
 		 * If this is a slab page then lets do the best we can
@@ -1100,6 +1102,7 @@ bad:
 		page->inuse = page->objects;
 		page->freelist = NULL;
 	}
+#endif
 	return 0;
 }
 
@@ -1158,7 +1161,10 @@ out:
 fail:
 	slab_unlock(page);
 	spin_unlock_irqrestore(&n->list_lock, *flags);
+	panic("free_debug_processing corruption\n");
+#if 0
 	slab_fix(s, "Object at 0x%p not freed", object);
+#endif
 	return NULL;
 }
 
-- 
1.9.1

