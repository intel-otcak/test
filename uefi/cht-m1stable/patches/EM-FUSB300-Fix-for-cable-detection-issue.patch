From 7f7c5f94ec4045b0fc55d1d4b30c52b66f78acbe Mon Sep 17 00:00:00 2001
From: Albin B <albin.bala.krishnan@intel.com>
Date: Mon, 21 Dec 2015 16:58:49 +0530
Subject: [PATCH 03/13] [EM/FUSB300]: Fix for cable detection issue

When software DRP toggle mode is enabled, both CC's are pulled up and
while measuring the voltage on the CC, individual CC's are pulled up
and DAC measurement is done. Since both CC's are pulled up the
measurement value is getting corrupted which is leading to a wrong
cable detection. Fixed by removing the pullup on both CC's as the
measurement function enables individual pullup's.

Change-Id: Ia36a07bfc519dd9806145ca9fdc60df79c88cde2
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-10109
Signed-off-by: Albin B <albin.bala.krishnan@intel.com>
Signed-off-by: R, Kannappan <r.kannappan@intel.com>
Reviewed-on: https://android.intel.com:443/450975
---
 drivers/usb/typec/phy-fusb300.c | 40 +---------------------------------------
 1 file changed, 1 insertion(+), 39 deletions(-)

diff --git a/drivers/usb/typec/phy-fusb300.c b/drivers/usb/typec/phy-fusb300.c
index dab1970..fdae6849 100644
--- a/drivers/usb/typec/phy-fusb300.c
+++ b/drivers/usb/typec/phy-fusb300.c
@@ -377,44 +377,6 @@ static enum typec_current fusb300_get_host_current(struct typec_phy *phy)
 	return fusb300_get_negotiated_cur(FUSB300_HOST_CUR(val));
 }
 
-
-static int fusb300_en_pu(struct fusb300_chip *chip, bool en_pu, int cur)
-{
-	unsigned int val = 0;
-	int ret;
-
-	ret = fusb300_set_host_current(&chip->phy, cur);
-	if (ret < 0) {
-		dev_err(&chip->client->dev,
-			"error setting host cur%d", ret);
-		return ret;
-	}
-	mutex_lock(&chip->lock);
-	ret = regmap_read(chip->map, FUSB300_SWITCH0_REG, &val);
-	if (ret < 0) {
-		dev_err(&chip->client->dev, "error(%d) reading %x\n",
-				ret, FUSB300_SWITCH0_REG);
-		mutex_unlock(&chip->lock);
-		return ret;
-	}
-
-	if (en_pu) {
-		val &= ~FUSB300_SWITCH0_PD_EN;
-		val |= FUSB300_SWITCH0_PU_EN;
-	} else {
-		val &= ~FUSB300_SWITCH0_PU_EN;
-	}
-	dev_dbg(chip->dev, "%s: switch0 %x = %x", __func__,
-				FUSB300_SWITCH0_REG, val);
-	ret = regmap_write(chip->map, FUSB300_SWITCH0_REG, val);
-	if (ret < 0)
-		dev_err(&chip->client->dev, "error(%d) writing %x\n",
-				ret, FUSB300_SWITCH0_REG);
-	mutex_unlock(&chip->lock);
-
-	return ret;
-}
-
 static int fusb300_en_pd(struct fusb300_chip *chip, bool en_pd)
 {
 	unsigned int val = 0;
@@ -480,7 +442,7 @@ static int fusb300_switch_mode(struct typec_phy *phy, enum typec_mode mode)
 			regmap_write(chip->map, FUSB300_MEAS_REG, 0x1f);*/
 		}
 		mutex_unlock(&chip->lock);
-		fusb300_en_pu(chip, true, cur);
+		fusb300_set_host_current(phy, cur);
 	} else if (mode == TYPEC_MODE_DRP) {
 		/* In DRP mode, clear vconn, pu and pd */
 		regmap_write(chip->map, FUSB300_SWITCH0_REG, 0);
-- 
1.9.1

