From 6a7f032502472369afe111bc50f3556ebb599045 Mon Sep 17 00:00:00 2001
From: "Thulasimani,Sivakumar" <sivakumar.thulasimani@intel.com>
Date: Wed, 28 Oct 2015 18:55:53 +0530
Subject: [PATCH 22/28] FOR_UPSTREAM [VPG]: drm/i915: Handle CHV link training
 short pulse IRQ

The panel may give a short pulse to recover from any link related
failure. In such a scenario use the existing simulate disconnect-
connect logic to enable the display back again.

This is required for CHV alone as directly performing link
training will result in random failure and only complete
disable and enable is the best case to recover link.

v2: previous version tried disabling port and enabling back
again, but it will violate bspec sequence hence modified
to current state.

Change-Id: Icbc67999ad992b7a176939ff708a65ea52f9d886
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-9749
Signed-off-by: Sivakumar Thulasimani <sivakumar.thulasimani@intel.com>
Reviewed-on: https://android.intel.com:443/439695
---
 drivers/gpu/drm/i915/intel_dp.c | 13 ++++++++++---
 1 file changed, 10 insertions(+), 3 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_dp.c b/drivers/gpu/drm/i915/intel_dp.c
index 8611acf..b191560 100644
--- a/drivers/gpu/drm/i915/intel_dp.c
+++ b/drivers/gpu/drm/i915/intel_dp.c
@@ -4492,6 +4492,7 @@ void
 intel_dp_check_link_status(struct intel_dp *intel_dp, bool *perform_full_detect)
 {
 	struct intel_encoder *intel_encoder = &dp_to_dig_port(intel_dp)->base;
+	struct drm_device *dev = intel_dp_to_dev(intel_dp);
 	u8 sink_irq_vector;
 	u8 link_status[DP_LINK_STATUS_SIZE];
 	u8 old_sink_count = intel_dp->sink_count;
@@ -4572,10 +4573,16 @@ intel_dp_check_link_status(struct intel_dp *intel_dp, bool *perform_full_detect)
 	    (!drm_dp_channel_eq_ok(link_status, intel_dp->lane_count))) {
 		DRM_DEBUG_KMS("%s: channel EQ not ok, retraining\n",
 			      intel_encoder->base.name);
-		if (intel_dp_start_link_train(intel_dp))
-			intel_dp_complete_link_train(intel_dp);
 
-		intel_dp_stop_link_train(intel_dp);
+		if (IS_CHERRYVIEW(dev)) {
+			intel_dp_update_simulate_detach_info(intel_dp);
+			*perform_full_detect = true;
+		} else {
+			if (intel_dp_start_link_train(intel_dp))
+				intel_dp_complete_link_train(intel_dp);
+
+			intel_dp_stop_link_train(intel_dp);
+		}
 	}
 }
 
-- 
1.9.1

