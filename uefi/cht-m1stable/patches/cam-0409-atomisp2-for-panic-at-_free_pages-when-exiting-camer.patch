From 1a30b9d3d4db1df4ba765def4a33746e1d2a1ba9 Mon Sep 17 00:00:00 2001
From: Zaikuo Wang <zaikuo.wang@intel.com>
Date: Fri, 29 May 2015 18:05:07 +0800
Subject: [PATCH 409/462] atomisp2:for panic at _free_pages when exiting camera

do not call free_pages if set_page_wb return no-zero
to avoid page panic

Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-37873
Change-Id: Ie1c4a306a0b096d4094948bb8a41f00d9b43e625
Signed-off-by: Zaikuo Wang <zaikuo.wang@intel.com>
Reviewed-on: https://icggerrit.ir.intel.com/58071
Approver: Yunliang Ding <yunliang.ding@intel.com>
Reviewed-by: Yunliang Ding <yunliang.ding@intel.com>
Build: IMIN (SC)
Validation-Android: Wei Tao <wei.tao@intel.com>
Integrator: WeiX Meng <weix.meng@intel.com>
Build: WeiX Meng <weix.meng@intel.com>
Reviewed-by: WeiX Meng <weix.meng@intel.com>
Maintainer: WeiX Meng <weix.meng@intel.com>
---
 .../media/pci/atomisp2/atomisp_driver/hmm/hmm_bo.c        |  5 +++--
 .../pci/atomisp2/atomisp_driver/hmm/hmm_dynamic_pool.c    | 15 +++++++++------
 .../pci/atomisp2/atomisp_driver/hmm/hmm_reserved_pool.c   |  5 +++--
 3 files changed, 15 insertions(+), 10 deletions(-)

diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/hmm/hmm_bo.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/hmm/hmm_bo.c
index 9fb36d2..846d647 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/hmm/hmm_bo.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/hmm/hmm_bo.c
@@ -710,7 +710,8 @@ static void free_private_bo_pages(struct hmm_buffer_object *bo,
 			ret = set_pages_wb(bo->page_obj[i].page, 1);
 			if (ret)
 				dev_err(atomisp_dev,
-						"set page to WB err ...\n");
+						"set page to WB err ...ret = %d\n",
+							ret);
 			/*
 			W/A: set_pages_wb seldom return value = -EFAULT
 			indicate that address of page is not in valid
@@ -718,7 +719,7 @@ static void free_private_bo_pages(struct hmm_buffer_object *bo,
 			then, _free_pages would panic; Do not know why page
 			address be valid,it maybe memory corruption by lowmemory
 			*/
-			if (-EFAULT != ret) {
+			if (!ret) {
 				__free_pages(bo->page_obj[i].page, 0);
 				hmm_mem_stat.sys_size--;
 			}
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/hmm/hmm_dynamic_pool.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/hmm/hmm_dynamic_pool.c
index f65398a..f1ebc35 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/hmm/hmm_dynamic_pool.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/hmm/hmm_dynamic_pool.c
@@ -102,7 +102,8 @@ static void free_pages_to_dynamic_pool(void *pool,
 		/* free page directly back to system */
 		ret = set_pages_wb(page_obj->page, 1);
 		if (ret)
-			dev_err(atomisp_dev, "set page to WB err ...\n");
+			dev_err(atomisp_dev,
+				"set page to WB err ...ret=%d\n", ret);
 		/*
 		W/A: set_pages_wb seldom return value = -EFAULT
 		indicate that address of page is not in valid
@@ -110,7 +111,7 @@ static void free_pages_to_dynamic_pool(void *pool,
 		then, _free_pages would panic; Do not know why page
 		address be valid, it maybe memory corruption by lowmemory
 		*/
-		if (-EFAULT != ret) {
+		if (!ret) {
 			__free_pages(page_obj->page, 0);
 			hmm_mem_stat.sys_size--;
 		}
@@ -128,8 +129,9 @@ static void free_pages_to_dynamic_pool(void *pool,
 		/* free page directly */
 		ret = set_pages_wb(page_obj->page, 1);
 		if (ret)
-			dev_err(atomisp_dev, "set page to WB err ...\n");
-		if (-EFAULT != ret) {
+			dev_err(atomisp_dev,
+				"set page to WB err ...ret=%d\n", ret);
+		if (!ret) {
 			__free_pages(page_obj->page, 0);
 			hmm_mem_stat.sys_size--;
 		}
@@ -210,8 +212,9 @@ static void hmm_dynamic_pool_exit(void **pool)
 		/* can cause thread sleep, so cannot be put into spin_lock */
 		ret = set_pages_wb(hmm_page->page, 1);
 		if (ret)
-			dev_err(atomisp_dev, "set page to WB err...\n");
-		if (-EFAULT != ret) {
+			dev_err(atomisp_dev,
+				"set page to WB err...ret=%d\n", ret);
+		if (!ret) {
 			__free_pages(hmm_page->page, 0);
 			hmm_mem_stat.dyc_size--;
 			hmm_mem_stat.sys_size--;
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/hmm/hmm_reserved_pool.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/hmm/hmm_reserved_pool.c
index e9a1fb4..590ff7b 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/hmm/hmm_reserved_pool.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/hmm/hmm_reserved_pool.c
@@ -220,7 +220,8 @@ static void hmm_reserved_pool_exit(void **pool)
 	for (i = 0; i < pgnr; i++) {
 		ret = set_pages_wb(repool_info->pages[i], 1);
 		if (ret)
-			dev_err(atomisp_dev, "set page to WB err...\n");
+			dev_err(atomisp_dev,
+				"set page to WB err...ret=%d\n", ret);
 		/*
 		W/A: set_pages_wb seldom return value = -EFAULT
 		indicate that address of page is not in valid
@@ -228,7 +229,7 @@ static void hmm_reserved_pool_exit(void **pool)
 		then, _free_pages would panic; Do not know why
 		page address be valid, it maybe memory corruption by lowmemory
 		*/
-		if (-EFAULT != ret)
+		if (!ret)
 			__free_pages(repool_info->pages[i], 0);
 	}
 
-- 
1.9.1

