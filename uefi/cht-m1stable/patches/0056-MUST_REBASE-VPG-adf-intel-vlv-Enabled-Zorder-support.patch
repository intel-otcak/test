From 4a607334f734640f3116c960530449fdddb4c34f Mon Sep 17 00:00:00 2001
Message-Id: <4a607334f734640f3116c960530449fdddb4c34f.1421709247.git.chang-joon.lee@intel.com>
In-Reply-To: <3650eb44734ad4fbe098313349da8185595a20d8.1421709247.git.chang-joon.lee@intel.com>
References: <3650eb44734ad4fbe098313349da8185595a20d8.1421709247.git.chang-joon.lee@intel.com>
From: Uma Shankar <uma.shankar@intel.com>
Date: Fri, 10 Oct 2014 22:53:47 +0530
Subject: [PATCH 56/75] MUST_REBASE [VPG]: adf/intel/vlv: Enabled Zorder
 support

Enabled Zorder of planes support. Now in multiplane case zorder is working
as per HWC requirement.

v2: Resolve checkpatch warnings

MUST_REBASE: Since Google ADF framework is not in upstream and also
we cannot have two display drivers, other one being i915, we need to
work on i915 and ADF convergence path before it can be upstreamed

For: GMINL-3547
Change-Id: I89101dc81711d4cced39024228679c91b2dfe02e
Signed-off-by: Uma Shankar <uma.shankar@intel.com>
Signed-off-by: Gajanan Bhat <gajanan.bhat@intel.com>
Signed-off-by: Shobhit Kumar <shobhit.kumar@intel.com>
---
 drivers/video/adf/intel/core/vlv/vlv_sp_plane.c    |   28 ++++++++++++++++++++
 .../video/adf/intel/include/core/intel_dc_config.h |    1 +
 .../video/adf/intel/include/core/vlv/vlv_dc_regs.h |    3 +++
 drivers/video/adf/intel/intel_adf_device.c         |   11 +++++---
 4 files changed, 39 insertions(+), 4 deletions(-)

diff --git a/drivers/video/adf/intel/core/vlv/vlv_sp_plane.c b/drivers/video/adf/intel/core/vlv/vlv_sp_plane.c
index 8d3ebce..85e9933 100644
--- a/drivers/video/adf/intel/core/vlv/vlv_sp_plane.c
+++ b/drivers/video/adf/intel/core/vlv/vlv_sp_plane.c
@@ -329,6 +329,8 @@ static void vlv_sp_flip(struct intel_plane *planeptr, struct intel_buffer *buf,
 	int plane = splane->ctx.plane;
 	int pipe = splane->ctx.pipe;
 	struct sp_plane_regs_value *regs = &splane->ctx.regs;
+	int s1_zorder, s1_bottom, s2_zorder, s2_bottom;
+	int order = config->zorder & 0x000F;
 	u32 hw_format = 0;
 	u32 bpp = 0;
 	u32 sprctl;
@@ -340,9 +342,35 @@ static void vlv_sp_flip(struct intel_plane *planeptr, struct intel_buffer *buf,
 	u32 dst_y = config->dst_y & VLV_SP_12BIT_MASK;
 	unsigned long sprsurf_offset, linear_offset;
 
+	s1_zorder = (order >> 3) & 0x1;
+	s1_bottom = (order >> 2) & 0x1;
+	s2_zorder = (order >> 1) & 0x1;
+	s2_bottom = (order >> 0) & 0x1;
+
 	get_format_config(buf->format, &hw_format, &bpp);
 	sprctl = REG_READ(SPCNTR(pipe, plane));
 
+	if (plane == 0) {
+		if (s1_zorder)
+			sprctl |= SPRITE_ZORDER_ENABLE;
+		else
+			sprctl &= ~SPRITE_ZORDER_ENABLE;
+
+		if (s1_bottom)
+			sprctl |= SPRITE_FORCE_BOTTOM;
+		else
+			sprctl &= ~SPRITE_FORCE_BOTTOM;
+	} else {
+		if (s2_zorder)
+			sprctl |= SPRITE_ZORDER_ENABLE;
+		else
+			sprctl &= ~SPRITE_ZORDER_ENABLE;
+		if (s2_bottom)
+			sprctl |= SPRITE_FORCE_BOTTOM;
+		else
+			sprctl &= ~SPRITE_FORCE_BOTTOM;
+	}
+
 	/* Mask out pixel format bits in case we change it */
 	sprctl &= ~SP_PIXFORMAT_MASK;
 	sprctl &= ~SP_YUV_BYTE_ORDER_MASK;
diff --git a/drivers/video/adf/intel/include/core/intel_dc_config.h b/drivers/video/adf/intel/include/core/intel_dc_config.h
index e6bc4e8..76547f2 100644
--- a/drivers/video/adf/intel/include/core/intel_dc_config.h
+++ b/drivers/video/adf/intel/include/core/intel_dc_config.h
@@ -155,6 +155,7 @@ struct intel_plane_config {
 	s32 src_y;
 	u32 src_w;
 	u32 src_h;
+	u32 zorder;
 	u8 alpha;
 	enum intel_plane_compression compression:4;
 	enum intel_plane_blending blending:4;
diff --git a/drivers/video/adf/intel/include/core/vlv/vlv_dc_regs.h b/drivers/video/adf/intel/include/core/vlv/vlv_dc_regs.h
index f4f89a2..1f266de 100644
--- a/drivers/video/adf/intel/include/core/vlv/vlv_dc_regs.h
+++ b/drivers/video/adf/intel/include/core/vlv/vlv_dc_regs.h
@@ -3823,6 +3823,9 @@
 #define SPCONSTALPHA(pipe, plane) _PIPE(pipe * 2 + plane, _SPACONSTALPHA, _SPBCONSTALPHA)
 #define SPGAMC(pipe, plane) _PIPE(pipe * 2 + plane, _SPAGAMC, _SPBGAMC)
 
+#define	SPRITE_FORCE_BOTTOM	(1<<2)
+#define	SPRITE_ZORDER_ENABLE	(1<<0)
+
 /* VBIOS regs */
 #define VGACNTRL		0x71400
 # define VGA_DISP_DISABLE			(1 << 31)
diff --git a/drivers/video/adf/intel/intel_adf_device.c b/drivers/video/adf/intel/intel_adf_device.c
index 8e3dfda..36fa4e9 100644
--- a/drivers/video/adf/intel/intel_adf_device.c
+++ b/drivers/video/adf/intel/intel_adf_device.c
@@ -202,7 +202,7 @@ static int adf_buffer_to_intel_buffer(struct adf_buffer *adf_buf,
 
 static void adf_plane_to_intel_plane_config(
 	struct intel_adf_plane *adf_plane, struct intel_adf_interface *intf,
-	struct intel_plane_config *config)
+	struct intel_plane_config *config, u32 zorder)
 {
 	config->dst_x = adf_plane->dst_x;
 	config->dst_y = adf_plane->dst_y;
@@ -218,6 +218,7 @@ static void adf_plane_to_intel_plane_config(
 	config->blending = adf_plane->blending;
 	config->transform = adf_plane->transform;
 	config->pipe = intf->pipe;
+	config->zorder = zorder;
 }
 
 static struct driver_state *driver_state_create_and_init(void)
@@ -266,7 +267,8 @@ static void driver_state_add_overlay_engine(struct driver_state *state,
 static struct flip *driver_state_create_add_flip(
 	struct driver_state *state, struct intel_adf_overlay_engine *eng,
 	struct intel_adf_interface *intf, struct adf_buffer *buf,
-	struct adf_buffer_mapping *mapping, struct intel_adf_plane *plane)
+	struct adf_buffer_mapping *mapping, struct intel_adf_plane *plane,
+	u32 zorder)
 {
 	struct flip *f = NULL;
 	int err;
@@ -275,7 +277,8 @@ static struct flip *driver_state_create_add_flip(
 	if (f) {
 		f->eng = eng;
 		adf_buffer_to_intel_buffer(buf, mapping, &f->buf);
-		adf_plane_to_intel_plane_config(plane, intf, &f->config);
+		adf_plane_to_intel_plane_config(plane, intf,
+						&f->config, zorder);
 
 		/*validate the buffer and config before adding it*/
 		if (eng->plane && eng->plane->ops &&
@@ -373,7 +376,7 @@ static int intel_adf_device_validate(struct adf_device *dev,
 		/*create and queue a flip for this overlay*/
 		f = driver_state_create_add_flip(state, eng,
 			to_intel_intf(intf), buf, mapping,
-				&custom_overlay->plane);
+				&custom_overlay->plane, custom->zorder);
 		if (!f) {
 			dev_err(dev->dev, "%s: failed to create flip\n",
 				__func__);
-- 
1.7.9.5

