From 0cdc1be4f04833ff02629ce53fb0ee69ce26eb53 Mon Sep 17 00:00:00 2001
From: Venkataramana Kotakonda <venkataramana.kotakonda@intel.com>
Date: Thu, 24 Dec 2015 14:59:47 +0530
Subject: [PATCH 11/14] USBC/PE: Add SwapSourceStartTimer after sink to source
 pr swap.

As per PD spec v1.1, device whose power role changed from sink
to source with pr swap should start SwapSourceStartTimer to wait
for tSwapSourceStart time before sending SrcCap.

Change-Id: Ie7d78cf090c32cf49c535a29e6347f26749886da
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-15496
Signed-off-by: Venkataramana Kotakonda <venkataramana.kotakonda@intel.com>
Reviewed-on: https://android.intel.com:443/452125
---
 drivers/usb/typec/pd/policy_engine.c | 26 ++++++++++++++++++++++----
 1 file changed, 22 insertions(+), 4 deletions(-)

diff --git a/drivers/usb/typec/pd/policy_engine.c b/drivers/usb/typec/pd/policy_engine.c
index 9ba8173..8221852 100644
--- a/drivers/usb/typec/pd/policy_engine.c
+++ b/drivers/usb/typec/pd/policy_engine.c
@@ -1427,8 +1427,18 @@ static void pe_timer_expire_worker(struct work_struct *work)
 				timer_to_str(type), pe->cur_state);
 		break;
 
-	case SWAP_RECOVERY_TIMER:
 	case SWAP_SOURCE_START_TIMER:
+		if (pe->cur_state == PE_SRC_STARTUP) {
+			/*
+			 * Move to PE_SRC_WAIT_FOR_VBUS to check
+			 * VBUS before sending SrcCap.
+			 */
+			pe_change_state(pe, PE_SRC_WAIT_FOR_VBUS);
+		} else
+			log_warn("%s expired in wrong state=%d",
+				timer_to_str(type), pe->cur_state);
+		break;
+	case SWAP_RECOVERY_TIMER:
 	case VCONN_ON_TIMER:
 	case VDM_MODE_ENTRY_TIMER:
 	case VDM_MODE_EXIT_TIMER:
@@ -1716,9 +1726,17 @@ static void pe_process_state_pe_src_startup(struct policy_engine *pe)
 	pe_send_packet(pe, NULL, 0, PD_CMD_PROTOCOL_RESET,
 				PE_EVT_SEND_PROTOCOL_RESET);
 
-	/* TODO: start swap src start timer ( only after pw swap) */
-	/* Move to PE_SRC_WAIT_FOR_VBUS to check VBUS before sending SrcCap*/
-	pe_change_state(pe, PE_SRC_WAIT_FOR_VBUS);
+	/* Start swap src start timer ( only after pr swap) */
+	if (pe->prev_state == PE_PRS_SNK_SRC_SOURCE_ON) {
+		pe_start_timer(pe, SWAP_SOURCE_START_TIMER,
+					PE_TIME_SWAP_SOURCE_START);
+	} else {
+		/*
+		 * Move to PE_SRC_WAIT_FOR_VBUS to check
+		 * VBUS before sending SrcCap.
+		 */
+		pe_change_state(pe, PE_SRC_WAIT_FOR_VBUS);
+	}
 }
 
 static void pe_process_state_pe_src_discovery(struct policy_engine *pe)
-- 
1.9.1

