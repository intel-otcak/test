From 98b8283a02f39958d1a3cab736b90321a6d59b17 Mon Sep 17 00:00:00 2001
From: Nariman Poushin <nariman@opensource.wolfsonmicro.com>
Date: Mon, 17 Feb 2014 12:24:52 +0000
Subject: [PATCH 135/351] mfd: arizona: Only re-enable the irq in resume if it
 was disabled

Protect against failed suspension by making sure we only enable
the irq if we have disabled it.

Change-Id: If4e738bb83ff56f860c8718174624bea2198c0fb
Signed-off-by: Nariman Poushin <nariman@opensource.wolfsonmicro.com>
Signed-off-by: Nikesh Oswal <Nikesh.Oswal@wolfsonmicro.com>
---
 drivers/mfd/arizona-core.c       |    7 ++++++-
 include/linux/mfd/arizona/core.h |    1 +
 2 files changed, 7 insertions(+), 1 deletion(-)

diff --git a/drivers/mfd/arizona-core.c b/drivers/mfd/arizona-core.c
index f248826..bdc003c 100644
--- a/drivers/mfd/arizona-core.c
+++ b/drivers/mfd/arizona-core.c
@@ -581,6 +581,8 @@ static int arizona_resume_noirq(struct device *dev)
 	dev_dbg(arizona->dev, "Early resume, disabling IRQ\n");
 	disable_irq(arizona->irq);
 
+	arizona->irq_sem = 1;
+
 	return 0;
 }
 
@@ -589,7 +591,10 @@ static int arizona_resume(struct device *dev)
 	struct arizona *arizona = dev_get_drvdata(dev);
 
 	dev_dbg(arizona->dev, "Late resume, reenabling IRQ\n");
-	enable_irq(arizona->irq);
+	if (arizona->irq_sem) {
+		enable_irq(arizona->irq);
+		arizona->irq_sem = 0;
+	}
 
 	return 0;
 }
diff --git a/include/linux/mfd/arizona/core.h b/include/linux/mfd/arizona/core.h
index 07dd9f2..5d3d12b 100644
--- a/include/linux/mfd/arizona/core.h
+++ b/include/linux/mfd/arizona/core.h
@@ -100,6 +100,7 @@ struct arizona {
 
 	unsigned int external_dcvdd:1;
 
+	unsigned int irq_sem;
 	int irq;
 	struct irq_domain *virq;
 	struct regmap_irq_chip_data *aod_irq_chip;
-- 
1.7.9.5

