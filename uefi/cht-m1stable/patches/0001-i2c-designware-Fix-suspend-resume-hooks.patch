From 6395e5f4c721f4b3fca7a5ca7fd1b5eebaf6d2ee Mon Sep 17 00:00:00 2001
From: Samuel Ortiz <sameo@linux.intel.com>
Date: Mon, 8 Sep 2014 11:10:16 +0200
Subject: [PATCH 1/3] i2c: designware: Fix suspend/resume hooks

The suspend/resume hooks are NOP for shared hosts.
In that case the master clock is not disable for example.
This patch fixes that by trying to grab ownership when we're shared
and then doing the suspend/resume calls unconditionally.

Issue: IRDA-710
Change-Id: I66c17a44077cdecc49c08c757ccff907123c9f65
Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>
---
 drivers/i2c/busses/i2c-designware-platdrv.c | 30 ++++++++++++++++++++++-------
 1 file changed, 23 insertions(+), 7 deletions(-)

diff --git a/drivers/i2c/busses/i2c-designware-platdrv.c b/drivers/i2c/busses/i2c-designware-platdrv.c
index 2b32730..f4e456d 100644
--- a/drivers/i2c/busses/i2c-designware-platdrv.c
+++ b/drivers/i2c/busses/i2c-designware-platdrv.c
@@ -402,11 +402,19 @@ static int dw_i2c_suspend(struct device *dev)
 	struct platform_device *pdev = to_platform_device(dev);
 	struct dw_i2c_dev *i_dev = platform_get_drvdata(pdev);
 
-	if (!i_dev->shared_host) {
-		i2c_dw_disable(i_dev);
-		clk_disable_unprepare(i_dev->clk);
+	if (i_dev->shared_host && i_dev->acquire_ownership) {
+		if (i_dev->acquire_ownership() < 0) {
+			dev_WARN(i_dev->dev, "Couldn't acquire ownership\n");
+			return 0;
+		}
 	}
 
+	i2c_dw_disable(i_dev);
+	clk_disable_unprepare(i_dev->clk);
+
+	if (i_dev->shared_host && i_dev->release_ownership)
+		i_dev->release_ownership();
+
 	return 0;
 }
 
@@ -415,11 +423,19 @@ static int dw_i2c_resume(struct device *dev)
 	struct platform_device *pdev = to_platform_device(dev);
 	struct dw_i2c_dev *i_dev = platform_get_drvdata(pdev);
 
-
-	if (!i_dev->shared_host) {
-		clk_prepare_enable(i_dev->clk);
-		i2c_dw_init(i_dev);
+	if (i_dev->shared_host && i_dev->acquire_ownership) {
+		if (i_dev->acquire_ownership() < 0) {
+			dev_WARN(i_dev->dev, "Couldn't acquire ownership\n");
+			return 0;
+		}
 	}
+
+	clk_prepare_enable(i_dev->clk);
+	i2c_dw_init(i_dev);
+
+	if (i_dev->shared_host && i_dev->release_ownership)
+		i_dev->release_ownership();
+
 	return 0;
 }
 #endif
-- 
1.8.3.2

