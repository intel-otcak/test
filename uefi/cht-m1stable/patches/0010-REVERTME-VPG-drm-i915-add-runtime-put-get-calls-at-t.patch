From 51ac95e6eac7f6a63aafa1156004c3d87fe888d7 Mon Sep 17 00:00:00 2001
Message-Id: <51ac95e6eac7f6a63aafa1156004c3d87fe888d7.1427265330.git.chang-joon.lee@intel.com>
In-Reply-To: <b4c66aa6a04d2be0fca9fa4448c7188a581a57a5.1427265330.git.chang-joon.lee@intel.com>
References: <b4c66aa6a04d2be0fca9fa4448c7188a581a57a5.1427265330.git.chang-joon.lee@intel.com>
From: Deepak S <deepak.s@intel.com>
Date: Tue, 17 Mar 2015 13:00:17 +0530
Subject: [PATCH 10/22] REVERTME [VPG]: drm/i915: add runtime put/get calls at
 the basic places.

With aggressive(500ms) runtime PM enabled on cherryview machine, some of
functions/ioctl will complain that they're trying to read/write registers
while the graphics card is suspended.

REVERTME condition: This patch is incompatible with upstream code &
the current changes is based on local code.

Issue: GMINL-7106
Change-Id: If4d0c6aee662cba1eb75acc237ea7aee3ca09efb
Signed-off-by: Deepak S <deepak.s@intel.com>
---
 drivers/gpu/drm/i915/i915_gem_execbuffer.c |    4 ++++
 drivers/gpu/drm/i915/intel_display.c       |    4 ++++
 drivers/gpu/drm/i915/intel_pm.c            |    4 ++++
 3 files changed, 12 insertions(+)

diff --git a/drivers/gpu/drm/i915/i915_gem_execbuffer.c b/drivers/gpu/drm/i915/i915_gem_execbuffer.c
index 53b6285..0eb25f0 100644
--- a/drivers/gpu/drm/i915/i915_gem_execbuffer.c
+++ b/drivers/gpu/drm/i915/i915_gem_execbuffer.c
@@ -1513,6 +1513,8 @@ i915_gem_do_execbuffer(struct drm_device *dev, void *data,
 		return -EINVAL;
 	}
 
+	intel_runtime_pm_get(dev_priv);
+
 	ret = i915_mutex_lock_interruptible(dev);
 	if (ret)
 		goto pre_mutex_err;
@@ -1745,6 +1747,7 @@ i915_gem_do_execbuffer(struct drm_device *dev, void *data,
 	 */
 	mutex_unlock(&dev->struct_mutex);
 
+	intel_runtime_pm_put(dev_priv);
 	return ret;
 
 err:
@@ -1785,6 +1788,7 @@ pre_mutex_err:
 		args->rsvd2 = (__u64) -1;
 
 	dev_priv->scheduler->stats[ring->id].exec_early++;
+	intel_runtime_pm_put(dev_priv);
 
 	return ret;
 }
diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index b4a0fdd..10fc391 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -11104,6 +11104,8 @@ static int intel_crtc_set_display(struct drm_crtc *crtc,
 	}
 	dev_priv->atomic_update = true;
 
+	intel_runtime_pm_get(dev_priv);
+
 	/* FIXME - Sometime unpin work is not yet cleared */
 	if (intel_crtc->unpin_work)
 		intel_crtc_wait_for_pending_flips(crtc);
@@ -11178,6 +11180,8 @@ static int intel_crtc_set_display(struct drm_crtc *crtc,
 	/* Enable maxfifo if needed */
 	intel_update_maxfifo(dev_priv, intel_crtc->pipe, plane_cnt);
 	dev_priv->atomic_update = false;
+
+	intel_runtime_pm_put(dev_priv);
 	return ret;
 }
 
diff --git a/drivers/gpu/drm/i915/intel_pm.c b/drivers/gpu/drm/i915/intel_pm.c
index 79dc033..a4cfedf 100644
--- a/drivers/gpu/drm/i915/intel_pm.c
+++ b/drivers/gpu/drm/i915/intel_pm.c
@@ -3931,6 +3931,8 @@ static void valleyview_disable_rps(struct drm_device *dev)
 void vlv_modify_rc6_promotion_timer(struct drm_i915_private *dev_priv,
 				    bool media_active)
 {
+	intel_runtime_pm_get(dev_priv);
+
 	/* Update RC6 promotion timers */
 	if (media_active)
 		I915_WRITE(GEN6_RC6_THRESHOLD,
@@ -3943,6 +3945,8 @@ void vlv_modify_rc6_promotion_timer(struct drm_i915_private *dev_priv,
 			I915_WRITE(GEN6_RC6_THRESHOLD,
 					GEN6_RC6_RENDER_PROMOTION_TIMER_TO);
 	}
+
+	intel_runtime_pm_put(dev_priv);
 }
 
 static void vlv_media_timeout_work_func(struct work_struct *work)
-- 
1.7.9.5

