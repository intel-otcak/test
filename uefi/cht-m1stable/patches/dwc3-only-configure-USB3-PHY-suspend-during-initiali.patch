From a10adca9c9a0c445cfa4c1caf8ed75689ef3172e Mon Sep 17 00:00:00 2001
From: "Wu, Hao" <hao.wu@intel.com>
Date: Thu, 7 May 2015 17:58:26 +0800
Subject: [PATCH] dwc3: only configure USB3 PHY suspend during initialization

No need to set and clear USB3 PHY suspend_en bit during suspend
and resume process. Only need to be programed once in dwc3
initialization. Keep suspend_en bit to 1 even dwc3 is in D0,
which allow low power on PIPE, and also fix the mux switching
problem. Mux switching from host to device mode requires PIPE
to be in P3 state.

Change-Id: I1fb0de684d00ad7f1ece48d39b96acb655ef6b5e
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-35534
Signed-off-by: Wu, Hao <hao.wu@intel.com>
---
 drivers/usb/dwc3/core.c | 29 ++++++++++++++++++-----------
 1 file changed, 18 insertions(+), 11 deletions(-)

diff --git a/drivers/usb/dwc3/core.c b/drivers/usb/dwc3/core.c
index 15b3e418e28c..59e7612271e9 100644
--- a/drivers/usb/dwc3/core.c
+++ b/drivers/usb/dwc3/core.c
@@ -471,6 +471,19 @@ static void dwc3_cache_hwparams(struct dwc3 *dwc)
 	parms->hwparams8 = dwc3_readl(dwc->regs, DWC3_GHWPARAMS8);
 }
 
+static void dwc3_suspend_usb3_phy(struct dwc3 *dwc, bool suspend)
+{
+	u32 data = 0;
+
+	data = dwc3_readl(dwc->regs, GUSB3PIPECTL0);
+	if (suspend)
+		data |= GUSB3PIPECTL_SUS_EN;
+	else
+		data &= ~GUSB3PIPECTL_SUS_EN;
+
+	dwc3_writel(dwc->regs, GUSB3PIPECTL0, data);
+}
+
 /**
  * dwc3_core_init - Low-level initialization of DWC3 Core
  * @dwc: Pointer to our controller context structure
@@ -536,6 +549,8 @@ static int dwc3_core_init(struct dwc3 *dwc)
 
 	dwc3_writel(dwc->regs, DWC3_GCTL, reg);
 
+	dwc3_suspend_usb3_phy(dwc, true);
+
 	return 0;
 
 err0:
@@ -548,7 +563,7 @@ static void dwc3_core_exit(struct dwc3 *dwc)
 	usb_phy_shutdown(dwc->usb3_phy);
 }
 
-static void dwc3_suspend_phy(struct dwc3 *dwc, bool suspend)
+static void dwc3_suspend_usb2_phy(struct dwc3 *dwc, bool suspend)
 {
 	u32 data = 0;
 
@@ -559,14 +574,6 @@ static void dwc3_suspend_phy(struct dwc3 *dwc, bool suspend)
 		data &= ~GUSB2PHYCFG_SUS_PHY;
 
 	dwc3_writel(dwc->regs, GUSB2PHYCFG0, data);
-
-	data = dwc3_readl(dwc->regs, GUSB3PIPECTL0);
-	if (suspend)
-		data |= GUSB3PIPECTL_SUS_EN;
-	else
-		data &= ~GUSB3PIPECTL_SUS_EN;
-
-	dwc3_writel(dwc->regs, GUSB3PIPECTL0, data);
 }
 
 /*
@@ -968,7 +975,7 @@ static int dwc3_suspend_common(struct device *dev)
 
 	dwc->gctl = dwc3_readl(dwc->regs, DWC3_GCTL);
 
-	dwc3_suspend_phy(dwc, true);
+	dwc3_suspend_usb2_phy(dwc, true);
 
 	dwc->dpm_pulled_down = 0;
 
@@ -1012,7 +1019,7 @@ static int dwc3_resume_common(struct device *dev)
 		udelay(500);
 	}
 
-	dwc3_suspend_phy(dwc, false);
+	dwc3_suspend_usb2_phy(dwc, false);
 
 	dwc3_writel(dwc->regs, DWC3_GCTL, dwc->gctl);
 
-- 
1.9.1

