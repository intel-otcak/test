From bcad2e113c1a20698eb0557cca0eb0516f115846 Mon Sep 17 00:00:00 2001
From: Jenny TC <jenny.tc@intel.com>
Date: Tue, 9 Dec 2014 14:55:45 +0530
Subject: [PATCH 2/2] bq24192: Enable raw current throttling for bq24192

Enable raw current throttling for BQ24192. For this
the driver enables the set_property for CHARGE_CONTROL_LIMIT_MAX
and limit the CHARGE_CONTROL_LIMIT to CHARGE_CONTROL_LIMIT

Change-Id: Ia05b209ed180ed23fe62edf120610c6624c9c33d
Signed-off-by: Jenny TC <jenny.tc@intel.com>
---
 drivers/power/bq24192_charger.c | 29 +++++++++++++++++++++++++----
 1 file changed, 25 insertions(+), 4 deletions(-)

diff --git a/drivers/power/bq24192_charger.c b/drivers/power/bq24192_charger.c
index 4f831c6..34d2968 100644
--- a/drivers/power/bq24192_charger.c
+++ b/drivers/power/bq24192_charger.c
@@ -262,6 +262,7 @@ struct bq24192_chip {
 	int batt_status;
 	int bat_health;
 	int cntl_state;
+	int cntl_state_max;
 	int irq;
 	bool is_charger_enabled;
 	bool is_charging_enabled;
@@ -1254,6 +1255,7 @@ static inline int bq24192_enable_charger(
 {
 	int ret = 0;
 
+#ifndef CONFIG_RAW_CC_THROTTLE
 	/*stop charger for throttle state 3, by putting it in HiZ mode*/
 	if (chip->cntl_state == 0x3) {
 		ret = bq24192_reg_read_modify(chip->client,
@@ -1266,6 +1268,13 @@ static inline int bq24192_enable_charger(
 		else
 			ret = bq24192_enable_charging(chip, val);
 	}
+#else
+	if (val)
+		ret = bq24192_reg_read_modify(chip->client,
+			BQ24192_INPUT_SRC_CNTL_REG,
+				INPUT_SRC_CNTL_EN_HIZ, false);
+#endif
+
 
 	dev_warn(&chip->client->dev, "%s:%d %d\n", __func__, __LINE__, val);
 
@@ -1446,8 +1455,14 @@ static int bq24192_usb_set_property(struct power_supply *psy,
 	case POWER_SUPPLY_PROP_MIN_TEMP:
 		chip->min_temp = val->intval;
 		break;
+	case POWER_SUPPLY_PROP_CHARGE_CONTROL_LIMIT_MAX:
+		chip->cntl_state_max = val->intval;
+		break;
 	case POWER_SUPPLY_PROP_CHARGE_CONTROL_LIMIT:
-		chip->cntl_state = val->intval;
+		if (val->intval < chip->cntl_state_max)
+			chip->cntl_state = val->intval;
+		else
+			ret = -EINVAL;
 		break;
 	default:
 		ret = -ENODATA;
@@ -1512,12 +1527,12 @@ static int bq24192_usb_get_property(struct power_supply *psy,
 		val->intval = (bq24192_get_charger_health() ==
 				POWER_SUPPLY_HEALTH_GOOD);
 		break;
+	case POWER_SUPPLY_PROP_CHARGE_CONTROL_LIMIT_MAX:
+		val->intval = chip->cntl_state_max;
+		break;
 	case POWER_SUPPLY_PROP_CHARGE_CONTROL_LIMIT:
 		val->intval = chip->cntl_state;
 		break;
-	case POWER_SUPPLY_PROP_CHARGE_CONTROL_LIMIT_MAX:
-		val->intval = chip->pdata->num_throttle_states;
-		break;
 	case POWER_SUPPLY_PROP_MAX_TEMP:
 		val->intval = chip->max_temp;
 		break;
@@ -1680,12 +1695,18 @@ static void bq24192_task_worker(struct work_struct *work)
 		goto sched_task_work;
 	}
 
+#ifndef CONFIG_RAW_CC_THROTTLE
 	if (!(chip->cntl_state == 0x3)) {
 		/* Clear the charger from Hi-Z */
 		ret = bq24192_clear_hiz(chip);
 		if (ret < 0)
 			dev_warn(&chip->client->dev, "HiZ clear failed:\n");
 	}
+#else
+	ret = bq24192_clear_hiz(chip);
+	if (ret < 0)
+		dev_warn(&chip->client->dev, "HiZ clear failed:\n");
+#endif
 
 	/* Modify the VINDPM */
 
-- 
1.9.1

