From 15e093861fbb296257031a3cff065317c0268ea6 Mon Sep 17 00:00:00 2001
From: dcashman <dcashman@google.com>
Date: Tue, 29 Dec 2015 15:28:13 -0800
Subject: [PATCH 665/687] BACKPORT: FROMLIST: arm64: mm: support
 ARCH_MMAP_RND_BITS.

(cherry picked from commit https://lkml.org/lkml/2015/12/21/340)

arm64: arch_mmap_rnd() uses STACK_RND_MASK to generate the
random offset for the mmap base address.  This value represents a
compromise between increased ASLR effectiveness and avoiding
address-space fragmentation. Replace it with a Kconfig option, which
is sensibly bounded, so that platform developers may choose where to
place this compromise. Keep default values as new minimums.

Bug: 24047224
Signed-off-by: Daniel Cashman <dcashman@android.com>
Signed-off-by: Daniel Cashman <dcashman@google.com>
Change-Id: Ib4d087c73a9e78bb998b9fbd79cc3c0fa8916762
---
 arch/arm64/Kconfig   |   21 +++++++++++++++++++++
 arch/arm64/mm/mmap.c |   11 ++++++++---
 2 files changed, 29 insertions(+), 3 deletions(-)

Index: b/arch/arm64/Kconfig
===================================================================
--- a/arch/arm64/Kconfig	2016-01-19 12:04:18.424010053 -0800
+++ b/arch/arm64/Kconfig	2016-01-19 12:04:28.088084918 -0800
@@ -30,6 +30,8 @@
 	select HARDIRQS_SW_RESEND
 	select HAVE_ARCH_AUDITSYSCALL
 	select HAVE_ARCH_JUMP_LABEL
+	select HAVE_ARCH_MMAP_RND_BITS
+	select HAVE_ARCH_MMAP_RND_COMPAT_BITS if COMPAT
 	select HAVE_ARCH_SECCOMP_FILTER
 	select HAVE_ARCH_TRACEHOOK
 	select HAVE_DEBUG_BUGVERBOSE
@@ -69,6 +71,25 @@
 config NO_IOPORT
 	def_bool y
 
+config ARCH_MMAP_RND_BITS_MIN
+       default 14 if ARM64_64K_PAGES
+       default 18
+
+# max bits determined by the following formula:
+#  VA_BITS - PAGE_SHIFT - 3
+#  VA_BITS depends on 64K_PAGES, either
+#  42 if 64K_PAGES or 39 otherwise
+config ARCH_MMAP_RND_BITS_MAX
+       default 23 if ARM64_64K_PAGES
+       default 24
+
+config ARCH_MMAP_RND_COMPAT_BITS_MIN
+       default 7 if ARM64_64K_PAGES
+       default 11
+
+config ARCH_MMAP_RND_COMPAT_BITS_MAX
+       default 16
+
 config ILLEGAL_POINTER_VALUE
 	hex
 	default 0xdead000000000000
Index: b/arch/arm64/mm/mmap.c
===================================================================
--- a/arch/arm64/mm/mmap.c	2016-01-19 12:04:28.088084918 -0800
+++ b/arch/arm64/mm/mmap.c	2016-01-19 12:05:18.364530162 -0800
@@ -51,9 +51,14 @@
 {
 	unsigned long rnd = 0;
 
-	if (current->flags & PF_RANDOMIZE)
-		rnd = (long)get_random_int() & STACK_RND_MASK;
-
+	if (current->flags & PF_RANDOMIZE) {
+#ifdef CONFIG_COMPAT
+		if (test_thread_flag(TIF_32BIT))
+			rnd = (unsigned long)get_random_int() & ((1 << mmap_rnd_compat_bits) - 1);
+		else
+#endif
+			rnd = (unsigned long)get_random_int() & ((1 << mmap_rnd_bits) - 1);
+	}
 	return rnd << PAGE_SHIFT;
 }
 
