From 1d0db049400d0927399ce6c35e76ae00bf4e0a44 Mon Sep 17 00:00:00 2001
From: Wei Tao <wei.tao@intel.com>
Date: Tue, 17 Mar 2015 04:09:04 +0000
Subject: [PATCH 299/307] Revert "atomisp2: css2401 and
 2401_legacy-irci_master_20150311_1503"

This reverts commit dc5516a51f22bf8f6676c85f2cfa842beb47914c.

Change-Id: Ic853915385adc7e1d452675d6f17c0b1dc20c1f3
Reviewed-on: https://icggerrit.ir.intel.com/46580
Build: Wei Tao <wei.tao@intel.com>
Reviewed-by: Wei Tao <wei.tao@intel.com>
Integrator: Wei Tao <wei.tao@intel.com>
Maintainer: Wei Tao <wei.tao@intel.com>
Validation-Android: Wei Tao <wei.tao@intel.com>
---
 .../camera/pipe/interface/ia_css_pipe_binarydesc.h |  11 -
 .../camera/pipe/src/pipe_binarydesc.c              |   2 +-
 .../css2401a0_legacy_v21/css_api_version.h         |   7 +-
 .../pci/atomisp2/css2401a0_legacy_v21/ia_css.h     |   4 +-
 .../css2401a0_legacy_v21/ia_css_acc_types.h        |   9 -
 .../css2401a0_legacy_v21/ia_css_host_data.h        |   4 +-
 .../atomisp2/css2401a0_legacy_v21/ia_css_types.h   |   4 +-
 .../css2401a0_legacy_v21/ia_css_version_data.h     |   2 +-
 .../isp/kernels/hdr/ia_css_hdr.host.c              |   4 +-
 .../isp/kernels/hdr/ia_css_hdr.host.h              |   4 +-
 .../isp/kernels/hdr/ia_css_hdr_param.h             |   4 +-
 .../isp/kernels/hdr/ia_css_hdr_types.h             |   4 +-
 .../isp/kernels/xnr/xnr_3.0/ia_css_xnr3.host.c     |  23 +-
 .../runtime/binary/src/binary.c                    |   2 +-
 .../runtime/spctrl/interface/ia_css_spctrl.h       |   2 -
 .../runtime/spctrl/src/spctrl.c                    |   5 -
 .../pci/atomisp2/css2401a0_legacy_v21/sh_css.c     | 100 -----
 .../css2401a0_legacy_v21/sh_css_firmware.c         |  50 +--
 .../css2401a0_legacy_v21/sh_css_firmware.h         |   3 -
 .../css2401a0_legacy_v21/sh_css_internal.h         |  13 +-
 .../atomisp2/css2401a0_legacy_v21/sh_css_params.c  | 136 +-----
 .../pci/atomisp2/css2401a0_legacy_v21/spmem_dump.c | 482 ++++++++++-----------
 .../camera/pipe/interface/ia_css_pipe_binarydesc.h |  11 -
 .../camera/pipe/src/pipe_binarydesc.c              |   2 +-
 .../pci/atomisp2/css2401a0_v21/css_api_version.h   |   7 +-
 .../media/pci/atomisp2/css2401a0_v21/ia_css.h      |   4 +-
 .../pci/atomisp2/css2401a0_v21/ia_css_acc_types.h  |   9 -
 .../pci/atomisp2/css2401a0_v21/ia_css_host_data.h  |   4 +-
 .../pci/atomisp2/css2401a0_v21/ia_css_types.h      |   4 +-
 .../atomisp2/css2401a0_v21/ia_css_version_data.h   |   2 +-
 .../isp/kernels/hdr/ia_css_hdr.host.c              |   4 +-
 .../isp/kernels/hdr/ia_css_hdr.host.h              |   4 +-
 .../isp/kernels/hdr/ia_css_hdr_param.h             |   4 +-
 .../isp/kernels/hdr/ia_css_hdr_types.h             |   4 +-
 .../isp/kernels/xnr/xnr_3.0/ia_css_xnr3.host.c     |  23 +-
 .../css2401a0_v21/runtime/binary/src/binary.c      |   2 +-
 .../runtime/spctrl/interface/ia_css_spctrl.h       |   2 -
 .../css2401a0_v21/runtime/spctrl/src/spctrl.c      |   5 -
 .../media/pci/atomisp2/css2401a0_v21/sh_css.c      | 100 -----
 .../pci/atomisp2/css2401a0_v21/sh_css_firmware.c   |  50 +--
 .../pci/atomisp2/css2401a0_v21/sh_css_firmware.h   |   3 -
 .../pci/atomisp2/css2401a0_v21/sh_css_internal.h   |  13 +-
 .../pci/atomisp2/css2401a0_v21/sh_css_params.c     | 136 +-----
 .../media/pci/atomisp2/css2401a0_v21/spmem_dump.c  | 438 +++++++++----------
 44 files changed, 578 insertions(+), 1128 deletions(-)

diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/camera/pipe/interface/ia_css_pipe_binarydesc.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/camera/pipe/interface/ia_css_pipe_binarydesc.h
index 616789d9..b5b0e60 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/camera/pipe/interface/ia_css_pipe_binarydesc.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/camera/pipe/interface/ia_css_pipe_binarydesc.h
@@ -282,16 +282,5 @@ extern void ia_css_pipe_get_ldc_binarydesc(
 	struct ia_css_frame_info *in_info,
 	struct ia_css_frame_info *out_info);
 
-/** @brief Calculates the required BDS factor
- *
- * @param[in] input_res
- * @param[in] output_res
- * @param[in/out] bds_factor
- * @return	IA_CSS_SUCCESS or error code upon error.
- */
-enum ia_css_err binarydesc_calculate_bds_factor(
-	struct ia_css_resolution input_res,
-	struct ia_css_resolution output_res,
-	unsigned int *bds_factor);
 
 #endif /* __IA_CSS_PIPE_BINARYDESC_H__ */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/camera/pipe/src/pipe_binarydesc.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/camera/pipe/src/pipe_binarydesc.c
index 23867ef..79996e2 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/camera/pipe/src/pipe_binarydesc.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/camera/pipe/src/pipe_binarydesc.c
@@ -160,7 +160,7 @@ enum ia_css_err sh_css_bds_factor_get_numerator_denominator(
 	return IA_CSS_ERR_INVALID_ARGUMENTS;
 }
 
-enum ia_css_err binarydesc_calculate_bds_factor(
+static enum ia_css_err binarydesc_calculate_bds_factor(
 	struct ia_css_resolution input_res,
 	struct ia_css_resolution output_res,
 	unsigned int *bds_factor)
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/css_api_version.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/css_api_version.h
index 8c90164..ffa91d0 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/css_api_version.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/css_api_version.h
@@ -35,7 +35,7 @@ The version string has four dot-separated numbers, read left to right:
 
 */
 
-#define CSS_API_VERSION_STRING	"2.1.14.20"
+#define CSS_API_VERSION_STRING	"2.1.14.19"
 
 /*
 Change log
@@ -317,10 +317,7 @@ v2.1.14.17 (21 changes parallel), eliminate two_pixels_per_clock field
 v2.1.14.18 (2 changes parallel), Fix copyright headers (no functional change)
 - No functional change; only fixes copyright headers
 
-v2.1.14.20 (1 changes parallel), Return an error when both DPC and BDS are enabled in a pipe config
-- Return an error when both DPC and BDS are enabled in a pipe config
-
-v2.1.14.20 (2 changes parallel), ia_css_skc_dvs_statistics field size change
+v2.1.14.19 (1 changes parallel), ia_css_skc_dvs_statistics field size change
 - ia_css_skc_dvs_statistics field size change
 
 */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css.h
index 5eb0c8b..d90c945 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150311_1503 */
-/* Release Version: irci_master_20150311_1503 */
+/* Release Version: irci_master_20150308_0200 */
+/* Release Version: irci_master_20150308_0200 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_acc_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_acc_types.h
index 075c9cf..1da741b 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_acc_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_acc_types.h
@@ -49,15 +49,6 @@ enum ia_css_acc_type {
 	IA_CSS_ACC_STANDALONE,	/**< Stand-alone acceleration */
 };
 
-/** Cells types
- */
-enum ia_css_cell_type {
-	IA_CSS_SP0 = 0,
-	IA_CSS_SP1,
-	IA_CSS_ISP,
-	MAX_NUM_OF_CELLS
-};
-
 /** Firmware types.
  */
 enum ia_css_fw_type {
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_host_data.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_host_data.h
index bb04670..f3f10cd 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_host_data.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_host_data.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150311_1503 */
-/* Release Version: irci_master_20150311_1503 */
+/* Release Version: irci_master_20150308_0200 */
+/* Release Version: irci_master_20150308_0200 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_types.h
index 27262f0..4171dd1 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_types.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150311_1503 */
-/* Release Version: irci_master_20150311_1503 */
+/* Release Version: irci_master_20150308_0200 */
+/* Release Version: irci_master_20150308_0200 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_version_data.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_version_data.h
index 1b2bffd7..f802943 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_version_data.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_version_data.h
@@ -22,7 +22,7 @@
 #define __IA_CSS_VERSION_DATA_H
 
 
-#define CSS_VERSION_STRING "REL:20150311_11.3_1616; API:2.1.14.20; GIT:scci_20150310_2052_#3450aeadf65d330764f7626eb9d1723c19957ba9; SDK:/nfs/iir/disks/iir_hivepackages_003/iir_hivepkgs_disk017/Css_Mizuchi/packages/Css_Mizuchi/int_css_mizuchi_20140829_1053; USER:viedifw; "
+#define CSS_VERSION_STRING "REL:20150308_10.0_0241; API:2.1.14.19; GIT:irci_20150307_1500__d198ce#d198ce8e3432d9392d0f5d53552b33572a0d37ec; SDK:/nfs/iir/disks/iir_hivepackages_003/iir_hivepkgs_disk017/Css_Mizuchi/packages/Css_Mizuchi/int_css_mizuchi_20140829_1053; USER:viedifw; "
 
 
 #endif
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr.host.c
index e4fc135..4b2aec4 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr.host.c
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150311_1503 */
-/* Release Version: irci_master_20150311_1503 */
+/* Release Version: irci_master_20150308_0200 */
+/* Release Version: irci_master_20150308_0200 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr.host.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr.host.h
index 3312505..16d6a62 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr.host.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr.host.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150311_1503 */
-/* Release Version: irci_master_20150311_1503 */
+/* Release Version: irci_master_20150308_0200 */
+/* Release Version: irci_master_20150308_0200 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr_param.h
index 83c6c17..33a10c1 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr_param.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150311_1503 */
-/* Release Version: irci_master_20150311_1503 */
+/* Release Version: irci_master_20150308_0200 */
+/* Release Version: irci_master_20150308_0200 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr_types.h
index cfdeddb..0c9a676 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr_types.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150311_1503 */
-/* Release Version: irci_master_20150311_1503 */
+/* Release Version: irci_master_20150308_0200 */
+/* Release Version: irci_master_20150308_0200 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnr_3.0/ia_css_xnr3.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnr_3.0/ia_css_xnr3.host.c
index a783abb..bdbf4e5 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnr_3.0/ia_css_xnr3.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnr_3.0/ia_css_xnr3.host.c
@@ -85,15 +85,13 @@ compute_alpha(int sigma)
 static int32_t
 compute_coring(int coring)
 {
-	int32_t isp_coring;
 	int32_t isp_scale = XNR_CORING_SCALE_FACTOR;
 	int32_t host_scale = IA_CSS_XNR3_CORING_SCALE;
 	int32_t offset = host_scale / 2; /* fixed-point 0.5 */
 
 	/* Convert from public host-side scale factor to isp-side scale
-	 * factor. Clip to [0, isp_scale-1). */
-	isp_coring = ((coring * isp_scale) + offset) / host_scale;
-	return min(max(isp_coring, 0), isp_scale - 1);
+	 * factor. */
+	return ((coring * isp_scale) + offset) / host_scale;
 }
 
 /*
@@ -126,8 +124,6 @@ ia_css_xnr3_encode(
 	/* The adjust factor is the next power of 2
 	   w.r.t. the kernel size*/
 	int adjust_factor = ceil_pow2(kernel_size);
-	int32_t max_diff = (1 << (ISP_VEC_ELEMBITS - 1)) - 1;
-	int32_t min_diff = -(1 << (ISP_VEC_ELEMBITS - 1));
 
 	int32_t alpha_y0 = compute_alpha(from->sigma.y0);
 	int32_t alpha_y1 = compute_alpha(from->sigma.y1);
@@ -135,16 +131,11 @@ ia_css_xnr3_encode(
 	int32_t alpha_u1 = compute_alpha(from->sigma.u1);
 	int32_t alpha_v0 = compute_alpha(from->sigma.v0);
 	int32_t alpha_v1 = compute_alpha(from->sigma.v1);
-	int32_t alpha_ydiff = (alpha_y1 - alpha_y0) * adjust_factor / kernel_size;
-	int32_t alpha_udiff = (alpha_u1 - alpha_u0) * adjust_factor / kernel_size;
-	int32_t alpha_vdiff = (alpha_v1 - alpha_v0) * adjust_factor / kernel_size;
 
 	int32_t coring_u0 = compute_coring(from->coring.u0);
 	int32_t coring_u1 = compute_coring(from->coring.u1);
 	int32_t coring_v0 = compute_coring(from->coring.v0);
 	int32_t coring_v1 = compute_coring(from->coring.v1);
-	int32_t coring_udiff = (coring_u1 - coring_u0) * adjust_factor / kernel_size;
-	int32_t coring_vdiff = (coring_v1 - coring_v0) * adjust_factor / kernel_size;
 
 	int32_t blending = compute_blending(from->blending.strength);
 
@@ -154,15 +145,15 @@ ia_css_xnr3_encode(
 	to->alpha.y0 = alpha_y0;
 	to->alpha.u0 = alpha_u0;
 	to->alpha.v0 = alpha_v0;
-	to->alpha.ydiff = min(max(alpha_ydiff, min_diff), max_diff);
-	to->alpha.udiff = min(max(alpha_udiff, min_diff), max_diff);
-	to->alpha.vdiff = min(max(alpha_vdiff, min_diff), max_diff);
+	to->alpha.ydiff = (alpha_y1 - alpha_y0) * adjust_factor / kernel_size;
+	to->alpha.udiff = (alpha_u1 - alpha_u0) * adjust_factor / kernel_size;
+	to->alpha.vdiff = (alpha_v1 - alpha_v0) * adjust_factor / kernel_size;
 
 	/* coring parameters are expressed in q1.NN format */
 	to->coring.u0 = coring_u0;
 	to->coring.v0 = coring_v0;
-	to->coring.udiff = min(max(coring_udiff, min_diff), max_diff);
-	to->coring.vdiff = min(max(coring_vdiff, min_diff), max_diff);
+	to->coring.udiff = (coring_u1 - coring_u0) * adjust_factor / kernel_size;
+	to->coring.vdiff = (coring_v1 - coring_v0) * adjust_factor / kernel_size;
 
 	/* blending strength is expressed in q1.NN format */
 	to->blending.strength = blending;
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/runtime/binary/src/binary.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/runtime/binary/src/binary.c
index a7e4b5a..48fa021 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/runtime/binary/src/binary.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/runtime/binary/src/binary.c
@@ -531,7 +531,7 @@ enum ia_css_err
 ia_css_binary_init_infos(void)
 {
 	unsigned int i;
-	unsigned int num_of_isp_binaries = sh_css_num_binaries - NUM_OF_SPS - NUM_OF_BLS;
+	unsigned int num_of_isp_binaries = sh_css_num_binaries - NUM_OF_SPS;
 
 	if (num_of_isp_binaries == 0)
 		return IA_CSS_SUCCESS;
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/runtime/spctrl/interface/ia_css_spctrl.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/runtime/spctrl/interface/ia_css_spctrl.h
index 9feba44..bb4d157 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/runtime/spctrl/interface/ia_css_spctrl.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/runtime/spctrl/interface/ia_css_spctrl.h
@@ -34,8 +34,6 @@ typedef struct {
 	char      *program_name;    /**< not used on hardware, only for simulation */
 } ia_css_spctrl_cfg;
 
-/* Get the code addr in DDR of SP */
-hrt_vaddress get_sp_code_addr(sp_ID_t  sp_id);
 
 /* ! Load firmware on to specfied SP
 */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/runtime/spctrl/src/spctrl.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/runtime/spctrl/src/spctrl.c
index d4eec0b..8718361 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/runtime/spctrl/src/spctrl.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/runtime/spctrl/src/spctrl.c
@@ -123,11 +123,6 @@ enum ia_css_err ia_css_spctrl_load_fw(sp_ID_t sp_id,
 	return IA_CSS_SUCCESS;
 }
 
-hrt_vaddress get_sp_code_addr(sp_ID_t  sp_id)
-{
-	return spctrl_cofig_info[sp_id].code_addr;
-}
-
 enum ia_css_err ia_css_spctrl_unload_fw(sp_ID_t sp_id)
 {
 	if ((sp_id >= N_SP_ID) || ((sp_id < N_SP_ID) && (!spctrl_loaded[sp_id])))
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css.c
index 8e271cb..fd6474d 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css.c
@@ -96,9 +96,6 @@ static int thread_alive;
 
 #include "isp/modes/interface/input_buf.isp.h"
 
-#if defined(HAS_BL)
-#include "support/bootloader/interface/ia_css_blctrl.h"
-#endif
 #if defined(HAS_RES_MGR)
 #include "components/acc_cluster/gen/host/acc_cluster.host.h"
 #endif
@@ -112,9 +109,6 @@ static int thread_alive;
 #if defined(HAS_SEC_SP)
 #define SP1_PROG_NAME "sp1"
 #endif /* HAS_SEC_SP */
-#if defined(HAS_BL)
-#define BL_PROG_NAME "bootloader"
-#endif
 /* Size of Refcount List */
 #define REFCOUNT_SIZE 1000
 
@@ -1469,34 +1463,6 @@ enable_interrupts(enum ia_css_irq_type irq_type)
 	IA_CSS_LEAVE_PRIVATE("");
 }
 
-#if defined(HAS_BL)
-static bool sh_css_setup_blctrl_config(const struct ia_css_fw_info *fw,
-							const char *program,
-							ia_css_blctrl_cfg  *blctrl_cfg)
-{
-	if((fw == NULL)||(blctrl_cfg == NULL))
-		return false;
-	blctrl_cfg->bl_entry = 0;
-	blctrl_cfg->program_name = (char *)(program);
-
-#if !defined(C_RUN) && !defined(HRT_UNSCHED)
-	blctrl_cfg->ddr_data_offset =  fw->blob.data_source;
-	blctrl_cfg->dmem_data_addr = fw->blob.data_target;
-	blctrl_cfg->dmem_bss_addr = fw->blob.bss_target;
-	blctrl_cfg->data_size = fw->blob.data_size ;
-	blctrl_cfg->bss_size = fw->blob.bss_size;
-
-	blctrl_cfg->blctrl_state_dmem_addr = fw->info.bl.sw_state;
-	blctrl_cfg->blctrl_dma_cmd_list = fw->info.bl.dma_cmd_list;
-	blctrl_cfg->blctrl_nr_of_dma_cmds = fw->info.bl.num_dma_cmds;
-
-	blctrl_cfg->code_size = fw->blob.size;
-	blctrl_cfg->code      = fw->blob.code;
-	blctrl_cfg->bl_entry  = fw->info.bl.bl_entry; /* entry function ptr on Bootloader */
-#endif
-	return true;
-}
-#endif
 static bool sh_css_setup_spctrl_config(const struct ia_css_fw_info *fw,
 							const char * program,
 							ia_css_spctrl_cfg  *spctrl_cfg)
@@ -1615,9 +1581,6 @@ ia_css_init(const struct ia_css_env *env,
 {
 	enum ia_css_err err;
 	ia_css_spctrl_cfg spctrl_cfg;
-#if defined(HAS_BL)
-	ia_css_blctrl_cfg blctrl_cfg;
-#endif
 #if defined(HAS_SEC_SP)
 	ia_css_spctrl_cfg sp1ctrl_cfg;
 #endif /* HAS_SEC_SP */
@@ -1784,24 +1747,6 @@ ia_css_init(const struct ia_css_env *env,
 	}
 #endif /* HAS_SEC_SP */
 
-#if defined(HAS_BL)
-	if (!sh_css_setup_blctrl_config(&sh_css_bl_fw, BL_PROG_NAME, &blctrl_cfg))
-		return IA_CSS_ERR_INTERNAL_ERROR;
-	err = ia_css_blctrl_load_fw(&blctrl_cfg);
-	if (err != IA_CSS_SUCCESS) {
-		IA_CSS_LEAVE_ERR(err);
-		return err;
-	}
-#if defined(HAS_SEC_SP)
-	err = ia_css_blctrl_add_target_fw_info(&sh_css_sp1_fw, IA_CSS_SP1,
-					 get_sp_code_addr(SP1_ID));
-#endif
-	if (err != IA_CSS_SUCCESS) {
-		IA_CSS_LEAVE_ERR(err);
-		return err;
-	}
-#endif /* HAS_BL */
-
 #if defined(HRT_CSIM)
 	/**
 	 * In compiled simulator context include debug support by default.
@@ -2594,9 +2539,6 @@ ia_css_uninit(void)
 	sh_css_sp1_set_sp1_running(false);
 #endif /* HAS_SEC_SP */
 
-#if defined(HAS_BL)
-	ia_css_blctrl_unload_fw();
-#endif
 #if defined(USE_INPUT_SYSTEM_VERSION_2) || defined(USE_INPUT_SYSTEM_VERSION_2401)
 	/* check and free any remaining mipi frames */
 	free_mipi_frames(NULL);
@@ -9891,39 +9833,6 @@ ia_css_pipe_get_isp_pipe_version(const struct ia_css_pipe *pipe)
 	return (unsigned int)pipe->config.isp_pipe_version;
 }
 
-#if defined(HAS_BL)
-#define BL_START_TIMEOUT_US 30000000
-static enum ia_css_err
-ia_css_start_bl(void)
-{
-	enum ia_css_err err = IA_CSS_SUCCESS;
-	unsigned long timeout;
-
-	IA_CSS_ENTER("");
-	sh_css_start_bl();
-	/* waiting for the Bootloader to complete execution */
-	timeout = BL_START_TIMEOUT_US;
-	while((ia_css_blctrl_get_state() == BOOTLOADER_BUSY) && timeout) {
-		timeout--;
-		hrt_sleep();
-	}
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE,
-			    "Bootloader state %d\n", ia_css_blctrl_get_state());
-	if (timeout == 0) {
-		ia_css_debug_dtrace(IA_CSS_DEBUG_ERROR,
-				    "Bootloader Execution Timeout\n");
-		err = IA_CSS_ERR_INTERNAL_ERROR;
-	}
-	if (ia_css_blctrl_get_state() != BOOTLOADER_OK) {
-		ia_css_debug_dtrace(IA_CSS_DEBUG_ERROR,
-				    "Bootloader Execution Failed\n");
-		err = IA_CSS_ERR_INTERNAL_ERROR;
-	}
-	IA_CSS_LEAVE_ERR(err);
-	return err;
-}
-#endif
-
 #define SP_START_TIMEOUT_US 30000000
 
 #if defined(HAS_SEC_SP)
@@ -9960,15 +9869,6 @@ ia_css_start_sp(void)
 	enum ia_css_err err = IA_CSS_SUCCESS;
 
 	IA_CSS_ENTER("");
-#if defined(HAS_BL)
-	/* Starting bootloader before Sp0 and Sp1
-	 * and not exposing CSS API */
-	err = ia_css_start_bl();
-	if (err != IA_CSS_SUCCESS) {
-		IA_CSS_LEAVE("Bootloader fails");
-		return err;
-	}
-#endif
 	sh_css_sp_start_isp();
 
 	/* waiting for the SP is completely started */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_firmware.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_firmware.c
index 19d57631..d326082 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_firmware.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_firmware.c
@@ -47,10 +47,10 @@ struct fw_param {
 /* Warning: same order as SH_CSS_BINARY_ID_* */
 static struct firmware_header *firmware_header;
 
-/* The string STR(irci_master_20150311_1503) is a place holder
+/* The string STR(irci_master_20150308_0200) is a place holder
  * which will be replaced with the actual RELEASE_VERSION
  * during package generation. Please do not modify  */
-static const char *release_version = STR(irci_master_20150311_1503);
+static const char *release_version = STR(irci_master_20150308_0200);
 
 #define MAX_FW_REL_VER_NAME	300
 static char FW_rel_ver_name[MAX_FW_REL_VER_NAME] = "---";
@@ -59,9 +59,6 @@ struct ia_css_fw_info	  sh_css_sp_fw;
 #if defined(HAS_SEC_SP)
 struct ia_css_fw_info	  sh_css_sp1_fw;
 #endif /* HAS_SEC_SP */
-#if defined(HAS_BL)
-struct ia_css_fw_info     sh_css_bl_fw;
-#endif /* HAS_BL */
 struct ia_css_blob_descr *sh_css_blob_info; /* Only ISP blob info (no SP) */
 unsigned		  sh_css_num_binaries; /* This includes 1 SP binary */
 
@@ -80,7 +77,7 @@ char *sh_css_get_fw_version(void)
 
 /* Setup sp/sp1 binary */
 static enum ia_css_err
-setup_binary(struct ia_css_fw_info *fw, const char *fw_data, struct ia_css_fw_info *sh_css_fw, unsigned binary_id)
+setup_sp(struct ia_css_fw_info *fw, const char *fw_data, struct ia_css_fw_info *sh_css_sp_sp1_fw, unsigned sp_id)
 {
 	const char *blob_data;
 
@@ -89,20 +86,20 @@ setup_binary(struct ia_css_fw_info *fw, const char *fw_data, struct ia_css_fw_in
 
 	blob_data = fw_data + fw->blob.offset;
 
-	*sh_css_fw = *fw;
+	*sh_css_sp_sp1_fw = *fw;
 
 #if defined(C_RUN) || defined(HRT_UNSCHED)
-	sh_css_fw->blob.code = sh_css_malloc(1);
+	sh_css_sp_sp1_fw->blob.code = sh_css_malloc(1);
 #else
-	sh_css_fw->blob.code = sh_css_malloc(fw->blob.size);
+	sh_css_sp_sp1_fw->blob.code = sh_css_malloc(fw->blob.size);
 #endif
 
-	if (sh_css_fw->blob.code == NULL)
+	if (sh_css_sp_sp1_fw->blob.code == NULL)
 		return IA_CSS_ERR_CANNOT_ALLOCATE_MEMORY;
 
-	memcpy((void *)sh_css_fw->blob.code, blob_data, fw->blob.size);
-	sh_css_fw->blob.data = (char *)sh_css_fw->blob.code + fw->blob.data_source;
-	fw_minibuffer[binary_id].buffer = sh_css_fw->blob.code;
+	memcpy((void *)sh_css_sp_sp1_fw->blob.code, blob_data, fw->blob.size);
+	sh_css_sp_sp1_fw->blob.data = (char *)sh_css_sp_sp1_fw->blob.code + fw->blob.data_source;
+	fw_minibuffer[sp_id].buffer = sh_css_sp_sp1_fw->blob.code;
 
 	return IA_CSS_SUCCESS;
 }
@@ -137,9 +134,6 @@ sh_css_load_blob_info(const char *fw, const struct ia_css_fw_info *bi, struct ia
 #if defined(HAS_SEC_SP)
 	|| (bi->type == ia_css_sp1_firmware)
 #endif /* HAS_SEC_SP */
-#if defined(HAS_BL)
-	|| (bi->type == ia_css_bootloader_firmware)
-#endif /* HAS_BL */
 	)
 	{
 		char *namebuffer;
@@ -240,9 +234,9 @@ sh_css_load_firmware(const char *fw_data,
 
 	sh_css_num_binaries = file_header->binary_nr;
 	/* Only allocate memory for ISP blob info */
-	if (sh_css_num_binaries > (NUM_OF_SPS + NUM_OF_BLS)) {
+	if (sh_css_num_binaries > NUM_OF_SPS) {
 		sh_css_blob_info = sh_css_malloc(
-					(sh_css_num_binaries - (NUM_OF_SPS + NUM_OF_BLS)) *
+					(sh_css_num_binaries - NUM_OF_SPS) *
 					sizeof(*sh_css_blob_info));
 		if (sh_css_blob_info == NULL)
 			return IA_CSS_ERR_CANNOT_ALLOCATE_MEMORY;
@@ -275,36 +269,26 @@ sh_css_load_firmware(const char *fw_data,
 		if (bi->type == ia_css_sp_firmware) {
 			if (i != SP_FIRMWARE)
 				return IA_CSS_ERR_INTERNAL_ERROR;
-			err = setup_binary(bi, fw_data, &sh_css_sp_fw, i);
+			err = setup_sp(bi, fw_data, &sh_css_sp_fw, i);
 			if (err != IA_CSS_SUCCESS)
 				return err;
 #if defined(HAS_SEC_SP)
 		} else if (bi->type == ia_css_sp1_firmware) {
 			if (i != SP1_FIRMWARE)
 				return IA_CSS_ERR_INTERNAL_ERROR;
-			err = setup_binary(bi, fw_data, &sh_css_sp1_fw, i);
+			err = setup_sp(bi, fw_data, &sh_css_sp1_fw, i);
 			if (err != IA_CSS_SUCCESS)
 				return err;
 #endif /* HAS_SEC_SP */
-#if defined(HAS_BL)
-		} else if (bi->type == ia_css_bootloader_firmware) {
-			if (i != BOOTLOADER_FIRMWARE)
-				return IA_CSS_ERR_INTERNAL_ERROR;
-			err = setup_binary(bi, fw_data, &sh_css_bl_fw, i);
-			if (err != IA_CSS_SUCCESS)
-				return err;
-			IA_CSS_LOG("Bootloader binary recognized\n");
-#endif
 		} else {
-			/* All subsequent binaries (including bootloaders) (i>NUM_OF_SPS+NUM_OF_BLS) are ISP firmware */
-			if (i < (NUM_OF_SPS + NUM_OF_BLS))
+			/* All subsequent binaries (i>NUM_OF_SPS) are ISP firmware */
+			if (i < NUM_OF_SPS)
 				return IA_CSS_ERR_INTERNAL_ERROR;
-
 			if (bi->type != ia_css_isp_firmware)
 				return IA_CSS_ERR_INTERNAL_ERROR;
 			if (sh_css_blob_info == NULL) /* cannot happen but KW does not see this */
 				return IA_CSS_ERR_INTERNAL_ERROR;
-			sh_css_blob_info[i-(NUM_OF_SPS + NUM_OF_BLS)] = bd;
+			sh_css_blob_info[i-NUM_OF_SPS] = bd;
 		}
 	}
 
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_firmware.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_firmware.h
index 97bdf2e..a3dd2dc 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_firmware.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_firmware.h
@@ -31,9 +31,6 @@ extern struct ia_css_fw_info     sh_css_sp_fw;
 #if defined(HAS_SEC_SP)
 extern struct ia_css_fw_info     sh_css_sp1_fw;
 #endif /* HAS_SEC_SP */
-#if defined(HAS_BL)
-extern struct ia_css_fw_info     sh_css_bl_fw;
-#endif /* HAS_BL */
 extern struct ia_css_blob_descr *sh_css_blob_info;
 extern unsigned			 sh_css_num_binaries;
 
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_internal.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_internal.h
index 26137ec..905eee8 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_internal.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_internal.h
@@ -171,21 +171,12 @@
 #define NUM_OF_SPS 1
 #endif /* HAS_SEC_SP */
 
-#if defined(HAS_BL)
-#define NUM_OF_BLS 1
-#else
-#define NUM_OF_BLS 0
-#endif
-
-/* Enum for order of Binaries */
-enum sh_css_order_binaries {
+/* Enum for Number of Binaries */
+enum sh_css_num_binaries {
 	SP_FIRMWARE = 0,
 #if defined(HAS_SEC_SP)
 	SP1_FIRMWARE,
 #endif /* HAS_SEC_SP */
-#if defined(HAS_BL)
-	BOOTLOADER_FIRMWARE,
-#endif
 	ISP_FIRMWARE
 };
 
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_params.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_params.c
index 7949e1e..faf3164 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_params.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_params.c
@@ -52,7 +52,6 @@
 #include "ia_css_morph.h"
 #include "ia_css_host_data.h"
 #include "ia_css_pipe.h"
-#include "ia_css_pipe_binarydesc.h"
 
 #if !defined(IS_ISP_2500_SYSTEM)
 /* Include all kernel host interfaces for ISP1 */
@@ -1448,45 +1447,6 @@ ia_css_process_kernel(struct ia_css_stream *stream,
 	}
 }
 
-static enum ia_css_err
-sh_css_select_dp_10bpp_config(const struct ia_css_pipe *pipe, bool *is_dp_10bpp) {
-
-	enum ia_css_err err = IA_CSS_SUCCESS;
-	/* Currently we check if 10bpp DPC configuration is required based
-	 * on the use case,i.e. if BDS and DPC is both enabled. The more cleaner
-	 * design choice would be to expose the type of DPC (either 10bpp or 13bpp)
-	 * using the binary info, but the current control flow does not allow this
-	 * implementation. (This is because the configuration is set before a
-	 * binary is selected, and the binary info is not available)
-	 */
-	if((pipe == NULL) || (is_dp_10bpp == NULL)) {
-		IA_CSS_LEAVE_ERR_PRIVATE(IA_CSS_ERR_INTERNAL_ERROR);
-		err = IA_CSS_ERR_INTERNAL_ERROR;
-	} else {
-		*is_dp_10bpp = false;
-
-		/* check if DPC is enabled from the host */
-		if (pipe->config.enable_dpc) {
-			/*check if BDS is enabled*/
-			unsigned int required_bds_factor = SH_CSS_BDS_FACTOR_1_00;
-			if ((pipe->config.bayer_ds_out_res.width != 0) &&
-			  (pipe->config.bayer_ds_out_res.height != 0)) {
-				if (IA_CSS_SUCCESS == binarydesc_calculate_bds_factor(
-					pipe->config.input_effective_res,
-					pipe->config.bayer_ds_out_res,
-					&required_bds_factor)) {
-					if (SH_CSS_BDS_FACTOR_1_00 != required_bds_factor) {
-						/*we use 10bpp BDS configuration*/
-						*is_dp_10bpp = true;
-					}
-				}
-			}
-		}
-	}
-
-	return err;
-}
-
 #endif
 
 enum ia_css_err
@@ -2368,7 +2328,6 @@ ia_css_set_param_exceptions(struct ia_css_isp_parameters *params)
 #endif
 
 #if !defined(IS_ISP_2500_SYSTEM)
-
 static void
 sh_css_set_nr_config(struct ia_css_isp_parameters *params,
 			const struct ia_css_nr_config *config)
@@ -2674,23 +2633,13 @@ sh_css_set_global_isp_config_on_pipe(
 	struct ia_css_pipe *pipe)
 {
 	enum ia_css_err err = IA_CSS_SUCCESS;
-	enum ia_css_err err1 = IA_CSS_SUCCESS;
-	enum ia_css_err err2 = IA_CSS_SUCCESS;
 
 	IA_CSS_ENTER_PRIVATE("stream=%p, config=%p, pipe=%p", curr_pipe, config, pipe);
 
-	err1 = sh_css_init_isp_params_from_config(curr_pipe, curr_pipe->stream->isp_params_configs, config);
+	sh_css_init_isp_params_from_config(curr_pipe, curr_pipe->stream->isp_params_configs, config);
 
 	/* Now commit all changes to the SP */
-	err2 = sh_css_param_update_isp_params(curr_pipe, curr_pipe->stream->isp_params_configs, sh_css_sp_is_running(), pipe);
-
-	/* The following code is intentional. The sh_css_init_isp_params_from_config interface
-	 * throws an error when both DPC and BDS is enabled. The CSS API must pass this error
-	 * information to the caller, ie. the host. We do not return this error immediately,
-	 * but instead continue with updating the ISP params to enable testing of features
-	 * which are currently in TR phase. */
-
-	err = (err1 != IA_CSS_SUCCESS ) ? err1 : ((err2 != IA_CSS_SUCCESS) ? err2 : err);
+	err = sh_css_param_update_isp_params(curr_pipe, curr_pipe->stream->isp_params_configs, sh_css_sp_is_running(), pipe);
 
 	IA_CSS_LEAVE_ERR_PRIVATE(err);
 	return err;
@@ -2706,10 +2655,6 @@ sh_css_set_per_frame_isp_config_on_pipe(
 	unsigned i;
 	bool per_frame_config_created = false;
 	enum ia_css_err err = IA_CSS_SUCCESS;
-	enum ia_css_err err1 = IA_CSS_SUCCESS;
-	enum ia_css_err err2 = IA_CSS_SUCCESS;
-	enum ia_css_err err3 = IA_CSS_SUCCESS;
-
 	struct sh_css_ddr_address_map *ddr_ptrs;
 	struct sh_css_ddr_address_map_size *ddr_ptrs_size;
 	struct ia_css_isp_parameters *params;
@@ -2736,12 +2681,8 @@ sh_css_set_per_frame_isp_config_on_pipe(
 	params = stream->per_frame_isp_params_configs;
 
 	/* update new ISP params object with the new config */
-	if (!sh_css_init_isp_params_from_global(stream, params, false)) {
-		err1 = IA_CSS_ERR_INVALID_ARGUMENTS;
-	}
-
-	err2 = sh_css_init_isp_params_from_config(stream->pipes[0], params, config);
-
+	sh_css_init_isp_params_from_global(stream, params, false);
+	sh_css_init_isp_params_from_config(stream->pipes[0], params, config);
 
 	if (per_frame_config_created)
 	{
@@ -2755,16 +2696,8 @@ sh_css_set_per_frame_isp_config_on_pipe(
 	}
 
 	/* now commit to ddr */
-	err3 = sh_css_param_update_isp_params(stream->pipes[0], params, sh_css_sp_is_running(), pipe);
-
-	/* The following code is intentional. The sh_css_init_sp_params_from_config and
-	 * sh_css_init_isp_params_from_config throws an error when both DPC and BDS is enabled.
-	 * The CSS API must pass this error information to the caller, ie. the host.
-	 * We do not return this error immediately, but instead continue with updating the ISP params
-	 *  to enable testing of features which are currently in TR phase. */
-	err = (err1 != IA_CSS_SUCCESS) ? err1 :
-		(err2 != IA_CSS_SUCCESS) ? err2 :
-		(err3 != IA_CSS_SUCCESS) ? err3 : err;
+	err = sh_css_param_update_isp_params(stream->pipes[0], params, sh_css_sp_is_running(), pipe);
+
 exit:
 	IA_CSS_LEAVE_ERR_PRIVATE(err);
 	return err;
@@ -2776,12 +2709,8 @@ sh_css_init_isp_params_from_config(struct ia_css_pipe *pipe,
 		struct ia_css_isp_parameters *params,
 		const struct ia_css_isp_config *config)
 {
-	enum ia_css_err err = IA_CSS_SUCCESS;
-#if !defined(IS_ISP_2500_SYSTEM)
-	bool is_dp_10bpp = true;
-#endif
+	enum ia_css_err err = IA_CSS_ERR_INTERNAL_ERROR;
 	assert(pipe != NULL);
-
 	IA_CSS_ENTER_PRIVATE("pipe=%p, config=%p, params=%p", pipe, config, params);
 
 	ia_css_set_configs(params, config);
@@ -2789,7 +2718,6 @@ sh_css_init_isp_params_from_config(struct ia_css_pipe *pipe,
 #if defined(IS_ISP_2500_SYSTEM)
 	err = sh_css_set_config_product_specific(pipe, config);
 #else
-
 	sh_css_set_nr_config(params, config->nr_config);
 	sh_css_set_ee_config(params, config->ee_config);
 	sh_css_set_baa_config(params, config->baa_config);
@@ -2813,23 +2741,10 @@ sh_css_init_isp_params_from_config(struct ia_css_pipe *pipe,
 	params->output_frame = config->output_frame;
 	params->isp_parameters_id = config->isp_config_id;
 
-	if (IA_CSS_SUCCESS ==
-		sh_css_select_dp_10bpp_config(pipe, &is_dp_10bpp)) {
-		/* return an error when both DPC and BDS is enabled by the
-		 * user. */
-		/* we do not exit from this point immediately to allow internal
-		 * firmware feature testing. */
-		if(is_dp_10bpp) {
-			err = IA_CSS_ERR_INVALID_ARGUMENTS;
-		}
-	} else {
-		err = IA_CSS_ERR_INTERNAL_ERROR;
-		goto exit;
-	}
-
 	ia_css_set_param_exceptions(params);
-exit:
+	err = IA_CSS_SUCCESS;
 #endif
+
 	IA_CSS_LEAVE_ERR_PRIVATE(err);
 	return err;
 }
@@ -3183,11 +3098,7 @@ ia_css_stream_isp_parameters_init(struct ia_css_stream *stream)
 		 goto ERR;
 
 	params = stream->isp_params_configs;
-	if (!sh_css_init_isp_params_from_global(stream, params, true)) {
-		/* we do not return the error immediately to enable internal
-		 * firmware feature testing */
-		err = IA_CSS_ERR_INVALID_ARGUMENTS;
-	}
+	sh_css_init_isp_params_from_global(stream, params, true);
 
 	ddr_ptrs = &params->ddr_ptrs;
 	ddr_ptrs_size = &params->ddr_ptrs_size;
@@ -3317,18 +3228,14 @@ sh_css_init_isp_params_from_global(struct ia_css_stream *stream,
 		struct ia_css_isp_parameters *params,
 		bool use_default_config)
 {
-	bool retval = true;
 #if !defined(IS_ISP_2500_SYSTEM)
 	int i = 0;
-	bool is_dp_10bpp = true;
 	unsigned isp_pipe_version = ia_css_pipe_get_isp_pipe_version(stream->pipes[0]);
 #endif
 	struct ia_css_isp_parameters *stream_params = stream->isp_params_configs;
 
-	if (!use_default_config && !stream_params) {
-		retval = false;
-		goto exit;
-	}
+	if (!use_default_config && !stream_params)
+		return false;
 
 	params->output_frame = NULL;
 	params->isp_parameters_id = 0;
@@ -3358,7 +3265,6 @@ sh_css_init_isp_params_from_global(struct ia_css_stream *stream,
 		ia_css_set_tnr_config(params, &default_tnr_config);
 		ia_css_set_ob_config(params, &default_ob_config);
 		ia_css_set_dp_config(params, &default_dp_config);
-		ia_css_set_param_exceptions(params);
 		ia_css_set_de_config(params, &default_de_config);
 		ia_css_set_gc_config(params, &default_gc_config);
 		ia_css_set_anr_config(params, &default_anr_config);
@@ -3381,6 +3287,7 @@ sh_css_init_isp_params_from_global(struct ia_css_stream *stream,
 		ia_css_set_sdis_config(params, &default_sdis_config);
 		ia_css_set_sdis2_config(params, &default_sdis2_config);
 		ia_css_set_formats_config(params, &default_formats_config);
+		ia_css_set_param_exceptions(params);
 
 		params->fpn_config.data = NULL;
 		params->config_changed[IA_CSS_FPN_ID] = true;
@@ -3451,20 +3358,6 @@ sh_css_init_isp_params_from_global(struct ia_css_stream *stream,
 		ia_css_set_xnr_config(params, &stream_params->xnr_config);
 		ia_css_set_formats_config(params, &stream_params->formats_config);
 
-		for (i = 0; i < stream->num_pipes; i++) {
-			if (IA_CSS_SUCCESS ==
-				sh_css_select_dp_10bpp_config(stream->pipes[i], &is_dp_10bpp)) {
-				/* set the return value as false if both DPC and
-				 * BDS is enabled by the user. But we do not return
-				 * the value immediately to enable internal firmware
-				 * feature testing. */
-				retval = !is_dp_10bpp;
-			} else {
-				retval = false;
-				goto exit;
-			}
-		}
-
 		ia_css_set_param_exceptions(params);
 
 		params->fpn_config.data = stream_params->fpn_config.data;
@@ -3498,8 +3391,7 @@ sh_css_init_isp_params_from_global(struct ia_css_stream *stream,
 #endif /* !defined(IS_ISP_2500_SYSTEM) */
 	}
 
-exit:
-	return retval;
+	return true;
 }
 
 enum ia_css_err
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/spmem_dump.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/spmem_dump.c
index 80e0ed9..164455f 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/spmem_dump.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/spmem_dump.c
@@ -24,7 +24,7 @@
 
 /* function input_system_acquisition_stop: ADE */
 
-/* function longjmp: 6884 */
+/* function longjmp: 6868 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_HIVE_IF_SRST_MASK
@@ -38,11 +38,11 @@
 #define HIVE_ADDR_sp_HIVE_IF_SRST_MASK 0x1C8
 #define HIVE_SIZE_sp_HIVE_IF_SRST_MASK 16
 
-/* function tmpmem_init_dmem: 65CF */
+/* function tmpmem_init_dmem: 65B3 */
 
-/* function ia_css_isys_sp_token_map_receive_ack: 5F13 */
+/* function ia_css_isys_sp_token_map_receive_ack: 5EF7 */
 
-/* function ia_css_dmaproxy_sp_set_addr_B: 32C9 */
+/* function ia_css_dmaproxy_sp_set_addr_B: 32AD */
 
 /* function debug_buffer_set_ddr_addr: DD */
 
@@ -51,22 +51,22 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_vbuf_mipi
 #define HIVE_MEM_vbuf_mipi scalar_processor_2400_dmem
-#define HIVE_ADDR_vbuf_mipi 0x631C
+#define HIVE_ADDR_vbuf_mipi 0x630C
 #define HIVE_SIZE_vbuf_mipi 12
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_vbuf_mipi scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_vbuf_mipi 0x631C
+#define HIVE_ADDR_sp_vbuf_mipi 0x630C
 #define HIVE_SIZE_sp_vbuf_mipi 12
 
-/* function ia_css_event_sp_decode: 34BA */
+/* function ia_css_event_sp_decode: 349E */
 
-/* function ia_css_queue_get_size: 4833 */
+/* function ia_css_queue_get_size: 4817 */
 
-/* function ia_css_queue_load: 4E74 */
+/* function ia_css_queue_load: 4E58 */
 
-/* function setjmp: 688D */
+/* function setjmp: 6871 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_sp2host_isys_event_queue
@@ -80,22 +80,22 @@
 #define HIVE_ADDR_sp_sem_for_sp2host_isys_event_queue 0x4684
 #define HIVE_SIZE_sp_sem_for_sp2host_isys_event_queue 20
 
-/* function ia_css_dmaproxy_sp_wait_for_ack: 6E3D */
+/* function ia_css_dmaproxy_sp_wait_for_ack: 6E21 */
 
-/* function ia_css_sp_rawcopy_func: 5099 */
+/* function ia_css_sp_rawcopy_func: 507D */
 
-/* function ia_css_tagger_buf_sp_pop_marked: 295B */
+/* function ia_css_tagger_buf_sp_pop_marked: 2942 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_stage
 #define HIVE_MEM_isp_stage scalar_processor_2400_dmem
-#define HIVE_ADDR_isp_stage 0x5C00
+#define HIVE_ADDR_isp_stage 0x5BF0
 #define HIVE_SIZE_isp_stage 832
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isp_stage scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_stage 0x5C00
+#define HIVE_ADDR_sp_isp_stage 0x5BF0
 #define HIVE_SIZE_sp_isp_stage 832
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -110,9 +110,9 @@
 #define HIVE_ADDR_sp_vbuf_raw 0x2F0
 #define HIVE_SIZE_sp_vbuf_raw 4
 
-/* function ia_css_sp_bin_copy_func: 4FC0 */
+/* function ia_css_sp_bin_copy_func: 4FA4 */
 
-/* function ia_css_queue_item_store: 4BC2 */
+/* function ia_css_queue_item_store: 4BA6 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_metadata_bufs
@@ -143,30 +143,30 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_binary_group
 #define HIVE_MEM_sp_binary_group scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_binary_group 0x5FF0
+#define HIVE_ADDR_sp_binary_group 0x5FE0
 #define HIVE_SIZE_sp_binary_group 32
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_binary_group scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_binary_group 0x5FF0
+#define HIVE_ADDR_sp_sp_binary_group 0x5FE0
 #define HIVE_SIZE_sp_sp_binary_group 32
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_sw_state
 #define HIVE_MEM_sp_sw_state scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sw_state 0x62AC
+#define HIVE_ADDR_sp_sw_state 0x629C
 #define HIVE_SIZE_sp_sw_state 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_sw_state scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_sw_state 0x62AC
+#define HIVE_ADDR_sp_sp_sw_state 0x629C
 #define HIVE_SIZE_sp_sp_sw_state 4
 
 /* function ia_css_thread_sp_main: D5B */
 
-/* function ia_css_ispctrl_sp_init_internal_buffers: 36C0 */
+/* function ia_css_ispctrl_sp_init_internal_buffers: 36A4 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp2host_psys_event_queue_handle
@@ -192,18 +192,18 @@
 #define HIVE_ADDR_sp_sem_for_sp2host_psys_event_queue 0x4698
 #define HIVE_SIZE_sp_sem_for_sp2host_psys_event_queue 20
 
-/* function ia_css_tagger_sp_propagate_frame: 23FB */
+/* function ia_css_tagger_sp_propagate_frame: 23E2 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_stop_copy_preview
 #define HIVE_MEM_sp_stop_copy_preview scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_stop_copy_preview 0x6290
+#define HIVE_ADDR_sp_stop_copy_preview 0x6280
 #define HIVE_SIZE_sp_stop_copy_preview 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_stop_copy_preview scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_stop_copy_preview 0x6290
+#define HIVE_ADDR_sp_sp_stop_copy_preview 0x6280
 #define HIVE_SIZE_sp_sp_stop_copy_preview 4
 
 /* function input_system_reg_load: B17 */
@@ -211,28 +211,28 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_vbuf_handles
 #define HIVE_MEM_vbuf_handles scalar_processor_2400_dmem
-#define HIVE_ADDR_vbuf_handles 0x6328
+#define HIVE_ADDR_vbuf_handles 0x6318
 #define HIVE_SIZE_vbuf_handles 960
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_vbuf_handles scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_vbuf_handles 0x6328
+#define HIVE_ADDR_sp_vbuf_handles 0x6318
 #define HIVE_SIZE_sp_vbuf_handles 960
 
-/* function ia_css_queue_store: 4D28 */
+/* function ia_css_queue_store: 4D0C */
 
-/* function ia_css_sp_flash_register: 2BC9 */
+/* function ia_css_sp_flash_register: 2BB0 */
 
-/* function ia_css_sp_rawcopy_dummy_function: 56A1 */
+/* function ia_css_sp_rawcopy_dummy_function: 5685 */
 
-/* function ia_css_isys_sp_backend_create: 5B86 */
+/* function ia_css_isys_sp_backend_create: 5B6A */
 
-/* function ia_css_pipeline_sp_init: 184C */
+/* function ia_css_pipeline_sp_init: 1833 */
 
-/* function ia_css_tagger_sp_configure: 22EB */
+/* function ia_css_tagger_sp_configure: 22D2 */
 
-/* function ia_css_ispctrl_sp_end_binary: 3503 */
+/* function ia_css_ispctrl_sp_end_binary: 34E7 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_h_pipe_private_per_frame_ddr_ptrs
@@ -296,35 +296,35 @@
 #define HIVE_ADDR_sp_host_sp_com 0x4114
 #define HIVE_SIZE_sp_host_sp_com 220
 
-/* function ia_css_queue_get_free_space: 4987 */
+/* function ia_css_queue_get_free_space: 496B */
 
 /* function exec_image_pipe: 6C4 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_init_dmem_data
 #define HIVE_MEM_sp_init_dmem_data scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_init_dmem_data 0x62B0
+#define HIVE_ADDR_sp_init_dmem_data 0x62A0
 #define HIVE_SIZE_sp_init_dmem_data 24
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_init_dmem_data scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_init_dmem_data 0x62B0
+#define HIVE_ADDR_sp_sp_init_dmem_data 0x62A0
 #define HIVE_SIZE_sp_sp_init_dmem_data 24
 
-/* function ia_css_sp_metadata_start: 5963 */
+/* function ia_css_sp_metadata_start: 5947 */
 
-/* function ia_css_bufq_sp_init_buffer_queues: 2C38 */
+/* function ia_css_bufq_sp_init_buffer_queues: 2C1F */
 
-/* function ia_css_pipeline_sp_stop: 182F */
+/* function ia_css_pipeline_sp_stop: 1816 */
 
-/* function ia_css_tagger_sp_connect_pipes: 27C4 */
+/* function ia_css_tagger_sp_connect_pipes: 27AB */
 
 /* function sp_isys_copy_wait: 70D */
 
 /* function is_isp_debug_buffer_full: 337 */
 
-/* function ia_css_dmaproxy_sp_configure_channel_from_info: 324C */
+/* function ia_css_dmaproxy_sp_configure_channel_from_info: 3230 */
 
 /* function encode_and_post_timer_event: A30 */
 
@@ -340,7 +340,7 @@
 #define HIVE_ADDR_sp_sp_per_frame_data 0x41F0
 #define HIVE_SIZE_sp_sp_per_frame_data 4
 
-/* function ia_css_rmgr_sp_vbuf_dequeue: 6323 */
+/* function ia_css_rmgr_sp_vbuf_dequeue: 6307 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_host2sp_psys_event_queue_handle
@@ -366,11 +366,11 @@
 #define HIVE_ADDR_sp_xmem_bin_addr 0x41F4
 #define HIVE_SIZE_sp_xmem_bin_addr 4
 
-/* function tmr_clock_init: 13FB */
+/* function tmr_clock_init: 13F4 */
 
-/* function ia_css_pipeline_sp_run: 141C */
+/* function ia_css_pipeline_sp_run: 1415 */
 
-/* function memcpy: 692D */
+/* function memcpy: 6911 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_GP_DEVICE_BASE
@@ -398,13 +398,13 @@
 
 /* function input_system_reg_store: B1E */
 
-/* function ia_css_isys_sp_frontend_start: 5D9C */
+/* function ia_css_isys_sp_frontend_start: 5D80 */
 
-/* function ia_css_uds_sp_scale_params: 6636 */
+/* function ia_css_uds_sp_scale_params: 661A */
 
 /* function ia_css_circbuf_increase_size: E40 */
 
-/* function __divu: 68AB */
+/* function __divu: 688F */
 
 /* function ia_css_thread_sp_get_state: C83 */
 
@@ -436,9 +436,9 @@
 
 /* function ia_css_parambuf_sp_handle_parameter_sets: 128A */
 
-/* function ia_css_spctrl_sp_set_state: 5992 */
+/* function ia_css_spctrl_sp_set_state: 5976 */
 
-/* function ia_css_thread_sem_sp_signal: 6B2D */
+/* function ia_css_thread_sem_sp_signal: 6B11 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_IRQ_BASE
@@ -464,13 +464,13 @@
 #define HIVE_ADDR_sp_TIMED_CTRL_BASE 0x40
 #define HIVE_SIZE_sp_TIMED_CTRL_BASE 4
 
-/* function ia_css_isys_sp_isr: 7012 */
+/* function ia_css_isys_sp_isr: 6FF6 */
 
-/* function ia_css_isys_sp_generate_exp_id: 6134 */
+/* function ia_css_isys_sp_generate_exp_id: 6118 */
 
-/* function ia_css_rmgr_sp_init: 621E */
+/* function ia_css_rmgr_sp_init: 6202 */
 
-/* function ia_css_thread_sem_sp_init: 6BFE */
+/* function ia_css_thread_sem_sp_init: 6BE2 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_is_isp_requested
@@ -496,15 +496,15 @@
 #define HIVE_ADDR_sp_sem_for_reading_cb_frame 0x46D0
 #define HIVE_SIZE_sp_sem_for_reading_cb_frame 40
 
-/* function ia_css_dmaproxy_sp_execute: 31B4 */
+/* function ia_css_dmaproxy_sp_execute: 3198 */
 
-/* function ia_css_queue_is_empty: 486E */
+/* function ia_css_queue_is_empty: 4852 */
 
-/* function ia_css_pipeline_sp_has_stopped: 1825 */
+/* function ia_css_pipeline_sp_has_stopped: 180C */
 
 /* function ia_css_circbuf_extract: F44 */
 
-/* function ia_css_tagger_buf_sp_is_locked_from_start: 2AAA */
+/* function ia_css_tagger_buf_sp_is_locked_from_start: 2A91 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_current_sp_thread
@@ -518,13 +518,13 @@
 #define HIVE_ADDR_sp_current_sp_thread 0x1DC
 #define HIVE_SIZE_sp_current_sp_thread 4
 
-/* function ia_css_spctrl_sp_get_spid: 5999 */
+/* function ia_css_spctrl_sp_get_spid: 597D */
 
-/* function ia_css_bufq_sp_reset_buffers: 2CBF */
+/* function ia_css_bufq_sp_reset_buffers: 2CA6 */
 
-/* function ia_css_dmaproxy_sp_read_byte_addr: 6E6B */
+/* function ia_css_dmaproxy_sp_read_byte_addr: 6E4F */
 
-/* function ia_css_rmgr_sp_uninit: 6217 */
+/* function ia_css_rmgr_sp_uninit: 61FB */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_threads_stack
@@ -542,7 +542,7 @@
 
 /* function ia_css_parambuf_sp_wait_for_in_param: 1053 */
 
-/* function ia_css_isys_sp_token_map_get_exp_id: 5FFC */
+/* function ia_css_isys_sp_token_map_get_exp_id: 5FE0 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cb_elems_param
@@ -594,7 +594,7 @@
 #define HIVE_ADDR_sp_sem_for_reading_cb_param 0x4710
 #define HIVE_SIZE_sp_sem_for_reading_cb_param 40
 
-/* function ia_css_queue_get_used_space: 493B */
+/* function ia_css_queue_get_used_space: 491F */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_cont_capt_start
@@ -611,20 +611,20 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_tmp_heap
 #define HIVE_MEM_tmp_heap scalar_processor_2400_dmem
-#define HIVE_ADDR_tmp_heap 0x6010
+#define HIVE_ADDR_tmp_heap 0x6000
 #define HIVE_SIZE_tmp_heap 640
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_tmp_heap scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_tmp_heap 0x6010
+#define HIVE_ADDR_sp_tmp_heap 0x6000
 #define HIVE_SIZE_sp_tmp_heap 640
 
-/* function ia_css_rmgr_sp_get_num_vbuf: 6527 */
+/* function ia_css_rmgr_sp_get_num_vbuf: 650B */
 
-/* function ia_css_ispctrl_sp_output_compute_dma_info: 3EE4 */
+/* function ia_css_ispctrl_sp_output_compute_dma_info: 3EC8 */
 
-/* function ia_css_tagger_sp_lock_exp_id: 20D6 */
+/* function ia_css_tagger_sp_lock_exp_id: 20BD */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_s3a_bufs
@@ -638,27 +638,27 @@
 #define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_s3a_bufs 0x4B8C
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_s3a_bufs 60
 
-/* function ia_css_queue_is_full: 49D2 */
+/* function ia_css_queue_is_full: 49B6 */
 
 /* function debug_buffer_init_isp: E4 */
 
-/* function ia_css_isys_sp_frontend_uninit: 5D56 */
+/* function ia_css_isys_sp_frontend_uninit: 5D3A */
 
-/* function ia_css_tagger_sp_exp_id_is_locked: 201C */
+/* function ia_css_tagger_sp_exp_id_is_locked: 2003 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_rmgr_sp_mipi_frame_sem
 #define HIVE_MEM_ia_css_rmgr_sp_mipi_frame_sem scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_rmgr_sp_mipi_frame_sem 0x66E8
+#define HIVE_ADDR_ia_css_rmgr_sp_mipi_frame_sem 0x66D8
 #define HIVE_SIZE_ia_css_rmgr_sp_mipi_frame_sem 60
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_rmgr_sp_mipi_frame_sem scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_rmgr_sp_mipi_frame_sem 0x66E8
+#define HIVE_ADDR_sp_ia_css_rmgr_sp_mipi_frame_sem 0x66D8
 #define HIVE_SIZE_sp_ia_css_rmgr_sp_mipi_frame_sem 60
 
-/* function ia_css_rmgr_sp_refcount_dump: 62FE */
+/* function ia_css_rmgr_sp_refcount_dump: 62E2 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_isp_parameters_id
@@ -698,7 +698,7 @@
 #define HIVE_ADDR_sp_host2sp_isys_event_queue_handle 0x4BDC
 #define HIVE_SIZE_sp_host2sp_isys_event_queue_handle 12
 
-/* function ia_css_thread_sp_yield: 6AA6 */
+/* function ia_css_thread_sp_yield: 6A8A */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cbs_param_desc
@@ -715,32 +715,32 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_dmaproxy_sp_invalidate_tlb
 #define HIVE_MEM_ia_css_dmaproxy_sp_invalidate_tlb scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_dmaproxy_sp_invalidate_tlb 0x5BF4
+#define HIVE_ADDR_ia_css_dmaproxy_sp_invalidate_tlb 0x5BE0
 #define HIVE_SIZE_ia_css_dmaproxy_sp_invalidate_tlb 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_dmaproxy_sp_invalidate_tlb scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_dmaproxy_sp_invalidate_tlb 0x5BF4
+#define HIVE_ADDR_sp_ia_css_dmaproxy_sp_invalidate_tlb 0x5BE0
 #define HIVE_SIZE_sp_ia_css_dmaproxy_sp_invalidate_tlb 4
 
 /* function ia_css_thread_sp_fork: D10 */
 
-/* function ia_css_tagger_sp_destroy: 27CE */
+/* function ia_css_tagger_sp_destroy: 27B5 */
 
-/* function ia_css_dmaproxy_sp_vmem_read: 3154 */
+/* function ia_css_dmaproxy_sp_vmem_read: 3138 */
 
-/* function ia_css_ifmtr_sp_init: 6185 */
+/* function ia_css_ifmtr_sp_init: 6169 */
 
 /* function initialize_sp_group: 6D4 */
 
 /* function ia_css_thread_sp_init: D3C */
 
-/* function ia_css_isys_sp_reset_exp_id: 612C */
+/* function ia_css_isys_sp_reset_exp_id: 6110 */
 
-/* function qos_scheduler_update_fps: 6626 */
+/* function qos_scheduler_update_fps: 660A */
 
-/* function ia_css_ispctrl_sp_set_stream_base_addr: 45AC */
+/* function ia_css_ispctrl_sp_set_stream_base_addr: 4590 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ISP_DMEM_BASE
@@ -766,7 +766,7 @@
 #define HIVE_ADDR_sp_SP_DMEM_BASE 0x4
 #define HIVE_SIZE_sp_SP_DMEM_BASE 4
 
-/* function ia_css_dmaproxy_sp_read: 31CA */
+/* function ia_css_dmaproxy_sp_read: 31AE */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_raw_copy_line_count
@@ -792,7 +792,7 @@
 #define HIVE_ADDR_sp_host2sp_tag_cmd_queue_handle 0x4BE8
 #define HIVE_SIZE_sp_host2sp_tag_cmd_queue_handle 12
 
-/* function ia_css_queue_peek: 48B1 */
+/* function ia_css_queue_peek: 4895 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_flash_sp_frame_cnt
@@ -821,24 +821,24 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_thread
 #define HIVE_MEM_isp_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_isp_thread 0x5F40
+#define HIVE_ADDR_isp_thread 0x5F30
 #define HIVE_SIZE_isp_thread 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isp_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_thread 0x5F40
+#define HIVE_ADDR_sp_isp_thread 0x5F30
 #define HIVE_SIZE_sp_isp_thread 4
 
 /* function encode_and_post_sp_event_non_blocking: A78 */
 
-/* function ia_css_isys_sp_frontend_destroy: 5E2E */
+/* function ia_css_isys_sp_frontend_destroy: 5E12 */
 
 /* function is_ddr_debug_buffer_full: 2CC */
 
-/* function ia_css_isys_sp_frontend_stop: 5D6E */
+/* function ia_css_isys_sp_frontend_stop: 5D52 */
 
-/* function ia_css_isys_sp_token_map_init: 60CA */
+/* function ia_css_isys_sp_token_map_init: 60AE */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_threads_fiber
@@ -856,20 +856,20 @@
 
 /* function debug_enqueue_ddr: EE */
 
-/* function ia_css_rmgr_sp_refcount_init_vbuf: 62B9 */
+/* function ia_css_rmgr_sp_refcount_init_vbuf: 629D */
 
-/* function dmaproxy_sp_read_write: 6F1A */
+/* function dmaproxy_sp_read_write: 6EFE */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_dmaproxy_isp_dma_cmd_buffer
 #define HIVE_MEM_ia_css_dmaproxy_isp_dma_cmd_buffer scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_dmaproxy_isp_dma_cmd_buffer 0x5BF8
+#define HIVE_ADDR_ia_css_dmaproxy_isp_dma_cmd_buffer 0x5BE4
 #define HIVE_SIZE_ia_css_dmaproxy_isp_dma_cmd_buffer 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_dmaproxy_isp_dma_cmd_buffer scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_dmaproxy_isp_dma_cmd_buffer 0x5BF8
+#define HIVE_ADDR_sp_ia_css_dmaproxy_isp_dma_cmd_buffer 0x5BE4
 #define HIVE_SIZE_sp_ia_css_dmaproxy_isp_dma_cmd_buffer 4
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -896,17 +896,17 @@
 #define HIVE_ADDR_sp_ia_css_flash_sp_in_service 0x3178
 #define HIVE_SIZE_sp_ia_css_flash_sp_in_service 4
 
-/* function ia_css_dmaproxy_sp_process: 6C26 */
+/* function ia_css_dmaproxy_sp_process: 6C0A */
 
-/* function ia_css_tagger_buf_sp_mark_from_end: 2B8E */
+/* function ia_css_tagger_buf_sp_mark_from_end: 2B75 */
 
-/* function ia_css_isys_sp_backend_rcv_acquire_ack: 5A3B */
+/* function ia_css_isys_sp_backend_rcv_acquire_ack: 5A1F */
 
-/* function ia_css_isys_sp_backend_pre_acquire_request: 5A51 */
+/* function ia_css_isys_sp_backend_pre_acquire_request: 5A35 */
 
-/* function ia_css_ispctrl_sp_init_cs: 35F0 */
+/* function ia_css_ispctrl_sp_init_cs: 35D4 */
 
-/* function ia_css_spctrl_sp_init: 59A7 */
+/* function ia_css_spctrl_sp_init: 598B */
 
 /* function sp_event_proxy_init: 730 */
 
@@ -914,13 +914,13 @@
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_previous_clock_tick
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_previous_clock_tick scalar_processor_2400_dmem
 #define HIVE_ADDR_ia_css_bufq_sp_pipe_private_previous_clock_tick 0x4DD4
-#define HIVE_SIZE_ia_css_bufq_sp_pipe_private_previous_clock_tick 40
+#define HIVE_SIZE_ia_css_bufq_sp_pipe_private_previous_clock_tick 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_previous_clock_tick scalar_processor_2400_dmem
 #define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_previous_clock_tick 0x4DD4
-#define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_previous_clock_tick 40
+#define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_previous_clock_tick 20
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_output
@@ -937,13 +937,13 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_sems_for_host2sp_buf_queues
 #define HIVE_MEM_ia_css_bufq_sp_sems_for_host2sp_buf_queues scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_sems_for_host2sp_buf_queues 0x4DFC
+#define HIVE_ADDR_ia_css_bufq_sp_sems_for_host2sp_buf_queues 0x4DE8
 #define HIVE_SIZE_ia_css_bufq_sp_sems_for_host2sp_buf_queues 800
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_sems_for_host2sp_buf_queues scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_sems_for_host2sp_buf_queues 0x4DFC
+#define HIVE_ADDR_sp_ia_css_bufq_sp_sems_for_host2sp_buf_queues 0x4DE8
 #define HIVE_SIZE_sp_ia_css_bufq_sp_sems_for_host2sp_buf_queues 800
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -970,27 +970,27 @@
 #define HIVE_ADDR_sp_INPUT_FORMATTER_BASE 0x4C
 #define HIVE_SIZE_sp_INPUT_FORMATTER_BASE 16
 
-/* function sp_dma_proxy_reset_channels: 3424 */
+/* function sp_dma_proxy_reset_channels: 3408 */
 
-/* function ia_css_isys_sp_backend_acquire: 5B5C */
+/* function ia_css_isys_sp_backend_acquire: 5B40 */
 
-/* function ia_css_tagger_sp_update_size: 28C2 */
+/* function ia_css_tagger_sp_update_size: 28A9 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_host_sp_queue
 #define HIVE_MEM_ia_css_bufq_host_sp_queue scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_host_sp_queue 0x511C
+#define HIVE_ADDR_ia_css_bufq_host_sp_queue 0x5108
 #define HIVE_SIZE_ia_css_bufq_host_sp_queue 2008
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_host_sp_queue scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_host_sp_queue 0x511C
+#define HIVE_ADDR_sp_ia_css_bufq_host_sp_queue 0x5108
 #define HIVE_SIZE_sp_ia_css_bufq_host_sp_queue 2008
 
 /* function thread_fiber_sp_create: DA8 */
 
-/* function ia_css_dmaproxy_sp_set_increments: 32B6 */
+/* function ia_css_dmaproxy_sp_set_increments: 329A */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_writing_cb_frame
@@ -1026,21 +1026,21 @@
 #endif
 #define HIVE_ADDR_sp_sp_start_isp_entry 0x453
 
-/* function ia_css_tagger_buf_sp_unmark_all: 2B12 */
+/* function ia_css_tagger_buf_sp_unmark_all: 2AF9 */
 
-/* function ia_css_tagger_buf_sp_unmark_from_start: 2B53 */
+/* function ia_css_tagger_buf_sp_unmark_from_start: 2B3A */
 
-/* function ia_css_dmaproxy_sp_channel_acquire: 3450 */
+/* function ia_css_dmaproxy_sp_channel_acquire: 3434 */
 
-/* function ia_css_rmgr_sp_add_num_vbuf: 6503 */
+/* function ia_css_rmgr_sp_add_num_vbuf: 64E7 */
 
-/* function ia_css_isys_sp_token_map_create: 6113 */
+/* function ia_css_isys_sp_token_map_create: 60F7 */
 
-/* function __ia_css_dmaproxy_sp_wait_for_ack_text: 3120 */
+/* function __ia_css_dmaproxy_sp_wait_for_ack_text: 3104 */
 
-/* function ia_css_tagger_sp_acquire_buf_elem: 1FF4 */
+/* function ia_css_tagger_sp_acquire_buf_elem: 1FDB */
 
-/* function ia_css_bufq_sp_is_dynamic_buffer: 3009 */
+/* function ia_css_bufq_sp_is_dynamic_buffer: 2FED */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_group
@@ -1068,9 +1068,9 @@
 
 /* function ia_css_thread_sp_kill: CD6 */
 
-/* function ia_css_tagger_sp_create: 287C */
+/* function ia_css_tagger_sp_create: 2863 */
 
-/* function tmpmem_acquire_dmem: 65B0 */
+/* function tmpmem_acquire_dmem: 6594 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_MMU_BASE
@@ -1084,9 +1084,9 @@
 #define HIVE_ADDR_sp_MMU_BASE 0x24
 #define HIVE_SIZE_sp_MMU_BASE 8
 
-/* function ia_css_dmaproxy_sp_channel_release: 343C */
+/* function ia_css_dmaproxy_sp_channel_release: 3420 */
 
-/* function ia_css_dmaproxy_sp_is_idle: 341C */
+/* function ia_css_dmaproxy_sp_is_idle: 3400 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_qos_start
@@ -1102,23 +1102,23 @@
 
 /* function isp_hmem_load: B55 */
 
-/* function ia_css_tagger_sp_release_buf_elem: 1FD0 */
+/* function ia_css_tagger_sp_release_buf_elem: 1FB7 */
 
-/* function ia_css_eventq_sp_send: 3492 */
+/* function ia_css_eventq_sp_send: 3476 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_isys_sp_error_cnt
 #define HIVE_MEM_ia_css_isys_sp_error_cnt scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_isys_sp_error_cnt 0x62D4
+#define HIVE_ADDR_ia_css_isys_sp_error_cnt 0x62C4
 #define HIVE_SIZE_ia_css_isys_sp_error_cnt 16
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_isys_sp_error_cnt scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_isys_sp_error_cnt 0x62D4
+#define HIVE_ADDR_sp_ia_css_isys_sp_error_cnt 0x62C4
 #define HIVE_SIZE_sp_ia_css_isys_sp_error_cnt 16
 
-/* function ia_css_tagger_buf_sp_unlock_from_start: 2A42 */
+/* function ia_css_tagger_buf_sp_unlock_from_start: 2A29 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_debug_buffer_ddr_address
@@ -1134,29 +1134,29 @@
 
 /* function sp_isys_copy_request: 714 */
 
-/* function ia_css_rmgr_sp_refcount_retain_vbuf: 6393 */
+/* function ia_css_rmgr_sp_refcount_retain_vbuf: 6377 */
 
 /* function ia_css_thread_sp_set_priority: CCE */
 
 /* function sizeof_hmem: BFC */
 
-/* function tmpmem_release_dmem: 659F */
+/* function tmpmem_release_dmem: 6583 */
 
 /* function cnd_input_system_cfg: 392 */
 
-/* function __ia_css_sp_rawcopy_func_critical: 6F9B */
+/* function __ia_css_sp_rawcopy_func_critical: 6F7F */
 
-/* function ia_css_dmaproxy_sp_set_width_exception: 32A1 */
+/* function ia_css_dmaproxy_sp_set_width_exception: 3285 */
 
 /* function sp_event_assert: 8B1 */
 
-/* function ia_css_flash_sp_init_internal_params: 2C2D */
+/* function ia_css_flash_sp_init_internal_params: 2C14 */
 
-/* function ia_css_tagger_buf_sp_pop_unmarked_and_unlocked: 28F3 */
+/* function ia_css_tagger_buf_sp_pop_unmarked_and_unlocked: 28DA */
 
-/* function __modu: 68F1 */
+/* function __modu: 68D5 */
 
-/* function ia_css_dmaproxy_sp_init_isp_vector: 3126 */
+/* function ia_css_dmaproxy_sp_init_isp_vector: 310A */
 
 /* function isp_vamem_store: 0 */
 
@@ -1172,11 +1172,11 @@
 #define HIVE_ADDR_sp_GDC_BASE 0x44
 #define HIVE_SIZE_sp_GDC_BASE 8
 
-/* function ia_css_queue_local_init: 4B9C */
+/* function ia_css_queue_local_init: 4B80 */
 
-/* function sp_event_proxy_callout_func: 69BE */
+/* function sp_event_proxy_callout_func: 69A2 */
 
-/* function qos_scheduler_schedule_stage: 65F7 */
+/* function qos_scheduler_schedule_stage: 65DB */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_thread_sp_num_ready_threads
@@ -1202,13 +1202,13 @@
 #define HIVE_ADDR_sp_sp_threads_stack_size 0x180
 #define HIVE_SIZE_sp_sp_threads_stack_size 28
 
-/* function ia_css_ispctrl_sp_isp_done_row_striping: 3ECA */
+/* function ia_css_ispctrl_sp_isp_done_row_striping: 3EAE */
 
-/* function __ia_css_isys_sp_isr_text: 5E58 */
+/* function __ia_css_isys_sp_isr_text: 5E3C */
 
-/* function ia_css_queue_dequeue: 4A1A */
+/* function ia_css_queue_dequeue: 49FE */
 
-/* function ia_css_dmaproxy_sp_configure_channel: 6E82 */
+/* function ia_css_dmaproxy_sp_configure_channel: 6E66 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_current_thread_fiber_sp
@@ -1224,7 +1224,7 @@
 
 /* function ia_css_circbuf_pop: FD8 */
 
-/* function memset: 6970 */
+/* function memset: 6954 */
 
 /* function irq_raise_set_token: B6 */
 
@@ -1240,27 +1240,27 @@
 #define HIVE_ADDR_sp_GPIO_BASE 0x3C
 #define HIVE_SIZE_sp_GPIO_BASE 4
 
-/* function ia_css_pipeline_acc_stage_enable: 17F0 */
+/* function ia_css_pipeline_acc_stage_enable: 17D7 */
 
-/* function ia_css_tagger_sp_unlock_exp_id: 2041 */
+/* function ia_css_tagger_sp_unlock_exp_id: 2028 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_ph
 #define HIVE_MEM_isp_ph scalar_processor_2400_dmem
-#define HIVE_ADDR_isp_ph 0x62E4
+#define HIVE_ADDR_isp_ph 0x62D4
 #define HIVE_SIZE_isp_ph 28
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isp_ph scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_ph 0x62E4
+#define HIVE_ADDR_sp_isp_ph 0x62D4
 #define HIVE_SIZE_sp_isp_ph 28
 
-/* function ia_css_isys_sp_token_map_flush: 6058 */
+/* function ia_css_isys_sp_token_map_flush: 603C */
 
-/* function ia_css_ispctrl_sp_init_ds: 374F */
+/* function ia_css_ispctrl_sp_init_ds: 3733 */
 
-/* function get_xmem_base_addr_raw: 3AFA */
+/* function get_xmem_base_addr_raw: 3ADE */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cbs_param
@@ -1288,35 +1288,35 @@
 #define HIVE_ADDR_sp_sem_for_sp_group 0x47A0
 #define HIVE_SIZE_sp_sem_for_sp_group 20
 
-/* function ia_css_framebuf_sp_wait_for_in_frame: 652E */
+/* function ia_css_framebuf_sp_wait_for_in_frame: 6512 */
 
-/* function ia_css_sp_rawcopy_tag_frame: 55BE */
+/* function ia_css_sp_rawcopy_tag_frame: 55A2 */
 
 /* function isp_hmem_clear: B25 */
 
-/* function ia_css_framebuf_sp_release_in_frame: 6571 */
+/* function ia_css_framebuf_sp_release_in_frame: 6555 */
 
-/* function ia_css_isys_sp_backend_snd_acquire_request: 5AAE */
+/* function ia_css_isys_sp_backend_snd_acquire_request: 5A92 */
 
-/* function ia_css_isys_sp_token_map_is_full: 5EDF */
+/* function ia_css_isys_sp_token_map_is_full: 5EC3 */
 
 /* function input_system_acquisition_run: AF9 */
 
-/* function ia_css_ispctrl_sp_start_binary: 35CE */
+/* function ia_css_ispctrl_sp_start_binary: 35B2 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_h_pipe_private_ddr_ptrs
 #define HIVE_MEM_ia_css_bufq_sp_h_pipe_private_ddr_ptrs scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 0x58F4
+#define HIVE_ADDR_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 0x58E0
 #define HIVE_SIZE_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 0x58F4
+#define HIVE_ADDR_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 0x58E0
 #define HIVE_SIZE_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 20
 
-/* function ia_css_eventq_sp_recv: 3464 */
+/* function ia_css_eventq_sp_recv: 3448 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_pool
@@ -1330,9 +1330,9 @@
 #define HIVE_ADDR_sp_isp_pool 0x2E4
 #define HIVE_SIZE_sp_isp_pool 4
 
-/* function ia_css_rmgr_sp_rel_gen: 6260 */
+/* function ia_css_rmgr_sp_rel_gen: 6244 */
 
-/* function css_get_frame_processing_time_end: 1FC0 */
+/* function css_get_frame_processing_time_end: 1FA7 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_event_any_pending_mask
@@ -1346,15 +1346,15 @@
 #define HIVE_ADDR_sp_event_any_pending_mask 0x300
 #define HIVE_SIZE_sp_event_any_pending_mask 8
 
-/* function ia_css_isys_sp_backend_push: 5A65 */
+/* function ia_css_isys_sp_backend_push: 5A49 */
 
 /* function sh_css_decode_tag_descr: 352 */
 
 /* function debug_enqueue_isp: 27B */
 
-/* function qos_scheduler_update_stage_budget: 65E5 */
+/* function qos_scheduler_update_stage_budget: 65C9 */
 
-/* function ia_css_spctrl_sp_uninit: 59A0 */
+/* function ia_css_spctrl_sp_uninit: 5984 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_HIVE_IF_SWITCH_CODE
@@ -1371,16 +1371,16 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_dis_bufs
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_dis_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_dis_bufs 0x5908
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_dis_bufs 0x58F4
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_dis_bufs 140
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_dis_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_dis_bufs 0x5908
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_dis_bufs 0x58F4
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_dis_bufs 140
 
-/* function ia_css_tagger_buf_sp_lock_from_start: 2A76 */
+/* function ia_css_tagger_buf_sp_lock_from_start: 2A5D */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_isp_idle
@@ -1394,11 +1394,11 @@
 #define HIVE_ADDR_sp_sem_for_isp_idle 0x47B4
 #define HIVE_SIZE_sp_sem_for_isp_idle 20
 
-/* function ia_css_dmaproxy_sp_write_byte_addr: 3183 */
+/* function ia_css_dmaproxy_sp_write_byte_addr: 3167 */
 
-/* function ia_css_dmaproxy_sp_init: 30FA */
+/* function ia_css_dmaproxy_sp_init: 30DE */
 
-/* function ia_css_bufq_sp_release_dynamic_buf_clock_tick: 2CFF */
+/* function ia_css_bufq_sp_release_dynamic_buf_clock_tick: 2CE6 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ISP_VAMEM_BASE
@@ -1415,32 +1415,32 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_rawcopy_sp_tagger
 #define HIVE_MEM_ia_css_rawcopy_sp_tagger scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_rawcopy_sp_tagger 0x6294
+#define HIVE_ADDR_ia_css_rawcopy_sp_tagger 0x6284
 #define HIVE_SIZE_ia_css_rawcopy_sp_tagger 24
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_rawcopy_sp_tagger scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_rawcopy_sp_tagger 0x6294
+#define HIVE_ADDR_sp_ia_css_rawcopy_sp_tagger 0x6284
 #define HIVE_SIZE_sp_ia_css_rawcopy_sp_tagger 24
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_exp_ids
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_exp_ids scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_exp_ids 0x5994
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_exp_ids 0x5980
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_exp_ids 70
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_exp_ids scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_exp_ids 0x5994
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_exp_ids 0x5980
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_exp_ids 70
 
-/* function ia_css_queue_item_load: 4C8E */
+/* function ia_css_queue_item_load: 4C72 */
 
-/* function ia_css_spctrl_sp_get_state: 598B */
+/* function ia_css_spctrl_sp_get_state: 596F */
 
-/* function ia_css_isys_sp_token_map_uninit: 6075 */
+/* function ia_css_isys_sp_token_map_uninit: 6059 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_callout_sp_thread
@@ -1468,7 +1468,7 @@
 #define HIVE_ADDR_sp_SP_PMEM_BASE 0x0
 #define HIVE_SIZE_sp_SP_PMEM_BASE 4
 
-/* function ia_css_isys_sp_token_map_snd_acquire_req: 5FE5 */
+/* function ia_css_isys_sp_token_map_snd_acquire_req: 5FC9 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_isp_input_stream_format
@@ -1482,39 +1482,39 @@
 #define HIVE_ADDR_sp_sp_isp_input_stream_format 0x40F8
 #define HIVE_SIZE_sp_sp_isp_input_stream_format 20
 
-/* function __mod: 68DD */
+/* function __mod: 68C1 */
 
-/* function ia_css_dmaproxy_sp_init_dmem_channel: 31E4 */
+/* function ia_css_dmaproxy_sp_init_dmem_channel: 31C8 */
 
 /* function ia_css_thread_sp_join: CFF */
 
-/* function ia_css_dmaproxy_sp_add_command: 6F85 */
+/* function ia_css_dmaproxy_sp_add_command: 6F69 */
 
-/* function ia_css_sp_metadata_thread_func: 583F */
+/* function ia_css_sp_metadata_thread_func: 5823 */
 
-/* function __sp_event_proxy_func_critical: 69AB */
+/* function __sp_event_proxy_func_critical: 698F */
 
-/* function ia_css_sp_metadata_wait: 5952 */
+/* function ia_css_sp_metadata_wait: 5936 */
 
 /* function ia_css_circbuf_peek_from_start: F08 */
 
-/* function ia_css_event_sp_encode: 34EF */
+/* function ia_css_event_sp_encode: 34D3 */
 
 /* function ia_css_thread_sp_run: D72 */
 
 /* function sp_isys_copy_func: 6F6 */
 
-/* function ia_css_isys_sp_backend_flush: 5ACE */
+/* function ia_css_isys_sp_backend_flush: 5AB2 */
 
-/* function ia_css_isys_sp_backend_frame_exists: 59EA */
+/* function ia_css_isys_sp_backend_frame_exists: 59CE */
 
-/* function ia_css_sp_isp_param_init_isp_memories: 4717 */
+/* function ia_css_sp_isp_param_init_isp_memories: 46FB */
 
 /* function register_isr: 8A9 */
 
 /* function irq_raise: C8 */
 
-/* function ia_css_dmaproxy_sp_mmu_invalidate: 30C1 */
+/* function ia_css_dmaproxy_sp_mmu_invalidate: 30A5 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_HIVE_IF_SRST_ADDRESS
@@ -1528,25 +1528,25 @@
 #define HIVE_ADDR_sp_HIVE_IF_SRST_ADDRESS 0x1B8
 #define HIVE_SIZE_sp_HIVE_IF_SRST_ADDRESS 16
 
-/* function pipeline_sp_initialize_stage: 1924 */
+/* function pipeline_sp_initialize_stage: 190B */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_isys_sp_frontend_states
 #define HIVE_MEM_ia_css_isys_sp_frontend_states scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_isys_sp_frontend_states 0x62C8
+#define HIVE_ADDR_ia_css_isys_sp_frontend_states 0x62B8
 #define HIVE_SIZE_ia_css_isys_sp_frontend_states 12
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_isys_sp_frontend_states scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_isys_sp_frontend_states 0x62C8
+#define HIVE_ADDR_sp_ia_css_isys_sp_frontend_states 0x62B8
 #define HIVE_SIZE_sp_ia_css_isys_sp_frontend_states 12
 
-/* function ia_css_dmaproxy_sp_read_byte_addr_mmio: 6E54 */
+/* function ia_css_dmaproxy_sp_read_byte_addr_mmio: 6E38 */
 
-/* function ia_css_ispctrl_sp_done_ds: 3736 */
+/* function ia_css_ispctrl_sp_done_ds: 371A */
 
-/* function ia_css_sp_isp_param_get_mem_inits: 46F2 */
+/* function ia_css_sp_isp_param_get_mem_inits: 46D6 */
 
 /* function ia_css_parambuf_sp_init_buffer_queues: 13D0 */
 
@@ -1579,46 +1579,46 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_frames
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_frames scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_frames 0x59DC
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_frames 0x59C8
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_frames 280
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_frames scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_frames 0x59DC
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_frames 0x59C8
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_frames 280
 
-/* function qos_scheduler_init_stage_budget: 661E */
+/* function qos_scheduler_init_stage_budget: 6602 */
 
-/* function ia_css_isys_sp_backend_release: 5B43 */
+/* function ia_css_isys_sp_backend_release: 5B27 */
 
-/* function ia_css_isys_sp_backend_destroy: 5B6D */
+/* function ia_css_isys_sp_backend_destroy: 5B51 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp2host_buffer_queue_handle
 #define HIVE_MEM_sp2host_buffer_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp2host_buffer_queue_handle 0x5AF4
+#define HIVE_ADDR_sp2host_buffer_queue_handle 0x5AE0
 #define HIVE_SIZE_sp2host_buffer_queue_handle 96
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp2host_buffer_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp2host_buffer_queue_handle 0x5AF4
+#define HIVE_ADDR_sp_sp2host_buffer_queue_handle 0x5AE0
 #define HIVE_SIZE_sp_sp2host_buffer_queue_handle 96
 
-/* function ia_css_isys_sp_token_map_check_mipi_frame_size: 5FA9 */
+/* function ia_css_isys_sp_token_map_check_mipi_frame_size: 5F8D */
 
-/* function ia_css_ispctrl_sp_init_isp_vars: 4411 */
+/* function ia_css_ispctrl_sp_init_isp_vars: 43F5 */
 
-/* function ia_css_isys_sp_frontend_has_empty_mipi_buffer_cb: 5BBF */
+/* function ia_css_isys_sp_frontend_has_empty_mipi_buffer_cb: 5BA3 */
 
 /* function sp_warning: 8DC */
 
-/* function ia_css_rmgr_sp_vbuf_enqueue: 6353 */
+/* function ia_css_rmgr_sp_vbuf_enqueue: 6337 */
 
-/* function ia_css_tagger_sp_tag_exp_id: 214B */
+/* function ia_css_tagger_sp_tag_exp_id: 2132 */
 
-/* function ia_css_dmaproxy_sp_write: 319A */
+/* function ia_css_dmaproxy_sp_write: 317E */
 
 /* function ia_css_parambuf_sp_release_in_param: 1250 */
 
@@ -1637,29 +1637,29 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_isp_addresses
 #define HIVE_MEM_sp_isp_addresses scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_addresses 0x5F44
+#define HIVE_ADDR_sp_isp_addresses 0x5F34
 #define HIVE_SIZE_sp_isp_addresses 172
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_isp_addresses scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_isp_addresses 0x5F44
+#define HIVE_ADDR_sp_sp_isp_addresses 0x5F34
 #define HIVE_SIZE_sp_sp_isp_addresses 172
 
-/* function ia_css_rmgr_sp_acq_gen: 6278 */
+/* function ia_css_rmgr_sp_acq_gen: 625C */
 
 /* function receiver_reg_load: AD0 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isps
 #define HIVE_MEM_isps scalar_processor_2400_dmem
-#define HIVE_ADDR_isps 0x6300
+#define HIVE_ADDR_isps 0x62F0
 #define HIVE_SIZE_isps 28
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isps scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isps 0x6300
+#define HIVE_ADDR_sp_isps 0x62F0
 #define HIVE_SIZE_sp_isps 28
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -1674,25 +1674,25 @@
 #define HIVE_ADDR_sp_host_sp_queues_initialized 0x410C
 #define HIVE_SIZE_sp_host_sp_queues_initialized 4
 
-/* function ia_css_queue_uninit: 4B5A */
+/* function ia_css_queue_uninit: 4B3E */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_ispctrl_sp_isp_started
 #define HIVE_MEM_ia_css_ispctrl_sp_isp_started scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_ispctrl_sp_isp_started 0x5BFC
+#define HIVE_ADDR_ia_css_ispctrl_sp_isp_started 0x5BE8
 #define HIVE_SIZE_ia_css_ispctrl_sp_isp_started 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_ispctrl_sp_isp_started scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_ispctrl_sp_isp_started 0x5BFC
+#define HIVE_ADDR_sp_ia_css_ispctrl_sp_isp_started 0x5BE8
 #define HIVE_SIZE_sp_ia_css_ispctrl_sp_isp_started 4
 
-/* function ia_css_bufq_sp_release_dynamic_buf: 2D6B */
+/* function ia_css_bufq_sp_release_dynamic_buf: 2D52 */
 
-/* function ia_css_dmaproxy_sp_set_height_exception: 3292 */
+/* function ia_css_dmaproxy_sp_set_height_exception: 3276 */
 
-/* function ia_css_dmaproxy_sp_init_vmem_channel: 3217 */
+/* function ia_css_dmaproxy_sp_init_vmem_channel: 31FB */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_num_ready_threads
@@ -1706,7 +1706,7 @@
 #define HIVE_ADDR_sp_num_ready_threads 0x49E4
 #define HIVE_SIZE_sp_num_ready_threads 4
 
-/* function ia_css_dmaproxy_sp_write_byte_addr_mmio: 316C */
+/* function ia_css_dmaproxy_sp_write_byte_addr_mmio: 3150 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_vbuf_spref
@@ -1732,7 +1732,7 @@
 #define HIVE_ADDR_sp_sp_metadata_thread 0x4998
 #define HIVE_SIZE_sp_sp_metadata_thread 68
 
-/* function ia_css_queue_enqueue: 4AA4 */
+/* function ia_css_queue_enqueue: 4A88 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_flash_sp_request
@@ -1746,7 +1746,7 @@
 #define HIVE_ADDR_sp_ia_css_flash_sp_request 0x4A98
 #define HIVE_SIZE_sp_ia_css_flash_sp_request 4
 
-/* function ia_css_dmaproxy_sp_vmem_write: 313D */
+/* function ia_css_dmaproxy_sp_vmem_write: 3121 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_tagger_frames
@@ -1760,7 +1760,7 @@
 #define HIVE_ADDR_sp_tagger_frames 0x49EC
 #define HIVE_SIZE_sp_tagger_frames 168
 
-/* function ia_css_isys_sp_token_map_snd_capture_req: 6007 */
+/* function ia_css_isys_sp_token_map_snd_capture_req: 5FEB */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_reading_if
@@ -1776,11 +1776,11 @@
 
 /* function sp_generate_interrupts: 95B */
 
-/* function ia_css_pipeline_sp_start: 1837 */
+/* function ia_css_pipeline_sp_start: 181E */
 
-/* function ia_css_sp_rawcopy_init: 5081 */
+/* function ia_css_sp_rawcopy_init: 5065 */
 
-/* function tmr_clock_read: 13F1 */
+/* function tmr_clock_read: 13EA */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ISP_BAMEM_BASE
@@ -1794,21 +1794,21 @@
 #define HIVE_ADDR_sp_ISP_BAMEM_BASE 0x2F8
 #define HIVE_SIZE_sp_ISP_BAMEM_BASE 4
 
-/* function ia_css_isys_sp_frontend_rcv_capture_ack: 5C6E */
+/* function ia_css_isys_sp_frontend_rcv_capture_ack: 5C52 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_sems_for_sp2host_buf_queues
 #define HIVE_MEM_ia_css_bufq_sp_sems_for_sp2host_buf_queues scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_sems_for_sp2host_buf_queues 0x5B54
+#define HIVE_ADDR_ia_css_bufq_sp_sems_for_sp2host_buf_queues 0x5B40
 #define HIVE_SIZE_ia_css_bufq_sp_sems_for_sp2host_buf_queues 160
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues 0x5B54
+#define HIVE_ADDR_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues 0x5B40
 #define HIVE_SIZE_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues 160
 
-/* function css_get_frame_processing_time_start: 1FC8 */
+/* function css_get_frame_processing_time_start: 1FAF */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cbs_frame
@@ -1838,9 +1838,9 @@
 #define HIVE_ADDR_sp_sem_for_str2mem 0x47EC
 #define HIVE_SIZE_sp_sem_for_str2mem 20
 
-/* function ia_css_tagger_buf_sp_is_marked_from_start: 2ADE */
+/* function ia_css_tagger_buf_sp_is_marked_from_start: 2AC5 */
 
-/* function ia_css_bufq_sp_acquire_dynamic_buf: 2F23 */
+/* function ia_css_bufq_sp_acquire_dynamic_buf: 2F07 */
 
 /* function ia_css_circbuf_destroy: 101D */
 
@@ -1856,13 +1856,13 @@
 #define HIVE_ADDR_sp_ISP_PMEM_BASE 0xC
 #define HIVE_SIZE_sp_ISP_PMEM_BASE 4
 
-/* function ia_css_sp_isp_param_mem_load: 4685 */
+/* function ia_css_sp_isp_param_mem_load: 4669 */
 
-/* function __div: 6895 */
+/* function __div: 6879 */
 
-/* function ia_css_isys_sp_frontend_create: 5E3F */
+/* function ia_css_isys_sp_frontend_create: 5E23 */
 
-/* function ia_css_rmgr_sp_refcount_release_vbuf: 6372 */
+/* function ia_css_rmgr_sp_refcount_release_vbuf: 6356 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_flash_sp_in_use
@@ -1876,7 +1876,7 @@
 #define HIVE_ADDR_sp_ia_css_flash_sp_in_use 0x4A9C
 #define HIVE_SIZE_sp_ia_css_flash_sp_in_use 4
 
-/* function ia_css_thread_sem_sp_wait: 6B78 */
+/* function ia_css_thread_sem_sp_wait: 6B5C */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_sleep_mode
@@ -1890,7 +1890,7 @@
 #define HIVE_ADDR_sp_sp_sleep_mode 0x4110
 #define HIVE_SIZE_sp_sp_sleep_mode 4
 
-/* function ia_css_tagger_buf_sp_push: 29D9 */
+/* function ia_css_tagger_buf_sp_push: 29C0 */
 
 /* function mmu_invalidate_cache: D3 */
 
@@ -1906,7 +1906,7 @@
 #define HIVE_ADDR_sp_sp_max_cb_elems 0x148
 #define HIVE_SIZE_sp_sp_max_cb_elems 8
 
-/* function ia_css_queue_remote_init: 4B7C */
+/* function ia_css_queue_remote_init: 4B60 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_stop_req
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/camera/pipe/interface/ia_css_pipe_binarydesc.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/camera/pipe/interface/ia_css_pipe_binarydesc.h
index 616789d9..b5b0e60 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/camera/pipe/interface/ia_css_pipe_binarydesc.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/camera/pipe/interface/ia_css_pipe_binarydesc.h
@@ -282,16 +282,5 @@ extern void ia_css_pipe_get_ldc_binarydesc(
 	struct ia_css_frame_info *in_info,
 	struct ia_css_frame_info *out_info);
 
-/** @brief Calculates the required BDS factor
- *
- * @param[in] input_res
- * @param[in] output_res
- * @param[in/out] bds_factor
- * @return	IA_CSS_SUCCESS or error code upon error.
- */
-enum ia_css_err binarydesc_calculate_bds_factor(
-	struct ia_css_resolution input_res,
-	struct ia_css_resolution output_res,
-	unsigned int *bds_factor);
 
 #endif /* __IA_CSS_PIPE_BINARYDESC_H__ */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/camera/pipe/src/pipe_binarydesc.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/camera/pipe/src/pipe_binarydesc.c
index 23867ef..79996e2 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/camera/pipe/src/pipe_binarydesc.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/camera/pipe/src/pipe_binarydesc.c
@@ -160,7 +160,7 @@ enum ia_css_err sh_css_bds_factor_get_numerator_denominator(
 	return IA_CSS_ERR_INVALID_ARGUMENTS;
 }
 
-enum ia_css_err binarydesc_calculate_bds_factor(
+static enum ia_css_err binarydesc_calculate_bds_factor(
 	struct ia_css_resolution input_res,
 	struct ia_css_resolution output_res,
 	unsigned int *bds_factor)
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/css_api_version.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/css_api_version.h
index 8c90164..ffa91d0 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/css_api_version.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/css_api_version.h
@@ -35,7 +35,7 @@ The version string has four dot-separated numbers, read left to right:
 
 */
 
-#define CSS_API_VERSION_STRING	"2.1.14.20"
+#define CSS_API_VERSION_STRING	"2.1.14.19"
 
 /*
 Change log
@@ -317,10 +317,7 @@ v2.1.14.17 (21 changes parallel), eliminate two_pixels_per_clock field
 v2.1.14.18 (2 changes parallel), Fix copyright headers (no functional change)
 - No functional change; only fixes copyright headers
 
-v2.1.14.20 (1 changes parallel), Return an error when both DPC and BDS are enabled in a pipe config
-- Return an error when both DPC and BDS are enabled in a pipe config
-
-v2.1.14.20 (2 changes parallel), ia_css_skc_dvs_statistics field size change
+v2.1.14.19 (1 changes parallel), ia_css_skc_dvs_statistics field size change
 - ia_css_skc_dvs_statistics field size change
 
 */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css.h
index 5eb0c8b..d90c945 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150311_1503 */
-/* Release Version: irci_master_20150311_1503 */
+/* Release Version: irci_master_20150308_0200 */
+/* Release Version: irci_master_20150308_0200 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_acc_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_acc_types.h
index 075c9cf..1da741b 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_acc_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_acc_types.h
@@ -49,15 +49,6 @@ enum ia_css_acc_type {
 	IA_CSS_ACC_STANDALONE,	/**< Stand-alone acceleration */
 };
 
-/** Cells types
- */
-enum ia_css_cell_type {
-	IA_CSS_SP0 = 0,
-	IA_CSS_SP1,
-	IA_CSS_ISP,
-	MAX_NUM_OF_CELLS
-};
-
 /** Firmware types.
  */
 enum ia_css_fw_type {
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_host_data.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_host_data.h
index bb04670..f3f10cd 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_host_data.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_host_data.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150311_1503 */
-/* Release Version: irci_master_20150311_1503 */
+/* Release Version: irci_master_20150308_0200 */
+/* Release Version: irci_master_20150308_0200 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_types.h
index 27262f0..4171dd1 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_types.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150311_1503 */
-/* Release Version: irci_master_20150311_1503 */
+/* Release Version: irci_master_20150308_0200 */
+/* Release Version: irci_master_20150308_0200 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_version_data.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_version_data.h
index 1b2bffd7..0197d35 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_version_data.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_version_data.h
@@ -22,7 +22,7 @@
 #define __IA_CSS_VERSION_DATA_H
 
 
-#define CSS_VERSION_STRING "REL:20150311_11.3_1616; API:2.1.14.20; GIT:scci_20150310_2052_#3450aeadf65d330764f7626eb9d1723c19957ba9; SDK:/nfs/iir/disks/iir_hivepackages_003/iir_hivepkgs_disk017/Css_Mizuchi/packages/Css_Mizuchi/int_css_mizuchi_20140829_1053; USER:viedifw; "
+#define CSS_VERSION_STRING "REL:20150308_10.0_0310; API:2.1.14.19; GIT:irci_20150307_1500__d198ce#d198ce8e3432d9392d0f5d53552b33572a0d37ec; SDK:/nfs/iir/disks/iir_hivepackages_003/iir_hivepkgs_disk017/Css_Mizuchi/packages/Css_Mizuchi/int_css_mizuchi_20140829_1053; USER:viedifw; "
 
 
 #endif
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr.host.c
index e4fc135..4b2aec4 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr.host.c
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150311_1503 */
-/* Release Version: irci_master_20150311_1503 */
+/* Release Version: irci_master_20150308_0200 */
+/* Release Version: irci_master_20150308_0200 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr.host.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr.host.h
index 3312505..16d6a62 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr.host.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr.host.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150311_1503 */
-/* Release Version: irci_master_20150311_1503 */
+/* Release Version: irci_master_20150308_0200 */
+/* Release Version: irci_master_20150308_0200 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr_param.h
index 83c6c17..33a10c1 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr_param.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150311_1503 */
-/* Release Version: irci_master_20150311_1503 */
+/* Release Version: irci_master_20150308_0200 */
+/* Release Version: irci_master_20150308_0200 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr_types.h
index cfdeddb..0c9a676 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr_types.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150311_1503 */
-/* Release Version: irci_master_20150311_1503 */
+/* Release Version: irci_master_20150308_0200 */
+/* Release Version: irci_master_20150308_0200 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnr_3.0/ia_css_xnr3.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnr_3.0/ia_css_xnr3.host.c
index a783abb..bdbf4e5 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnr_3.0/ia_css_xnr3.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnr_3.0/ia_css_xnr3.host.c
@@ -85,15 +85,13 @@ compute_alpha(int sigma)
 static int32_t
 compute_coring(int coring)
 {
-	int32_t isp_coring;
 	int32_t isp_scale = XNR_CORING_SCALE_FACTOR;
 	int32_t host_scale = IA_CSS_XNR3_CORING_SCALE;
 	int32_t offset = host_scale / 2; /* fixed-point 0.5 */
 
 	/* Convert from public host-side scale factor to isp-side scale
-	 * factor. Clip to [0, isp_scale-1). */
-	isp_coring = ((coring * isp_scale) + offset) / host_scale;
-	return min(max(isp_coring, 0), isp_scale - 1);
+	 * factor. */
+	return ((coring * isp_scale) + offset) / host_scale;
 }
 
 /*
@@ -126,8 +124,6 @@ ia_css_xnr3_encode(
 	/* The adjust factor is the next power of 2
 	   w.r.t. the kernel size*/
 	int adjust_factor = ceil_pow2(kernel_size);
-	int32_t max_diff = (1 << (ISP_VEC_ELEMBITS - 1)) - 1;
-	int32_t min_diff = -(1 << (ISP_VEC_ELEMBITS - 1));
 
 	int32_t alpha_y0 = compute_alpha(from->sigma.y0);
 	int32_t alpha_y1 = compute_alpha(from->sigma.y1);
@@ -135,16 +131,11 @@ ia_css_xnr3_encode(
 	int32_t alpha_u1 = compute_alpha(from->sigma.u1);
 	int32_t alpha_v0 = compute_alpha(from->sigma.v0);
 	int32_t alpha_v1 = compute_alpha(from->sigma.v1);
-	int32_t alpha_ydiff = (alpha_y1 - alpha_y0) * adjust_factor / kernel_size;
-	int32_t alpha_udiff = (alpha_u1 - alpha_u0) * adjust_factor / kernel_size;
-	int32_t alpha_vdiff = (alpha_v1 - alpha_v0) * adjust_factor / kernel_size;
 
 	int32_t coring_u0 = compute_coring(from->coring.u0);
 	int32_t coring_u1 = compute_coring(from->coring.u1);
 	int32_t coring_v0 = compute_coring(from->coring.v0);
 	int32_t coring_v1 = compute_coring(from->coring.v1);
-	int32_t coring_udiff = (coring_u1 - coring_u0) * adjust_factor / kernel_size;
-	int32_t coring_vdiff = (coring_v1 - coring_v0) * adjust_factor / kernel_size;
 
 	int32_t blending = compute_blending(from->blending.strength);
 
@@ -154,15 +145,15 @@ ia_css_xnr3_encode(
 	to->alpha.y0 = alpha_y0;
 	to->alpha.u0 = alpha_u0;
 	to->alpha.v0 = alpha_v0;
-	to->alpha.ydiff = min(max(alpha_ydiff, min_diff), max_diff);
-	to->alpha.udiff = min(max(alpha_udiff, min_diff), max_diff);
-	to->alpha.vdiff = min(max(alpha_vdiff, min_diff), max_diff);
+	to->alpha.ydiff = (alpha_y1 - alpha_y0) * adjust_factor / kernel_size;
+	to->alpha.udiff = (alpha_u1 - alpha_u0) * adjust_factor / kernel_size;
+	to->alpha.vdiff = (alpha_v1 - alpha_v0) * adjust_factor / kernel_size;
 
 	/* coring parameters are expressed in q1.NN format */
 	to->coring.u0 = coring_u0;
 	to->coring.v0 = coring_v0;
-	to->coring.udiff = min(max(coring_udiff, min_diff), max_diff);
-	to->coring.vdiff = min(max(coring_vdiff, min_diff), max_diff);
+	to->coring.udiff = (coring_u1 - coring_u0) * adjust_factor / kernel_size;
+	to->coring.vdiff = (coring_v1 - coring_v0) * adjust_factor / kernel_size;
 
 	/* blending strength is expressed in q1.NN format */
 	to->blending.strength = blending;
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/runtime/binary/src/binary.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/runtime/binary/src/binary.c
index a7e4b5a..48fa021 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/runtime/binary/src/binary.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/runtime/binary/src/binary.c
@@ -531,7 +531,7 @@ enum ia_css_err
 ia_css_binary_init_infos(void)
 {
 	unsigned int i;
-	unsigned int num_of_isp_binaries = sh_css_num_binaries - NUM_OF_SPS - NUM_OF_BLS;
+	unsigned int num_of_isp_binaries = sh_css_num_binaries - NUM_OF_SPS;
 
 	if (num_of_isp_binaries == 0)
 		return IA_CSS_SUCCESS;
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/runtime/spctrl/interface/ia_css_spctrl.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/runtime/spctrl/interface/ia_css_spctrl.h
index 9feba44..bb4d157 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/runtime/spctrl/interface/ia_css_spctrl.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/runtime/spctrl/interface/ia_css_spctrl.h
@@ -34,8 +34,6 @@ typedef struct {
 	char      *program_name;    /**< not used on hardware, only for simulation */
 } ia_css_spctrl_cfg;
 
-/* Get the code addr in DDR of SP */
-hrt_vaddress get_sp_code_addr(sp_ID_t  sp_id);
 
 /* ! Load firmware on to specfied SP
 */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/runtime/spctrl/src/spctrl.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/runtime/spctrl/src/spctrl.c
index d4eec0b..8718361 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/runtime/spctrl/src/spctrl.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/runtime/spctrl/src/spctrl.c
@@ -123,11 +123,6 @@ enum ia_css_err ia_css_spctrl_load_fw(sp_ID_t sp_id,
 	return IA_CSS_SUCCESS;
 }
 
-hrt_vaddress get_sp_code_addr(sp_ID_t  sp_id)
-{
-	return spctrl_cofig_info[sp_id].code_addr;
-}
-
 enum ia_css_err ia_css_spctrl_unload_fw(sp_ID_t sp_id)
 {
 	if ((sp_id >= N_SP_ID) || ((sp_id < N_SP_ID) && (!spctrl_loaded[sp_id])))
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css.c
index 8e271cb..fd6474d 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css.c
@@ -96,9 +96,6 @@ static int thread_alive;
 
 #include "isp/modes/interface/input_buf.isp.h"
 
-#if defined(HAS_BL)
-#include "support/bootloader/interface/ia_css_blctrl.h"
-#endif
 #if defined(HAS_RES_MGR)
 #include "components/acc_cluster/gen/host/acc_cluster.host.h"
 #endif
@@ -112,9 +109,6 @@ static int thread_alive;
 #if defined(HAS_SEC_SP)
 #define SP1_PROG_NAME "sp1"
 #endif /* HAS_SEC_SP */
-#if defined(HAS_BL)
-#define BL_PROG_NAME "bootloader"
-#endif
 /* Size of Refcount List */
 #define REFCOUNT_SIZE 1000
 
@@ -1469,34 +1463,6 @@ enable_interrupts(enum ia_css_irq_type irq_type)
 	IA_CSS_LEAVE_PRIVATE("");
 }
 
-#if defined(HAS_BL)
-static bool sh_css_setup_blctrl_config(const struct ia_css_fw_info *fw,
-							const char *program,
-							ia_css_blctrl_cfg  *blctrl_cfg)
-{
-	if((fw == NULL)||(blctrl_cfg == NULL))
-		return false;
-	blctrl_cfg->bl_entry = 0;
-	blctrl_cfg->program_name = (char *)(program);
-
-#if !defined(C_RUN) && !defined(HRT_UNSCHED)
-	blctrl_cfg->ddr_data_offset =  fw->blob.data_source;
-	blctrl_cfg->dmem_data_addr = fw->blob.data_target;
-	blctrl_cfg->dmem_bss_addr = fw->blob.bss_target;
-	blctrl_cfg->data_size = fw->blob.data_size ;
-	blctrl_cfg->bss_size = fw->blob.bss_size;
-
-	blctrl_cfg->blctrl_state_dmem_addr = fw->info.bl.sw_state;
-	blctrl_cfg->blctrl_dma_cmd_list = fw->info.bl.dma_cmd_list;
-	blctrl_cfg->blctrl_nr_of_dma_cmds = fw->info.bl.num_dma_cmds;
-
-	blctrl_cfg->code_size = fw->blob.size;
-	blctrl_cfg->code      = fw->blob.code;
-	blctrl_cfg->bl_entry  = fw->info.bl.bl_entry; /* entry function ptr on Bootloader */
-#endif
-	return true;
-}
-#endif
 static bool sh_css_setup_spctrl_config(const struct ia_css_fw_info *fw,
 							const char * program,
 							ia_css_spctrl_cfg  *spctrl_cfg)
@@ -1615,9 +1581,6 @@ ia_css_init(const struct ia_css_env *env,
 {
 	enum ia_css_err err;
 	ia_css_spctrl_cfg spctrl_cfg;
-#if defined(HAS_BL)
-	ia_css_blctrl_cfg blctrl_cfg;
-#endif
 #if defined(HAS_SEC_SP)
 	ia_css_spctrl_cfg sp1ctrl_cfg;
 #endif /* HAS_SEC_SP */
@@ -1784,24 +1747,6 @@ ia_css_init(const struct ia_css_env *env,
 	}
 #endif /* HAS_SEC_SP */
 
-#if defined(HAS_BL)
-	if (!sh_css_setup_blctrl_config(&sh_css_bl_fw, BL_PROG_NAME, &blctrl_cfg))
-		return IA_CSS_ERR_INTERNAL_ERROR;
-	err = ia_css_blctrl_load_fw(&blctrl_cfg);
-	if (err != IA_CSS_SUCCESS) {
-		IA_CSS_LEAVE_ERR(err);
-		return err;
-	}
-#if defined(HAS_SEC_SP)
-	err = ia_css_blctrl_add_target_fw_info(&sh_css_sp1_fw, IA_CSS_SP1,
-					 get_sp_code_addr(SP1_ID));
-#endif
-	if (err != IA_CSS_SUCCESS) {
-		IA_CSS_LEAVE_ERR(err);
-		return err;
-	}
-#endif /* HAS_BL */
-
 #if defined(HRT_CSIM)
 	/**
 	 * In compiled simulator context include debug support by default.
@@ -2594,9 +2539,6 @@ ia_css_uninit(void)
 	sh_css_sp1_set_sp1_running(false);
 #endif /* HAS_SEC_SP */
 
-#if defined(HAS_BL)
-	ia_css_blctrl_unload_fw();
-#endif
 #if defined(USE_INPUT_SYSTEM_VERSION_2) || defined(USE_INPUT_SYSTEM_VERSION_2401)
 	/* check and free any remaining mipi frames */
 	free_mipi_frames(NULL);
@@ -9891,39 +9833,6 @@ ia_css_pipe_get_isp_pipe_version(const struct ia_css_pipe *pipe)
 	return (unsigned int)pipe->config.isp_pipe_version;
 }
 
-#if defined(HAS_BL)
-#define BL_START_TIMEOUT_US 30000000
-static enum ia_css_err
-ia_css_start_bl(void)
-{
-	enum ia_css_err err = IA_CSS_SUCCESS;
-	unsigned long timeout;
-
-	IA_CSS_ENTER("");
-	sh_css_start_bl();
-	/* waiting for the Bootloader to complete execution */
-	timeout = BL_START_TIMEOUT_US;
-	while((ia_css_blctrl_get_state() == BOOTLOADER_BUSY) && timeout) {
-		timeout--;
-		hrt_sleep();
-	}
-	ia_css_debug_dtrace(IA_CSS_DEBUG_TRACE,
-			    "Bootloader state %d\n", ia_css_blctrl_get_state());
-	if (timeout == 0) {
-		ia_css_debug_dtrace(IA_CSS_DEBUG_ERROR,
-				    "Bootloader Execution Timeout\n");
-		err = IA_CSS_ERR_INTERNAL_ERROR;
-	}
-	if (ia_css_blctrl_get_state() != BOOTLOADER_OK) {
-		ia_css_debug_dtrace(IA_CSS_DEBUG_ERROR,
-				    "Bootloader Execution Failed\n");
-		err = IA_CSS_ERR_INTERNAL_ERROR;
-	}
-	IA_CSS_LEAVE_ERR(err);
-	return err;
-}
-#endif
-
 #define SP_START_TIMEOUT_US 30000000
 
 #if defined(HAS_SEC_SP)
@@ -9960,15 +9869,6 @@ ia_css_start_sp(void)
 	enum ia_css_err err = IA_CSS_SUCCESS;
 
 	IA_CSS_ENTER("");
-#if defined(HAS_BL)
-	/* Starting bootloader before Sp0 and Sp1
-	 * and not exposing CSS API */
-	err = ia_css_start_bl();
-	if (err != IA_CSS_SUCCESS) {
-		IA_CSS_LEAVE("Bootloader fails");
-		return err;
-	}
-#endif
 	sh_css_sp_start_isp();
 
 	/* waiting for the SP is completely started */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_firmware.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_firmware.c
index 19d57631..d326082 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_firmware.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_firmware.c
@@ -47,10 +47,10 @@ struct fw_param {
 /* Warning: same order as SH_CSS_BINARY_ID_* */
 static struct firmware_header *firmware_header;
 
-/* The string STR(irci_master_20150311_1503) is a place holder
+/* The string STR(irci_master_20150308_0200) is a place holder
  * which will be replaced with the actual RELEASE_VERSION
  * during package generation. Please do not modify  */
-static const char *release_version = STR(irci_master_20150311_1503);
+static const char *release_version = STR(irci_master_20150308_0200);
 
 #define MAX_FW_REL_VER_NAME	300
 static char FW_rel_ver_name[MAX_FW_REL_VER_NAME] = "---";
@@ -59,9 +59,6 @@ struct ia_css_fw_info	  sh_css_sp_fw;
 #if defined(HAS_SEC_SP)
 struct ia_css_fw_info	  sh_css_sp1_fw;
 #endif /* HAS_SEC_SP */
-#if defined(HAS_BL)
-struct ia_css_fw_info     sh_css_bl_fw;
-#endif /* HAS_BL */
 struct ia_css_blob_descr *sh_css_blob_info; /* Only ISP blob info (no SP) */
 unsigned		  sh_css_num_binaries; /* This includes 1 SP binary */
 
@@ -80,7 +77,7 @@ char *sh_css_get_fw_version(void)
 
 /* Setup sp/sp1 binary */
 static enum ia_css_err
-setup_binary(struct ia_css_fw_info *fw, const char *fw_data, struct ia_css_fw_info *sh_css_fw, unsigned binary_id)
+setup_sp(struct ia_css_fw_info *fw, const char *fw_data, struct ia_css_fw_info *sh_css_sp_sp1_fw, unsigned sp_id)
 {
 	const char *blob_data;
 
@@ -89,20 +86,20 @@ setup_binary(struct ia_css_fw_info *fw, const char *fw_data, struct ia_css_fw_in
 
 	blob_data = fw_data + fw->blob.offset;
 
-	*sh_css_fw = *fw;
+	*sh_css_sp_sp1_fw = *fw;
 
 #if defined(C_RUN) || defined(HRT_UNSCHED)
-	sh_css_fw->blob.code = sh_css_malloc(1);
+	sh_css_sp_sp1_fw->blob.code = sh_css_malloc(1);
 #else
-	sh_css_fw->blob.code = sh_css_malloc(fw->blob.size);
+	sh_css_sp_sp1_fw->blob.code = sh_css_malloc(fw->blob.size);
 #endif
 
-	if (sh_css_fw->blob.code == NULL)
+	if (sh_css_sp_sp1_fw->blob.code == NULL)
 		return IA_CSS_ERR_CANNOT_ALLOCATE_MEMORY;
 
-	memcpy((void *)sh_css_fw->blob.code, blob_data, fw->blob.size);
-	sh_css_fw->blob.data = (char *)sh_css_fw->blob.code + fw->blob.data_source;
-	fw_minibuffer[binary_id].buffer = sh_css_fw->blob.code;
+	memcpy((void *)sh_css_sp_sp1_fw->blob.code, blob_data, fw->blob.size);
+	sh_css_sp_sp1_fw->blob.data = (char *)sh_css_sp_sp1_fw->blob.code + fw->blob.data_source;
+	fw_minibuffer[sp_id].buffer = sh_css_sp_sp1_fw->blob.code;
 
 	return IA_CSS_SUCCESS;
 }
@@ -137,9 +134,6 @@ sh_css_load_blob_info(const char *fw, const struct ia_css_fw_info *bi, struct ia
 #if defined(HAS_SEC_SP)
 	|| (bi->type == ia_css_sp1_firmware)
 #endif /* HAS_SEC_SP */
-#if defined(HAS_BL)
-	|| (bi->type == ia_css_bootloader_firmware)
-#endif /* HAS_BL */
 	)
 	{
 		char *namebuffer;
@@ -240,9 +234,9 @@ sh_css_load_firmware(const char *fw_data,
 
 	sh_css_num_binaries = file_header->binary_nr;
 	/* Only allocate memory for ISP blob info */
-	if (sh_css_num_binaries > (NUM_OF_SPS + NUM_OF_BLS)) {
+	if (sh_css_num_binaries > NUM_OF_SPS) {
 		sh_css_blob_info = sh_css_malloc(
-					(sh_css_num_binaries - (NUM_OF_SPS + NUM_OF_BLS)) *
+					(sh_css_num_binaries - NUM_OF_SPS) *
 					sizeof(*sh_css_blob_info));
 		if (sh_css_blob_info == NULL)
 			return IA_CSS_ERR_CANNOT_ALLOCATE_MEMORY;
@@ -275,36 +269,26 @@ sh_css_load_firmware(const char *fw_data,
 		if (bi->type == ia_css_sp_firmware) {
 			if (i != SP_FIRMWARE)
 				return IA_CSS_ERR_INTERNAL_ERROR;
-			err = setup_binary(bi, fw_data, &sh_css_sp_fw, i);
+			err = setup_sp(bi, fw_data, &sh_css_sp_fw, i);
 			if (err != IA_CSS_SUCCESS)
 				return err;
 #if defined(HAS_SEC_SP)
 		} else if (bi->type == ia_css_sp1_firmware) {
 			if (i != SP1_FIRMWARE)
 				return IA_CSS_ERR_INTERNAL_ERROR;
-			err = setup_binary(bi, fw_data, &sh_css_sp1_fw, i);
+			err = setup_sp(bi, fw_data, &sh_css_sp1_fw, i);
 			if (err != IA_CSS_SUCCESS)
 				return err;
 #endif /* HAS_SEC_SP */
-#if defined(HAS_BL)
-		} else if (bi->type == ia_css_bootloader_firmware) {
-			if (i != BOOTLOADER_FIRMWARE)
-				return IA_CSS_ERR_INTERNAL_ERROR;
-			err = setup_binary(bi, fw_data, &sh_css_bl_fw, i);
-			if (err != IA_CSS_SUCCESS)
-				return err;
-			IA_CSS_LOG("Bootloader binary recognized\n");
-#endif
 		} else {
-			/* All subsequent binaries (including bootloaders) (i>NUM_OF_SPS+NUM_OF_BLS) are ISP firmware */
-			if (i < (NUM_OF_SPS + NUM_OF_BLS))
+			/* All subsequent binaries (i>NUM_OF_SPS) are ISP firmware */
+			if (i < NUM_OF_SPS)
 				return IA_CSS_ERR_INTERNAL_ERROR;
-
 			if (bi->type != ia_css_isp_firmware)
 				return IA_CSS_ERR_INTERNAL_ERROR;
 			if (sh_css_blob_info == NULL) /* cannot happen but KW does not see this */
 				return IA_CSS_ERR_INTERNAL_ERROR;
-			sh_css_blob_info[i-(NUM_OF_SPS + NUM_OF_BLS)] = bd;
+			sh_css_blob_info[i-NUM_OF_SPS] = bd;
 		}
 	}
 
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_firmware.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_firmware.h
index 97bdf2e..a3dd2dc 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_firmware.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_firmware.h
@@ -31,9 +31,6 @@ extern struct ia_css_fw_info     sh_css_sp_fw;
 #if defined(HAS_SEC_SP)
 extern struct ia_css_fw_info     sh_css_sp1_fw;
 #endif /* HAS_SEC_SP */
-#if defined(HAS_BL)
-extern struct ia_css_fw_info     sh_css_bl_fw;
-#endif /* HAS_BL */
 extern struct ia_css_blob_descr *sh_css_blob_info;
 extern unsigned			 sh_css_num_binaries;
 
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_internal.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_internal.h
index 26137ec..905eee8 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_internal.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_internal.h
@@ -171,21 +171,12 @@
 #define NUM_OF_SPS 1
 #endif /* HAS_SEC_SP */
 
-#if defined(HAS_BL)
-#define NUM_OF_BLS 1
-#else
-#define NUM_OF_BLS 0
-#endif
-
-/* Enum for order of Binaries */
-enum sh_css_order_binaries {
+/* Enum for Number of Binaries */
+enum sh_css_num_binaries {
 	SP_FIRMWARE = 0,
 #if defined(HAS_SEC_SP)
 	SP1_FIRMWARE,
 #endif /* HAS_SEC_SP */
-#if defined(HAS_BL)
-	BOOTLOADER_FIRMWARE,
-#endif
 	ISP_FIRMWARE
 };
 
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_params.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_params.c
index 7949e1e..faf3164 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_params.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_params.c
@@ -52,7 +52,6 @@
 #include "ia_css_morph.h"
 #include "ia_css_host_data.h"
 #include "ia_css_pipe.h"
-#include "ia_css_pipe_binarydesc.h"
 
 #if !defined(IS_ISP_2500_SYSTEM)
 /* Include all kernel host interfaces for ISP1 */
@@ -1448,45 +1447,6 @@ ia_css_process_kernel(struct ia_css_stream *stream,
 	}
 }
 
-static enum ia_css_err
-sh_css_select_dp_10bpp_config(const struct ia_css_pipe *pipe, bool *is_dp_10bpp) {
-
-	enum ia_css_err err = IA_CSS_SUCCESS;
-	/* Currently we check if 10bpp DPC configuration is required based
-	 * on the use case,i.e. if BDS and DPC is both enabled. The more cleaner
-	 * design choice would be to expose the type of DPC (either 10bpp or 13bpp)
-	 * using the binary info, but the current control flow does not allow this
-	 * implementation. (This is because the configuration is set before a
-	 * binary is selected, and the binary info is not available)
-	 */
-	if((pipe == NULL) || (is_dp_10bpp == NULL)) {
-		IA_CSS_LEAVE_ERR_PRIVATE(IA_CSS_ERR_INTERNAL_ERROR);
-		err = IA_CSS_ERR_INTERNAL_ERROR;
-	} else {
-		*is_dp_10bpp = false;
-
-		/* check if DPC is enabled from the host */
-		if (pipe->config.enable_dpc) {
-			/*check if BDS is enabled*/
-			unsigned int required_bds_factor = SH_CSS_BDS_FACTOR_1_00;
-			if ((pipe->config.bayer_ds_out_res.width != 0) &&
-			  (pipe->config.bayer_ds_out_res.height != 0)) {
-				if (IA_CSS_SUCCESS == binarydesc_calculate_bds_factor(
-					pipe->config.input_effective_res,
-					pipe->config.bayer_ds_out_res,
-					&required_bds_factor)) {
-					if (SH_CSS_BDS_FACTOR_1_00 != required_bds_factor) {
-						/*we use 10bpp BDS configuration*/
-						*is_dp_10bpp = true;
-					}
-				}
-			}
-		}
-	}
-
-	return err;
-}
-
 #endif
 
 enum ia_css_err
@@ -2368,7 +2328,6 @@ ia_css_set_param_exceptions(struct ia_css_isp_parameters *params)
 #endif
 
 #if !defined(IS_ISP_2500_SYSTEM)
-
 static void
 sh_css_set_nr_config(struct ia_css_isp_parameters *params,
 			const struct ia_css_nr_config *config)
@@ -2674,23 +2633,13 @@ sh_css_set_global_isp_config_on_pipe(
 	struct ia_css_pipe *pipe)
 {
 	enum ia_css_err err = IA_CSS_SUCCESS;
-	enum ia_css_err err1 = IA_CSS_SUCCESS;
-	enum ia_css_err err2 = IA_CSS_SUCCESS;
 
 	IA_CSS_ENTER_PRIVATE("stream=%p, config=%p, pipe=%p", curr_pipe, config, pipe);
 
-	err1 = sh_css_init_isp_params_from_config(curr_pipe, curr_pipe->stream->isp_params_configs, config);
+	sh_css_init_isp_params_from_config(curr_pipe, curr_pipe->stream->isp_params_configs, config);
 
 	/* Now commit all changes to the SP */
-	err2 = sh_css_param_update_isp_params(curr_pipe, curr_pipe->stream->isp_params_configs, sh_css_sp_is_running(), pipe);
-
-	/* The following code is intentional. The sh_css_init_isp_params_from_config interface
-	 * throws an error when both DPC and BDS is enabled. The CSS API must pass this error
-	 * information to the caller, ie. the host. We do not return this error immediately,
-	 * but instead continue with updating the ISP params to enable testing of features
-	 * which are currently in TR phase. */
-
-	err = (err1 != IA_CSS_SUCCESS ) ? err1 : ((err2 != IA_CSS_SUCCESS) ? err2 : err);
+	err = sh_css_param_update_isp_params(curr_pipe, curr_pipe->stream->isp_params_configs, sh_css_sp_is_running(), pipe);
 
 	IA_CSS_LEAVE_ERR_PRIVATE(err);
 	return err;
@@ -2706,10 +2655,6 @@ sh_css_set_per_frame_isp_config_on_pipe(
 	unsigned i;
 	bool per_frame_config_created = false;
 	enum ia_css_err err = IA_CSS_SUCCESS;
-	enum ia_css_err err1 = IA_CSS_SUCCESS;
-	enum ia_css_err err2 = IA_CSS_SUCCESS;
-	enum ia_css_err err3 = IA_CSS_SUCCESS;
-
 	struct sh_css_ddr_address_map *ddr_ptrs;
 	struct sh_css_ddr_address_map_size *ddr_ptrs_size;
 	struct ia_css_isp_parameters *params;
@@ -2736,12 +2681,8 @@ sh_css_set_per_frame_isp_config_on_pipe(
 	params = stream->per_frame_isp_params_configs;
 
 	/* update new ISP params object with the new config */
-	if (!sh_css_init_isp_params_from_global(stream, params, false)) {
-		err1 = IA_CSS_ERR_INVALID_ARGUMENTS;
-	}
-
-	err2 = sh_css_init_isp_params_from_config(stream->pipes[0], params, config);
-
+	sh_css_init_isp_params_from_global(stream, params, false);
+	sh_css_init_isp_params_from_config(stream->pipes[0], params, config);
 
 	if (per_frame_config_created)
 	{
@@ -2755,16 +2696,8 @@ sh_css_set_per_frame_isp_config_on_pipe(
 	}
 
 	/* now commit to ddr */
-	err3 = sh_css_param_update_isp_params(stream->pipes[0], params, sh_css_sp_is_running(), pipe);
-
-	/* The following code is intentional. The sh_css_init_sp_params_from_config and
-	 * sh_css_init_isp_params_from_config throws an error when both DPC and BDS is enabled.
-	 * The CSS API must pass this error information to the caller, ie. the host.
-	 * We do not return this error immediately, but instead continue with updating the ISP params
-	 *  to enable testing of features which are currently in TR phase. */
-	err = (err1 != IA_CSS_SUCCESS) ? err1 :
-		(err2 != IA_CSS_SUCCESS) ? err2 :
-		(err3 != IA_CSS_SUCCESS) ? err3 : err;
+	err = sh_css_param_update_isp_params(stream->pipes[0], params, sh_css_sp_is_running(), pipe);
+
 exit:
 	IA_CSS_LEAVE_ERR_PRIVATE(err);
 	return err;
@@ -2776,12 +2709,8 @@ sh_css_init_isp_params_from_config(struct ia_css_pipe *pipe,
 		struct ia_css_isp_parameters *params,
 		const struct ia_css_isp_config *config)
 {
-	enum ia_css_err err = IA_CSS_SUCCESS;
-#if !defined(IS_ISP_2500_SYSTEM)
-	bool is_dp_10bpp = true;
-#endif
+	enum ia_css_err err = IA_CSS_ERR_INTERNAL_ERROR;
 	assert(pipe != NULL);
-
 	IA_CSS_ENTER_PRIVATE("pipe=%p, config=%p, params=%p", pipe, config, params);
 
 	ia_css_set_configs(params, config);
@@ -2789,7 +2718,6 @@ sh_css_init_isp_params_from_config(struct ia_css_pipe *pipe,
 #if defined(IS_ISP_2500_SYSTEM)
 	err = sh_css_set_config_product_specific(pipe, config);
 #else
-
 	sh_css_set_nr_config(params, config->nr_config);
 	sh_css_set_ee_config(params, config->ee_config);
 	sh_css_set_baa_config(params, config->baa_config);
@@ -2813,23 +2741,10 @@ sh_css_init_isp_params_from_config(struct ia_css_pipe *pipe,
 	params->output_frame = config->output_frame;
 	params->isp_parameters_id = config->isp_config_id;
 
-	if (IA_CSS_SUCCESS ==
-		sh_css_select_dp_10bpp_config(pipe, &is_dp_10bpp)) {
-		/* return an error when both DPC and BDS is enabled by the
-		 * user. */
-		/* we do not exit from this point immediately to allow internal
-		 * firmware feature testing. */
-		if(is_dp_10bpp) {
-			err = IA_CSS_ERR_INVALID_ARGUMENTS;
-		}
-	} else {
-		err = IA_CSS_ERR_INTERNAL_ERROR;
-		goto exit;
-	}
-
 	ia_css_set_param_exceptions(params);
-exit:
+	err = IA_CSS_SUCCESS;
 #endif
+
 	IA_CSS_LEAVE_ERR_PRIVATE(err);
 	return err;
 }
@@ -3183,11 +3098,7 @@ ia_css_stream_isp_parameters_init(struct ia_css_stream *stream)
 		 goto ERR;
 
 	params = stream->isp_params_configs;
-	if (!sh_css_init_isp_params_from_global(stream, params, true)) {
-		/* we do not return the error immediately to enable internal
-		 * firmware feature testing */
-		err = IA_CSS_ERR_INVALID_ARGUMENTS;
-	}
+	sh_css_init_isp_params_from_global(stream, params, true);
 
 	ddr_ptrs = &params->ddr_ptrs;
 	ddr_ptrs_size = &params->ddr_ptrs_size;
@@ -3317,18 +3228,14 @@ sh_css_init_isp_params_from_global(struct ia_css_stream *stream,
 		struct ia_css_isp_parameters *params,
 		bool use_default_config)
 {
-	bool retval = true;
 #if !defined(IS_ISP_2500_SYSTEM)
 	int i = 0;
-	bool is_dp_10bpp = true;
 	unsigned isp_pipe_version = ia_css_pipe_get_isp_pipe_version(stream->pipes[0]);
 #endif
 	struct ia_css_isp_parameters *stream_params = stream->isp_params_configs;
 
-	if (!use_default_config && !stream_params) {
-		retval = false;
-		goto exit;
-	}
+	if (!use_default_config && !stream_params)
+		return false;
 
 	params->output_frame = NULL;
 	params->isp_parameters_id = 0;
@@ -3358,7 +3265,6 @@ sh_css_init_isp_params_from_global(struct ia_css_stream *stream,
 		ia_css_set_tnr_config(params, &default_tnr_config);
 		ia_css_set_ob_config(params, &default_ob_config);
 		ia_css_set_dp_config(params, &default_dp_config);
-		ia_css_set_param_exceptions(params);
 		ia_css_set_de_config(params, &default_de_config);
 		ia_css_set_gc_config(params, &default_gc_config);
 		ia_css_set_anr_config(params, &default_anr_config);
@@ -3381,6 +3287,7 @@ sh_css_init_isp_params_from_global(struct ia_css_stream *stream,
 		ia_css_set_sdis_config(params, &default_sdis_config);
 		ia_css_set_sdis2_config(params, &default_sdis2_config);
 		ia_css_set_formats_config(params, &default_formats_config);
+		ia_css_set_param_exceptions(params);
 
 		params->fpn_config.data = NULL;
 		params->config_changed[IA_CSS_FPN_ID] = true;
@@ -3451,20 +3358,6 @@ sh_css_init_isp_params_from_global(struct ia_css_stream *stream,
 		ia_css_set_xnr_config(params, &stream_params->xnr_config);
 		ia_css_set_formats_config(params, &stream_params->formats_config);
 
-		for (i = 0; i < stream->num_pipes; i++) {
-			if (IA_CSS_SUCCESS ==
-				sh_css_select_dp_10bpp_config(stream->pipes[i], &is_dp_10bpp)) {
-				/* set the return value as false if both DPC and
-				 * BDS is enabled by the user. But we do not return
-				 * the value immediately to enable internal firmware
-				 * feature testing. */
-				retval = !is_dp_10bpp;
-			} else {
-				retval = false;
-				goto exit;
-			}
-		}
-
 		ia_css_set_param_exceptions(params);
 
 		params->fpn_config.data = stream_params->fpn_config.data;
@@ -3498,8 +3391,7 @@ sh_css_init_isp_params_from_global(struct ia_css_stream *stream,
 #endif /* !defined(IS_ISP_2500_SYSTEM) */
 	}
 
-exit:
-	return retval;
+	return true;
 }
 
 enum ia_css_err
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/spmem_dump.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/spmem_dump.c
index b9032b2..4d234e9 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/spmem_dump.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/spmem_dump.c
@@ -22,35 +22,35 @@
 
 #define _hrt_cell_load_program_sp(proc) _hrt_cell_load_program_embedded(proc, sp)
 
-/* function longjmp: 683F */
+/* function longjmp: 6823 */
 
-/* function tmpmem_init_dmem: 658A */
+/* function tmpmem_init_dmem: 656E */
 
-/* function ia_css_dmaproxy_sp_set_addr_B: 3BD4 */
+/* function ia_css_dmaproxy_sp_set_addr_B: 3BB8 */
 
 /* function debug_buffer_set_ddr_addr: DD */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_vbuf_mipi
 #define HIVE_MEM_vbuf_mipi scalar_processor_2400_dmem
-#define HIVE_ADDR_vbuf_mipi 0x7398
+#define HIVE_ADDR_vbuf_mipi 0x7388
 #define HIVE_SIZE_vbuf_mipi 12
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_vbuf_mipi scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_vbuf_mipi 0x7398
+#define HIVE_ADDR_sp_vbuf_mipi 0x7388
 #define HIVE_SIZE_sp_vbuf_mipi 12
 
-/* function ia_css_event_sp_decode: 3DC5 */
+/* function ia_css_event_sp_decode: 3DA9 */
 
-/* function ia_css_queue_get_size: 5134 */
+/* function ia_css_queue_get_size: 5118 */
 
-/* function ia_css_queue_load: 5775 */
+/* function ia_css_queue_load: 5759 */
 
-/* function setjmp: 6848 */
+/* function setjmp: 682C */
 
-/* function ia_css_pipeline_sp_sfi_get_current_frame: 27BF */
+/* function ia_css_pipeline_sp_sfi_get_current_frame: 27A6 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_sp2host_isys_event_queue
@@ -64,11 +64,11 @@
 #define HIVE_ADDR_sp_sem_for_sp2host_isys_event_queue 0x5760
 #define HIVE_SIZE_sp_sem_for_sp2host_isys_event_queue 20
 
-/* function ia_css_dmaproxy_sp_wait_for_ack: 6DDB */
+/* function ia_css_dmaproxy_sp_wait_for_ack: 6DBF */
 
-/* function ia_css_sp_rawcopy_func: 58E0 */
+/* function ia_css_sp_rawcopy_func: 58C4 */
 
-/* function ia_css_tagger_buf_sp_pop_marked: 3284 */
+/* function ia_css_tagger_buf_sp_pop_marked: 326B */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_N_CSI_RX_BE_SID_WIDTH
@@ -85,13 +85,13 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_stage
 #define HIVE_MEM_isp_stage scalar_processor_2400_dmem
-#define HIVE_ADDR_isp_stage 0x6C98
+#define HIVE_ADDR_isp_stage 0x6C88
 #define HIVE_SIZE_isp_stage 832
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isp_stage scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_stage 0x6C98
+#define HIVE_ADDR_sp_isp_stage 0x6C88
 #define HIVE_SIZE_sp_isp_stage 832
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -106,9 +106,9 @@
 #define HIVE_ADDR_sp_vbuf_raw 0x378
 #define HIVE_SIZE_sp_vbuf_raw 4
 
-/* function ia_css_sp_bin_copy_func: 58C1 */
+/* function ia_css_sp_bin_copy_func: 58A5 */
 
-/* function ia_css_queue_item_store: 54C3 */
+/* function ia_css_queue_item_store: 54A7 */
 
 /* function input_system_reset: 1286 */
 
@@ -141,30 +141,30 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_binary_group
 #define HIVE_MEM_sp_binary_group scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_binary_group 0x7088
+#define HIVE_ADDR_sp_binary_group 0x7078
 #define HIVE_SIZE_sp_binary_group 32
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_binary_group scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_binary_group 0x7088
+#define HIVE_ADDR_sp_sp_binary_group 0x7078
 #define HIVE_SIZE_sp_sp_binary_group 32
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_sw_state
 #define HIVE_MEM_sp_sw_state scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sw_state 0x7344
+#define HIVE_ADDR_sp_sw_state 0x7334
 #define HIVE_SIZE_sp_sw_state 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_sw_state scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_sw_state 0x7344
+#define HIVE_ADDR_sp_sp_sw_state 0x7334
 #define HIVE_SIZE_sp_sp_sw_state 4
 
 /* function ia_css_thread_sp_main: 13F7 */
 
-/* function ia_css_ispctrl_sp_init_internal_buffers: 3FCB */
+/* function ia_css_ispctrl_sp_init_internal_buffers: 3FAF */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp2host_psys_event_queue_handle
@@ -192,43 +192,43 @@
 #define HIVE_ADDR_sp_sem_for_sp2host_psys_event_queue 0x5774
 #define HIVE_SIZE_sp_sem_for_sp2host_psys_event_queue 20
 
-/* function ia_css_tagger_sp_propagate_frame: 2D24 */
+/* function ia_css_tagger_sp_propagate_frame: 2D0B */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_stop_copy_preview
 #define HIVE_MEM_sp_stop_copy_preview scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_stop_copy_preview 0x7328
+#define HIVE_ADDR_sp_stop_copy_preview 0x7318
 #define HIVE_SIZE_sp_stop_copy_preview 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_stop_copy_preview scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_stop_copy_preview 0x7328
+#define HIVE_ADDR_sp_sp_stop_copy_preview 0x7318
 #define HIVE_SIZE_sp_sp_stop_copy_preview 4
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_vbuf_handles
 #define HIVE_MEM_vbuf_handles scalar_processor_2400_dmem
-#define HIVE_ADDR_vbuf_handles 0x73A4
+#define HIVE_ADDR_vbuf_handles 0x7394
 #define HIVE_SIZE_vbuf_handles 960
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_vbuf_handles scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_vbuf_handles 0x73A4
+#define HIVE_ADDR_sp_vbuf_handles 0x7394
 #define HIVE_SIZE_sp_vbuf_handles 960
 
-/* function ia_css_queue_store: 5629 */
+/* function ia_css_queue_store: 560D */
 
-/* function ia_css_sp_flash_register: 34F2 */
+/* function ia_css_sp_flash_register: 34D9 */
 
-/* function ia_css_sp_rawcopy_dummy_function: 5D29 */
+/* function ia_css_sp_rawcopy_dummy_function: 5D0D */
 
-/* function ia_css_pipeline_sp_init: 201C */
+/* function ia_css_pipeline_sp_init: 2003 */
 
-/* function ia_css_tagger_sp_configure: 2C14 */
+/* function ia_css_tagger_sp_configure: 2BFB */
 
-/* function ia_css_ispctrl_sp_end_binary: 3E0E */
+/* function ia_css_ispctrl_sp_end_binary: 3DF2 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_h_pipe_private_per_frame_ddr_ptrs
@@ -292,35 +292,35 @@
 #define HIVE_ADDR_sp_host_sp_com 0x3E48
 #define HIVE_SIZE_sp_host_sp_com 220
 
-/* function ia_css_queue_get_free_space: 5288 */
+/* function ia_css_queue_get_free_space: 526C */
 
 /* function exec_image_pipe: 5E6 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_init_dmem_data
 #define HIVE_MEM_sp_init_dmem_data scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_init_dmem_data 0x7348
+#define HIVE_ADDR_sp_init_dmem_data 0x7338
 #define HIVE_SIZE_sp_init_dmem_data 24
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_init_dmem_data scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_init_dmem_data 0x7348
+#define HIVE_ADDR_sp_sp_init_dmem_data 0x7338
 #define HIVE_SIZE_sp_sp_init_dmem_data 24
 
-/* function ia_css_sp_metadata_start: 5E03 */
+/* function ia_css_sp_metadata_start: 5DE7 */
 
-/* function ia_css_bufq_sp_init_buffer_queues: 3543 */
+/* function ia_css_bufq_sp_init_buffer_queues: 352A */
 
-/* function ia_css_pipeline_sp_stop: 1FFF */
+/* function ia_css_pipeline_sp_stop: 1FE6 */
 
-/* function ia_css_tagger_sp_connect_pipes: 30ED */
+/* function ia_css_tagger_sp_connect_pipes: 30D4 */
 
 /* function sp_isys_copy_wait: 644 */
 
 /* function is_isp_debug_buffer_full: 337 */
 
-/* function ia_css_dmaproxy_sp_configure_channel_from_info: 3B57 */
+/* function ia_css_dmaproxy_sp_configure_channel_from_info: 3B3B */
 
 /* function encode_and_post_timer_event: AA8 */
 
@@ -360,7 +360,7 @@
 #define HIVE_ADDR_sp_sp_per_frame_data 0x3F24
 #define HIVE_SIZE_sp_sp_per_frame_data 4
 
-/* function ia_css_rmgr_sp_vbuf_dequeue: 62DE */
+/* function ia_css_rmgr_sp_vbuf_dequeue: 62C2 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_host2sp_psys_event_queue_handle
@@ -388,9 +388,9 @@
 
 /* function tmr_clock_init: 16F9 */
 
-/* function ia_css_pipeline_sp_run: 1ABF */
+/* function ia_css_pipeline_sp_run: 1AB8 */
 
-/* function memcpy: 68E8 */
+/* function memcpy: 68CC */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_N_ISYS2401_DMA_CHANNEL_PROCS
@@ -430,11 +430,11 @@
 
 /* function stream2mmio_send_command: E0A */
 
-/* function ia_css_uds_sp_scale_params: 65F1 */
+/* function ia_css_uds_sp_scale_params: 65D5 */
 
 /* function ia_css_circbuf_increase_size: 14DC */
 
-/* function __divu: 6866 */
+/* function __divu: 684A */
 
 /* function ia_css_thread_sp_get_state: 131F */
 
@@ -478,9 +478,9 @@
 
 /* function ia_css_parambuf_sp_handle_parameter_sets: 193F */
 
-/* function ia_css_spctrl_sp_set_state: 5E1F */
+/* function ia_css_spctrl_sp_set_state: 5E03 */
 
-/* function ia_css_thread_sem_sp_signal: 6ACB */
+/* function ia_css_thread_sem_sp_signal: 6AAF */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_IRQ_BASE
@@ -494,7 +494,7 @@
 #define HIVE_ADDR_sp_IRQ_BASE 0x2C
 #define HIVE_SIZE_sp_IRQ_BASE 16
 
-/* function ia_css_virtual_isys_sp_isr_init: 5EBE */
+/* function ia_css_virtual_isys_sp_isr_init: 5EA2 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_TIMED_CTRL_BASE
@@ -508,11 +508,11 @@
 #define HIVE_ADDR_sp_TIMED_CTRL_BASE 0x40
 #define HIVE_SIZE_sp_TIMED_CTRL_BASE 4
 
-/* function ia_css_isys_sp_generate_exp_id: 616E */
+/* function ia_css_isys_sp_generate_exp_id: 6152 */
 
-/* function ia_css_rmgr_sp_init: 61D9 */
+/* function ia_css_rmgr_sp_init: 61BD */
 
-/* function ia_css_thread_sem_sp_init: 6B9C */
+/* function ia_css_thread_sem_sp_init: 6B80 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_is_isp_requested
@@ -538,17 +538,17 @@
 #define HIVE_ADDR_sp_sem_for_reading_cb_frame 0x57AC
 #define HIVE_SIZE_sp_sem_for_reading_cb_frame 40
 
-/* function ia_css_dmaproxy_sp_execute: 3ABF */
+/* function ia_css_dmaproxy_sp_execute: 3AA3 */
 
 /* function csi_rx_backend_rst: CE6 */
 
-/* function ia_css_queue_is_empty: 516F */
+/* function ia_css_queue_is_empty: 5153 */
 
-/* function ia_css_pipeline_sp_has_stopped: 1FF5 */
+/* function ia_css_pipeline_sp_has_stopped: 1FDC */
 
 /* function ia_css_circbuf_extract: 15E0 */
 
-/* function ia_css_tagger_buf_sp_is_locked_from_start: 33D3 */
+/* function ia_css_tagger_buf_sp_is_locked_from_start: 33BA */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_current_sp_thread
@@ -562,13 +562,13 @@
 #define HIVE_ADDR_sp_current_sp_thread 0x274
 #define HIVE_SIZE_sp_current_sp_thread 4
 
-/* function ia_css_spctrl_sp_get_spid: 5E26 */
+/* function ia_css_spctrl_sp_get_spid: 5E0A */
 
-/* function ia_css_bufq_sp_reset_buffers: 35CA */
+/* function ia_css_bufq_sp_reset_buffers: 35B1 */
 
-/* function ia_css_dmaproxy_sp_read_byte_addr: 6E09 */
+/* function ia_css_dmaproxy_sp_read_byte_addr: 6DED */
 
-/* function ia_css_rmgr_sp_uninit: 61D2 */
+/* function ia_css_rmgr_sp_uninit: 61B6 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_threads_stack
@@ -648,7 +648,7 @@
 #define HIVE_ADDR_sp_sem_for_reading_cb_param 0x57EC
 #define HIVE_SIZE_sp_sem_for_reading_cb_param 40
 
-/* function ia_css_queue_get_used_space: 523C */
+/* function ia_css_queue_get_used_space: 5220 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_cont_capt_start
@@ -665,20 +665,20 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_tmp_heap
 #define HIVE_MEM_tmp_heap scalar_processor_2400_dmem
-#define HIVE_ADDR_tmp_heap 0x70A8
+#define HIVE_ADDR_tmp_heap 0x7098
 #define HIVE_SIZE_tmp_heap 640
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_tmp_heap scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_tmp_heap 0x70A8
+#define HIVE_ADDR_sp_tmp_heap 0x7098
 #define HIVE_SIZE_sp_tmp_heap 640
 
-/* function ia_css_rmgr_sp_get_num_vbuf: 64E2 */
+/* function ia_css_rmgr_sp_get_num_vbuf: 64C6 */
 
-/* function ia_css_ispctrl_sp_output_compute_dma_info: 47E5 */
+/* function ia_css_ispctrl_sp_output_compute_dma_info: 47C9 */
 
-/* function ia_css_tagger_sp_lock_exp_id: 29FF */
+/* function ia_css_tagger_sp_lock_exp_id: 29E6 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_s3a_bufs
@@ -692,25 +692,25 @@
 #define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_s3a_bufs 0x5C24
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_s3a_bufs 60
 
-/* function ia_css_queue_is_full: 52D3 */
+/* function ia_css_queue_is_full: 52B7 */
 
 /* function debug_buffer_init_isp: E4 */
 
-/* function ia_css_tagger_sp_exp_id_is_locked: 2945 */
+/* function ia_css_tagger_sp_exp_id_is_locked: 292C */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_rmgr_sp_mipi_frame_sem
 #define HIVE_MEM_ia_css_rmgr_sp_mipi_frame_sem scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_rmgr_sp_mipi_frame_sem 0x7764
+#define HIVE_ADDR_ia_css_rmgr_sp_mipi_frame_sem 0x7754
 #define HIVE_SIZE_ia_css_rmgr_sp_mipi_frame_sem 60
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_rmgr_sp_mipi_frame_sem scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_rmgr_sp_mipi_frame_sem 0x7764
+#define HIVE_ADDR_sp_ia_css_rmgr_sp_mipi_frame_sem 0x7754
 #define HIVE_SIZE_sp_ia_css_rmgr_sp_mipi_frame_sem 60
 
-/* function ia_css_rmgr_sp_refcount_dump: 62B9 */
+/* function ia_css_rmgr_sp_refcount_dump: 629D */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_isp_parameters_id
@@ -752,7 +752,7 @@
 #define HIVE_ADDR_sp_host2sp_isys_event_queue_handle 0x5C74
 #define HIVE_SIZE_sp_host2sp_isys_event_queue_handle 12
 
-/* function ia_css_thread_sp_yield: 6A44 */
+/* function ia_css_thread_sp_yield: 6A28 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cbs_param_desc
@@ -769,20 +769,20 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_dmaproxy_sp_invalidate_tlb
 #define HIVE_MEM_ia_css_dmaproxy_sp_invalidate_tlb scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_dmaproxy_sp_invalidate_tlb 0x6C8C
+#define HIVE_ADDR_ia_css_dmaproxy_sp_invalidate_tlb 0x6C78
 #define HIVE_SIZE_ia_css_dmaproxy_sp_invalidate_tlb 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_dmaproxy_sp_invalidate_tlb scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_dmaproxy_sp_invalidate_tlb 0x6C8C
+#define HIVE_ADDR_sp_ia_css_dmaproxy_sp_invalidate_tlb 0x6C78
 #define HIVE_SIZE_sp_ia_css_dmaproxy_sp_invalidate_tlb 4
 
 /* function ia_css_thread_sp_fork: 13AC */
 
-/* function ia_css_tagger_sp_destroy: 30F7 */
+/* function ia_css_tagger_sp_destroy: 30DE */
 
-/* function ia_css_dmaproxy_sp_vmem_read: 3A5F */
+/* function ia_css_dmaproxy_sp_vmem_read: 3A43 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_N_LONG_PACKET_LUT_ENTRIES
@@ -800,11 +800,11 @@
 
 /* function ia_css_thread_sp_init: 13D8 */
 
-/* function ia_css_isys_sp_reset_exp_id: 6165 */
+/* function ia_css_isys_sp_reset_exp_id: 6149 */
 
-/* function qos_scheduler_update_fps: 65E1 */
+/* function qos_scheduler_update_fps: 65C5 */
 
-/* function ia_css_ispctrl_sp_set_stream_base_addr: 4EAD */
+/* function ia_css_ispctrl_sp_set_stream_base_addr: 4E91 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ISP_DMEM_BASE
@@ -832,9 +832,9 @@
 
 /* function ibuf_ctrl_transfer: D67 */
 
-/* function ia_css_dmaproxy_sp_read: 3AD5 */
+/* function ia_css_dmaproxy_sp_read: 3AB9 */
 
-/* function virtual_isys_stream_is_capture_done: 5EE2 */
+/* function virtual_isys_stream_is_capture_done: 5EC6 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_raw_copy_line_count
@@ -860,7 +860,7 @@
 #define HIVE_ADDR_sp_host2sp_tag_cmd_queue_handle 0x5C80
 #define HIVE_SIZE_sp_host2sp_tag_cmd_queue_handle 12
 
-/* function ia_css_queue_peek: 51B2 */
+/* function ia_css_queue_peek: 5196 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_flash_sp_frame_cnt
@@ -891,13 +891,13 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_thread
 #define HIVE_MEM_isp_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_isp_thread 0x6FD8
+#define HIVE_ADDR_isp_thread 0x6FC8
 #define HIVE_SIZE_isp_thread 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isp_thread scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_thread 0x6FD8
+#define HIVE_ADDR_sp_isp_thread 0x6FC8
 #define HIVE_SIZE_sp_isp_thread 4
 
 /* function encode_and_post_sp_event_non_blocking: AF0 */
@@ -920,20 +920,20 @@
 
 /* function debug_enqueue_ddr: EE */
 
-/* function ia_css_rmgr_sp_refcount_init_vbuf: 6274 */
+/* function ia_css_rmgr_sp_refcount_init_vbuf: 6258 */
 
-/* function dmaproxy_sp_read_write: 6EB8 */
+/* function dmaproxy_sp_read_write: 6E9C */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_dmaproxy_isp_dma_cmd_buffer
 #define HIVE_MEM_ia_css_dmaproxy_isp_dma_cmd_buffer scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_dmaproxy_isp_dma_cmd_buffer 0x6C90
+#define HIVE_ADDR_ia_css_dmaproxy_isp_dma_cmd_buffer 0x6C7C
 #define HIVE_SIZE_ia_css_dmaproxy_isp_dma_cmd_buffer 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_dmaproxy_isp_dma_cmd_buffer scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_dmaproxy_isp_dma_cmd_buffer 0x6C90
+#define HIVE_ADDR_sp_ia_css_dmaproxy_isp_dma_cmd_buffer 0x6C7C
 #define HIVE_SIZE_sp_ia_css_dmaproxy_isp_dma_cmd_buffer 4
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -960,13 +960,13 @@
 #define HIVE_ADDR_sp_ia_css_flash_sp_in_service 0x3054
 #define HIVE_SIZE_sp_ia_css_flash_sp_in_service 4
 
-/* function ia_css_dmaproxy_sp_process: 6BC4 */
+/* function ia_css_dmaproxy_sp_process: 6BA8 */
 
-/* function ia_css_tagger_buf_sp_mark_from_end: 34B7 */
+/* function ia_css_tagger_buf_sp_mark_from_end: 349E */
 
-/* function ia_css_ispctrl_sp_init_cs: 3EFB */
+/* function ia_css_ispctrl_sp_init_cs: 3EDF */
 
-/* function ia_css_spctrl_sp_init: 5E34 */
+/* function ia_css_spctrl_sp_init: 5E18 */
 
 /* function sp_event_proxy_init: 7A2 */
 
@@ -976,13 +976,13 @@
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_previous_clock_tick
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_previous_clock_tick scalar_processor_2400_dmem
 #define HIVE_ADDR_ia_css_bufq_sp_pipe_private_previous_clock_tick 0x5E6C
-#define HIVE_SIZE_ia_css_bufq_sp_pipe_private_previous_clock_tick 40
+#define HIVE_SIZE_ia_css_bufq_sp_pipe_private_previous_clock_tick 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_previous_clock_tick scalar_processor_2400_dmem
 #define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_previous_clock_tick 0x5E6C
-#define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_previous_clock_tick 40
+#define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_previous_clock_tick 20
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_output
@@ -999,13 +999,13 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_sems_for_host2sp_buf_queues
 #define HIVE_MEM_ia_css_bufq_sp_sems_for_host2sp_buf_queues scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_sems_for_host2sp_buf_queues 0x5E94
+#define HIVE_ADDR_ia_css_bufq_sp_sems_for_host2sp_buf_queues 0x5E80
 #define HIVE_SIZE_ia_css_bufq_sp_sems_for_host2sp_buf_queues 800
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_sems_for_host2sp_buf_queues scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_sems_for_host2sp_buf_queues 0x5E94
+#define HIVE_ADDR_sp_ia_css_bufq_sp_sems_for_host2sp_buf_queues 0x5E80
 #define HIVE_SIZE_sp_ia_css_bufq_sp_sems_for_host2sp_buf_queues 800
 
 /* function pixelgen_prbs_config: E93 */
@@ -1034,25 +1034,25 @@
 #define HIVE_ADDR_sp_INPUT_FORMATTER_BASE 0x4C
 #define HIVE_SIZE_sp_INPUT_FORMATTER_BASE 16
 
-/* function sp_dma_proxy_reset_channels: 3D2F */
+/* function sp_dma_proxy_reset_channels: 3D13 */
 
-/* function ia_css_tagger_sp_update_size: 31EB */
+/* function ia_css_tagger_sp_update_size: 31D2 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_host_sp_queue
 #define HIVE_MEM_ia_css_bufq_host_sp_queue scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_host_sp_queue 0x61B4
+#define HIVE_ADDR_ia_css_bufq_host_sp_queue 0x61A0
 #define HIVE_SIZE_ia_css_bufq_host_sp_queue 2008
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_host_sp_queue scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_host_sp_queue 0x61B4
+#define HIVE_ADDR_sp_ia_css_bufq_host_sp_queue 0x61A0
 #define HIVE_SIZE_sp_ia_css_bufq_host_sp_queue 2008
 
 /* function thread_fiber_sp_create: 1444 */
 
-/* function ia_css_dmaproxy_sp_set_increments: 3BC1 */
+/* function ia_css_dmaproxy_sp_set_increments: 3BA5 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_writing_cb_frame
@@ -1080,7 +1080,7 @@
 
 /* function pixelgen_tpg_is_done: F0D */
 
-/* function ia_css_isys_stream_capture_indication: 5FE8 */
+/* function ia_css_isys_stream_capture_indication: 5FCC */
 
 /* function sp_start_isp_entry: 392 */
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -1090,23 +1090,23 @@
 #endif
 #define HIVE_ADDR_sp_sp_start_isp_entry 0x392
 
-/* function ia_css_tagger_buf_sp_unmark_all: 343B */
+/* function ia_css_tagger_buf_sp_unmark_all: 3422 */
 
-/* function ia_css_tagger_buf_sp_unmark_from_start: 347C */
+/* function ia_css_tagger_buf_sp_unmark_from_start: 3463 */
 
-/* function ia_css_dmaproxy_sp_channel_acquire: 3D5B */
+/* function ia_css_dmaproxy_sp_channel_acquire: 3D3F */
 
-/* function ia_css_rmgr_sp_add_num_vbuf: 64BE */
+/* function ia_css_rmgr_sp_add_num_vbuf: 64A2 */
 
 /* function ibuf_ctrl_config: D8B */
 
-/* function ia_css_isys_stream_stop: 6060 */
+/* function ia_css_isys_stream_stop: 6044 */
 
-/* function __ia_css_dmaproxy_sp_wait_for_ack_text: 3A2B */
+/* function __ia_css_dmaproxy_sp_wait_for_ack_text: 3A0F */
 
-/* function ia_css_tagger_sp_acquire_buf_elem: 291D */
+/* function ia_css_tagger_sp_acquire_buf_elem: 2904 */
 
-/* function ia_css_bufq_sp_is_dynamic_buffer: 3914 */
+/* function ia_css_bufq_sp_is_dynamic_buffer: 38F8 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_group
@@ -1134,9 +1134,9 @@
 
 /* function ia_css_thread_sp_kill: 1372 */
 
-/* function ia_css_tagger_sp_create: 31A5 */
+/* function ia_css_tagger_sp_create: 318C */
 
-/* function tmpmem_acquire_dmem: 656B */
+/* function tmpmem_acquire_dmem: 654F */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_MMU_BASE
@@ -1150,11 +1150,11 @@
 #define HIVE_ADDR_sp_MMU_BASE 0x24
 #define HIVE_SIZE_sp_MMU_BASE 8
 
-/* function ia_css_dmaproxy_sp_channel_release: 3D47 */
+/* function ia_css_dmaproxy_sp_channel_release: 3D2B */
 
 /* function pixelgen_prbs_run: E81 */
 
-/* function ia_css_dmaproxy_sp_is_idle: 3D27 */
+/* function ia_css_dmaproxy_sp_is_idle: 3D0B */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_qos_start
@@ -1170,11 +1170,11 @@
 
 /* function isp_hmem_load: B63 */
 
-/* function ia_css_tagger_sp_release_buf_elem: 28F9 */
+/* function ia_css_tagger_sp_release_buf_elem: 28E0 */
 
-/* function ia_css_eventq_sp_send: 3D9D */
+/* function ia_css_eventq_sp_send: 3D81 */
 
-/* function ia_css_tagger_buf_sp_unlock_from_start: 336B */
+/* function ia_css_tagger_buf_sp_unlock_from_start: 3352 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_debug_buffer_ddr_address
@@ -1190,7 +1190,7 @@
 
 /* function sp_isys_copy_request: 6ED */
 
-/* function ia_css_rmgr_sp_refcount_retain_vbuf: 634E */
+/* function ia_css_rmgr_sp_refcount_retain_vbuf: 6332 */
 
 /* function ia_css_thread_sp_set_priority: 136A */
 
@@ -1200,19 +1200,19 @@
 
 /* function pixelgen_tpg_stop: EFB */
 
-/* function tmpmem_release_dmem: 655A */
+/* function tmpmem_release_dmem: 653E */
 
-/* function ia_css_dmaproxy_sp_set_width_exception: 3BAC */
+/* function ia_css_dmaproxy_sp_set_width_exception: 3B90 */
 
 /* function sp_event_assert: 929 */
 
-/* function ia_css_flash_sp_init_internal_params: 3538 */
+/* function ia_css_flash_sp_init_internal_params: 351F */
 
-/* function ia_css_tagger_buf_sp_pop_unmarked_and_unlocked: 321C */
+/* function ia_css_tagger_buf_sp_pop_unmarked_and_unlocked: 3203 */
 
-/* function __modu: 68AC */
+/* function __modu: 6890 */
 
-/* function ia_css_dmaproxy_sp_init_isp_vector: 3A31 */
+/* function ia_css_dmaproxy_sp_init_isp_vector: 3A15 */
 
 /* function input_system_channel_transfer: 122A */
 
@@ -1230,11 +1230,11 @@
 #define HIVE_ADDR_sp_GDC_BASE 0x44
 #define HIVE_SIZE_sp_GDC_BASE 8
 
-/* function ia_css_queue_local_init: 549D */
+/* function ia_css_queue_local_init: 5481 */
 
-/* function sp_event_proxy_callout_func: 6979 */
+/* function sp_event_proxy_callout_func: 695D */
 
-/* function qos_scheduler_schedule_stage: 65B2 */
+/* function qos_scheduler_schedule_stage: 6596 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_thread_sp_num_ready_threads
@@ -1260,13 +1260,13 @@
 #define HIVE_ADDR_sp_sp_threads_stack_size 0x17C
 #define HIVE_SIZE_sp_sp_threads_stack_size 24
 
-/* function ia_css_ispctrl_sp_isp_done_row_striping: 47CB */
+/* function ia_css_ispctrl_sp_isp_done_row_striping: 47AF */
 
-/* function __ia_css_virtual_isys_sp_isr_text: 5E77 */
+/* function __ia_css_virtual_isys_sp_isr_text: 5E5B */
 
-/* function ia_css_queue_dequeue: 531B */
+/* function ia_css_queue_dequeue: 52FF */
 
-/* function ia_css_dmaproxy_sp_configure_channel: 6E20 */
+/* function ia_css_dmaproxy_sp_configure_channel: 6E04 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_current_thread_fiber_sp
@@ -1282,7 +1282,7 @@
 
 /* function ia_css_circbuf_pop: 1674 */
 
-/* function memset: 692B */
+/* function memset: 690F */
 
 /* function irq_raise_set_token: B6 */
 
@@ -1300,25 +1300,25 @@
 
 /* function pixelgen_prbs_stop: E6F */
 
-/* function ia_css_pipeline_acc_stage_enable: 1FC0 */
+/* function ia_css_pipeline_acc_stage_enable: 1FA7 */
 
-/* function ia_css_tagger_sp_unlock_exp_id: 296A */
+/* function ia_css_tagger_sp_unlock_exp_id: 2951 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_ph
 #define HIVE_MEM_isp_ph scalar_processor_2400_dmem
-#define HIVE_ADDR_isp_ph 0x7360
+#define HIVE_ADDR_isp_ph 0x7350
 #define HIVE_SIZE_isp_ph 28
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isp_ph scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_ph 0x7360
+#define HIVE_ADDR_sp_isp_ph 0x7350
 #define HIVE_SIZE_sp_isp_ph 28
 
-/* function ia_css_ispctrl_sp_init_ds: 405A */
+/* function ia_css_ispctrl_sp_init_ds: 403E */
 
-/* function get_xmem_base_addr_raw: 43FB */
+/* function get_xmem_base_addr_raw: 43DF */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cbs_param
@@ -1350,35 +1350,35 @@
 
 /* function csi_rx_frontend_run: C22 */
 
-/* function ia_css_framebuf_sp_wait_for_in_frame: 64E9 */
+/* function ia_css_framebuf_sp_wait_for_in_frame: 64CD */
 
-/* function ia_css_isys_stream_open: 6115 */
+/* function ia_css_isys_stream_open: 60F9 */
 
-/* function ia_css_sp_rawcopy_tag_frame: 5CA3 */
+/* function ia_css_sp_rawcopy_tag_frame: 5C87 */
 
 /* function input_system_channel_configure: 125D */
 
 /* function isp_hmem_clear: B33 */
 
-/* function ia_css_framebuf_sp_release_in_frame: 652C */
+/* function ia_css_framebuf_sp_release_in_frame: 6510 */
 
 /* function stream2mmio_config: E1B */
 
-/* function ia_css_ispctrl_sp_start_binary: 3ED9 */
+/* function ia_css_ispctrl_sp_start_binary: 3EBD */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_h_pipe_private_ddr_ptrs
 #define HIVE_MEM_ia_css_bufq_sp_h_pipe_private_ddr_ptrs scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 0x698C
+#define HIVE_ADDR_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 0x6978
 #define HIVE_SIZE_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 20
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 0x698C
+#define HIVE_ADDR_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 0x6978
 #define HIVE_SIZE_sp_ia_css_bufq_sp_h_pipe_private_ddr_ptrs 20
 
-/* function ia_css_eventq_sp_recv: 3D6F */
+/* function ia_css_eventq_sp_recv: 3D53 */
 
 /* function csi_rx_frontend_config: C7A */
 
@@ -1394,9 +1394,9 @@
 #define HIVE_ADDR_sp_isp_pool 0x36C
 #define HIVE_SIZE_sp_isp_pool 4
 
-/* function ia_css_rmgr_sp_rel_gen: 621B */
+/* function ia_css_rmgr_sp_rel_gen: 61FF */
 
-/* function css_get_frame_processing_time_end: 28E9 */
+/* function css_get_frame_processing_time_end: 28D0 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_event_any_pending_mask
@@ -1410,31 +1410,31 @@
 #define HIVE_ADDR_sp_event_any_pending_mask 0x388
 #define HIVE_SIZE_sp_event_any_pending_mask 8
 
-/* function ia_css_pipeline_sp_get_pipe_io_status: 1AB8 */
+/* function ia_css_pipeline_sp_get_pipe_io_status: 1AB1 */
 
 /* function sh_css_decode_tag_descr: 352 */
 
 /* function debug_enqueue_isp: 27B */
 
-/* function qos_scheduler_update_stage_budget: 65A0 */
+/* function qos_scheduler_update_stage_budget: 6584 */
 
-/* function ia_css_spctrl_sp_uninit: 5E2D */
+/* function ia_css_spctrl_sp_uninit: 5E11 */
 
 /* function csi_rx_backend_run: C68 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_dis_bufs
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_dis_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_dis_bufs 0x69A0
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_dis_bufs 0x698C
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_dis_bufs 140
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_dis_bufs scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_dis_bufs 0x69A0
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_dis_bufs 0x698C
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_dis_bufs 140
 
-/* function ia_css_tagger_buf_sp_lock_from_start: 339F */
+/* function ia_css_tagger_buf_sp_lock_from_start: 3386 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sem_for_isp_idle
@@ -1448,11 +1448,11 @@
 #define HIVE_ADDR_sp_sem_for_isp_idle 0x5890
 #define HIVE_SIZE_sp_sem_for_isp_idle 20
 
-/* function ia_css_dmaproxy_sp_write_byte_addr: 3A8E */
+/* function ia_css_dmaproxy_sp_write_byte_addr: 3A72 */
 
-/* function ia_css_dmaproxy_sp_init: 3A05 */
+/* function ia_css_dmaproxy_sp_init: 39E9 */
 
-/* function ia_css_bufq_sp_release_dynamic_buf_clock_tick: 360A */
+/* function ia_css_bufq_sp_release_dynamic_buf_clock_tick: 35F1 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ISP_VAMEM_BASE
@@ -1471,30 +1471,30 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_rawcopy_sp_tagger
 #define HIVE_MEM_ia_css_rawcopy_sp_tagger scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_rawcopy_sp_tagger 0x732C
+#define HIVE_ADDR_ia_css_rawcopy_sp_tagger 0x731C
 #define HIVE_SIZE_ia_css_rawcopy_sp_tagger 24
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_rawcopy_sp_tagger scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_rawcopy_sp_tagger 0x732C
+#define HIVE_ADDR_sp_ia_css_rawcopy_sp_tagger 0x731C
 #define HIVE_SIZE_sp_ia_css_rawcopy_sp_tagger 24
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_exp_ids
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_exp_ids scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_exp_ids 0x6A2C
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_exp_ids 0x6A18
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_exp_ids 70
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_exp_ids scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_exp_ids 0x6A2C
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_exp_ids 0x6A18
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_exp_ids 70
 
-/* function ia_css_queue_item_load: 558F */
+/* function ia_css_queue_item_load: 5573 */
 
-/* function ia_css_spctrl_sp_get_state: 5E18 */
+/* function ia_css_spctrl_sp_get_state: 5DFC */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_callout_sp_thread
@@ -1534,41 +1534,41 @@
 #define HIVE_ADDR_sp_sp_isp_input_stream_format 0x3E2C
 #define HIVE_SIZE_sp_sp_isp_input_stream_format 20
 
-/* function __mod: 6898 */
+/* function __mod: 687C */
 
-/* function ia_css_dmaproxy_sp_init_dmem_channel: 3AEF */
+/* function ia_css_dmaproxy_sp_init_dmem_channel: 3AD3 */
 
 /* function ia_css_thread_sp_join: 139B */
 
-/* function ia_css_dmaproxy_sp_add_command: 6F23 */
+/* function ia_css_dmaproxy_sp_add_command: 6F07 */
 
-/* function ia_css_sp_metadata_thread_func: 5E11 */
+/* function ia_css_sp_metadata_thread_func: 5DF5 */
 
-/* function __sp_event_proxy_func_critical: 6966 */
+/* function __sp_event_proxy_func_critical: 694A */
 
-/* function ia_css_pipeline_sp_wait_for_isys_stream_N: 5F85 */
+/* function ia_css_pipeline_sp_wait_for_isys_stream_N: 5F69 */
 
-/* function ia_css_sp_metadata_wait: 5E0A */
+/* function ia_css_sp_metadata_wait: 5DEE */
 
 /* function ia_css_circbuf_peek_from_start: 15A4 */
 
-/* function ia_css_event_sp_encode: 3DFA */
+/* function ia_css_event_sp_encode: 3DDE */
 
 /* function ia_css_thread_sp_run: 140E */
 
 /* function sp_isys_copy_func: 618 */
 
-/* function ia_css_sp_isp_param_init_isp_memories: 5018 */
+/* function ia_css_sp_isp_param_init_isp_memories: 4FFC */
 
 /* function register_isr: 921 */
 
 /* function irq_raise: C8 */
 
-/* function ia_css_dmaproxy_sp_mmu_invalidate: 39CC */
+/* function ia_css_dmaproxy_sp_mmu_invalidate: 39B0 */
 
 /* function csi_rx_backend_disable: C34 */
 
-/* function pipeline_sp_initialize_stage: 2104 */
+/* function pipeline_sp_initialize_stage: 20EB */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_N_CSI_RX_FE_CTRL_DLANES
@@ -1582,13 +1582,13 @@
 #define HIVE_ADDR_sp_N_CSI_RX_FE_CTRL_DLANES 0x1C4
 #define HIVE_SIZE_sp_N_CSI_RX_FE_CTRL_DLANES 12
 
-/* function ia_css_dmaproxy_sp_read_byte_addr_mmio: 6DF2 */
+/* function ia_css_dmaproxy_sp_read_byte_addr_mmio: 6DD6 */
 
-/* function ia_css_ispctrl_sp_done_ds: 4041 */
+/* function ia_css_ispctrl_sp_done_ds: 4025 */
 
 /* function csi_rx_backend_config: C8B */
 
-/* function ia_css_sp_isp_param_get_mem_inits: 4FF3 */
+/* function ia_css_sp_isp_param_get_mem_inits: 4FD7 */
 
 /* function ia_css_parambuf_sp_init_buffer_queues: 1A85 */
 
@@ -1619,44 +1619,44 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_pipe_private_frames
 #define HIVE_MEM_ia_css_bufq_sp_pipe_private_frames scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_frames 0x6A74
+#define HIVE_ADDR_ia_css_bufq_sp_pipe_private_frames 0x6A60
 #define HIVE_SIZE_ia_css_bufq_sp_pipe_private_frames 280
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_pipe_private_frames scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_frames 0x6A74
+#define HIVE_ADDR_sp_ia_css_bufq_sp_pipe_private_frames 0x6A60
 #define HIVE_SIZE_sp_ia_css_bufq_sp_pipe_private_frames 280
 
-/* function qos_scheduler_init_stage_budget: 65D9 */
+/* function qos_scheduler_init_stage_budget: 65BD */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp2host_buffer_queue_handle
 #define HIVE_MEM_sp2host_buffer_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp2host_buffer_queue_handle 0x6B8C
+#define HIVE_ADDR_sp2host_buffer_queue_handle 0x6B78
 #define HIVE_SIZE_sp2host_buffer_queue_handle 96
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp2host_buffer_queue_handle scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp2host_buffer_queue_handle 0x6B8C
+#define HIVE_ADDR_sp_sp2host_buffer_queue_handle 0x6B78
 #define HIVE_SIZE_sp_sp2host_buffer_queue_handle 96
 
-/* function ia_css_ispctrl_sp_init_isp_vars: 4D12 */
+/* function ia_css_ispctrl_sp_init_isp_vars: 4CF6 */
 
-/* function ia_css_isys_stream_start: 6042 */
+/* function ia_css_isys_stream_start: 6026 */
 
 /* function sp_warning: 954 */
 
-/* function ia_css_rmgr_sp_vbuf_enqueue: 630E */
+/* function ia_css_rmgr_sp_vbuf_enqueue: 62F2 */
 
-/* function ia_css_tagger_sp_tag_exp_id: 2A74 */
+/* function ia_css_tagger_sp_tag_exp_id: 2A5B */
 
-/* function ia_css_pipeline_sp_sfi_release_current_frame: 276B */
+/* function ia_css_pipeline_sp_sfi_release_current_frame: 2752 */
 
-/* function ia_css_dmaproxy_sp_write: 3AA5 */
+/* function ia_css_dmaproxy_sp_write: 3A89 */
 
-/* function ia_css_isys_stream_start_async: 60BC */
+/* function ia_css_isys_stream_start_async: 60A0 */
 
 /* function ia_css_parambuf_sp_release_in_param: 1905 */
 
@@ -1675,29 +1675,29 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_isp_addresses
 #define HIVE_MEM_sp_isp_addresses scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isp_addresses 0x6FDC
+#define HIVE_ADDR_sp_isp_addresses 0x6FCC
 #define HIVE_SIZE_sp_isp_addresses 172
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_sp_isp_addresses scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_sp_isp_addresses 0x6FDC
+#define HIVE_ADDR_sp_sp_isp_addresses 0x6FCC
 #define HIVE_SIZE_sp_sp_isp_addresses 172
 
-/* function ia_css_rmgr_sp_acq_gen: 6233 */
+/* function ia_css_rmgr_sp_acq_gen: 6217 */
 
 /* function input_system_input_port_open: 10ED */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isps
 #define HIVE_MEM_isps scalar_processor_2400_dmem
-#define HIVE_ADDR_isps 0x737C
+#define HIVE_ADDR_isps 0x736C
 #define HIVE_SIZE_isps 28
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_isps scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_isps 0x737C
+#define HIVE_ADDR_sp_isps 0x736C
 #define HIVE_SIZE_sp_isps 28
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
@@ -1712,25 +1712,25 @@
 #define HIVE_ADDR_sp_host_sp_queues_initialized 0x3E40
 #define HIVE_SIZE_sp_host_sp_queues_initialized 4
 
-/* function ia_css_queue_uninit: 545B */
+/* function ia_css_queue_uninit: 543F */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_ispctrl_sp_isp_started
 #define HIVE_MEM_ia_css_ispctrl_sp_isp_started scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_ispctrl_sp_isp_started 0x6C94
+#define HIVE_ADDR_ia_css_ispctrl_sp_isp_started 0x6C80
 #define HIVE_SIZE_ia_css_ispctrl_sp_isp_started 4
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_ispctrl_sp_isp_started scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_ispctrl_sp_isp_started 0x6C94
+#define HIVE_ADDR_sp_ia_css_ispctrl_sp_isp_started 0x6C80
 #define HIVE_SIZE_sp_ia_css_ispctrl_sp_isp_started 4
 
-/* function ia_css_bufq_sp_release_dynamic_buf: 3676 */
+/* function ia_css_bufq_sp_release_dynamic_buf: 365D */
 
-/* function ia_css_dmaproxy_sp_set_height_exception: 3B9D */
+/* function ia_css_dmaproxy_sp_set_height_exception: 3B81 */
 
-/* function ia_css_dmaproxy_sp_init_vmem_channel: 3B22 */
+/* function ia_css_dmaproxy_sp_init_vmem_channel: 3B06 */
 
 /* function csi_rx_backend_stop: C57 */
 
@@ -1746,7 +1746,7 @@
 #define HIVE_ADDR_sp_num_ready_threads 0x5A7C
 #define HIVE_SIZE_sp_num_ready_threads 4
 
-/* function ia_css_dmaproxy_sp_write_byte_addr_mmio: 3A77 */
+/* function ia_css_dmaproxy_sp_write_byte_addr_mmio: 3A5B */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_vbuf_spref
@@ -1760,7 +1760,7 @@
 #define HIVE_ADDR_sp_vbuf_spref 0x370
 #define HIVE_SIZE_sp_vbuf_spref 4
 
-/* function ia_css_queue_enqueue: 53A5 */
+/* function ia_css_queue_enqueue: 5389 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_flash_sp_request
@@ -1774,7 +1774,7 @@
 #define HIVE_ADDR_sp_ia_css_flash_sp_request 0x5B30
 #define HIVE_SIZE_sp_ia_css_flash_sp_request 4
 
-/* function ia_css_dmaproxy_sp_vmem_write: 3A48 */
+/* function ia_css_dmaproxy_sp_vmem_write: 3A2C */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_tagger_frames
@@ -1802,11 +1802,11 @@
 
 /* function sp_generate_interrupts: 9D3 */
 
-/* function ia_css_pipeline_sp_start: 2007 */
+/* function ia_css_pipeline_sp_start: 1FEE */
 
 /* function csi_rx_backend_enable: C45 */
 
-/* function ia_css_sp_rawcopy_init: 58C8 */
+/* function ia_css_sp_rawcopy_init: 58AC */
 
 /* function input_system_input_port_configure: 113F */
 
@@ -1827,13 +1827,13 @@
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_bufq_sp_sems_for_sp2host_buf_queues
 #define HIVE_MEM_ia_css_bufq_sp_sems_for_sp2host_buf_queues scalar_processor_2400_dmem
-#define HIVE_ADDR_ia_css_bufq_sp_sems_for_sp2host_buf_queues 0x6BEC
+#define HIVE_ADDR_ia_css_bufq_sp_sems_for_sp2host_buf_queues 0x6BD8
 #define HIVE_SIZE_ia_css_bufq_sp_sems_for_sp2host_buf_queues 160
 #else
 #endif
 #endif
 #define HIVE_MEM_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues scalar_processor_2400_dmem
-#define HIVE_ADDR_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues 0x6BEC
+#define HIVE_ADDR_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues 0x6BD8
 #define HIVE_SIZE_sp_ia_css_bufq_sp_sems_for_sp2host_buf_queues 160
 
 /* function isys2401_dma_config_legacy: DE0 */
@@ -1850,7 +1850,7 @@
 #define HIVE_ADDR_sp_ibuf_ctrl_master_ports 0x208
 #define HIVE_SIZE_sp_ibuf_ctrl_master_ports 12
 
-/* function css_get_frame_processing_time_start: 28F1 */
+/* function css_get_frame_processing_time_start: 28D8 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_all_cbs_frame
@@ -1864,7 +1864,7 @@
 #define HIVE_ADDR_sp_sp_all_cbs_frame 0x58B8
 #define HIVE_SIZE_sp_sp_all_cbs_frame 16
 
-/* function ia_css_virtual_isys_sp_isr: 6F39 */
+/* function ia_css_virtual_isys_sp_isr: 6F1D */
 
 /* function thread_sp_queue_print: 142B */
 
@@ -1882,11 +1882,11 @@
 #define HIVE_ADDR_sp_sem_for_str2mem 0x58C8
 #define HIVE_SIZE_sp_sem_for_str2mem 20
 
-/* function ia_css_tagger_buf_sp_is_marked_from_start: 3407 */
+/* function ia_css_tagger_buf_sp_is_marked_from_start: 33EE */
 
-/* function ia_css_bufq_sp_acquire_dynamic_buf: 382E */
+/* function ia_css_bufq_sp_acquire_dynamic_buf: 3812 */
 
-/* function ia_css_pipeline_sp_sfi_mode_is_enabled: 28BF */
+/* function ia_css_pipeline_sp_sfi_mode_is_enabled: 28A6 */
 
 /* function ia_css_circbuf_destroy: 16B9 */
 
@@ -1902,11 +1902,11 @@
 #define HIVE_ADDR_sp_ISP_PMEM_BASE 0xC
 #define HIVE_SIZE_sp_ISP_PMEM_BASE 4
 
-/* function ia_css_sp_isp_param_mem_load: 4F86 */
+/* function ia_css_sp_isp_param_mem_load: 4F6A */
 
-/* function __div: 6850 */
+/* function __div: 6834 */
 
-/* function ia_css_rmgr_sp_refcount_release_vbuf: 632D */
+/* function ia_css_rmgr_sp_refcount_release_vbuf: 6311 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_ia_css_flash_sp_in_use
@@ -1920,7 +1920,7 @@
 #define HIVE_ADDR_sp_ia_css_flash_sp_in_use 0x5B34
 #define HIVE_SIZE_sp_ia_css_flash_sp_in_use 4
 
-/* function ia_css_thread_sem_sp_wait: 6B16 */
+/* function ia_css_thread_sem_sp_wait: 6AFA */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_sp_sleep_mode
@@ -1934,7 +1934,7 @@
 #define HIVE_ADDR_sp_sp_sleep_mode 0x3E44
 #define HIVE_SIZE_sp_sp_sleep_mode 4
 
-/* function ia_css_tagger_buf_sp_push: 3302 */
+/* function ia_css_tagger_buf_sp_push: 32E9 */
 
 /* function mmu_invalidate_cache: D3 */
 
@@ -1950,7 +1950,7 @@
 #define HIVE_ADDR_sp_sp_max_cb_elems 0x148
 #define HIVE_SIZE_sp_sp_max_cb_elems 8
 
-/* function ia_css_queue_remote_init: 547D */
+/* function ia_css_queue_remote_init: 5461 */
 
 #ifndef HIVE_MULTIPLE_PROGRAMS
 #ifndef HIVE_MEM_isp_stop_req
@@ -1964,7 +1964,7 @@
 #define HIVE_ADDR_sp_isp_stop_req 0x575C
 #define HIVE_SIZE_sp_isp_stop_req 4
 
-/* function ia_css_pipeline_sp_sfi_request_next_frame: 2781 */
+/* function ia_css_pipeline_sp_sfi_request_next_frame: 2768 */
 
 #define HIVE_ICACHE_sp_critical_SEGMENT_START 0
 #define HIVE_ICACHE_sp_critical_NUM_SEGMENTS  1
-- 
1.9.1

