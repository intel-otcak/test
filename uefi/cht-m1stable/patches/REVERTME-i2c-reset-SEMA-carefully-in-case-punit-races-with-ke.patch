From d9d1ccbf36283e8354c233a81e7e653abde09cbf Mon Sep 17 00:00:00 2001
From: Zhang Yanmin <yanmin.zhang@intel.com>
Date: Tue, 27 Jan 2015 00:54:35 +0800
Subject: [PATCH] i2c: reset SEMA carefully in case punit races with kernel

If intel_mid_dw_i2c_acquire_ownership timeouts, kernel
resets SEMA. At the same time, punit might assign the lock to
kernel. Add a double reset if the SEMA is assigned to kernel.

Change-Id: Ie3b8c0004d2d5f025e463003dc21d091f9a1fb5e
Tracked-On: https://jira01.devtools.intel.com/browse/AKP-960
Signed-off-by: Zhang Jun <jun.zhang@intel.com>
Signed-off-by: Changcheng Liu <changcheng.liu@intel.com>
Signed-off-by: Zhang Yanmin <yanmin.zhang@intel.com>
---
 arch/x86/platform/intel-mid/intel_mid_pcihelpers.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/arch/x86/platform/intel-mid/intel_mid_pcihelpers.c b/arch/x86/platform/intel-mid/intel_mid_pcihelpers.c
index de48698..766be4e 100644
--- a/arch/x86/platform/intel-mid/intel_mid_pcihelpers.c
+++ b/arch/x86/platform/intel-mid/intel_mid_pcihelpers.c
@@ -200,7 +200,7 @@ static void reset_semaphore(void)
 
 	data = intel_mid_msgbus_read32(PUNIT_PORT, PUNIT_SEMAPHORE);
 	smp_mb();
-	data = data & 0xfffffffe;
+	data = data & 0xfffffffc;
 	intel_mid_msgbus_write32(PUNIT_PORT, PUNIT_SEMAPHORE, data);
 	smp_mb();
 }
@@ -244,6 +244,12 @@ int intel_mid_dw_i2c_acquire_ownership(void)
 			pr_err("Timeout: semaphore timed out, reset sem\n");
 			ret = -ETIMEDOUT;
 			reset_semaphore();
+			/*Delay 1ms in case race with punit*/
+			udelay(1000);
+			if (GET_SEM() != 0) {
+				/*Reset again as kernel might race with punit*/
+				reset_semaphore();
+			}
 			pr_err("PUNIT SEM: %d\n",
 					intel_mid_msgbus_read32(PUNIT_PORT,
 						PUNIT_SEMAPHORE));
-- 
1.9.1

