From fa68e69a4d5337fe43e4c40bf236b08978a8e3f5 Mon Sep 17 00:00:00 2001
From: mgotefox <manishx.gotefode@intel.com>
Date: Thu, 21 Jan 2016 15:31:10 -0800
Subject: [PATCH 02/13] atomisp2: css2400 and 2401
 irci_ecr-master_20160121_0200

Merge CSS2.1 for css2400 and 2401_legacy
for irci_ecr-master_20160121_0200 firmware tag

Change-Id: Ibd440c0d3efb5ba52b405a92a2bf300a49435aea
Signed-off-by: mgotefox <manishx.gotefode@intel.com>
Original-Tracked_On:
Signed-off-by: mgotefox <manishx.gotefode@intel.com>
Reviewed-on: https://icggerrit.ir.intel.com/97152
Build: Dessert M BXT RVP (SC)
Approver: WeiX Meng <weix.meng@intel.com>
Integrator: WeiX Meng <weix.meng@intel.com>
Build: Dessert M CHT FFD (SC)
Reviewed-by: WeiX Meng <weix.meng@intel.com>
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-17482
Signed-off-by: Tao Wei <wei.tao@intel.com>
Reviewed-on: https://android.intel.com:443/464445
---
 .../drivers/media/pci/atomisp2/create_link.sh      |  24 +-
 .../camera/drivers/media/pci/atomisp2/css/ia_css.h |   2 +-
 .../drivers/media/pci/atomisp2/css/ia_css_types.h  |   2 +-
 .../media/pci/atomisp2/css/ia_css_version_data.h   |   2 +-
 .../css/isp/kernels/bnlm/ia_css_bnlm_state.h       |  31 --
 .../atomisp2/css/isp/modes/interface/isp_const.h   |  15 +-
 .../css/runtime/binary/interface/ia_css_binary.h   |  17 +-
 .../media/pci/atomisp2/css/sh_css_firmware.c       |   4 +-
 .../css/isp/kernels/bnlm/ia_css_bnlm_state.h       |   1 -
 .../atomisp_driver/hrt/device_access.c             | 141 +-------
 .../atomisp_driver/hrt/memory_access.c             | 383 +--------------------
 .../css/isp/kernels/bnlm/ia_css_bnlm_state.h       |   1 -
 .../css/isp/kernels/bnlm/ia_css_bnlm_state.h       |   1 -
 13 files changed, 36 insertions(+), 588 deletions(-)
 delete mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/bnlm/ia_css_bnlm_state.h
 delete mode 120000 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21_build/css/isp/kernels/bnlm/ia_css_bnlm_state.h
 mode change 100644 => 120000 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21_build/atomisp_driver/hrt/device_access.c
 mode change 100644 => 120000 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21_build/atomisp_driver/hrt/memory_access.c
 delete mode 120000 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21_build/css/isp/kernels/bnlm/ia_css_bnlm_state.h
 delete mode 120000 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21_build/css/isp/kernels/bnlm/ia_css_bnlm_state.h

diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/create_link.sh b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/create_link.sh
index b922792..653f1c4 100755
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/create_link.sh
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/create_link.sh
@@ -1,15 +1,15 @@
-/**
- * Copyright (c) 2010 - 2015, Intel Corporation.
- *
- * This program is free software; you can redistribute it and/or modify it
- * under the terms and conditions of the GNU General Public License,
- * version 2, as published by the Free Software Foundation.
- *
- * This program is distributed in the hope it will be useful, but WITHOUT
- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
- * more details.
-**/
+#/**
+# * Copyright (c) 2010 - 2015, Intel Corporation.
+# *
+# * This program is free software; you can redistribute it and/or modify it
+# * under the terms and conditions of the GNU General Public License,
+# * version 2, as published by the Free Software Foundation.
+# *
+# * This program is distributed in the hope it will be useful, but WITHOUT
+# * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+# * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+# * more details.
+#**/
 
 #!/bin/bash
 
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css.h
index da8cc2a..1615723 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css.h
@@ -1,4 +1,4 @@
-/* Release Version: irci_ecr-master_20160107_1930 */
+/* Release Version: irci_ecr-master_20160121_0200 */
 /**
 Support for Intel Camera Imaging ISP subsystem.
 Copyright (c) 2010 - 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_types.h
index 6753eea..f877539 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_types.h
@@ -1,4 +1,4 @@
-/* Release Version: irci_ecr-master_20160107_1930 */
+/* Release Version: irci_ecr-master_20160121_0200 */
 /**
 Support for Intel Camera Imaging ISP subsystem.
 Copyright (c) 2010 - 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_version_data.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_version_data.h
index 46fbe2e..84da485 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_version_data.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/ia_css_version_data.h
@@ -22,7 +22,7 @@ more details.
 #define __IA_CSS_VERSION_DATA_H
 
 
-#define CSS_VERSION_STRING "REL:20160107_01.4_2023; API:2.1.21.0; GIT:irci___#428a21e7f937a777e612a8eaf5fec41478e09cd1; SDK:; USER:viedifw; "
+#define CSS_VERSION_STRING "REL:20160121_03.4_0636; API:2.1.21.0; GIT:irci____2#79f572d3abee152c445a9e5f63bbf93f8f2f7415; SDK:; USER:viedifw; "
 
 
 #endif
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/bnlm/ia_css_bnlm_state.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/bnlm/ia_css_bnlm_state.h
deleted file mode 100644
index 2212efe..0000000
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/kernels/bnlm/ia_css_bnlm_state.h
+++ /dev/null
@@ -1,31 +0,0 @@
-/**
-Support for Intel Camera Imaging ISP subsystem.
-Copyright (c) 2010 - 2015, Intel Corporation.
-
-This program is free software; you can redistribute it and/or modify it
-under the terms and conditions of the GNU General Public License,
-version 2, as published by the Free Software Foundation.
-
-This program is distributed in the hope it will be useful, but WITHOUT
-ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
-more details.
-*/
-
-#ifndef __IA_CSS_BNLM_STATE_H
-#define __IA_CSS_BNLM_STATE_H
-
-
-#include "type_support.h"
-#include "vmem.h" /* for VMEM_ARRAY*/
-#include "bnlm.isp.h"
-
-struct bnlm_vmem_state {
-	/* State buffers required for BNLM */
-	VMEM_ARRAY(buf[BNLM_STATE_BUF_HEIGHT], BNLM_STATE_BUF_WIDTH*ISP_NWAY);
-};
-
-
-
-#endif /* __IA_CSS_BNLM_STATE_H */
-
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/modes/interface/isp_const.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/modes/interface/isp_const.h
index 0a20b1f..bdb817d 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/modes/interface/isp_const.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/isp/modes/interface/isp_const.h
@@ -212,13 +212,14 @@ more details.
 #define SH_CSS_BINARY_ID_VIDEO_KERNELTEST_TNR3_STRIPED      402
 
 /* ISP 2.7 camera binaries */
-#define SH_CSS_BINARY_ID_PRE_DE_ISP27			    501
-#define SH_CSS_BINARY_ID_CONT_PRE_DE_ISP27		    502
-#define SH_CSS_BINARY_ID_PRIMARY_ISP27_STAGE0	            503
-#define SH_CSS_BINARY_ID_PRIMARY_ISP27_STAGE1		    504
-#define SH_CSS_BINARY_ID_PRIMARY_ISP27_STAGE2		    505
-#define SH_CSS_BINARY_ID_PRIMARY_ISP27_STAGE3		    506
-#define SH_CSS_BINARY_ID_CAPTURE_PP_ISP27		    507
+#define SH_CSS_BINARY_ID_PRE_DE_ISP27						501
+#define SH_CSS_BINARY_ID_PRE_DE_ISP27_STAGE1				502
+#define SH_CSS_BINARY_ID_CONT_PRE_DE_ISP27					503
+#define SH_CSS_BINARY_ID_PRIMARY_ISP27_STAGE0				504
+#define SH_CSS_BINARY_ID_PRIMARY_ISP27_STAGE1				505
+#define SH_CSS_BINARY_ID_PRIMARY_ISP27_STAGE2				506
+#define SH_CSS_BINARY_ID_PRIMARY_ISP27_STAGE3				507
+#define SH_CSS_BINARY_ID_CAPTURE_PP_ISP27					508
 
 #define XMEM_WIDTH_BITS              HIVE_ISP_DDR_WORD_BITS
 #define XMEM_SHORTS_PER_WORD         (HIVE_ISP_DDR_WORD_BITS/16)
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/runtime/binary/interface/ia_css_binary.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/runtime/binary/interface/ia_css_binary.h
index b8e5405..5eff9e2 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/runtime/binary/interface/ia_css_binary.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/runtime/binary/interface/ia_css_binary.h
@@ -36,14 +36,15 @@ more details.
 #define IA_CSS_BINARY_MODE_ANR        7
 #define IA_CSS_BINARY_MODE_CAPTURE_PP 8
 #define IA_CSS_BINARY_MODE_VF_PP      9
-#define IA_CSS_BINARY_MODE_PRE_DE     10
-#define IA_CSS_BINARY_MODE_PRIMARY_HQ_STAGE0    11
-#define IA_CSS_BINARY_MODE_PRIMARY_HQ_STAGE1    12
-#define IA_CSS_BINARY_MODE_PRIMARY_HQ_STAGE2    13
-#define IA_CSS_BINARY_MODE_PRIMARY_HQ_STAGE3    14
-#define IA_CSS_BINARY_MODE_PRIMARY_HQ_STAGE4    15
-#define IA_CSS_BINARY_MODE_PRIMARY_HQ_STAGE5    16
-#define IA_CSS_BINARY_NUM_MODES       17
+#define IA_CSS_BINARY_MODE_PRE_DE		10
+#define IA_CSS_BINARY_MODE_PRE_DE_STAGE1	11
+#define IA_CSS_BINARY_MODE_PRIMARY_HQ_STAGE0    12
+#define IA_CSS_BINARY_MODE_PRIMARY_HQ_STAGE1    13
+#define IA_CSS_BINARY_MODE_PRIMARY_HQ_STAGE2    14
+#define IA_CSS_BINARY_MODE_PRIMARY_HQ_STAGE3    15
+#define IA_CSS_BINARY_MODE_PRIMARY_HQ_STAGE4    16
+#define IA_CSS_BINARY_MODE_PRIMARY_HQ_STAGE5    17
+#define IA_CSS_BINARY_NUM_MODES       18
 
 #define MAX_NUM_PRIMARY_STAGES 6
 #define NUM_PRIMARY_HQ_STAGES  6  /* number of primary stages for ISP2.6.1 high quality pipe */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_firmware.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_firmware.c
index 2e4c191..ff02cb4 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_firmware.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css/sh_css_firmware.c
@@ -47,10 +47,10 @@ struct fw_param {
 /* Warning: same order as SH_CSS_BINARY_ID_* */
 static struct firmware_header *firmware_header;
 
-/* The string STR(irci_ecr-master_20160107_1930) is a place holder
+/* The string STR(irci_ecr-master_20160121_0200) is a place holder
  * which will be replaced with the actual RELEASE_VERSION
  * during package generation. Please do not modify  */
-static const char *release_version = STR(irci_ecr-master_20160107_1930);
+static const char *release_version = STR(irci_ecr-master_20160121_0200);
 
 #define MAX_FW_REL_VER_NAME	300
 static char FW_rel_ver_name[MAX_FW_REL_VER_NAME] = "---";
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21_build/css/isp/kernels/bnlm/ia_css_bnlm_state.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21_build/css/isp/kernels/bnlm/ia_css_bnlm_state.h
deleted file mode 120000
index fe2a104..0000000
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2400b0_v21_build/css/isp/kernels/bnlm/ia_css_bnlm_state.h
+++ /dev/null
@@ -1 +0,0 @@
-../../../../../css/isp/kernels/bnlm/ia_css_bnlm_state.h
\ No newline at end of file
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21_build/atomisp_driver/hrt/device_access.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21_build/atomisp_driver/hrt/device_access.c
deleted file mode 100644
index acad4f0..0000000
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21_build/atomisp_driver/hrt/device_access.c
+++ /dev/null
@@ -1,140 +0,0 @@
-/**
- * Copyright (c) 2010 - 2015, Intel Corporation.
- *
- * This program is free software; you can redistribute it and/or modify it
- * under the terms and conditions of the GNU General Public License,
- * version 2, as published by the Free Software Foundation.
- *
- * This program is distributed in the hope it will be useful, but WITHOUT
- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
- * more details.
-**/
-
-
-#include "device_access.h"
-
-#include "assert_support.h"
-
-#include <hrt/master_port.h>	/* hrt_master_port_load() */
-#ifdef C_RUN
-#include <string.h>				/* memcpy() */
-#endif
-
-/*
- * This is an HRT backend implementation for CSIM
- */
-
-static sys_address		base_address = (sys_address)-1;
-
-void device_set_base_address(
-	const sys_address		base_addr)
-{
-	base_address = base_addr;
-return;
-}
-
-
-sys_address device_get_base_address(void)
-{
-return base_address;
-}
-
-uint8_t device_load_uint8(
-	const hrt_address		addr)
-{
-assert(base_address != (sys_address)-1);
-return hrt_master_port_uload_8(base_address + addr);
-}
-
-uint16_t device_load_uint16(
-	const hrt_address		addr)
-{
-assert(base_address != (sys_address)-1);
-assert((addr & 0x01) == 0);
-return hrt_master_port_uload_16(base_address + addr);
-}
-
-uint32_t device_load_uint32(
-	const hrt_address		addr)
-{
-assert(base_address != (sys_address)-1);
-assert((addr & 0x03) == 0);
-return hrt_master_port_uload_32(base_address + addr);
-}
-
-uint64_t device_load_uint64(
-	const hrt_address		addr)
-{
-assert(base_address != (sys_address)-1);
-assert((addr & 0x07) == 0);
-assert(0);
-return 0;
-}
-
-void device_store_uint8(
-	const hrt_address		addr,
-	const uint8_t			data)
-{
-assert(base_address != (sys_address)-1);
-hrt_master_port_store_8(base_address + addr, data);
-return;
-}
-
-void device_store_uint16(
-	const hrt_address		addr,
-	const uint16_t			data)
-{
-assert(base_address != (sys_address)-1);
-assert((addr & 0x01) == 0);
-hrt_master_port_store_16(base_address + addr, data);
-return;
-}
-
-void device_store_uint32(
-	const hrt_address		addr,
-	const uint32_t			data)
-{
-assert(base_address != (sys_address)-1);
-assert((addr & 0x03) == 0);
-hrt_master_port_store_32(base_address + addr, data);
-return;
-}
-
-void device_store_uint64(
-	const hrt_address		addr,
-	const uint64_t			data)
-{
-assert(base_address != (sys_address)-1);
-assert((addr & 0x07) == 0);
-assert(0);
-(void)data;
-return;
-}
-
-void device_load(
-	const hrt_address		addr,
-	void					*data,
-	const size_t			size)
-{
-assert(base_address != (sys_address)-1);
-#ifndef C_RUN
-	hrt_master_port_load((uint32_t)(base_address + addr), data, size);
-#else
-	memcpy(data, (void *)addr, size);
-#endif
-}
-
-void device_store(
-	const hrt_address		addr,
-	const void				*data,
-	const size_t			size)
-{
-assert(base_address != (sys_address)-1);
-#ifndef C_RUN
-	hrt_master_port_store((uint32_t)(base_address + addr), data, size);
-#else
-	memcpy((void *)addr, data, size);
-#endif
-return;
-}
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21_build/atomisp_driver/hrt/device_access.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21_build/atomisp_driver/hrt/device_access.c
new file mode 120000
index 0000000..5baa05e
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21_build/atomisp_driver/hrt/device_access.c
@@ -0,0 +1 @@
+../../../atomisp_driver/hrt/device_access.c
\ No newline at end of file
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21_build/atomisp_driver/hrt/memory_access.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21_build/atomisp_driver/hrt/memory_access.c
deleted file mode 100644
index bc7da07..0000000
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21_build/atomisp_driver/hrt/memory_access.c
+++ /dev/null
@@ -1,382 +0,0 @@
-/**
- * Copyright (c) 2010 - 2015, Intel Corporation.
- *
- * This program is free software; you can redistribute it and/or modify it
- * under the terms and conditions of the GNU General Public License,
- * version 2, as published by the Free Software Foundation.
- *
- * This program is distributed in the hope it will be useful, but WITHOUT
- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
- * more details.
-**/
-
-
-#include "memory_access.h"
-
-#include <stddef.h>		/* NULL */
-#include <stdbool.h>
-
-#include "device_access.h"
-
-#include "mmu_device.h"
-
-#include "assert_support.h"
-
-/* Presently system specific */
-#include <hmm/hmm.h>
-/* Presently system specific */
-#include "hive_isp_css_mm_hrt.h"
-
-/*
- * This is an HRT backend implementation for CSIM
- * 31 July 2012, rvanimme: this implementation is also used in Android context
- */
-
-static sys_address	page_table_base_address = (sys_address)-1;
-
-#ifndef SH_CSS_MEMORY_GUARDING
-/* Choose default in case not defined */
-#ifdef HRT_CSIM
-#define SH_CSS_MEMORY_GUARDING (1)
-#else
-#define SH_CSS_MEMORY_GUARDING (0)
-#endif
-#endif
-
-#if SH_CSS_MEMORY_GUARDING
-#define CEIL_DIV(a, b)	((b) ? ((a)+(b)-1)/(b) : 0)
-#define CEIL_MUL(a, b)	(CEIL_DIV(a, b) * (b))
-#define DDR_ALIGN(a)	(CEIL_MUL((a), (HIVE_ISP_DDR_WORD_BYTES)))
-
-#define MEM_GUARD_START		0xABBAABBA
-#define MEM_GUARD_END		0xBEEFBEEF
-#define GUARD_SIZE		sizeof(unsigned long)
-#define GUARD_SIZE_ALIGNED	DDR_ALIGN(GUARD_SIZE)
-
-#define MAX_ALLOC_ENTRIES (256)
-#define INVALID_VBASE ((ia_css_ptr)-1)
-#define INVALID_SIZE ((unsigned long)-1)
-
-struct alloc_info {
-	ia_css_ptr  vbase;
-	unsigned long size;
-};
-
-static struct alloc_info alloc_admin[MAX_ALLOC_ENTRIES];
-
-static struct alloc_info const alloc_info_invalid
-					= { INVALID_VBASE, INVALID_SIZE };
-
-static void alloc_admin_init(void)
-{
-	int i;
-
-	for (i = 0; i < MAX_ALLOC_ENTRIES; i++)
-		alloc_admin[i] = alloc_info_invalid;
-}
-
-static struct alloc_info const *alloc_admin_find(ia_css_ptr vaddr)
-{
-	int i;
-	/**
-	 * Note that we use <= instead of < because we like to accept
-	 * zero-sized operations at the last allocated address
-	 * e.g. mmgr_set(vbase+alloc_size, data, 0)
-	 */
-	for (i = 0; i < MAX_ALLOC_ENTRIES; i++) {
-		if (alloc_admin[i].vbase != INVALID_VBASE &&
-					vaddr >= alloc_admin[i].vbase &&
-					vaddr <= alloc_admin[i].vbase +
-							alloc_admin[i].size) {
-			return &alloc_admin[i];
-		}
-	}
-	return &alloc_info_invalid;
-}
-
-static bool mem_guard_valid(ia_css_ptr vaddr, unsigned long size)
-{
-	unsigned long mem_guard;
-	struct alloc_info const *info;
-
-	info = alloc_admin_find(vaddr);
-	if (info->vbase == INVALID_VBASE) {
-		assert(false);
-		return false;
-	}
-
-	/* Check if end is in alloc range*/
-	if ((vaddr + size) > (info->vbase + info->size)) {
-		assert(false);
-		return false;
-	}
-
-	hrt_isp_css_mm_load((info->vbase - sizeof(mem_guard)),
-			&mem_guard, sizeof(mem_guard));
-	if (mem_guard != MEM_GUARD_START) {
-		assert(false);
-		return false;
-	}
-
-	hrt_isp_css_mm_load((info->vbase + info->size),
-				&mem_guard, sizeof(mem_guard));
-	if (mem_guard != MEM_GUARD_END) {
-		assert(false);
-		return false;
-	}
-
-	return true;
-
-}
-
-static void alloc_admin_add(ia_css_ptr vbase, unsigned long size)
-{
-	int i;
-	unsigned long mem_guard;
-
-	assert(alloc_admin_find(vbase)->vbase == INVALID_VBASE);
-
-	mem_guard = MEM_GUARD_START;
-	hrt_isp_css_mm_store((vbase - sizeof(mem_guard)),
-				&mem_guard, sizeof(mem_guard));
-
-	mem_guard = MEM_GUARD_END;
-	hrt_isp_css_mm_store((vbase + size),
-				&mem_guard, sizeof(mem_guard));
-
-	for (i = 0; i < MAX_ALLOC_ENTRIES; i++) {
-		if (alloc_admin[i].vbase == INVALID_VBASE) {
-			alloc_admin[i].vbase = vbase;
-			alloc_admin[i].size = size;
-			return;
-		}
-	}
-	assert(false);
-}
-
-static void alloc_admin_remove(ia_css_ptr vbase)
-{
-	int i;
-	assert(mem_guard_valid(vbase, 0));
-	for (i = 0; i < MAX_ALLOC_ENTRIES; i++) {
-		if (alloc_admin[i].vbase == vbase) {
-			alloc_admin[i] = alloc_info_invalid;
-			return;
-		}
-	}
-	assert(false);
-}
-
-#endif
-
-void mmgr_set_base_address(
-	const sys_address		base_addr)
-{
-	page_table_base_address = base_addr;
-
-#if SH_CSS_MEMORY_GUARDING
-	alloc_admin_init();
-#endif
-/*
- * This is part of "device_access.h", but it may be
- * that "hive_isp_css_mm_hrt.h" requires it
- */
-/* hrt_isp_css_mm_set_ddr_address_offset(offset); */
-/*	mmu_set_page_table_base_index(MMU0_ID, page_table_base_address); */
-return;
-}
-
-sys_address mmgr_get_base_address(void)
-{
-return page_table_base_address;
-}
-
-void mmgr_set_base_index(
-	const hrt_data		base_index)
-{
-/* This system only defines the MMU base address */
-assert(0);
-(void)base_index;
-return;
-}
-
-hrt_data mmgr_get_base_index(void)
-{
-/* This system only defines the MMU base address */
-assert(0);
-return 0;
-}
-
-ia_css_ptr mmgr_malloc(
-	const size_t			size)
-{
-return mmgr_alloc_attr(size, MMGR_ATTRIBUTE_CACHED);
-}
-
-ia_css_ptr mmgr_calloc(
-	const size_t			N,
-	const size_t			size)
-{
-return mmgr_alloc_attr(N * size, MMGR_ATTRIBUTE_CLEARED|MMGR_ATTRIBUTE_CACHED);
-}
-
-ia_css_ptr mmgr_realloc(
-	ia_css_ptr			vaddr,
-	const size_t			size)
-{
-return mmgr_realloc_attr(vaddr, size, MMGR_ATTRIBUTE_DEFAULT);
-}
-
-void mmgr_free(
-	ia_css_ptr			vaddr)
-{
-/* "free()" should accept NULL, "hrt_isp_css_mm_free()" may not */
-	if (vaddr) {
-#if SH_CSS_MEMORY_GUARDING
-		alloc_admin_remove(vaddr);
-		/* Reconstruct the "original" address used with the alloc */
-		vaddr -= GUARD_SIZE_ALIGNED;
-#endif
-		hrt_isp_css_mm_free(vaddr);
-	}
-return;
-}
-
-ia_css_ptr mmgr_alloc_attr(
-	const size_t			size,
-	const uint16_t			attribute)
-{
-	ia_css_ptr	ptr;
-	size_t	extra_space = 0;
-	size_t	aligned_size = size;
-
-assert(page_table_base_address != (sys_address)-1);
-assert((attribute & MMGR_ATTRIBUTE_UNUSED) == 0);
-
-#if SH_CSS_MEMORY_GUARDING
-	/* Add DDR aligned space for a guard at begin and end */
-	/* Begin guard must be DDR aligned, "end" guard not */
-	extra_space = GUARD_SIZE_ALIGNED + GUARD_SIZE;
-	/* SP DMA operates on multiple of 32 bytes, also with writes.
-	 * To prevent that the guard is being overwritten by SP DMA,
-	 * the "end" guard must start DDR aligned.
-	 */
-	aligned_size = DDR_ALIGN(aligned_size);
-#endif
-
-	if (attribute & MMGR_ATTRIBUTE_CLEARED) {
-		if (attribute & MMGR_ATTRIBUTE_CACHED) {
-			if (attribute & MMGR_ATTRIBUTE_CONTIGUOUS) /* { */
-				ptr = hrt_isp_css_mm_calloc_contiguous(
-						aligned_size + extra_space);
-			/* } */ else /* { */
-				ptr = hrt_isp_css_mm_calloc_cached(
-						aligned_size + extra_space);
-			/* } */
-		} else { /* !MMGR_ATTRIBUTE_CACHED */
-			if (attribute & MMGR_ATTRIBUTE_CONTIGUOUS) /* { */
-				ptr = hrt_isp_css_mm_calloc_contiguous(
-						aligned_size + extra_space);
-			/* } */ else /* { */
-				ptr = hrt_isp_css_mm_calloc(
-						aligned_size + extra_space);
-			/* } */
-		}
-	} else { /* MMGR_ATTRIBUTE_CLEARED */
-		if (attribute & MMGR_ATTRIBUTE_CACHED) {
-			if (attribute & MMGR_ATTRIBUTE_CONTIGUOUS) /* { */
-				ptr = hrt_isp_css_mm_alloc_contiguous(
-						aligned_size + extra_space);
-			/* } */ else /* { */
-				ptr = hrt_isp_css_mm_alloc_cached(
-						aligned_size + extra_space);
-			/* } */
-		} else { /* !MMGR_ATTRIBUTE_CACHED */
-			if (attribute & MMGR_ATTRIBUTE_CONTIGUOUS) /* { */
-				ptr = hrt_isp_css_mm_alloc_contiguous(
-						aligned_size + extra_space);
-			/* } */ else /* { */
-				ptr = hrt_isp_css_mm_alloc(
-						aligned_size + extra_space);
-			/* } */
-		}
-	}
-
-#if SH_CSS_MEMORY_GUARDING
-	/* ptr is the user pointer, so we need to skip the "begin" guard */
-	ptr += GUARD_SIZE_ALIGNED;
-	alloc_admin_add(ptr, aligned_size);
-#endif
-
-	return ptr;
-}
-
-ia_css_ptr mmgr_realloc_attr(
-	ia_css_ptr			vaddr,
-	const size_t			size,
-	const uint16_t			attribute)
-{
-assert(page_table_base_address != (sys_address)-1);
-assert((attribute & MMGR_ATTRIBUTE_UNUSED) == 0);
-/* assert(attribute == MMGR_ATTRIBUTE_DEFAULT); */
-/* Apparently we don't have this one */
-assert(0);
-(void)vaddr;
-(void)size;
-(void)attribute;
-return 0;
-}
-
-ia_css_ptr mmgr_mmap(const void *ptr, const size_t size, uint16_t attribute,
-		void *context)
-{
-	struct hrt_userbuffer_attr *userbuffer_attr = context;
-	return hrt_isp_css_mm_alloc_user_ptr(size, (void *)ptr,
-					userbuffer_attr->pgnr,
-					userbuffer_attr->type,
-					attribute & HRT_BUF_FLAG_CACHED);
-}
-
-void mmgr_clear(
-	ia_css_ptr			vaddr,
-	const size_t			size)
-{
-	mmgr_set(vaddr, (uint8_t)0, size);
-}
-
-void mmgr_set(
-	ia_css_ptr			vaddr,
-	const uint8_t			data,
-	const size_t			size)
-{
-#if SH_CSS_MEMORY_GUARDING
-	assert(mem_guard_valid(vaddr, size));
-#endif
-	hrt_isp_css_mm_set(vaddr, (int)data, size);
-return;
-}
-
-void mmgr_load(
-	const ia_css_ptr		vaddr,
-	void				*data,
-	const size_t			size)
-{
-#if SH_CSS_MEMORY_GUARDING
-	assert(mem_guard_valid(vaddr, size));
-#endif
-	hrt_isp_css_mm_load(vaddr, data, size);
-return;
-}
-
-void mmgr_store(
-	const ia_css_ptr		vaddr,
-	const void				*data,
-	const size_t			size)
-{
-#if SH_CSS_MEMORY_GUARDING
-	assert(mem_guard_valid(vaddr, size));
-#endif
-	hrt_isp_css_mm_store(vaddr, data, size);
-return;
-}
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21_build/atomisp_driver/hrt/memory_access.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21_build/atomisp_driver/hrt/memory_access.c
new file mode 120000
index 0000000..f199c02
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21_build/atomisp_driver/hrt/memory_access.c
@@ -0,0 +1 @@
+../../../atomisp_driver/hrt/memory_access.c
\ No newline at end of file
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21_build/css/isp/kernels/bnlm/ia_css_bnlm_state.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21_build/css/isp/kernels/bnlm/ia_css_bnlm_state.h
deleted file mode 120000
index fe2a104..0000000
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21_build/css/isp/kernels/bnlm/ia_css_bnlm_state.h
+++ /dev/null
@@ -1 +0,0 @@
-../../../../../css/isp/kernels/bnlm/ia_css_bnlm_state.h
\ No newline at end of file
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21_build/css/isp/kernels/bnlm/ia_css_bnlm_state.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21_build/css/isp/kernels/bnlm/ia_css_bnlm_state.h
deleted file mode 120000
index fe2a104..0000000
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21_build/css/isp/kernels/bnlm/ia_css_bnlm_state.h
+++ /dev/null
@@ -1 +0,0 @@
-../../../../../css/isp/kernels/bnlm/ia_css_bnlm_state.h
\ No newline at end of file
-- 
1.9.1

