From 8eb8991c16ae6fde320e0b578276ef13bf8748d8 Mon Sep 17 00:00:00 2001
From: Gwenn Bourree <gwenn.bourree@intel.com>
Date: Fri, 10 Apr 2015 15:12:47 +0200
Subject: [PATCH] [Telephony/MCD]: power off modem when shutdown

In order to correctly release the IPC link, MCD
must power off the modem when the platform shutdown
or reboot.

Change-Id: Ifbabb62d7896612ac0e85239ec2cf400231ff02c
Signed-off-by: Gwenn Bourree <gwenn.bourree@intel.com>
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-29785
---
 drivers/staging/modem_control/mdm_ctrl.c | 19 +++++++++----------
 1 file changed, 9 insertions(+), 10 deletions(-)

diff --git a/drivers/staging/modem_control/mdm_ctrl.c b/drivers/staging/modem_control/mdm_ctrl.c
index 0f3eb5a..dfc8367 100644
--- a/drivers/staging/modem_control/mdm_ctrl.c
+++ b/drivers/staging/modem_control/mdm_ctrl.c
@@ -459,12 +459,17 @@ out:
 long mdm_ctrl_dev_ioctl(struct file *filep, unsigned int cmd, unsigned long arg)
 {
 	unsigned int minor = iminor(file_inode(filep));
-	struct mdm_info *mdm = &mdm_drv->mdm[minor];
+	struct mdm_info *mdm;
 	long ret = 0;
 	unsigned int mdm_state;
 	unsigned int param;
 	struct mdm_ctrl_cfg cfg;
 
+	if (!mdm_drv)
+		return -ENODEV;
+
+	mdm = &mdm_drv->mdm[minor];
+
 	pr_info(DRVNAME ": ioctl request 0x%x received on %d\n", cmd, minor);
 
 	if (!mcd_is_initialized(mdm)) {
@@ -706,7 +711,7 @@ static unsigned int mdm_ctrl_dev_poll(struct file *filep,
 				      struct poll_table_struct *pt)
 {
 	unsigned int minor = iminor(file_inode(filep));
-	struct mdm_info *mdm = &mdm_drv->mdm[minor];
+	struct mdm_info *mdm;
 	unsigned int ret = 0;
 
 	if (!mdm_drv)
@@ -722,7 +727,7 @@ static unsigned int mdm_ctrl_dev_poll(struct file *filep,
 
 	/* State notify */
 	if (mdm->polled_state_reached ||
-	    (mdm_ctrl_get_state(mdm) & mdm->polled_states)) {
+		(mdm_ctrl_get_state(mdm) & mdm->polled_states)) {
 
 		mdm->polled_state_reached = false;
 		ret |= POLLHUP | POLLRDNORM;
@@ -949,7 +954,6 @@ static int mdm_ctrl_module_remove(struct platform_device *pdev)
 
 	for (i = 0; i < driver_data->nb_mdms; i++) {
 		struct mdm_info *mdm = &driver_data->mdm[i];
-
 		if (mdm->is_mdm_ctrl_disabled)
 			continue;
 		/*
@@ -997,12 +1001,6 @@ static int mdm_ctrl_module_remove(struct platform_device *pdev)
 		kfree(mdm->pdata->pmic_data);
 	}
 
-	/* Unregister the device */
-	device_destroy(mdm_drv->class, mdm_drv->tdev);
-	class_destroy(mdm_drv->class);
-	cdev_del(&mdm_drv->cdev);
-	unregister_chrdev_region(mdm_drv->tdev, 1);
-
 	/* Free the driver context */
 	mdm_ctrl_put_device_info(driver_data, pdev);
 	kfree(driver_data->mdm);
@@ -1037,6 +1035,7 @@ MODULE_DEVICE_TABLE(platform, mdm_ctrl_id_table);
 static struct platform_driver mcd_driver = {
 	.probe = mdm_ctrl_module_probe,
 	.remove = mdm_ctrl_module_remove,
+	.shutdown = mdm_ctrl_module_shutdown,
 	.driver = {
 		   .name = DRVNAME,
 		   .owner = THIS_MODULE,
-- 
1.9.1

