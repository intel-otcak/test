From e9b0e3430291e05f8b33ac7a9352c26e585c411f Mon Sep 17 00:00:00 2001
Message-Id: <e9b0e3430291e05f8b33ac7a9352c26e585c411f.1423872525.git.feitong.yi@intel.com>
In-Reply-To: <3062c7e6b919c393846ff0e13558e7f648b352ca.1423872525.git.feitong.yi@intel.com>
References: <3062c7e6b919c393846ff0e13558e7f648b352ca.1423872525.git.feitong.yi@intel.com>
From: Gaurav K Singh <gaurav.k.singh@intel.com>
Date: Tue, 13 Jan 2015 17:03:17 +0530
Subject: [PATCH 44/95] MUST_REBASE [VPG]: video/adf/intel: Update the DSI
 enable path to support dual link

We need to program both port registers during dual link enable path.

MUST_REBASE: Since Google ADF framework is not in upstream and also
we cannot have two display drivers, other one being i915, we need to
work on i915 and ADF convergence path before it can be upstreamed.

For: GMINL-5276
Change-Id: I97428238264dbf571a78a8be48fa2cd27708d334
Signed-off-by: Gaurav K Singh <gaurav.k.singh@intel.com>
---
 drivers/video/adf/intel/core/vlv/vlv_dsi_port.c |    9 ++++++-
 drivers/video/adf/intel/core/vlv/vlv_pipeline.c |   30 +++++++++++++++++------
 2 files changed, 30 insertions(+), 9 deletions(-)

diff --git a/drivers/video/adf/intel/core/vlv/vlv_dsi_port.c b/drivers/video/adf/intel/core/vlv/vlv_dsi_port.c
index f12cc48..8849a79 100644
--- a/drivers/video/adf/intel/core/vlv/vlv_dsi_port.c
+++ b/drivers/video/adf/intel/core/vlv/vlv_dsi_port.c
@@ -176,6 +176,13 @@ u32  vlv_dsi_port_prepare(struct vlv_dsi_port *port,
 	struct dsi_context *intel_dsi = &config->ctx;
 	unsigned int bpp = config->bpp;
 	u32 val, tmp;
+	u16 mode_hdisplay = mode->hdisplay;
+
+	if (intel_dsi->dual_link) {
+		mode_hdisplay /= 2;
+		if (intel_dsi->dual_link == DSI_DUAL_LINK_FRONT_BACK)
+			mode_hdisplay += intel_dsi->pixel_overlap;
+	}
 
 	REG_WRITE(port->dr_offset, 0x0);
 	usleep_range(2000, 2500);
@@ -203,7 +210,7 @@ u32  vlv_dsi_port_prepare(struct vlv_dsi_port *port,
 
 	REG_WRITE(port->dpi_res_offset,
 		mode->vdisplay << VERTICAL_ADDRESS_SHIFT |
-		mode->hdisplay << HORIZONTAL_ADDRESS_SHIFT);
+		mode_hdisplay << HORIZONTAL_ADDRESS_SHIFT);
 
 	set_dsi_timings(port, mode, config);
 
diff --git a/drivers/video/adf/intel/core/vlv/vlv_pipeline.c b/drivers/video/adf/intel/core/vlv/vlv_pipeline.c
index af12494..cd22c29 100644
--- a/drivers/video/adf/intel/core/vlv/vlv_pipeline.c
+++ b/drivers/video/adf/intel/core/vlv/vlv_pipeline.c
@@ -105,8 +105,11 @@ u32 vlv_dsi_prepare_on(struct intel_pipeline *pipeline,
 	struct vlv_pipeline *disp = to_vlv_pipeline(pipeline);
 	struct vlv_pll *pll = &disp->pll;
 	struct vlv_pipe *pipe = &disp->pipe;
-	struct vlv_dsi_port *dsi_port = &disp->port.dsi_port[pll->port_id];
+	struct vlv_dsi_port *dsi_port = NULL;
 	struct dsi_config *config = pipeline->params.dsi.dsi_config;
+	struct dsi_pipe *dsi_pipe = NULL;
+	struct dsi_context *dsi_ctx = NULL;
+	enum port port;
 	u32 err = 0;
 
 	if (disp->type == INTEL_PIPE_DSI) {
@@ -125,9 +128,13 @@ u32 vlv_dsi_prepare_on(struct intel_pipeline *pipeline,
 		if (err)
 			goto out;
 
-		vlv_dsi_port_set_device_ready(dsi_port);
-
-		vlv_dsi_port_prepare(dsi_port, mode, config);
+		dsi_pipe = &disp->gen.dsi;
+		dsi_ctx = &dsi_pipe->config.ctx;
+		for_each_dsi_port(port, dsi_ctx->ports) {
+			dsi_port = &disp->port.dsi_port[port];
+			vlv_dsi_port_set_device_ready(dsi_port);
+			vlv_dsi_port_prepare(dsi_port, mode, config);
+		}
 
 		/* need to make panel calls so return to common code */
 	}
@@ -298,13 +305,20 @@ u32 vlv_dsi_pre_pipeline_on(struct intel_pipeline *pipeline,
 		struct drm_mode_modeinfo *mode)
 {
 	struct vlv_pipeline *disp = to_vlv_pipeline(pipeline);
-	struct vlv_pll *pll = &disp->pll;
-	struct vlv_dsi_port *port = &disp->port.dsi_port[pll->port_id];
+	struct vlv_dsi_port *dsi_port = NULL;
+	struct dsi_pipe *dsi_pipe = NULL;
+	struct dsi_context *dsi_ctx = NULL;
+	enum port port;
 	u32 err = 0;
 
 	if (disp->type == INTEL_PIPE_DSI) {
-		err = vlv_dsi_port_pre_enable(port, mode,
-			pipeline->params.dsi.dsi_config);
+		dsi_pipe = &disp->gen.dsi;
+		dsi_ctx = &dsi_pipe->config.ctx;
+		for_each_dsi_port(port, dsi_ctx->ports) {
+			dsi_port = &disp->port.dsi_port[port];
+			err = vlv_dsi_port_pre_enable(dsi_port, mode,
+				pipeline->params.dsi.dsi_config);
+		}
 	}
 
 	return err;
-- 
1.7.9.5

