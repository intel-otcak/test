From 1e683913b452e428c9315bdcb40dc00d7bd52517 Mon Sep 17 00:00:00 2001
From: Ramakrishna Pallala <ramakrishna.pallala@intel.com>
Date: Fri, 13 Mar 2015 05:27:10 +0530
Subject: [PATCH] bq24192_charger: remove interrupt disabling in suspend flow

This patch removes the WA added earlier to handle WDT interrupts
in S3 case. As teh recent revision of the chip fixes the WDT issue
we can remove the interrupt disabling logic in suspend call.

Change-Id: Ie55b07a6edce58bfb43f6322b0cd8c4c67da9204
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-19406
Signed-off-by: Ramakrishna Pallala <ramakrishna.pallala@intel.com>
---
 drivers/power/bq24192_charger.c | 32 +-------------------------------
 1 file changed, 1 insertion(+), 31 deletions(-)

diff --git a/drivers/power/bq24192_charger.c b/drivers/power/bq24192_charger.c
index 5602d68..3b6d5c6 100644
--- a/drivers/power/bq24192_charger.c
+++ b/drivers/power/bq24192_charger.c
@@ -2306,6 +2306,7 @@ static int bq24192_probe(struct i2c_client *client,
 			dev_err(&chip->client->dev,
 				"Failed to check cable status during probe\n");
 	}
+
 	return 0;
 }
 
@@ -2332,22 +2333,6 @@ static int bq24192_suspend(struct device *dev)
 {
 	struct bq24192_chip *chip = dev_get_drvdata(dev);
 
-	if (chip->irq > 0) {
-		/*
-		 * Once the WDT is expired all bq24192 registers gets
-		 * set to default which means WDT is programmed to 40s
-		 * and if there is no charger connected, no point
-		 * feeding the WDT. Since reg07[1] is set to default,
-		 * charger will interrupt SOC every 40s which is not
-		 * good for S3. In this case we need to free chgr_int_n
-		 * interrupt so that no interrupt from charger wakes
-		 * up the platform in case of S3. Interrupt will be
-		 * re-enabled on charger connect.
-		 */
-		if (chip->irq > 0)
-			free_irq(chip->irq, chip);
-	}
-
 	dev_dbg(&chip->client->dev, "bq24192 suspend\n");
 	return 0;
 }
@@ -2355,22 +2340,7 @@ static int bq24192_suspend(struct device *dev)
 static int bq24192_resume(struct device *dev)
 {
 	struct bq24192_chip *chip = dev_get_drvdata(dev);
-	int ret;
 
-	if (chip->irq > 0) {
-		ret = request_threaded_irq(chip->irq,
-				bq24192_irq_isr, bq24192_irq_thread,
-				IRQF_TRIGGER_FALLING, "BQ24192", chip);
-		if (ret) {
-			dev_warn(&bq24192_client->dev,
-				"failed to register irq for pin %d\n",
-				chip->irq);
-		} else {
-			dev_warn(&bq24192_client->dev,
-				"registered charger irq for pin %d\n",
-				chip->irq);
-		}
-	}
 	dev_dbg(&chip->client->dev, "bq24192 resume\n");
 	return 0;
 }
-- 
1.9.1

