From 9045637e149bbbcc02faaff73998d8921ba6304a Mon Sep 17 00:00:00 2001
Message-Id: <9045637e149bbbcc02faaff73998d8921ba6304a.1433790409.git.chang-joon.lee@intel.com>
From: Shashank Sharma <shashank.sharma@intel.com>
Date: Tue, 2 Jun 2015 19:27:33 +0530
Subject: [PATCH] REVERTME [VPG]: drm/i915: HACK: Register one HDMI port

On CHT HR platform, the VBT tries to configure PORT_B as
HDMI port, but the SDVO bit for PORT_B on this platform
doesn't get set due to a BIOS problem. So this patch
removes the SDVO bit check before initializing HDMI.

But if we remove this check, there are possibility of
initialization of multiple HDMI displays, as few VBTs
contain multiple HDMI entries.

The current audio driver can support only one external
HDMI panel. Enumeration of more than one HDMI can cause
crash during bootup.On CHT RVP, VBT tries to enumerate
two HDMI ports.

This patch adds following hacks to handle this situation:
1. Removes SDVO bit check
2. Adds a port preference for HDMI init. If the VBT is
   enumerating only one HDMI, the driver will init
   HDMI on that port. But if the VBT enumerates more than
   one HDMI, driver follows this preference order:
	PORT_D > PORT_B > PORT_C

REVERTME: This is a hack, and must be removed once audio
driver starts supporting multiple clients.

Issue: IMINAN-26954
Change-Id: I4d4990663d79c059b087ce10864273f455d7babd
Signed-off-by: Shashank Sharma <shashank.sharma@intel.com>
---
 drivers/gpu/drm/i915/intel_display.c | 44 ++++++++++++++++++++++++++++++------
 1 file changed, 37 insertions(+), 7 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index d3f6e83..24012eb 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -13180,6 +13180,8 @@ static bool intel_crt_present(struct drm_device *dev)
 static void intel_setup_outputs_vbt(struct drm_device *dev)
 {
 	struct drm_i915_private *dev_priv = dev->dev_private;
+	int hdmi_ports = 0;
+	int port = 0;
 	int i;
 
 	for (i = 0; i < dev_priv->vbt.child_dev_num; i++) {
@@ -13199,7 +13201,7 @@ static void intel_setup_outputs_vbt(struct drm_device *dev)
 		case DVO_PORT_DPC:
 		case DVO_PORT_DPD:
 			if (devtype & DEVICE_TYPE_eDP_BITS) {
-				int port = dvo_port - DVO_PORT_CRT;
+				port = dvo_port - DVO_PORT_CRT;
 				intel_dp_init(dev, VLV_DISPLAY_BASE
 					+ DDI_BUF_CTL(port), port);
 			}
@@ -13209,11 +13211,8 @@ static void intel_setup_outputs_vbt(struct drm_device *dev)
 		case DVO_PORT_HDMID:
 			if (devtype == DEVICE_TYPE_DP_HDMI_DVI ||
 						devtype == DEVICE_TYPE_HDMI) {
-				int hdmi_reg = VLV_DISPLAY_BASE
-						+ PORT_ADDR(dvo_port);
-				if (I915_READ(hdmi_reg) & SDVO_DETECTED)
-					intel_hdmi_init(dev, hdmi_reg,
-							dvo_port);
+				/* Delay HDMI init, save the port */
+				hdmi_ports |= (1 << dvo_port);
 			}
 
 			if (devtype == DEVICE_TYPE_DP_HDMI_DVI ||
@@ -13221,14 +13220,45 @@ static void intel_setup_outputs_vbt(struct drm_device *dev)
 				intel_dp_init(dev, VLV_DISPLAY_BASE
 						+ DDI_BUF_CTL(dvo_port),
 							dvo_port);
-			break;
 			}
+			break;
 		default:
 			DRM_DEBUG_KMS("Unknown port\n");
 			break;
 
 		}
 	}
+
+	/*
+	* Current audio driver can support only one
+	* instance of HDMI. Dual HDMI enumeration causes
+	* panic during bootup. To handle this, for now
+	* add a preference order for enumeration of displays
+	* in driver: HDMI port D over port B over port C
+	* If the device has single HDMI enemurated, driver
+	* picks that port, but in case of multiple HDMI, it
+	* selects PORT D
+	*/
+	if (hdmi_ports) {
+		int hdmi_reg = 0;
+		if (hdmi_ports & (1 << DVO_PORT_HDMID)) {
+			port = DVO_PORT_HDMID;
+			hdmi_reg = VLV_DISPLAY_BASE
+				+ PORT_ADDR(port);
+		} else if (hdmi_ports & (1 << DVO_PORT_HDMIB)) {
+			port = DVO_PORT_HDMIB;
+			hdmi_reg = VLV_DISPLAY_BASE
+				+ PORT_ADDR(port);
+		} else if (hdmi_ports & (1 << DVO_PORT_HDMIC)) {
+			port = DVO_PORT_HDMIC;
+			hdmi_reg = VLV_DISPLAY_BASE
+				+ PORT_ADDR(port);
+		}
+
+		intel_hdmi_init(dev, hdmi_reg, port);
+		DRM_DEBUG_DRIVER("HDMI port=%c\n",
+			port_name(port));
+	}
 }
 
 static void intel_setup_outputs(struct drm_device *dev)
-- 
1.9.1

