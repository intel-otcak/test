From: David Cohen <david.a.cohen@intel.com>
Subject: usb: dwc3/phy: implement proper way to do SDP charging

This patch implements a proper way to handle SDP charging.

This patch still needs to be split and improved to an upstream way, but it is
as close as possible to optimal on such short notice.

It is not a hack anymore :)

Signed-off-by: David Cohen <david.a.cohen@intel.com>

---
 drivers/usb/dwc3/gadget.c     |   27 +++++++++++++++++++++++++++
 drivers/usb/phy/phy-generic.c |   14 ++++++++++++++
 2 files changed, 41 insertions(+)

--- linux.orig/drivers/usb/dwc3/gadget.c
+++ linux/drivers/usb/dwc3/gadget.c
@@ -1678,6 +1678,32 @@ static int dwc3_gadget_stop(struct usb_g
 	return 0;
 }
 
+static int __dwc3_vbus_draw(struct dwc3 *dwc, unsigned ma)
+{
+        int             ret;
+        struct usb_phy  *usb_phy;
+
+        usb_phy = usb_get_phy(USB_PHY_TYPE_USB2);
+        if (!usb_phy) {
+                dev_err(dwc->dev, "OTG driver not available\n");
+                return -ENODEV;
+        }
+
+        ret = usb_phy_set_power(usb_phy, ma);
+        usb_put_phy(usb_phy);
+
+        return ret;
+}
+
+static int dwc3_vbus_draw(struct usb_gadget *g, unsigned ma)
+{
+        struct dwc3     *dwc = gadget_to_dwc(g);
+
+        dev_info(dwc->dev, "otg_set_power: %d mA\n", ma);
+
+        return __dwc3_vbus_draw(dwc, ma);
+}
+
 static const struct usb_gadget_ops dwc3_gadget_ops = {
 	.get_frame		= dwc3_gadget_get_frame,
 	.wakeup			= dwc3_gadget_wakeup,
@@ -1685,6 +1711,7 @@ static const struct usb_gadget_ops dwc3_
 	.pullup			= dwc3_gadget_pullup,
 	.udc_start		= dwc3_gadget_start,
 	.udc_stop		= dwc3_gadget_stop,
+	.vbus_draw		= dwc3_vbus_draw,
 };
 
 /* -------------------------------------------------------------------------- */
--- linux.orig/drivers/usb/phy/phy-generic.c
+++ linux/drivers/usb/phy/phy-generic.c
@@ -162,6 +162,19 @@ static int nop_set_host(struct usb_otg *
 	return 0;
 }
 
+static int nop_set_power(struct usb_phy *phy, unsigned mA)
+{
+	/* Notify other drivers that device enumerated or not.
+	 * e.g It is needed by some charger driver, to set
+	 * charging current for SDP case */
+	atomic_notifier_call_chain(&phy->notifier,
+				   USB_EVENT_ENUMERATED, &mA);
+
+	dev_info(phy->dev, "Draw %d mA\n", mA);
+
+	return 0;
+}
+
 int usb_phy_gen_create_phy(struct device *dev, struct usb_phy_gen_xceiv *nop,
 		struct usb_phy_gen_xceiv_platform_data *pdata)
 {
@@ -241,6 +254,7 @@ int usb_phy_gen_create_phy(struct device
 	nop->phy.set_suspend	= nop_set_suspend;
 	nop->phy.state		= OTG_STATE_UNDEFINED;
 	nop->phy.type		= type;
+	nop->phy.set_power	= nop_set_power;
 
 	nop->phy.otg->phy		= &nop->phy;
 	nop->phy.otg->set_host		= nop_set_host;
