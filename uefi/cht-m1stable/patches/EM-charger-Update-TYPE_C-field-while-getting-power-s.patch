From af39d90d3954afe02aba09b7f83690ac64cc77f1 Mon Sep 17 00:00:00 2001
From: Pavan Kumar S <pavan.kumar.s@intel.com>
Date: Wed, 20 May 2015 15:04:09 +0530
Subject: [PATCH] EM/charger: Update TYPE_C field while getting power-supply
 type

Also, move the function to the charger-framework to avoid duplication
in individual charger-drivers.

Change-Id: I711aa92e279cf749ab2f73683a2ab03630bd6ac0
Tracked-On: https://jira01.devtools.intel.com/browse/AKP-1670
Signed-off-by: Pavan Kumar S <pavan.kumar.s@intel.com>
---
 drivers/power/bq24192_charger.c      | 27 +--------------------------
 drivers/power/bq24261_charger.c      | 27 +--------------------------
 drivers/power/dc_xpwr_charger.c      | 25 +------------------------
 drivers/power/power_supply.h         |  5 +++++
 drivers/power/power_supply_charger.c | 29 +++++++++++++++++++++++++++++
 5 files changed, 37 insertions(+), 76 deletions(-)

diff --git a/drivers/power/bq24192_charger.c b/drivers/power/bq24192_charger.c
index 4b4e20c0b7a6..3feac501681e 100644
--- a/drivers/power/bq24192_charger.c
+++ b/drivers/power/bq24192_charger.c
@@ -44,6 +44,7 @@
 #include <linux/gpio.h>
 #include <linux/completion.h>
 #include <linux/thermal.h>
+#include "power_supply.h"
 
 #include <asm/intel_em_config.h>
 
@@ -355,32 +356,6 @@ static void *platform_byt_get_batt_charge_profile(void)
 	return &byt_ps_batt_chrg_prof;
 }
 
-static enum power_supply_type get_power_supply_type(
-		enum power_supply_charger_cable_type cable)
-{
-
-	switch (cable) {
-
-	case POWER_SUPPLY_CHARGER_TYPE_USB_DCP:
-		return POWER_SUPPLY_TYPE_USB_DCP;
-	case POWER_SUPPLY_CHARGER_TYPE_USB_CDP:
-		return POWER_SUPPLY_TYPE_USB_CDP;
-	case POWER_SUPPLY_CHARGER_TYPE_USB_ACA:
-	case POWER_SUPPLY_CHARGER_TYPE_ACA_DOCK:
-		return POWER_SUPPLY_TYPE_USB_ACA;
-	case POWER_SUPPLY_CHARGER_TYPE_AC:
-		return POWER_SUPPLY_TYPE_MAINS;
-	case POWER_SUPPLY_CHARGER_TYPE_WIRELESS:
-		return POWER_SUPPLY_TYPE_WIRELESS;
-	case POWER_SUPPLY_CHARGER_TYPE_NONE:
-	case POWER_SUPPLY_CHARGER_TYPE_USB_SDP:
-	default:
-		return POWER_SUPPLY_TYPE_USB;
-	}
-
-	return POWER_SUPPLY_TYPE_USB;
-}
-
 /*-------------------------------------------------------------------------*/
 
 
diff --git a/drivers/power/bq24261_charger.c b/drivers/power/bq24261_charger.c
index d45a7d12383e..b5896d73861e 100644
--- a/drivers/power/bq24261_charger.c
+++ b/drivers/power/bq24261_charger.c
@@ -40,6 +40,7 @@
 #include <linux/seq_file.h>
 #include <linux/debugfs.h>
 #include <linux/wakelock.h>
+#include "power_supply.h"
 
 #include <asm/intel_scu_ipc.h>
 
@@ -319,32 +320,6 @@ static inline int get_battery_current(int *cur);
 static int bq24261_handle_irq(struct bq24261_charger *chip, u8 stat_reg);
 static inline int bq24261_set_iterm(struct bq24261_charger *chip, int iterm);
 
-enum power_supply_type get_power_supply_type(
-		enum power_supply_charger_cable_type cable)
-{
-
-	switch (cable) {
-
-	case POWER_SUPPLY_CHARGER_TYPE_USB_DCP:
-		return POWER_SUPPLY_TYPE_USB_DCP;
-	case POWER_SUPPLY_CHARGER_TYPE_USB_CDP:
-		return POWER_SUPPLY_TYPE_USB_CDP;
-	case POWER_SUPPLY_CHARGER_TYPE_USB_ACA:
-	case POWER_SUPPLY_CHARGER_TYPE_ACA_DOCK:
-		return POWER_SUPPLY_TYPE_USB_ACA;
-	case POWER_SUPPLY_CHARGER_TYPE_AC:
-		return POWER_SUPPLY_TYPE_MAINS;
-	case POWER_SUPPLY_CHARGER_TYPE_SE1:
-		return POWER_SUPPLY_TYPE_USB_DCP;
-	case POWER_SUPPLY_CHARGER_TYPE_NONE:
-	case POWER_SUPPLY_CHARGER_TYPE_USB_SDP:
-	default:
-		return POWER_SUPPLY_TYPE_USB;
-	}
-
-	return POWER_SUPPLY_TYPE_USB;
-}
-
 static void lookup_regval(u16 tbl[][2], size_t size, u16 in_val, u8 *out_val)
 {
 	int i;
diff --git a/drivers/power/dc_xpwr_charger.c b/drivers/power/dc_xpwr_charger.c
index 12f76b81d976..1afc2776b6c9 100644
--- a/drivers/power/dc_xpwr_charger.c
+++ b/drivers/power/dc_xpwr_charger.c
@@ -44,6 +44,7 @@
 #include <linux/power/dc_xpwr_charger.h>
 #include <linux/extcon.h>
 #include <linux/thermal.h>
+#include "power_supply.h"
 
 #define DC_PS_STAT_REG			0x00
 #define PS_STAT_VBUS_TRIGGER		(1 << 0)
@@ -301,30 +302,6 @@ static int pmic_chrg_reg_clearb(struct pmic_chrg_info *info, int reg, u8 mask)
 	return ret;
 }
 
-static enum power_supply_type get_power_supply_type(
-		enum power_supply_charger_cable_type cable)
-{
-
-	switch (cable) {
-
-	case POWER_SUPPLY_CHARGER_TYPE_USB_DCP:
-		return POWER_SUPPLY_TYPE_USB_DCP;
-	case POWER_SUPPLY_CHARGER_TYPE_USB_CDP:
-		return POWER_SUPPLY_TYPE_USB_CDP;
-	case POWER_SUPPLY_CHARGER_TYPE_USB_ACA:
-	case POWER_SUPPLY_CHARGER_TYPE_ACA_DOCK:
-		return POWER_SUPPLY_TYPE_USB_ACA;
-	case POWER_SUPPLY_CHARGER_TYPE_AC:
-		return POWER_SUPPLY_TYPE_MAINS;
-	case POWER_SUPPLY_CHARGER_TYPE_NONE:
-	case POWER_SUPPLY_CHARGER_TYPE_USB_SDP:
-	default:
-		return POWER_SUPPLY_TYPE_USB;
-	}
-
-	return POWER_SUPPLY_TYPE_USB;
-}
-
 static inline int pmic_chrg_set_cc(struct pmic_chrg_info *info, int cc)
 {
 	u8 reg_val;
diff --git a/drivers/power/power_supply.h b/drivers/power/power_supply.h
index d2b3a537953d..cc3d92cfe56b 100644
--- a/drivers/power/power_supply.h
+++ b/drivers/power/power_supply.h
@@ -47,6 +47,8 @@ extern int power_supply_register_charger(struct power_supply *psy);
 extern int power_supply_unregister_charger(struct power_supply *psy);
 extern int psy_charger_throttle_charger(struct power_supply *psy,
 					unsigned long state);
+extern enum power_supply_type get_power_supply_type(
+		enum power_supply_charger_cable_type cable);
 
 #else
 
@@ -59,5 +61,8 @@ static inline int power_supply_unregister_charger(struct power_supply *psy)
 static inline int psy_charger_throttle_charger(struct power_supply *psy,
 					unsigned long state)
 { return 0; }
+static inline enum power_supply_type get_power_supply_type(
+		enum power_supply_charger_cable_type cable)
+{ return 0; }
 
 #endif
diff --git a/drivers/power/power_supply_charger.c b/drivers/power/power_supply_charger.c
index 20e5c7363c7f..ae756aa0d750 100644
--- a/drivers/power/power_supply_charger.c
+++ b/drivers/power/power_supply_charger.c
@@ -1020,6 +1020,35 @@ int power_supply_register_charger(struct power_supply *psy)
 }
 EXPORT_SYMBOL(power_supply_register_charger);
 
+enum power_supply_type get_power_supply_type(
+		enum power_supply_charger_cable_type cable)
+{
+
+	switch (cable) {
+
+	case POWER_SUPPLY_CHARGER_TYPE_USB_DCP:
+		return POWER_SUPPLY_TYPE_USB_DCP;
+	case POWER_SUPPLY_CHARGER_TYPE_USB_CDP:
+		return POWER_SUPPLY_TYPE_USB_CDP;
+	case POWER_SUPPLY_CHARGER_TYPE_USB_ACA:
+	case POWER_SUPPLY_CHARGER_TYPE_ACA_DOCK:
+		return POWER_SUPPLY_TYPE_USB_ACA;
+	case POWER_SUPPLY_CHARGER_TYPE_AC:
+		return POWER_SUPPLY_TYPE_MAINS;
+	case POWER_SUPPLY_CHARGER_TYPE_WIRELESS:
+		return POWER_SUPPLY_TYPE_WIRELESS;
+	case POWER_SUPPLY_CHARGER_TYPE_USB_TYPEC:
+		return POWER_SUPPLY_TYPE_USB_TYPEC;
+	case POWER_SUPPLY_CHARGER_TYPE_NONE:
+	case POWER_SUPPLY_CHARGER_TYPE_USB_SDP:
+	default:
+		return POWER_SUPPLY_TYPE_USB;
+	}
+
+	return POWER_SUPPLY_TYPE_USB;
+}
+EXPORT_SYMBOL(get_power_supply_type);
+
 static inline void flush_charger_context(struct power_supply *psy)
 {
 	struct charger_props *chrgr_prop, *tmp;
-- 
1.9.1

