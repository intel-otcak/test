From 8fc78e7a01e8c7ac6bb528b43f89d109c6b32f0c Mon Sep 17 00:00:00 2001
Message-Id: <8fc78e7a01e8c7ac6bb528b43f89d109c6b32f0c.1421709247.git.chang-joon.lee@intel.com>
In-Reply-To: <3650eb44734ad4fbe098313349da8185595a20d8.1421709247.git.chang-joon.lee@intel.com>
References: <3650eb44734ad4fbe098313349da8185595a20d8.1421709247.git.chang-joon.lee@intel.com>
From: Arun R Murthy <arun.r.murthy@intel.com>
Date: Fri, 14 Nov 2014 09:09:31 +0530
Subject: [PATCH 74/75] MUST_REBASE [VPG]: adf/intel/vlv: Add support for per
 pixel alpha

When pixel format is RGBX, then it remains same irrespective of
the alpha value. When pixel format is RGBA, then change it to RGBX if
alpha = 0, else if alpha = 1, the format remains unchained.

MUST_REBASE: Since Google ADF framework is not in upstream and also
we cannot have two display drivers, other one being i915, we need to
work on i915 and ADF convergence path before it can be upstreamed

For: GMINL-3547
Change-Id: I7fa6677c81377eeaa4661caddf3586b598f366ef
Signed-off-by: Arun R Murthy <arun.r.murthy@intel.com>
---
 drivers/video/adf/intel/core/vlv/vlv_pri_plane.c |   30 +++++++++++++++++++---
 drivers/video/adf/intel/core/vlv/vlv_sp_plane.c  |   28 ++++++++++++++++----
 2 files changed, 49 insertions(+), 9 deletions(-)

diff --git a/drivers/video/adf/intel/core/vlv/vlv_pri_plane.c b/drivers/video/adf/intel/core/vlv/vlv_pri_plane.c
index dec976a..24e5031 100644
--- a/drivers/video/adf/intel/core/vlv/vlv_pri_plane.c
+++ b/drivers/video/adf/intel/core/vlv/vlv_pri_plane.c
@@ -118,18 +118,39 @@ static const u32 pri_supported_tiling[] = {
 	INTEL_PLANE_TILE_X,
 };
 
-static int get_format_config(u32 drm_format, u32 *config, u8 *bpp)
+static int get_format_config(u32 drm_format, u32 *config, u8 *bpp,
+		u8 alpha)
 {
 	int i;
+	int ret = -EINVAL;
+
 	for (i = 0; i < ARRAY_SIZE(format_mapping); i++) {
 		if (format_mapping[i].drm_format == drm_format) {
 			*config = format_mapping[i].hw_config;
 			*bpp = format_mapping[i].bpp;
-			return 0;
+			ret = 0;
+			break;
 		}
 	}
+	if (alpha)
+		return ret;
+
+	switch (*config) {
+	case DISPPLANE_BGRA888:
+		*config = DISPPLANE_BGRX888;
+		break;
+	case DISPPLANE_RGBA101010:
+		*config = DISPPLANE_RGBX101010;
+		break;
+	case DISPPLANE_BGRA101010:
+		*config = DISPPLANE_BGRX101010;
+		break;
+	case DISPPLANE_RGBA888:
+		*config = DISPPLANE_RGBX888;
+		break;
+	}
 
-	return -EINVAL;
+	return ret;
 }
 
 static int init_context(struct vlv_pri_plane_context *ctx, u8 idx)
@@ -206,7 +227,8 @@ static int vlv_pri_calculate(struct intel_plane *plane,
 	u8 bpp = 0, prev_bpp = 0;
 	u8 i = 0;
 
-	get_format_config(buf->format, &format_config, &bpp);
+	get_format_config(buf->format, &format_config, &bpp,
+			config->alpha);
 
 	src_x = config->src_x;
 	src_y = config->src_y;
diff --git a/drivers/video/adf/intel/core/vlv/vlv_sp_plane.c b/drivers/video/adf/intel/core/vlv/vlv_sp_plane.c
index 3d08777..958aef9 100644
--- a/drivers/video/adf/intel/core/vlv/vlv_sp_plane.c
+++ b/drivers/video/adf/intel/core/vlv/vlv_sp_plane.c
@@ -139,19 +139,35 @@ static void context_destroy(struct vlv_sp_plane_context *ctx)
 	return;
 }
 
-static int get_format_config(u32 drm_format, u32 *format, u32 *bpp)
+static int get_format_config(u32 drm_format, u32 *format, u32 *bpp,
+		u8 alpha)
 {
 	int i;
+	int ret = -EINVAL;
 
 	for (i = 0; i < ARRAY_SIZE(format_mappings); i++) {
 		if (format_mappings[i].drm_format == drm_format) {
 			*format = format_mappings[i].hw_config;
 			*bpp = format_mappings[i].bpp;
-			return 0;
+			ret = 0;
+			break;
 		}
 	}
+	if (alpha)
+		return ret;
+	switch (*format) {
+	case DISPPLANE_BGRA888:
+		*format = DISPPLANE_BGRX888;
+		break;
+	case DISPPLANE_RGBA101010:
+		*format = DISPPLANE_RGBX101010;
+		break;
+	case DISPPLANE_RGBA888:
+		*format = DISPPLANE_RGBX888;
+		break;
+	}
 
-	return -EINVAL;
+	return ret;
 }
 
 static void vlv_sp_suspend(struct intel_dc_component *component)
@@ -264,7 +280,8 @@ static int vlv_sp_calculate(struct intel_plane *planeptr,
 	s2_zorder = (order >> 1) & 0x1;
 	s2_bottom = (order >> 0) & 0x1;
 
-	get_format_config(buf->format, &hw_format, &bpp);
+	get_format_config(buf->format, &hw_format, &bpp,
+			config->alpha);
 	sprctl = REG_READ(SPCNTR(pipe, plane));
 	prev_sprctl = sprctl;
 
@@ -440,7 +457,8 @@ static int vlv_sp_validate(struct intel_plane *plane, struct intel_buffer *buf,
 	clip.x2 = mode->hdisplay;
 	clip.y2 = mode->vdisplay;
 
-	if (get_format_config(buf->format, &format_config, &bpp)) {
+	if (get_format_config(buf->format, &format_config, &bpp,
+				config->alpha)) {
 		pr_err("ADF: pixel format not supported %s\n", __func__);
 		return -EINVAL;
 	}
-- 
1.7.9.5

