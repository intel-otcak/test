From fe431ee037713fd5711c03694566aeee8a3fa6a6 Mon Sep 17 00:00:00 2001
From: Praveen Diwakar <praveen.diwakar@intel.com>
Date: Sat, 25 Apr 2015 15:48:15 +0530
Subject: [PATCH] ASoC: Intel: Update set_speech_path command to support bwx

Issue: GMINL-8470

In order to support bwx mode a new command in added in
set_speech_path.

Change-Id: I3b5559f6d20dc0dab21e75eba33bfe4ff69fabbb
Signed-off-by: Praveen Diwakar <praveen.diwakar@intel.com>
Signed-off-by: Samreen Nilofer <samreen.nilofer@intel.com>
---
 sound/soc/intel/platform-libs/atom_controls.h    |  6 +++-
 sound/soc/intel/platform-libs/controls_v2_dpcm.c | 40 +++++++++++++++++-------
 sound/soc/intel/platform-libs/controls_v2_dpcm.h | 12 ++++---
 sound/soc/intel/sst/sst_platform.c               | 13 +++++++-
 4 files changed, 53 insertions(+), 18 deletions(-)

diff --git a/sound/soc/intel/platform-libs/atom_controls.h b/sound/soc/intel/platform-libs/atom_controls.h
index 5c08d7d1a5e6..918b3b7f8eb0 100644
--- a/sound/soc/intel/platform-libs/atom_controls.h
+++ b/sound/soc/intel/platform-libs/atom_controls.h
@@ -76,7 +76,11 @@
 
 #define SST_BT_FM_MUX_SHIFT	0
 #define SST_VOICE_MODE_SHIFT	1
-#define SST_BT_MODE_SHIFT	2
+#define SST_BT_SHIFT		2 /* without bwx */
+#define SST_BT_MODE_SHIFT	3 /* with bwx */
+
+#define SST_MODE_LEN		1 /* 1bit wide: SST_MAX_SSP_MUX */
+#define SST_DOMAIN_LEN		2 /* 2bit wide: SST_MAX_SSP_DOMAINS */
 
 /* in each mixer register we will define one bit for each input */
 #define SST_MIX_IP(x)		(x)
diff --git a/sound/soc/intel/platform-libs/controls_v2_dpcm.c b/sound/soc/intel/platform-libs/controls_v2_dpcm.c
index c81ab6d810a9..c6aafa5ef8dd 100644
--- a/sound/soc/intel/platform-libs/controls_v2_dpcm.c
+++ b/sound/soc/intel/platform-libs/controls_v2_dpcm.c
@@ -1149,11 +1149,11 @@ void send_ssp_cmd(struct snd_soc_platform *platform, const char *id, bool enable
 				- sizeof(struct sst_dsp_header);
 	mux_shift = sst->pdata->mux_shift[ssp_no];
 	mux = (mux_shift == -1) ? 0 : sst_reg_read(sst, SST_MUX_REG,
-						mux_shift, 1);
+						mux_shift, SST_MODE_LEN);
 
 	domain_shift = sst->pdata->domain_shift[ssp_no][mux];
 	domain = (domain_shift == -1) ? 0 : sst_reg_read(sst, SST_MUX_REG,
-							domain_shift, 1);
+						domain_shift, SST_DOMAIN_LEN);
 
 	config = &(sst->pdata->ssp_config)[ssp_no][mux][domain];
 	pr_debug("%s: ssp_id: %u, mux: %d, domain: %d\n", __func__,
@@ -1204,10 +1204,14 @@ static int sst_set_be_modules(struct snd_soc_dapm_widget *w,
 	return 0;
 }
 
+#define NARROWBAND		0
+#define WIDEBAND		1
+#define NARROWBAND_WITH_BWX	2
+
 static int sst_send_speech_path(struct sst_data *sst, u16 switch_state)
 {
 	struct sst_cmd_set_speech_path cmd;
-	bool is_wideband;
+	u8 is_wideband;
 
 	SST_FILL_DEFAULT_DESTINATION(cmd.header.dst);
 
@@ -1215,13 +1219,25 @@ static int sst_send_speech_path(struct sst_data *sst, u16 switch_state)
 	cmd.header.length = sizeof(struct sst_cmd_set_speech_path)
 				- sizeof(struct sst_dsp_header);
 	cmd.switch_state = switch_state;
-	cmd.config.cfg.s_length = 0;
-	cmd.config.cfg.format = 0;
-	cmd.config.cfg.rate = 0;
-
-	is_wideband = sst_reg_read(sst, SST_MUX_REG, SST_VOICE_MODE_SHIFT, 1);
-	if (is_wideband)
-		cmd.config.cfg.rate = 1;
+	cmd.cfg.s_length = 0;
+	cmd.cfg.format = 0;
+	cmd.cfg.bwx = 0;
+
+	is_wideband = sst_reg_read(sst, SST_MUX_REG,
+				SST_VOICE_MODE_SHIFT, SST_DOMAIN_LEN);
+	pr_debug("SST_VOICE_MODE %d\n", is_wideband);
+	switch (is_wideband) {
+	case NARROWBAND:
+		cmd.cfg.rate = 0;
+		break;
+	case WIDEBAND:
+		cmd.cfg.rate = 1;
+		break;
+	case NARROWBAND_WITH_BWX:
+		cmd.cfg.rate = 0;
+		cmd.cfg.bwx = 1;
+		break;
+	}
 	return sst_fill_and_send_cmd(sst, SST_IPC_IA_CMD, SST_FLAG_BLOCKED,
 				     SST_TASK_SBA, 0, &cmd,
 				     sizeof(cmd.header) + cmd.header.length);
@@ -1902,8 +1918,8 @@ static const char * const sst_nb_wb_texts[] = {
 static const struct snd_kcontrol_new sst_mux_controls[] = {
 	SST_SSP_MUX_CTL("domain voice mode", 0, SST_MUX_REG, SST_VOICE_MODE_SHIFT, sst_nb_wb_texts,
 			sst_mode_get, sst_voice_mode_put),
-	SST_SSP_MUX_CTL("domain bt mode", 0, SST_MUX_REG, SST_BT_MODE_SHIFT, sst_nb_wb_texts,
-			sst_mode_get, sst_mode_put),
+	SST_SSP_MUX_CTL("domain bt mode", 0, SST_MUX_REG, SST_BT_SHIFT,
+			sst_nb_wb_texts, sst_mode_get, sst_mode_put),
 };
 
 static const char * const slot_names[] = {
diff --git a/sound/soc/intel/platform-libs/controls_v2_dpcm.h b/sound/soc/intel/platform-libs/controls_v2_dpcm.h
index b104a6855730..3d7a821e87ef 100644
--- a/sound/soc/intel/platform-libs/controls_v2_dpcm.h
+++ b/sound/soc/intel/platform-libs/controls_v2_dpcm.h
@@ -383,13 +383,17 @@ struct pcm_cfg {
 		u8 format:3;
 } __packed;
 
+struct pcm_cfg_speech {
+		u16 bwx:8;
+		u16 s_length:2;
+		u16 rate:3;
+		u16 format:3;
+} __packed;
+
 struct sst_cmd_set_speech_path {
 	struct sst_dsp_header header;
 	u16    switch_state;
-	struct {
-		u16 rsvd:8;
-		struct pcm_cfg cfg;
-	} config;
+	struct pcm_cfg_speech cfg;
 } __packed;
 
 struct gain_cell {
diff --git a/sound/soc/intel/sst/sst_platform.c b/sound/soc/intel/sst/sst_platform.c
index 220eeef3b40e..af682d89e5ea 100644
--- a/sound/soc/intel/sst/sst_platform.c
+++ b/sound/soc/intel/sst/sst_platform.c
@@ -119,6 +119,15 @@ static const int sst_ssp_domain_shift[SST_NUM_SSPS][SST_MAX_SSP_MUX] = {
 	[SST_SSP2][0] = -1,
 };
 
+static const int sst_byt_ssp_domain_shift[SST_NUM_SSPS][SST_MAX_SSP_MUX] = {
+	[SST_SSP0][0] = -1,	/* no domain shift, i.e. single domain */
+	[SST_SSP1] = {
+		[SST_SSP_FM_MUX] = -1,
+		[SST_SSP_BT_MUX] = SST_BT_SHIFT,
+	},
+	[SST_SSP2][0] = -1,
+};
+
 #define SST_SSP_CODEC_MUX		0
 #define SST_SSP_CODEC_DOMAIN		0
 #define SST_SSP_MODEM_MUX		0
@@ -357,7 +366,9 @@ static void set_cht_cr_platform_config(void)
 	sst_platform_pdata.dfw_enable = 0;
 	memcpy(sst_platform_pdata.ssp_config, sst_ssp_configs_cht_cr, sizeof(sst_ssp_configs_cht_cr));
 	memcpy(sst_platform_pdata.mux_shift, sst_ssp_mux_shift, sizeof(sst_ssp_mux_shift));
-	memcpy(sst_platform_pdata.domain_shift, sst_ssp_domain_shift, sizeof(sst_ssp_domain_shift));
+
+	memcpy(sst_platform_pdata.domain_shift, sst_byt_ssp_domain_shift,
+					sizeof(sst_byt_ssp_domain_shift));
 	pr_info("audio:%s\n", __func__);
 }
 
-- 
1.9.1

