From df7ff2c0047773771b4ae072e7397a785846a776 Mon Sep 17 00:00:00 2001
Message-Id: <df7ff2c0047773771b4ae072e7397a785846a776.1430272235.git.chang-joon.lee@intel.com>
In-Reply-To: <0282bce11918ec0dd0c4e7e3bd54e392c2b27a51.1430272235.git.chang-joon.lee@intel.com>
References: <0282bce11918ec0dd0c4e7e3bd54e392c2b27a51.1430272235.git.chang-joon.lee@intel.com>
From: Yogesh Mohan Marimuthu <yogesh.mohan.marimuthu@intel.com>
Date: Fri, 10 Apr 2015 15:40:18 +0530
Subject: [PATCH 04/10] FOR_UPSTREAM [VPG]: drm/i915: send otp packets in DBI
 mode

Send mipi initialization sequence i,e OTP in DBI mode and return
to video mode for normal operation.

Issue: GMINL-8141
Change-Id: I6e4443324e50d74903bbe2c83590cbf0bcd122ba
Signed-off-by: Yogesh Mohan Marimuthu <yogesh.mohan.marimuthu@intel.com>
Signed-off-by: Uma Shankar <uma.shankar@intel.com>
Signed-off-by: Deepak M <m.deepak@intel.com>
---
 drivers/gpu/drm/i915/intel_dsi.c |   67 ++++++++++++++++++++++++++++----------
 1 file changed, 49 insertions(+), 18 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_dsi.c b/drivers/gpu/drm/i915/intel_dsi.c
index 2f696be..dd504d8 100644
--- a/drivers/gpu/drm/i915/intel_dsi.c
+++ b/drivers/gpu/drm/i915/intel_dsi.c
@@ -235,6 +235,11 @@ static void intel_dsi_device_ready(struct intel_encoder *encoder)
 
 	/* wait for dsi controller hw enumeration */
 	usleep_range(2500, 3000);
+
+	intel_dsi_write_dev_rdy_on_A_and_C(encoder, 0x00);
+
+	/* wait for dsi controller hw enumeration */
+	usleep_range(2500, 3000);
 }
 
 static void intel_dsi_port_enable(struct intel_encoder *encoder)
@@ -361,6 +366,9 @@ static void intel_dsi_pre_enable(struct intel_encoder *encoder)
 	struct intel_crtc *intel_crtc = to_intel_crtc(encoder->base.crtc);
 	enum pipe pipe = intel_crtc->pipe;
 	u32 tmp;
+	u32 temp;
+	u32 val;
+	u32 count = 1;
 
 	DRM_DEBUG_KMS("\n");
 
@@ -407,6 +415,23 @@ static void intel_dsi_pre_enable(struct intel_encoder *encoder)
 	if (intel_dsi->dev.dev_ops->panel_reset)
 		intel_dsi->dev.dev_ops->panel_reset(&intel_dsi->dev);
 
+	if (intel_dsi->dual_link) {
+		count = 2;
+		pipe = PIPE_A;
+	}
+
+	do {
+		I915_WRITE(MIPI_DEVICE_READY(pipe), 0x0);
+		I915_WRITE(MIPI_EOT_DISABLE(pipe), CLOCKSTOP);
+		temp = I915_READ(MIPI_DSI_FUNC_PRG(pipe));
+		temp &= ~VID_MODE_FORMAT_MASK;
+		I915_WRITE(MIPI_DSI_FUNC_PRG(pipe), temp);
+		I915_WRITE(MIPI_DEVICE_READY(pipe), 0x1);
+
+		if (intel_dsi->dual_link)
+			pipe = PIPE_B;
+	} while (--count > 0);
+
 	if (intel_dsi->dev.dev_ops->send_otp_cmds)
 		intel_dsi->dev.dev_ops->send_otp_cmds(&intel_dsi->dev);
 
@@ -415,6 +440,30 @@ static void intel_dsi_pre_enable(struct intel_encoder *encoder)
 
 	wait_for_dsi_fifo_empty(intel_dsi);
 
+	if (intel_dsi->dual_link) {
+		pipe = PIPE_A;
+		count = 2;
+	} else
+		count = 1;
+
+	do {
+		I915_WRITE(MIPI_DEVICE_READY(pipe), 0x0);
+		val = intel_dsi->lane_count << DATA_LANES_PRG_REG_SHIFT;
+		val |= intel_dsi->channel << VID_MODE_CHANNEL_NUMBER_SHIFT;
+		val |= intel_dsi->pixel_format;
+		I915_WRITE(MIPI_DSI_FUNC_PRG(pipe), val);
+		val = 0;
+		if (intel_dsi->eotp_pkt == 0)
+			val |= EOT_DISABLE;
+		if (intel_dsi->clock_stop)
+			val |= CLOCKSTOP;
+		I915_WRITE(MIPI_EOT_DISABLE(pipe), val);
+		I915_WRITE(MIPI_DEVICE_READY(pipe), 0x1);
+
+		if (intel_dsi->dual_link)
+			pipe = PIPE_B;
+	} while (--count > 0);
+
 	/* Enable port in pre-enable phase itself because as per hw team
 	 * recommendation, port should be enabled befor plane & pipe */
 	intel_dsi_send_enable_cmds(encoder);
@@ -924,24 +973,6 @@ static void intel_dsi_mode_set(struct intel_encoder *intel_encoder)
 		count = 1;
 
 	do {
-		val = intel_dsi->lane_count << DATA_LANES_PRG_REG_SHIFT;
-		if (is_cmd_mode(intel_dsi)) {
-			val |= intel_dsi->channel <<
-					CMD_MODE_CHANNEL_NUMBER_SHIFT;
-			val |= CMD_MODE_DATA_WIDTH_OPTION2;
-
-			I915_WRITE(MIPI_DBI_FIFO_THROTTLE(pipe),
-					DBI_FIFO_EMPTY_QUARTER);
-			I915_WRITE(MIPI_HS_LP_DBI_ENABLE(pipe), 0);
-		} else {
-			val |= intel_dsi->channel <<
-					VID_MODE_CHANNEL_NUMBER_SHIFT;
-
-			/* XXX: cross-check bpp vs. pixel format? */
-			val |= intel_dsi->pixel_format;
-		}
-		I915_WRITE(MIPI_DSI_FUNC_PRG(pipe), val);
-
 		/*
 		 * timeouts for recovery. one frame IIUC. if counter expires,
 		 * EOT and stop state.
-- 
1.7.9.5

