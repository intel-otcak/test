From d3ce61e9fad0c124155414559d16b2fc705100db Mon Sep 17 00:00:00 2001
From: Daniel Drubin <idaniel.drubin@intel.com>
Date: Wed, 20 Jan 2016 19:13:28 +0200
Subject: [PATCH 3/6] intel-ish: Pad allocation for 64 big HID access

The hid-core code reads this buffer in chunks of 64 bits, so it must
be at least that large.

Found by KASan, see GMINL-18999

Change-Id: I79b9b6cfd64873bfedf94dd9c4a32e0725f6e246
Signed-off-by: Daniel Drubin <daniel.drubin@intel.com>
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-16663
Reviewed-on: https://android.intel.com:443/460517
---
 drivers/misc/intel-ish/heci-hid.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/drivers/misc/intel-ish/heci-hid.c b/drivers/misc/intel-ish/heci-hid.c
index d692cb19..5b3760a 100644
--- a/drivers/misc/intel-ish/heci-hid.c
+++ b/drivers/misc/intel-ish/heci-hid.c
@@ -101,7 +101,9 @@ static void heci_hid_request(struct hid_device *hid, struct hid_report *rep,
 		hid_heci_get_report(hid, rep->id, rep->type);
 		break;
 	case HID_REQ_SET_REPORT:
-		buf = kzalloc(len, GFP_KERNEL);
+		/* Spare 7 bytes for 64b accesses thru
+		get/put_unaligned_le64() */
+		buf = kzalloc(len + 7, GFP_KERNEL);
 		if (!buf)
 			return;
 		hid_output_report(rep, buf + header_size);
-- 
1.9.1

