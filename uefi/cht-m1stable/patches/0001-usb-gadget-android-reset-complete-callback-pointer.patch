From 3ffaa86e49e94669b271243d4494d0cc8e44f87c Mon Sep 17 00:00:00 2001
From: Mian Yousaf Kaukab <yousaf.kaukab@intel.com>
Date: Fri, 4 Jul 2014 15:56:48 +0200
Subject: [PATCH 1/6] usb: gadget: android: reset complete callback pointer

cdev->req is reused. Reset req->complete on start of each setup
transfer. It was incorrectly removed by the following patch:

commit: 83cdc3e22062408ba4c2bfa633805048297eeeed
Author: Benoit Goby <benoit@android.com>
Date:   Mon Nov 5 18:47:08 2012 -0800
	usb: gadget: Fix android gadget driver build

Change-Id: I8209fd1453590580b4af80943234c799ed377f7f
Signed-off-by: Mian Yousaf Kaukab <yousaf.kaukab@intel.com>
---
 drivers/usb/gadget/android.c   |    2 +-
 drivers/usb/gadget/composite.c |    3 ++-
 include/linux/usb/composite.h  |    3 ++-
 3 files changed, 5 insertions(+), 3 deletions(-)

--- linux.orig/drivers/usb/gadget/android.c
+++ linux/drivers/usb/gadget/android.c
@@ -1494,7 +1494,7 @@ android_setup(struct usb_gadget *gadget,
 
 	req->zero = 0;
 	req->length = 0;
-	req->complete = dev->setup_complete;
+	req->complete = composite_setup_complete;
 	gadget->ep0->driver_data = cdev;
 
 	list_for_each_entry(f, &dev->enabled_functions, enabled_list) {
--- linux.orig/drivers/usb/gadget/composite.c
+++ linux/drivers/usb/gadget/composite.c
@@ -1199,13 +1199,14 @@ EXPORT_SYMBOL_GPL(usb_string_ids_n);
 
 /*-------------------------------------------------------------------------*/
 
-static void composite_setup_complete(struct usb_ep *ep, struct usb_request *req)
+void composite_setup_complete(struct usb_ep *ep, struct usb_request *req)
 {
 	if (req->status || req->actual != req->length)
 		DBG((struct usb_composite_dev *) ep->driver_data,
 				"setup complete --> %d, %d/%d\n",
 				req->status, req->actual, req->length);
 }
+EXPORT_SYMBOL_GPL(composite_setup_complete);
 
 /*
  * The setup() callback implements all the ep0 functionality that's
--- linux.orig/include/linux/usb/composite.h
+++ linux/include/linux/usb/composite.h
@@ -403,7 +403,8 @@ extern struct usb_string *usb_gstrings_a
 		struct usb_gadget_strings **sp, unsigned n_strings);
 
 extern int usb_string_ids_n(struct usb_composite_dev *c, unsigned n);
-
+extern void composite_setup_complete(struct usb_ep *ep,
+					struct usb_request *req);
 extern void composite_disconnect(struct usb_gadget *gadget);
 extern int composite_setup(struct usb_gadget *gadget,
 		const struct usb_ctrlrequest *ctrl);
