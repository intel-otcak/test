From f8d668f758184ff691815ffe0ea83b36e6370b0f Mon Sep 17 00:00:00 2001
From: "Subhransu S. Prusty" <subhransu.s.prusty@intel.com>
Date: Fri, 27 Feb 2015 11:03:31 +0100
Subject: [PATCH] Audio-HDMI: Limit the max channels supported to 8

BZ: 168174

The CEA spec for E-EDID specifies maximum 8 speaker allocations. With
ELD values returned which has more than 8 speakers, channel map
allocation fails and configured as stereo.

Limit the ELD speaker allocation to 8 in these scenarios.

Change-Id: Ieb5a6774626c6d17d23c5af762785c2d3afc68b3
Signed-off-by: Subhransu S. Prusty <subhransu.s.prusty@intel.com>
---
 sound/drivers/intel_hdmi/intel_mid_hdmi_audio.c | 24 ++++++++++++++++++++++++
 1 file changed, 24 insertions(+)

diff --git a/sound/drivers/intel_hdmi/intel_mid_hdmi_audio.c b/sound/drivers/intel_hdmi/intel_mid_hdmi_audio.c
index b7e5f31..055be56 100644
--- a/sound/drivers/intel_hdmi/intel_mid_hdmi_audio.c
+++ b/sound/drivers/intel_hdmi/intel_mid_hdmi_audio.c
@@ -618,6 +618,9 @@ void had_build_channel_allocation_map(struct snd_intelhad *intelhaddata)
 	int i = 0, c = 0;
 	int spk_mask = 0;
 	struct snd_pcm_chmap_elem *chmap;
+	uint8_t eld_high, eld_high_mask = 0xF0;
+	uint8_t high_msb;
+
 	chmap = kzalloc(sizeof(*chmap), GFP_KERNEL);
 	if (chmap == NULL) {
 		pr_err("kzalloc returned null in %s\n", __func__);
@@ -630,6 +633,27 @@ void had_build_channel_allocation_map(struct snd_intelhad *intelhaddata)
 	pr_debug("eeld.speaker_allocation_block = %x\n",
 			intelhaddata->eeld.speaker_allocation_block);
 
+	/* WA: Fix the max channel supported to 8 */
+
+	/* Sink may support more than 8 channels, if eld_high has more than
+	 * one bit set. SOC supports max 8 channels.
+	 * Refer eld_speaker_allocation_bits, for sink speaker allocation */
+
+	/* if 0x2F < eld < 0x4F fall back to 0x2f, else fall back to 0x4F */
+	eld_high = intelhaddata->eeld.speaker_allocation_block & eld_high_mask;
+	if ((eld_high & (eld_high -1)) && (eld_high > 0x1F)) {
+		/* eld_high & (eld_high-1): if more than 1 bit set */
+		/* 0x1F: 7 channels */
+		for (i = 1; i < 4; i++) {
+			high_msb = eld_high & (0x80 >> i);
+			if (high_msb) {
+				intelhaddata->eeld.speaker_allocation_block &=
+					high_msb | 0xF;
+				break;
+			}
+		}
+	}
+
 	for (i = 0; i < ARRAY_SIZE(eld_speaker_allocation_bits); i++) {
 		if (intelhaddata->eeld.speaker_allocation_block & (1 << i))
 				spk_mask |= eld_speaker_allocation_bits[i];
-- 
1.9.1

