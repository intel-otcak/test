From 10405a90dba8048d1a6925cec8d97e9dc9c17302 Mon Sep 17 00:00:00 2001
Message-Id: <10405a90dba8048d1a6925cec8d97e9dc9c17302.1413837856.git.chang-joon.lee@intel.com>
In-Reply-To: <006497b7323eca32c2f489a1a9f662743c0d16d2.1413837855.git.chang-joon.lee@intel.com>
References: <006497b7323eca32c2f489a1a9f662743c0d16d2.1413837855.git.chang-joon.lee@intel.com>
From: Vandana Kannan <vandana.kannan@intel.com>
Date: Tue, 24 Dec 2013 14:24:03 +0530
Subject: [PATCH 022/312] FOR_UPSTREAM [VPG] drm/i915: Modify quantization
 range computation

Color range (limited/full) is determined only in compute_config() during boot.
Making changes to compute it on every mode set. This is required when user
sets different modes through an app.

(cherry picked from commit 2d4842a1f94879a9c5e4efa38230aa499931de98)

Issue: APDEV-1251
Change-Id: I43c35da70ffa7bce0dfc33a03c8252134a98fd14
Signed-off-by: Vandana Kannan <vandana.kannan@intel.com>
Signed-off-by: Jon Bloomfield <jon.bloomfield@intel.com>
---
 drivers/gpu/drm/i915/intel_hdmi.c |   31 +++++++++++++++++++++----------
 1 file changed, 21 insertions(+), 10 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_hdmi.c b/drivers/gpu/drm/i915/intel_hdmi.c
index d940314..8b69042 100644
--- a/drivers/gpu/drm/i915/intel_hdmi.c
+++ b/drivers/gpu/drm/i915/intel_hdmi.c
@@ -359,11 +359,23 @@ static void intel_write_infoframe(struct drm_encoder *encoder,
 	intel_hdmi->write_infoframe(encoder, frame->any.type, buffer, len);
 }
 
+static void intel_hdmi_compute_color_range(struct intel_hdmi *intel_hdmi,
+					struct drm_display_mode *mode)
+{
+	if (intel_hdmi->color_range_auto) {
+		/* See CEA-861-E - 5.1 Default Encoding Parameters */
+		if (intel_hdmi->has_hdmi_sink &&
+		    drm_match_cea_mode(mode) > 1)
+			intel_hdmi->color_range = HDMI_COLOR_RANGE_16_235;
+		else
+			intel_hdmi->color_range = 0;
+	}
+}
+
 static void intel_hdmi_set_avi_infoframe(struct drm_encoder *encoder,
 					 struct drm_display_mode *adjusted_mode)
 {
 	struct intel_hdmi *intel_hdmi = enc_to_intel_hdmi(encoder);
-	struct intel_crtc *intel_crtc = to_intel_crtc(encoder->crtc);
 	union hdmi_infoframe frame;
 	int ret;
 
@@ -374,8 +386,14 @@ static void intel_hdmi_set_avi_infoframe(struct drm_encoder *encoder,
 		return;
 	}
 
+	/* If the EDID mentions color range to be selectable, then
+	 * compute color_range for the incoming mode and set in AVI
+	 * infoframe accordingly.
+	*/
 	if (intel_hdmi->rgb_quant_range_selectable) {
-		if (intel_crtc->config.limited_color_range)
+		intel_hdmi_compute_color_range(intel_hdmi, adjusted_mode);
+
+		if (intel_hdmi->color_range)
 			frame.avi.quantization_range =
 				HDMI_QUANTIZATION_RANGE_LIMITED;
 		else
@@ -909,14 +927,7 @@ bool intel_hdmi_compute_config(struct intel_encoder *encoder,
 
 	pipe_config->has_hdmi_sink = intel_hdmi->has_hdmi_sink;
 
-	if (intel_hdmi->color_range_auto) {
-		/* See CEA-861-E - 5.1 Default Encoding Parameters */
-		if (pipe_config->has_hdmi_sink &&
-		    drm_match_cea_mode(adjusted_mode) > 1)
-			intel_hdmi->color_range = HDMI_COLOR_RANGE_16_235;
-		else
-			intel_hdmi->color_range = 0;
-	}
+	intel_hdmi_compute_color_range(intel_hdmi, adjusted_mode);
 
 	if (intel_hdmi->color_range)
 		pipe_config->limited_color_range = true;
-- 
1.7.9.5

