From 1d81c0a2a43cb66fe68dfdd71cce22d77831801e Mon Sep 17 00:00:00 2001
From: Sebastien MICHEL <sebastien.michel@intel.com>
Date: Thu, 19 Feb 2015 19:23:38 +0100
Subject: [PATCH] deferrable sleep on ksm

Change schedule_timeout_interruptible() for a deferrable timer to be
power and performance friendly.

Change-Id: I97f6d4a59f8b44f2e6816f9cfcbcc2ab1c46cfb7
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-21938
Signed-off-by: Sebastien MICHEL <sebastien.michel@intel.com>
Reviewed-on: https://android.intel.com:443/334289
---
 mm/ksm.c | 17 ++++++++++++++++-
 1 file changed, 16 insertions(+), 1 deletion(-)

diff --git a/mm/ksm.c b/mm/ksm.c
index 68710e80994a..7e02b7eb177e 100644
--- a/mm/ksm.c
+++ b/mm/ksm.c
@@ -223,6 +223,11 @@ static unsigned int ksm_thread_pages_to_scan = 100;
 /* Milliseconds ksmd should sleep between batches */
 static unsigned int ksm_thread_sleep_millisecs = 20;
 
+static int ksm_should_sleep = 1;
+static void ksm_wakeup_thread(unsigned long nothing);
+static struct timer_list ksm_timer =
+	TIMER_INITIALIZER(ksm_wakeup_thread, 0, 0);
+
 #ifdef CONFIG_NUMA
 /* Zeroed when merging across nodes is not allowed */
 static unsigned int ksm_merge_across_nodes = 1;
@@ -1711,6 +1716,12 @@ static int ksmd_should_run(void)
 	return (ksm_run & KSM_RUN_MERGE) && !list_empty(&ksm_mm_head.mm_list);
 }
 
+static void ksm_wakeup_thread(unsigned long nothing)
+{
+	ksm_should_sleep = 0;
+	wake_up_interruptible(&ksm_thread_wait);
+}
+
 static int ksm_scan_thread(void *nothing)
 {
 	set_freezable();
@@ -1726,8 +1737,11 @@ static int ksm_scan_thread(void *nothing)
 		try_to_freeze();
 
 		if (ksmd_should_run()) {
-			schedule_timeout_interruptible(
+			mod_timer(&ksm_timer, jiffies +
 				msecs_to_jiffies(ksm_thread_sleep_millisecs));
+			ksm_should_sleep = 1;
+			wait_event_freezable(ksm_thread_wait,
+				!ksm_should_sleep);
 		} else {
 			wait_event_freezable(ksm_thread_wait,
 				ksmd_should_run() || kthread_should_stop());
@@ -2315,6 +2329,7 @@ static int __init ksm_init(void)
 	if (err)
 		goto out;
 
+	init_timer_deferrable(&ksm_timer);
 	ksm_thread = kthread_run(ksm_scan_thread, NULL, "ksmd");
 	if (IS_ERR(ksm_thread)) {
 		printk(KERN_ERR "ksm: creating kthread failed\n");
-- 
1.9.1

