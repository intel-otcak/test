From f31ed694e7b78b781bd44fd02a9c813d965701eb Mon Sep 17 00:00:00 2001
From: Fernando Reyna <fernando.m.reyna.diaz@intel.com>
Date: Wed, 17 Feb 2016 12:01:28 -0600
Subject: [PATCH 5/6] atomisp: Added logic to control new power rails

CHT T3 MRD requires a power rail of 1.6v, logic was added
to control the power rails, on and off.

Change-Id: I60db6c63b9354b1659ef99eee878374ffad93a76
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-20595
Signed-off-by: Fernando Reyna <fernando.m.reyna.diaz@intel.com>
Signed-off-by: Marco Salgado <marco.antonio.salgado.martinez@intel.com>
Signed-off-by: Lopez Esparza, Ricardo <ricardo.lopez.esparza@intel.com>
Reviewed-on: https://android.intel.com:443/471771
---
 .../x86/platform/intel-mid/atomisp_gmin_platform.c | 51 ++++++++++++++++++++++
 include/linux/atomisp_platform.h                   |  1 +
 2 files changed, 52 insertions(+)

diff --git a/arch/x86/platform/intel-mid/atomisp_gmin_platform.c b/arch/x86/platform/intel-mid/atomisp_gmin_platform.c
index 8d95a4a..ba504f7 100644
--- a/arch/x86/platform/intel-mid/atomisp_gmin_platform.c
+++ b/arch/x86/platform/intel-mid/atomisp_gmin_platform.c
@@ -50,6 +50,12 @@ EXPORT_SYMBOL(spid);
 #define ELDO2_SEL_REG	0x1a
 #define ELDO2_1P8V	0x16
 #define ELDO2_CTRL_SHIFT 0x01
+#define ELDO1_1P6V      0x12
+
+#define FLDO2_SEL_REG   0x1d
+#define FLDO2_CTRL3_REG 0x13
+#define FLDO2_1P2V      0x0a
+#define FLDO2_CTRL3_SHIFT 0x03
 
 /* TI SND9039 PMIC register hackery */
 #define LDO9_REG	0x49
@@ -532,6 +538,17 @@ static int axp_v2p8_off(void)
 	return axp_regulator_set(ALDO1_SEL_REG, ALDO1_2P8V, ALDO1_CTRL3_REG,
 				 ALDO1_CTRL3_SHIFT, false);
 }
+static int axp_v1p2_on(void)
+{
+	return axp_regulator_set(FLDO2_SEL_REG, FLDO2_1P2V, FLDO2_CTRL3_REG,
+				 FLDO2_CTRL3_SHIFT, true);
+}
+
+static int axp_v1p2_off(void)
+{
+	return axp_regulator_set(FLDO2_SEL_REG, FLDO2_1P2V, FLDO2_CTRL3_REG,
+				 FLDO2_CTRL3_SHIFT, false);
+}
 
 int gmin_v1p2_ctrl(struct v4l2_subdev *subdev, int on)
 {
@@ -541,6 +558,13 @@ int gmin_v1p2_ctrl(struct v4l2_subdev *subdev, int on)
 		return 0;
 	gs->v1p2_on = on;
 
+	if (pmic_id == PMIC_AXP) {
+		if (on)
+			return axp_v1p2_on();
+		else
+			return axp_v1p2_off();
+	}
+
 	if (gs->v1p2_reg) {
 		if (on)
 			return regulator_enable(gs->v1p2_reg);
@@ -553,6 +577,32 @@ int gmin_v1p2_ctrl(struct v4l2_subdev *subdev, int on)
 	return -EINVAL;
 }
 
+static int axp_v1p5_on(void)
+{
+	return axp_regulator_set(ELDO1_SEL_REG, ELDO1_1P6V, ELDO_CTRL_REG,
+				 ELDO1_CTRL_SHIFT, true);
+}
+
+static int axp_v1p5_off(void)
+{
+	return axp_regulator_set(ELDO1_SEL_REG, ELDO1_1P6V, ELDO_CTRL_REG,
+				 ELDO1_CTRL_SHIFT, false);
+}
+
+static int gmin_v1p5_ctrl(struct v4l2_subdev *subdev, int on)
+{
+	if (pmic_id == PMIC_AXP) {
+		if (on)
+			return axp_v1p5_on();
+		else
+			return axp_v1p5_off();
+	}
+
+	return -EINVAL;
+}
+
+
+
 int gmin_v1p8_ctrl(struct v4l2_subdev *subdev, int on)
 {
 	struct gmin_subdev *gs = find_gmin_subdev(subdev);
@@ -726,6 +776,7 @@ static struct camera_sensor_platform_data gmin_plat = {
 	.v1p8_ctrl = gmin_v1p8_ctrl,
 	.v2p8_ctrl = gmin_v2p8_ctrl,
 	.v1p2_ctrl = gmin_v1p2_ctrl,
+	.v1p5_ctrl = gmin_v1p5_ctrl,
 	.flisclk_ctrl = gmin_flisclk_ctrl,
 	.platform_init = gmin_platform_init,
 	.platform_deinit = gmin_platform_deinit,
diff --git a/include/linux/atomisp_platform.h b/include/linux/atomisp_platform.h
index 156a23c..bd287bb 100644
--- a/include/linux/atomisp_platform.h
+++ b/include/linux/atomisp_platform.h
@@ -230,6 +230,7 @@ struct camera_sensor_platform_data {
 	int (*v1p8_ctrl)(struct v4l2_subdev *subdev, int on);
 	int (*v2p8_ctrl)(struct v4l2_subdev *subdev, int on);
 	int (*v1p2_ctrl)(struct v4l2_subdev *subdev, int on);
+	int (*v1p5_ctrl)(struct v4l2_subdev *subdev, int on);
 	struct camera_vcm_control * (*get_vcm_ctrl)(struct v4l2_subdev *subdev,
 						    char *module_id);
 #endif
-- 
1.9.1

