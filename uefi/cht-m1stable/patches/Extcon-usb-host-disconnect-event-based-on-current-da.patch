From e9bc20346b90291866ce3f5fb4841e63dae0b00d Mon Sep 17 00:00:00 2001
From: Venkataramana Kotakonda <venkataramana.kotakonda@intel.com>
Date: Tue, 29 Sep 2015 15:29:22 +0530
Subject: [PATCH] Extcon usb/host disconnect event based on current data role.

Irrespective of current power role (either provider or consumer),
on cable disconnect, extcon disconnect event should be sent to usb
or host cable based on current data role as data role can be changed
thru dr_swap at runtime.

Change-Id: If3d1d1f59885346907b92453edb6f5ae52e12032
Signed-off-by: Venkataramana Kotakonda <venkataramana.kotakonda@intel.com>
Tracked-On: https://jira01.devtools.intel.com/browse/GMINL-19007
---
 drivers/usb/typec/usb_typec_detect.c | 39 ++++++++++++++++++++++++++++++++----
 1 file changed, 35 insertions(+), 4 deletions(-)

diff --git a/drivers/usb/typec/usb_typec_detect.c b/drivers/usb/typec/usb_typec_detect.c
index 98509cf1..8b62ce9 100644
--- a/drivers/usb/typec/usb_typec_detect.c
+++ b/drivers/usb/typec/usb_typec_detect.c
@@ -262,8 +262,24 @@ void typec_notify_cable_state(struct typec_phy *phy, char *type, bool state)
 	struct typec_detect *detect;
 
 	detect = get_typec_detect(phy);
-	if (detect)
-		typec_detect_notify_extcon(detect, type, state);
+	if (!detect)
+		return;
+
+	typec_detect_notify_extcon(detect, type, state);
+	/* If all four cables are disconnected, then start DRP toggling*/
+	if (!(detect->usb_state || detect->snk_state
+		|| detect->usb_host_state || detect->src_state)
+			&& detect->state != DETECT_STATE_UNATTACHED_DRP) {
+		dev_info(detect->phy->dev,
+			"%s: Cable Disconnected, Move to DRP Mode",
+				__func__);
+		typec_enable_autocrc(detect->phy, false);
+		mutex_lock(&detect->lock);
+		detect->state = DETECT_STATE_UNATTACHED_DRP;
+		mutex_unlock(&detect->lock);
+		typec_switch_mode(detect->phy, TYPEC_MODE_DRP);
+	}
+
 }
 EXPORT_SYMBOL_GPL(typec_notify_cable_state);
 
@@ -743,8 +759,15 @@ static void update_phy_state(struct work_struct *work)
 				__func__, detect->state);
 			typec_detect_notify_extcon(detect,
 						TYPEC_CABLE_USB_SNK, false);
-			typec_detect_notify_extcon(detect,
+			if (detect->usb_state) {
+				typec_detect_notify_extcon(detect,
 						TYPEC_CABLE_USB, false);
+			} else if (detect->usb_host_state) {
+				typec_detect_notify_extcon(detect,
+						TYPEC_CABLE_USB_HOST, false);
+			} else
+				dev_warn(phy->dev, "%s:Unknown date role!!\n",
+						__func__);
 
 			typec_enable_autocrc(detect->phy, false);
 
@@ -757,8 +780,16 @@ static void update_phy_state(struct work_struct *work)
 			/* state = DFP; disable VBUS */
 			typec_detect_notify_extcon(detect,
 						TYPEC_CABLE_USB_SRC, false);
-			typec_detect_notify_extcon(detect,
+			if (detect->usb_state) {
+				typec_detect_notify_extcon(detect,
+						TYPEC_CABLE_USB, false);
+			} else if (detect->usb_host_state) {
+				typec_detect_notify_extcon(detect,
 						TYPEC_CABLE_USB_HOST, false);
+			} else
+				dev_warn(phy->dev, "%s:Unknown date role!!\n",
+						__func__);
+
 
 			typec_enable_autocrc(detect->phy, false);
 
-- 
1.9.1

