From 947eb5d1a16dfa869ff1d89a4a8ca66227315051 Mon Sep 17 00:00:00 2001
Message-Id: <947eb5d1a16dfa869ff1d89a4a8ca66227315051.1421709247.git.chang-joon.lee@intel.com>
In-Reply-To: <3650eb44734ad4fbe098313349da8185595a20d8.1421709247.git.chang-joon.lee@intel.com>
References: <3650eb44734ad4fbe098313349da8185595a20d8.1421709247.git.chang-joon.lee@intel.com>
From: Arun R Murthy <arun.r.murthy@intel.com>
Date: Sat, 30 Aug 2014 12:10:59 +0530
Subject: [PATCH 11/75] MUST_REBASE [VPG]: drm/i915/adf: Pass on display
 related interrupts to ADF driver

In valleyview_irq_handler if adf driver is enabled call the adf
interrupt handler to handle display related interrupts.

MUST_REBASE: Since Google ADF framework is not in upstream and also
we cannot have two display drivers, other one being i915, we need to
work on i915 and ADF convergence path before it can be upstreamed

For: GMINL-3547
Change-Id: I05c941485df60ee4526db3542e72e950df724c77
Signed-off-by: Arun R Murthy <arun.r.murthy@intel.com>
Signed-off-by: Shobhit Kumar <shobhit.kumar@intel.com>
Signed-off-by: Deepak S <deepak.s@intel.com>
---
 drivers/gpu/drm/i915/i915_irq.c |   30 +++++++++++++++++++++++++-----
 include/drm/i915_adf.h          |    3 +++
 2 files changed, 28 insertions(+), 5 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_irq.c b/drivers/gpu/drm/i915/i915_irq.c
index 33cdacf..9fb02f2 100644
--- a/drivers/gpu/drm/i915/i915_irq.c
+++ b/drivers/gpu/drm/i915/i915_irq.c
@@ -35,6 +35,7 @@
 #include <drm/i915_drm.h>
 #include "i915_drv.h"
 #include "i915_trace.h"
+#include <drm/i915_adf.h>
 #include "intel_sync.h"
 #include "intel_drv.h"
 #include "intel_lrc_tdr.h"
@@ -2267,12 +2268,31 @@ static irqreturn_t valleyview_irq_handler(int irq, void *arg)
 
 		snb_gt_irq_handler(dev, dev_priv, gt_iir);
 
-		valleyview_pipestat_irq_handler(dev, iir);
-
-		/* Consume port.  Then clear IIR or we'll miss events */
-		if (iir & I915_DISPLAY_PORT_INTERRUPT)
-			i9xx_hpd_irq_handler(dev);
+		if (i915.enable_intel_adf) {
+			if (g_adf_ready && i915.disable_display && iir) {
+				unsigned long irqflags;
+				spin_lock_irqsave(&dev_priv->irq_lock,
+						  irqflags);
+				intel_adf_context_on_event();
+				spin_unlock_irqrestore(&dev_priv->irq_lock,
+						       irqflags);
+			} else {
+				/*
+				 * Clear Pipestat register before clearing iir
+				 * As of now only DSI pipe is enabled.
+				 * Loop later when we enable HDMI pipe to done
+				 * same for both PIPESTAT.
+				 */
 
+				I915_WRITE(PIPESTAT(0), I915_READ(PIPESTAT(0)) |
+					   I915_DISPLAY_PIPE_A_EVENT_INTERRUPT);
+			}
+		} else {
+			valleyview_pipestat_irq_handler(dev, iir);
+			/* Consume port.  Then clear IIR or we'll miss events */
+			if (iir & I915_DISPLAY_PORT_INTERRUPT)
+				i9xx_hpd_irq_handler(dev);
+		}
 		if (pm_iir & (GEN6_PM_RPS_EVENTS | GEN6_PM_RP_UP_EI_EXPIRED))
 			gen6_rps_irq_handler(dev_priv, pm_iir);
 
diff --git a/include/drm/i915_adf.h b/include/drm/i915_adf.h
index 87f3522..78c2040 100644
--- a/include/drm/i915_adf.h
+++ b/include/drm/i915_adf.h
@@ -38,6 +38,8 @@
 
 #ifndef CONFIG_ADF_INTEL
 volatile bool g_adf_ready = false;
+
+static int intel_adf_context_on_event(void) { return 0; }
 #endif
 
 extern void intel_adf_dpio_sideband_rw(u32 operation, u32 port,
@@ -49,6 +51,7 @@ extern void intel_adf_get_dsi_vbt_data(void **vbt_data,
 				   struct drm_display_mode **mode);
 extern void set_adf_ready(void);
 extern volatile bool g_adf_ready;
+extern int intel_adf_context_on_event(void);
 #endif
 
 
-- 
1.7.9.5

