From ef2dcef299c1b3c2eb71ce7ccc007ec9fa0663be Mon Sep 17 00:00:00 2001
Message-Id: <ef2dcef299c1b3c2eb71ce7ccc007ec9fa0663be.1413837857.git.chang-joon.lee@intel.com>
In-Reply-To: <006497b7323eca32c2f489a1a9f662743c0d16d2.1413837855.git.chang-joon.lee@intel.com>
References: <006497b7323eca32c2f489a1a9f662743c0d16d2.1413837855.git.chang-joon.lee@intel.com>
From: Rafael Barbalho <rafael.barbalho@intel.com>
Date: Wed, 23 Jul 2014 14:26:01 +0100
Subject: [PATCH 206/312] REVERTME [VPG]: drm/i915/chv: Fix DSI PLL to 900Mhz

The algorithm to determine the best PLL frequency hasn't yet been
implemented. For now to enable mipi we are sticking with one catch all
frequency.

Change-Id: Ia7bb9803b9c54863b044983663812239cc719621
Signed-off-by: Rafael Barbalho <rafael.barbalho@intel.com>
---
 drivers/gpu/drm/i915/intel_dsi_pll.c |   24 +++++++++++++++++++-----
 1 file changed, 19 insertions(+), 5 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_dsi_pll.c b/drivers/gpu/drm/i915/intel_dsi_pll.c
index 3b20d81..aca49d8 100644
--- a/drivers/gpu/drm/i915/intel_dsi_pll.c
+++ b/drivers/gpu/drm/i915/intel_dsi_pll.c
@@ -43,6 +43,8 @@ struct dsi_mnp {
 	u32 dsi_pll_div;
 };
 
+u32 chv_dsi_pll_ctrl;
+
 static const u32 lfsr_converts[] = {
 	426, 469, 234, 373, 442, 221, 110, 311, 411,		/* 62 - 70 */
 	461, 486, 243, 377, 188, 350, 175, 343, 427, 213,	/* 71 - 80 */
@@ -244,6 +246,12 @@ static void vlv_configure_dsi_pll(struct intel_encoder *encoder)
 		return;
 	}
 
+	/* For CHV hardcode PLL for 900MHz till algorithm is implemented */
+	if (IS_CHERRYVIEW(dev_priv->dev)) {
+		chv_dsi_pll_ctrl = dsi_mnp.dsi_pll_ctrl = 0x20180;
+		dsi_mnp.dsi_pll_div = 0x201E6;
+	}
+
 	dsi_mnp.dsi_pll_ctrl |= DSI_PLL_CLK_GATE_DSI0_DSIPLL;
 
 	DRM_DEBUG_KMS("dsi pll div %08x, ctrl %08x\n",
@@ -281,7 +289,11 @@ void vlv_enable_dsi_pll(struct intel_encoder *encoder)
 	 */
 	udelay(1000);
 
-	tmp = vlv_cck_read(dev_priv, CCK_REG_DSI_PLL_CONTROL);
+	if (IS_CHERRYVIEW(dev_priv->dev))
+		tmp = chv_dsi_pll_ctrl;
+	else
+		tmp = vlv_cck_read(dev_priv, CCK_REG_DSI_PLL_CONTROL);
+
 	tmp |= DSI_PLL_VCO_EN;
 	vlv_cck_write(dev_priv, CCK_REG_DSI_PLL_CONTROL, tmp);
 
@@ -298,15 +310,17 @@ void vlv_enable_dsi_pll(struct intel_encoder *encoder)
 void vlv_disable_dsi_pll(struct intel_encoder *encoder)
 {
 	struct drm_i915_private *dev_priv = encoder->base.dev->dev_private;
-	u32 tmp;
+	u32 tmp = 0;
 
 	DRM_DEBUG_KMS("\n");
 
 	mutex_lock(&dev_priv->dpio_lock);
 
-	tmp = vlv_cck_read(dev_priv, CCK_REG_DSI_PLL_CONTROL);
-	tmp &= ~DSI_PLL_VCO_EN;
-	tmp |= DSI_PLL_LDO_GATE;
+	if (!IS_CHERRYVIEW(dev_priv->dev)) {
+		tmp = vlv_cck_read(dev_priv, CCK_REG_DSI_PLL_CONTROL);
+		tmp &= ~DSI_PLL_VCO_EN;
+		tmp |= DSI_PLL_LDO_GATE;
+	}
 	vlv_cck_write(dev_priv, CCK_REG_DSI_PLL_CONTROL, tmp);
 
 	mutex_unlock(&dev_priv->dpio_lock);
-- 
1.7.9.5

