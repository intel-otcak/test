From e7db8bbc7be70773a944e01ac1debb1daa564eac Mon Sep 17 00:00:00 2001
From: Zhang Yanmin <yanmin.zhang@intel.com>
Date: Thu, 3 Mar 2016 13:35:23 +0800
Subject: [PATCH 4/5] pmic: dump wakeup source after system is woken up

Change-Id: I0a2f7bb1d1317fea634af1b270e9a4f2ce550e8a
Signed-off-by: Zhang Yanmin <yanmin.zhang@intel.com>
Signed-off-by: Li Youx <youx.li@intel.com>
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-23465
Reviewed-on: https://android.intel.com:443/479213
---
 drivers/mfd/intel_soc_pmic_core.c | 11 +++++++++++
 drivers/mfd/intel_soc_pmic_core.h |  1 +
 drivers/mfd/intel_soc_pmic_i2c.c  |  8 ++++++++
 3 files changed, 20 insertions(+)

diff --git a/drivers/mfd/intel_soc_pmic_core.c b/drivers/mfd/intel_soc_pmic_core.c
index bc1249e..8c9dacc 100644
--- a/drivers/mfd/intel_soc_pmic_core.c
+++ b/drivers/mfd/intel_soc_pmic_core.c
@@ -350,6 +350,13 @@ static irqreturn_t pmic_irq_thread(int irq, void *data)
 		if (pmic_regmap_read(&pmic->irq_regmap[i].status) > 0) {
 			pmic_regmap_write(&pmic->irq_regmap[i].ack,
 				pmic->irq_regmap[i].ack.mask);
+			if (pmic->print_wakeup) {
+				pr_info("pmic: device[%s] irq[%d] might"
+					" wake up system!\n",
+					pmic->cell_dev[i].name,
+					pmic->irq_base + i);
+			}
+
 			handle_nested_irq(pmic->irq_base + i);
 		}
 	}
@@ -358,6 +365,10 @@ static irqreturn_t pmic_irq_thread(int irq, void *data)
 
 	mutex_unlock(&pmic->irq_lock);
 
+	/* Just print once after wakeup */
+	if (pmic->print_wakeup)
+		pmic->print_wakeup = 0;
+
 	return IRQ_HANDLED;
 }
 
diff --git a/drivers/mfd/intel_soc_pmic_core.h b/drivers/mfd/intel_soc_pmic_core.h
index db0b68d..b9493d6a 100644
--- a/drivers/mfd/intel_soc_pmic_core.h
+++ b/drivers/mfd/intel_soc_pmic_core.h
@@ -80,6 +80,7 @@ struct intel_soc_pmic {
 	struct intel_pmic_irqregmap	*irq_regmap;
 	struct mfd_cell			*cell_dev;
 	struct intel_pmic_opregion	*opregion;
+	int				print_wakeup;
 };
 
 int intel_pmic_add(struct intel_soc_pmic *chip);
diff --git a/drivers/mfd/intel_soc_pmic_i2c.c b/drivers/mfd/intel_soc_pmic_i2c.c
index ee1a462..91fd242 100644
--- a/drivers/mfd/intel_soc_pmic_i2c.c
+++ b/drivers/mfd/intel_soc_pmic_i2c.c
@@ -70,6 +70,7 @@ static void pmic_shutdown(struct i2c_client *client)
 static int pmic_suspend(struct device *dev)
 {
 	disable_irq(pmic_i2c_client->irq);
+	pmic_i2c->print_wakeup = 1;
 	return 0;
 }
 
@@ -79,8 +80,15 @@ static int pmic_resume(struct device *dev)
 	return 0;
 }
 
+static void pmic_complete(struct device *dev)
+{
+	synchronize_irq(pmic_i2c_client->irq);
+	pmic_i2c->print_wakeup = 0;
+}
+
 static const struct dev_pm_ops pmic_pm_ops = {
 	SET_SYSTEM_SLEEP_PM_OPS(pmic_suspend, pmic_resume)
+	.complete = pmic_complete,
 };
 
 static int pmic_i2c_lookup_gpio(struct device *dev, int acpi_index)
-- 
1.9.1

