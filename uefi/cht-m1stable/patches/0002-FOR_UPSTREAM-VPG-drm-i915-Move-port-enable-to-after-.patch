From bdb4876e7ac8c9b3ac0eb8c68565c4c3d259e6f9 Mon Sep 17 00:00:00 2001
Message-Id: <bdb4876e7ac8c9b3ac0eb8c68565c4c3d259e6f9.1426836508.git.chang-joon.lee@intel.com>
In-Reply-To: <510c5a484d2464721021ff06d210ef8756fdd0c9.1426836508.git.chang-joon.lee@intel.com>
References: <510c5a484d2464721021ff06d210ef8756fdd0c9.1426836508.git.chang-joon.lee@intel.com>
From: vkorjani <vikas.korjani@intel.com>
Date: Mon, 2 Mar 2015 15:00:26 +0530
Subject: [PATCH 2/2] FOR_UPSTREAM [VPG] drm/i915: Move port enable to after
 pipe enable in DSI sequence.

As per the recommendation from the hardware team we have to enable the
pipe before the port.
This fixes split screen issue comes with 1000 reboot cycles.

Issue: GMINL-2254
Change-Id: I27649baa4adf8d7fa2f7917290e47dd42b04f9bb
Signed-off-by: vkorjani <vikas.korjani@intel.com>
Signed-off-by: Yogesh Mohan Marimuthu <yogesh.mohan.marimuthu@intel.com>
---
 drivers/gpu/drm/i915/intel_dsi.c |   39 +++++++++++++++++++-------------------
 1 file changed, 19 insertions(+), 20 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_dsi.c b/drivers/gpu/drm/i915/intel_dsi.c
index c6c6cb4..8332a0b 100644
--- a/drivers/gpu/drm/i915/intel_dsi.c
+++ b/drivers/gpu/drm/i915/intel_dsi.c
@@ -255,13 +255,12 @@ static void intel_dsi_port_enable(struct intel_encoder *encoder)
 	} while (--count > 0);
 }
 
-static void intel_dsi_enable(struct intel_encoder *encoder)
+static void intel_dsi_send_enable_cmds(struct intel_encoder *encoder)
 {
 	struct drm_device *dev = encoder->base.dev;
 	struct drm_i915_private *dev_priv = dev->dev_private;
 	struct intel_crtc *intel_crtc = to_intel_crtc(encoder->base.crtc);
 	struct intel_dsi *intel_dsi = enc_to_intel_dsi(&encoder->base);
-	struct intel_connector *intel_connector = intel_dsi->attached_connector;
 	int pipe = intel_crtc->pipe;
 
 	DRM_DEBUG_KMS("\n");
@@ -277,17 +276,6 @@ static void intel_dsi_enable(struct intel_encoder *encoder)
 		intel_dsi->dev.dev_ops->enable(&intel_dsi->dev);
 
 	wait_for_dsi_fifo_empty(intel_dsi);
-	intel_dsi_port_enable(encoder);
-
-	if (intel_dsi->backlight_on_delay >= 20)
-		msleep(intel_dsi->backlight_on_delay);
-	else
-		usleep_range(intel_dsi->backlight_on_delay * 1000,
-				(intel_dsi->backlight_on_delay * 1000) + 500);
-
-	if (dev_priv->display.enable_backlight)
-		dev_priv->display.enable_backlight(intel_connector);
-
 }
 
 static void intel_dsi_soc_power_on(struct intel_dsi_device *dsi)
@@ -382,17 +370,28 @@ static void intel_dsi_pre_enable(struct intel_encoder *encoder)
 
 	/* Enable port in pre-enable phase itself because as per hw team
 	 * recommendation, port should be enabled befor plane & pipe */
-	intel_dsi_enable(encoder);
+	intel_dsi_send_enable_cmds(encoder);
 }
 
-static void intel_dsi_enable_nop(struct intel_encoder *encoder)
+static void intel_dsi_enable(struct intel_encoder *encoder)
 {
+	struct drm_device *dev = encoder->base.dev;
+	struct drm_i915_private *dev_priv = dev->dev_private;
+	struct intel_dsi *intel_dsi = enc_to_intel_dsi(&encoder->base);
+	struct intel_connector *intel_connector = intel_dsi->attached_connector;
+
 	DRM_DEBUG_KMS("\n");
 
-	/* for DSI port enable has to be done before pipe
-	 * and plane enable, so port enable is done in
-	 * pre_enable phase itself unlike other encoders
-	 */
+	intel_dsi_port_enable(encoder);
+
+	if (intel_dsi->backlight_on_delay >= 20)
+		msleep(intel_dsi->backlight_on_delay);
+	else
+		usleep_range(intel_dsi->backlight_on_delay * 1000,
+				(intel_dsi->backlight_on_delay * 1000) + 500);
+
+	if (dev_priv->display.enable_backlight)
+		dev_priv->display.enable_backlight(intel_connector);
 }
 
 static void intel_dsi_pre_disable(struct intel_encoder *encoder)
@@ -1216,7 +1215,7 @@ bool intel_dsi_init(struct drm_device *dev)
 	intel_encoder->pre_pll_enable = intel_dsi_pre_pll_enable;
 	intel_encoder->pre_enable = intel_dsi_pre_enable;
 	intel_encoder->mode_set = intel_dsi_mode_set;
-	intel_encoder->enable = intel_dsi_enable_nop;
+	intel_encoder->enable = intel_dsi_enable;
 	intel_encoder->disable = intel_dsi_pre_disable;
 	intel_encoder->post_disable = intel_dsi_post_disable;
 	intel_encoder->get_hw_state = intel_dsi_get_hw_state;
-- 
1.7.9.5

