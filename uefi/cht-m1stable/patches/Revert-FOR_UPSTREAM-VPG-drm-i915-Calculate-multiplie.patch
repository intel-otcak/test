From d48939e11c8778869af8a1dbf4bbdcbf9fb1cdfb Mon Sep 17 00:00:00 2001
From: "Thulasimani,Sivakumar" <sivakumar.thulasimani@intel.com>
Date: Wed, 23 Mar 2016 17:21:13 +0530
Subject: [PATCH 14/19] Revert "FOR_UPSTREAM [VPG]: drm/i915: Calculate
 multiplier value for DP panels"

This reverts commit 4dc3d688204d39e4610b48f24532f1a4cf8dcbf8.
DP panels does not require multiplier and was incorrectly added.
This patch fixes this by reverting the original change.

Conflicts:
	drivers/gpu/drm/i915/intel_drv.h

Change-Id: I9e76629962d1f5d7eee9d2e8681a71639f2e158d
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-30099
Signed-off-by: Sivakumar Thulasimani <sivakumar.thulasimani@intel.com>
Reviewed-on: https://android.intel.com:443/498189
---
 drivers/gpu/drm/i915/intel_display.c |  3 ---
 drivers/gpu/drm/i915/intel_dp.c      | 27 ++-------------------------
 drivers/gpu/drm/i915/intel_drv.h     |  2 --
 3 files changed, 2 insertions(+), 30 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index d65079f..4d23545 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -15342,9 +15342,6 @@ start_link_train:
 		crtc->config.port_clock =
 				drm_dp_bw_code_to_link_rate(intel_dp->link_bw);
 
-		crtc->config.pixel_multiplier = intel_dp_calc_multiplier(
-						encoder, intel_dp->link_bw);
-
 		/* Enable PLL followed by port */
 		intel_dp_set_clock(encoder, &crtc->config, intel_dp->link_bw);
 		chv_update_pll(crtc);
diff --git a/drivers/gpu/drm/i915/intel_dp.c b/drivers/gpu/drm/i915/intel_dp.c
index be78f4e..0d33c58 100644
--- a/drivers/gpu/drm/i915/intel_dp.c
+++ b/drivers/gpu/drm/i915/intel_dp.c
@@ -1032,27 +1032,6 @@ intel_dp_set_m2_n2(struct intel_crtc *crtc, struct intel_link_m_n *m_n)
 	I915_WRITE(PIPE_LINK_N2(transcoder), m_n->link_n);
 }
 
-uint8_t intel_dp_calc_multiplier(struct intel_encoder *encoder,
-			u32 link_rate)
-{
-	struct drm_device *dev = encoder->base.dev;
-	uint8_t multiplier = 1;
-
-	if (!IS_VALLEYVIEW(dev))
-		return multiplier;
-
-	/*
-	 * CHV/VLV supports only HBR and LBR,
-	 * so use precalculated values
-	 */
-	if (link_rate == DP_LINK_BW_2_7)
-		multiplier = 4;
-	else if (link_rate != DP_LINK_BW_1_62)
-		DRM_ERROR("Invalid link rate used\n");
-
-	return multiplier;
-}
-
 bool
 intel_dp_compute_config(struct intel_encoder *encoder,
 			struct intel_crtc_config *pipe_config)
@@ -1187,14 +1166,12 @@ found:
 	intel_dp->lane_count = lane_count;
 	pipe_config->pipe_bpp = bpp;
 	pipe_config->port_clock = drm_dp_bw_code_to_link_rate(intel_dp->link_bw);
-	pipe_config->pixel_multiplier =
-			intel_dp_calc_multiplier(encoder, bws[clock]);
 
 	DRM_DEBUG_KMS("DP link bw %02x lane count %d clock %d bpp %d\n",
 		      intel_dp->link_bw, intel_dp->lane_count,
 		      pipe_config->port_clock, bpp);
-	DRM_DEBUG_KMS("DP link bw required %i available %i and multiplier %d\n",
-		      mode_rate, link_avail, pipe_config->pixel_multiplier);
+	DRM_DEBUG_KMS("DP link bw required %i available %i\n",
+		      mode_rate, link_avail);
 
 	intel_link_compute_m_n(bpp, lane_count,
 			       adjusted_mode->crtc_clock,
diff --git a/drivers/gpu/drm/i915/intel_drv.h b/drivers/gpu/drm/i915/intel_drv.h
index e010515..1df27b7 100644
--- a/drivers/gpu/drm/i915/intel_drv.h
+++ b/drivers/gpu/drm/i915/intel_drv.h
@@ -1016,8 +1016,6 @@ bool intel_dp_compute_config(struct intel_encoder *encoder,
 bool intel_dp_is_edp(struct drm_device *dev, enum port port);
 bool intel_dp_hpd_pulse(struct intel_digital_port *intel_dig_port,
 			bool long_hpd);
-uint8_t intel_dp_calc_multiplier(struct intel_encoder *encoder,
-			u32 pixel_clock);
 int intel_dp_max_link_bw(struct intel_dp *intel_dp);
 
 void intel_edp_backlight_on(struct intel_dp *intel_dp);
-- 
1.9.1

