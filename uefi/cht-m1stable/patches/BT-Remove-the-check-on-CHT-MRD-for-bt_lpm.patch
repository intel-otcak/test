From a08155a7b125d88bb961e08677e2fc41037588b6 Mon Sep 17 00:00:00 2001
From: Marco Chiotti <marcox.chiotti@intel.com>
Date: Thu, 24 Mar 2016 14:35:37 +0100
Subject: [PATCH 3/3] [BT] Remove the check on CHT MRD for bt_lpm

Once the MRD BIOS with the correct BT GPIO
order has been delivered, bt_lpm shall not
use different GPIO and so the checks are
removed

TO BE MERGED ONLY AFTER THE NEW BIOS IS AVAILABLE

Change-Id: I577e8320176dfeb211162fb6e4884a2e17dc3423
Signed-off-by: Marco Chiotti <marcox.chiotti@intel.com>
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-31998
Reviewed-on: https://android.intel.com:443/486126
---
 drivers/misc/bt_lpm/bt_lpm.c | 37 ++-----------------------------------
 1 file changed, 2 insertions(+), 35 deletions(-)

diff --git a/drivers/misc/bt_lpm/bt_lpm.c b/drivers/misc/bt_lpm/bt_lpm.c
index 11d615b..285a9bb 100644
--- a/drivers/misc/bt_lpm/bt_lpm.c
+++ b/drivers/misc/bt_lpm/bt_lpm.c
@@ -27,16 +27,6 @@
 #include <linux/pm_runtime.h>
 #include <linux/delay.h>
 #include <linux/serial_hsu.h>
-#include <linux/dmi.h>
-
-static const struct dmi_system_id mrd_bt_gpio[] = {
-	{
-		.matches = {DMI_MATCH(DMI_BIOS_VERSION, "CHTMRD"),},
-	},
-	{}
-};
-
-static bool isMrdBoard;
 
 enum {
 	gpio_wake_acpi_idx,
@@ -119,32 +109,14 @@ static int bt_lpm_acpi_probe(struct platform_device *pdev)
 {
 	acpi_handle handle;
 	acpi_integer port;
-	const struct dmi_system_id *dmi_id;
-
-	isMrdBoard = false;
-	dmi_id = dmi_first_match(mrd_bt_gpio);
-	if (dmi_id) {
-		pr_debug("CHT MRD found - reordering GPIO\n");
-		isMrdBoard = true;
-	}
 
 	/*
 	 * Handle ACPI specific initializations.
 	 */
 	dev_dbg(&pdev->dev, "ACPI specific probe\n");
 
-	/*
-	 * In CHT MRD the gpio_wake_acpi_idx and gpio_enable_bt_acpi_idx
-	 * coming from the ACPI table are swapped
-	 * This is a temporary fix waiting for the correct ACPI table
-	 */
-	if (isMrdBoard) {
-		bt_lpm_gpiod = gpiod_get_index(&pdev->dev, "enable_bt",
-						gpio_wake_acpi_idx);
-	} else {
-		bt_lpm_gpiod = gpiod_get_index(&pdev->dev, "enable_bt",
+	bt_lpm_gpiod = gpiod_get_index(&pdev->dev, "enable_bt",
 						gpio_enable_bt_acpi_idx);
-	}
 	bt_lpm.gpio_enable_bt = desc_to_gpio(bt_lpm_gpiod);
 	if (!gpio_is_valid(bt_lpm.gpio_enable_bt)) {
 		pr_err("%s: gpio %d for gpio_enable_bt not valid\n", __func__,
@@ -153,13 +125,8 @@ static int bt_lpm_acpi_probe(struct platform_device *pdev)
 	}
 
 #ifndef DBG_DISABLE_BT_LOW_POWER
-	if (isMrdBoard) {
-		bt_lpm_gpiod = gpiod_get_index(&pdev->dev, "host_wake_bt",
-						gpio_enable_bt_acpi_idx);
-	} else {
-		bt_lpm_gpiod = gpiod_get_index(&pdev->dev, "host_wake_bt",
+	bt_lpm_gpiod = gpiod_get_index(&pdev->dev, "host_wake_bt",
 						gpio_wake_acpi_idx);
-	}
 	bt_lpm.gpio_wake = desc_to_gpio(bt_lpm_gpiod);
 	if (!gpio_is_valid(bt_lpm.gpio_wake)) {
 		pr_err("%s: gpio %d for gpio_wake not valid\n", __func__,
-- 
1.9.1

