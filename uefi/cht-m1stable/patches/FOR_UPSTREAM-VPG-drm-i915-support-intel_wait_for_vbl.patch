From 1f22d3859dd91cba7cce5c015d73404fa0f85a1f Mon Sep 17 00:00:00 2001
From: Yogesh Mohan Marimuthu <yogesh.mohan.marimuthu@intel.com>
Date: Fri, 31 Jul 2015 11:30:42 +0530
Subject: [PATCH] FOR_UPSTREAM [VPG]: drm/i915: support intel_wait_for_vblank
 in command mode

The frame counter will not increment continuously in case of command mode.
hence waiting for vblank using frame counter will not work. so, need to
wait for vblank using vblank_start_int_status bit. In case of older platform
there is a wait loop for vblank start interrupt status. but that code is not
used for command mode because that code has a race condition with irq handler,
instead a flag is set in irq_handler for te interrupt and that flag is used
to wait for vblank.

Change-Id: Ia939b430d3d0e09fc56ea9bc6132a75e1bd458f3
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-7482
Signed-off-by: Yogesh Mohan Marimuthu <yogesh.mohan.marimuthu@intel.com>
---
 drivers/gpu/drm/i915/i915_irq.c      |  3 +++
 drivers/gpu/drm/i915/intel_display.c | 34 ++++++++++++++++++++++++++++++++++
 drivers/gpu/drm/i915/intel_drv.h     |  2 ++
 3 files changed, 39 insertions(+)

diff --git a/drivers/gpu/drm/i915/i915_irq.c b/drivers/gpu/drm/i915/i915_irq.c
index 09fb5e5..961c88b 100644
--- a/drivers/gpu/drm/i915/i915_irq.c
+++ b/drivers/gpu/drm/i915/i915_irq.c
@@ -2252,6 +2252,9 @@ static bool intel_pipe_handle_vblank(struct drm_device *dev, enum pipe pipe)
 	crtc = to_intel_crtc(intel_get_crtc_for_pipe(dev, pipe));
 	wake_up(&crtc->vbl_wait);
 
+	if (intel_dsi_is_enc_on_crtc_cmd_mode(&crtc->base))
+		crtc->te_int = true;
+
 	return true;
 }
 
diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index 7db2b7a..ba8a8d8 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -1008,6 +1008,40 @@ void intel_wait_for_vblank(struct drm_device *dev, int pipe)
 {
 	struct drm_i915_private *dev_priv = dev->dev_private;
 	int pipestat_reg = PIPESTAT(pipe);
+	struct drm_crtc *crtc;
+	struct intel_crtc *intel_crtc = NULL;
+
+	for_each_crtc(dev, crtc) {
+		intel_crtc = to_intel_crtc(crtc);
+
+		if (intel_crtc->pipe == pipe)
+			break;
+	}
+
+	if (intel_crtc->pipe != pipe) {
+		DRM_DEBUG_KMS("couldn't find pipe crtc\n");
+		return;
+	}
+
+	if (intel_dsi_is_enc_on_crtc_cmd_mode(crtc)) {
+		if (drm_vblank_get(dev, pipe))
+			return;
+
+		/* FIXME: if intel_wait_for_vblank is called from 2 threads
+		 * then there is a possibility that after te_int is set to 0
+		 * and before wait_for executes, the irq_handler could set
+		 * te_int to 1 and intel_wait_for_vblank in parallel thread
+		 * could set it to 0. Due to this the wait_for_vblank will
+		 * take one frame time extra.
+		 */
+		intel_crtc->te_int = false;
+
+		if (wait_for(intel_crtc->te_int, 50))
+			DRM_DEBUG_KMS("TE interrupt wait timed out\n");
+
+		drm_vblank_put(dev, pipe);
+		return;
+	}
 
 	if (IS_G4X(dev) || INTEL_INFO(dev)->gen >= 5) {
 		g4x_wait_for_vblank(dev, pipe);
diff --git a/drivers/gpu/drm/i915/intel_drv.h b/drivers/gpu/drm/i915/intel_drv.h
index b06ff38..db3a30f 100644
--- a/drivers/gpu/drm/i915/intel_drv.h
+++ b/drivers/gpu/drm/i915/intel_drv.h
@@ -529,6 +529,8 @@ struct intel_crtc {
 	 */
 	u32 hw_frm_cnt_at_enable;
 	bool skip_check_state;
+
+	bool te_int;
 };
 
 struct intel_plane_wm_parameters {
-- 
1.9.1

