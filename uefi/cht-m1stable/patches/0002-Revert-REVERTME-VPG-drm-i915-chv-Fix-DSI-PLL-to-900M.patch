From 5cc2d8017a94005a0ae470d477c607e2f85268fb Mon Sep 17 00:00:00 2001
Message-Id: <5cc2d8017a94005a0ae470d477c607e2f85268fb.1414143271.git.chang-joon.lee@intel.com>
In-Reply-To: <f393e797ccaaf66a25ee3d7c4e6136083a6effeb.1414143271.git.chang-joon.lee@intel.com>
References: <f393e797ccaaf66a25ee3d7c4e6136083a6effeb.1414143271.git.chang-joon.lee@intel.com>
From: Yogesh Mohan Marimuthu <yogesh.mohan.marimuthu@intel.com>
Date: Wed, 15 Oct 2014 13:56:36 +0530
Subject: [PATCH 02/26] Revert "REVERTME [VPG]: drm/i915/chv: Fix DSI PLL to
 900Mhz"

This reverts commit b18477a5445b470b7dd3c922a78236b2057125bd.

This patch actualy contains 2 fixes, one is for cannot read cck
and other is to hardcode DSI PLL to 900 Mhz. Another patch
is created for cck read work around.

For: GMINL-1532
Change-Id: I539b1f3260799fb08d351cbdc3d9524fdcb5042f
Signed-off-by: Yogesh Mohan Marimuthu <yogesh.mohan.marimuthu@intel.com>
---
 drivers/gpu/drm/i915/intel_dsi_pll.c |   24 +++++-------------------
 1 file changed, 5 insertions(+), 19 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_dsi_pll.c b/drivers/gpu/drm/i915/intel_dsi_pll.c
index aca49d85..3b20d81 100644
--- a/drivers/gpu/drm/i915/intel_dsi_pll.c
+++ b/drivers/gpu/drm/i915/intel_dsi_pll.c
@@ -43,8 +43,6 @@ struct dsi_mnp {
 	u32 dsi_pll_div;
 };
 
-u32 chv_dsi_pll_ctrl;
-
 static const u32 lfsr_converts[] = {
 	426, 469, 234, 373, 442, 221, 110, 311, 411,		/* 62 - 70 */
 	461, 486, 243, 377, 188, 350, 175, 343, 427, 213,	/* 71 - 80 */
@@ -246,12 +244,6 @@ static void vlv_configure_dsi_pll(struct intel_encoder *encoder)
 		return;
 	}
 
-	/* For CHV hardcode PLL for 900MHz till algorithm is implemented */
-	if (IS_CHERRYVIEW(dev_priv->dev)) {
-		chv_dsi_pll_ctrl = dsi_mnp.dsi_pll_ctrl = 0x20180;
-		dsi_mnp.dsi_pll_div = 0x201E6;
-	}
-
 	dsi_mnp.dsi_pll_ctrl |= DSI_PLL_CLK_GATE_DSI0_DSIPLL;
 
 	DRM_DEBUG_KMS("dsi pll div %08x, ctrl %08x\n",
@@ -289,11 +281,7 @@ void vlv_enable_dsi_pll(struct intel_encoder *encoder)
 	 */
 	udelay(1000);
 
-	if (IS_CHERRYVIEW(dev_priv->dev))
-		tmp = chv_dsi_pll_ctrl;
-	else
-		tmp = vlv_cck_read(dev_priv, CCK_REG_DSI_PLL_CONTROL);
-
+	tmp = vlv_cck_read(dev_priv, CCK_REG_DSI_PLL_CONTROL);
 	tmp |= DSI_PLL_VCO_EN;
 	vlv_cck_write(dev_priv, CCK_REG_DSI_PLL_CONTROL, tmp);
 
@@ -310,17 +298,15 @@ void vlv_enable_dsi_pll(struct intel_encoder *encoder)
 void vlv_disable_dsi_pll(struct intel_encoder *encoder)
 {
 	struct drm_i915_private *dev_priv = encoder->base.dev->dev_private;
-	u32 tmp = 0;
+	u32 tmp;
 
 	DRM_DEBUG_KMS("\n");
 
 	mutex_lock(&dev_priv->dpio_lock);
 
-	if (!IS_CHERRYVIEW(dev_priv->dev)) {
-		tmp = vlv_cck_read(dev_priv, CCK_REG_DSI_PLL_CONTROL);
-		tmp &= ~DSI_PLL_VCO_EN;
-		tmp |= DSI_PLL_LDO_GATE;
-	}
+	tmp = vlv_cck_read(dev_priv, CCK_REG_DSI_PLL_CONTROL);
+	tmp &= ~DSI_PLL_VCO_EN;
+	tmp |= DSI_PLL_LDO_GATE;
 	vlv_cck_write(dev_priv, CCK_REG_DSI_PLL_CONTROL, tmp);
 
 	mutex_unlock(&dev_priv->dpio_lock);
-- 
1.7.9.5

