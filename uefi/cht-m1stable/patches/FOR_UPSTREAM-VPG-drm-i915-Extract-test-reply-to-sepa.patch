From 6adf69791b0a6b32ba21cf7afe0f0a9040ede519 Mon Sep 17 00:00:00 2001
From: "Thulasimani,Sivakumar" <sivakumar.thulasimani@intel.com>
Date: Tue, 1 Sep 2015 15:47:08 +0530
Subject: [PATCH 10/28] FOR_UPSTREAM [VPG]: drm/i915: Extract test reply to
 separate function

Replying for automated test request must be done only when we
are ready for the request. This patch extracts this reply to
separate function as it is needed in other places in the
upcoming patches.

Change-Id: Id826d5be4d919a0b9df90de466df005efe13ca7d
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-9749
Signed-off-by: Sivakumar Thulasimani <sivakumar.thulasimani@intel.com>
Reviewed-on: https://android.intel.com:443/439683
---
 drivers/gpu/drm/i915/intel_dp.c | 18 +++++++++++-------
 1 file changed, 11 insertions(+), 7 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_dp.c b/drivers/gpu/drm/i915/intel_dp.c
index c108a5c..ab74a80 100644
--- a/drivers/gpu/drm/i915/intel_dp.c
+++ b/drivers/gpu/drm/i915/intel_dp.c
@@ -142,6 +142,7 @@ static void edp_panel_vdd_off(struct intel_dp *intel_dp, bool sync);
 static bool edp_is_vdd_on(struct intel_dp *intel_dp);
 static struct edid *
 intel_dp_get_edid(struct drm_connector *connector, struct i2c_adapter *adapter);
+static int intel_dp_write_test_reply(struct intel_dp *intel_dp, uint8_t reply);
 
 static int
 intel_dp_max_link_bw(struct intel_dp *intel_dp)
@@ -4342,6 +4343,15 @@ static uint8_t intel_dp_autotest_phy_pattern(struct intel_dp *intel_dp)
 	return test_result;
 }
 
+static int intel_dp_write_test_reply(struct intel_dp *intel_dp, uint8_t reply)
+{
+	/* clear interrupt first */
+	drm_dp_dpcd_writeb(&intel_dp->aux, DP_DEVICE_SERVICE_IRQ_VECTOR,
+			DP_AUTOMATED_TEST_REQUEST);
+
+	return drm_dp_dpcd_write(&intel_dp->aux, DP_TEST_RESPONSE, &reply, 1);
+}
+
 static void intel_dp_handle_test_request(struct intel_dp *intel_dp,
 	bool short_pulse)
 {
@@ -4388,13 +4398,7 @@ static void intel_dp_handle_test_request(struct intel_dp *intel_dp,
 	}
 
 update_status:
-	/* clear interrupt first */
-	drm_dp_dpcd_writeb(&intel_dp->aux,
-			DP_DEVICE_SERVICE_IRQ_VECTOR,
-			DP_AUTOMATED_TEST_REQUEST);
-	status = drm_dp_dpcd_write(&intel_dp->aux,
-				   DP_TEST_RESPONSE,
-				   &response, 1);
+	status = intel_dp_write_test_reply(intel_dp, response);
 
 	if (status <= 0)
 		DRM_DEBUG_KMS("Could not write test response to sink\n");
-- 
1.9.1

