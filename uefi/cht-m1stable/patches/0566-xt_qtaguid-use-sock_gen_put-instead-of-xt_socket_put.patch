From 7a6c1d710274370d49d2fcaeed8c43cbc5e5d1c4 Mon Sep 17 00:00:00 2001
From: Amit Pundir <amit.pundir@linaro.org>
Date: Thu, 29 Jan 2015 01:16:23 +0530
Subject: [PATCH 566/634] xt_qtaguid: use sock_gen_put() instead of
 xt_socket_put_sk()

Removing obsolete xt_socket_put_sk() and using sock_gen_put() instead.
xt_socket_put_sk() was reintroduced for xt_qtaguid in one of the patches,
but it turned out sock_gen_put() supersedes xt_socket_put_sk(). So we
don't need xt_socket_put_sk() any more.

This patch is based on commit ID: 1a8bf6eeef9fe417f90e5338a2fd7fba69c6d0e4
"netfilter: xt_socket: use sock_gen_put()"

Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
Change-Id: I976d5f7f7eded0f3cc91b596acfeb35e4c2057e5
---
 include/uapi/linux/netfilter/xt_socket.h |  1 -
 net/netfilter/xt_qtaguid.c               |  4 ++--
 net/netfilter/xt_socket.c                | 10 ----------
 3 files changed, 2 insertions(+), 13 deletions(-)

diff --git a/include/uapi/linux/netfilter/xt_socket.h b/include/uapi/linux/netfilter/xt_socket.h
index c9b247c..55076a3 100644
--- a/include/uapi/linux/netfilter/xt_socket.h
+++ b/include/uapi/linux/netfilter/xt_socket.h
@@ -18,7 +18,6 @@ struct xt_socket_mtinfo2 {
 };
 #define XT_SOCKET_FLAGS_V2 (XT_SOCKET_TRANSPARENT | XT_SOCKET_NOWILDCARD)
 
-void xt_socket_put_sk(struct sock *sk);
 struct sock *xt_socket_get4_sk(const struct sk_buff *skb,
 			       struct xt_action_param *par);
 struct sock *xt_socket_get6_sk(const struct sk_buff *skb,
diff --git a/net/netfilter/xt_qtaguid.c b/net/netfilter/xt_qtaguid.c
index e33be3a..2f9784c 100644
--- a/net/netfilter/xt_qtaguid.c
+++ b/net/netfilter/xt_qtaguid.c
@@ -1605,7 +1605,7 @@ static struct sock *qtaguid_find_sk(const struct sk_buff *skb,
 		 * "struct inet_timewait_sock" which is missing fields.
 		 */
 		if (sk->sk_state  == TCP_TIME_WAIT) {
-			xt_socket_put_sk(sk);
+			sock_gen_put(sk);
 			sk = NULL;
 		}
 	}
@@ -1803,7 +1803,7 @@ static bool qtaguid_mt(const struct sk_buff *skb, struct xt_action_param *par)
 
 put_sock_ret_res:
 	if (got_sock)
-		xt_socket_put_sk(sk);
+		sock_gen_put(sk);
 	if (set_sk_callback_lock)
 		read_unlock_bh(&sk->sk_callback_lock);
 ret_res:
diff --git a/net/netfilter/xt_socket.c b/net/netfilter/xt_socket.c
index 6281f8ee..7917696 100644
--- a/net/netfilter/xt_socket.c
+++ b/net/netfilter/xt_socket.c
@@ -35,16 +35,6 @@
 #include <net/netfilter/nf_conntrack.h>
 #endif
 
-void
-xt_socket_put_sk(struct sock *sk)
-{
-	if (sk->sk_state == TCP_TIME_WAIT)
-		inet_twsk_put(inet_twsk(sk));
-	else
-		sock_put(sk);
-}
-EXPORT_SYMBOL(xt_socket_put_sk);
-
 static int
 extract_icmp4_fields(const struct sk_buff *skb,
 		    u8 *protocol,
-- 
1.9.1

