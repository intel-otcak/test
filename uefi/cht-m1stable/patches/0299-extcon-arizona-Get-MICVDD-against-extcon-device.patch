From 014240afcca06eccf0f1275bd6ce2d8c532f78b9 Mon Sep 17 00:00:00 2001
From: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date: Fri, 18 Jul 2014 12:59:00 +0100
Subject: [PATCH 299/351] extcon: arizona: Get MICVDD against extcon device

Previously we would do a regulator get against the main Arizona device
to obtain the MICVDD regulator. Arizona is an MFD device and normally
MICVDD will be supplied by one of its children (the arizona-micsupp
regulator). As devres destruction for the MFD device will run after all
its children have been destroyed, the regulator will be destroyed before
devres calls regulator_put. This causes a warning from both the
destruction of the child node, as the regulator is still open, and from
the put of the regulator as the regulator device has already been
destroyed.

A simple fix here is to get the regulator against the extcon device
itself such that devres runs when the child is destroyed. This has the
additional benefit that if for some reason the extcon driver is unloaded
the regulator reference won't hang around until the MFD is unloaded.

Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>
(cherry picked from commit 17271f608bf818a13b2c235d45258311308d5b03)

Change-Id: I03c9a16d7aae4de717647e8a25d5f2cbc2fff9ae
Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
---
 drivers/extcon/extcon-arizona.c |    6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/drivers/extcon/extcon-arizona.c b/drivers/extcon/extcon-arizona.c
index 73b0bd0..4f3844b 100644
--- a/drivers/extcon/extcon-arizona.c
+++ b/drivers/extcon/extcon-arizona.c
@@ -1292,7 +1292,11 @@ static int arizona_extcon_probe(struct platform_device *pdev)
 		goto err;
 	}
 
-	info->micvdd = devm_regulator_get(arizona->dev, "MICVDD");
+	/* Set of_node to parent from the SPI device to allow
+	 * location regulator supplies */
+	pdev->dev.of_node = arizona->dev->of_node;
+
+	info->micvdd = devm_regulator_get(&pdev->dev, "MICVDD");
 	if (IS_ERR(info->micvdd)) {
 		ret = PTR_ERR(info->micvdd);
 		dev_err(arizona->dev, "Failed to get MICVDD: %d\n", ret);
-- 
1.7.9.5

