From df7c108da35cba996a9c973c879bb029b6337e99 Mon Sep 17 00:00:00 2001
From: "Thakur,Santosh KrX" <santosh.krx.thakur@intel.com>
Date: Wed, 9 Sep 2015 13:59:16 +0530
Subject: [PATCH] ASoC: Intel: CHT: Three button support

This patch enables three button support in CHT

Change-Id: I0b1add41281f7f604bb9dec8b212aab9d1724952
Tracked-On: https://jira01.devtools.intel.com/browse/GMINL-11851
Signed-off-by: Thakur,Santosh KrX <santosh.krx.thakur@intel.com>
---
 sound/soc/codecs/rt5670.c                  |  6 ++--
 sound/soc/codecs/rt5670.h                  |  6 ++++
 sound/soc/intel/board/cht_bl_dpcm_rt5672.c | 44 ++++++++++++++++--------------
 3 files changed, 34 insertions(+), 22 deletions(-)

diff --git a/sound/soc/codecs/rt5670.c b/sound/soc/codecs/rt5670.c
index 79aa53d5dcf1..05bb0698f642 100644
--- a/sound/soc/codecs/rt5670.c
+++ b/sound/soc/codecs/rt5670.c
@@ -65,6 +65,7 @@ static struct rt5670_init_reg init_list[] = {
 	{ RT5670_DIG_MISC	, 0xc019 }, /* fa[0]=1, fa[3]=1'b MCLK det,
 						fa[15:14]=11'b for pdm */
 	{ RT5670_IL_CMD2	, 0x0010 }, /* set Inline Command Window */
+	{ RT5670_IL_CMD3	, 0x0009 },
 	{ RT5670_A_JD_CTRL1     , 0x0001 }, /* set JD1 mode 1 (1 port) */
 	{ RT5670_PRIV_INDEX	, 0x0014 },
 	{ RT5670_PRIV_DATA	, 0x9a8a },
@@ -190,7 +191,7 @@ static const u16 rt5670_reg[RT5670_VENDOR_ID2 + 1] = {
 	[RT5670_SV_ZCD1] = 0x0809,
 	[RT5670_IL_CMD] = 0x0001,
 	[RT5670_IL_CMD2] = 0x0049,
-	[RT5670_IL_CMD3] = 0x0009,
+	[RT5670_IL_CMD3] = 0x0024,
 	[RT5670_DRC_HL_CTRL1] = 0x8000,
 	[RT5670_ADC_MONO_HP_CTRL1] = 0xb300,
 	[RT5670_ADC_STO2_HP_CTRL1] = 0xb300,
@@ -327,6 +328,7 @@ static int rt5670_volatile_register(
 	case RT5670_DSP_CTRL3:
 	case RT5670_DSP_CTRL4:
 	case RT5670_DSP_CTRL5:
+	case RT5670_JD_CTRL3:
 	case RT5670_VENDOR_ID:
 	case RT5670_VENDOR_ID1:
 	case RT5670_VENDOR_ID2:
@@ -548,7 +550,7 @@ int rt5670_headset_detect(struct snd_soc_codec *codec, int jack_insert)
 		}
 		rt5670_index_update_bits(codec, 0x3e, 0x40, 0x40);
 		snd_soc_update_bits(codec, RT5670_MICBIAS, 0x10, 0x0);
-		snd_soc_update_bits(codec, RT5670_IL_CMD, 0x1f, 0x0);
+		snd_soc_update_bits(codec, RT5670_IL_CMD, 0x1f, 0x5);
 	} else {
 		snd_soc_update_bits(codec, RT5670_INT_IRQ_ST, 0x8, 0x0);
 		rt5670->jack_type = 0;
diff --git a/sound/soc/codecs/rt5670.h b/sound/soc/codecs/rt5670.h
index d7ded1fe06ab..9666e66ac37b 100644
--- a/sound/soc/codecs/rt5670.h
+++ b/sound/soc/codecs/rt5670.h
@@ -1811,6 +1811,11 @@
 #define RT5670_ZCD_HP_DIS			(0x0 << 15)
 #define RT5670_ZCD_HP_EN			(0x1 << 15)
 
+/* Inline Command Control 1 (0xdb) */
+#define RT5670_STA_HOLD_UP_BTN                 (0x1 << 13)
+#define RT5670_STA_HOLD_CENTER_BTN             (0x1 << 10)
+#define RT5670_STA_HOLD_DOWN_BTN               (0x1 << 7)
+#define RT5670_INLINE_EN                       (0x1 << 6)
 
 /* Codec Private Register definition */
 /* 3D Speaker Control (0x63) */
@@ -1926,6 +1931,7 @@ enum {
 #define RT5670_REG_DISP_LEN 23
 
 int rt5670_headset_detect(struct snd_soc_codec *codec, int jack_insert);
+int rt5670_button_detect(struct snd_soc_codec *codec);
 int rt5670_check_interrupt_event(struct snd_soc_codec *codec, int *data);
 int rt5670_check_jd_status(struct snd_soc_codec *codec);
 int rt5670_check_bp_status(struct snd_soc_codec *codec);
diff --git a/sound/soc/intel/board/cht_bl_dpcm_rt5672.c b/sound/soc/intel/board/cht_bl_dpcm_rt5672.c
index 24ba7927dcf1..e42a5674a562 100644
--- a/sound/soc/intel/board/cht_bl_dpcm_rt5672.c
+++ b/sound/soc/intel/board/cht_bl_dpcm_rt5672.c
@@ -78,7 +78,9 @@ static struct snd_soc_jack_gpio hs_gpio = {
 		.name			= "cht-codec-int",
 		.report			= SND_JACK_HEADSET |
 					  SND_JACK_HEADPHONE |
-					  SND_JACK_BTN_0,
+					  SND_JACK_BTN_0 |
+					  SND_JACK_BTN_1 |
+					  SND_JACK_BTN_2,
 		.debounce_time		= CHT_INTR_DEBOUNCE,
 		.jack_status_check	= cht_hs_detection,
 };
@@ -372,25 +374,24 @@ static void cht_check_hs_button_status(struct work_struct *work)
 
 	if (((jack->status & SND_JACK_HEADSET) == SND_JACK_HEADSET)
 			&& ctx->process_button_events) {
-
-		status = rt5670_check_jd_status(codec);
-		if (!status) {
-			/* confirm jack is connected */
-			status = rt5670_check_bp_status(codec);
-			if (jack->status & SND_JACK_BTN_0) {
-				/* if button was previosly in pressed state*/
-				if (!status) {
-					pr_debug("BR event received\n");
-					jack_type = SND_JACK_HEADSET;
-				}
-			} else {
-				/* If button was previously in released state */
-				if (status) {
-					pr_debug("BP event received\n");
-					jack_type = SND_JACK_HEADSET |
-								SND_JACK_BTN_0;
-				}
-			}
+		status = rt5670_button_detect(codec);
+		switch (status) {
+		case RT5670_STA_HOLD_UP_BTN:
+			/* Up */
+			jack_type = SND_JACK_HEADSET | SND_JACK_BTN_1;
+			break;
+		case RT5670_STA_HOLD_CENTER_BTN:
+			/* Center */
+			jack_type = SND_JACK_HEADSET | SND_JACK_BTN_0;
+			break;
+		case RT5670_STA_HOLD_DOWN_BTN:
+			/* Down */
+			jack_type = SND_JACK_HEADSET | SND_JACK_BTN_2;
+			break;
+		default:
+			/* Release */
+			jack_type = SND_JACK_HEADSET;
+			break;
 		}
 		/* There could be button interrupts during jack removal.
 		 * There can be situations where a button interrupt is generated
@@ -670,6 +671,7 @@ static int cht_audio_init(struct snd_soc_pcm_runtime *runtime)
 	snd_soc_update_bits(codec, RT5670_JD_CTRL,
 			RT5670_JD_MASK, RT5670_JD_JD1_IN4P);
 
+        snd_soc_update_bits(codec, RT5670_IL_CMD, RT5670_INLINE_EN, RT5670_INLINE_EN);
 
 	desc = devm_gpiod_get_index(codec->dev, NULL, 0);
 	if (!IS_ERR(desc)) {
@@ -718,6 +720,8 @@ static int cht_audio_init(struct snd_soc_pcm_runtime *runtime)
 	}
 
 	snd_jack_set_key(ctx->jack.jack, SND_JACK_BTN_0, KEY_MEDIA);
+	snd_jack_set_key(ctx->jack.jack, SND_JACK_BTN_1, KEY_VOLUMEUP);
+	snd_jack_set_key(ctx->jack.jack, SND_JACK_BTN_2, KEY_VOLUMEDOWN);
 
 	ret = snd_soc_jack_add_gpios(&ctx->jack, 1, &hs_gpio);
 	if (ret) {
-- 
2.6.0.rc0.2.g7662973

