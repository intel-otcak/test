From 54e166840c86bdfcc3bd246bac5ceb373ea7bd40 Mon Sep 17 00:00:00 2001
From: Ilkka Koskinen <ilkka.koskinen@intel.com>
Date: Mon, 22 Sep 2014 10:45:39 -0700
Subject: [PATCH 16/28] atomisp: Switch of ISP if firmware loading fails

ISP is always enabled at boot up. If ISP firmware load fails, ISP
needs  to be switched off. Otherwise S0ix states remain blocked.

Change-Id: Ibcf766cd48514c7d0994e7819321c39b0fb9de67
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-9279
Original-Tracked-On: https://jira01.devtools.intel.com/browse/OAM-7550
Signed-off-by: Ilkka Koskinen <ilkka.koskinen@intel.com>
Signed-off-by: Per Persson <per.persson@intel.com>
Reviewed-on: https://icggerrit.ir.intel.com/83122
Approver: Yunliang Ding <yunliang.ding@intel.com>
Reviewed-by: Yunliang Ding <yunliang.ding@intel.com>
Build: Dessert M BXT RVP (SC)
Build: Dessert M COHO (SC)
Integrator: WeiX Meng <weix.meng@intel.com>
Reviewed-by: WeiX Meng <weix.meng@intel.com>
Signed-off-by: Yang Fan F <fan.f.yang@intel.com>
Reviewed-on: https://android.intel.com:443/440502
---
 .../pci/atomisp2/atomisp_driver/atomisp_v4l2.c     | 26 ++++++++++++++++++++++
 1 file changed, 26 insertions(+)

diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_v4l2.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_v4l2.c
index 2988b96..93615df 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_v4l2.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_v4l2.c
@@ -1266,6 +1266,7 @@ static int atomisp_pci_probe(struct pci_dev *dev,
 	unsigned int start;
 	void __iomem *base;
 	int err, val;
+	u32 irq;
 
 	if (!dev) {
 		dev_err(&dev->dev, "atomisp: error device ptr\n");
@@ -1582,6 +1583,31 @@ enable_msi_fail:
 fw_validation_fail:
 	release_firmware(isp->firmware);
 load_fw_fail:
+	/*
+	 * Switch off ISP, as keeping it powered on would prevent
+	 * reaching S0ix states.
+	 *
+	 * The following lines have been copied from atomisp suspend path
+	 */
+
+	pci_read_config_dword(dev, PCI_INTERRUPT_CTRL, &irq);
+	irq = irq & 1 << INTR_IIR;
+	pci_write_config_dword(dev, PCI_INTERRUPT_CTRL, irq);
+
+	pci_read_config_dword(dev, PCI_INTERRUPT_CTRL, &irq);
+	irq &= ~(1 << INTR_IER);
+	pci_write_config_dword(dev, PCI_INTERRUPT_CTRL, irq);
+
+	atomisp_msi_irq_uninit(isp, dev);
+
+	atomisp_ospm_dphy_down(isp);
+#ifdef CONFIG_GMIN_INTEL_MID
+	if (ATOMISP_INTERNAL_PM) {
+		if (atomisp_mrfld_power_down(isp))
+			dev_err(&dev->dev, "Failed to switch off ISP\n");
+	}
+#endif
+
 	pci_dev_put(isp->pci_root);
 	return err;
 }
-- 
1.9.1

