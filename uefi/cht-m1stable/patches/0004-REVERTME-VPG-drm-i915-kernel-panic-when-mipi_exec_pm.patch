From 5c8b43b5ab88cb0eef9473bf6319df3a1e698dd3 Mon Sep 17 00:00:00 2001
Message-Id: <5c8b43b5ab88cb0eef9473bf6319df3a1e698dd3.1429347747.git.chang-joon.lee@intel.com>
In-Reply-To: <58b01df1cceca63ad29c5d3026fe071bcc8e2015.1429347747.git.chang-joon.lee@intel.com>
References: <58b01df1cceca63ad29c5d3026fe071bcc8e2015.1429347747.git.chang-joon.lee@intel.com>
From: Zhang Yanmin <yanmin.zhang@intel.com>
Date: Fri, 20 Mar 2015 13:47:26 +0800
Subject: [PATCH 4/4] REVERTME [VPG]: drm/i915: kernel panic when
 mipi_exec_pmic fails

We hit kernel panic like below logs. Basically,  callchain is:
        => intel_dsi_pre_enable =>
                generic_power_on =>
                generic_exec_sequence =>
                mipi_exec_pmic =>
                intel_soc_pmic_readb
intel_soc_pmic_readb might hit i2c ABORT. generic_exec_sequence
doesn't check the return value of mipi_exec_pmic and triggers
kernel panic.

The patch fixes it by:
1) Add a checking in generic_exec_sequence;
2) Add 2 wrapers. When pmic access fails, we retry for 3 times.
3) Change all calling of pmic readb/writeb in dsi-specific files.

[  534.865514, 2][     DRM Crtc13] kernel BUG at /home/egypt/ymzhang/CT/kernel/gmin/drivers/gpu/drm/i915/intel_dsi_panel_vbt.c:656!
[  534.878733, 2]invalid opcode: 0000 [#1] PREEMPT SMP
[  534.884830, 2]Modules linked in: hid_sensor_hub(F) sens_col_core(F) atomisp_css2401a0_v21(F) hid_heci_ish(F) heci_ish(F) heci(F) vidt_driver(F) lm3554(F) ov2722(F) cfg80211(F) pn544_nfc(FC) ov5693(F) 6lowpan_iphc(F) videobuf_vmalloc(F) videobuf_core(F) 8250_dw(F) ip6table_raw(F) iptable_raw(F) rfkill_gpio(F) atmel_mxt_ts(F)
[  534.918597, 2][     DRM Crtc13] CPU: 2 PID: 5768 Comm: DRM Crtc13 Tainted: GF       WC   3.14.33-x86_64-g61287f3-dirty #17
[  534.931105, 2][     DRM Crtc13] Hardware name: Intel Corporation CHERRYVIEW C0 PLATFORM/Cherry Trail FFD, BIOS CH2TFFD.X64.0004.R22.1503102030 03/10/2015
[  534.946670, 2][     DRM Crtc13] task: ffff880012aa22d0 ti: ffff880004cda000 task.ti: ffff880004cda000
[  534.956997, 2]RIP: 0010:[<ffffffff815e650a>]  [<ffffffff815e650a>] generic_exec_sequence+0x9a/0xd0
[  534.967066, 2][     DRM Crtc13] RSP: 0000:ffff880004cdbbb0  EFLAGS: 00010206
[  534.974967, 2][     DRM Crtc13] RAX: ffffffffffffff87 RBX: ffff880073c0f600 RCX: 0000000000000000
[  534.984908, 2][     DRM Crtc13] RDX: 0000000000000001 RSI: ffff88007af0c128 RDI: 00000000ffffffff
[  534.994848, 2][     DRM Crtc13] RBP: ffff880004cdbbc8 R08: 0000000000000069 R09: 0000000000000000
[  535.004789, 2][     DRM Crtc13] R10: 0000000000000000 R11: ffff880004cdb83e R12: ffff880074ad0000
[  535.014728, 2][     DRM Crtc13] R13: ffff880074164c49 R14: ffff88007b6c7800 R15: ffff880074ad0000
[  535.024670, 2][     DRM Crtc13] FS:  0000000000000000(0000) GS:ffff88007af00000(0063) knlGS:00000000f30ffdb0
[  535.035677, 2][     DRM Crtc13] CS:  0010 DS: 002b ES: 002b CR0: 000000008005003b
[  535.044063, 2][     DRM Crtc13] CR2: 00000000e10d5000 CR3: 000000005d0aa000 CR4: 00000000001007e0
[  535.054002, 2][     DRM Crtc13] Stack:
[  535.058211, 2] ffff880074ad0000 ffff880073c0f600 0000000000000001 ffff880004cdbbd8
[  535.066816, 2] ffffffff815e65f3 ffff880004cdbc80 ffffffff815e3da9 ffff880074ad0000
[  535.075427, 2] ffff880004cdbc08 ffffffff815c99ef 8002018181421348 ffff880004cdbc68
[  535.084040, 2][     DRM Crtc13] Call Trace:
[  535.088741, 2][     DRM Crtc13]  [<ffffffff815e65f3>] generic_power_on+0x23/0x30
[  535.097033, 2][     DRM Crtc13]  [<ffffffff815e3da9>] intel_dsi_pre_enable+0x79/0xa00
[  535.105810, 2][     DRM Crtc13]  [<ffffffff815c99ef>] ? vlv_cck_read+0x2f/0x40
[  535.113907, 2][     DRM Crtc13]  [<ffffffff815e5717>] ? vlv_enable_dsi_pll+0x2e7/0x460
[  535.122783, 2][     DRM Crtc13]  [<ffffffff815b8af7>] valleyview_crtc_enable+0x857/0xf60
[  535.131853, 2][     DRM Crtc13]  [<ffffffff81552275>] ? intel_display_power_rpm_get+0x115/0x170
[  535.141600, 2][     DRM Crtc13]  [<ffffffff815bcd03>] intel_crtc_control+0xf3/0x110
[  535.150183, 2][     DRM Crtc13]  [<ffffffff815bcd87>] intel_crtc_update_dpms+0x67/0x80
[  535.159056, 2][     DRM Crtc13]  [<ffffffff815c26c3>] intel_connector_dpms+0x63/0xf0
[  535.167737, 2][     DRM Crtc13]  [<ffffffff81528d2f>] drm_mode_obj_set_property_ioctl+0x39f/0x3b0
[  535.177681, 2][     DRM Crtc13]  [<ffffffff81517d54>] drm_ioctl+0x1f4/0x5a0
[  535.185488, 2][     DRM Crtc13]  [<ffffffff811e93c8>] ? fsnotify+0x228/0x2f0
[  535.193389, 2][     DRM Crtc13]  [<ffffffff81528990>] ? drm_mode_obj_get_properties_ioctl+0x110/0x110
[  535.203720, 2][     DRM Crtc13]  [<ffffffff813b9db7>] ? inode_has_perm.isra.41+0x27/0x30
[  535.212789, 2][     DRM Crtc13]  [<ffffffff813b9ed6>] ? file_has_perm+0x86/0xa0
[  535.220982, 2][     DRM Crtc13]  [<ffffffff81556f95>] i915_compat_ioctl+0x45/0x50
[  535.229370, 2][     DRM Crtc13]  [<ffffffff811fb44f>] compat_sys_ioctl+0xbf/0x1370
[  535.237854, 2][     DRM Crtc13]  [<ffffffff811c4d9e>] ? __fget+0x6e/0xb0
[  535.245371, 2][     DRM Crtc13]  [<ffffffff8142263e>] ? trace_hardirqs_on_thunk+0x3a/0x3c
[  535.254538, 2][     DRM Crtc13]  [<ffffffff81b49689>] ia32_do_call+0x13/0x13

REVERTME: This patch would conflict with regulator framework in
upstream, can be reverted once the regulator framework patch is merged.

Issue: IMINAN-26861
Change-Id: I8def1f8180a148e1469d844db42991c52ef6cef3
Signed-off-by: Zhang Yanmin <yanmin.zhang@intel.com>
---
 drivers/gpu/drm/i915/intel_dsi.c           |   52 ++++++++++++++++++++++++----
 drivers/gpu/drm/i915/intel_dsi.h           |    6 ++++
 drivers/gpu/drm/i915/intel_dsi_panel_vbt.c |   19 +++++-----
 drivers/gpu/drm/i915/intel_panel.c         |    6 ++--
 4 files changed, 64 insertions(+), 19 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_dsi.c b/drivers/gpu/drm/i915/intel_dsi.c
index 71e3eeb..5164f69 100644
--- a/drivers/gpu/drm/i915/intel_dsi.c
+++ b/drivers/gpu/drm/i915/intel_dsi.c
@@ -32,7 +32,6 @@
 #include "intel_drv.h"
 #include "intel_dsi.h"
 #include "intel_dsi_cmd.h"
-#include <linux/mfd/intel_soc_pmic.h>
 
 /* the sub-encoders aka panel drivers */
 static struct intel_dsi_device intel_dsi_devices[] = {
@@ -43,6 +42,45 @@ static struct intel_dsi_device intel_dsi_devices[] = {
 	},
 };
 
+#define        PMIC_ACCESS_RETRY_TIMES         3
+int dsi_soc_pmic_readb(int reg)
+{
+	int try = PMIC_ACCESS_RETRY_TIMES;
+	int ret;
+
+	do {
+		ret = intel_soc_pmic_readb(reg);
+		if (ret < 0) {
+			DRM_ERROR("PMIC Read failed, reg[%x] result[%x]\n",
+					reg, ret);
+			DRM_ERROR("retry ...\n");
+			usleep_range(100, 200);
+		} else
+			break;
+	} while (ret < 0 && --try);
+
+	return ret;
+}
+
+int dsi_soc_pmic_writeb(int reg, u8 val)
+{
+	int try = PMIC_ACCESS_RETRY_TIMES;
+	int ret;
+
+	do {
+		ret = intel_soc_pmic_writeb(reg, val);
+		if (ret < 0) {
+			DRM_ERROR("PMIC Write failed, reg[%x] result[%x]\n",
+					reg, val);
+			DRM_ERROR("retry ...\n");
+			usleep_range(100, 200);
+		} else
+			break;
+	} while (ret < 0 && --try);
+
+	return ret;
+}
+
 static void band_gap_reset(struct drm_i915_private *dev_priv)
 {
 	mutex_lock(&dev_priv->dpio_lock);
@@ -303,7 +341,7 @@ static void intel_dsi_soc_power_on(struct intel_dsi_device *dsi)
 
 static void intel_dsi_pmic_power_on(struct intel_dsi_device *dsi)
 {
-	intel_soc_pmic_writeb(PMIC_PANEL_EN, 0x01);
+	dsi_soc_pmic_writeb(PMIC_PANEL_EN, 0x01);
 }
 
 static void intel_dsi_pre_enable(struct intel_encoder *encoder)
@@ -582,7 +620,7 @@ static void intel_dsi_soc_power_off(struct intel_dsi_device *dsi)
 
 static void intel_dsi_pmic_power_off(struct intel_dsi_device *dsi)
 {
-	intel_soc_pmic_writeb(PMIC_PANEL_EN, 0x00);
+	dsi_soc_pmic_writeb(PMIC_PANEL_EN, 0x00);
 }
 
 static void intel_dsi_post_disable(struct intel_encoder *encoder)
@@ -1129,8 +1167,8 @@ static const struct drm_connector_funcs intel_dsi_connector_funcs = {
 
 void intel_dsi_pmic_backlight_on(struct intel_dsi_device *dsi)
 {
-	intel_soc_pmic_writeb(PMIC_BKL_EN, 0xFF);
-	intel_soc_pmic_writeb(PMIC_PWM_EN, 0x01);
+	dsi_soc_pmic_writeb(PMIC_BKL_EN, 0xFF);
+	dsi_soc_pmic_writeb(PMIC_PWM_EN, 0x01);
 
 	generic_enable_bklt(dsi);
 }
@@ -1152,8 +1190,8 @@ void intel_dsi_pmic_backlight_off(struct intel_dsi_device *dsi)
 {
 	generic_disable_bklt(dsi);
 
-	intel_soc_pmic_writeb(PMIC_PWM_EN, 0x00);
-	intel_soc_pmic_writeb(PMIC_BKL_EN, 0x7F);
+	dsi_soc_pmic_writeb(PMIC_PWM_EN, 0x00);
+	dsi_soc_pmic_writeb(PMIC_BKL_EN, 0x7F);
 }
 
 void intel_dsi_soc_backlight_off(struct intel_dsi_device *dsi)
diff --git a/drivers/gpu/drm/i915/intel_dsi.h b/drivers/gpu/drm/i915/intel_dsi.h
index d437c3d..e00ce5f 100644
--- a/drivers/gpu/drm/i915/intel_dsi.h
+++ b/drivers/gpu/drm/i915/intel_dsi.h
@@ -26,6 +26,7 @@
 
 #include <drm/drmP.h>
 #include <drm/drm_crtc.h>
+#include <linux/mfd/intel_soc_pmic.h>
 #include "intel_drv.h"
 
 #define HV_DDI0_HPD_GPIONC_0_PCONF0		0x4130
@@ -541,4 +542,9 @@ extern struct intel_dsi *intel_attached_dsi(struct drm_connector *connector);
 
 void generic_enable_bklt(struct intel_dsi_device *dsi);
 void generic_disable_bklt(struct intel_dsi_device *dsi);
+
+/*Wrappers to access PMIC with retry*/
+int dsi_soc_pmic_readb(int reg);
+int dsi_soc_pmic_writeb(int reg, u8 val);
+
 #endif /* _INTEL_DSI_H */
diff --git a/drivers/gpu/drm/i915/intel_dsi_panel_vbt.c b/drivers/gpu/drm/i915/intel_dsi_panel_vbt.c
index 09a5202..755ad96 100644
--- a/drivers/gpu/drm/i915/intel_dsi_panel_vbt.c
+++ b/drivers/gpu/drm/i915/intel_dsi_panel_vbt.c
@@ -33,7 +33,6 @@
 #include <linux/i2c.h>
 #include <asm/intel-mid.h>
 #include <video/mipi_display.h>
-#include <linux/mfd/intel_soc_pmic.h>
 #include "i915_drv.h"
 #include "intel_drv.h"
 #include "intel_dsi.h"
@@ -577,20 +576,17 @@ static u8 *mipi_exec_pmic(struct intel_dsi *intel_dsi, u8 *data)
 		data += 4;
 	}
 
-	tmp = intel_soc_pmic_readb(register_address);
-	if (tmp < 0) {
-		DRM_ERROR("PMIC Read failed\n");
+	tmp = dsi_soc_pmic_readb(register_address);
+	if (tmp < 0)
 		return ERR_PTR(tmp);
-	}
 
 	tmp &= ~data_mask;
 	register_data &= data_mask;
 	register_data |= tmp;
-	ret = intel_soc_pmic_writeb(register_address, register_data);
-	if (ret < 0) {
-		DRM_ERROR("PMIC Write failed\n");
+
+	ret = dsi_soc_pmic_writeb(register_address, register_data);
+	if (ret < 0)
 		return ERR_PTR(ret);
-	}
 
 	return data;
 }
@@ -664,6 +660,11 @@ static void generic_exec_sequence(struct intel_dsi *intel_dsi, char *sequence)
 		/* execute the element specific rotines */
 		data = mipi_elem_exec(intel_dsi, data);
 
+		if (IS_ERR(data)) {
+			DRM_ERROR("Need abort exec, data[%p]\n", data);
+			break;
+		}
+
 		/*
 		 * After processing the element, data should point to
 		 * next element or end of sequence
diff --git a/drivers/gpu/drm/i915/intel_panel.c b/drivers/gpu/drm/i915/intel_panel.c
index 6b6b746..d36bb32 100644
--- a/drivers/gpu/drm/i915/intel_panel.c
+++ b/drivers/gpu/drm/i915/intel_panel.c
@@ -505,7 +505,7 @@ static u32 vlv_get_mipi_backlight(struct intel_connector *connector)
 	if (dev_priv->vbt.dsi.config->pmic_soc_blc)
 		return (~lpio_bl_read(0, LPIO_PWM_CTRL)) & 0xff;
 	else
-		return intel_soc_pmic_readb(PMIC_PWM_LEVEL);
+		return dsi_soc_pmic_readb(PMIC_PWM_LEVEL);
 }
 
 static u32 _vlv_get_backlight(struct drm_device *dev, enum pipe pipe)
@@ -636,7 +636,7 @@ static void vlv_set_mipi_backlight(struct intel_connector *connector, u32 level)
 		lpio_bl_write_bits(0, LPIO_PWM_CTRL, (0xff - level), 0xFF);
 		lpio_bl_update(0, LPIO_PWM_CTRL);
 	} else
-		intel_soc_pmic_writeb(PMIC_PWM_LEVEL, level);
+		dsi_soc_pmic_writeb(PMIC_PWM_LEVEL, level);
 }
 
 void
@@ -1423,7 +1423,7 @@ static int vlv_setup_mipi_backlight(struct intel_connector *connector)
 			0x80000000;
 	} else {
 		panel->backlight.enabled =
-			(intel_soc_pmic_readb(PMIC_PWM_EN) & 0x1) &&
+			(dsi_soc_pmic_readb(PMIC_PWM_EN) & 0x1) &&
 			panel->backlight.level != 0;
 	}
 
-- 
1.7.9.5

