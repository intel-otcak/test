From 81290666ec58c24b0d2f6e83ebc8d5d497d33fec Mon Sep 17 00:00:00 2001
From: Venkataramana Kotakonda <venkataramana.kotakonda@intel.com>
Date: Wed, 3 Feb 2016 16:17:55 +0530
Subject: [PATCH 16/24] usb_pd: request enter mode if port partner is ufp_d

Dfp should request enter mode only if the port partner
supports alternate mode in ufp_d.

Change-Id: Idf7ce3a39f2556c21f271ce1ad38cd08d1a14ef5
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-18527
Signed-off-by: Venkataramana Kotakonda <venkataramana.kotakonda@intel.com>
Reviewed-on: https://android.intel.com:443/465991
---
 drivers/usb/typec/pd/vdm_process.c | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/drivers/usb/typec/pd/vdm_process.c b/drivers/usb/typec/pd/vdm_process.c
index 2ece8ac..95d12a6 100644
--- a/drivers/usb/typec/pd/vdm_process.c
+++ b/drivers/usb/typec/pd/vdm_process.c
@@ -44,6 +44,12 @@
 #define DISP_CONFIG_UFPU_AS_UFP_D	2
 #define DISP_CONFIG_RESERVED		3
 
+/* Port partner alt-mode capability  */
+#define ALT_MODE_CAP_RESERVED		0
+#define ALT_MODE_CAP_UFP_D		1
+#define ALT_MODE_CAP_DFP_D		2
+#define ALT_MODE_CAP_BOTH_UFP_DFP_D	3
+
 /* Display port signaling for transport */
 #define DISP_PORT_SIGNAL_UNSPEC		0
 #define DISP_PORT_SIGNAL_DP_1P3		1
@@ -462,6 +468,11 @@ static void pe_process_dp_modes(struct policy_engine *pe,
 	int index_4x = 0;
 
 	for (i = 0; i < dmode_pkt->msg_hdr.num_data_obj - 1; i++) {
+		if (dmode_pkt->mode[i].port_cap != ALT_MODE_CAP_UFP_D &&
+		dmode_pkt->mode[i].port_cap != ALT_MODE_CAP_BOTH_UFP_DFP_D) {
+			log_dbg("Mode[%d] doesn't support UFP_D", i);
+			continue;
+		}
 		if (!index_4x) {
 			if (dmode_pkt->mode[i].ufp_pin
 					& DISP_PORT_PIN_ASSIGN_E
-- 
1.9.1

