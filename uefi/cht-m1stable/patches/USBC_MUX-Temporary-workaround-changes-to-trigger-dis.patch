From bcc1c564014601680f298dd37fb1e93dbf696f35 Mon Sep 17 00:00:00 2001
From: Venkataramana Kotakonda <venkataramana.kotakonda@intel.com>
Date: Thu, 2 Jul 2015 15:03:16 +0530
Subject: [PATCH] USBC_MUX: Temporary workaround changes to trigger display
 hpd.

When display port is connected to typec, based on the configuration
supported by the display, mux should be configured and hpd should
be triggered. This patch will all temporary workaround to trigger
HPD using gpio functions till hpd trigger is handled in BIOS.

Change-Id: I5f5bc05b4a9261c0e4950684a31c22b262962cdb
Signed-off-by: Venkataramana Kotakonda <venkataramana.kotakonda@intel.com>
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-40628
---
 drivers/misc/pi3usb30532_mux.c | 17 +++++++++++++++++
 drivers/misc/pi3usb30532_mux.h |  9 +++++++++
 2 files changed, 26 insertions(+)
 create mode 100644 drivers/misc/pi3usb30532_mux.h

diff --git a/drivers/misc/pi3usb30532_mux.c b/drivers/misc/pi3usb30532_mux.c
index 9353e2510f3f..8b4b1d1bbbb9 100644
--- a/drivers/misc/pi3usb30532_mux.c
+++ b/drivers/misc/pi3usb30532_mux.c
@@ -28,6 +28,7 @@
 #include <linux/usb_typec_phy.h>
 #include <linux/extcon.h>
 #include <linux/acpi.h>
+#include "pi3usb30532_mux.h"
 
 /* I2C control register's offsets */
 #define PI3USB30532_SLAVE_ADDR_REG	0x00
@@ -58,8 +59,18 @@ struct pi3usb30532_mux {
 	struct typec_phy *phy;
 	u8 cur_config;
 	struct extcon_dev *edev;
+	int dp_cbl_state;
 };
 
+static void hpd_trigger(int state)
+{
+	pr_info("%s:HPD state=%d\n", __func__, state);
+	if (!state)
+		chv_gpio_cfg_inv(CHV_HPD_GPIO, CHV_HPD_INV_BIT, 1);
+	else
+		chv_gpio_cfg_inv(CHV_HPD_GPIO, CHV_HPD_INV_BIT, 0);
+}
+
 /* read/write/modify pi3usb30532 register values */
 static inline int pi3usb30532_mux_read_reg(struct i2c_client *client,
 						u8 reg)
@@ -172,6 +183,10 @@ static void pi3usb30532_mux_event_worker(struct work_struct *work)
 	chip->cur_config = conf;
 
 	pi3usb30532_mux_sel_ctrl(chip, conf);
+	if (chip->dp_cbl_state != dp_state) {
+		hpd_trigger(dp_state);
+		chip->dp_cbl_state = dp_state;
+	}
 	mutex_unlock(&chip->event_lock);
 }
 
@@ -261,6 +276,8 @@ static int pi3usb30532_probe(struct i2c_client *client,
 	}
 	/* Get typec edev */
 	chip->edev = extcon_get_extcon_dev("usb-typec");
+	chip->dp_cbl_state = 0;
+	hpd_trigger(chip->dp_cbl_state);
 	schedule_work(&chip->mux_work);
 
 	return 0;
diff --git a/drivers/misc/pi3usb30532_mux.h b/drivers/misc/pi3usb30532_mux.h
new file mode 100644
index 000000000000..7de5e5856841
--- /dev/null
+++ b/drivers/misc/pi3usb30532_mux.h
@@ -0,0 +1,9 @@
+#ifndef __PI3USB_MUX_H__
+#define __PI3USB_MUX_H__
+
+#define CHV_HPD_GPIO	409
+#define CHV_HPD_INV_BIT		(1 << 6)
+
+void chv_gpio_cfg_inv(int gpio, int inv, int en);
+
+#endif
-- 
1.9.1

