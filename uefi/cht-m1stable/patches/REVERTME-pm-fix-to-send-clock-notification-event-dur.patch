From a055ffc229a93fb5421ad9045373a3ad90de7e96 Mon Sep 17 00:00:00 2001
From: Tushar Dave <tushar.n.dave@intel.com>
Date: Fri, 22 May 2015 13:21:57 -0700
Subject: [PATCH] REVERTME: pm: fix to send clock notification event during
 system resume

This patch fixes the  system hang issue which found to be introduced
by https://jira01.devtools.intel.com/browse/AKP-811.

AKP-811 was submitted to fix racing timer in suspend process (GMINL-4192)
However, it was implemented incorrectly and causing hard hang during system
resume, especially when syscore_suspend() fails due to wakeup interrupt
pending.

This patch fixes the hard hang issue by sending correct sequence of
clock notification events during suspend and resume.

Issue: GMINL-8565

Change-Id: I2f727bc2818cef6fd7b6ccc2e264fcd9393579e2
Tracked-On: https://jira01.devtools.intel.com/browse/AKP-2043
NOTE: Keeping REVERTME as original AKP-811 is REVERTME
Signed-off-by: Tushar Dave <tushar.n.dave@intel.com>
---
 kernel/power/suspend.c    | 3 +++
 kernel/time/timekeeping.c | 2 --
 2 files changed, 3 insertions(+), 2 deletions(-)

diff --git a/kernel/power/suspend.c b/kernel/power/suspend.c
index 83a87969f3d7..4ad0fb4c183a 100644
--- a/kernel/power/suspend.c
+++ b/kernel/power/suspend.c
@@ -266,6 +266,9 @@ static int suspend_enter(suspend_state_t state, bool *wakeup)
 	arch_suspend_enable_irqs();
 	BUG_ON(irqs_disabled());
 
+	/* resume notification for quiesce timer, sched_timer etc */
+	clockevents_notify(CLOCK_EVT_NOTIFY_RESUME, NULL);
+
  Enable_cpus:
 	enable_nonboot_cpus();
 	ftrace_start();
diff --git a/kernel/time/timekeeping.c b/kernel/time/timekeeping.c
index a336c0f9b653..5def1d2e946b 100644
--- a/kernel/time/timekeeping.c
+++ b/kernel/time/timekeeping.c
@@ -978,8 +978,6 @@ static void timekeeping_resume(void)
 
 	touch_softlockup_watchdog();
 
-	clockevents_notify(CLOCK_EVT_NOTIFY_RESUME, NULL);
-
 	/* Resume hrtimers */
 	hrtimers_resume();
 }
-- 
1.9.1

