From e3a18ee6d0c77cda3e6d4efdcb53096c7a2a720c Mon Sep 17 00:00:00 2001
From: srinivas <srinivas.pandruvada@linux.intel.com>
Date: Fri, 19 Sep 2014 16:39:11 -0700
Subject: [PATCH] hwmon: coretemp: Fix race condition with cpu

While reading temp if there is cpu offline operation occurs, there
is a potential race condition. Prevent offline operation to
continue by taking reference.

Signed-off-by: srinivas <srinivas.pandruvada@linux.intel.com>
---
 drivers/hwmon/coretemp.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/drivers/hwmon/coretemp.c b/drivers/hwmon/coretemp.c
index d76f0b7..e0c2181 100644
--- a/drivers/hwmon/coretemp.c
+++ b/drivers/hwmon/coretemp.c
@@ -137,7 +137,9 @@ static ssize_t show_crit_alarm(struct device *dev,
 	struct platform_data *pdata = dev_get_drvdata(dev);
 	struct temp_data *tdata = pdata->core_data[attr->index];
 
+	get_online_cpus();
 	rdmsr_on_cpu(tdata->cpu, tdata->status_reg, &eax, &edx);
+	put_online_cpus();
 
 	return sprintf(buf, "%d\n", (eax >> 5) & 1);
 }
@@ -172,7 +174,9 @@ static ssize_t show_temp(struct device *dev,
 
 	/* Check whether the time interval has elapsed */
 	if (!tdata->valid || time_after(jiffies, tdata->last_updated + HZ)) {
+		get_online_cpus();
 		rdmsr_on_cpu(tdata->cpu, tdata->status_reg, &eax, &edx);
+		put_online_cpus();
 		/*
 		 * Ignore the valid bit. In all observed cases the register
 		 * value is either low or zero if the valid bit is 0.
-- 
1.9.1

