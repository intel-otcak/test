From 1b08866b5b1e0f98fa9e406dc4b29e9df76582fb Mon Sep 17 00:00:00 2001
Message-Id: <1b08866b5b1e0f98fa9e406dc4b29e9df76582fb.1427259748.git.chang-joon.lee@intel.com>
From: Akash Goel <akash.goel@intel.com>
Date: Fri, 6 Mar 2015 18:07:46 +0530
Subject: [PATCH 1/2] SQUASHME! [VPG]: drm/i915: Renumber the privately
 defined params & exec flags

To avoid conflict with the new upstreamed params, on forklifts, the privately
defined (not upstreamed) params for GETPARAM ioctl would be numbered from 0x800
This patch renumbers the 2 privately defined params, HAS_DPST & EU_COUNT and
also assigns the MMAP_VERSION param its original number 30.
Similarly to avoid conflict with newly upstreamed execbuffer flags, the private
exec flags will be defined from bit 24. This patch renumbers the 4 private exec
flags WAIT_FENCE, REQUEST_FENCE, ENABLE_WATCHDOG, RESOURCE_STREAMER.

SQUASHME!: The changes in this patch should be squashed into following patches:
	Author: Daisy Sun <daisy.sun@intel.com>
	MUST_REBASE [VPG]: drm/i915 Enable DPST on Haswell
	Change-Id: I24147618fd125abed61b09f140644d5735f2c386

	Author: Jeff McGee <jeff.mcgee@intel.com>
	FOR_UPSTREAM [VPG]: drm/i915/chv: Total EU count via GETPARAM
	Change-Id: I21a313236445ab89202d7b4f00bf938195623214

	Author: Akash Goel <akash.goel@intel.com>
	FROM_UPSTREAM [VPG]: drm/i915: Support creation of unbound wc user mappings for objects
	Change-Id: Ie883942f9e689525f72fe9a8d3780c3a9faa769a

	Author: ian-lister <ian.lister@intel.com>
	REVERTME [VPG]: drm/i915: Watchdog timeout on individual batch buffers
	Change-Id: I3fdff7686c7ffcb344e327fa58c88ab878968d6e

	Author: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
	REVERTME [VPG]: drm/i915: Adding HW Native Sync support
	Change-Id: I95ec32340e19b9e3a011cdab9c03c82c92c9af51

	Author: Minu <minu.mathai@intel.com>
	FOR_UPSTREAM [VPG]: drm/i915: Enabling the resource streamer
	Change-Id: I86263377609dc1b89afa1807ca69f91110fbde28

v2: Updated commit message to replace commit SHA with change-ID (John B)

v3: Removed the use of I915_EXEC_PRIVATE_FLAGS_START in defining the
    non-upstreamed exec flags (Rafael)

Issue: GMINL-6822
Change-Id: I1f8ac46d86a4fac6d9a2753965d7f0fefa7b5ad8
Signed-off-by: Akash Goel <akash.goel@intel.com>
---
 drivers/gpu/drm/i915/i915_gem_execbuffer.c |    2 +-
 include/uapi/drm/i915_drm.h                |   33 +++++++++++++++++++++-------
 2 files changed, 26 insertions(+), 9 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_gem_execbuffer.c b/drivers/gpu/drm/i915/i915_gem_execbuffer.c
index 2e64f05..53b6285 100644
--- a/drivers/gpu/drm/i915/i915_gem_execbuffer.c
+++ b/drivers/gpu/drm/i915/i915_gem_execbuffer.c
@@ -869,7 +869,7 @@ i915_gem_execbuffer_move_to_gpu(struct intel_engine_cs *ring,
 static bool
 i915_gem_check_execbuffer(struct drm_i915_gem_execbuffer2 *exec)
 {
-	if (exec->flags & __I915_EXEC_UNKNOWN_FLAGS)
+	if (exec->flags & I915_EXEC_UNKNOWN_FLAGS)
 		return false;
 
 	return ((exec->batch_start_offset | exec->batch_len) & 0x7) == 0;
diff --git a/include/uapi/drm/i915_drm.h b/include/uapi/drm/i915_drm.h
index c800df3..2499dc9 100644
--- a/include/uapi/drm/i915_drm.h
+++ b/include/uapi/drm/i915_drm.h
@@ -464,9 +464,13 @@ typedef struct drm_i915_irq_wait {
 #define I915_PARAM_HAS_EXEC_HANDLE_LUT   26
 #define I915_PARAM_HAS_WT     	 	 27
 #define I915_PARAM_CMD_PARSER_VERSION	 28
-#define I915_PARAM_HAS_DPST		 29
-#define I915_PARAM_EU_COUNT		 30
-#define I915_PARAM_MMAP_VERSION		 31
+#define I915_PARAM_MMAP_VERSION		 30
+
+/* Private (not upstreamed) parameters start from 0x800
+ * This helps to avoid conflicts with new upstream values
+ */
+#define I915_PARAM_HAS_DPST              0x800
+#define I915_PARAM_EU_COUNT              0x801
 
 typedef struct drm_i915_getparam {
 	int param;
@@ -871,25 +875,38 @@ struct drm_i915_gem_execbuffer2 {
  */
 #define I915_EXEC_HANDLE_LUT		(1<<12)
 
+#define __I915_EXEC_UNKNOWN_FLAGS -(I915_EXEC_HANDLE_LUT<<1)
+
+/** Private (not upstreamed) exec flags start from 24
+ * this helps to avoid conflict with new upstream values
+ */
+#define I915_EXEC_PRIVATE_FLAGS_START	(1<<24)
+
 /** Caller supplies a sync fence fd in the rsvd2 field.
  * Wait for it to be signalled before starting the work
  */
-#define I915_EXEC_WAIT_FENCE		(1<<13)
+#define I915_EXEC_WAIT_FENCE		(1<<24)
 
 /** Caller wants a sync fence fd for this execbuffer.
  *  It will be returned in rsvd2
  */
-#define I915_EXEC_REQUEST_FENCE         (1<<14)
+#define I915_EXEC_REQUEST_FENCE		(1<<25)
 
 /* Enable watchdog timer for this batch buffer */
-#define I915_EXEC_ENABLE_WATCHDOG       (1<<15)
+#define I915_EXEC_ENABLE_WATCHDOG	(1<<26)
 
 /** Tell the kernel that the batchbuffer is processed by
  *  the resource streamer.
  */
-#define I915_EXEC_RESOURCE_STREAMER     (1<<16)
+#define I915_EXEC_RESOURCE_STREAMER	(1<<27)
+
+#define I915_EXEC_PRIVATE_FLAGS_END	(1<<28)
+
+#define __I915_EXEC_PRIVATE_FLAGS_MASK \
+	((-I915_EXEC_PRIVATE_FLAGS_START) & ~(-I915_EXEC_PRIVATE_FLAGS_END))
 
-#define __I915_EXEC_UNKNOWN_FLAGS -(I915_EXEC_RESOURCE_STREAMER << 1)
+#define I915_EXEC_UNKNOWN_FLAGS \
+	(__I915_EXEC_UNKNOWN_FLAGS & ~__I915_EXEC_PRIVATE_FLAGS_MASK)
 
 #define I915_EXEC_CONTEXT_ID_MASK	(0xffffffff)
 #define i915_execbuffer2_set_context_id(eb2, context) \
-- 
1.7.9.5

