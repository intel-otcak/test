From 41d3af27cb441ffc7a0e865c09f7c4f8add7ba84 Mon Sep 17 00:00:00 2001
From: Aviv Greenberg <aviv.d.greenberg@intel.com>
Date: Fri, 13 Nov 2015 16:39:52 -0800
Subject: [PATCH 2/7] UVC: Append SR300 UVC header to image data

The Intel sr300 depth camera provides per-frame metadata inside the UVC
header. The default UVC driver behavior is to examine the header and
discard it (along with any vendor specific fields).

The patch:
1) Adds a new quirk flag - if enabled for a device, the complete UVC header
   will get appended at the end of the user image buffer.
2) Enable this new quirk flag for Intel sr300 camera.

Change-Id: If5cb94dd3df5053423d96044e7956ca2a62c2780
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-10895
Signed-off-by: Aviv D Greenberg <aviv.d.greenberg@intel.com>
Reviewed-on: https://android.intel.com:443/443706
---
 drivers/media/usb/uvc/uvc_driver.c | 9 +++++++++
 drivers/media/usb/uvc/uvc_video.c  | 6 +++++-
 drivers/media/usb/uvc/uvcvideo.h   | 1 +
 3 files changed, 15 insertions(+), 1 deletion(-)

diff --git a/drivers/media/usb/uvc/uvc_driver.c b/drivers/media/usb/uvc/uvc_driver.c
index 5d76a19..7dbe287 100644
--- a/drivers/media/usb/uvc/uvc_driver.c
+++ b/drivers/media/usb/uvc/uvc_driver.c
@@ -2519,6 +2519,15 @@ static struct usb_device_id uvc_ids[] = {
 	  .bInterfaceSubClass	= 1,
 	  .bInterfaceProtocol	= 0,
 	  .driver_info		= UVC_QUIRK_ALT_JPEG_PAYLOAD },
+	/* Intel SR300 depth camera */
+	{ .match_flags		= USB_DEVICE_ID_MATCH_DEVICE
+				| USB_DEVICE_ID_MATCH_INT_INFO,
+	  .idVendor		= 0x8086,
+	  .idProduct		= 0x0aa5,
+	  .bInterfaceClass	= USB_CLASS_VIDEO,
+	  .bInterfaceSubClass	= 1,
+	  .bInterfaceProtocol	= 0,
+	  .driver_info		= UVC_QUIRK_APPEND_UVC_HEADER },
 	/* Generic USB Video Class */
 	{ USB_INTERFACE_INFO(USB_CLASS_VIDEO, 1, 0) },
 	{}
diff --git a/drivers/media/usb/uvc/uvc_video.c b/drivers/media/usb/uvc/uvc_video.c
index de5f4e8..4f1cf6f 100644
--- a/drivers/media/usb/uvc/uvc_video.c
+++ b/drivers/media/usb/uvc/uvc_video.c
@@ -1275,9 +1275,13 @@ static void uvc_video_decode_bulk(struct urb *urb, struct uvc_streaming *stream,
 						     stream->bulk.header,
 						     stream->bulk.payload_size);
 			}
-			if (buf->state == UVC_BUF_STATE_READY)
+			if (buf->state == UVC_BUF_STATE_READY) {
+				if (stream->dev->quirks & UVC_QUIRK_APPEND_UVC_HEADER)
+						uvc_video_decode_data(stream, buf, stream->bulk.header,
+									   stream->bulk.header_size);
 				buf = uvc_queue_next_buffer(&stream->queue,
 							    buf);
+			}
 		}
 
 		stream->bulk.header_size = 0;
diff --git a/drivers/media/usb/uvc/uvcvideo.h b/drivers/media/usb/uvc/uvcvideo.h
index 607e4c5..8c2780f 100644
--- a/drivers/media/usb/uvc/uvcvideo.h
+++ b/drivers/media/usb/uvc/uvcvideo.h
@@ -159,6 +159,7 @@
 #define UVC_QUIRK_PROBE_DEF		0x00000100
 #define UVC_QUIRK_RESTRICT_FRAME_RATE	0x00000200
 #define UVC_QUIRK_ALT_JPEG_PAYLOAD	0x00000400
+#define UVC_QUIRK_APPEND_UVC_HEADER	0x00000800
 
 /* Format flags */
 #define UVC_FMT_FLAG_COMPRESSED		0x00000001
-- 
1.9.1

