From 90bca80fa83423bf18b73b2f828e79bf41c8ad89 Mon Sep 17 00:00:00 2001
From: "Sodhi, VunnyX" <vunnyx.sodhi@intel.com>
Date: Mon, 8 Jun 2015 18:44:46 +0530
Subject: [PATCH] ASoC: Intel: [workaround] Audio jack is not detected during
 S3 state

Issue: GMINL-11091

I2C driver resume is taking long time to resume, when system is woken
up by some wake-up source. Audio driver wake-up source (jack interrupt)
interrupt handler is trying to access codec registers via I2C, but it
fails due to above mentioned latency in I2C driver resume.

So as a workaround we need to retry I2C access in interrupt handler till I2C
access is successful i.e I2C driver has been resumed now. For retry we have
added retry count to avoid any deadlock situation.

Change-Id: I130cdc0e672d9515c0dfc088e66abdfed84b25cd
Signed-off-by: Sodhi, VunnyX <vunnyx.sodhi@intel.com>
---
 sound/soc/intel/board/cht_cr_aic3100.c | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/sound/soc/intel/board/cht_cr_aic3100.c b/sound/soc/intel/board/cht_cr_aic3100.c
index e9d416a6d6ae..d730d6bcfc64 100644
--- a/sound/soc/intel/board/cht_cr_aic3100.c
+++ b/sound/soc/intel/board/cht_cr_aic3100.c
@@ -38,6 +38,7 @@
 #include <sound/soc.h>
 #include <sound/jack.h>
 #include "../../codecs/tlv320aic31xx.h"
+#include <linux/delay.h>
 
 #define CHT_PLAT_CLK_3_HZ	25000000
 
@@ -169,6 +170,7 @@ static int cht_hs_detection(void *data)
 {
 	int status, jack_type = 0;
 	int ret, val, instantaneous;
+	int max_retry_count = 5;
 	struct snd_soc_jack_gpio *gpio = &hs_gpio;
 	struct snd_soc_jack *jack = gpio->jack;
 	struct snd_soc_codec *codec = jack->codec;
@@ -177,6 +179,15 @@ static int cht_hs_detection(void *data)
 
 	/* Ack interrupt first */
 	val = snd_soc_read(codec, AIC31XX_INTRDACFLAG);
+	while (val == -1) {
+		mdelay(10);
+		max_retry_count--;
+		if (max_retry_count < 0) {
+			pr_err("%s: failed to read codec register", __func__);
+			return -1;
+		}
+		val = snd_soc_read(codec, AIC31XX_INTRDACFLAG);
+	}
 	instantaneous = snd_soc_read(codec, AIC31XX_INTRFLAG);
 
 	mutex_lock(&ctx->jack_mlock);
-- 
1.9.1

