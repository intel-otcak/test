From d6c4617960fc78fbe5de7be672832ae750729524 Mon Sep 17 00:00:00 2001
Message-Id: <d6c4617960fc78fbe5de7be672832ae750729524.1423872525.git.feitong.yi@intel.com>
In-Reply-To: <3062c7e6b919c393846ff0e13558e7f648b352ca.1423872525.git.feitong.yi@intel.com>
References: <3062c7e6b919c393846ff0e13558e7f648b352ca.1423872525.git.feitong.yi@intel.com>
From: Deepak S <deepak.s@intel.com>
Date: Sat, 31 Jan 2015 08:44:52 -0500
Subject: [PATCH 85/95] MUST_REBASE [VPG]: video/adf/intel: Cover modeset/dpms
 with runtime get/put

On chv ADF, we support dual display means we can get dpms on/off call
for individual display. As part of d0ix we need to take care of not
powering off both display when we get dpms off for one. This patch
addressing this issue by covering modeset dpms with proper get/put

MUST_REBASE: Since Google ADF framework is not in upstream and also
we cannot have two display drivers, other one being i915, we need
to work on i915 and ADF convergence path before it can be
upstreamed

Issue: GMINL-5501
Change-Id: I926ba7dcb9dc4a1bf5370ea2437bccecc9309664
Signed-off-by: Deepak S <deepak.s@intel.com>
---
 .../video/adf/intel/core/common/dp/gen_dp_pipe.c   |    5 ++++-
 .../video/adf/intel/core/common/dsi/gen_dsi_pipe.c |    3 +++
 .../adf/intel/core/common/hdmi/gen_hdmi_pipe_ops.c |    3 +++
 3 files changed, 10 insertions(+), 1 deletion(-)

diff --git a/drivers/video/adf/intel/core/common/dp/gen_dp_pipe.c b/drivers/video/adf/intel/core/common/dp/gen_dp_pipe.c
index 4d2bf8c..9e3d808 100644
--- a/drivers/video/adf/intel/core/common/dp/gen_dp_pipe.c
+++ b/drivers/video/adf/intel/core/common/dp/gen_dp_pipe.c
@@ -172,6 +172,9 @@ static int dp_pipe_modeset(struct intel_pipe *pipe,
 
 	pr_err("%s:FIXME: get bpp from edid\n", __func__);
 	bpp = 24;
+
+	/* Avoiding i915 enter into DPMS */
+	intel_adf_display_rpm_get();
 	dp_pipe_dump_modes(mode, 1);
 	vlv_dp_backlight_seq(pipeline, false);
 
@@ -254,9 +257,9 @@ static int dp_pipe_dpms(struct intel_pipe *pipe, u8 state)
 		vlv_dp_backlight_seq(pipeline, false);
 		vlv_dp_panel_power_seq(pipeline, false);
 		err = vlv_pipeline_off(pipeline);
+		intel_adf_display_rpm_put();
 		if (err != 0)
 			goto dpms_exit;
-		intel_adf_display_rpm_put();
 		break;
 	case DRM_MODE_DPMS_STANDBY:
 	case DRM_MODE_DPMS_SUSPEND:
diff --git a/drivers/video/adf/intel/core/common/dsi/gen_dsi_pipe.c b/drivers/video/adf/intel/core/common/dsi/gen_dsi_pipe.c
index 753d67c..dbecc71 100644
--- a/drivers/video/adf/intel/core/common/dsi/gen_dsi_pipe.c
+++ b/drivers/video/adf/intel/core/common/dsi/gen_dsi_pipe.c
@@ -383,6 +383,9 @@ static int dsi_modeset(struct intel_pipe *pipe,
 	}
 
 	mutex_lock(&config->ctx_lock);
+
+	/* Avoiding i915 enter into DPMS */
+	intel_adf_display_rpm_get();
 	dsi_display_off(pipe);
 	dsi_display_on(pipe, mode);
 	mutex_unlock(&config->ctx_lock);
diff --git a/drivers/video/adf/intel/core/common/hdmi/gen_hdmi_pipe_ops.c b/drivers/video/adf/intel/core/common/hdmi/gen_hdmi_pipe_ops.c
index 46b41c4..cba543c 100644
--- a/drivers/video/adf/intel/core/common/hdmi/gen_hdmi_pipe_ops.c
+++ b/drivers/video/adf/intel/core/common/hdmi/gen_hdmi_pipe_ops.c
@@ -281,6 +281,9 @@ static int hdmi_modeset(struct intel_pipe *pipe,
 
 	mutex_lock(&config->ctx_lock);
 
+	/* Avoiding i915 enter into DPMS */
+	intel_adf_display_rpm_get();
+
 	curr_mode = config->ctx.current_mode;
 	err = chv_pipeline_off(pipeline);
 	if (err) {
-- 
1.7.9.5

