From ed9d2fd32f8b1104ae7034d9f15d9d32c2d1692d Mon Sep 17 00:00:00 2001
From: "Mirche,Dinesh" <dinesh.mirche@intel.com>
Date: Fri, 11 Sep 2015 21:16:44 +0530
Subject: [PATCH] ASoC: Intel: sst: Workaround patch for LPE recovery

This workaround is for some case where LPE could not recover, which
leads to audio loss. Need to reboot the device.

Change-Id: I5cf47a232cb148a0af07a5c825a874ab918f10fc
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-9987
Signed-off-by: Mirche,Dinesh <dinesh.mirche@intel.com>
Reviewed-on: https://android.intel.com:443/410162
Reviewed-on: https://android.intel.com:443/433827
---
 sound/soc/intel/sst/sst.c | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/sound/soc/intel/sst/sst.c b/sound/soc/intel/sst/sst.c
index 2b4340b..a8e3a2b 100644
--- a/sound/soc/intel/sst/sst.c
+++ b/sound/soc/intel/sst/sst.c
@@ -1304,9 +1304,6 @@ static int intel_sst_suspend(struct device *dev)
 	struct sst_platform_cb_params cb_params;
 
 	pr_debug("Enter: %s\n", __func__);
-	mutex_lock(&ctx->sst_lock);
-	sst_drv_ctx->sst_suspend_state = true;
-	mutex_unlock(&ctx->sst_lock);
 
 	if (ctx->sst_state == SST_RESET) {
 		pr_debug("LPE is already in RESET state, No action");
@@ -1315,9 +1312,14 @@ static int intel_sst_suspend(struct device *dev)
 
 	usage_count = atomic_read(&ctx->pm_usage_count);
 	if (usage_count) {
-		pr_warn("sst usage count is: %d; But go ahead suspending\n", usage_count);
+		pr_warn("sst usage count is: %d; Ret error for suspend\n", usage_count);
+		return -EBUSY;
 	}
 
+	mutex_lock(&ctx->sst_lock);
+	sst_drv_ctx->sst_suspend_state = true;
+	mutex_unlock(&ctx->sst_lock);
+
 	if (ctx->pdata->start_recovery_timer)
 		sst_set_timer(&ctx->monitor_lpe, false);
 
-- 
1.9.1

