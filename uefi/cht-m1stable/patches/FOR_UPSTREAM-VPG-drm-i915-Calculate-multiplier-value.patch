From 237fb08f8e106a7cfb00fb37de3bbaea27e1e2c2 Mon Sep 17 00:00:00 2001
From: "Thulasimani,Sivakumar" <sivakumar.thulasimani@intel.com>
Date: Tue, 15 Sep 2015 20:15:27 +0530
Subject: [PATCH] FOR_UPSTREAM [VPG]: drm/i915: Calculate multiplier value for
 DP panels

Multiplier values are calculated based on the link rate used for DP
panel. This patch adds this capability so we can use the correct value
for clock programming.

v2: use #defines for magic numbers

Change-Id: Iefee3bac93025f7c1676537c439c268161d887ba
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-5971
Signed-off-by: Sivakumar Thulasimani <sivakumar.thulasimani@intel.com>
---
 drivers/gpu/drm/i915/intel_display.c |  3 +++
 drivers/gpu/drm/i915/intel_dp.c      | 27 +++++++++++++++++++++++++--
 drivers/gpu/drm/i915/intel_drv.h     |  3 +++
 3 files changed, 31 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index 0c9bcb0..5d818a1 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -15058,6 +15058,9 @@ start_link_train:
 		crtc->config.port_clock =
 				drm_dp_bw_code_to_link_rate(intel_dp->link_bw);
 
+		crtc->config.pixel_multiplier = intel_dp_calc_multiplier(
+						encoder, intel_dp->link_bw);
+
 		/* Enable PLL followed by port */
 		intel_dp_set_clock(encoder, &crtc->config, intel_dp->link_bw);
 		chv_update_pll(crtc);
diff --git a/drivers/gpu/drm/i915/intel_dp.c b/drivers/gpu/drm/i915/intel_dp.c
index 7447bc0..642659a 100644
--- a/drivers/gpu/drm/i915/intel_dp.c
+++ b/drivers/gpu/drm/i915/intel_dp.c
@@ -942,6 +942,27 @@ intel_dp_set_m2_n2(struct intel_crtc *crtc, struct intel_link_m_n *m_n)
 	I915_WRITE(PIPE_LINK_N2(transcoder), m_n->link_n);
 }
 
+uint8_t intel_dp_calc_multiplier(struct intel_encoder *encoder,
+			u32 link_rate)
+{
+	struct drm_device *dev = encoder->base.dev;
+	uint8_t multiplier = 1;
+
+	if (!IS_VALLEYVIEW(dev))
+		return multiplier;
+
+	/*
+	 * CHV/VLV supports only HBR and LBR,
+	 * so use precalculated values
+	 */
+	if (link_rate == DP_LINK_BW_2_7)
+		multiplier = 4;
+	else if (link_rate != DP_LINK_BW_1_62)
+		DRM_ERROR("Invalid link rate used\n");
+
+	return multiplier;
+}
+
 bool
 intel_dp_compute_config(struct intel_encoder *encoder,
 			struct intel_crtc_config *pipe_config)
@@ -1054,12 +1075,14 @@ found:
 	intel_dp->lane_count = lane_count;
 	pipe_config->pipe_bpp = bpp;
 	pipe_config->port_clock = drm_dp_bw_code_to_link_rate(intel_dp->link_bw);
+	pipe_config->pixel_multiplier =
+			intel_dp_calc_multiplier(encoder, bws[clock]);
 
 	DRM_DEBUG_KMS("DP link bw %02x lane count %d clock %d bpp %d\n",
 		      intel_dp->link_bw, intel_dp->lane_count,
 		      pipe_config->port_clock, bpp);
-	DRM_DEBUG_KMS("DP link bw required %i available %i\n",
-		      mode_rate, link_avail);
+	DRM_DEBUG_KMS("DP link bw required %i available %i and multiplier %d\n",
+		      mode_rate, link_avail, pipe_config->pixel_multiplier);
 
 	intel_link_compute_m_n(bpp, lane_count,
 			       adjusted_mode->crtc_clock,
diff --git a/drivers/gpu/drm/i915/intel_drv.h b/drivers/gpu/drm/i915/intel_drv.h
index a2dbde5..b06ff38 100644
--- a/drivers/gpu/drm/i915/intel_drv.h
+++ b/drivers/gpu/drm/i915/intel_drv.h
@@ -1010,6 +1010,9 @@ bool intel_dp_compute_config(struct intel_encoder *encoder,
 bool intel_dp_is_edp(struct drm_device *dev, enum port port);
 bool intel_dp_hpd_pulse(struct intel_digital_port *intel_dig_port,
 			bool long_hpd);
+uint8_t intel_dp_calc_multiplier(struct intel_encoder *encoder,
+			u32 pixel_clock);
+
 void intel_edp_backlight_on(struct intel_dp *intel_dp);
 void intel_edp_backlight_off(struct intel_dp *intel_dp);
 void intel_edp_panel_vdd_on(struct intel_dp *intel_dp);
-- 
1.9.1

