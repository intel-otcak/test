From ef639f6a88d43837e03b17adf3ccb7ab23830c24 Mon Sep 17 00:00:00 2001
From: "Marco A. Salgado Mtz" <marco.antonio.salgado.martinez@intel.com>
Date: Mon, 4 Apr 2016 10:00:10 -0500
Subject: [PATCH 1/5] Reduce the init_call footprint

Adds a define to conditionally enable some debug prints
that causes ovehead in the init_call of the camera module

Change-Id: I7e6ea6de91af451612c24509292944f00a9fe3e2
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-26088
Signed-off-by: Marco A Salgado <marco.antonio.salgado.martinez@intel.com>
Reviewed-on: https://android.intel.com:443/490283
---
 arch/x86/platform/intel-mid/atomisp_gmin_platform.c     |  3 +++
 .../external_drivers/camera/drivers/media/i2c/ov8858.c  | 17 ++++++++++++++---
 .../external_drivers/camera/drivers/media/i2c/ov8858.h  |  2 ++
 3 files changed, 19 insertions(+), 3 deletions(-)

diff --git a/arch/x86/platform/intel-mid/atomisp_gmin_platform.c b/arch/x86/platform/intel-mid/atomisp_gmin_platform.c
index ba504f7..3e57ec2 100644
--- a/arch/x86/platform/intel-mid/atomisp_gmin_platform.c
+++ b/arch/x86/platform/intel-mid/atomisp_gmin_platform.c
@@ -17,6 +17,7 @@
 #include <asm/spid.h>
 
 #define MAX_SUBDEVS 8
+//#define DEBUG
 
 /* This needs to be initialized at runtime so the various
  * platform-checking macros in spid.h return the correct results.
@@ -889,8 +890,10 @@ int gmin_get_config_var(struct device *dev, const char *var, char *out, size_t *
 	kfree(ev);
 	*out_len = efilen;
 
+#ifdef DEBUG
 	if (ret)
  		dev_warn(dev, "Failed to find gmin variable %s\n", var8);
+#endif
 
 	return ret;
 }
diff --git a/drivers/external_drivers/camera/drivers/media/i2c/ov8858.c b/drivers/external_drivers/camera/drivers/media/i2c/ov8858.c
index 6c1dd2c..18e40b5 100644
--- a/drivers/external_drivers/camera/drivers/media/i2c/ov8858.c
+++ b/drivers/external_drivers/camera/drivers/media/i2c/ov8858.c
@@ -82,9 +82,10 @@ static int ov8858_read_reg(struct i2c_client *client, u16 type, u16 reg,
 {
 	u8 data[OV8858_SHORT_MAX];
 	int err;
-
+#ifdef DEBUG
 	dev_dbg(&client->dev, "%s: type = %d, reg = 0x%04x\n",
 		__func__, type, reg);
+#endif
 
 	/* read only 8 and 16 bit values */
 	if (type != OV8858_8BIT && type != OV8858_16BIT) {
@@ -622,6 +623,7 @@ static int __ov8858_init(struct v4l2_subdev *sd)
 	struct i2c_client *client = v4l2_get_subdevdata(sd);
 	struct ov8858_device *dev = to_ov8858_sensor(sd);
 	int ret;
+
 	dev_dbg(&client->dev, "%s\n", __func__);
 
 #ifndef CONFIG_GMIN_INTEL_MID
@@ -644,8 +646,11 @@ static int __ov8858_init(struct v4l2_subdev *sd)
 		ov8858_BasicSettings[3].val = 0x50; /* pll1_multiplier = 80 */
 	}
 #endif
+
+#ifdef DEBUG
 	dev_dbg(&client->dev, "%s: Writing basic settings to ov8858\n",
 		__func__);
+#endif
 	ret = ov8858_write_reg_array(client, ov8858_BasicSettings);
 	if (ret)
 		return ret;
@@ -1524,21 +1529,27 @@ static int ov8858_detect(struct i2c_client *client, u16 *id)
 	/* i2c check */
 	if (!i2c_check_functionality(adapter, I2C_FUNC_I2C))
 		return -ENODEV;
-
+#ifdef DEBUG
 	dev_dbg(&client->dev, "%s: I2C functionality ok\n", __func__);
+#endif
 	ret = ov8858_read_reg(client, OV8858_8BIT, OV8858_CHIP_ID_HIGH, &id_hi);
 	if (ret)
 		return ret;
+#ifdef DEBUG
 	dev_dbg(&client->dev, "%s: id_high = 0x%04x\n", __func__, id_hi);
+#endif
 	ret = ov8858_read_reg(client, OV8858_8BIT, OV8858_CHIP_ID_LOW, &id_low);
 	if (ret)
 		return ret;
+#ifdef DEBUG
 	dev_dbg(&client->dev, "%s: id_low = 0x%04x\n", __func__, id_low);
+#endif
 	*id = (id_hi << 8) | id_low;
-
+#ifdef DEBUG
 	dev_dbg(&client->dev, "%s: chip_id = 0x%04x\n", __func__, *id);
 
 	dev_info(&client->dev, "%s: chip_id = 0x%04x\n", __func__, *id);
+#endif
 	if (*id != OV8858_CHIP_ID)
 		return -ENODEV;
 
diff --git a/drivers/external_drivers/camera/drivers/media/i2c/ov8858.h b/drivers/external_drivers/camera/drivers/media/i2c/ov8858.h
index 2d84b8a..4345754 100644
--- a/drivers/external_drivers/camera/drivers/media/i2c/ov8858.h
+++ b/drivers/external_drivers/camera/drivers/media/i2c/ov8858.h
@@ -19,6 +19,8 @@
  *
  */
 
+
+//#define DEBUG
 #ifndef __OV8858_H__
 #define __OV8858_H__
 #include <linux/atomisp_platform.h>
-- 
1.9.1

