From 6944502b57a337783e1e6c9e9ada50dfda5e14ea Mon Sep 17 00:00:00 2001
Message-Id: <6944502b57a337783e1e6c9e9ada50dfda5e14ea.1421897934.git.chang-joon.lee@intel.com>
In-Reply-To: <149a6863e085e113eb3c4f75ec994895411447d6.1421897934.git.chang-joon.lee@intel.com>
References: <149a6863e085e113eb3c4f75ec994895411447d6.1421897934.git.chang-joon.lee@intel.com>
From: Arun R Murthy <arun.r.murthy@intel.com>
Date: Mon, 1 Dec 2014 15:11:50 +0530
Subject: [PATCH 2/7] MUST_REBASE [VPG]: adf/intel/vlv: correct maxfifo exit
 condition

Maxfifo to be exited when there is a change in the plane control
register. This is done by checking the current plane control reg
value with the previous plane control reg. while doing so this
was done even before updating the present plane control reg with
the linear/tile memory by mistake. Correcting that in this patch.

We should check for if we are close to vblank on pre_post by
mistake the this code was added in on_post, correcting the same.

MUST_REBASE: Since Google ADF framework is not in upstream and also
we cannot have two display drivers, other one being i915, we need to
work on i915 and ADF convergence path before it can be upstreamed.

For: GMINL-4646
Change-Id: I7a6079a2116a51a9a04318a3661e93e08e61109a
Signed-off-by: Arun R Murthy <arun.r.murthy@intel.com>
---
 .../video/adf/intel/core/common/dsi/gen_dsi_pipe.c |    2 +-
 drivers/video/adf/intel/core/vlv/vlv_sp_plane.c    |   22 +++++++++++---------
 2 files changed, 13 insertions(+), 11 deletions(-)

diff --git a/drivers/video/adf/intel/core/common/dsi/gen_dsi_pipe.c b/drivers/video/adf/intel/core/common/dsi/gen_dsi_pipe.c
index 01ef1e4..063cc7b 100644
--- a/drivers/video/adf/intel/core/common/dsi/gen_dsi_pipe.c
+++ b/drivers/video/adf/intel/core/common/dsi/gen_dsi_pipe.c
@@ -278,7 +278,6 @@ static void dsi_on_post(struct intel_pipe *pipe)
 	}
 	if (dsi_pipe->ops.on_post)
 		dsi_pipe->ops.on_post(dsi_pipe);
-	intel_pipe_vblank_evade(pipe);
 }
 
 static void dsi_pre_validate(struct intel_pipe *pipe,
@@ -304,6 +303,7 @@ static void dsi_pre_post(struct intel_pipe *pipe)
 	}
 	if (dsi_pipe->ops.pre_post)
 		dsi_pipe->ops.pre_post(dsi_pipe);
+	intel_pipe_vblank_evade(pipe);
 }
 
 static u32 dsi_get_supported_events(struct intel_pipe *pipe)
diff --git a/drivers/video/adf/intel/core/vlv/vlv_sp_plane.c b/drivers/video/adf/intel/core/vlv/vlv_sp_plane.c
index faff3a4..556757f 100644
--- a/drivers/video/adf/intel/core/vlv/vlv_sp_plane.c
+++ b/drivers/video/adf/intel/core/vlv/vlv_sp_plane.c
@@ -350,16 +350,6 @@ static int vlv_sp_calculate(struct intel_plane *planeptr,
 
 	sprctl |= SP_ENABLE;
 	regs->dspcntr = sprctl;
-	/* when in maxfifo display control register cannot be modified */
-	if (intel_pipe->status.maxfifo_enabled &&
-					regs->dspcntr != prev_sprctl) {
-		REG_WRITE(FW_BLC_SELF_VLV, ~FW_CSPWRDWNEN);
-		intel_pipe->status.maxfifo_enabled = false;
-		intel_pipe->status.wait_vblank = true;
-		intel_pipe->status.vsync_counter =
-				intel_pipe->ops->get_vsync_counter(intel_pipe,
-								   0);
-	}
 	linear_offset = src_y * buf->stride + src_x * bpp;
 	sprsurf_offset = vlv_compute_page_offset(&src_x, &src_y,
 			buf->tiling_mode, bpp, buf->stride);
@@ -390,6 +380,18 @@ static int vlv_sp_calculate(struct intel_plane *planeptr,
 			regs->linearoff = linear_offset;
 		}
 	}
+
+	/* when in maxfifo display control register cannot be modified */
+	if (intel_pipe->status.maxfifo_enabled &&
+					regs->dspcntr != prev_sprctl) {
+		REG_WRITE(FW_BLC_SELF_VLV, ~FW_CSPWRDWNEN);
+		intel_pipe->status.maxfifo_enabled = false;
+		intel_pipe->status.wait_vblank = true;
+		intel_pipe->status.vsync_counter =
+				intel_pipe->ops->get_vsync_counter(intel_pipe,
+								   0);
+	}
+
 	return 0;
 }
 
-- 
1.7.9.5

