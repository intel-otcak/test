From 3456d6b74d348be214fda343a562ef2ecdc49772 Mon Sep 17 00:00:00 2001
From: Rapaka Naveen <naveen.rapaka@intel.com>
Date: Tue, 14 Apr 2015 02:24:13 +0530
Subject: [PATCH] EM/Charger: Disable battery charging in S3 and enable in S0
 for power saving

In S3 state the CHGDIS pin output is disabled by setting CHGDIS pin
pulled HIGH and disabled. Upon device wake up to S0 CHGDIS Function
is enabled. This provides power saving in S3 state.

Change-Id: I67e2b4081b0d7bab55eeded4920d2f88296baf05
Tracked-On: https://jira01.devtools.intel.com/browse/AKP-1391
Signed-off-by: Rapaka Naveen <naveen.rapaka@intel.com>
---
 drivers/mfd/intel_soc_pmic_wc.c          |  1 +
 drivers/power/intel_pmic_ccsm.c          | 34 ++++++++++++++++++++++++++++++++
 drivers/power/intel_pmic_ccsm.h          |  4 ++++
 include/linux/mfd/intel_soc_pmic_wcove.h |  1 +
 include/linux/power/intel_pmic_ccsm.h    |  1 +
 5 files changed, 41 insertions(+)

diff --git a/drivers/mfd/intel_soc_pmic_wc.c b/drivers/mfd/intel_soc_pmic_wc.c
index e91dda4..2d1387c 100644
--- a/drivers/mfd/intel_soc_pmic_wc.c
+++ b/drivers/mfd/intel_soc_pmic_wc.c
@@ -177,6 +177,7 @@ static struct pmic_regs pmic_wcove_regmap = {
 	.pmic_mchgrirq1 = WC_MPWRSRC_ADDR,
 	.pmic_chgrctrl0 = WC_CHGRCTRL0_ADDR,
 	.pmic_chgrctrl1 = WC_CHGRCTRL1_ADDR,
+	.pmic_chgdisctrl = WC_CHGDISCTRL_ADDR,
 	.pmic_lowbattdet0 = WC_LOWBATTDET0_ADDR,
 	.pmic_lowbattdet1 = WC_LOWBATTDET1_ADDR,
 	.pmic_battdetctrl = WC_BATTDETCTRL_ADDR,
diff --git a/drivers/power/intel_pmic_ccsm.c b/drivers/power/intel_pmic_ccsm.c
index ae52e00..e623a01 100644
--- a/drivers/power/intel_pmic_ccsm.c
+++ b/drivers/power/intel_pmic_ccsm.c
@@ -417,6 +417,39 @@ static const struct file_operations pmic_chrgr_reg_fops = {
 	.release = single_release
 };
 
+static int pmic_ccsm_suspend(struct device *dev)
+{
+	int ret;
+
+	/* Disable CHGDIS pin */
+	ret = intel_soc_pmic_update(chc.reg_map->pmic_chgdisctrl,
+			CHGDISFN_DIS_CCSM_VAL, CHGDISFN_CCSM_MASK);
+	if (ret)
+		dev_warn(chc.dev, "Error writing to register: %x\n",
+			chc.reg_map->pmic_chgdisctrl);
+
+	return ret;
+}
+
+static int pmic_ccsm_resume(struct device *dev)
+{
+	int ret;
+
+	/* Enable CHGDIS pin */
+	ret = intel_soc_pmic_update(chc.reg_map->pmic_chgdisctrl,
+			CHGDISFN_EN_CCSM_VAL, CHGDISFN_CCSM_MASK);
+	if (ret)
+		dev_warn(chc.dev, "Error writing to register: %x\n",
+			chc.reg_map->pmic_chgdisctrl);
+
+	return ret;
+}
+
+const struct dev_pm_ops pmic_ccsm_pm = {
+	.suspend_late = pmic_ccsm_suspend,
+	.resume_early = pmic_ccsm_resume,
+};
+
 static const struct file_operations pmic_chrgr_tt_reg_fops = {
 	.open = pmic_chrgr_tt_reg_open,
 	.read = seq_read,
@@ -1804,6 +1837,7 @@ static struct platform_driver intel_pmic_ccsm_driver = {
 	.driver = {
 		   .name = DRIVER_NAME,
 		   .owner = THIS_MODULE,
+		   .pm = &pmic_ccsm_pm,
 		   },
 	.probe = pmic_chrgr_probe,
 	.remove = pmic_chrgr_remove,
diff --git a/drivers/power/intel_pmic_ccsm.h b/drivers/power/intel_pmic_ccsm.h
index dd0707e..193428e 100644
--- a/drivers/power/intel_pmic_ccsm.h
+++ b/drivers/power/intel_pmic_ccsm.h
@@ -243,6 +243,10 @@
 #define MPWRSRCIRQ_CCSM_MASK		0x9F
 #define MPWRSRCIRQ_CCSM_VAL		0x84
 
+#define CHGDISFN_EN_CCSM_VAL		0x50
+#define CHGDISFN_DIS_CCSM_VAL		0x11
+#define CHGDISFN_CCSM_MASK		0x51
+
 /*Interrupt registers*/
 #define BATT_CHR_BATTDET_MASK	(1 << 2)
 /*Status registers*/
diff --git a/include/linux/mfd/intel_soc_pmic_wcove.h b/include/linux/mfd/intel_soc_pmic_wcove.h
index 2046238..2c28ae9 100644
--- a/include/linux/mfd/intel_soc_pmic_wcove.h
+++ b/include/linux/mfd/intel_soc_pmic_wcove.h
@@ -37,6 +37,7 @@ extern struct i2c_adapter *wcove_pmic_i2c_adapter;
 #define WC_CHGRCTRL1_ADDR	0x5E17
 #define WC_CHGRCTRL2_ADDR	0x5E18
 #define WC_CHGRSTATUS_ADDR	0x5E19
+#define WC_CHGDISCTRL_ADDR	0x5E2F
 #define WC_THRMBATZONE_ADDR	0x4F22
 
 #define WC_THRMIRQ1_ADDR	0x6E05
diff --git a/include/linux/power/intel_pmic_ccsm.h b/include/linux/power/intel_pmic_ccsm.h
index edb52cc..04bf560 100644
--- a/include/linux/power/intel_pmic_ccsm.h
+++ b/include/linux/power/intel_pmic_ccsm.h
@@ -18,6 +18,7 @@ struct pmic_regs {
 	u16 pmic_mchgrirq1;
 	u16 pmic_chgrctrl0;
 	u16 pmic_chgrctrl1;
+	u16 pmic_chgdisctrl;
 	u16 pmic_lowbattdet0;
 	u16 pmic_lowbattdet1;
 	u16 pmic_battdetctrl;
-- 
1.9.1

