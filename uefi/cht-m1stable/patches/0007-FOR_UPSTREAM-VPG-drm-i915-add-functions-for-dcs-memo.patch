From 9553084fac49899c60764b2739edf6a87731bf24 Mon Sep 17 00:00:00 2001
Message-Id: <9553084fac49899c60764b2739edf6a87731bf24.1421830309.git.chang-joon.lee@intel.com>
In-Reply-To: <49dde4951ccd12ce81e60aed3b24793e0ac12fed.1421830308.git.chang-joon.lee@intel.com>
References: <49dde4951ccd12ce81e60aed3b24793e0ac12fed.1421830308.git.chang-joon.lee@intel.com>
From: Yogesh Mohan Marimuthu <yogesh.mohan.marimuthu@intel.com>
Date: Tue, 21 Oct 2014 22:34:23 +0530
Subject: [PATCH 07/17] FOR_UPSTREAM [VPG]: drm/i915: add functions for dcs
 memory write cmd

Add functions for DCS memory write command. The mem write
command to send fb data to panel is sent using this function.

Issue: GMINL-1644
Change-Id: Ia2bee60ee781656399e83fca5822703f143525ed
Signed-off-by: Shobhit Kumar <shobhit.kumar@intel.com>
Signed-off-by: Yogesh Mohan Marimuthu <yogesh.mohan.marimuthu@intel.com>
---
 drivers/gpu/drm/i915/intel_drv.h     |    2 +-
 drivers/gpu/drm/i915/intel_dsi.c     |    8 ++++++++
 drivers/gpu/drm/i915/intel_dsi_cmd.c |   33 +++++++++++++++++++++++++++++++++
 drivers/gpu/drm/i915/intel_dsi_cmd.h |    3 +++
 4 files changed, 45 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/i915/intel_drv.h b/drivers/gpu/drm/i915/intel_drv.h
index 57bb457..7691165 100644
--- a/drivers/gpu/drm/i915/intel_drv.h
+++ b/drivers/gpu/drm/i915/intel_drv.h
@@ -983,7 +983,7 @@ enum pipe vlv_power_sequencer_pipe(struct intel_dp *intel_dp);
 
 /* intel_dsi.c */
 bool intel_dsi_init(struct drm_device *dev);
-
+void intel_dsi_update_panel_fb(struct intel_encoder *encoder);
 
 /* intel_dvo.c */
 void intel_dvo_init(struct drm_device *dev);
diff --git a/drivers/gpu/drm/i915/intel_dsi.c b/drivers/gpu/drm/i915/intel_dsi.c
index 5da3cef..efd87fa 100644
--- a/drivers/gpu/drm/i915/intel_dsi.c
+++ b/drivers/gpu/drm/i915/intel_dsi.c
@@ -628,6 +628,14 @@ static void intel_dsi_get_config(struct intel_encoder *encoder,
 	pipe_config->port_clock = dev_priv->vbt.lfp_lvds_vbt_mode->clock;
 }
 
+void intel_dsi_update_panel_fb(struct intel_encoder *encoder)
+{
+	struct intel_dsi *intel_dsi = enc_to_intel_dsi(&encoder->base);
+	unsigned char uc_data[] = {MIPI_DCS_WRITE_MEMORY_START};
+
+	dsi_send_dcs_cmd(intel_dsi, 0, uc_data, sizeof(uc_data), true);
+}
+
 static enum drm_mode_status
 intel_dsi_mode_valid(struct drm_connector *connector,
 		     struct drm_display_mode *mode)
diff --git a/drivers/gpu/drm/i915/intel_dsi_cmd.c b/drivers/gpu/drm/i915/intel_dsi_cmd.c
index 5346e31..92044ff 100644
--- a/drivers/gpu/drm/i915/intel_dsi_cmd.c
+++ b/drivers/gpu/drm/i915/intel_dsi_cmd.c
@@ -388,6 +388,39 @@ int dsi_vc_generic_read(struct intel_dsi *intel_dsi, int channel,
 	return 0;
 }
 
+int dsi_send_dcs_cmd(struct intel_dsi *intel_dsi, int channel,
+		const u8 *data, int len, bool pipe_render)
+{
+	struct drm_encoder *encoder = &intel_dsi->base.base;
+	struct drm_device *dev = encoder->dev;
+	struct drm_i915_private *dev_priv = dev->dev_private;
+	struct intel_crtc *intel_crtc = to_intel_crtc(encoder->crtc);
+	enum pipe pipe = intel_crtc->pipe;
+	u32 cmd_addr;
+
+	if (I915_READ(MIPI_COMMAND_ADDRESS(pipe)) & COMMAND_VALID)
+		return -EBUSY;
+
+	if ((I915_READ(PIPECONF(pipe)) & PIPECONF_MIPI_DSR_ENABLE) == 0)
+		return -EBUSY;
+
+	if (intel_dsi->cmd_buff == NULL)
+		return -ENOMEM;
+
+	memcpy(intel_dsi->cmd_buff, data, len);
+
+	cmd_addr = intel_dsi->cmd_buff_phy_addr & COMMAND_MEM_ADDRESS_MASK;
+	cmd_addr |= COMMAND_VALID;
+
+	if (pipe_render)
+		cmd_addr |= MEMORY_WRITE_DATA_FROM_PIPE_RENDERING;
+
+	I915_WRITE(MIPI_COMMAND_LENGTH(pipe), len);
+	I915_WRITE(MIPI_COMMAND_ADDRESS(pipe), cmd_addr);
+
+	return 0;
+}
+
 /*
  * send a video mode command
  *
diff --git a/drivers/gpu/drm/i915/intel_dsi_cmd.h b/drivers/gpu/drm/i915/intel_dsi_cmd.h
index 46aa1ac..bb6656e 100644
--- a/drivers/gpu/drm/i915/intel_dsi_cmd.h
+++ b/drivers/gpu/drm/i915/intel_dsi_cmd.h
@@ -50,6 +50,9 @@ int dsi_vc_dcs_read(struct intel_dsi *intel_dsi, int channel, u8 dcs_cmd,
 int dsi_vc_generic_read(struct intel_dsi *intel_dsi, int channel,
 			u8 *reqdata, int reqlen, u8 *buf, int buflen);
 
+int dsi_send_dcs_cmd(struct intel_dsi *intel_dsi, int channel,
+			const u8 *data, int len, bool pipe_render);
+
 int dpi_send_cmd(struct intel_dsi *intel_dsi, u32 cmd, bool hs);
 void wait_for_dsi_fifo_empty(struct intel_dsi *intel_dsi);
 
-- 
1.7.9.5

