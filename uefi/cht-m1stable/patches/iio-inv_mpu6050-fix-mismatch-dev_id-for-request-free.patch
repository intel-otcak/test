From f01e5c373da950898c6b7702048579ca222d5b32 Mon Sep 17 00:00:00 2001
From: Daniel Leung <daniel.leung@intel.com>
Date: Tue, 17 Feb 2015 17:22:04 -0800
Subject: [PATCH] iio: inv_mpu6050: fix mismatch dev_id for request/free irq

Fix an issue where free_irq() complains about "Trying to
free already-free IRQ". This is due to mismatch dev_id
being used. One dev_id is being used to request_threaded_irq(),
while another is used for free_irq(). This causes free_irq() to
not able to find the action item attached by
request_threaded_irq(), thus printing the warning.
This syncs up the two dev_id being used.

Change-Id: Id425aecdf2675b02c28f4b2bbe3d6066beb9203e
Signed-off-by: Daniel Leung <daniel.leung@intel.com>
---
 drivers/iio/imu/inv_mpu6050/inv_mpu_core.c    | 4 ++--
 drivers/iio/imu/inv_mpu6050/inv_mpu_iio.h     | 2 +-
 drivers/iio/imu/inv_mpu6050/inv_mpu_trigger.c | 7 +++++--
 3 files changed, 8 insertions(+), 5 deletions(-)

diff --git a/drivers/iio/imu/inv_mpu6050/inv_mpu_core.c b/drivers/iio/imu/inv_mpu6050/inv_mpu_core.c
index ab9dc3b..9415dfe 100644
--- a/drivers/iio/imu/inv_mpu6050/inv_mpu_core.c
+++ b/drivers/iio/imu/inv_mpu6050/inv_mpu_core.c
@@ -903,7 +903,7 @@ out_del_mux:
 out_unreg_device:
 	iio_device_unregister(indio_dev);
 out_remove_trigger:
-	inv_mpu6050_remove_trigger(st);
+	inv_mpu6050_remove_trigger(indio_dev);
 out_unreg_ring:
 	iio_triggered_buffer_cleanup(indio_dev);
 	return result;
@@ -917,7 +917,7 @@ static int inv_mpu_remove(struct i2c_client *client)
 	inv_mpu_acpi_delete_mux_client(st);
 	i2c_del_mux_adapter(st->mux_adapter);
 	iio_device_unregister(indio_dev);
-	inv_mpu6050_remove_trigger(st);
+	inv_mpu6050_remove_trigger(indio_dev);
 	iio_triggered_buffer_cleanup(indio_dev);
 
 	return 0;
diff --git a/drivers/iio/imu/inv_mpu6050/inv_mpu_iio.h b/drivers/iio/imu/inv_mpu6050/inv_mpu_iio.h
index a461423..9e8765d 100644
--- a/drivers/iio/imu/inv_mpu6050/inv_mpu_iio.h
+++ b/drivers/iio/imu/inv_mpu6050/inv_mpu_iio.h
@@ -266,7 +266,7 @@ enum inv_mpu6050_clock_sel_e {
 irqreturn_t inv_mpu6050_irq_handler(int irq, void *p);
 irqreturn_t inv_mpu6050_read_fifo(int irq, void *p);
 int inv_mpu6050_probe_trigger(struct iio_dev *indio_dev);
-void inv_mpu6050_remove_trigger(struct inv_mpu6050_state *st);
+void inv_mpu6050_remove_trigger(struct iio_dev *indio_dev);
 int inv_reset_fifo(struct iio_dev *indio_dev);
 int inv_mpu6050_switch_engine(struct inv_mpu6050_state *st, bool en, u32 mask);
 int inv_mpu6050_write_reg(struct inv_mpu6050_state *st, int reg, u8 val);
diff --git a/drivers/iio/imu/inv_mpu6050/inv_mpu_trigger.c b/drivers/iio/imu/inv_mpu6050/inv_mpu_trigger.c
index cef8eb2..f5c5f57 100644
--- a/drivers/iio/imu/inv_mpu6050/inv_mpu_trigger.c
+++ b/drivers/iio/imu/inv_mpu6050/inv_mpu_trigger.c
@@ -144,6 +144,7 @@ int inv_mpu6050_probe_trigger(struct iio_dev *indio_dev)
 				);
 	if (ret)
 		goto error_free_trig;
+
 	st->trig->dev.parent = &st->client->dev;
 	st->trig->ops = &inv_mpu_trigger_ops;
 	iio_trigger_set_drvdata(st->trig, indio_dev);
@@ -162,9 +163,11 @@ error_ret:
 	return ret;
 }
 
-void inv_mpu6050_remove_trigger(struct inv_mpu6050_state *st)
+void inv_mpu6050_remove_trigger(struct iio_dev *indio_dev)
 {
+	struct inv_mpu6050_state *st = iio_priv(indio_dev);
+
 	iio_trigger_unregister(st->trig);
-	free_irq(st->client->irq, st->trig);
+	free_irq(st->client->irq, indio_dev);
 	iio_trigger_free(st->trig);
 }
-- 
1.9.1

