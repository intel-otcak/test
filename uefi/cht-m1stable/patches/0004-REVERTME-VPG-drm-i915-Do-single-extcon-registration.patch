From 1cad8d6f61b4b0e5ac5efb8a8d093b6cb41b40bf Mon Sep 17 00:00:00 2001
Message-Id: <1cad8d6f61b4b0e5ac5efb8a8d093b6cb41b40bf.1441918786.git.yunwei.zhang@intel.com>
In-Reply-To: <8631704be06e00cb7a7a415f13811ca4ece99e8b.1441918786.git.yunwei.zhang@intel.com>
References: <8631704be06e00cb7a7a415f13811ca4ece99e8b.1441918786.git.yunwei.zhang@intel.com>
From: Shubhangi Shrivastava <shubhangi.shrivastava@intel.com>
Date: Tue, 8 Sep 2015 11:18:13 +0530
Subject: [PATCH 04/10] REVERTME [VPG]: drm/i915: Do single extcon registration

This patch moves the registration of multiple extcon devices into a
common registration. This will allow us to reuse the single
extcon instance across mulptile encoders.
This is needed since Audio supports only one instance of
audio endpoint and will allow display to dynamically
switch between encoers.

REVERTME: LP audio is not available upstream and may not be for
some more time which is required for this.

Change-Id: Ia37c8536744d8f369dcb08b3fc394ce996ad3deb
Tracked-On: https://jira01.devtools.intel.com/browse/GMINL-10172
Signed-off-by: Sivakumar Thulasimani <sivakumar.thulasimani@intel.com>
Signed-off-by: Shubhangi Shrivastava <shubhangi.shrivastava@intel.com>
---
 drivers/gpu/drm/i915/i915_dma.c      |    6 ++++++
 drivers/gpu/drm/i915/intel_display.c |   24 ++++++++++++++++++++++++
 drivers/gpu/drm/i915/intel_dp.c      |   22 ----------------------
 drivers/gpu/drm/i915/intel_hdmi.c    |   23 -----------------------
 4 files changed, 30 insertions(+), 45 deletions(-)

Index: b/drivers/gpu/drm/i915/i915_dma.c
===================================================================
--- a/drivers/gpu/drm/i915/i915_dma.c	2016-03-08 10:28:09.575169879 -0800
+++ b/drivers/gpu/drm/i915/i915_dma.c	2016-03-08 10:28:17.775260700 -0800
@@ -1988,6 +1988,12 @@
 		return ret;
 	}
 
+#ifdef CONFIG_EXTCON
+	if (&dev_priv->hotplug_switch) {
+		extcon_dev_unregister(&dev_priv->hotplug_switch);
+		kfree(dev_priv->hotplug_switch.name);
+	}
+#endif
 	intel_fini_runtime_pm(dev_priv);
 
 	intel_gpu_ips_teardown();
Index: b/drivers/gpu/drm/i915/intel_display.c
===================================================================
--- a/drivers/gpu/drm/i915/intel_display.c	2016-03-08 10:28:09.579169923 -0800
+++ b/drivers/gpu/drm/i915/intel_display.c	2016-03-08 10:28:17.779260744 -0800
@@ -13296,11 +13296,35 @@
 	return true;
 }
 
+void set_hdmi_priv(struct drm_device *dev)
+{
+#ifdef CONFIG_EXTCON
+	struct drm_i915_private *dev_priv = dev->dev_private;
+
+	dev_priv->hotplug_switch.name =
+		kasprintf(GFP_KERNEL, "hdmi_aud");
+#ifdef CONFIG_SUPPORT_LPDMA_HDMI_AUDIO
+	if (IS_VALLEYVIEW(dev)) {
+		kfree(dev_priv->hotplug_switch.name);
+		dev_priv->hotplug_switch.name =
+			kasprintf(GFP_KERNEL, "hdmi");
+	}
+#endif
+	if (!dev_priv->hotplug_switch.name) {
+		DRM_ERROR("%s failed to allocate memory", __func__);
+		return;
+	}
+
+	extcon_dev_register(&dev_priv->hotplug_switch);
+#endif
+}
+
 static void intel_setup_outputs_vbt(struct drm_device *dev)
 {
 	struct drm_i915_private *dev_priv = dev->dev_private;
 	int i;
 
+	set_hdmi_priv(dev);
 	for (i = 0; i < dev_priv->vbt.child_dev_num; i++) {
 		int dvo_port =
 			dev_priv->vbt.child_dev[i].common.dvo_port;
Index: b/drivers/gpu/drm/i915/intel_dp.c
===================================================================
--- a/drivers/gpu/drm/i915/intel_dp.c	2016-03-08 10:28:09.579169923 -0800
+++ b/drivers/gpu/drm/i915/intel_dp.c	2016-03-08 10:28:17.779260744 -0800
@@ -4899,14 +4899,6 @@
 intel_dp_connector_destroy(struct drm_connector *connector)
 {
 	struct intel_connector *intel_connector = to_intel_connector(connector);
-	struct drm_device *dev = connector->dev;
-	struct drm_i915_private *dev_priv = dev->dev_private;
-
-#ifdef CONFIG_EXTCON
-	extcon_dev_unregister(&dev_priv->hotplug_switch);
-	if (&dev_priv->hotplug_switch)
-		kfree(dev_priv->hotplug_switch.name);
-#endif
 
 	if (!IS_ERR_OR_NULL(intel_connector->edid))
 		kfree(intel_connector->edid);
@@ -5393,20 +5385,6 @@
 			intel_dp_init_panel_power_timestamps(intel_dp);
 			intel_dp_init_panel_power_sequencer(dev, intel_dp, &power_seq);
 		}
-	} else {
-#ifdef CONFIG_EXTCON
-		/* use the same name as hdmi for now  */
-		dev_priv->hotplug_switch.name =
-			kasprintf(GFP_KERNEL, "hdmi_%c", 'a' + port);
-#ifdef CONFIG_SUPPORT_LPDMA_HDMI_AUDIO
-		if (IS_VALLEYVIEW(dev))
-			dev_priv->hotplug_switch.name = "hdmi";
-#endif
-		if (!dev_priv->hotplug_switch.name)
-			DRM_ERROR("Couldn't allocate memory for audio");
-
-		extcon_dev_register(&dev_priv->hotplug_switch);
-#endif
 	}
 
 	intel_dp_aux_init(intel_dp, intel_connector);
Index: b/drivers/gpu/drm/i915/intel_hdmi.c
===================================================================
--- a/drivers/gpu/drm/i915/intel_hdmi.c	2016-03-08 10:28:09.583169968 -0800
+++ b/drivers/gpu/drm/i915/intel_hdmi.c	2016-03-08 10:30:53.200983437 -0800
@@ -1914,12 +1914,6 @@
 
 static void intel_hdmi_destroy(struct drm_connector *connector)
 {
-#ifdef CONFIG_EXTCON
-	struct drm_device *dev = connector->dev;
-	struct drm_i915_private *dev_priv = dev->dev_private;
-	extcon_dev_unregister(&dev_priv->hotplug_switch);
-	kfree(dev_priv->hotplug_switch.name);
-#endif
 	drm_connector_cleanup(connector);
 	kfree(connector);
 }
@@ -2043,23 +2037,6 @@
 	intel_connector_attach_encoder(intel_connector, intel_encoder);
 	drm_connector_register(connector);
 
-#ifdef CONFIG_EXTCON
-	dev_priv->hotplug_switch.name =
-		kasprintf(GFP_KERNEL, "hdmi_%c", 'a' + port);
-#ifdef CONFIG_SUPPORT_LPDMA_HDMI_AUDIO
-		if (IS_VALLEYVIEW(dev))
-			dev_priv->hotplug_switch.name = "hdmi";
-#endif
-	if (!dev_priv->hotplug_switch.name) {
-		DRM_ERROR("%s failed to allocate memory", __func__);
-		kfree(intel_connector);
-		kfree(intel_dig_port);
-		return;
-	}
-
-	extcon_dev_register(&dev_priv->hotplug_switch);
-#endif
-
 	/* For G4X desktop chip, PEG_BAND_GAP_DATA 3:0 must first be written
 	 * 0xd.  Failure to do so will result in spurious interrupts being
 	 * generated on the port when a cable is not attached.
