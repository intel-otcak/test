From 9db0d7266406576b1629544f34b047064a627576 Mon Sep 17 00:00:00 2001
Message-Id: <9db0d7266406576b1629544f34b047064a627576.1413837856.git.chang-joon.lee@intel.com>
In-Reply-To: <006497b7323eca32c2f489a1a9f662743c0d16d2.1413837855.git.chang-joon.lee@intel.com>
References: <006497b7323eca32c2f489a1a9f662743c0d16d2.1413837855.git.chang-joon.lee@intel.com>
From: Ramalingam C <ramalingam.c@intel.com>
Date: Mon, 30 Sep 2013 15:34:00 +0530
Subject: [PATCH 015/312] FOR_UPSTREAM [VPG]: drm/i915 Not programming WM
 value for disabled plane

Watermark values programmed for disabled plane has no impact on any
functionality. Hence not programming them to zero on
WM_PIPE_X registers.

When a plane is disabled there wont be any data transaction for
that plane, hence WM value for corresponding plane on WM_PIPE will
not have any impact on power or performance. So they need not be
programmed to zero.

This change will make sure that none of the enabled plane's WM
value will be set to zero, hence avoiding PIPE FIFO underrun error.

Issue: AXIA-4446
HSD ID: 5201301

Change-Id: I89db6859c7d313ac50c88e71ccef3742c42baa99
Signed-off-by: Ramalingam C <ramalingam.c@intel.com>

Conflicts:

	drivers/gpu/drm/i915/intel_pm.c
(cherry picked from commit 2f3811f569ffa8dbf5cdd238a37fdb4742646869)
---
 drivers/gpu/drm/i915/intel_pm.c |   24 +++++++++++++++++++++++-
 1 file changed, 23 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/i915/intel_pm.c b/drivers/gpu/drm/i915/intel_pm.c
index ee72807..3d58ba7 100644
--- a/drivers/gpu/drm/i915/intel_pm.c
+++ b/drivers/gpu/drm/i915/intel_pm.c
@@ -2584,12 +2584,34 @@ static void ilk_write_wm_values(struct drm_i915_private *dev_priv,
 	struct drm_device *dev = dev_priv->dev;
 	struct ilk_wm_values *previous = &dev_priv->wm.hw;
 	unsigned int dirty;
-	uint32_t val;
+	uint32_t val, pipe, cur_plane_wm;
 
 	dirty = ilk_compute_wm_dirty(dev, previous, results);
 	if (!dirty)
 		return;
 
+	/*
+	 * WM value for disabled plane has no impact. Hence not disturbing it.
+	 * This will make sure that none of the enabled plane's WM value
+	 * will be set zero, hence avoiding FIFO underrun error
+	 */
+	for (pipe = 0; pipe < I915_MAX_PIPES; pipe++) {
+		if (pipe == PIPE_C)
+			val = I915_READ(WM0_PIPEC_IVB);
+		else
+			val = I915_READ(WM0_PIPEA_ILK + (pipe * 4));
+
+		/* Primary plane WM value */
+		cur_plane_wm = (val & 0xFF0000) >> 16;
+		if (!((results->wm_pipe[pipe] & 0xFF0000) >> 16))
+			results->wm_pipe[pipe] |= (cur_plane_wm << 16);
+
+		/* Sprite plane WM value */
+		cur_plane_wm = (val & 0xFF00) >> 8;
+		if (!((results->wm_pipe[pipe] & 0xFF00) >> 8))
+			results->wm_pipe[pipe] |= (cur_plane_wm << 8);
+	}
+
 	_ilk_disable_lp_wm(dev_priv, dirty);
 
 	if (dirty & WM_DIRTY_PIPE(PIPE_A))
-- 
1.7.9.5

