From c048426d15d48df801bcebc5951675ed41e1c1f9 Mon Sep 17 00:00:00 2001
From: Mythri P K <mythri.p.k@intel.com>
Date: Fri, 23 May 2014 22:09:32 +0530
Subject: [PATCH 27/39] ASoC: DFW platform: Rename sst_gain_mixer_control to
 sst_gain_data

Issue: GMINL-3680

sst_gain_mixer_control is now just the pvt_data of the
soc_mixer_control so rename the struct accordingly

Change-Id: I12d75695a466e96b0c280b2c3332b6ef448f3afc
Signed-off-by: Mythri P K <mythri.p.k@intel.com>
---
 sound/soc/intel/platform-libs/controls_v2_dpcm.c | 14 +++++++-------
 sound/soc/intel/platform-libs/sst_widgets.h      |  8 ++++----
 2 files changed, 11 insertions(+), 11 deletions(-)

diff --git a/sound/soc/intel/platform-libs/controls_v2_dpcm.c b/sound/soc/intel/platform-libs/controls_v2_dpcm.c
index d0686d1..6a9e4c5 100644
--- a/sound/soc/intel/platform-libs/controls_v2_dpcm.c
+++ b/sound/soc/intel/platform-libs/controls_v2_dpcm.c
@@ -482,7 +482,7 @@ static int sst_gain_ctl_info(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_info *uinfo)
 {
 	struct soc_mixer_control *sm = (void *) kcontrol->private_value;
-	struct sst_gain_mixer_control *mc = (struct sst_gain_mixer_control *)sm->pvt_data;
+	struct sst_gain_data *mc = (struct sst_gain_data *)sm->pvt_data;
 
 	uinfo->type = SNDRV_CTL_ELEM_TYPE_INTEGER;
 	uinfo->count = mc->stereo ? 2 : 1;
@@ -536,7 +536,7 @@ static int sst_gain_get(struct snd_kcontrol *kcontrol,
 			struct snd_ctl_elem_value *ucontrol)
 {
 	struct soc_mixer_control *sm = (void *) kcontrol->private_value;
-	struct sst_gain_mixer_control *mc = (struct sst_gain_mixer_control *)sm->pvt_data;
+	struct sst_gain_data *mc = (struct sst_gain_data *)sm->pvt_data;
 	struct sst_gain_value *gv = mc->gain_val;
 
 	switch (mc->type) {
@@ -563,7 +563,7 @@ static int sst_gain_put(struct snd_kcontrol *kcontrol,
 	struct snd_soc_platform *platform = snd_kcontrol_chip(kcontrol);
 	struct sst_data *sst = snd_soc_platform_get_drvdata(platform);
 	struct soc_mixer_control *sm = (void *) kcontrol->private_value;
-	struct sst_gain_mixer_control *mc = (struct sst_gain_mixer_control *)sm->pvt_data;
+	struct sst_gain_data *mc = (struct sst_gain_data *)sm->pvt_data;
 	struct sst_gain_value *gv = mc->gain_val;
 
 	switch (mc->type) {
@@ -677,7 +677,7 @@ static int fill_swm_input(struct swm_input_ids *swm_input, unsigned int reg)
 static void sst_set_pipe_gain(struct sst_ids *ids, struct sst_data *sst, int mute)
 {
 	struct soc_mixer_control *sm;
-	struct sst_gain_mixer_control *mc;
+	struct sst_gain_data *mc;
 	struct sst_gain_value *gv;
 	struct module *gain = NULL;
 
@@ -686,7 +686,7 @@ static void sst_set_pipe_gain(struct sst_ids *ids, struct sst_data *sst, int mut
 
 		pr_debug("control name=%s\n", kctl->id.name);
 		sm = (void *)kctl->private_value;
-		mc = (struct sst_gain_mixer_control *)sm->pvt_data;
+		mc = (struct sst_gain_data *)sm->pvt_data;
 		gv = mc->gain_val;
 
 		sst_send_gain_cmd(sst, gv, mc->task_id,
@@ -1900,7 +1900,7 @@ static int sst_fill_module_list(struct snd_kcontrol *kctl,
 
 	if (type == SST_MODULE_GAIN) {
 		struct soc_mixer_control *sm = (void *) kctl->private_value;
-		struct sst_gain_mixer_control *mc = (struct sst_gain_mixer_control *)sm->pvt_data;
+		struct sst_gain_data *mc = (struct sst_gain_data *)sm->pvt_data;
 
 		mc->w = w;
 		module->kctl = kctl;
@@ -1949,7 +1949,7 @@ static int sst_fill_widget_module_info(struct snd_soc_dapm_widget *w,
 		else if (strstr(kctl->id.name, "mute") &&
 			 !strncmp(kctl->id.name, w->name, index)) {
 			struct soc_mixer_control *sm = (void *) kctl->private_value;
-			struct sst_gain_mixer_control *mc = (struct sst_gain_mixer_control *)sm->pvt_data;
+			struct sst_gain_data *mc = (struct sst_gain_data *)sm->pvt_data;
 			mc->w = w;
 		} else if (strstr(kctl->id.name, "interleaver") &&
 			 !strncmp(kctl->id.name, w->name, index)) {
diff --git a/sound/soc/intel/platform-libs/sst_widgets.h b/sound/soc/intel/platform-libs/sst_widgets.h
index f0d8c8b..533d4a6 100644
--- a/sound/soc/intel/platform-libs/sst_widgets.h
+++ b/sound/soc/intel/platform-libs/sst_widgets.h
@@ -148,7 +148,7 @@ enum sst_gain_kcontrol_type {
 	SST_GAIN_RAMP_DURATION,
 };
 
-struct sst_gain_mixer_control {
+struct sst_gain_data {
 	bool stereo;
 	enum sst_gain_kcontrol_type type;
 	struct sst_gain_value *gain_val;
@@ -184,7 +184,7 @@ struct sst_gain_value {
 	.get = xhandler_get, .put = xhandler_put, \
 	.private_value = (unsigned long)&(struct soc_mixer_control) \
 	{ .reg = xmin, .rreg = xmax, .min = xmin, .max = xmax,\
-		.pvt_data = (char *)&(struct sst_gain_mixer_control)\
+		.pvt_data = (char *)&(struct sst_gain_data)\
 		{ .stereo = true, .max = xmax, .min = xmin, .type = SST_GAIN_TLV, \
 		.module_id = xmod, .pipe_id = xpipe, .task_id = xtask,\
 		.instance_id = xinstance, .gain_val = xgain_val, .pname = xpname} }
@@ -197,7 +197,7 @@ struct sst_gain_value {
 	.get = xhandler_get, .put = xhandler_put, \
 	.private_value = (unsigned long)&(struct soc_mixer_control) \
 	{ .min = xmin, .max = xmax,\
-		.pvt_data = (char *)&(struct sst_gain_mixer_control)\
+		.pvt_data = (char *)&(struct sst_gain_data)\
 		{ .stereo = false, .max = xmax, .min = xmin, .type = xtype, \
 		.module_id = xmod, .pipe_id = xpipe, .task_id = xtask,\
 		.instance_id = xinstance, .gain_val = xgain_val, .pname =  xpname} }
@@ -208,7 +208,7 @@ struct sst_gain_value {
 	.info = snd_soc_info_bool_ext, \
 	.get = xhandler_get, .put = xhandler_put, \
 	.private_value = (unsigned long)&(struct soc_mixer_control) \
-	{ .pvt_data = (char *)&(struct sst_gain_mixer_control)\
+	{ .pvt_data = (char *)&(struct sst_gain_data)\
 		{ .stereo = false, .type = SST_GAIN_MUTE, \
 		.module_id = xmod, .pipe_id = xpipe, .task_id = xtask,\
 		.instance_id = xinstance, .gain_val = xgain_val, .pname = xpname} }
-- 
1.9.1

