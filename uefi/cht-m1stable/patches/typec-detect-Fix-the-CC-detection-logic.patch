From d329b34693fe62a8ac10415a91f2806c0cf5b58d Mon Sep 17 00:00:00 2001
From: Albin B <albin.bala.krishnan@intel.com>
Date: Fri, 1 May 2015 18:30:54 +0530
Subject: [PATCH] [typec-detect]: Fix the CC detection logic

To detect the actual valid CC, measure the CC1 first and then
continue to measure CC2 as well if the CC1 is not valid.

Change-Id: I0a864e905142b29b0d6057bf2d447db3fa7084fe
Tracked-on: https://jira01.devtools.intel.com/browse/IMINAN-34836
Signed-off-by: R, Kannappan <r.kannappan@intel.com>
Signed-off-by: Albin B <albin.bala.krishnan@intel.com>
---
 drivers/usb/typec/usb_typec_detect.c | 28 ++++++++++++++++------------
 1 file changed, 16 insertions(+), 12 deletions(-)

diff --git a/drivers/usb/typec/usb_typec_detect.c b/drivers/usb/typec/usb_typec_detect.c
index 1395c5ee19b5..868654f7a8ff 100644
--- a/drivers/usb/typec/usb_typec_detect.c
+++ b/drivers/usb/typec/usb_typec_detect.c
@@ -287,7 +287,10 @@ static void update_phy_state(struct work_struct *work)
 	struct typec_detect *detect;
 	int ret;
 	enum typec_cc_pin use_cc = 0;
-	struct typec_cc_psy cc1_psy, cc2_psy;
+	struct typec_cc_psy cc1_psy = {USB_TYPEC_CC_VRD_UNKNOWN,
+					TYPEC_CURRENT_UNKNOWN};
+	struct typec_cc_psy cc2_psy = {USB_TYPEC_CC_VRD_UNKNOWN,
+					TYPEC_CURRENT_UNKNOWN};
 	struct power_supply_cable_props cable_props = {0};
 	int state;
 
@@ -315,25 +318,24 @@ static void update_phy_state(struct work_struct *work)
 			mutex_unlock(&detect->lock);
 		}
 
-		mutex_lock(&detect->lock);
-
 		ret = typec_measure_cc(phy, TYPEC_PIN_CC1, &cc1_psy, 0);
 		if (ret < 0) {
-			dev_err(detect->phy->dev,
+			dev_warn(detect->phy->dev,
 					"%s: Error(%d) measuring cc1\n",
 					__func__, ret);
-			break;
+			cc1_psy.v_rd = USB_TYPEC_CC_VRD_UNKNOWN;
+			cc1_psy.cur = TYPEC_CURRENT_UNKNOWN;
 		}
 
 		ret = typec_measure_cc(phy, TYPEC_PIN_CC2, &cc2_psy, 0);
 		if (ret < 0) {
-			dev_err(detect->phy->dev,
+			dev_warn(detect->phy->dev,
 					"%s: Error(%d) measuring cc2\n",
 					__func__, ret);
-			break;
+			cc2_psy.v_rd = USB_TYPEC_CC_VRD_UNKNOWN;
+			cc2_psy.cur = TYPEC_CURRENT_UNKNOWN;
 		}
 
-		mutex_unlock(&detect->lock);
 		dev_info(detect->phy->dev, "evt_vbus cc1 = %d, cc2 = %d",
 						cc1_psy.v_rd, cc2_psy.v_rd);
 
@@ -341,19 +343,21 @@ static void update_phy_state(struct work_struct *work)
 		if (CC_OPEN(cc1_psy.v_rd) || CC_RA(cc1_psy.v_rd)) {
 			ret = typec_measure_cc(phy, TYPEC_PIN_CC1, &cc1_psy, 0);
 			if (ret < 0) {
-				dev_err(detect->phy->dev,
+				dev_warn(detect->phy->dev,
 					"%s: Error(%d) measuring cc1\n",
 					__func__, ret);
-				break;
+				cc1_psy.v_rd = USB_TYPEC_CC_VRD_UNKNOWN;
+				cc1_psy.cur = TYPEC_CURRENT_UNKNOWN;
 			}
 		}
 		if (CC_OPEN(cc2_psy.v_rd) || CC_RA(cc2_psy.v_rd)) {
 			ret = typec_measure_cc(phy, TYPEC_PIN_CC2, &cc2_psy, 0);
 			if (ret < 0) {
-				dev_err(detect->phy->dev,
+				dev_warn(detect->phy->dev,
 					"%s: Error(%d) measuring cc2\n",
 					__func__, ret);
-				break;
+				cc2_psy.v_rd = USB_TYPEC_CC_VRD_UNKNOWN;
+				cc2_psy.cur = TYPEC_CURRENT_UNKNOWN;
 			}
 		}
 
-- 
1.9.1

