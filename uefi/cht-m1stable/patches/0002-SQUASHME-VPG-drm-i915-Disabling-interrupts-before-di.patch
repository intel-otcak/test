From b1c6cedd0807962de0e9ad1cadf455e424b8d014 Mon Sep 17 00:00:00 2001
Message-Id: <b1c6cedd0807962de0e9ad1cadf455e424b8d014.1427537204.git.chang-joon.lee@intel.com>
In-Reply-To: <9799144598311ce150ce2023850a16120d2f3426.1427537204.git.chang-joon.lee@intel.com>
References: <9799144598311ce150ce2023850a16120d2f3426.1427537204.git.chang-joon.lee@intel.com>
From: Deepak S <deepak.s@intel.com>
Date: Fri, 27 Mar 2015 17:33:47 +0530
Subject: [PATCH 2/2] SQUASHME! [VPG]: drm/i915: Disabling interrupts before
 disabling power well.

Runtime suspend expects us to disable display interrupts before we
do prepare gfx for suspend complete.

SQUASHME! - This patch should be squashed into the following existing patch:
commit 1d9aa058a32f5bf55608627f5beae30015987765
change-Id: Iaa30d56cc4dd78c78e2809f62ef1a0be37778f7d
Author: Deepak S <deepak.s@intel.com>
Date:   Wed Mar 11 16:51:30 2015 +0530

	FOR_UPSTREAM [VPG]: drm/i915: Simplified the logic for delaying
	Display power gating.

Issue: GMINL-7480
Change-Id: Ie05820866d2e1f46e1bc1be1e60cb4918da7f8fc
Signed-off-by: Deepak S <deepak.s@intel.com>
---
 drivers/gpu/drm/i915/i915_drv.c |   13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/drivers/gpu/drm/i915/i915_drv.c b/drivers/gpu/drm/i915/i915_drv.c
index 48bf14b..16dc562 100644
--- a/drivers/gpu/drm/i915/i915_drv.c
+++ b/drivers/gpu/drm/i915/i915_drv.c
@@ -583,6 +583,12 @@ static int i915_drm_freeze(struct drm_device *dev)
 			return error;
 		}
 
+		if (IS_VALLEYVIEW(dev)) {
+			spin_lock_irq(&dev_priv->irq_lock);
+			valleyview_disable_display_irqs(dev_priv);
+			spin_unlock_irq(&dev_priv->irq_lock);
+		}
+
 		/* Clear any pending reset requests. They should be picked up
 		* after resume when new work is submitted */
 		for (i = 0; i < I915_NUM_RINGS; i++)
@@ -1911,6 +1917,7 @@ static int intel_runtime_suspend(struct device *device)
 
 		return -EAGAIN;
 	}
+
 	/*
 	 * We are safe here against re-faults, since the fault handler takes
 	 * an RPM reference.
@@ -1918,6 +1925,12 @@ static int intel_runtime_suspend(struct device *device)
 	i915_gem_release_all_mmaps(dev_priv);
 	mutex_unlock(&dev->struct_mutex);
 
+	if (IS_VALLEYVIEW(dev)) {
+		spin_lock_irq(&dev_priv->irq_lock);
+		valleyview_disable_display_irqs(dev_priv);
+		spin_unlock_irq(&dev_priv->irq_lock);
+	}
+
 	/*
 	 * rps.work can't be rearmed here, since we get here only after making
 	 * sure the GPU is idle and the RPS freq is set to the minimum. See
-- 
1.7.9.5

