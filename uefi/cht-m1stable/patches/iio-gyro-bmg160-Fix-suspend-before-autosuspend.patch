From cbfc7e8f91b3407142835c2dc3f3cb9a06b28929 Mon Sep 17 00:00:00 2001
From: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
Date: Fri, 26 Sep 2014 13:29:57 -0700
Subject: iio: gyro: bmg160: Fix suspend before autosuspend

When resume happens before autosuspend delay, there is a possibility
that the chip is left in sleep mode. Since the runtime suspend
didn't occur yet, the runtime resume callback will not be called back.
Also addressed call to power off when i2c times out, during resume.

Signed-off-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
---
 drivers/iio/gyro/bmg160.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/drivers/iio/gyro/bmg160.c b/drivers/iio/gyro/bmg160.c
index a57f8f2..40a32fd 100644
--- a/drivers/iio/gyro/bmg160.c
+++ b/drivers/iio/gyro/bmg160.c
@@ -719,6 +719,7 @@ static int bmg160_write_event_config(struct iio_dev *indio_dev,
 
 	ret =  bmg160_setup_any_motion_interrupt(data, state);
 	if (ret < 0) {
+		bmg160_set_power_state(data, false);
 		mutex_unlock(&data->mutex);
 		return ret;
 	}
@@ -885,6 +886,7 @@ static int bmg160_data_rdy_trigger_set_state(struct iio_trigger *trig,
 	else
 		ret = bmg160_setup_new_data_interrupt(data, state);
 	if (ret < 0) {
+		bmg160_set_power_state(data, false);
 		mutex_unlock(&data->mutex);
 		return ret;
 	}
@@ -1158,8 +1160,10 @@ static int bmg160_resume(struct device *dev)
 
 	mutex_lock(&data->mutex);
 	if (data->dready_trigger_on || data->motion_trigger_on ||
-							data->ev_enable_state)
+	    data->ev_enable_state || pm_runtime_autosuspend_expiration(dev)) {
+		dev_err(&data->client->dev, "change back to normal mode\n");
 		bmg160_set_mode(data, BMG160_MODE_NORMAL);
+	}
 	mutex_unlock(&data->mutex);
 
 	return 0;
-- 
1.9.1

