From d5db639902ec42305c14e5d1002de43edea9934e Mon Sep 17 00:00:00 2001
Message-Id: <d5db639902ec42305c14e5d1002de43edea9934e.1425610844.git.chang-joon.lee@intel.com>
In-Reply-To: <6fa2ab23adf6d7de781e906d04a0224410262d9b.1425610844.git.chang-joon.lee@intel.com>
References: <6fa2ab23adf6d7de781e906d04a0224410262d9b.1425610844.git.chang-joon.lee@intel.com>
From: Durgadoss R <durgadoss.r@intel.com>
Date: Thu, 5 Feb 2015 19:10:39 +0530
Subject: [PATCH 05/27] MUST_REBASE [VPG]: drivers/video/adf: Add VLV eDP DRRS
 methods

This patch adds methods that implement eDP DRRS on VLV platform.
These methods register themselves with the generic eDP DRRS
code during initialization.

MUST_REBASE: Since Google ADF framework is not in upstream and also
we cannot have two display drivers, other one being i915, we need to
work on i915 and ADF convergence path before it can be upstreamed.

Issue: GMINL-5760
Change-Id: Ied1a48e0d4efd948689b6995fc423b0eed14f14f
Signed-off-by: Durgadoss R <durgadoss.r@intel.com>
---
 drivers/video/adf/intel/core/vlv/Makefile          |    1 +
 drivers/video/adf/intel/core/vlv/vlv_edp_drrs.c    |   64 ++++++++++++++++++++
 .../adf/intel/include/core/common/dp/gen_dp_pipe.h |    1 +
 3 files changed, 66 insertions(+)
 create mode 100644 drivers/video/adf/intel/core/vlv/vlv_edp_drrs.c

diff --git a/drivers/video/adf/intel/core/vlv/Makefile b/drivers/video/adf/intel/core/vlv/Makefile
index d559c50..0116a15 100644
--- a/drivers/video/adf/intel/core/vlv/Makefile
+++ b/drivers/video/adf/intel/core/vlv/Makefile
@@ -17,5 +17,6 @@ obj-y := vlv_dc_config.o \
 	chv_dpio.o \
 	vlv_dp_port.o\
 	vlv_edp_psr.o \
+	vlv_edp_drrs.o \
 	vlv_color_correction.o \
 	chv_color_correction.o
diff --git a/drivers/video/adf/intel/core/vlv/vlv_edp_drrs.c b/drivers/video/adf/intel/core/vlv/vlv_edp_drrs.c
new file mode 100644
index 0000000..6acd85a
--- /dev/null
+++ b/drivers/video/adf/intel/core/vlv/vlv_edp_drrs.c
@@ -0,0 +1,64 @@
+/*
+ * Copyright (C) 2015, Intel Corporation.
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * Author:
+ * Durgadoss R <durgadoss.r@intel.com>
+ */
+
+#define pr_fmt(fmt) "vlv_edp_drrs: " fmt
+
+#include <core/common/dp/gen_dp_pipe.h>
+#include <core/vlv/vlv_dc_config.h>
+
+static void vlv_edp_drrs_init(struct intel_pipeline *pipeline)
+{
+	return;
+}
+
+static void vlv_edp_drrs_exit(struct intel_pipeline *pipeline)
+{
+	return;
+}
+
+static void vlv_edp_set_drrs_state(struct intel_pipeline *pipeline)
+{
+	struct vlv_pipeline *disp = to_vlv_pipeline(pipeline);
+	struct vlv_pipe *pipe = &disp->pipe;
+	struct dp_pipe *dp_pipe = &disp->gen.dp;
+	struct edp_drrs *drrs = &dp_pipe->drrs;
+	struct drrs_info *state = &pipeline->drrs->drrs_state;
+	enum drrs_refresh_rate_type target = state->target_rr_type;
+	int val = REG_READ(pipe->offset);
+
+	switch (target) {
+	case DRRS_HIGH_RR:
+		REG_WRITE(pipe->offset, val & ~PIPECONF_EDP_RR_SWITCH_VLV);
+		break;
+	case DRRS_LOW_RR:
+		vlv_pipe_program_m2_n2(pipe, &drrs->downclock_mn);
+		REG_WRITE(pipe->offset, val | PIPECONF_EDP_RR_SWITCH_VLV);
+		break;
+	default:
+		pr_err("invalid refresh rate type\n");
+	}
+}
+
+struct edp_drrs_platform_ops vlv_edp_drrs_ops = {
+	.init = vlv_edp_drrs_init,
+	.exit = vlv_edp_drrs_exit,
+	.set_drrs_state = vlv_edp_set_drrs_state,
+};
+
+struct edp_drrs_platform_ops *get_vlv_edp_drrs_ops(void)
+{
+	return &vlv_edp_drrs_ops;
+}
diff --git a/drivers/video/adf/intel/include/core/common/dp/gen_dp_pipe.h b/drivers/video/adf/intel/include/core/common/dp/gen_dp_pipe.h
index ce63f7c..658320e 100644
--- a/drivers/video/adf/intel/include/core/common/dp/gen_dp_pipe.h
+++ b/drivers/video/adf/intel/include/core/common/dp/gen_dp_pipe.h
@@ -98,4 +98,5 @@ extern int
 intel_adf_dp_handle_events(struct dp_pipe *dp_pipe, u32 events);
 
 struct drrs_encoder_ops *intel_get_edp_drrs_ops(void);
+struct edp_drrs_platform_ops *get_vlv_edp_drrs_ops(void);
 #endif /* _INTEL_DP_PIPE_H_ */
-- 
1.7.9.5

