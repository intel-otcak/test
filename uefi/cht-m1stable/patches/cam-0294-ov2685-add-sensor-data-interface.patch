From 389cfd7788d9a10592c9554a8d52940b73d699a5 Mon Sep 17 00:00:00 2001
From: Shuguang Gong <shuguang.gong@intel.com>
Date: Thu, 5 Mar 2015 14:01:52 +0800
Subject: [PATCH 290/307] ov2685: add sensor data interface

The sensor data needs to be added to met HAL V3 requirement
for some CTS cases.

Change-Id: I78641f93f64a8b5ff6ad74ccc5ba46972be2aeb3
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-21306
Signed-off-by: Shuguang Gong <shuguang.gong@intel.com>
Reviewed-on: https://icggerrit.ir.intel.com/44751
Build: viefandr
Validation-Android: Wei Tao <wei.tao@intel.com>
Integrator: Wei Tao <wei.tao@intel.com>
Approver: Wei Tao <wei.tao@intel.com>
Build: Wei Tao <wei.tao@intel.com>
Reviewed-by: Wei Tao <wei.tao@intel.com>
Maintainer: Wei Tao <wei.tao@intel.com>
---
 .../camera/drivers/media/i2c/ov2685.c              |  148 +-
 .../camera/drivers/media/i2c/ov2685.h              | 1523 ++++++++++----------
 2 files changed, 886 insertions(+), 785 deletions(-)

diff --git a/drivers/external_drivers/camera/drivers/media/i2c/ov2685.c b/drivers/external_drivers/camera/drivers/media/i2c/ov2685.c
index 17b2a89..d29fda7 100644
--- a/drivers/external_drivers/camera/drivers/media/i2c/ov2685.c
+++ b/drivers/external_drivers/camera/drivers/media/i2c/ov2685.c
@@ -50,8 +50,8 @@ ov2685_read_reg(struct i2c_client *client, u16 data_length, u16 reg, u16 *val)
 		return -ENODEV;
 	}
 
-	if (data_length != MISENSOR_8BIT && data_length != MISENSOR_16BIT
-					 && data_length != MISENSOR_32BIT) {
+	if (data_length != OV2685_8BIT && data_length != OV2685_16BIT
+					 && data_length != OV2685_32BIT) {
 		dev_err(&client->dev, "%s error, invalid data length\n",
 			__func__);
 		return -EINVAL;
@@ -82,9 +82,9 @@ ov2685_read_reg(struct i2c_client *client, u16 data_length, u16 reg, u16 *val)
 
 	*val = 0;
 	/* high byte comes first */
-	if (data_length == MISENSOR_8BIT)
+	if (data_length == OV2685_8BIT)
 		*val = (u8)data[0];
-	else if (data_length == MISENSOR_16BIT)
+	else if (data_length == OV2685_16BIT)
 		*val = be16_to_cpu(*(u16 *)&data[0]);
 	else
 		*val = be32_to_cpu(*(u32 *)&data[0]);
@@ -110,8 +110,8 @@ ov2685_write_reg(struct i2c_client *client, u16 data_length, u16 reg, u32 val)
 		return -ENODEV;
 	}
 
-	if (data_length != MISENSOR_8BIT && data_length != MISENSOR_16BIT
-					 && data_length != MISENSOR_32BIT) {
+	if (data_length != OV2685_8BIT && data_length != OV2685_16BIT
+					 && data_length != OV2685_32BIT) {
 		dev_err(&client->dev, "%s error, invalid data_length\n",
 			__func__);
 		return -EINVAL;
@@ -129,9 +129,9 @@ again:
 	wreg = (u16 *)data;
 	*wreg = cpu_to_be16(reg);
 
-	if (data_length == MISENSOR_8BIT) {
+	if (data_length == OV2685_8BIT) {
 		data[2] = (u8)(val);
-	} else if (data_length == MISENSOR_16BIT) {
+	} else if (data_length == OV2685_16BIT) {
 		u16 *wdata = (u16 *)&data[2];
 		*wdata = cpu_to_be16((u16)val);
 	} else {
@@ -170,7 +170,7 @@ again:
  * @reglist: list of registers to be written
  *
  * Initializes a list of MT9T111 registers. The list of registers is
- * terminated by MISENSOR_TOK_TERM.
+ * terminated by OV2685_TOK_TERM.
  */
 static int ov2685_write_reg_array(struct i2c_client *client,
 			    const struct misensor_reg *reglist)
@@ -178,8 +178,8 @@ static int ov2685_write_reg_array(struct i2c_client *client,
 	const struct misensor_reg *next = reglist;
 	int err;
 
-	for (; next->length != MISENSOR_TOK_TERM; next++) {
-		if (next->length == MISENSOR_TOK_DELAY) {
+	for (; next->length != OV2685_TOK_TERM; next++) {
+		if (next->length == OV2685_TOK_DELAY) {
 			msleep(next->val);
 		} else {
 			err = ov2685_write_reg(client, next->length, next->reg,
@@ -300,28 +300,28 @@ static int ov2685_get_sysclk(struct v4l2_subdev *sd)
 	int pre_div0, pre_div2x, div_loop, sp_div, sys_div, vco;
 	int pre_div2x_map[] = {2, 3, 4, 5, 6, 8, 12, 16};
 
-	ov2685_read_reg(client, MISENSOR_8BIT,
+	ov2685_read_reg(client, OV2685_8BIT,
 			OV2685_REG_PLL_CTRL, &reg_val);
 	pre_div0 = ((reg_val >> 4) & 0x01) + 1;
 
-	ov2685_read_reg(client, MISENSOR_8BIT,
+	ov2685_read_reg(client, OV2685_8BIT,
 			OV2685_REG_PLL_PRE_DIV, &reg_val);
 	reg_val &= 0x07;
 	pre_div2x = pre_div2x_map[reg_val];
 
-	ov2685_read_reg(client, MISENSOR_8BIT,
+	ov2685_read_reg(client, OV2685_8BIT,
 				OV2685_REG_PLL_MULT_H, &reg_val);
 	div_loop = (reg_val & 0x01) << 8;
 
-	ov2685_read_reg(client, MISENSOR_8BIT,
+	ov2685_read_reg(client, OV2685_8BIT,
 				OV2685_REG_PLL_MULT_L, &reg_val);
 	div_loop += reg_val;
 
-	ov2685_read_reg(client, MISENSOR_8BIT,
+	ov2685_read_reg(client, OV2685_8BIT,
 				OV2685_REG_PLL_SP_DIV, &reg_val);
 	sp_div = (reg_val & 0x07) + 1;
 
-	ov2685_read_reg(client, MISENSOR_8BIT,
+	ov2685_read_reg(client, OV2685_8BIT,
 				OV2685_REG_PLL_SYS_DIV, &reg_val);
 
 	sys_div = (reg_val & 0x0f) + 1;
@@ -342,32 +342,32 @@ static int ov2685_g_exposure(struct v4l2_subdev *sd, s32 *value)
 	*value = OV2685_EXPOSURE_DEFAULT_VAL;
 
 	/* get exposure */
-	ret = ov2685_read_reg(client, MISENSOR_8BIT,
+	ret = ov2685_read_reg(client, OV2685_8BIT,
 					OV2685_REG_EXPOSURE_2,
 					&reg_v);
 	if (ret)
 		goto err;
 
-	ret = ov2685_read_reg(client, MISENSOR_8BIT,
+	ret = ov2685_read_reg(client, OV2685_8BIT,
 					OV2685_REG_EXPOSURE_1,
 					&reg_v2);
 	if (ret)
 		goto err;
 
 	reg_v = (reg_v >> 4) | (reg_v2 << 4);
-	ret = ov2685_read_reg(client, MISENSOR_8BIT,
+	ret = ov2685_read_reg(client, OV2685_8BIT,
 					OV2685_REG_EXPOSURE_0,
 					&reg_v2);
 	if (ret)
 		goto err;
 
-	ret = ov2685_read_reg(client, MISENSOR_8BIT,
+	ret = ov2685_read_reg(client, OV2685_8BIT,
 					OV2685_REG_HTS_H,
 					&hts);
 	if (ret)
 		goto err;
 
-	ret = ov2685_read_reg(client, MISENSOR_8BIT,
+	ret = ov2685_read_reg(client, OV2685_8BIT,
 					OV2685_REG_HTS_L,
 					&hts_v2);
 	if (ret)
@@ -397,35 +397,35 @@ static int ov2685_s_exposure(struct v4l2_subdev *sd, int value)
 
 	switch (value) {
 	case -2:
-		ov2685_write_reg(client, MISENSOR_8BIT,
+		ov2685_write_reg(client, OV2685_8BIT,
 			OV2685_REG_EXPOSURE_AUTO, 0x3);
-		ov2685_write_reg(client, MISENSOR_8BIT,
+		ov2685_write_reg(client, OV2685_8BIT,
 			OV2685_REG_EXPOSURE_1, 0x6);
 		break;
 	case -1:
-		ov2685_write_reg(client, MISENSOR_8BIT,
+		ov2685_write_reg(client, OV2685_8BIT,
 			OV2685_REG_EXPOSURE_AUTO, 0x3);
-		ov2685_write_reg(client, MISENSOR_8BIT,
+		ov2685_write_reg(client, OV2685_8BIT,
 			OV2685_REG_EXPOSURE_1, 0x16);
 		break;
 	case 0:
-		ov2685_write_reg(client, MISENSOR_8BIT,
+		ov2685_write_reg(client, OV2685_8BIT,
 			OV2685_REG_EXPOSURE_AUTO, 0x0);
 		break;
 	case 1:
-		ov2685_write_reg(client, MISENSOR_8BIT,
+		ov2685_write_reg(client, OV2685_8BIT,
 			OV2685_REG_EXPOSURE_AUTO, 0x3);
-		ov2685_write_reg(client, MISENSOR_8BIT,
+		ov2685_write_reg(client, OV2685_8BIT,
 			OV2685_REG_EXPOSURE_1, 0x36);
-		ov2685_write_reg(client, MISENSOR_8BIT,
+		ov2685_write_reg(client, OV2685_8BIT,
 			OV2685_REG_GAIN_1, 0x46);
 		break;
 	case 2:
-		ov2685_write_reg(client, MISENSOR_8BIT,
+		ov2685_write_reg(client, OV2685_8BIT,
 			OV2685_REG_EXPOSURE_AUTO, 0x3);
-		ov2685_write_reg(client, MISENSOR_8BIT,
+		ov2685_write_reg(client, OV2685_8BIT,
 			OV2685_REG_EXPOSURE_1, 0x46);
-		ov2685_write_reg(client, MISENSOR_8BIT,
+		ov2685_write_reg(client, OV2685_8BIT,
 			OV2685_REG_GAIN_1, 0x56);
 		break;
 	}
@@ -439,6 +439,67 @@ static int ov2685_g_fnumber(struct v4l2_subdev *sd, s32 *value)
 	*value = (OV2685_F_NUMBER_DEFAULT_NUM << 16) | OV2685_F_NUMBER_DEM;
 	return 0;
 }
+static int ov2685_get_intg_factor(struct i2c_client *client,
+				struct camera_mipi_info *info,
+				const struct ov2685_res_struct *res)
+{
+	struct atomisp_sensor_mode_data *buf = &info->data;
+	u16 reg_val;
+	int ret;
+
+	if (info == NULL)
+		return -EINVAL;
+
+	buf->vt_pix_clk_freq_mhz = res->pix_clk * 1000000;
+
+	/* get integration time */
+	buf->coarse_integration_time_min = OV2685_COARSE_INTG_TIME_MIN;
+	buf->coarse_integration_time_max_margin =
+					OV2685_COARSE_INTG_TIME_MAX_MARGIN;
+
+	buf->fine_integration_time_min = OV2685_FINE_INTG_TIME_MIN;
+	buf->fine_integration_time_max_margin =
+					OV2685_FINE_INTG_TIME_MAX_MARGIN;
+
+	buf->fine_integration_time_def = OV2685_FINE_INTG_TIME_MIN;
+	buf->frame_length_lines = res->lines_per_frame;
+	buf->line_length_pck = res->pixels_per_line;
+	buf->read_mode = res->bin_mode;
+
+	/* get the cropping and output resolution to ISP for this mode. */
+	ret =  ov2685_read_reg(client, OV2685_16BIT,
+					OV2685_REG_H_START_H, &reg_val);
+	if (ret)
+		return ret;
+	buf->crop_horizontal_start = reg_val;
+
+	ret =  ov2685_read_reg(client, OV2685_16BIT,
+					OV2685_REG_V_START_H, &reg_val);
+	if (ret)
+		return ret;
+	buf->crop_vertical_start = reg_val;
+
+	ret = ov2685_read_reg(client, OV2685_16BIT,
+					OV2685_REG_H_END_H, &reg_val);
+	if (ret)
+		return ret;
+	buf->crop_horizontal_end = reg_val;
+
+	ret = ov2685_read_reg(client, OV2685_16BIT,
+					OV2685_REG_V_END_H, &reg_val);
+	if (ret)
+		return ret;
+	buf->crop_vertical_end = reg_val;
+
+	buf->output_width = res->width;
+	buf->output_height = res->height;
+
+	buf->binning_factor_x = res->bin_factor_x ?
+					res->bin_factor_x : 1;
+	buf->binning_factor_y = res->bin_factor_y ?
+					res->bin_factor_y : 1;
+	return 0;
+}
 
 static long ov2685_ioctl(struct v4l2_subdev *sd, unsigned int cmd, void *arg)
 {
@@ -594,7 +655,7 @@ static int ov2685_g_mbus_fmt(struct v4l2_subdev *sd,
 static int ov2685_s_mbus_fmt(struct v4l2_subdev *sd,
 			      struct v4l2_mbus_framefmt *fmt)
 {
-	struct i2c_client *c = v4l2_get_subdevdata(sd);
+	struct i2c_client *client = v4l2_get_subdevdata(sd);
 	struct ov2685_device *dev = to_ov2685_sensor(sd);
 	int res_index;
 	struct camera_mipi_info *mipi_info = NULL;
@@ -603,7 +664,8 @@ static int ov2685_s_mbus_fmt(struct v4l2_subdev *sd,
 	int ret;
 	mipi_info = v4l2_get_subdev_hostdata(sd);
 	if (mipi_info == NULL) {
-		dev_err(&c->dev, "%s: can not find mipi info!!!\n", __func__);
+		dev_err(&client->dev, "%s: can not find mipi info!!!\n",
+							__func__);
 		return -EINVAL;
 	}
 
@@ -618,13 +680,13 @@ static int ov2685_s_mbus_fmt(struct v4l2_subdev *sd,
 		break;
 	*/
 	case OV2685_RES_720P:
-		ret = ov2685_write_reg_array(c, ov2685_720p_init);
+		ret = ov2685_write_reg_array(client, ov2685_720p_init);
 		break;
 	case OV2685_RES_2M:
-		ret = ov2685_write_reg_array(c, ov2685_2M_init);
+		ret = ov2685_write_reg_array(client, ov2685_2M_init);
 		break;
 	default:
-		dev_err(&c->dev, "%s: can not support the resolution!!!\n",
+		dev_err(&client->dev, "%s: can not support the resolution!!!\n",
 			__func__);
 
 		mutex_unlock(&dev->input_lock);
@@ -632,6 +694,12 @@ static int ov2685_s_mbus_fmt(struct v4l2_subdev *sd,
 	}
 
 	mipi_info->num_lanes = ov2685_res[res_index].lanes;
+
+	ret = ov2685_get_intg_factor(client, mipi_info,
+					&ov2685_res[res_index]);
+	if (ret)
+		dev_err(&client->dev, "failed to get integration_factor\n");
+
 	/*
 	 * ov2685 - we don't poll for context switch
 	 * because it does not happen with streaming disabled.
@@ -657,7 +725,7 @@ static int ov2685_detect(struct i2c_client *client,  u16 *id, u8 *revision)
 	 * try more times to check the sensor id.
 	 */
 	while (timeout > 0) {
-		if (ov2685_read_reg(client, MISENSOR_16BIT,
+		if (ov2685_read_reg(client, OV2685_16BIT,
 					OV2685_REG_PID, id)) {
 			dev_err(&client->dev, "sensor id error\n");
 			return -ENODEV;
@@ -948,7 +1016,7 @@ static int ov2685_s_stream(struct v4l2_subdev *sd, int enable)
 
 	mutex_lock(&dev->input_lock);
 	dev->streaming = enable;
-	ret = ov2685_write_reg(client, MISENSOR_8BIT,
+	ret = ov2685_write_reg(client, OV2685_8BIT,
 			0x301c,
 			enable ? 0xf0 : 0xf4);
 	mutex_unlock(&dev->input_lock);
diff --git a/drivers/external_drivers/camera/drivers/media/i2c/ov2685.h b/drivers/external_drivers/camera/drivers/media/i2c/ov2685.h
index 8193604..2e964ac 100644
--- a/drivers/external_drivers/camera/drivers/media/i2c/ov2685.h
+++ b/drivers/external_drivers/camera/drivers/media/i2c/ov2685.h
@@ -41,6 +41,11 @@
 #define OV2685_XVCLK	1920
 #define OV2685_EXPOSURE_DEFAULT_VAL 33 /* 33ms*/
 
+#define OV2685_FINE_INTG_TIME_MIN 0
+#define OV2685_FINE_INTG_TIME_MAX_MARGIN 0
+#define OV2685_COARSE_INTG_TIME_MIN 1
+#define OV2685_COARSE_INTG_TIME_MAX_MARGIN 0x4
+
 #define OV2685_FOCAL_LENGTH_NUM	270	/*2.70mm*/
 #define OV2685_FOCAL_LENGTH_DEM	100
 #define OV2685_F_NUMBER_DEFAULT_NUM	26
@@ -48,14 +53,14 @@
 #define OV2685_F_NUMBER_DEFAULT 0x16000a
 
 /* #defines for register writes and register array processing */
-#define MISENSOR_8BIT		1
-#define MISENSOR_16BIT		2
-#define MISENSOR_32BIT		4
+#define OV2685_8BIT		1
+#define OV2685_16BIT		2
+#define OV2685_32BIT		4
 
-#define MISENSOR_TOK_TERM	0xf000	/* terminating token for reg list */
-#define MISENSOR_TOK_DELAY	0xfe00	/* delay token for reg list */
-#define MISENSOR_TOK_FWLOAD	0xfd00	/* token indicating load FW */
-#define MISENSOR_TOK_POLL	0xfc00	/* token indicating poll instruction */
+#define OV2685_TOK_TERM	0xf000	/* terminating token for reg list */
+#define OV2685_TOK_DELAY	0xfe00	/* delay token for reg list */
+#define OV2685_TOK_FWLOAD	0xfd00	/* token indicating load FW */
+#define OV2685_TOK_POLL	0xfc00	/* token indicating poll instruction */
 
 #define I2C_RETRY_COUNT		5
 #define MSG_LEN_OFFSET		2
@@ -79,6 +84,18 @@
 #define OV2685_REG_PID	0x300a
 #define OV2685_REG_SYS_RESET	0x3000
 #define OV2685_REG_FW_START	0x8000
+#define OV2685_REG_H_START_H	0x3800
+#define OV2685_REG_H_START_L	0x3801
+#define OV2685_REG_V_START_H	0x3802
+#define OV2685_REG_V_START_L	0x3803
+#define OV2685_REG_H_END_H	0x3804
+#define OV2685_REG_H_END_L	0x3805
+#define OV2685_REG_V_END_H	0x3806
+#define OV2685_REG_V_END_L	0x3807
+#define OV2685_REG_H_SIZE_H	0x3808
+#define OV2685_REG_H_SIZE_L	0x3809
+#define OV2685_REG_V_SIZE_H	0x380a
+#define OV2685_REG_V_SIZE_L	0x380b
 
 /*value */
 #define OV2685_FRAME_START	0x01
@@ -190,9 +207,15 @@ struct ov2685_res_struct {
 	int res;
 	int width;
 	int height;
+	u16 pixels_per_line;
+	u16 lines_per_frame;
 	int fps;
+	int pix_clk;
 	int skip_frames;
 	int lanes;
+	u8 bin_mode;
+	u8 bin_factor_x;
+	u8 bin_factor_y;
 	bool used;
 	struct regval_list *regs;
 };
@@ -226,22 +249,32 @@ static struct ov2685_res_struct ov2685_res[] = {
 	.res	= OV2685_RES_720P,
 	.width	= 1280,
 	.height	= 720,
+	.pixels_per_line = 1446,
+	.lines_per_frame = 760,
 	.fps	= 30,
+	.pix_clk = 33,
 	.used	= 0,
 	.regs	= NULL,
 	.skip_frames = 1,
 	.lanes = 1,
+	.bin_mode = 0,
+	.bin_factor_x = 0,
 	},
 	{
 	.desc	= "2M",
 	.res	= OV2685_RES_2M,
 	.width	= 1600,
 	.height	= 1200,
+	.pixels_per_line = 1700,
+	.lines_per_frame = 1294,
 	.fps	= 30,
+	.pix_clk = 66,
 	.used	= 0,
 	.regs	= NULL,
 	.skip_frames = 0,
 	.lanes = 2,
+	.bin_mode = 0,
+	.bin_factor_x = 0,
 	},
 };
 #define N_RES (ARRAY_SIZE(ov2685_res))
@@ -253,758 +286,758 @@ static const struct i2c_device_id ov2685_id[] = {
 
 static struct misensor_reg const ov2685_2M_init[] = {
 	/*2lanes, 30fps*/
-	{MISENSOR_8BIT, 0x0103 , 0x01},
-	{MISENSOR_8BIT, 0x3002 , 0x00},
-	{MISENSOR_8BIT, 0x3016 , 0x1c},
-	{MISENSOR_8BIT, 0x3018 , 0x84},
-	{MISENSOR_8BIT, 0x301d , 0xf0},
-	{MISENSOR_8BIT, 0x3020 , 0x00},
-	{MISENSOR_8BIT, 0x3082 , 0x37},/*mclk = 19.2Mhz*/
-	{MISENSOR_8BIT, 0x3083 , 0x03},
-	{MISENSOR_8BIT, 0x3084 , 0x07},
-	{MISENSOR_8BIT, 0x3085 , 0x03},
-	{MISENSOR_8BIT, 0x3086 , 0x00},
-	{MISENSOR_8BIT, 0x3087 , 0x00},
-	{MISENSOR_8BIT, 0x3501 , 0x4e},
-	{MISENSOR_8BIT, 0x3502 , 0xe0},
-	{MISENSOR_8BIT, 0x3503 , 0x03},
-	{MISENSOR_8BIT, 0x350b , 0x36},
-	{MISENSOR_8BIT, 0x3600 , 0xb4},
-	{MISENSOR_8BIT, 0x3603 , 0x35},
-	{MISENSOR_8BIT, 0x3604 , 0x24},
-	{MISENSOR_8BIT, 0x3605 , 0x00},
-	{MISENSOR_8BIT, 0x3620 , 0x24},
-	{MISENSOR_8BIT, 0x3621 , 0x34},
-	{MISENSOR_8BIT, 0x3622 , 0x03},
-	{MISENSOR_8BIT, 0x3628 , 0x10},
-	{MISENSOR_8BIT, 0x3705 , 0x3c},
-	{MISENSOR_8BIT, 0x370a , 0x21},
-	{MISENSOR_8BIT, 0x370c , 0x50},
-	{MISENSOR_8BIT, 0x370d , 0xc0},
-	{MISENSOR_8BIT, 0x3717 , 0x58},
-	{MISENSOR_8BIT, 0x3718 , 0x80},
-	{MISENSOR_8BIT, 0x3720 , 0x00},
-	{MISENSOR_8BIT, 0x3721 , 0x09},
-	{MISENSOR_8BIT, 0x3722 , 0x06},
-	{MISENSOR_8BIT, 0x3723 , 0x59},
-	{MISENSOR_8BIT, 0x3738 , 0x99},
-	{MISENSOR_8BIT, 0x3781 , 0x80},
-	{MISENSOR_8BIT, 0x3784 , 0x0c},
-	{MISENSOR_8BIT, 0x3789 , 0x60},
-	{MISENSOR_8BIT, 0x3800 , 0x00},
-	{MISENSOR_8BIT, 0x3801 , 0x00},
-	{MISENSOR_8BIT, 0x3802 , 0x00},
-	{MISENSOR_8BIT, 0x3803 , 0x00},
-	{MISENSOR_8BIT, 0x3804 , 0x06},
-	{MISENSOR_8BIT, 0x3805 , 0x4f},
-	{MISENSOR_8BIT, 0x3806 , 0x04},
-	{MISENSOR_8BIT, 0x3807 , 0xbf},
-	{MISENSOR_8BIT, 0x3808 , 0x06},
-	{MISENSOR_8BIT, 0x3809 , 0x40},
-	{MISENSOR_8BIT, 0x380a , 0x04},
-	{MISENSOR_8BIT, 0x380b , 0xb0},
-	{MISENSOR_8BIT, 0x380c , 0x06},
-	{MISENSOR_8BIT, 0x380d , 0xa4},
-	{MISENSOR_8BIT, 0x380e , 0x05},
-	{MISENSOR_8BIT, 0x380f , 0x0e},
-	{MISENSOR_8BIT, 0x3810 , 0x00},
-	{MISENSOR_8BIT, 0x3811 , 0x08},
-	{MISENSOR_8BIT, 0x3812 , 0x00},
-	{MISENSOR_8BIT, 0x3813 , 0x08},
-	{MISENSOR_8BIT, 0x3814 , 0x11},
-	{MISENSOR_8BIT, 0x3815 , 0x11},
-	{MISENSOR_8BIT, 0x3819 , 0x04},
-	{MISENSOR_8BIT, 0x3820 , 0xc0},
-	{MISENSOR_8BIT, 0x3821 , 0x00},
-	{MISENSOR_8BIT, 0x3a06 , 0x01},
-	{MISENSOR_8BIT, 0x3a07 , 0x84},
-	{MISENSOR_8BIT, 0x3a08 , 0x01},
-	{MISENSOR_8BIT, 0x3a09 , 0x43},
-	{MISENSOR_8BIT, 0x3a0a , 0x24},
-	{MISENSOR_8BIT, 0x3a0b , 0x60},
-	{MISENSOR_8BIT, 0x3a0c , 0x28},
-	{MISENSOR_8BIT, 0x3a0d , 0x60},
-	{MISENSOR_8BIT, 0x3a0e , 0x04},
-	{MISENSOR_8BIT, 0x3a0f , 0x8c},
-	{MISENSOR_8BIT, 0x3a10 , 0x05},
-	{MISENSOR_8BIT, 0x3a11 , 0x0c},
-	{MISENSOR_8BIT, 0x4000 , 0x81},
-	{MISENSOR_8BIT, 0x4001 , 0x40},
-	{MISENSOR_8BIT, 0x4008 , 0x02},
-	{MISENSOR_8BIT, 0x4009 , 0x09},
-	{MISENSOR_8BIT, 0x4300 , 0x32},
-	{MISENSOR_8BIT, 0x430e , 0x00},
-	{MISENSOR_8BIT, 0x4602 , 0x02},
-	{MISENSOR_8BIT, 0x4837 , 0x1e},
-	{MISENSOR_8BIT, 0x5000 , 0xff},
-	{MISENSOR_8BIT, 0x5001 , 0x05},
-	{MISENSOR_8BIT, 0x5002 , 0x32},
-	{MISENSOR_8BIT, 0x5003 , 0x04},
-	{MISENSOR_8BIT, 0x5004 , 0xff},
-	{MISENSOR_8BIT, 0x5005 , 0x12},
-	{MISENSOR_8BIT, 0x0100 , 0x01},
-	{MISENSOR_8BIT, 0x5180 , 0xf4},
-	{MISENSOR_8BIT, 0x5181 , 0x11},
-	{MISENSOR_8BIT, 0x5182 , 0x41},
-	{MISENSOR_8BIT, 0x5183 , 0x42},
-	{MISENSOR_8BIT, 0x5184 , 0x78},
-	{MISENSOR_8BIT, 0x5185 , 0x58},
-	{MISENSOR_8BIT, 0x5186 , 0xb5},
-	{MISENSOR_8BIT, 0x5187 , 0xb2},
-	{MISENSOR_8BIT, 0x5188 , 0x08},
-	{MISENSOR_8BIT, 0x5189 , 0x0e},
-	{MISENSOR_8BIT, 0x518a , 0x0c},
-	{MISENSOR_8BIT, 0x518b , 0x4c},
-	{MISENSOR_8BIT, 0x518c , 0x38},
-	{MISENSOR_8BIT, 0x518d , 0xf8},
-	{MISENSOR_8BIT, 0x518e , 0x04},
-	{MISENSOR_8BIT, 0x518f , 0x7f},
-	{MISENSOR_8BIT, 0x5190 , 0x40},
-	{MISENSOR_8BIT, 0x5191 , 0x5f},
-	{MISENSOR_8BIT, 0x5192 , 0x40},
-	{MISENSOR_8BIT, 0x5193 , 0xff},
-	{MISENSOR_8BIT, 0x5194 , 0x40},
-	{MISENSOR_8BIT, 0x5195 , 0x07},
-	{MISENSOR_8BIT, 0x5196 , 0x04},
-	{MISENSOR_8BIT, 0x5197 , 0x04},
-	{MISENSOR_8BIT, 0x5198 , 0x00},
-	{MISENSOR_8BIT, 0x5199 , 0x05},
-	{MISENSOR_8BIT, 0x519a , 0xd2},
-	{MISENSOR_8BIT, 0x519b , 0x10},
-	{MISENSOR_8BIT, 0x5200 , 0x09},
-	{MISENSOR_8BIT, 0x5201 , 0x00},
-	{MISENSOR_8BIT, 0x5202 , 0x06},
-	{MISENSOR_8BIT, 0x5203 , 0x20},
-	{MISENSOR_8BIT, 0x5204 , 0x41},
-	{MISENSOR_8BIT, 0x5205 , 0x16},
-	{MISENSOR_8BIT, 0x5206 , 0x00},
-	{MISENSOR_8BIT, 0x5207 , 0x05},
-	{MISENSOR_8BIT, 0x520b , 0x30},
-	{MISENSOR_8BIT, 0x520c , 0x75},
-	{MISENSOR_8BIT, 0x520d , 0x00},
-	{MISENSOR_8BIT, 0x520e , 0x30},
-	{MISENSOR_8BIT, 0x520f , 0x75},
-	{MISENSOR_8BIT, 0x5210 , 0x00},
-	{MISENSOR_8BIT, 0x5280 , 0x14},
-	{MISENSOR_8BIT, 0x5281 , 0x02},
-	{MISENSOR_8BIT, 0x5282 , 0x02},
-	{MISENSOR_8BIT, 0x5283 , 0x04},
-	{MISENSOR_8BIT, 0x5284 , 0x06},
-	{MISENSOR_8BIT, 0x5285 , 0x08},
-	{MISENSOR_8BIT, 0x5286 , 0x0c},
-	{MISENSOR_8BIT, 0x5287 , 0x10},
-	{MISENSOR_8BIT, 0x5300 , 0xc5},
-	{MISENSOR_8BIT, 0x5301 , 0xa0},
-	{MISENSOR_8BIT, 0x5302 , 0x06},
-	{MISENSOR_8BIT, 0x5303 , 0x0a},
-	{MISENSOR_8BIT, 0x5304 , 0x30},
-	{MISENSOR_8BIT, 0x5305 , 0x60},
-	{MISENSOR_8BIT, 0x5306 , 0x90},
-	{MISENSOR_8BIT, 0x5307 , 0xc0},
-	{MISENSOR_8BIT, 0x5308 , 0x82},
-	{MISENSOR_8BIT, 0x5309 , 0x00},
-	{MISENSOR_8BIT, 0x530a , 0x26},
-	{MISENSOR_8BIT, 0x530b , 0x02},
-	{MISENSOR_8BIT, 0x530c , 0x02},
-	{MISENSOR_8BIT, 0x530d , 0x00},
-	{MISENSOR_8BIT, 0x530e , 0x0c},
-	{MISENSOR_8BIT, 0x530f , 0x14},
-	{MISENSOR_8BIT, 0x5310 , 0x1a},
-	{MISENSOR_8BIT, 0x5311 , 0x20},
-	{MISENSOR_8BIT, 0x5312 , 0x80},
-	{MISENSOR_8BIT, 0x5313 , 0x4b},
-	{MISENSOR_8BIT, 0x5380 , 0x01},
-	{MISENSOR_8BIT, 0x5381 , 0x52},
-	{MISENSOR_8BIT, 0x5382 , 0x00},
-	{MISENSOR_8BIT, 0x5383 , 0x4a},
-	{MISENSOR_8BIT, 0x5384 , 0x00},
-	{MISENSOR_8BIT, 0x5385 , 0xb6},
-	{MISENSOR_8BIT, 0x5386 , 0x00},
-	{MISENSOR_8BIT, 0x5387 , 0x8d},
-	{MISENSOR_8BIT, 0x5388 , 0x00},
-	{MISENSOR_8BIT, 0x5389 , 0x3a},
-	{MISENSOR_8BIT, 0x538a , 0x00},
-	{MISENSOR_8BIT, 0x538b , 0xa6},
-	{MISENSOR_8BIT, 0x538c , 0x00},
-	{MISENSOR_8BIT, 0x5400 , 0x0d},
-	{MISENSOR_8BIT, 0x5401 , 0x18},
-	{MISENSOR_8BIT, 0x5402 , 0x31},
-	{MISENSOR_8BIT, 0x5403 , 0x5a},
-	{MISENSOR_8BIT, 0x5404 , 0x65},
-	{MISENSOR_8BIT, 0x5405 , 0x6f},
-	{MISENSOR_8BIT, 0x5406 , 0x77},
-	{MISENSOR_8BIT, 0x5407 , 0x80},
-	{MISENSOR_8BIT, 0x5408 , 0x87},
-	{MISENSOR_8BIT, 0x5409 , 0x8f},
-	{MISENSOR_8BIT, 0x540a , 0xa2},
-	{MISENSOR_8BIT, 0x540b , 0xb2},
-	{MISENSOR_8BIT, 0x540c , 0xcc},
-	{MISENSOR_8BIT, 0x540d , 0xe4},
-	{MISENSOR_8BIT, 0x540e , 0xf0},
-	{MISENSOR_8BIT, 0x540f , 0xa0},
-	{MISENSOR_8BIT, 0x5410 , 0x6e},
-	{MISENSOR_8BIT, 0x5411 , 0x06},
-	{MISENSOR_8BIT, 0x5480 , 0x19},
-	{MISENSOR_8BIT, 0x5481 , 0x00},
-	{MISENSOR_8BIT, 0x5482 , 0x09},
-	{MISENSOR_8BIT, 0x5483 , 0x12},
-	{MISENSOR_8BIT, 0x5484 , 0x04},
-	{MISENSOR_8BIT, 0x5485 , 0x06},
-	{MISENSOR_8BIT, 0x5486 , 0x08},
-	{MISENSOR_8BIT, 0x5487 , 0x0c},
-	{MISENSOR_8BIT, 0x5488 , 0x10},
-	{MISENSOR_8BIT, 0x5489 , 0x18},
-	{MISENSOR_8BIT, 0x5500 , 0x02},
-	{MISENSOR_8BIT, 0x5501 , 0x03},
-	{MISENSOR_8BIT, 0x5502 , 0x04},
-	{MISENSOR_8BIT, 0x5503 , 0x05},
-	{MISENSOR_8BIT, 0x5504 , 0x06},
-	{MISENSOR_8BIT, 0x5505 , 0x08},
-	{MISENSOR_8BIT, 0x5506 , 0x00},
-	{MISENSOR_8BIT, 0x5600 , 0x02},
-	{MISENSOR_8BIT, 0x5603 , 0x40},
-	{MISENSOR_8BIT, 0x5604 , 0x28},
-	{MISENSOR_8BIT, 0x5609 , 0x20},
-	{MISENSOR_8BIT, 0x560a , 0x60},
-	{MISENSOR_8BIT, 0x5800 , 0x03},
-	{MISENSOR_8BIT, 0x5801 , 0x24},
-	{MISENSOR_8BIT, 0x5802 , 0x02},
-	{MISENSOR_8BIT, 0x5803 , 0x40},
-	{MISENSOR_8BIT, 0x5804 , 0x34},
-	{MISENSOR_8BIT, 0x5805 , 0x05},
-	{MISENSOR_8BIT, 0x5806 , 0x12},
-	{MISENSOR_8BIT, 0x5807 , 0x05},
-	{MISENSOR_8BIT, 0x5808 , 0x03},
-	{MISENSOR_8BIT, 0x5809 , 0x3c},
-	{MISENSOR_8BIT, 0x580a , 0x02},
-	{MISENSOR_8BIT, 0x580b , 0x40},
-	{MISENSOR_8BIT, 0x580c , 0x26},
-	{MISENSOR_8BIT, 0x580d , 0x05},
-	{MISENSOR_8BIT, 0x580e , 0x52},
-	{MISENSOR_8BIT, 0x580f , 0x06},
-	{MISENSOR_8BIT, 0x5810 , 0x03},
-	{MISENSOR_8BIT, 0x5811 , 0x28},
-	{MISENSOR_8BIT, 0x5812 , 0x02},
-	{MISENSOR_8BIT, 0x5813 , 0x40},
-	{MISENSOR_8BIT, 0x5814 , 0x24},
-	{MISENSOR_8BIT, 0x5815 , 0x05},
-	{MISENSOR_8BIT, 0x5816 , 0x42},
-	{MISENSOR_8BIT, 0x5817 , 0x06},
-	{MISENSOR_8BIT, 0x5818 , 0x0d},
-	{MISENSOR_8BIT, 0x5819 , 0x40},
-	{MISENSOR_8BIT, 0x581a , 0x04},
-	{MISENSOR_8BIT, 0x581b , 0x0c},
-	{MISENSOR_8BIT, 0x3a03 , 0x4c},
-	{MISENSOR_8BIT, 0x3a04 , 0x40},
-	{MISENSOR_8BIT, 0x3503 , 0x00},
-	{MISENSOR_TOK_TERM, 0, 0}
+	{OV2685_8BIT, 0x0103 , 0x01},
+	{OV2685_8BIT, 0x3002 , 0x00},
+	{OV2685_8BIT, 0x3016 , 0x1c},
+	{OV2685_8BIT, 0x3018 , 0x84},
+	{OV2685_8BIT, 0x301d , 0xf0},
+	{OV2685_8BIT, 0x3020 , 0x00},
+	{OV2685_8BIT, 0x3082 , 0x37},/*mclk = 19.2Mhz*/
+	{OV2685_8BIT, 0x3083 , 0x03},
+	{OV2685_8BIT, 0x3084 , 0x07},
+	{OV2685_8BIT, 0x3085 , 0x03},
+	{OV2685_8BIT, 0x3086 , 0x00},
+	{OV2685_8BIT, 0x3087 , 0x00},
+	{OV2685_8BIT, 0x3501 , 0x4e},
+	{OV2685_8BIT, 0x3502 , 0xe0},
+	{OV2685_8BIT, 0x3503 , 0x03},
+	{OV2685_8BIT, 0x350b , 0x36},
+	{OV2685_8BIT, 0x3600 , 0xb4},
+	{OV2685_8BIT, 0x3603 , 0x35},
+	{OV2685_8BIT, 0x3604 , 0x24},
+	{OV2685_8BIT, 0x3605 , 0x00},
+	{OV2685_8BIT, 0x3620 , 0x24},
+	{OV2685_8BIT, 0x3621 , 0x34},
+	{OV2685_8BIT, 0x3622 , 0x03},
+	{OV2685_8BIT, 0x3628 , 0x10},
+	{OV2685_8BIT, 0x3705 , 0x3c},
+	{OV2685_8BIT, 0x370a , 0x21},
+	{OV2685_8BIT, 0x370c , 0x50},
+	{OV2685_8BIT, 0x370d , 0xc0},
+	{OV2685_8BIT, 0x3717 , 0x58},
+	{OV2685_8BIT, 0x3718 , 0x80},
+	{OV2685_8BIT, 0x3720 , 0x00},
+	{OV2685_8BIT, 0x3721 , 0x09},
+	{OV2685_8BIT, 0x3722 , 0x06},
+	{OV2685_8BIT, 0x3723 , 0x59},
+	{OV2685_8BIT, 0x3738 , 0x99},
+	{OV2685_8BIT, 0x3781 , 0x80},
+	{OV2685_8BIT, 0x3784 , 0x0c},
+	{OV2685_8BIT, 0x3789 , 0x60},
+	{OV2685_8BIT, 0x3800 , 0x00},
+	{OV2685_8BIT, 0x3801 , 0x00},
+	{OV2685_8BIT, 0x3802 , 0x00},
+	{OV2685_8BIT, 0x3803 , 0x00},
+	{OV2685_8BIT, 0x3804 , 0x06},
+	{OV2685_8BIT, 0x3805 , 0x4f},
+	{OV2685_8BIT, 0x3806 , 0x04},
+	{OV2685_8BIT, 0x3807 , 0xbf},
+	{OV2685_8BIT, 0x3808 , 0x06},
+	{OV2685_8BIT, 0x3809 , 0x40},
+	{OV2685_8BIT, 0x380a , 0x04},
+	{OV2685_8BIT, 0x380b , 0xb0},
+	{OV2685_8BIT, 0x380c , 0x06},
+	{OV2685_8BIT, 0x380d , 0xa4},
+	{OV2685_8BIT, 0x380e , 0x05},
+	{OV2685_8BIT, 0x380f , 0x0e},
+	{OV2685_8BIT, 0x3810 , 0x00},
+	{OV2685_8BIT, 0x3811 , 0x08},
+	{OV2685_8BIT, 0x3812 , 0x00},
+	{OV2685_8BIT, 0x3813 , 0x08},
+	{OV2685_8BIT, 0x3814 , 0x11},
+	{OV2685_8BIT, 0x3815 , 0x11},
+	{OV2685_8BIT, 0x3819 , 0x04},
+	{OV2685_8BIT, 0x3820 , 0xc0},
+	{OV2685_8BIT, 0x3821 , 0x00},
+	{OV2685_8BIT, 0x3a06 , 0x01},
+	{OV2685_8BIT, 0x3a07 , 0x84},
+	{OV2685_8BIT, 0x3a08 , 0x01},
+	{OV2685_8BIT, 0x3a09 , 0x43},
+	{OV2685_8BIT, 0x3a0a , 0x24},
+	{OV2685_8BIT, 0x3a0b , 0x60},
+	{OV2685_8BIT, 0x3a0c , 0x28},
+	{OV2685_8BIT, 0x3a0d , 0x60},
+	{OV2685_8BIT, 0x3a0e , 0x04},
+	{OV2685_8BIT, 0x3a0f , 0x8c},
+	{OV2685_8BIT, 0x3a10 , 0x05},
+	{OV2685_8BIT, 0x3a11 , 0x0c},
+	{OV2685_8BIT, 0x4000 , 0x81},
+	{OV2685_8BIT, 0x4001 , 0x40},
+	{OV2685_8BIT, 0x4008 , 0x02},
+	{OV2685_8BIT, 0x4009 , 0x09},
+	{OV2685_8BIT, 0x4300 , 0x32},
+	{OV2685_8BIT, 0x430e , 0x00},
+	{OV2685_8BIT, 0x4602 , 0x02},
+	{OV2685_8BIT, 0x4837 , 0x1e},
+	{OV2685_8BIT, 0x5000 , 0xff},
+	{OV2685_8BIT, 0x5001 , 0x05},
+	{OV2685_8BIT, 0x5002 , 0x32},
+	{OV2685_8BIT, 0x5003 , 0x04},
+	{OV2685_8BIT, 0x5004 , 0xff},
+	{OV2685_8BIT, 0x5005 , 0x12},
+	{OV2685_8BIT, 0x0100 , 0x01},
+	{OV2685_8BIT, 0x5180 , 0xf4},
+	{OV2685_8BIT, 0x5181 , 0x11},
+	{OV2685_8BIT, 0x5182 , 0x41},
+	{OV2685_8BIT, 0x5183 , 0x42},
+	{OV2685_8BIT, 0x5184 , 0x78},
+	{OV2685_8BIT, 0x5185 , 0x58},
+	{OV2685_8BIT, 0x5186 , 0xb5},
+	{OV2685_8BIT, 0x5187 , 0xb2},
+	{OV2685_8BIT, 0x5188 , 0x08},
+	{OV2685_8BIT, 0x5189 , 0x0e},
+	{OV2685_8BIT, 0x518a , 0x0c},
+	{OV2685_8BIT, 0x518b , 0x4c},
+	{OV2685_8BIT, 0x518c , 0x38},
+	{OV2685_8BIT, 0x518d , 0xf8},
+	{OV2685_8BIT, 0x518e , 0x04},
+	{OV2685_8BIT, 0x518f , 0x7f},
+	{OV2685_8BIT, 0x5190 , 0x40},
+	{OV2685_8BIT, 0x5191 , 0x5f},
+	{OV2685_8BIT, 0x5192 , 0x40},
+	{OV2685_8BIT, 0x5193 , 0xff},
+	{OV2685_8BIT, 0x5194 , 0x40},
+	{OV2685_8BIT, 0x5195 , 0x07},
+	{OV2685_8BIT, 0x5196 , 0x04},
+	{OV2685_8BIT, 0x5197 , 0x04},
+	{OV2685_8BIT, 0x5198 , 0x00},
+	{OV2685_8BIT, 0x5199 , 0x05},
+	{OV2685_8BIT, 0x519a , 0xd2},
+	{OV2685_8BIT, 0x519b , 0x10},
+	{OV2685_8BIT, 0x5200 , 0x09},
+	{OV2685_8BIT, 0x5201 , 0x00},
+	{OV2685_8BIT, 0x5202 , 0x06},
+	{OV2685_8BIT, 0x5203 , 0x20},
+	{OV2685_8BIT, 0x5204 , 0x41},
+	{OV2685_8BIT, 0x5205 , 0x16},
+	{OV2685_8BIT, 0x5206 , 0x00},
+	{OV2685_8BIT, 0x5207 , 0x05},
+	{OV2685_8BIT, 0x520b , 0x30},
+	{OV2685_8BIT, 0x520c , 0x75},
+	{OV2685_8BIT, 0x520d , 0x00},
+	{OV2685_8BIT, 0x520e , 0x30},
+	{OV2685_8BIT, 0x520f , 0x75},
+	{OV2685_8BIT, 0x5210 , 0x00},
+	{OV2685_8BIT, 0x5280 , 0x14},
+	{OV2685_8BIT, 0x5281 , 0x02},
+	{OV2685_8BIT, 0x5282 , 0x02},
+	{OV2685_8BIT, 0x5283 , 0x04},
+	{OV2685_8BIT, 0x5284 , 0x06},
+	{OV2685_8BIT, 0x5285 , 0x08},
+	{OV2685_8BIT, 0x5286 , 0x0c},
+	{OV2685_8BIT, 0x5287 , 0x10},
+	{OV2685_8BIT, 0x5300 , 0xc5},
+	{OV2685_8BIT, 0x5301 , 0xa0},
+	{OV2685_8BIT, 0x5302 , 0x06},
+	{OV2685_8BIT, 0x5303 , 0x0a},
+	{OV2685_8BIT, 0x5304 , 0x30},
+	{OV2685_8BIT, 0x5305 , 0x60},
+	{OV2685_8BIT, 0x5306 , 0x90},
+	{OV2685_8BIT, 0x5307 , 0xc0},
+	{OV2685_8BIT, 0x5308 , 0x82},
+	{OV2685_8BIT, 0x5309 , 0x00},
+	{OV2685_8BIT, 0x530a , 0x26},
+	{OV2685_8BIT, 0x530b , 0x02},
+	{OV2685_8BIT, 0x530c , 0x02},
+	{OV2685_8BIT, 0x530d , 0x00},
+	{OV2685_8BIT, 0x530e , 0x0c},
+	{OV2685_8BIT, 0x530f , 0x14},
+	{OV2685_8BIT, 0x5310 , 0x1a},
+	{OV2685_8BIT, 0x5311 , 0x20},
+	{OV2685_8BIT, 0x5312 , 0x80},
+	{OV2685_8BIT, 0x5313 , 0x4b},
+	{OV2685_8BIT, 0x5380 , 0x01},
+	{OV2685_8BIT, 0x5381 , 0x52},
+	{OV2685_8BIT, 0x5382 , 0x00},
+	{OV2685_8BIT, 0x5383 , 0x4a},
+	{OV2685_8BIT, 0x5384 , 0x00},
+	{OV2685_8BIT, 0x5385 , 0xb6},
+	{OV2685_8BIT, 0x5386 , 0x00},
+	{OV2685_8BIT, 0x5387 , 0x8d},
+	{OV2685_8BIT, 0x5388 , 0x00},
+	{OV2685_8BIT, 0x5389 , 0x3a},
+	{OV2685_8BIT, 0x538a , 0x00},
+	{OV2685_8BIT, 0x538b , 0xa6},
+	{OV2685_8BIT, 0x538c , 0x00},
+	{OV2685_8BIT, 0x5400 , 0x0d},
+	{OV2685_8BIT, 0x5401 , 0x18},
+	{OV2685_8BIT, 0x5402 , 0x31},
+	{OV2685_8BIT, 0x5403 , 0x5a},
+	{OV2685_8BIT, 0x5404 , 0x65},
+	{OV2685_8BIT, 0x5405 , 0x6f},
+	{OV2685_8BIT, 0x5406 , 0x77},
+	{OV2685_8BIT, 0x5407 , 0x80},
+	{OV2685_8BIT, 0x5408 , 0x87},
+	{OV2685_8BIT, 0x5409 , 0x8f},
+	{OV2685_8BIT, 0x540a , 0xa2},
+	{OV2685_8BIT, 0x540b , 0xb2},
+	{OV2685_8BIT, 0x540c , 0xcc},
+	{OV2685_8BIT, 0x540d , 0xe4},
+	{OV2685_8BIT, 0x540e , 0xf0},
+	{OV2685_8BIT, 0x540f , 0xa0},
+	{OV2685_8BIT, 0x5410 , 0x6e},
+	{OV2685_8BIT, 0x5411 , 0x06},
+	{OV2685_8BIT, 0x5480 , 0x19},
+	{OV2685_8BIT, 0x5481 , 0x00},
+	{OV2685_8BIT, 0x5482 , 0x09},
+	{OV2685_8BIT, 0x5483 , 0x12},
+	{OV2685_8BIT, 0x5484 , 0x04},
+	{OV2685_8BIT, 0x5485 , 0x06},
+	{OV2685_8BIT, 0x5486 , 0x08},
+	{OV2685_8BIT, 0x5487 , 0x0c},
+	{OV2685_8BIT, 0x5488 , 0x10},
+	{OV2685_8BIT, 0x5489 , 0x18},
+	{OV2685_8BIT, 0x5500 , 0x02},
+	{OV2685_8BIT, 0x5501 , 0x03},
+	{OV2685_8BIT, 0x5502 , 0x04},
+	{OV2685_8BIT, 0x5503 , 0x05},
+	{OV2685_8BIT, 0x5504 , 0x06},
+	{OV2685_8BIT, 0x5505 , 0x08},
+	{OV2685_8BIT, 0x5506 , 0x00},
+	{OV2685_8BIT, 0x5600 , 0x02},
+	{OV2685_8BIT, 0x5603 , 0x40},
+	{OV2685_8BIT, 0x5604 , 0x28},
+	{OV2685_8BIT, 0x5609 , 0x20},
+	{OV2685_8BIT, 0x560a , 0x60},
+	{OV2685_8BIT, 0x5800 , 0x03},
+	{OV2685_8BIT, 0x5801 , 0x24},
+	{OV2685_8BIT, 0x5802 , 0x02},
+	{OV2685_8BIT, 0x5803 , 0x40},
+	{OV2685_8BIT, 0x5804 , 0x34},
+	{OV2685_8BIT, 0x5805 , 0x05},
+	{OV2685_8BIT, 0x5806 , 0x12},
+	{OV2685_8BIT, 0x5807 , 0x05},
+	{OV2685_8BIT, 0x5808 , 0x03},
+	{OV2685_8BIT, 0x5809 , 0x3c},
+	{OV2685_8BIT, 0x580a , 0x02},
+	{OV2685_8BIT, 0x580b , 0x40},
+	{OV2685_8BIT, 0x580c , 0x26},
+	{OV2685_8BIT, 0x580d , 0x05},
+	{OV2685_8BIT, 0x580e , 0x52},
+	{OV2685_8BIT, 0x580f , 0x06},
+	{OV2685_8BIT, 0x5810 , 0x03},
+	{OV2685_8BIT, 0x5811 , 0x28},
+	{OV2685_8BIT, 0x5812 , 0x02},
+	{OV2685_8BIT, 0x5813 , 0x40},
+	{OV2685_8BIT, 0x5814 , 0x24},
+	{OV2685_8BIT, 0x5815 , 0x05},
+	{OV2685_8BIT, 0x5816 , 0x42},
+	{OV2685_8BIT, 0x5817 , 0x06},
+	{OV2685_8BIT, 0x5818 , 0x0d},
+	{OV2685_8BIT, 0x5819 , 0x40},
+	{OV2685_8BIT, 0x581a , 0x04},
+	{OV2685_8BIT, 0x581b , 0x0c},
+	{OV2685_8BIT, 0x3a03 , 0x4c},
+	{OV2685_8BIT, 0x3a04 , 0x40},
+	{OV2685_8BIT, 0x3503 , 0x00},
+	{OV2685_TOK_TERM, 0, 0}
 };
 
 static struct misensor_reg const ov2685_720p_init[] = {
 	/*1lane 30fps*/
-	{MISENSOR_8BIT, 0x0103 , 0x01},
-	{MISENSOR_8BIT, 0x3002 , 0x00},
-	{MISENSOR_8BIT, 0x3016 , 0x1c},
-	{MISENSOR_8BIT, 0x3018 , 0x44},
-	{MISENSOR_8BIT, 0x301d , 0xf0},
-	{MISENSOR_8BIT, 0x3020 , 0x00},
-	{MISENSOR_8BIT, 0x3082 , 0x37},
-	{MISENSOR_8BIT, 0x3083 , 0x03},
-	{MISENSOR_8BIT, 0x3084 , 0x0f},
-	{MISENSOR_8BIT, 0x3085 , 0x03},
-	{MISENSOR_8BIT, 0x3086 , 0x00},
-	{MISENSOR_8BIT, 0x3087 , 0x00},
-	{MISENSOR_8BIT, 0x3501 , 0x2d},
-	{MISENSOR_8BIT, 0x3502 , 0x80},
-	{MISENSOR_8BIT, 0x3503 , 0x03},
-	{MISENSOR_8BIT, 0x350b , 0x36},
-	{MISENSOR_8BIT, 0x3600 , 0xb4},
-	{MISENSOR_8BIT, 0x3603 , 0x35},
-	{MISENSOR_8BIT, 0x3604 , 0x24},
-	{MISENSOR_8BIT, 0x3605 , 0x00},
-	{MISENSOR_8BIT, 0x3620 , 0x26},
-	{MISENSOR_8BIT, 0x3621 , 0x37},
-	{MISENSOR_8BIT, 0x3622 , 0x04},
-	{MISENSOR_8BIT, 0x3628 , 0x10},
-	{MISENSOR_8BIT, 0x3705 , 0x3c},
-	{MISENSOR_8BIT, 0x370a , 0x21},
-	{MISENSOR_8BIT, 0x370c , 0x50},
-	{MISENSOR_8BIT, 0x370d , 0xc0},
-	{MISENSOR_8BIT, 0x3717 , 0x58},
-	{MISENSOR_8BIT, 0x3718 , 0x88},
-	{MISENSOR_8BIT, 0x3720 , 0x00},
-	{MISENSOR_8BIT, 0x3721 , 0x00},
-	{MISENSOR_8BIT, 0x3722 , 0x00},
-	{MISENSOR_8BIT, 0x3723 , 0x00},
-	{MISENSOR_8BIT, 0x3738 , 0x00},
-	{MISENSOR_8BIT, 0x3781 , 0x80},
-	{MISENSOR_8BIT, 0x3789 , 0x60},
-	{MISENSOR_8BIT, 0x3800 , 0x00},
-	{MISENSOR_8BIT, 0x3801 , 0xa0},
-	{MISENSOR_8BIT, 0x3802 , 0x00},
-	{MISENSOR_8BIT, 0x3803 , 0xf2},
-	{MISENSOR_8BIT, 0x3804 , 0x05},
-	{MISENSOR_8BIT, 0x3805 , 0xaf},
-	{MISENSOR_8BIT, 0x3806 , 0x03},
-	{MISENSOR_8BIT, 0x3807 , 0xcd},
-	{MISENSOR_8BIT, 0x3808 , 0x05},
-	{MISENSOR_8BIT, 0x3809 , 0x00},
-	{MISENSOR_8BIT, 0x380a , 0x02},
-	{MISENSOR_8BIT, 0x380b , 0xd0},
-	{MISENSOR_8BIT, 0x380c , 0x05},
-	{MISENSOR_8BIT, 0x380d , 0xa6},
-	{MISENSOR_8BIT, 0x380e , 0x02},
-	{MISENSOR_8BIT, 0x380f , 0xf8},
-	{MISENSOR_8BIT, 0x3810 , 0x00},
-	{MISENSOR_8BIT, 0x3811 , 0x08},
-	{MISENSOR_8BIT, 0x3812 , 0x00},
-	{MISENSOR_8BIT, 0x3813 , 0x06},
-	{MISENSOR_8BIT, 0x3814 , 0x11},
-	{MISENSOR_8BIT, 0x3815 , 0x11},
-	{MISENSOR_8BIT, 0x3819 , 0x04},
-	{MISENSOR_8BIT, 0x3820 , 0xc0},
-	{MISENSOR_8BIT, 0x3821 , 0x00},
-	{MISENSOR_8BIT, 0x3a06 , 0x00},
-	{MISENSOR_8BIT, 0x3a07 , 0xe4},
-	{MISENSOR_8BIT, 0x3a08 , 0x00},
-	{MISENSOR_8BIT, 0x3a09 , 0xbe},
-	{MISENSOR_8BIT, 0x3a0a , 0x15},
-	{MISENSOR_8BIT, 0x3a0b , 0x60},
-	{MISENSOR_8BIT, 0x3a0c , 0x17},
-	{MISENSOR_8BIT, 0x3a0d , 0xc0},
-	{MISENSOR_8BIT, 0x3a0e , 0x02},
-	{MISENSOR_8BIT, 0x3a0f , 0xac},
-	{MISENSOR_8BIT, 0x3a10 , 0x02},
-	{MISENSOR_8BIT, 0x3a11 , 0xf8},
-	{MISENSOR_8BIT, 0x4000 , 0x81},
-	{MISENSOR_8BIT, 0x4001 , 0x40},
-	{MISENSOR_8BIT, 0x4008 , 0x02},
-	{MISENSOR_8BIT, 0x4009 , 0x09},
-	{MISENSOR_8BIT, 0x4300 , 0x32},
-	{MISENSOR_8BIT, 0x430e , 0x00},
-	{MISENSOR_8BIT, 0x4602 , 0x02},
-	{MISENSOR_8BIT, 0x4837 , 0x1e},
-	{MISENSOR_8BIT, 0x5000 , 0xff},
-	{MISENSOR_8BIT, 0x5001 , 0x05},
-	{MISENSOR_8BIT, 0x5002 , 0x32},
-	{MISENSOR_8BIT, 0x5003 , 0x04},
-	{MISENSOR_8BIT, 0x5004 , 0xff},
-	{MISENSOR_8BIT, 0x5005 , 0x12},
-	{MISENSOR_8BIT, 0x0100 , 0x01},
-	{MISENSOR_8BIT, 0x5180 , 0xf4},
-	{MISENSOR_8BIT, 0x5181 , 0x11},
-	{MISENSOR_8BIT, 0x5182 , 0x41},
-	{MISENSOR_8BIT, 0x5183 , 0x42},
-	{MISENSOR_8BIT, 0x5184 , 0x78},
-	{MISENSOR_8BIT, 0x5185 , 0x58},
-	{MISENSOR_8BIT, 0x5186 , 0xb5},
-	{MISENSOR_8BIT, 0x5187 , 0xb2},
-	{MISENSOR_8BIT, 0x5188 , 0x08},
-	{MISENSOR_8BIT, 0x5189 , 0x0e},
-	{MISENSOR_8BIT, 0x518a , 0x0c},
-	{MISENSOR_8BIT, 0x518b , 0x4c},
-	{MISENSOR_8BIT, 0x518c , 0x38},
-	{MISENSOR_8BIT, 0x518d , 0xf8},
-	{MISENSOR_8BIT, 0x518e , 0x04},
-	{MISENSOR_8BIT, 0x518f , 0x7f},
-	{MISENSOR_8BIT, 0x5190 , 0x40},
-	{MISENSOR_8BIT, 0x5191 , 0x5f},
-	{MISENSOR_8BIT, 0x5192 , 0x40},
-	{MISENSOR_8BIT, 0x5193 , 0xff},
-	{MISENSOR_8BIT, 0x5194 , 0x40},
-	{MISENSOR_8BIT, 0x5195 , 0x07},
-	{MISENSOR_8BIT, 0x5196 , 0x04},
-	{MISENSOR_8BIT, 0x5197 , 0x04},
-	{MISENSOR_8BIT, 0x5198 , 0x00},
-	{MISENSOR_8BIT, 0x5199 , 0x05},
-	{MISENSOR_8BIT, 0x519a , 0xd2},
-	{MISENSOR_8BIT, 0x519b , 0x10},
-	{MISENSOR_8BIT, 0x5200 , 0x09},
-	{MISENSOR_8BIT, 0x5201 , 0x00},
-	{MISENSOR_8BIT, 0x5202 , 0x06},
-	{MISENSOR_8BIT, 0x5203 , 0x20},
-	{MISENSOR_8BIT, 0x5204 , 0x41},
-	{MISENSOR_8BIT, 0x5205 , 0x16},
-	{MISENSOR_8BIT, 0x5206 , 0x00},
-	{MISENSOR_8BIT, 0x5207 , 0x05},
-	{MISENSOR_8BIT, 0x520b , 0x30},
-	{MISENSOR_8BIT, 0x520c , 0x75},
-	{MISENSOR_8BIT, 0x520d , 0x00},
-	{MISENSOR_8BIT, 0x520e , 0x30},
-	{MISENSOR_8BIT, 0x520f , 0x75},
-	{MISENSOR_8BIT, 0x5210 , 0x00},
-	{MISENSOR_8BIT, 0x5280 , 0x14},
-	{MISENSOR_8BIT, 0x5281 , 0x02},
-	{MISENSOR_8BIT, 0x5282 , 0x02},
-	{MISENSOR_8BIT, 0x5283 , 0x04},
-	{MISENSOR_8BIT, 0x5284 , 0x06},
-	{MISENSOR_8BIT, 0x5285 , 0x08},
-	{MISENSOR_8BIT, 0x5286 , 0x0c},
-	{MISENSOR_8BIT, 0x5287 , 0x10},
-	{MISENSOR_8BIT, 0x5300 , 0xc5},
-	{MISENSOR_8BIT, 0x5301 , 0xa0},
-	{MISENSOR_8BIT, 0x5302 , 0x06},
-	{MISENSOR_8BIT, 0x5303 , 0x0a},
-	{MISENSOR_8BIT, 0x5304 , 0x30},
-	{MISENSOR_8BIT, 0x5305 , 0x60},
-	{MISENSOR_8BIT, 0x5306 , 0x90},
-	{MISENSOR_8BIT, 0x5307 , 0xc0},
-	{MISENSOR_8BIT, 0x5308 , 0x82},
-	{MISENSOR_8BIT, 0x5309 , 0x00},
-	{MISENSOR_8BIT, 0x530a , 0x26},
-	{MISENSOR_8BIT, 0x530b , 0x02},
-	{MISENSOR_8BIT, 0x530c , 0x02},
-	{MISENSOR_8BIT, 0x530d , 0x00},
-	{MISENSOR_8BIT, 0x530e , 0x0c},
-	{MISENSOR_8BIT, 0x530f , 0x14},
-	{MISENSOR_8BIT, 0x5310 , 0x1a},
-	{MISENSOR_8BIT, 0x5311 , 0x20},
-	{MISENSOR_8BIT, 0x5312 , 0x80},
-	{MISENSOR_8BIT, 0x5313 , 0x4b},
-	{MISENSOR_8BIT, 0x5380 , 0x01},
-	{MISENSOR_8BIT, 0x5381 , 0x52},
-	{MISENSOR_8BIT, 0x5382 , 0x00},
-	{MISENSOR_8BIT, 0x5383 , 0x4a},
-	{MISENSOR_8BIT, 0x5384 , 0x00},
-	{MISENSOR_8BIT, 0x5385 , 0xb6},
-	{MISENSOR_8BIT, 0x5386 , 0x00},
-	{MISENSOR_8BIT, 0x5387 , 0x8d},
-	{MISENSOR_8BIT, 0x5388 , 0x00},
-	{MISENSOR_8BIT, 0x5389 , 0x3a},
-	{MISENSOR_8BIT, 0x538a , 0x00},
-	{MISENSOR_8BIT, 0x538b , 0xa6},
-	{MISENSOR_8BIT, 0x538c , 0x00},
-	{MISENSOR_8BIT, 0x5400 , 0x0d},
-	{MISENSOR_8BIT, 0x5401 , 0x18},
-	{MISENSOR_8BIT, 0x5402 , 0x31},
-	{MISENSOR_8BIT, 0x5403 , 0x5a},
-	{MISENSOR_8BIT, 0x5404 , 0x65},
-	{MISENSOR_8BIT, 0x5405 , 0x6f},
-	{MISENSOR_8BIT, 0x5406 , 0x77},
-	{MISENSOR_8BIT, 0x5407 , 0x80},
-	{MISENSOR_8BIT, 0x5408 , 0x87},
-	{MISENSOR_8BIT, 0x5409 , 0x8f},
-	{MISENSOR_8BIT, 0x540a , 0xa2},
-	{MISENSOR_8BIT, 0x540b , 0xb2},
-	{MISENSOR_8BIT, 0x540c , 0xcc},
-	{MISENSOR_8BIT, 0x540d , 0xe4},
-	{MISENSOR_8BIT, 0x540e , 0xf0},
-	{MISENSOR_8BIT, 0x540f , 0xa0},
-	{MISENSOR_8BIT, 0x5410 , 0x6e},
-	{MISENSOR_8BIT, 0x5411 , 0x06},
-	{MISENSOR_8BIT, 0x5480 , 0x19},
-	{MISENSOR_8BIT, 0x5481 , 0x00},
-	{MISENSOR_8BIT, 0x5482 , 0x09},
-	{MISENSOR_8BIT, 0x5483 , 0x12},
-	{MISENSOR_8BIT, 0x5484 , 0x04},
-	{MISENSOR_8BIT, 0x5485 , 0x06},
-	{MISENSOR_8BIT, 0x5486 , 0x08},
-	{MISENSOR_8BIT, 0x5487 , 0x0c},
-	{MISENSOR_8BIT, 0x5488 , 0x10},
-	{MISENSOR_8BIT, 0x5489 , 0x18},
-	{MISENSOR_8BIT, 0x5500 , 0x02},
-	{MISENSOR_8BIT, 0x5501 , 0x03},
-	{MISENSOR_8BIT, 0x5502 , 0x04},
-	{MISENSOR_8BIT, 0x5503 , 0x05},
-	{MISENSOR_8BIT, 0x5504 , 0x06},
-	{MISENSOR_8BIT, 0x5505 , 0x08},
-	{MISENSOR_8BIT, 0x5506 , 0x00},
-	{MISENSOR_8BIT, 0x5600 , 0x02},
-	{MISENSOR_8BIT, 0x5603 , 0x40},
-	{MISENSOR_8BIT, 0x5604 , 0x28},
-	{MISENSOR_8BIT, 0x5609 , 0x20},
-	{MISENSOR_8BIT, 0x560a , 0x60},
-	{MISENSOR_8BIT, 0x5800 , 0x03},
-	{MISENSOR_8BIT, 0x5801 , 0x24},
-	{MISENSOR_8BIT, 0x5802 , 0x02},
-	{MISENSOR_8BIT, 0x5803 , 0x40},
-	{MISENSOR_8BIT, 0x5804 , 0x34},
-	{MISENSOR_8BIT, 0x5805 , 0x05},
-	{MISENSOR_8BIT, 0x5806 , 0x12},
-	{MISENSOR_8BIT, 0x5807 , 0x05},
-	{MISENSOR_8BIT, 0x5808 , 0x03},
-	{MISENSOR_8BIT, 0x5809 , 0x3c},
-	{MISENSOR_8BIT, 0x580a , 0x02},
-	{MISENSOR_8BIT, 0x580b , 0x40},
-	{MISENSOR_8BIT, 0x580c , 0x26},
-	{MISENSOR_8BIT, 0x580d , 0x05},
-	{MISENSOR_8BIT, 0x580e , 0x52},
-	{MISENSOR_8BIT, 0x580f , 0x06},
-	{MISENSOR_8BIT, 0x5810 , 0x03},
-	{MISENSOR_8BIT, 0x5811 , 0x28},
-	{MISENSOR_8BIT, 0x5812 , 0x02},
-	{MISENSOR_8BIT, 0x5813 , 0x40},
-	{MISENSOR_8BIT, 0x5814 , 0x24},
-	{MISENSOR_8BIT, 0x5815 , 0x05},
-	{MISENSOR_8BIT, 0x5816 , 0x42},
-	{MISENSOR_8BIT, 0x5817 , 0x06},
-	{MISENSOR_8BIT, 0x5818 , 0x0d},
-	{MISENSOR_8BIT, 0x5819 , 0x40},
-	{MISENSOR_8BIT, 0x581a , 0x04},
-	{MISENSOR_8BIT, 0x581b , 0x0c},
-	{MISENSOR_8BIT, 0x3a03 , 0x4c},
-	{MISENSOR_8BIT, 0x3a04 , 0x40},
-	{MISENSOR_8BIT, 0x3503 , 0x00},
-	{MISENSOR_TOK_TERM, 0, 0}
+	{OV2685_8BIT, 0x0103 , 0x01},
+	{OV2685_8BIT, 0x3002 , 0x00},
+	{OV2685_8BIT, 0x3016 , 0x1c},
+	{OV2685_8BIT, 0x3018 , 0x44},
+	{OV2685_8BIT, 0x301d , 0xf0},
+	{OV2685_8BIT, 0x3020 , 0x00},
+	{OV2685_8BIT, 0x3082 , 0x37},
+	{OV2685_8BIT, 0x3083 , 0x03},
+	{OV2685_8BIT, 0x3084 , 0x0f},
+	{OV2685_8BIT, 0x3085 , 0x03},
+	{OV2685_8BIT, 0x3086 , 0x00},
+	{OV2685_8BIT, 0x3087 , 0x00},
+	{OV2685_8BIT, 0x3501 , 0x2d},
+	{OV2685_8BIT, 0x3502 , 0x80},
+	{OV2685_8BIT, 0x3503 , 0x03},
+	{OV2685_8BIT, 0x350b , 0x36},
+	{OV2685_8BIT, 0x3600 , 0xb4},
+	{OV2685_8BIT, 0x3603 , 0x35},
+	{OV2685_8BIT, 0x3604 , 0x24},
+	{OV2685_8BIT, 0x3605 , 0x00},
+	{OV2685_8BIT, 0x3620 , 0x26},
+	{OV2685_8BIT, 0x3621 , 0x37},
+	{OV2685_8BIT, 0x3622 , 0x04},
+	{OV2685_8BIT, 0x3628 , 0x10},
+	{OV2685_8BIT, 0x3705 , 0x3c},
+	{OV2685_8BIT, 0x370a , 0x21},
+	{OV2685_8BIT, 0x370c , 0x50},
+	{OV2685_8BIT, 0x370d , 0xc0},
+	{OV2685_8BIT, 0x3717 , 0x58},
+	{OV2685_8BIT, 0x3718 , 0x88},
+	{OV2685_8BIT, 0x3720 , 0x00},
+	{OV2685_8BIT, 0x3721 , 0x00},
+	{OV2685_8BIT, 0x3722 , 0x00},
+	{OV2685_8BIT, 0x3723 , 0x00},
+	{OV2685_8BIT, 0x3738 , 0x00},
+	{OV2685_8BIT, 0x3781 , 0x80},
+	{OV2685_8BIT, 0x3789 , 0x60},
+	{OV2685_8BIT, 0x3800 , 0x00},
+	{OV2685_8BIT, 0x3801 , 0xa0},
+	{OV2685_8BIT, 0x3802 , 0x00},
+	{OV2685_8BIT, 0x3803 , 0xf2},
+	{OV2685_8BIT, 0x3804 , 0x05},
+	{OV2685_8BIT, 0x3805 , 0xaf},
+	{OV2685_8BIT, 0x3806 , 0x03},
+	{OV2685_8BIT, 0x3807 , 0xcd},
+	{OV2685_8BIT, 0x3808 , 0x05},
+	{OV2685_8BIT, 0x3809 , 0x00},
+	{OV2685_8BIT, 0x380a , 0x02},
+	{OV2685_8BIT, 0x380b , 0xd0},
+	{OV2685_8BIT, 0x380c , 0x05},
+	{OV2685_8BIT, 0x380d , 0xa6},
+	{OV2685_8BIT, 0x380e , 0x02},
+	{OV2685_8BIT, 0x380f , 0xf8},
+	{OV2685_8BIT, 0x3810 , 0x00},
+	{OV2685_8BIT, 0x3811 , 0x08},
+	{OV2685_8BIT, 0x3812 , 0x00},
+	{OV2685_8BIT, 0x3813 , 0x06},
+	{OV2685_8BIT, 0x3814 , 0x11},
+	{OV2685_8BIT, 0x3815 , 0x11},
+	{OV2685_8BIT, 0x3819 , 0x04},
+	{OV2685_8BIT, 0x3820 , 0xc0},
+	{OV2685_8BIT, 0x3821 , 0x00},
+	{OV2685_8BIT, 0x3a06 , 0x00},
+	{OV2685_8BIT, 0x3a07 , 0xe4},
+	{OV2685_8BIT, 0x3a08 , 0x00},
+	{OV2685_8BIT, 0x3a09 , 0xbe},
+	{OV2685_8BIT, 0x3a0a , 0x15},
+	{OV2685_8BIT, 0x3a0b , 0x60},
+	{OV2685_8BIT, 0x3a0c , 0x17},
+	{OV2685_8BIT, 0x3a0d , 0xc0},
+	{OV2685_8BIT, 0x3a0e , 0x02},
+	{OV2685_8BIT, 0x3a0f , 0xac},
+	{OV2685_8BIT, 0x3a10 , 0x02},
+	{OV2685_8BIT, 0x3a11 , 0xf8},
+	{OV2685_8BIT, 0x4000 , 0x81},
+	{OV2685_8BIT, 0x4001 , 0x40},
+	{OV2685_8BIT, 0x4008 , 0x02},
+	{OV2685_8BIT, 0x4009 , 0x09},
+	{OV2685_8BIT, 0x4300 , 0x32},
+	{OV2685_8BIT, 0x430e , 0x00},
+	{OV2685_8BIT, 0x4602 , 0x02},
+	{OV2685_8BIT, 0x4837 , 0x1e},
+	{OV2685_8BIT, 0x5000 , 0xff},
+	{OV2685_8BIT, 0x5001 , 0x05},
+	{OV2685_8BIT, 0x5002 , 0x32},
+	{OV2685_8BIT, 0x5003 , 0x04},
+	{OV2685_8BIT, 0x5004 , 0xff},
+	{OV2685_8BIT, 0x5005 , 0x12},
+	{OV2685_8BIT, 0x0100 , 0x01},
+	{OV2685_8BIT, 0x5180 , 0xf4},
+	{OV2685_8BIT, 0x5181 , 0x11},
+	{OV2685_8BIT, 0x5182 , 0x41},
+	{OV2685_8BIT, 0x5183 , 0x42},
+	{OV2685_8BIT, 0x5184 , 0x78},
+	{OV2685_8BIT, 0x5185 , 0x58},
+	{OV2685_8BIT, 0x5186 , 0xb5},
+	{OV2685_8BIT, 0x5187 , 0xb2},
+	{OV2685_8BIT, 0x5188 , 0x08},
+	{OV2685_8BIT, 0x5189 , 0x0e},
+	{OV2685_8BIT, 0x518a , 0x0c},
+	{OV2685_8BIT, 0x518b , 0x4c},
+	{OV2685_8BIT, 0x518c , 0x38},
+	{OV2685_8BIT, 0x518d , 0xf8},
+	{OV2685_8BIT, 0x518e , 0x04},
+	{OV2685_8BIT, 0x518f , 0x7f},
+	{OV2685_8BIT, 0x5190 , 0x40},
+	{OV2685_8BIT, 0x5191 , 0x5f},
+	{OV2685_8BIT, 0x5192 , 0x40},
+	{OV2685_8BIT, 0x5193 , 0xff},
+	{OV2685_8BIT, 0x5194 , 0x40},
+	{OV2685_8BIT, 0x5195 , 0x07},
+	{OV2685_8BIT, 0x5196 , 0x04},
+	{OV2685_8BIT, 0x5197 , 0x04},
+	{OV2685_8BIT, 0x5198 , 0x00},
+	{OV2685_8BIT, 0x5199 , 0x05},
+	{OV2685_8BIT, 0x519a , 0xd2},
+	{OV2685_8BIT, 0x519b , 0x10},
+	{OV2685_8BIT, 0x5200 , 0x09},
+	{OV2685_8BIT, 0x5201 , 0x00},
+	{OV2685_8BIT, 0x5202 , 0x06},
+	{OV2685_8BIT, 0x5203 , 0x20},
+	{OV2685_8BIT, 0x5204 , 0x41},
+	{OV2685_8BIT, 0x5205 , 0x16},
+	{OV2685_8BIT, 0x5206 , 0x00},
+	{OV2685_8BIT, 0x5207 , 0x05},
+	{OV2685_8BIT, 0x520b , 0x30},
+	{OV2685_8BIT, 0x520c , 0x75},
+	{OV2685_8BIT, 0x520d , 0x00},
+	{OV2685_8BIT, 0x520e , 0x30},
+	{OV2685_8BIT, 0x520f , 0x75},
+	{OV2685_8BIT, 0x5210 , 0x00},
+	{OV2685_8BIT, 0x5280 , 0x14},
+	{OV2685_8BIT, 0x5281 , 0x02},
+	{OV2685_8BIT, 0x5282 , 0x02},
+	{OV2685_8BIT, 0x5283 , 0x04},
+	{OV2685_8BIT, 0x5284 , 0x06},
+	{OV2685_8BIT, 0x5285 , 0x08},
+	{OV2685_8BIT, 0x5286 , 0x0c},
+	{OV2685_8BIT, 0x5287 , 0x10},
+	{OV2685_8BIT, 0x5300 , 0xc5},
+	{OV2685_8BIT, 0x5301 , 0xa0},
+	{OV2685_8BIT, 0x5302 , 0x06},
+	{OV2685_8BIT, 0x5303 , 0x0a},
+	{OV2685_8BIT, 0x5304 , 0x30},
+	{OV2685_8BIT, 0x5305 , 0x60},
+	{OV2685_8BIT, 0x5306 , 0x90},
+	{OV2685_8BIT, 0x5307 , 0xc0},
+	{OV2685_8BIT, 0x5308 , 0x82},
+	{OV2685_8BIT, 0x5309 , 0x00},
+	{OV2685_8BIT, 0x530a , 0x26},
+	{OV2685_8BIT, 0x530b , 0x02},
+	{OV2685_8BIT, 0x530c , 0x02},
+	{OV2685_8BIT, 0x530d , 0x00},
+	{OV2685_8BIT, 0x530e , 0x0c},
+	{OV2685_8BIT, 0x530f , 0x14},
+	{OV2685_8BIT, 0x5310 , 0x1a},
+	{OV2685_8BIT, 0x5311 , 0x20},
+	{OV2685_8BIT, 0x5312 , 0x80},
+	{OV2685_8BIT, 0x5313 , 0x4b},
+	{OV2685_8BIT, 0x5380 , 0x01},
+	{OV2685_8BIT, 0x5381 , 0x52},
+	{OV2685_8BIT, 0x5382 , 0x00},
+	{OV2685_8BIT, 0x5383 , 0x4a},
+	{OV2685_8BIT, 0x5384 , 0x00},
+	{OV2685_8BIT, 0x5385 , 0xb6},
+	{OV2685_8BIT, 0x5386 , 0x00},
+	{OV2685_8BIT, 0x5387 , 0x8d},
+	{OV2685_8BIT, 0x5388 , 0x00},
+	{OV2685_8BIT, 0x5389 , 0x3a},
+	{OV2685_8BIT, 0x538a , 0x00},
+	{OV2685_8BIT, 0x538b , 0xa6},
+	{OV2685_8BIT, 0x538c , 0x00},
+	{OV2685_8BIT, 0x5400 , 0x0d},
+	{OV2685_8BIT, 0x5401 , 0x18},
+	{OV2685_8BIT, 0x5402 , 0x31},
+	{OV2685_8BIT, 0x5403 , 0x5a},
+	{OV2685_8BIT, 0x5404 , 0x65},
+	{OV2685_8BIT, 0x5405 , 0x6f},
+	{OV2685_8BIT, 0x5406 , 0x77},
+	{OV2685_8BIT, 0x5407 , 0x80},
+	{OV2685_8BIT, 0x5408 , 0x87},
+	{OV2685_8BIT, 0x5409 , 0x8f},
+	{OV2685_8BIT, 0x540a , 0xa2},
+	{OV2685_8BIT, 0x540b , 0xb2},
+	{OV2685_8BIT, 0x540c , 0xcc},
+	{OV2685_8BIT, 0x540d , 0xe4},
+	{OV2685_8BIT, 0x540e , 0xf0},
+	{OV2685_8BIT, 0x540f , 0xa0},
+	{OV2685_8BIT, 0x5410 , 0x6e},
+	{OV2685_8BIT, 0x5411 , 0x06},
+	{OV2685_8BIT, 0x5480 , 0x19},
+	{OV2685_8BIT, 0x5481 , 0x00},
+	{OV2685_8BIT, 0x5482 , 0x09},
+	{OV2685_8BIT, 0x5483 , 0x12},
+	{OV2685_8BIT, 0x5484 , 0x04},
+	{OV2685_8BIT, 0x5485 , 0x06},
+	{OV2685_8BIT, 0x5486 , 0x08},
+	{OV2685_8BIT, 0x5487 , 0x0c},
+	{OV2685_8BIT, 0x5488 , 0x10},
+	{OV2685_8BIT, 0x5489 , 0x18},
+	{OV2685_8BIT, 0x5500 , 0x02},
+	{OV2685_8BIT, 0x5501 , 0x03},
+	{OV2685_8BIT, 0x5502 , 0x04},
+	{OV2685_8BIT, 0x5503 , 0x05},
+	{OV2685_8BIT, 0x5504 , 0x06},
+	{OV2685_8BIT, 0x5505 , 0x08},
+	{OV2685_8BIT, 0x5506 , 0x00},
+	{OV2685_8BIT, 0x5600 , 0x02},
+	{OV2685_8BIT, 0x5603 , 0x40},
+	{OV2685_8BIT, 0x5604 , 0x28},
+	{OV2685_8BIT, 0x5609 , 0x20},
+	{OV2685_8BIT, 0x560a , 0x60},
+	{OV2685_8BIT, 0x5800 , 0x03},
+	{OV2685_8BIT, 0x5801 , 0x24},
+	{OV2685_8BIT, 0x5802 , 0x02},
+	{OV2685_8BIT, 0x5803 , 0x40},
+	{OV2685_8BIT, 0x5804 , 0x34},
+	{OV2685_8BIT, 0x5805 , 0x05},
+	{OV2685_8BIT, 0x5806 , 0x12},
+	{OV2685_8BIT, 0x5807 , 0x05},
+	{OV2685_8BIT, 0x5808 , 0x03},
+	{OV2685_8BIT, 0x5809 , 0x3c},
+	{OV2685_8BIT, 0x580a , 0x02},
+	{OV2685_8BIT, 0x580b , 0x40},
+	{OV2685_8BIT, 0x580c , 0x26},
+	{OV2685_8BIT, 0x580d , 0x05},
+	{OV2685_8BIT, 0x580e , 0x52},
+	{OV2685_8BIT, 0x580f , 0x06},
+	{OV2685_8BIT, 0x5810 , 0x03},
+	{OV2685_8BIT, 0x5811 , 0x28},
+	{OV2685_8BIT, 0x5812 , 0x02},
+	{OV2685_8BIT, 0x5813 , 0x40},
+	{OV2685_8BIT, 0x5814 , 0x24},
+	{OV2685_8BIT, 0x5815 , 0x05},
+	{OV2685_8BIT, 0x5816 , 0x42},
+	{OV2685_8BIT, 0x5817 , 0x06},
+	{OV2685_8BIT, 0x5818 , 0x0d},
+	{OV2685_8BIT, 0x5819 , 0x40},
+	{OV2685_8BIT, 0x581a , 0x04},
+	{OV2685_8BIT, 0x581b , 0x0c},
+	{OV2685_8BIT, 0x3a03 , 0x4c},
+	{OV2685_8BIT, 0x3a04 , 0x40},
+	{OV2685_8BIT, 0x3503 , 0x00},
+	{OV2685_TOK_TERM, 0, 0}
 };
 
 /* camera vga 30fps, yuv, 1lanes */
 static struct misensor_reg const ov2685_vga_init[] = {
-	{MISENSOR_8BIT, 0x0103 , 0x01},
-	{MISENSOR_8BIT, 0x3002 , 0x00},
-	{MISENSOR_8BIT, 0x3016 , 0x1c},
-	{MISENSOR_8BIT, 0x3018 , 0x44},
-	{MISENSOR_8BIT, 0x301d , 0xf0},
-	{MISENSOR_8BIT, 0x3020 , 0x00},
-	{MISENSOR_8BIT, 0x3082 , 0x37},
-	{MISENSOR_8BIT, 0x3083 , 0x03},
-	{MISENSOR_8BIT, 0x3084 , 0x0f},
-	{MISENSOR_8BIT, 0x3085 , 0x03},
-	{MISENSOR_8BIT, 0x3086 , 0x00},
-	{MISENSOR_8BIT, 0x3087 , 0x00},
-	{MISENSOR_8BIT, 0x3501 , 0x26},
-	{MISENSOR_8BIT, 0x3502 , 0x40},
-	{MISENSOR_8BIT, 0x3503 , 0x03},
-	{MISENSOR_8BIT, 0x350b , 0x36},
-	{MISENSOR_8BIT, 0x3600 , 0xb4},
-	{MISENSOR_8BIT, 0x3603 , 0x35},
-	{MISENSOR_8BIT, 0x3604 , 0x24},
-	{MISENSOR_8BIT, 0x3605 , 0x00},
-	{MISENSOR_8BIT, 0x3620 , 0x26},
-	{MISENSOR_8BIT, 0x3621 , 0x37},
-	{MISENSOR_8BIT, 0x3622 , 0x04},
-	{MISENSOR_8BIT, 0x3628 , 0x10},
-	{MISENSOR_8BIT, 0x3705 , 0x3c},
-	{MISENSOR_8BIT, 0x370a , 0x23},
-	{MISENSOR_8BIT, 0x370c , 0x50},
-	{MISENSOR_8BIT, 0x370d , 0xc0},
-	{MISENSOR_8BIT, 0x3717 , 0x58},
-	{MISENSOR_8BIT, 0x3718 , 0x88},
-	{MISENSOR_8BIT, 0x3720 , 0x00},
-	{MISENSOR_8BIT, 0x3721 , 0x00},
-	{MISENSOR_8BIT, 0x3722 , 0x00},
-	{MISENSOR_8BIT, 0x3723 , 0x00},
-	{MISENSOR_8BIT, 0x3738 , 0x00},
-	{MISENSOR_8BIT, 0x3781 , 0x80},
-	{MISENSOR_8BIT, 0x3789 , 0x60},
-	{MISENSOR_8BIT, 0x3800 , 0x00},
-	{MISENSOR_8BIT, 0x3801 , 0xa0},
-	{MISENSOR_8BIT, 0x3802 , 0x00},
-	{MISENSOR_8BIT, 0x3803 , 0x78},
-	{MISENSOR_8BIT, 0x3804 , 0x05},
-	{MISENSOR_8BIT, 0x3805 , 0xaf},
-	{MISENSOR_8BIT, 0x3806 , 0x04},
-	{MISENSOR_8BIT, 0x3807 , 0x47},
-	{MISENSOR_8BIT, 0x3808 , 0x02},
-	{MISENSOR_8BIT, 0x3809 , 0x80},
-	{MISENSOR_8BIT, 0x380a , 0x01},
-	{MISENSOR_8BIT, 0x380b , 0xe0},
-	{MISENSOR_8BIT, 0x380c , 0x06},
-	{MISENSOR_8BIT, 0x380d , 0xac},
-	{MISENSOR_8BIT, 0x380e , 0x02},
-	{MISENSOR_8BIT, 0x380f , 0x84},
-	{MISENSOR_8BIT, 0x3810 , 0x00},
-	{MISENSOR_8BIT, 0x3811 , 0x04},
-	{MISENSOR_8BIT, 0x3812 , 0x00},
-	{MISENSOR_8BIT, 0x3813 , 0x04},
-	{MISENSOR_8BIT, 0x3814 , 0x31},
-	{MISENSOR_8BIT, 0x3815 , 0x31},
-	{MISENSOR_8BIT, 0x3819 , 0x04},
-	{MISENSOR_8BIT, 0x3820 , 0xc2},
-	{MISENSOR_8BIT, 0x3821 , 0x01},
-	{MISENSOR_8BIT, 0x3a06 , 0x00},
-	{MISENSOR_8BIT, 0x3a07 , 0xc1},
-	{MISENSOR_8BIT, 0x3a08 , 0x00},
-	{MISENSOR_8BIT, 0x3a09 , 0xa1},
-	{MISENSOR_8BIT, 0x3a0a , 0x12},
-	{MISENSOR_8BIT, 0x3a0b , 0x18},
-	{MISENSOR_8BIT, 0x3a0c , 0x14},
-	{MISENSOR_8BIT, 0x3a0d , 0x20},
-	{MISENSOR_8BIT, 0x3a0e , 0x02},
-	{MISENSOR_8BIT, 0x3a0f , 0x43},
-	{MISENSOR_8BIT, 0x3a10 , 0x02},
-	{MISENSOR_8BIT, 0x3a11 , 0x84},
-	{MISENSOR_8BIT, 0x4000 , 0x81},
-	{MISENSOR_8BIT, 0x4001 , 0x40},
-	{MISENSOR_8BIT, 0x4008 , 0x00},
-	{MISENSOR_8BIT, 0x4009 , 0x03},
-	{MISENSOR_8BIT, 0x4300 , 0x32},
-	{MISENSOR_8BIT, 0x430e , 0x00},
-	{MISENSOR_8BIT, 0x4602 , 0x02},
-	{MISENSOR_8BIT, 0x4837 , 0x1e},
-	{MISENSOR_8BIT, 0x5000 , 0xff},
-	{MISENSOR_8BIT, 0x5001 , 0x05},
-	{MISENSOR_8BIT, 0x5002 , 0x32},
-	{MISENSOR_8BIT, 0x5003 , 0x04},
-	{MISENSOR_8BIT, 0x5004 , 0xff},
-	{MISENSOR_8BIT, 0x5005 , 0x12},
-	{MISENSOR_8BIT, 0x0100 , 0x01},
-	{MISENSOR_8BIT, 0x0101 , 0x01},
-	{MISENSOR_8BIT, 0x1000 , 0x01},
-	{MISENSOR_8BIT, 0x0129 , 0x10},
-	{MISENSOR_8BIT, 0x5180 , 0xf4},
-	{MISENSOR_8BIT, 0x5181 , 0x11},
-	{MISENSOR_8BIT, 0x5182 , 0x41},
-	{MISENSOR_8BIT, 0x5183 , 0x42},
-	{MISENSOR_8BIT, 0x5184 , 0x78},
-	{MISENSOR_8BIT, 0x5185 , 0x58},
-	{MISENSOR_8BIT, 0x5186 , 0xb5},
-	{MISENSOR_8BIT, 0x5187 , 0xb2},
-	{MISENSOR_8BIT, 0x5188 , 0x08},
-	{MISENSOR_8BIT, 0x5189 , 0x0e},
-	{MISENSOR_8BIT, 0x518a , 0x0c},
-	{MISENSOR_8BIT, 0x518b , 0x4c},
-	{MISENSOR_8BIT, 0x518c , 0x38},
-	{MISENSOR_8BIT, 0x518d , 0xf8},
-	{MISENSOR_8BIT, 0x518e , 0x04},
-	{MISENSOR_8BIT, 0x518f , 0x7f},
-	{MISENSOR_8BIT, 0x5190 , 0x40},
-	{MISENSOR_8BIT, 0x5191 , 0x5f},
-	{MISENSOR_8BIT, 0x5192 , 0x40},
-	{MISENSOR_8BIT, 0x5193 , 0xff},
-	{MISENSOR_8BIT, 0x5194 , 0x40},
-	{MISENSOR_8BIT, 0x5195 , 0x07},
-	{MISENSOR_8BIT, 0x5196 , 0x04},
-	{MISENSOR_8BIT, 0x5197 , 0x04},
-	{MISENSOR_8BIT, 0x5198 , 0x00},
-	{MISENSOR_8BIT, 0x5199 , 0x05},
-	{MISENSOR_8BIT, 0x519a , 0xd2},
-	{MISENSOR_8BIT, 0x519b , 0x10},
-	{MISENSOR_8BIT, 0x5200 , 0x09},
-	{MISENSOR_8BIT, 0x5201 , 0x00},
-	{MISENSOR_8BIT, 0x5202 , 0x06},
-	{MISENSOR_8BIT, 0x5203 , 0x20},
-	{MISENSOR_8BIT, 0x5204 , 0x41},
-	{MISENSOR_8BIT, 0x5205 , 0x16},
-	{MISENSOR_8BIT, 0x5206 , 0x00},
-	{MISENSOR_8BIT, 0x5207 , 0x05},
-	{MISENSOR_8BIT, 0x520b , 0x30},
-	{MISENSOR_8BIT, 0x520c , 0x75},
-	{MISENSOR_8BIT, 0x520d , 0x00},
-	{MISENSOR_8BIT, 0x520e , 0x30},
-	{MISENSOR_8BIT, 0x520f , 0x75},
-	{MISENSOR_8BIT, 0x5210 , 0x00},
-	{MISENSOR_8BIT, 0x5280 , 0x14},
-	{MISENSOR_8BIT, 0x5281 , 0x02},
-	{MISENSOR_8BIT, 0x5282 , 0x02},
-	{MISENSOR_8BIT, 0x5283 , 0x04},
-	{MISENSOR_8BIT, 0x5284 , 0x06},
-	{MISENSOR_8BIT, 0x5285 , 0x08},
-	{MISENSOR_8BIT, 0x5286 , 0x0c},
-	{MISENSOR_8BIT, 0x5287 , 0x10},
-	{MISENSOR_8BIT, 0x5300 , 0xc5},
-	{MISENSOR_8BIT, 0x5301 , 0xa0},
-	{MISENSOR_8BIT, 0x5302 , 0x06},
-	{MISENSOR_8BIT, 0x5303 , 0x0a},
-	{MISENSOR_8BIT, 0x5304 , 0x30},
-	{MISENSOR_8BIT, 0x5305 , 0x60},
-	{MISENSOR_8BIT, 0x5306 , 0x90},
-	{MISENSOR_8BIT, 0x5307 , 0xc0},
-	{MISENSOR_8BIT, 0x5308 , 0x82},
-	{MISENSOR_8BIT, 0x5309 , 0x00},
-	{MISENSOR_8BIT, 0x530a , 0x26},
-	{MISENSOR_8BIT, 0x530b , 0x02},
-	{MISENSOR_8BIT, 0x530c , 0x02},
-	{MISENSOR_8BIT, 0x530d , 0x00},
-	{MISENSOR_8BIT, 0x530e , 0x0c},
-	{MISENSOR_8BIT, 0x530f , 0x14},
-	{MISENSOR_8BIT, 0x5310 , 0x1a},
-	{MISENSOR_8BIT, 0x5311 , 0x20},
-	{MISENSOR_8BIT, 0x5312 , 0x80},
-	{MISENSOR_8BIT, 0x5313 , 0x4b},
-	{MISENSOR_8BIT, 0x5380 , 0x01},
-	{MISENSOR_8BIT, 0x5381 , 0x52},
-	{MISENSOR_8BIT, 0x5382 , 0x00},
-	{MISENSOR_8BIT, 0x5383 , 0x4a},
-	{MISENSOR_8BIT, 0x5384 , 0x00},
-	{MISENSOR_8BIT, 0x5385 , 0xb6},
-	{MISENSOR_8BIT, 0x5386 , 0x00},
-	{MISENSOR_8BIT, 0x5387 , 0x8d},
-	{MISENSOR_8BIT, 0x5388 , 0x00},
-	{MISENSOR_8BIT, 0x5389 , 0x3a},
-	{MISENSOR_8BIT, 0x538a , 0x00},
-	{MISENSOR_8BIT, 0x538b , 0xa6},
-	{MISENSOR_8BIT, 0x538c , 0x00},
-	{MISENSOR_8BIT, 0x5400 , 0x0d},
-	{MISENSOR_8BIT, 0x5401 , 0x18},
-	{MISENSOR_8BIT, 0x5402 , 0x31},
-	{MISENSOR_8BIT, 0x5403 , 0x5a},
-	{MISENSOR_8BIT, 0x5404 , 0x65},
-	{MISENSOR_8BIT, 0x5405 , 0x6f},
-	{MISENSOR_8BIT, 0x5406 , 0x77},
-	{MISENSOR_8BIT, 0x5407 , 0x80},
-	{MISENSOR_8BIT, 0x5408 , 0x87},
-	{MISENSOR_8BIT, 0x5409 , 0x8f},
-	{MISENSOR_8BIT, 0x540a , 0xa2},
-	{MISENSOR_8BIT, 0x540b , 0xb2},
-	{MISENSOR_8BIT, 0x540c , 0xcc},
-	{MISENSOR_8BIT, 0x540d , 0xe4},
-	{MISENSOR_8BIT, 0x540e , 0xf0},
-	{MISENSOR_8BIT, 0x540f , 0xa0},
-	{MISENSOR_8BIT, 0x5410 , 0x6e},
-	{MISENSOR_8BIT, 0x5411 , 0x06},
-	{MISENSOR_8BIT, 0x5480 , 0x19},
-	{MISENSOR_8BIT, 0x5481 , 0x00},
-	{MISENSOR_8BIT, 0x5482 , 0x09},
-	{MISENSOR_8BIT, 0x5483 , 0x12},
-	{MISENSOR_8BIT, 0x5484 , 0x04},
-	{MISENSOR_8BIT, 0x5485 , 0x06},
-	{MISENSOR_8BIT, 0x5486 , 0x08},
-	{MISENSOR_8BIT, 0x5487 , 0x0c},
-	{MISENSOR_8BIT, 0x5488 , 0x10},
-	{MISENSOR_8BIT, 0x5489 , 0x18},
-	{MISENSOR_8BIT, 0x5500 , 0x02},
-	{MISENSOR_8BIT, 0x5501 , 0x03},
-	{MISENSOR_8BIT, 0x5502 , 0x04},
-	{MISENSOR_8BIT, 0x5503 , 0x05},
-	{MISENSOR_8BIT, 0x5504 , 0x06},
-	{MISENSOR_8BIT, 0x5505 , 0x08},
-	{MISENSOR_8BIT, 0x5506 , 0x00},
-	{MISENSOR_8BIT, 0x5600 , 0x02},
-	{MISENSOR_8BIT, 0x5603 , 0x40},
-	{MISENSOR_8BIT, 0x5604 , 0x28},
-	{MISENSOR_8BIT, 0x5609 , 0x20},
-	{MISENSOR_8BIT, 0x560a , 0x60},
-	{MISENSOR_8BIT, 0x5800 , 0x03},
-	{MISENSOR_8BIT, 0x5801 , 0x24},
-	{MISENSOR_8BIT, 0x5802 , 0x02},
-	{MISENSOR_8BIT, 0x5803 , 0x40},
-	{MISENSOR_8BIT, 0x5804 , 0x34},
-	{MISENSOR_8BIT, 0x5805 , 0x05},
-	{MISENSOR_8BIT, 0x5806 , 0x12},
-	{MISENSOR_8BIT, 0x5807 , 0x05},
-	{MISENSOR_8BIT, 0x5808 , 0x03},
-	{MISENSOR_8BIT, 0x5809 , 0x3c},
-	{MISENSOR_8BIT, 0x580a , 0x02},
-	{MISENSOR_8BIT, 0x580b , 0x40},
-	{MISENSOR_8BIT, 0x580c , 0x26},
-	{MISENSOR_8BIT, 0x580d , 0x05},
-	{MISENSOR_8BIT, 0x580e , 0x52},
-	{MISENSOR_8BIT, 0x580f , 0x06},
-	{MISENSOR_8BIT, 0x5810 , 0x03},
-	{MISENSOR_8BIT, 0x5811 , 0x28},
-	{MISENSOR_8BIT, 0x5812 , 0x02},
-	{MISENSOR_8BIT, 0x5813 , 0x40},
-	{MISENSOR_8BIT, 0x5814 , 0x24},
-	{MISENSOR_8BIT, 0x5815 , 0x05},
-	{MISENSOR_8BIT, 0x5816 , 0x42},
-	{MISENSOR_8BIT, 0x5817 , 0x06},
-	{MISENSOR_8BIT, 0x5818 , 0x0d},
-	{MISENSOR_8BIT, 0x5819 , 0x40},
-	{MISENSOR_8BIT, 0x581a , 0x04},
-	{MISENSOR_8BIT, 0x581b , 0x0c},
-	{MISENSOR_8BIT, 0x3a03 , 0x4c},
-	{MISENSOR_8BIT, 0x3a04 , 0x40},
-	{MISENSOR_8BIT, 0x3503 , 0x00},
-	{MISENSOR_TOK_TERM, 0, 0}
+	{OV2685_8BIT, 0x0103 , 0x01},
+	{OV2685_8BIT, 0x3002 , 0x00},
+	{OV2685_8BIT, 0x3016 , 0x1c},
+	{OV2685_8BIT, 0x3018 , 0x44},
+	{OV2685_8BIT, 0x301d , 0xf0},
+	{OV2685_8BIT, 0x3020 , 0x00},
+	{OV2685_8BIT, 0x3082 , 0x37},
+	{OV2685_8BIT, 0x3083 , 0x03},
+	{OV2685_8BIT, 0x3084 , 0x0f},
+	{OV2685_8BIT, 0x3085 , 0x03},
+	{OV2685_8BIT, 0x3086 , 0x00},
+	{OV2685_8BIT, 0x3087 , 0x00},
+	{OV2685_8BIT, 0x3501 , 0x26},
+	{OV2685_8BIT, 0x3502 , 0x40},
+	{OV2685_8BIT, 0x3503 , 0x03},
+	{OV2685_8BIT, 0x350b , 0x36},
+	{OV2685_8BIT, 0x3600 , 0xb4},
+	{OV2685_8BIT, 0x3603 , 0x35},
+	{OV2685_8BIT, 0x3604 , 0x24},
+	{OV2685_8BIT, 0x3605 , 0x00},
+	{OV2685_8BIT, 0x3620 , 0x26},
+	{OV2685_8BIT, 0x3621 , 0x37},
+	{OV2685_8BIT, 0x3622 , 0x04},
+	{OV2685_8BIT, 0x3628 , 0x10},
+	{OV2685_8BIT, 0x3705 , 0x3c},
+	{OV2685_8BIT, 0x370a , 0x23},
+	{OV2685_8BIT, 0x370c , 0x50},
+	{OV2685_8BIT, 0x370d , 0xc0},
+	{OV2685_8BIT, 0x3717 , 0x58},
+	{OV2685_8BIT, 0x3718 , 0x88},
+	{OV2685_8BIT, 0x3720 , 0x00},
+	{OV2685_8BIT, 0x3721 , 0x00},
+	{OV2685_8BIT, 0x3722 , 0x00},
+	{OV2685_8BIT, 0x3723 , 0x00},
+	{OV2685_8BIT, 0x3738 , 0x00},
+	{OV2685_8BIT, 0x3781 , 0x80},
+	{OV2685_8BIT, 0x3789 , 0x60},
+	{OV2685_8BIT, 0x3800 , 0x00},
+	{OV2685_8BIT, 0x3801 , 0xa0},
+	{OV2685_8BIT, 0x3802 , 0x00},
+	{OV2685_8BIT, 0x3803 , 0x78},
+	{OV2685_8BIT, 0x3804 , 0x05},
+	{OV2685_8BIT, 0x3805 , 0xaf},
+	{OV2685_8BIT, 0x3806 , 0x04},
+	{OV2685_8BIT, 0x3807 , 0x47},
+	{OV2685_8BIT, 0x3808 , 0x02},
+	{OV2685_8BIT, 0x3809 , 0x80},
+	{OV2685_8BIT, 0x380a , 0x01},
+	{OV2685_8BIT, 0x380b , 0xe0},
+	{OV2685_8BIT, 0x380c , 0x06},
+	{OV2685_8BIT, 0x380d , 0xac},
+	{OV2685_8BIT, 0x380e , 0x02},
+	{OV2685_8BIT, 0x380f , 0x84},
+	{OV2685_8BIT, 0x3810 , 0x00},
+	{OV2685_8BIT, 0x3811 , 0x04},
+	{OV2685_8BIT, 0x3812 , 0x00},
+	{OV2685_8BIT, 0x3813 , 0x04},
+	{OV2685_8BIT, 0x3814 , 0x31},
+	{OV2685_8BIT, 0x3815 , 0x31},
+	{OV2685_8BIT, 0x3819 , 0x04},
+	{OV2685_8BIT, 0x3820 , 0xc2},
+	{OV2685_8BIT, 0x3821 , 0x01},
+	{OV2685_8BIT, 0x3a06 , 0x00},
+	{OV2685_8BIT, 0x3a07 , 0xc1},
+	{OV2685_8BIT, 0x3a08 , 0x00},
+	{OV2685_8BIT, 0x3a09 , 0xa1},
+	{OV2685_8BIT, 0x3a0a , 0x12},
+	{OV2685_8BIT, 0x3a0b , 0x18},
+	{OV2685_8BIT, 0x3a0c , 0x14},
+	{OV2685_8BIT, 0x3a0d , 0x20},
+	{OV2685_8BIT, 0x3a0e , 0x02},
+	{OV2685_8BIT, 0x3a0f , 0x43},
+	{OV2685_8BIT, 0x3a10 , 0x02},
+	{OV2685_8BIT, 0x3a11 , 0x84},
+	{OV2685_8BIT, 0x4000 , 0x81},
+	{OV2685_8BIT, 0x4001 , 0x40},
+	{OV2685_8BIT, 0x4008 , 0x00},
+	{OV2685_8BIT, 0x4009 , 0x03},
+	{OV2685_8BIT, 0x4300 , 0x32},
+	{OV2685_8BIT, 0x430e , 0x00},
+	{OV2685_8BIT, 0x4602 , 0x02},
+	{OV2685_8BIT, 0x4837 , 0x1e},
+	{OV2685_8BIT, 0x5000 , 0xff},
+	{OV2685_8BIT, 0x5001 , 0x05},
+	{OV2685_8BIT, 0x5002 , 0x32},
+	{OV2685_8BIT, 0x5003 , 0x04},
+	{OV2685_8BIT, 0x5004 , 0xff},
+	{OV2685_8BIT, 0x5005 , 0x12},
+	{OV2685_8BIT, 0x0100 , 0x01},
+	{OV2685_8BIT, 0x0101 , 0x01},
+	{OV2685_8BIT, 0x1000 , 0x01},
+	{OV2685_8BIT, 0x0129 , 0x10},
+	{OV2685_8BIT, 0x5180 , 0xf4},
+	{OV2685_8BIT, 0x5181 , 0x11},
+	{OV2685_8BIT, 0x5182 , 0x41},
+	{OV2685_8BIT, 0x5183 , 0x42},
+	{OV2685_8BIT, 0x5184 , 0x78},
+	{OV2685_8BIT, 0x5185 , 0x58},
+	{OV2685_8BIT, 0x5186 , 0xb5},
+	{OV2685_8BIT, 0x5187 , 0xb2},
+	{OV2685_8BIT, 0x5188 , 0x08},
+	{OV2685_8BIT, 0x5189 , 0x0e},
+	{OV2685_8BIT, 0x518a , 0x0c},
+	{OV2685_8BIT, 0x518b , 0x4c},
+	{OV2685_8BIT, 0x518c , 0x38},
+	{OV2685_8BIT, 0x518d , 0xf8},
+	{OV2685_8BIT, 0x518e , 0x04},
+	{OV2685_8BIT, 0x518f , 0x7f},
+	{OV2685_8BIT, 0x5190 , 0x40},
+	{OV2685_8BIT, 0x5191 , 0x5f},
+	{OV2685_8BIT, 0x5192 , 0x40},
+	{OV2685_8BIT, 0x5193 , 0xff},
+	{OV2685_8BIT, 0x5194 , 0x40},
+	{OV2685_8BIT, 0x5195 , 0x07},
+	{OV2685_8BIT, 0x5196 , 0x04},
+	{OV2685_8BIT, 0x5197 , 0x04},
+	{OV2685_8BIT, 0x5198 , 0x00},
+	{OV2685_8BIT, 0x5199 , 0x05},
+	{OV2685_8BIT, 0x519a , 0xd2},
+	{OV2685_8BIT, 0x519b , 0x10},
+	{OV2685_8BIT, 0x5200 , 0x09},
+	{OV2685_8BIT, 0x5201 , 0x00},
+	{OV2685_8BIT, 0x5202 , 0x06},
+	{OV2685_8BIT, 0x5203 , 0x20},
+	{OV2685_8BIT, 0x5204 , 0x41},
+	{OV2685_8BIT, 0x5205 , 0x16},
+	{OV2685_8BIT, 0x5206 , 0x00},
+	{OV2685_8BIT, 0x5207 , 0x05},
+	{OV2685_8BIT, 0x520b , 0x30},
+	{OV2685_8BIT, 0x520c , 0x75},
+	{OV2685_8BIT, 0x520d , 0x00},
+	{OV2685_8BIT, 0x520e , 0x30},
+	{OV2685_8BIT, 0x520f , 0x75},
+	{OV2685_8BIT, 0x5210 , 0x00},
+	{OV2685_8BIT, 0x5280 , 0x14},
+	{OV2685_8BIT, 0x5281 , 0x02},
+	{OV2685_8BIT, 0x5282 , 0x02},
+	{OV2685_8BIT, 0x5283 , 0x04},
+	{OV2685_8BIT, 0x5284 , 0x06},
+	{OV2685_8BIT, 0x5285 , 0x08},
+	{OV2685_8BIT, 0x5286 , 0x0c},
+	{OV2685_8BIT, 0x5287 , 0x10},
+	{OV2685_8BIT, 0x5300 , 0xc5},
+	{OV2685_8BIT, 0x5301 , 0xa0},
+	{OV2685_8BIT, 0x5302 , 0x06},
+	{OV2685_8BIT, 0x5303 , 0x0a},
+	{OV2685_8BIT, 0x5304 , 0x30},
+	{OV2685_8BIT, 0x5305 , 0x60},
+	{OV2685_8BIT, 0x5306 , 0x90},
+	{OV2685_8BIT, 0x5307 , 0xc0},
+	{OV2685_8BIT, 0x5308 , 0x82},
+	{OV2685_8BIT, 0x5309 , 0x00},
+	{OV2685_8BIT, 0x530a , 0x26},
+	{OV2685_8BIT, 0x530b , 0x02},
+	{OV2685_8BIT, 0x530c , 0x02},
+	{OV2685_8BIT, 0x530d , 0x00},
+	{OV2685_8BIT, 0x530e , 0x0c},
+	{OV2685_8BIT, 0x530f , 0x14},
+	{OV2685_8BIT, 0x5310 , 0x1a},
+	{OV2685_8BIT, 0x5311 , 0x20},
+	{OV2685_8BIT, 0x5312 , 0x80},
+	{OV2685_8BIT, 0x5313 , 0x4b},
+	{OV2685_8BIT, 0x5380 , 0x01},
+	{OV2685_8BIT, 0x5381 , 0x52},
+	{OV2685_8BIT, 0x5382 , 0x00},
+	{OV2685_8BIT, 0x5383 , 0x4a},
+	{OV2685_8BIT, 0x5384 , 0x00},
+	{OV2685_8BIT, 0x5385 , 0xb6},
+	{OV2685_8BIT, 0x5386 , 0x00},
+	{OV2685_8BIT, 0x5387 , 0x8d},
+	{OV2685_8BIT, 0x5388 , 0x00},
+	{OV2685_8BIT, 0x5389 , 0x3a},
+	{OV2685_8BIT, 0x538a , 0x00},
+	{OV2685_8BIT, 0x538b , 0xa6},
+	{OV2685_8BIT, 0x538c , 0x00},
+	{OV2685_8BIT, 0x5400 , 0x0d},
+	{OV2685_8BIT, 0x5401 , 0x18},
+	{OV2685_8BIT, 0x5402 , 0x31},
+	{OV2685_8BIT, 0x5403 , 0x5a},
+	{OV2685_8BIT, 0x5404 , 0x65},
+	{OV2685_8BIT, 0x5405 , 0x6f},
+	{OV2685_8BIT, 0x5406 , 0x77},
+	{OV2685_8BIT, 0x5407 , 0x80},
+	{OV2685_8BIT, 0x5408 , 0x87},
+	{OV2685_8BIT, 0x5409 , 0x8f},
+	{OV2685_8BIT, 0x540a , 0xa2},
+	{OV2685_8BIT, 0x540b , 0xb2},
+	{OV2685_8BIT, 0x540c , 0xcc},
+	{OV2685_8BIT, 0x540d , 0xe4},
+	{OV2685_8BIT, 0x540e , 0xf0},
+	{OV2685_8BIT, 0x540f , 0xa0},
+	{OV2685_8BIT, 0x5410 , 0x6e},
+	{OV2685_8BIT, 0x5411 , 0x06},
+	{OV2685_8BIT, 0x5480 , 0x19},
+	{OV2685_8BIT, 0x5481 , 0x00},
+	{OV2685_8BIT, 0x5482 , 0x09},
+	{OV2685_8BIT, 0x5483 , 0x12},
+	{OV2685_8BIT, 0x5484 , 0x04},
+	{OV2685_8BIT, 0x5485 , 0x06},
+	{OV2685_8BIT, 0x5486 , 0x08},
+	{OV2685_8BIT, 0x5487 , 0x0c},
+	{OV2685_8BIT, 0x5488 , 0x10},
+	{OV2685_8BIT, 0x5489 , 0x18},
+	{OV2685_8BIT, 0x5500 , 0x02},
+	{OV2685_8BIT, 0x5501 , 0x03},
+	{OV2685_8BIT, 0x5502 , 0x04},
+	{OV2685_8BIT, 0x5503 , 0x05},
+	{OV2685_8BIT, 0x5504 , 0x06},
+	{OV2685_8BIT, 0x5505 , 0x08},
+	{OV2685_8BIT, 0x5506 , 0x00},
+	{OV2685_8BIT, 0x5600 , 0x02},
+	{OV2685_8BIT, 0x5603 , 0x40},
+	{OV2685_8BIT, 0x5604 , 0x28},
+	{OV2685_8BIT, 0x5609 , 0x20},
+	{OV2685_8BIT, 0x560a , 0x60},
+	{OV2685_8BIT, 0x5800 , 0x03},
+	{OV2685_8BIT, 0x5801 , 0x24},
+	{OV2685_8BIT, 0x5802 , 0x02},
+	{OV2685_8BIT, 0x5803 , 0x40},
+	{OV2685_8BIT, 0x5804 , 0x34},
+	{OV2685_8BIT, 0x5805 , 0x05},
+	{OV2685_8BIT, 0x5806 , 0x12},
+	{OV2685_8BIT, 0x5807 , 0x05},
+	{OV2685_8BIT, 0x5808 , 0x03},
+	{OV2685_8BIT, 0x5809 , 0x3c},
+	{OV2685_8BIT, 0x580a , 0x02},
+	{OV2685_8BIT, 0x580b , 0x40},
+	{OV2685_8BIT, 0x580c , 0x26},
+	{OV2685_8BIT, 0x580d , 0x05},
+	{OV2685_8BIT, 0x580e , 0x52},
+	{OV2685_8BIT, 0x580f , 0x06},
+	{OV2685_8BIT, 0x5810 , 0x03},
+	{OV2685_8BIT, 0x5811 , 0x28},
+	{OV2685_8BIT, 0x5812 , 0x02},
+	{OV2685_8BIT, 0x5813 , 0x40},
+	{OV2685_8BIT, 0x5814 , 0x24},
+	{OV2685_8BIT, 0x5815 , 0x05},
+	{OV2685_8BIT, 0x5816 , 0x42},
+	{OV2685_8BIT, 0x5817 , 0x06},
+	{OV2685_8BIT, 0x5818 , 0x0d},
+	{OV2685_8BIT, 0x5819 , 0x40},
+	{OV2685_8BIT, 0x581a , 0x04},
+	{OV2685_8BIT, 0x581b , 0x0c},
+	{OV2685_8BIT, 0x3a03 , 0x4c},
+	{OV2685_8BIT, 0x3a04 , 0x40},
+	{OV2685_8BIT, 0x3503 , 0x00},
+	{OV2685_TOK_TERM, 0, 0}
 };
 
 static struct misensor_reg const ov2685_common[] = {
-	 {MISENSOR_TOK_TERM, 0, 0}
+	 {OV2685_TOK_TERM, 0, 0}
 };
 
 static struct misensor_reg const ov2685_iq[] = {
-	{MISENSOR_TOK_TERM, 0, 0}
+	{OV2685_TOK_TERM, 0, 0}
 };
 
 #endif
-- 
1.9.1

