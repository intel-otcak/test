From c0177cb8359a2a2cc510f28534b1ee3511842e5e Mon Sep 17 00:00:00 2001
Message-Id: <c0177cb8359a2a2cc510f28534b1ee3511842e5e.1398812351.git.mark.gross@intel.com>
In-Reply-To: <e87e3533536ae5eec0e06ceb7ef7428e42855790.1398812350.git.mark.gross@intel.com>
References: <e87e3533536ae5eec0e06ceb7ef7428e42855790.1398812350.git.mark.gross@intel.com>
From: Daniel Leung <daniel.leung@intel.com>
Date: Thu, 30 Aug 2012 13:06:16 -0700
Subject: [PATCH 269/429] Skip creating subsystem/ in sysfs nodes

Some not-so-well-designed Android apps try to recursively read
the sysfs nodes, e.g., cpu information. The subsystem/ node
sometimes is a symlink back to itself, and this causes these
apps to run out of memory iterating all the nodes.

This patch skips the creation of the subsystem nodes if it is
building for Android devices. There should not be any ill-effects
as Android userspace does not look at the subsystem nodes.

Issue: AXIA-629
Change-Id: I748c8b2fde85161e55b006319d46e8e6bbe4eb43
Signed-off-by: Daniel Leung <daniel.leung@intel.com>
---
 drivers/base/bus.c  |    2 ++
 drivers/base/core.c |    2 ++
 2 files changed, 4 insertions(+)

--- linux.orig/drivers/base/bus.c
+++ linux/drivers/base/bus.c
@@ -520,10 +520,12 @@ int bus_add_device(struct device *dev)
 						&dev->kobj, dev_name(dev));
 		if (error)
 			goto out_groups;
+#ifndef CONFIG_ANDROID
 		error = sysfs_create_link(&dev->kobj,
 				&dev->bus->p->subsys.kobj, "subsystem");
 		if (error)
 			goto out_subsys;
+#endif
 		klist_add_tail(&dev->p->knode_bus, &bus->p->klist_devices);
 	}
 	return 0;
--- linux.orig/drivers/base/core.c
+++ linux/drivers/base/core.c
@@ -827,11 +827,13 @@ static int device_add_class_symlinks(str
 	if (!dev->class)
 		return 0;
 
+#ifndef CONFIG_ANDROID
 	error = sysfs_create_link(&dev->kobj,
 				  &dev->class->p->subsys.kobj,
 				  "subsystem");
 	if (error)
 		goto out;
+#endif
 
 	if (dev->parent && device_is_not_partition(dev)) {
 		error = sysfs_create_link(&dev->kobj, &dev->parent->kobj,
