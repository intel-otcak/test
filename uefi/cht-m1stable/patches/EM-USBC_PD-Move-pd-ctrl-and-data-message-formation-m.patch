From b3bfbf4f876149b59ed215cc4130b476bd4c24ea Mon Sep 17 00:00:00 2001
From: Albin B <albin.bala.krishnan@intel.com>
Date: Fri, 4 Sep 2015 00:44:48 +0530
Subject: [PATCH] [EM/USBC_PD]: Move pd ctrl and data message formation methods
 to protocol

The pd_ctrl_msg and pd_data_msg methods are defined in message.c file,
which are used only by the protocol. Hence moving these methods to the
protocol as static functions.

Change-Id: I6d6a42079b815f412851fb156d15652aa43f8ee9
Tracked-On: https://jira01.devtools.intel.com/browse/GMINL-16361
Signed-off-by: Albin B <albin.bala.krishnan@intel.com>
---
 drivers/usb/typec/pd/Makefile   |  2 +-
 drivers/usb/typec/pd/message.c  | 65 -----------------------------------------
 drivers/usb/typec/pd/message.h  |  3 --
 drivers/usb/typec/pd/protocol.c | 37 +++++++++++++++++++++++
 drivers/usb/typec/pd/protocol.h |  3 --
 5 files changed, 38 insertions(+), 72 deletions(-)
 delete mode 100644 drivers/usb/typec/pd/message.c

diff --git a/drivers/usb/typec/pd/Makefile b/drivers/usb/typec/pd/Makefile
index ac5c246..9db8cc3 100644
--- a/drivers/usb/typec/pd/Makefile
+++ b/drivers/usb/typec/pd/Makefile
@@ -3,7 +3,7 @@
 #
 
 pd_policy-y	:= devpolicy_mgr.o
-pd_policy-y	+= message.o protocol.o
+pd_policy-y	+= protocol.o
 pd_policy-y	+= policy_engine.o
 pd_policy-y	+= sink_port_pe.o
 pd_policy-y	+= src_port_pe.o
diff --git a/drivers/usb/typec/pd/message.c b/drivers/usb/typec/pd/message.c
deleted file mode 100644
index 337c338..0000000
--- a/drivers/usb/typec/pd/message.c
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
- * message.c: PD Protocol framework for creating PD messages
- *
- * Copyright (C) 2015 Intel Corporation
- *
- * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; version 2 of the License.
- *
- * This program is distributed in the hope that it will be useful, but
- * WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. Seee the GNU
- * General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License along
- * with this program.
- *
- * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- * Author: Kannappan, R <r.kannappan@intel.com>
- * Author: Albin, B <albin.bala.krishnan@intel.com>
- */
-
-#include <linux/mutex.h>
-#include <linux/types.h>
-#include "protocol.h"
-#include "message.h"
-
-int pd_ctrl_msg(struct pd_prot *pd, u8 msg_type, u8 msg_id)
-{
-	struct pd_packet *buf = &pd->tx_buf;
-	struct pd_pkt_header *header = &buf->header;
-
-	header->msg_type = msg_type & PD_MSG_HEAD_MSG_TYPE;
-	header->data_role = pd->data_role & PD_MSG_HEADER_ROLE_BITS_MASK;
-	header->rev_id = PD_REV_ID_2 & PD_MSG_HEADER_REVID_BITS_MASK;
-	if (pd->pwr_role == PD_POWER_ROLE_PROVIDER)
-		header->pwr_role = 1;
-	else
-		header->pwr_role = 0;
-	header->msg_id = msg_id & PD_MSG_HEADER_MSGID_BITS_MASK;
-	header->num_data_obj = 0;
-	return 0;
-}
-EXPORT_SYMBOL_GPL(pd_ctrl_msg);
-
-int pd_data_msg(struct pd_prot *pd, int len, u8 msg_type)
-{
-	struct pd_packet *buf = &pd->tx_buf;
-	struct pd_pkt_header *header = &buf->header;
-
-	header->msg_type = msg_type & PD_MSG_HEAD_MSG_TYPE;
-	header->data_role = pd->data_role & PD_MSG_HEADER_ROLE_BITS_MASK;
-	header->rev_id = PD_REV_ID_2 & PD_MSG_HEADER_REVID_BITS_MASK;
-	if (pd->pwr_role == PD_POWER_ROLE_PROVIDER)
-		header->pwr_role = 1;
-	else
-		header->pwr_role = 0;
-	header->msg_id = pd->tx_msg_id & PD_MSG_HEADER_MSGID_BITS_MASK;
-	header->num_data_obj = len & PD_MSG_HEADER_N_DOBJ_BITS_MASK;
-
-	return 0;
-}
-EXPORT_SYMBOL_GPL(pd_data_msg);
diff --git a/drivers/usb/typec/pd/message.h b/drivers/usb/typec/pd/message.h
index 8438439..7012855 100644
--- a/drivers/usb/typec/pd/message.h
+++ b/drivers/usb/typec/pd/message.h
@@ -345,7 +345,4 @@ static inline u32 pd_fixed_pdo_to_volt(u32 pdo)
 	return (pdo & 0x3ff) * 50;
 }
 
-struct pd_prot;
-extern int pd_ctrl_msg(struct pd_prot *pd, u8 msg_type, u8 msg_id);
-extern int pd_data_msg(struct pd_prot *pd, int len, u8 msg_type);
 #endif /* __PD_MESSAGE_H__ */
diff --git a/drivers/usb/typec/pd/protocol.c b/drivers/usb/typec/pd/protocol.c
index 2be4d84..c3f2225 100644
--- a/drivers/usb/typec/pd/protocol.c
+++ b/drivers/usb/typec/pd/protocol.c
@@ -35,6 +35,43 @@ struct prot_msg {
 	struct pd_packet pkt;
 };
 
+
+static int pd_ctrl_msg(struct pd_prot *pd, u8 msg_type, u8 msg_id)
+{
+	struct pd_packet *buf = &pd->tx_buf;
+	struct pd_pkt_header *header = &buf->header;
+
+	header->msg_type = msg_type & PD_MSG_HEAD_MSG_TYPE;
+	header->data_role = pd->data_role & PD_MSG_HEADER_ROLE_BITS_MASK;
+	header->rev_id = PD_REV_ID_2 & PD_MSG_HEADER_REVID_BITS_MASK;
+	if (pd->pwr_role == PD_POWER_ROLE_PROVIDER)
+		header->pwr_role = 1;
+	else
+		header->pwr_role = 0;
+	header->msg_id = msg_id & PD_MSG_HEADER_MSGID_BITS_MASK;
+	header->num_data_obj = 0;
+
+	return 0;
+}
+
+static int pd_data_msg(struct pd_prot *pd, int len, u8 msg_type)
+{
+	struct pd_packet *buf = &pd->tx_buf;
+	struct pd_pkt_header *header = &buf->header;
+
+	header->msg_type = msg_type & PD_MSG_HEAD_MSG_TYPE;
+	header->data_role = pd->data_role & PD_MSG_HEADER_ROLE_BITS_MASK;
+	header->rev_id = PD_REV_ID_2 & PD_MSG_HEADER_REVID_BITS_MASK;
+	if (pd->pwr_role == PD_POWER_ROLE_PROVIDER)
+		header->pwr_role = 1;
+	else
+		header->pwr_role = 0;
+	header->msg_id = pd->tx_msg_id & PD_MSG_HEADER_MSGID_BITS_MASK;
+	header->num_data_obj = len & PD_MSG_HEADER_N_DOBJ_BITS_MASK;
+
+	return 0;
+}
+
 static void pd_policy_update_data_role(struct pd_prot *prot,
 					enum data_role drole)
 {
diff --git a/drivers/usb/typec/pd/protocol.h b/drivers/usb/typec/pd/protocol.h
index 4806689..dca52dc 100644
--- a/drivers/usb/typec/pd/protocol.h
+++ b/drivers/usb/typec/pd/protocol.h
@@ -120,7 +120,4 @@ static inline int protocol_bind_dpm(struct typec_phy *phy)
 static inline void protocol_unbind_dpm(struct typec_phy *phy)
 { }
 #endif /* CONFIG_USBC_PD && CONFIG_USBC_PD_POLICY */
-
-extern int pd_ctrl_msg(struct pd_prot *pd, u8 msg_type, u8 msg_id);
-extern int pd_data_msg(struct pd_prot *pd, int len, u8 msg_type);
 #endif /* __USB_PD_PROT_H__ */
-- 
1.9.1

