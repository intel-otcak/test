From 837d7b3468acc304dadb2f5540b08d3420bbb3a3 Mon Sep 17 00:00:00 2001
From: Zaikuo Wang <zaikuo.wang@intel.com>
Date: Mon, 20 Apr 2015 13:57:42 +0800
Subject: [PATCH 02/10] atomisp2:W/A for panic at _free_pages when exiting
 camera

W/A: set_pages_wb seldom return value = -EFAULT indicate that
address of page is not in valid range;then, _free_pages would panic
Do not know why page address be valid now
it maybe memory corruption by lowmemory

Change-Id: I528eb0f1266bad32a584cdfc05adc2239ec9ca09
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-33052
Signed-off-by: Zaikuo Wang <zaikuo.wang@intel.com>
Reviewed-on: https://icggerrit.ir.intel.com/52075
Approver: Tian Shu Qiu <tian.shu.qiu@intel.com>
Validation-Android: Wei Tao <wei.tao@intel.com>
Reviewed-by: Yunliang Ding <yunliang.ding@intel.com>
Integrator: Wei Tao <wei.tao@intel.com>
Build: WeiX Meng <weix.meng@intel.com>
Reviewed-by: WeiX Meng <weix.meng@intel.com>
Integrator: WeiX Meng <weix.meng@intel.com>
Maintainer: WeiX Meng <weix.meng@intel.com>
---
 .../media/pci/atomisp2/atomisp_driver/hmm/hmm_bo.c | 13 ++++++++--
 .../atomisp2/atomisp_driver/hmm/hmm_dynamic_pool.c | 29 +++++++++++++++-------
 .../atomisp_driver/hmm/hmm_reserved_pool.c         | 10 +++++++-
 3 files changed, 40 insertions(+), 12 deletions(-)

diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/hmm/hmm_bo.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/hmm/hmm_bo.c
index b493f19..9fb36d2 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/hmm/hmm_bo.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/hmm/hmm_bo.c
@@ -711,8 +711,17 @@ static void free_private_bo_pages(struct hmm_buffer_object *bo,
 			if (ret)
 				dev_err(atomisp_dev,
 						"set page to WB err ...\n");
-			__free_pages(bo->page_obj[i].page, 0);
-			hmm_mem_stat.sys_size--;
+			/*
+			W/A: set_pages_wb seldom return value = -EFAULT
+			indicate that address of page is not in valid
+			range(0xffff880000000000~0xffffc7ffffffffff)
+			then, _free_pages would panic; Do not know why page
+			address be valid,it maybe memory corruption by lowmemory
+			*/
+			if (-EFAULT != ret) {
+				__free_pages(bo->page_obj[i].page, 0);
+				hmm_mem_stat.sys_size--;
+			}
 			break;
 		}
 	}
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/hmm/hmm_dynamic_pool.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/hmm/hmm_dynamic_pool.c
index 951e3be..f65398a 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/hmm/hmm_dynamic_pool.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/hmm/hmm_dynamic_pool.c
@@ -103,8 +103,17 @@ static void free_pages_to_dynamic_pool(void *pool,
 		ret = set_pages_wb(page_obj->page, 1);
 		if (ret)
 			dev_err(atomisp_dev, "set page to WB err ...\n");
-		__free_pages(page_obj->page, 0);
-		hmm_mem_stat.sys_size--;
+		/*
+		W/A: set_pages_wb seldom return value = -EFAULT
+		indicate that address of page is not in valid
+		range(0xffff880000000000~0xffffc7ffffffffff)
+		then, _free_pages would panic; Do not know why page
+		address be valid, it maybe memory corruption by lowmemory
+		*/
+		if (-EFAULT != ret) {
+			__free_pages(page_obj->page, 0);
+			hmm_mem_stat.sys_size--;
+		}
 		return;
 	}
 #ifdef USE_KMEM_CACHE
@@ -120,9 +129,10 @@ static void free_pages_to_dynamic_pool(void *pool,
 		ret = set_pages_wb(page_obj->page, 1);
 		if (ret)
 			dev_err(atomisp_dev, "set page to WB err ...\n");
-		__free_pages(page_obj->page, 0);
-		hmm_mem_stat.sys_size--;
-
+		if (-EFAULT != ret) {
+			__free_pages(page_obj->page, 0);
+			hmm_mem_stat.sys_size--;
+		}
 		return;
 	}
 
@@ -201,10 +211,11 @@ static void hmm_dynamic_pool_exit(void **pool)
 		ret = set_pages_wb(hmm_page->page, 1);
 		if (ret)
 			dev_err(atomisp_dev, "set page to WB err...\n");
-		__free_pages(hmm_page->page, 0);
-		hmm_mem_stat.dyc_size--;
-		hmm_mem_stat.sys_size--;
-
+		if (-EFAULT != ret) {
+			__free_pages(hmm_page->page, 0);
+			hmm_mem_stat.dyc_size--;
+			hmm_mem_stat.sys_size--;
+		}
 #ifdef USE_KMEM_CACHE
 		kmem_cache_free(dypool_info->pgptr_cache, hmm_page);
 #else
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/hmm/hmm_reserved_pool.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/hmm/hmm_reserved_pool.c
index 5d042ef..e9a1fb4 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/hmm/hmm_reserved_pool.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/hmm/hmm_reserved_pool.c
@@ -221,7 +221,15 @@ static void hmm_reserved_pool_exit(void **pool)
 		ret = set_pages_wb(repool_info->pages[i], 1);
 		if (ret)
 			dev_err(atomisp_dev, "set page to WB err...\n");
-		__free_pages(repool_info->pages[i], 0);
+		/*
+		W/A: set_pages_wb seldom return value = -EFAULT
+		indicate that address of page is not in valid
+		range(0xffff880000000000~0xffffc7ffffffffff)
+		then, _free_pages would panic; Do not know why
+		page address be valid, it maybe memory corruption by lowmemory
+		*/
+		if (-EFAULT != ret)
+			__free_pages(repool_info->pages[i], 0);
 	}
 
 	atomisp_kernel_free(repool_info->pages);
-- 
1.9.1

