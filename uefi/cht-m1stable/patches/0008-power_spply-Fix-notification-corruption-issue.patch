From e3ba005f781a45c5f1b1ec5af944fb886e791ea3 Mon Sep 17 00:00:00 2001
From: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@intel.com>
Date: Thu, 12 Jun 2014 10:49:27 -0700
Subject: [PATCH 08/10] power_spply: Fix notification corruption issue

Same notification block is registered twice to different
notification head. This will corrupt the next pointer of
notification block. So creating a different notification
block for each notification registration.

Change-Id: If18cbb012a602e56bf2a15319efb4888b930f95a
Signed-off-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@intel.com>
---
 drivers/power/power_supply_charger.c | 10 +++++++---
 1 file changed, 7 insertions(+), 3 deletions(-)

diff --git a/drivers/power/power_supply_charger.c b/drivers/power/power_supply_charger.c
index 7b7c4a4..23515c0 100644
--- a/drivers/power/power_supply_charger.c
+++ b/drivers/power/power_supply_charger.c
@@ -78,9 +78,13 @@ static int get_supplied_by_list(struct power_supply *psy,
 static int handle_cable_notification(struct notifier_block *nb,
 				   unsigned long event, void *data);
 struct usb_phy *otg_xceiver;
-struct notifier_block nb = {
+struct notifier_block usb_nb = {
 		   .notifier_call = handle_cable_notification,
 		};
+struct notifier_block psy_nb = {
+		   .notifier_call = handle_cable_notification,
+		};
+
 static void configure_chrgr_source(struct charger_cable *cable_lst);
 
 struct charger_cable *get_cable(unsigned long usb_chrgr_type)
@@ -178,13 +182,13 @@ static int register_notifier(void)
 		retval = -EIO;
 		goto notifier_reg_failed;
 	}
-	retval = usb_register_notifier(otg_xceiver, &nb);
+	retval = usb_register_notifier(otg_xceiver, &usb_nb);
 	if (retval) {
 		pr_err("failure to register otg notifier\n");
 		goto notifier_reg_failed;
 	}
 
-	retval = power_supply_reg_notifier(&nb);
+	retval = power_supply_reg_notifier(&psy_nb);
 	if (retval) {
 		pr_err("failure to register power_supply notifier\n");
 		goto notifier_reg_failed;
-- 
2.0.0

