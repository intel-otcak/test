From 1eb4dc5c343c5c8474f26bea9d3cf678d20ee1ea Mon Sep 17 00:00:00 2001
From: Pengpeng Cui <pengpengx.cui@intel.com>
Date: Fri, 30 Jan 2015 15:27:35 +0800
Subject: [PATCH 251/255] atomisp2: css2401 and
 2401_legacy-irci_master_20150129_1500_

Merge CSS2.1 for css2401 and 2401_legacy
for irci_master_20150129_1500 firmware tag

Change-Id: I532036041ba97461049d146343e96f6ff12643ed
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-19786
Signed-off-by: Pengpeng Cui <pengpengx.cui@intel.com>
Reviewed-on: https://icggerrit.ir.intel.com/38651
Approver: Wei Tao <wei.tao@intel.com>
Reviewed-by: Wei Tao <wei.tao@intel.com>
---
 .../hive_isp_css_include/host/ref_vector_func.h    | 84 ++++------------------
 .../host/ref_vector_func_types.h                   | 17 ++---
 .../pci/atomisp2/css2401a0_legacy_v21/ia_css.h     |  4 +-
 .../css2401a0_legacy_v21/ia_css_host_data.h        |  4 +-
 .../atomisp2/css2401a0_legacy_v21/ia_css_types.h   |  4 +-
 .../css2401a0_legacy_v21/ia_css_version_data.h     |  2 +-
 .../isp/kernels/hdr/ia_css_hdr.host.c              |  4 +-
 .../isp/kernels/hdr/ia_css_hdr.host.h              |  4 +-
 .../isp/kernels/hdr/ia_css_hdr_param.h             |  4 +-
 .../isp/kernels/hdr/ia_css_hdr_types.h             |  4 +-
 .../isp/kernels/pdaf/ia_css_pdaf.host.c            | 63 ++++++++++++++++
 .../isp/kernels/pdaf/ia_css_pdaf.host.h            | 35 +++++++++
 .../isp/kernels/pdaf/ia_css_pdaf_param.h           | 53 ++++++++++++++
 .../isp/kernels/pdaf/ia_css_pdaf_types.h           | 43 +++++++++++
 .../xnrvideo4/ia_css_xnr4_chroma_metric_param.h    | 29 ++++++++
 .../xnr/xnrvideo4/ia_css_xnr4_common_param.h       | 10 ++-
 .../xnr/xnrvideo4/ia_css_xnr4_edge_metric_param.h  |  9 ---
 .../xnr/xnrvideo4/ia_css_xnr4_output_blend_param.h |  7 +-
 .../isp/kernels/xnr/xnrvideo4/ia_css_xnr4_param.h  |  1 +
 .../isp/modes/interface/isp_const.h                |  1 +
 .../css2401a0_legacy_v21/sh_css_firmware.c         |  4 +-
 .../hive_isp_css_include/host/ref_vector_func.h    | 84 ++++------------------
 .../host/ref_vector_func_types.h                   | 17 ++---
 .../media/pci/atomisp2/css2401a0_v21/ia_css.h      |  4 +-
 .../pci/atomisp2/css2401a0_v21/ia_css_host_data.h  |  4 +-
 .../pci/atomisp2/css2401a0_v21/ia_css_types.h      |  4 +-
 .../atomisp2/css2401a0_v21/ia_css_version_data.h   |  2 +-
 .../isp/kernels/hdr/ia_css_hdr.host.c              |  4 +-
 .../isp/kernels/hdr/ia_css_hdr.host.h              |  4 +-
 .../isp/kernels/hdr/ia_css_hdr_param.h             |  4 +-
 .../isp/kernels/hdr/ia_css_hdr_types.h             |  4 +-
 .../isp/kernels/pdaf/ia_css_pdaf.host.c            | 63 ++++++++++++++++
 .../isp/kernels/pdaf/ia_css_pdaf.host.h            | 35 +++++++++
 .../isp/kernels/pdaf/ia_css_pdaf_param.h           | 53 ++++++++++++++
 .../isp/kernels/pdaf/ia_css_pdaf_types.h           | 43 +++++++++++
 .../xnrvideo4/ia_css_xnr4_chroma_metric_param.h    | 29 ++++++++
 .../xnr/xnrvideo4/ia_css_xnr4_common_param.h       | 10 ++-
 .../xnr/xnrvideo4/ia_css_xnr4_edge_metric_param.h  |  9 ---
 .../xnr/xnrvideo4/ia_css_xnr4_output_blend_param.h |  7 +-
 .../isp/kernels/xnr/xnrvideo4/ia_css_xnr4_param.h  |  1 +
 .../css2401a0_v21/isp/modes/interface/isp_const.h  |  1 +
 .../pci/atomisp2/css2401a0_v21/sh_css_firmware.c   |  4 +-
 42 files changed, 552 insertions(+), 220 deletions(-)
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/pdaf/ia_css_pdaf.host.c
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/pdaf/ia_css_pdaf.host.h
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/pdaf/ia_css_pdaf_param.h
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/pdaf/ia_css_pdaf_types.h
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_chroma_metric_param.h
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/pdaf/ia_css_pdaf.host.c
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/pdaf/ia_css_pdaf.host.h
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/pdaf/ia_css_pdaf_param.h
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/pdaf/ia_css_pdaf_types.h
 create mode 100644 drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_chroma_metric_param.h

diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/hive_isp_css_include/host/ref_vector_func.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/hive_isp_css_include/host/ref_vector_func.h
index 2329958..8e8fcac 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/hive_isp_css_include/host/ref_vector_func.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/hive_isp_css_include/host/ref_vector_func.h
@@ -155,80 +155,22 @@ STORAGE_CLASS_REF_VECTOR_FUNC_H tvector1w OP_1w_piecewise_estimation(
 	tvector1w a,
 	ref_config_points config_points);
 
-/** @brief XCU LUT initialization
- *
- * @param[in] config_points   config parameter structure
- *
- * @return				   LUT with three vectors for slope, x_prev, offset
- *
- * Given a set of N points, not necessariliy equidistant,
- * {(x1,y1), (x2,y2), ...., (xn,yn)}, to find
- * the functional value at an arbitrary point around the input set,
- * this function will perform input processing followed by piecewise
- * linear estimation and then output processing to yield the final value.
- * Piecewise liner estimation is performed with the help of LUT generated
- * based on configuration input. Range of min and max config point is
- * divided into 32 equal intervals and LUT is created for each of these 32
- * intervals for slope, y_offset and x_prev. Interval of current point x
- * is calculated by dividing it with the range approximated to nearest
- * power of 2 (upper bound). The range has to be a multiple of 32.
- *
- * * @details
- * Given a set of N configuration points, not necessarily equidistant,
- * {(x1,y1), (x2,y2),....(xn,yn)}, this function gives the piecewise linear
- * estimation for any arbitrary point around the config points. The distance
- * between the minimum config point and maximum config point (range) is
- * divided into ISP_NWAY equal intervals i.e. the LUT size is equal to
- * ISP_NWAY. It is assumed that is always a power of 2.
- * In the current case, 32 intervals are used as the ISP is 32 way. It should
- * be noted that some approximation is introduced here as the range may not be
- * an integer multiple of ISP_NWAY.
- * The LUT is created from the configuration input for slope, y_offset and
- * x_prev_value. Input values of a particular conifg point are replicated in
- * the LUT till the interval reaches the next config point. LUT is then filled
- * with the data of the next config point. For example:
- * LUT for Slope can look like S = [s1 s2 s2 s2 s2 s3 s3 s4 s5 s5 s6 s6 s6..],
- * depending on the distance between the config points. Similarly the data
- * is filled for y_offset and X-prev_values. */
-
-STORAGE_CLASS_REF_VECTOR_FUNC_H ref_config_point_vectors XCU_LUT_create(
-	xcu_ref_config_points config_points);
-
-/** @brief XCU Fast Config Unit Piecewise linear estimation
- *
- * @param[in] x input
- * @param[in] config_points   config parameters structure
- * @param[in] init_vectors		   LUT data structure
- *
- * @return		     	   piecewise linear estimated output
- *
- * Once the LUT is created in XCU_LUT_create function,
- * the interval of the any input x is identified by dividing it by the range
- * (approximated to the nearest power of 2 (upper bound)). This is done to have a
- * fast division operation to identify the interval of input x. Once the
- * interval of the input is idenitfied, its config data is retrieved from the
- * LUT and output y is calculated. Input points equal to x1 and xn are treated as
- * simple cases of using their offset value as the output.
- */
-STORAGE_CLASS_REF_VECTOR_FUNC_H tvector1w OP_1w_X_piecewise_estimation(
-	tvector1w x,
-	xcu_ref_config_points config_points,
-	ref_config_point_vectors init_vectors);
-
-/** @brief OP_1w_XCU Wrapper function for XCU LUT create, piecewise estimation and output clamping
- *
- * @param[in] x input
- * @param[in] config_points Config parameters structure
- *
- * @return	piecewise linear estimated clamped output
- * This block gets a set of input configuration points and input x, creates a LUT for
- * config points and gives a clamped piece-wise interpolated output. This block assumes
- * that the difference between the first config point and the last config point is a multiple
- * of 32. The config points are monotonically increasing.
+/** @brief Fast Config Unit
+ *
+ * @param[in] x 		input
+ * @param[in] init_vectors	LUT data structure
+ *
+ * @return	piecewise linear estimated output
+ * This block gets an input x and a set of input configuration points stored in a look-up
+ * table of 32 elements. First, the x input is clipped to be within the range [x1, xn+1].
+ * Then, it computes the interval in which the input lies. Finally, the output is computed
+ * by performing linear interpolation based on the interval properties (i.e. x_prev, slope,
+ * and offset). This block assumes that the points are equally spaced and that the interval
+ * size is a power of 2.
  **/
 STORAGE_CLASS_REF_VECTOR_FUNC_H  tvector1w OP_1w_XCU(
 	tvector1w x,
-	xcu_ref_config_points config_points);
+	xcu_ref_init_vectors init_vectors);
 
 
 /** @brief Coring
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/hive_isp_css_include/host/ref_vector_func_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/hive_isp_css_include/host/ref_vector_func_types.h
index 9454231..69037ef 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/hive_isp_css_include/host/ref_vector_func_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/hive_isp_css_include/host/ref_vector_func_types.h
@@ -250,18 +250,13 @@ typedef struct {
 } ref_config_points;
 
 typedef struct {
-	tvector1w x_cord[MAX_CONFIG_POINTS];
-	tvector1w slope[MAX_CONFIG_POINTS-1];
-	tvector1w y_offset[MAX_CONFIG_POINTS];
-	tscalar1w_16bit slope_resolution;
-} xcu_ref_config_points;
-
-typedef struct {
-	tscalar1w_16bit slope_vec[CONFIG_UNIT_LUT_SIZE_32];
-	tscalar1w_16bit offset_vec[CONFIG_UNIT_LUT_SIZE_32];
+	tscalar1w_range1wbit slope_vec[CONFIG_UNIT_LUT_SIZE_32];
+	tscalar1w_range1wbit offset_vec[CONFIG_UNIT_LUT_SIZE_32];
 	tscalar1w_16bit x_cord_vec[CONFIG_UNIT_LUT_SIZE_32];
-	tscalar1w_16bit exponent;
-} ref_config_point_vectors;
+	tscalar1w_16bit x_cord_max;
+	tscalar1w_5bit exponent;
+	tscalar1w_5bit slope_resolution;
+} xcu_ref_init_vectors;
 
 typedef struct {
 	tscalar1w search[BMA_SEARCH_BLOCK_SZ_16][BMA_SEARCH_BLOCK_SZ_16];
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css.h
index 4cfde80..8021eedf 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150128_1925 */
-/* Release Version: irci_master_20150128_1925 */
+/* Release Version: irci_master_20150129_1500 */
+/* Release Version: irci_master_20150129_1500 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_host_data.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_host_data.h
index 0b05799..022b232 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_host_data.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_host_data.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150128_1925 */
-/* Release Version: irci_master_20150128_1925 */
+/* Release Version: irci_master_20150129_1500 */
+/* Release Version: irci_master_20150129_1500 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_types.h
index 056ec8e..8e43819 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_types.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150128_1925 */
-/* Release Version: irci_master_20150128_1925 */
+/* Release Version: irci_master_20150129_1500 */
+/* Release Version: irci_master_20150129_1500 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_version_data.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_version_data.h
index 3ed5adc..7b2c3c4 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_version_data.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/ia_css_version_data.h
@@ -22,7 +22,7 @@
 #define __IA_CSS_VERSION_DATA_H
 
 
-#define CSS_VERSION_STRING "REL:20150128_05.3_2000; API:2.1.10.6; GIT:scci_20150128_0106_#7472445671f4b07d126c6c563208e8e73389dc89; SDK:/nfs/iir/disks/iir_hivepackages_003/iir_hivepkgs_disk017/Css_Mizuchi/packages/Css_Mizuchi/int_css_mizuchi_20140829_1053; USER:viedifw; "
+#define CSS_VERSION_STRING "REL:20150129_05.4_1637; API:2.1.10.6; GIT:scci_20150129_0104_#04ffe549c0c12783fedda9e5ff6703a6a446a50c; SDK:/nfs/iir/disks/iir_hivepackages_003/iir_hivepkgs_disk017/Css_Mizuchi/packages/Css_Mizuchi/int_css_mizuchi_20140829_1053; USER:viedifw; "
 
 
 #endif
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr.host.c
index fe4ee99..2e5a909 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr.host.c
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150128_1925 */
-/* Release Version: irci_master_20150128_1925 */
+/* Release Version: irci_master_20150129_1500 */
+/* Release Version: irci_master_20150129_1500 */
 /*
  * INTEL CONFIDENTIAL
  *
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr.host.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr.host.h
index 033557c..73ed930 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr.host.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr.host.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150128_1925 */
-/* Release Version: irci_master_20150128_1925 */
+/* Release Version: irci_master_20150129_1500 */
+/* Release Version: irci_master_20150129_1500 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr_param.h
index a059bdf..58dc99c 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr_param.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150128_1925 */
-/* Release Version: irci_master_20150128_1925 */
+/* Release Version: irci_master_20150129_1500 */
+/* Release Version: irci_master_20150129_1500 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr_types.h
index e3568c5..65c4d81 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/hdr/ia_css_hdr_types.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150128_1925 */
-/* Release Version: irci_master_20150128_1925 */
+/* Release Version: irci_master_20150129_1500 */
+/* Release Version: irci_master_20150129_1500 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/pdaf/ia_css_pdaf.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/pdaf/ia_css_pdaf.host.c
new file mode 100644
index 0000000..437e9ed
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/pdaf/ia_css_pdaf.host.c
@@ -0,0 +1,63 @@
+/*
+ * Support for Intel Camera Imaging ISP subsystem.
+ * Copyright (c) 2015, Intel Corporation.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms and conditions of the GNU General Public License,
+ * version 2, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ */
+
+#include "ia_css_types.h"
+#include "sh_css_defs.h"
+#include "sh_css_frac.h"
+#include "ia_css_pdaf.host.h"
+
+const struct ia_css_pdaf_config default_pdaf_config =
+{
+	0, 0,
+	{ 0, 0,
+	  {0}, {0},
+	  {0}, {0}
+	}
+};
+
+void
+ia_css_pdaf_dmem_encode(
+	struct sh_css_isp_pdaf_dmem_params *to,
+	const struct ia_css_pdaf_config *from,
+	unsigned size)
+{
+	(void)size;
+	to->frm_length = from->frm_length;
+	to->frm_width  = from->frm_width;
+	to->ext_cfg_data_dmem.num_x_patterns = from->ext_cfg_data.num_x_patterns;
+	to->ext_cfg_data_dmem.num_y_patterns = from->ext_cfg_data.num_y_patterns;
+}
+
+void
+ia_css_pdaf_vmem_encode(
+	struct sh_css_isp_pdaf_vmem_params *to,
+	const struct ia_css_pdaf_config *from,
+	unsigned size)
+{
+
+	unsigned int i;
+	(void)size;
+
+	for ( i=0 ; i < ISP_NWAY; i++)
+	{
+		to->ext_cfg_data_vmem.y_step_size[i] = from->ext_cfg_data.y_step_size[i];
+		to->ext_cfg_data_vmem.y_offset[i] = from->ext_cfg_data.y_offset[i];
+	}
+
+  for ( i=0 ; i < ISP_NWAY; i++)
+	{
+		to->ext_cfg_data_vmem.x_step_size[i] = from->ext_cfg_data.x_step_size[i];
+		to->ext_cfg_data_vmem.x_offset[i] = from->ext_cfg_data.x_offset[i];
+	}
+}
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/pdaf/ia_css_pdaf.host.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/pdaf/ia_css_pdaf.host.h
new file mode 100644
index 0000000..9d3b99f
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/pdaf/ia_css_pdaf.host.h
@@ -0,0 +1,35 @@
+/*
+ * Support for Intel Camera Imaging ISP subsystem.
+ * Copyright (c) 2015, Intel Corporation.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms and conditions of the GNU General Public License,
+ * version 2, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ */
+
+#ifndef __IA_CSS_PDAF_HOST_H
+#define __IA_CSS_PDAF_HOST_H
+
+#include "ia_css_pdaf_types.h"
+#include "ia_css_pdaf_param.h"
+
+extern const struct ia_css_pdaf_config default_pdaf_config;
+
+void
+ia_css_pdaf_dmem_encode(
+	struct sh_css_isp_pdaf_dmem_params *to,
+	const struct ia_css_pdaf_config *from,
+	unsigned size);
+
+void
+ia_css_pdaf_vmem_encode(
+	struct sh_css_isp_pdaf_vmem_params *to,
+	const struct ia_css_pdaf_config *from,
+	unsigned size);
+
+#endif /* __IA_CSS_PDAF_HOST_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/pdaf/ia_css_pdaf_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/pdaf/ia_css_pdaf_param.h
new file mode 100644
index 0000000..a6ad6f9
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/pdaf/ia_css_pdaf_param.h
@@ -0,0 +1,53 @@
+/*
+ * Support for Intel Camera Imaging ISP subsystem.
+ * Copyright (c) 2015, Intel Corporation.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms and conditions of the GNU General Public License,
+ * version 2, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ */
+
+#ifndef __IA_CSS_PDAF_PARAM_H
+#define __IA_CSS_PDAF_PARAM_H
+
+#include "type_support.h"
+
+/*
+ * Extraction configuration parameters
+ */
+
+struct sh_css_isp_extraction_dmem_params
+{
+	uint8_t num_x_patterns;
+	uint8_t num_y_patterns;
+};
+
+struct sh_css_isp_extraction_vmem_params
+{
+	int16_t y_step_size[ISP_NWAY];
+	int16_t y_offset[ISP_NWAY];
+	int16_t x_step_size[ISP_NWAY];
+	int16_t x_offset[ISP_NWAY];
+};
+
+/*
+ * PDAF configuration parameters
+ */
+struct sh_css_isp_pdaf_vmem_params
+{
+	struct sh_css_isp_extraction_vmem_params ext_cfg_data_vmem;
+};
+
+struct sh_css_isp_pdaf_dmem_params
+{
+	uint16_t frm_length;
+	uint16_t frm_width;
+	struct sh_css_isp_extraction_dmem_params ext_cfg_data_dmem;
+};
+
+#endif /* __IA_CSS_PDAF_PARAM_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/pdaf/ia_css_pdaf_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/pdaf/ia_css_pdaf_types.h
new file mode 100644
index 0000000..d34928e
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/pdaf/ia_css_pdaf_types.h
@@ -0,0 +1,43 @@
+/*
+ * Support for Intel Camera Imaging ISP subsystem.
+ * Copyright (c) 2015, Intel Corporation.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms and conditions of the GNU General Public License,
+ * version 2, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ */
+
+#ifndef __IA_CSS_PDAF_TYPES_H
+#define __IA_CSS_PDAF_TYPES_H
+
+#include "type_support.h"
+#include "isp2600_config.h"
+/*
+* CSS-API header file for PDAF parameters
+* These parameters shall be filled by host/driver
+* and will be converted to ISP parameters in encode
+* function.
+*/
+struct ia_css_extraction_config
+{
+	uint8_t num_x_patterns;
+	uint8_t num_y_patterns;
+	int16_t y_step_size[ISP_NWAY];
+	int16_t y_offset[ISP_NWAY];
+	int16_t x_step_size[ISP_NWAY];
+	int16_t x_offset[ISP_NWAY];
+};
+
+struct ia_css_pdaf_config
+{
+	uint16_t frm_length;
+	uint16_t frm_width;
+	struct ia_css_extraction_config ext_cfg_data;
+};
+
+#endif /* __IA_CSS_PDAF_TYPES_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_chroma_metric_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_chroma_metric_param.h
new file mode 100644
index 0000000..5d547e8
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_chroma_metric_param.h
@@ -0,0 +1,29 @@
+/*
+ * INTEL CONFIDENTIAL
+ *
+ * Copyright (C) 2010 - 2015 Intel Corporation.
+ * All Rights Reserved.
+ *
+ * The source code contained or described herein and all documents
+ * related to the source code ("Material") are owned by Intel Corporation
+ * or licensors. Title to the Material remains with Intel
+ * Corporation or its licensors. The Material contains trade
+ * secrets and proprietary and confidential information of Intel or its
+ * licensors. The Material is protected by worldwide copyright
+ * and trade secret laws and treaty provisions. No part of the Material may
+ * be used, copied, reproduced, modified, published, uploaded, posted,
+ * transmitted, distributed, or disclosed in any way without Intel's prior
+ * express written permission.
+ *
+ * No License under any patent, copyright, trade secret or other intellectual
+ * property right is granted to or conferred upon you by disclosure or
+ * delivery of the Materials, either expressly, by implication, inducement,
+ * estoppel or otherwise. Any license under such intellectual property rights
+ * must be express and approved by Intel in writing.
+ */
+#ifndef __IA_CSS_XNR4_CHROMA_METRIC_PARAM_H
+#define __IA_CSS_XNR4_CHROMA_METRIC_PARAM_H
+
+#include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_common_param.h"
+
+#endif /* __IA_CSS_XNR4_CHROMA_METRIC_PARAM_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_common_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_common_param.h
index f1e4090..444ce80 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_common_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_common_param.h
@@ -1,7 +1,7 @@
 /*
  * INTEL CONFIDENTIAL
  *
- * Copyright (C) 2010 - 2014 Intel Corporation.
+ * Copyright (C) 2010 - 2015 Intel Corporation.
  * All Rights Reserved.
  *
  * The source code contained or described herein and all documents
@@ -33,4 +33,12 @@
 #define XNR4_STRIPE_SIZE	(2560)
 
 
+/* Medium frequency Subkernel Configuration */
+#define XNR4_MF_FILTER_SIZE		(5)
+#define XNR4_MF_FILTER_DELAY_PIX	(XNR4_MF_FILTER_SIZE / 2) /* 2 pixel delay due to 5 tab filter */
+
+#define XNR4_MF_FILTER_VRT_DELAY	(XNR4_MF_FILTER_DELAY_PIX) /* 2 lines of delay */
+#define XNR4_MF_FILTER_HOR_DELAY	(1) /* 1 vector delay - to align delay to vector boundary */
+
+
 #endif /* __IA_CSS_XNR4_COMMON_PARAM_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_edge_metric_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_edge_metric_param.h
index ebb16a7..ff0f95f 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_edge_metric_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_edge_metric_param.h
@@ -26,13 +26,4 @@
 
 #include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_common_param.h"
 
-/* Edge Metric Subkernel Configuration */
-
-#define XNR4_EM_FILTER_SIZE		(5)
-#define XNR4_EM_FILTER_DELAY_PIX	(XNR4_EM_FILTER_SIZE / 2) /* 2 pixel delay due to 5 tab filter */
-
-#define XNR4_EM_FILTER_VRT_DELAY	(XNR4_EM_FILTER_DELAY_PIX) /* 2 lines of delay */
-#define XNR4_EM_FILTER_HOR_DELAY	(1) /* 1 vector delay - to align delay to vector boundary */
-
-
 #endif /* __IA_CSS_XNR4_EDGE_METRIC_PARAM_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend_param.h
index 93a9c80..b0e9251 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend_param.h
@@ -31,7 +31,12 @@
 
 /* TODO: get the delay from JBL */
 #define XNR4_JBL_VER_DELAY			(3)
-#define XNR4_JBL_HOR_DELAY			(1)
+/* With horizontal delay of 2 for output blend, a total of 48 registers are
+ * needed to hold the history of two s_2x2_yuv_420 data types. There is a
+ * design change discussions going on to use pixels for delay instead of
+ * vector aligned and for now we are going with a horizontal delay of 1.
+ * Hence taking the JBL HOR delay to 0. */
+#define XNR4_JBL_HOR_DELAY                     (0)
 
 #define XNR4_OUTPUT_BLEND_VER_DELAY		((XNR4_JBL_VER_DELAY * XNR4_LUMA_DS_FACTOR) + \
 						(XNR4_UPSCALE_VER_DELAY * XNR4_LUMA_DS_FACTOR))
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_param.h
index 6fbf095..93d3207 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_param.h
@@ -27,6 +27,7 @@
 #include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_downsample_param.h"
 #include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_upsample_param.h"
 #include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_edge_metric_param.h"
+#include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_chroma_metric_param.h"
 #include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_radial_metric_param.h"
 #include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend_param.h"
 
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/modes/interface/isp_const.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/modes/interface/isp_const.h
index 1f2bf67..ea9fb1d 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/modes/interface/isp_const.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/isp/modes/interface/isp_const.h
@@ -234,6 +234,7 @@
 #define SH_CSS_BINARY_ID_IF_TO_OSYS_PRIMARY                 276
 #define SH_CSS_BINARY_ID_IF_TO_OSYS_NO_XNR_PRIMARY          277
 #define SH_CSS_BINARY_ID_IF_TO_OSYS_NO_XNR_PRIMARY_STRIPED  278
+#define SH_CSS_BINARY_ID_IF_TO_OSYS_PRIMARY_STRIPED         279
 
 #define XMEM_WIDTH_BITS              HIVE_ISP_DDR_WORD_BITS
 #define XMEM_SHORTS_PER_WORD         (HIVE_ISP_DDR_WORD_BITS/16)
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_firmware.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_firmware.c
index c05883a..3268e29 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_firmware.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_legacy_v21/sh_css_firmware.c
@@ -47,10 +47,10 @@ struct fw_param {
 /* Warning: same order as SH_CSS_BINARY_ID_* */
 static struct firmware_header *firmware_header;
 
-/* The string STR(irci_master_20150128_1925) is a place holder
+/* The string STR(irci_master_20150129_1500) is a place holder
  * which will be replaced with the actual RELEASE_VERSION
  * during package generation. Please do not modify  */
-static const char *release_version = STR(irci_master_20150128_1925);
+static const char *release_version = STR(irci_master_20150129_1500);
 
 #define MAX_FW_REL_VER_NAME	300
 static char FW_rel_ver_name[MAX_FW_REL_VER_NAME] = "---";
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/hive_isp_css_include/host/ref_vector_func.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/hive_isp_css_include/host/ref_vector_func.h
index 2329958..8e8fcac 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/hive_isp_css_include/host/ref_vector_func.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/hive_isp_css_include/host/ref_vector_func.h
@@ -155,80 +155,22 @@ STORAGE_CLASS_REF_VECTOR_FUNC_H tvector1w OP_1w_piecewise_estimation(
 	tvector1w a,
 	ref_config_points config_points);
 
-/** @brief XCU LUT initialization
- *
- * @param[in] config_points   config parameter structure
- *
- * @return				   LUT with three vectors for slope, x_prev, offset
- *
- * Given a set of N points, not necessariliy equidistant,
- * {(x1,y1), (x2,y2), ...., (xn,yn)}, to find
- * the functional value at an arbitrary point around the input set,
- * this function will perform input processing followed by piecewise
- * linear estimation and then output processing to yield the final value.
- * Piecewise liner estimation is performed with the help of LUT generated
- * based on configuration input. Range of min and max config point is
- * divided into 32 equal intervals and LUT is created for each of these 32
- * intervals for slope, y_offset and x_prev. Interval of current point x
- * is calculated by dividing it with the range approximated to nearest
- * power of 2 (upper bound). The range has to be a multiple of 32.
- *
- * * @details
- * Given a set of N configuration points, not necessarily equidistant,
- * {(x1,y1), (x2,y2),....(xn,yn)}, this function gives the piecewise linear
- * estimation for any arbitrary point around the config points. The distance
- * between the minimum config point and maximum config point (range) is
- * divided into ISP_NWAY equal intervals i.e. the LUT size is equal to
- * ISP_NWAY. It is assumed that is always a power of 2.
- * In the current case, 32 intervals are used as the ISP is 32 way. It should
- * be noted that some approximation is introduced here as the range may not be
- * an integer multiple of ISP_NWAY.
- * The LUT is created from the configuration input for slope, y_offset and
- * x_prev_value. Input values of a particular conifg point are replicated in
- * the LUT till the interval reaches the next config point. LUT is then filled
- * with the data of the next config point. For example:
- * LUT for Slope can look like S = [s1 s2 s2 s2 s2 s3 s3 s4 s5 s5 s6 s6 s6..],
- * depending on the distance between the config points. Similarly the data
- * is filled for y_offset and X-prev_values. */
-
-STORAGE_CLASS_REF_VECTOR_FUNC_H ref_config_point_vectors XCU_LUT_create(
-	xcu_ref_config_points config_points);
-
-/** @brief XCU Fast Config Unit Piecewise linear estimation
- *
- * @param[in] x input
- * @param[in] config_points   config parameters structure
- * @param[in] init_vectors		   LUT data structure
- *
- * @return		     	   piecewise linear estimated output
- *
- * Once the LUT is created in XCU_LUT_create function,
- * the interval of the any input x is identified by dividing it by the range
- * (approximated to the nearest power of 2 (upper bound)). This is done to have a
- * fast division operation to identify the interval of input x. Once the
- * interval of the input is idenitfied, its config data is retrieved from the
- * LUT and output y is calculated. Input points equal to x1 and xn are treated as
- * simple cases of using their offset value as the output.
- */
-STORAGE_CLASS_REF_VECTOR_FUNC_H tvector1w OP_1w_X_piecewise_estimation(
-	tvector1w x,
-	xcu_ref_config_points config_points,
-	ref_config_point_vectors init_vectors);
-
-/** @brief OP_1w_XCU Wrapper function for XCU LUT create, piecewise estimation and output clamping
- *
- * @param[in] x input
- * @param[in] config_points Config parameters structure
- *
- * @return	piecewise linear estimated clamped output
- * This block gets a set of input configuration points and input x, creates a LUT for
- * config points and gives a clamped piece-wise interpolated output. This block assumes
- * that the difference between the first config point and the last config point is a multiple
- * of 32. The config points are monotonically increasing.
+/** @brief Fast Config Unit
+ *
+ * @param[in] x 		input
+ * @param[in] init_vectors	LUT data structure
+ *
+ * @return	piecewise linear estimated output
+ * This block gets an input x and a set of input configuration points stored in a look-up
+ * table of 32 elements. First, the x input is clipped to be within the range [x1, xn+1].
+ * Then, it computes the interval in which the input lies. Finally, the output is computed
+ * by performing linear interpolation based on the interval properties (i.e. x_prev, slope,
+ * and offset). This block assumes that the points are equally spaced and that the interval
+ * size is a power of 2.
  **/
 STORAGE_CLASS_REF_VECTOR_FUNC_H  tvector1w OP_1w_XCU(
 	tvector1w x,
-	xcu_ref_config_points config_points);
+	xcu_ref_init_vectors init_vectors);
 
 
 /** @brief Coring
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/hive_isp_css_include/host/ref_vector_func_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/hive_isp_css_include/host/ref_vector_func_types.h
index 9454231..69037ef 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/hive_isp_css_include/host/ref_vector_func_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/hive_isp_css_include/host/ref_vector_func_types.h
@@ -250,18 +250,13 @@ typedef struct {
 } ref_config_points;
 
 typedef struct {
-	tvector1w x_cord[MAX_CONFIG_POINTS];
-	tvector1w slope[MAX_CONFIG_POINTS-1];
-	tvector1w y_offset[MAX_CONFIG_POINTS];
-	tscalar1w_16bit slope_resolution;
-} xcu_ref_config_points;
-
-typedef struct {
-	tscalar1w_16bit slope_vec[CONFIG_UNIT_LUT_SIZE_32];
-	tscalar1w_16bit offset_vec[CONFIG_UNIT_LUT_SIZE_32];
+	tscalar1w_range1wbit slope_vec[CONFIG_UNIT_LUT_SIZE_32];
+	tscalar1w_range1wbit offset_vec[CONFIG_UNIT_LUT_SIZE_32];
 	tscalar1w_16bit x_cord_vec[CONFIG_UNIT_LUT_SIZE_32];
-	tscalar1w_16bit exponent;
-} ref_config_point_vectors;
+	tscalar1w_16bit x_cord_max;
+	tscalar1w_5bit exponent;
+	tscalar1w_5bit slope_resolution;
+} xcu_ref_init_vectors;
 
 typedef struct {
 	tscalar1w search[BMA_SEARCH_BLOCK_SZ_16][BMA_SEARCH_BLOCK_SZ_16];
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css.h
index 4cfde80..8021eedf 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150128_1925 */
-/* Release Version: irci_master_20150128_1925 */
+/* Release Version: irci_master_20150129_1500 */
+/* Release Version: irci_master_20150129_1500 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_host_data.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_host_data.h
index 0b05799..022b232 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_host_data.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_host_data.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150128_1925 */
-/* Release Version: irci_master_20150128_1925 */
+/* Release Version: irci_master_20150129_1500 */
+/* Release Version: irci_master_20150129_1500 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_types.h
index 056ec8e..8e43819 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_types.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150128_1925 */
-/* Release Version: irci_master_20150128_1925 */
+/* Release Version: irci_master_20150129_1500 */
+/* Release Version: irci_master_20150129_1500 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_version_data.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_version_data.h
index e0beb40..3b56411 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_version_data.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/ia_css_version_data.h
@@ -22,7 +22,7 @@
 #define __IA_CSS_VERSION_DATA_H
 
 
-#define CSS_VERSION_STRING "REL:20150128_05.3_2018; API:2.1.10.6; GIT:scci_20150128_0106_#7472445671f4b07d126c6c563208e8e73389dc89; SDK:/nfs/iir/disks/iir_hivepackages_003/iir_hivepkgs_disk017/Css_Mizuchi/packages/Css_Mizuchi/int_css_mizuchi_20140829_1053; USER:viedifw; "
+#define CSS_VERSION_STRING "REL:20150129_05.4_1656; API:2.1.10.6; GIT:scci_20150129_0104_#04ffe549c0c12783fedda9e5ff6703a6a446a50c; SDK:/nfs/iir/disks/iir_hivepackages_003/iir_hivepkgs_disk017/Css_Mizuchi/packages/Css_Mizuchi/int_css_mizuchi_20140829_1053; USER:viedifw; "
 
 
 #endif
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr.host.c
index fe4ee99..2e5a909 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr.host.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr.host.c
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150128_1925 */
-/* Release Version: irci_master_20150128_1925 */
+/* Release Version: irci_master_20150129_1500 */
+/* Release Version: irci_master_20150129_1500 */
 /*
  * INTEL CONFIDENTIAL
  *
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr.host.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr.host.h
index 033557c..73ed930 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr.host.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr.host.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150128_1925 */
-/* Release Version: irci_master_20150128_1925 */
+/* Release Version: irci_master_20150129_1500 */
+/* Release Version: irci_master_20150129_1500 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr_param.h
index a059bdf..58dc99c 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr_param.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150128_1925 */
-/* Release Version: irci_master_20150128_1925 */
+/* Release Version: irci_master_20150129_1500 */
+/* Release Version: irci_master_20150129_1500 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr_types.h
index e3568c5..65c4d81 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr_types.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/hdr/ia_css_hdr_types.h
@@ -1,5 +1,5 @@
-/* Release Version: irci_master_20150128_1925 */
-/* Release Version: irci_master_20150128_1925 */
+/* Release Version: irci_master_20150129_1500 */
+/* Release Version: irci_master_20150129_1500 */
 /*
  * Support for Intel Camera Imaging ISP subsystem.
  * Copyright (c) 2015, Intel Corporation.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/pdaf/ia_css_pdaf.host.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/pdaf/ia_css_pdaf.host.c
new file mode 100644
index 0000000..437e9ed
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/pdaf/ia_css_pdaf.host.c
@@ -0,0 +1,63 @@
+/*
+ * Support for Intel Camera Imaging ISP subsystem.
+ * Copyright (c) 2015, Intel Corporation.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms and conditions of the GNU General Public License,
+ * version 2, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ */
+
+#include "ia_css_types.h"
+#include "sh_css_defs.h"
+#include "sh_css_frac.h"
+#include "ia_css_pdaf.host.h"
+
+const struct ia_css_pdaf_config default_pdaf_config =
+{
+	0, 0,
+	{ 0, 0,
+	  {0}, {0},
+	  {0}, {0}
+	}
+};
+
+void
+ia_css_pdaf_dmem_encode(
+	struct sh_css_isp_pdaf_dmem_params *to,
+	const struct ia_css_pdaf_config *from,
+	unsigned size)
+{
+	(void)size;
+	to->frm_length = from->frm_length;
+	to->frm_width  = from->frm_width;
+	to->ext_cfg_data_dmem.num_x_patterns = from->ext_cfg_data.num_x_patterns;
+	to->ext_cfg_data_dmem.num_y_patterns = from->ext_cfg_data.num_y_patterns;
+}
+
+void
+ia_css_pdaf_vmem_encode(
+	struct sh_css_isp_pdaf_vmem_params *to,
+	const struct ia_css_pdaf_config *from,
+	unsigned size)
+{
+
+	unsigned int i;
+	(void)size;
+
+	for ( i=0 ; i < ISP_NWAY; i++)
+	{
+		to->ext_cfg_data_vmem.y_step_size[i] = from->ext_cfg_data.y_step_size[i];
+		to->ext_cfg_data_vmem.y_offset[i] = from->ext_cfg_data.y_offset[i];
+	}
+
+  for ( i=0 ; i < ISP_NWAY; i++)
+	{
+		to->ext_cfg_data_vmem.x_step_size[i] = from->ext_cfg_data.x_step_size[i];
+		to->ext_cfg_data_vmem.x_offset[i] = from->ext_cfg_data.x_offset[i];
+	}
+}
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/pdaf/ia_css_pdaf.host.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/pdaf/ia_css_pdaf.host.h
new file mode 100644
index 0000000..9d3b99f
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/pdaf/ia_css_pdaf.host.h
@@ -0,0 +1,35 @@
+/*
+ * Support for Intel Camera Imaging ISP subsystem.
+ * Copyright (c) 2015, Intel Corporation.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms and conditions of the GNU General Public License,
+ * version 2, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ */
+
+#ifndef __IA_CSS_PDAF_HOST_H
+#define __IA_CSS_PDAF_HOST_H
+
+#include "ia_css_pdaf_types.h"
+#include "ia_css_pdaf_param.h"
+
+extern const struct ia_css_pdaf_config default_pdaf_config;
+
+void
+ia_css_pdaf_dmem_encode(
+	struct sh_css_isp_pdaf_dmem_params *to,
+	const struct ia_css_pdaf_config *from,
+	unsigned size);
+
+void
+ia_css_pdaf_vmem_encode(
+	struct sh_css_isp_pdaf_vmem_params *to,
+	const struct ia_css_pdaf_config *from,
+	unsigned size);
+
+#endif /* __IA_CSS_PDAF_HOST_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/pdaf/ia_css_pdaf_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/pdaf/ia_css_pdaf_param.h
new file mode 100644
index 0000000..a6ad6f9
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/pdaf/ia_css_pdaf_param.h
@@ -0,0 +1,53 @@
+/*
+ * Support for Intel Camera Imaging ISP subsystem.
+ * Copyright (c) 2015, Intel Corporation.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms and conditions of the GNU General Public License,
+ * version 2, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ */
+
+#ifndef __IA_CSS_PDAF_PARAM_H
+#define __IA_CSS_PDAF_PARAM_H
+
+#include "type_support.h"
+
+/*
+ * Extraction configuration parameters
+ */
+
+struct sh_css_isp_extraction_dmem_params
+{
+	uint8_t num_x_patterns;
+	uint8_t num_y_patterns;
+};
+
+struct sh_css_isp_extraction_vmem_params
+{
+	int16_t y_step_size[ISP_NWAY];
+	int16_t y_offset[ISP_NWAY];
+	int16_t x_step_size[ISP_NWAY];
+	int16_t x_offset[ISP_NWAY];
+};
+
+/*
+ * PDAF configuration parameters
+ */
+struct sh_css_isp_pdaf_vmem_params
+{
+	struct sh_css_isp_extraction_vmem_params ext_cfg_data_vmem;
+};
+
+struct sh_css_isp_pdaf_dmem_params
+{
+	uint16_t frm_length;
+	uint16_t frm_width;
+	struct sh_css_isp_extraction_dmem_params ext_cfg_data_dmem;
+};
+
+#endif /* __IA_CSS_PDAF_PARAM_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/pdaf/ia_css_pdaf_types.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/pdaf/ia_css_pdaf_types.h
new file mode 100644
index 0000000..d34928e
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/pdaf/ia_css_pdaf_types.h
@@ -0,0 +1,43 @@
+/*
+ * Support for Intel Camera Imaging ISP subsystem.
+ * Copyright (c) 2015, Intel Corporation.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms and conditions of the GNU General Public License,
+ * version 2, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ */
+
+#ifndef __IA_CSS_PDAF_TYPES_H
+#define __IA_CSS_PDAF_TYPES_H
+
+#include "type_support.h"
+#include "isp2600_config.h"
+/*
+* CSS-API header file for PDAF parameters
+* These parameters shall be filled by host/driver
+* and will be converted to ISP parameters in encode
+* function.
+*/
+struct ia_css_extraction_config
+{
+	uint8_t num_x_patterns;
+	uint8_t num_y_patterns;
+	int16_t y_step_size[ISP_NWAY];
+	int16_t y_offset[ISP_NWAY];
+	int16_t x_step_size[ISP_NWAY];
+	int16_t x_offset[ISP_NWAY];
+};
+
+struct ia_css_pdaf_config
+{
+	uint16_t frm_length;
+	uint16_t frm_width;
+	struct ia_css_extraction_config ext_cfg_data;
+};
+
+#endif /* __IA_CSS_PDAF_TYPES_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_chroma_metric_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_chroma_metric_param.h
new file mode 100644
index 0000000..5d547e8
--- /dev/null
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_chroma_metric_param.h
@@ -0,0 +1,29 @@
+/*
+ * INTEL CONFIDENTIAL
+ *
+ * Copyright (C) 2010 - 2015 Intel Corporation.
+ * All Rights Reserved.
+ *
+ * The source code contained or described herein and all documents
+ * related to the source code ("Material") are owned by Intel Corporation
+ * or licensors. Title to the Material remains with Intel
+ * Corporation or its licensors. The Material contains trade
+ * secrets and proprietary and confidential information of Intel or its
+ * licensors. The Material is protected by worldwide copyright
+ * and trade secret laws and treaty provisions. No part of the Material may
+ * be used, copied, reproduced, modified, published, uploaded, posted,
+ * transmitted, distributed, or disclosed in any way without Intel's prior
+ * express written permission.
+ *
+ * No License under any patent, copyright, trade secret or other intellectual
+ * property right is granted to or conferred upon you by disclosure or
+ * delivery of the Materials, either expressly, by implication, inducement,
+ * estoppel or otherwise. Any license under such intellectual property rights
+ * must be express and approved by Intel in writing.
+ */
+#ifndef __IA_CSS_XNR4_CHROMA_METRIC_PARAM_H
+#define __IA_CSS_XNR4_CHROMA_METRIC_PARAM_H
+
+#include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_common_param.h"
+
+#endif /* __IA_CSS_XNR4_CHROMA_METRIC_PARAM_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_common_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_common_param.h
index f1e4090..444ce80 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_common_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_common_param.h
@@ -1,7 +1,7 @@
 /*
  * INTEL CONFIDENTIAL
  *
- * Copyright (C) 2010 - 2014 Intel Corporation.
+ * Copyright (C) 2010 - 2015 Intel Corporation.
  * All Rights Reserved.
  *
  * The source code contained or described herein and all documents
@@ -33,4 +33,12 @@
 #define XNR4_STRIPE_SIZE	(2560)
 
 
+/* Medium frequency Subkernel Configuration */
+#define XNR4_MF_FILTER_SIZE		(5)
+#define XNR4_MF_FILTER_DELAY_PIX	(XNR4_MF_FILTER_SIZE / 2) /* 2 pixel delay due to 5 tab filter */
+
+#define XNR4_MF_FILTER_VRT_DELAY	(XNR4_MF_FILTER_DELAY_PIX) /* 2 lines of delay */
+#define XNR4_MF_FILTER_HOR_DELAY	(1) /* 1 vector delay - to align delay to vector boundary */
+
+
 #endif /* __IA_CSS_XNR4_COMMON_PARAM_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_edge_metric_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_edge_metric_param.h
index ebb16a7..ff0f95f 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_edge_metric_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_edge_metric_param.h
@@ -26,13 +26,4 @@
 
 #include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_common_param.h"
 
-/* Edge Metric Subkernel Configuration */
-
-#define XNR4_EM_FILTER_SIZE		(5)
-#define XNR4_EM_FILTER_DELAY_PIX	(XNR4_EM_FILTER_SIZE / 2) /* 2 pixel delay due to 5 tab filter */
-
-#define XNR4_EM_FILTER_VRT_DELAY	(XNR4_EM_FILTER_DELAY_PIX) /* 2 lines of delay */
-#define XNR4_EM_FILTER_HOR_DELAY	(1) /* 1 vector delay - to align delay to vector boundary */
-
-
 #endif /* __IA_CSS_XNR4_EDGE_METRIC_PARAM_H */
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend_param.h
index 93a9c80..b0e9251 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend_param.h
@@ -31,7 +31,12 @@
 
 /* TODO: get the delay from JBL */
 #define XNR4_JBL_VER_DELAY			(3)
-#define XNR4_JBL_HOR_DELAY			(1)
+/* With horizontal delay of 2 for output blend, a total of 48 registers are
+ * needed to hold the history of two s_2x2_yuv_420 data types. There is a
+ * design change discussions going on to use pixels for delay instead of
+ * vector aligned and for now we are going with a horizontal delay of 1.
+ * Hence taking the JBL HOR delay to 0. */
+#define XNR4_JBL_HOR_DELAY                     (0)
 
 #define XNR4_OUTPUT_BLEND_VER_DELAY		((XNR4_JBL_VER_DELAY * XNR4_LUMA_DS_FACTOR) + \
 						(XNR4_UPSCALE_VER_DELAY * XNR4_LUMA_DS_FACTOR))
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_param.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_param.h
index 6fbf095..93d3207 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_param.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/kernels/xnr/xnrvideo4/ia_css_xnr4_param.h
@@ -27,6 +27,7 @@
 #include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_downsample_param.h"
 #include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_upsample_param.h"
 #include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_edge_metric_param.h"
+#include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_chroma_metric_param.h"
 #include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_radial_metric_param.h"
 #include "isp/kernels/xnr/xnrvideo4/ia_css_xnr4_output_blend_param.h"
 
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/modes/interface/isp_const.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/modes/interface/isp_const.h
index 1f2bf67..ea9fb1d 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/modes/interface/isp_const.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/isp/modes/interface/isp_const.h
@@ -234,6 +234,7 @@
 #define SH_CSS_BINARY_ID_IF_TO_OSYS_PRIMARY                 276
 #define SH_CSS_BINARY_ID_IF_TO_OSYS_NO_XNR_PRIMARY          277
 #define SH_CSS_BINARY_ID_IF_TO_OSYS_NO_XNR_PRIMARY_STRIPED  278
+#define SH_CSS_BINARY_ID_IF_TO_OSYS_PRIMARY_STRIPED         279
 
 #define XMEM_WIDTH_BITS              HIVE_ISP_DDR_WORD_BITS
 #define XMEM_SHORTS_PER_WORD         (HIVE_ISP_DDR_WORD_BITS/16)
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_firmware.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_firmware.c
index c05883a..3268e29 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_firmware.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/css2401a0_v21/sh_css_firmware.c
@@ -47,10 +47,10 @@ struct fw_param {
 /* Warning: same order as SH_CSS_BINARY_ID_* */
 static struct firmware_header *firmware_header;
 
-/* The string STR(irci_master_20150128_1925) is a place holder
+/* The string STR(irci_master_20150129_1500) is a place holder
  * which will be replaced with the actual RELEASE_VERSION
  * during package generation. Please do not modify  */
-static const char *release_version = STR(irci_master_20150128_1925);
+static const char *release_version = STR(irci_master_20150129_1500);
 
 #define MAX_FW_REL_VER_NAME	300
 static char FW_rel_ver_name[MAX_FW_REL_VER_NAME] = "---";
-- 
1.9.1

