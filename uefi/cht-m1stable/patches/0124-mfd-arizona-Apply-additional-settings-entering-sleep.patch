From d5803b8d7883253b2f51030dd9dfc7a766d77779 Mon Sep 17 00:00:00 2001
From: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date: Fri, 7 Feb 2014 08:10:38 +0000
Subject: [PATCH 124/351] mfd: arizona: Apply additional settings entering
 sleep mode

Recent evaluation of the device has given some additional settings to
improve performance.

Change-Id: I1bdbb3ab00c9ed67ac85798479f53c6b7204de9d
Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Signed-off-by: Nikesh Oswal <Nikesh.Oswal@wolfsonmicro.com>
---
 drivers/mfd/arizona-core.c |   46 ++++++++++++++++++++++++++++++++++++--------
 1 file changed, 38 insertions(+), 8 deletions(-)

diff --git a/drivers/mfd/arizona-core.c b/drivers/mfd/arizona-core.c
index ebb5da2..f248826 100644
--- a/drivers/mfd/arizona-core.c
+++ b/drivers/mfd/arizona-core.c
@@ -344,17 +344,29 @@ static int arizona_apply_hardware_patch(struct arizona* arizona)
 	return arizona_exec_with_sysclk(arizona, arizona_hardware_patch_wseq);
 }
 
+static const struct reg_default arizona_sysclk_reg_patch[] = {
+	{ 0x337A, 0xC100 },
+	{ 0x337B, 0x0041 },
+	{ 0x3300, 0xa210 },
+	{ 0x3301, 0x050C },
+};
+
 static int arizona_sleep_patch(struct arizona* arizona)
 {
-	int ret;
-
-	ret = regmap_write(arizona->regmap, 0x337A, 0xC100);
-	if (ret != 0)
-		return ret;
+	int i, ret;
 
-	ret = regmap_write(arizona->regmap, 0x337B, 0x0041);
-	if (ret != 0)
-		return ret;
+	for (i = 0; i < ARRAY_SIZE(arizona_sysclk_reg_patch); ++i) {
+		ret = regmap_write(arizona->regmap,
+				   arizona_sysclk_reg_patch[i].reg,
+				   arizona_sysclk_reg_patch[i].def);
+		if (ret != 0) {
+			dev_err(arizona->dev,
+				"Failed to apply sleep patch: %x <= %x\n",
+				arizona_sysclk_reg_patch[i].reg,
+				arizona_sysclk_reg_patch[i].def);
+			return ret;
+		}
+	}
 
 	return 0;
 }
@@ -515,6 +527,24 @@ static int arizona_runtime_suspend(struct device *dev)
 		}
 	}
 
+	switch (arizona->type) {
+	case WM5110:
+	case WM8280:
+		ret = regmap_update_bits(arizona->regmap,
+					 ARIZONA_LDO1_CONTROL_1,
+					 ARIZONA_LDO1_VSEL_MASK,
+					 0x0b << ARIZONA_LDO1_VSEL_SHIFT);
+		if (ret != 0) {
+			dev_err(arizona->dev,
+				"Failed to prepare for sleep %d\n",
+				ret);
+			return ret;
+		}
+		break;
+	default:
+		break;
+	}
+
 	regcache_cache_only(arizona->regmap, true);
 	regcache_mark_dirty(arizona->regmap);
 	regulator_disable(arizona->dcvdd);
-- 
1.7.9.5

