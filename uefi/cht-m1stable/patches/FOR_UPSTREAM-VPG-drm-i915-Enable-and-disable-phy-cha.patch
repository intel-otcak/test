From 168d22f5f6b9d23a12f6c29d8874f70ffeb14f99 Mon Sep 17 00:00:00 2001
From: Makarand R Muley <makarand.r.muley@intel.com>
Date: Wed, 11 Nov 2015 18:55:41 +0530
Subject: [PATCH] FOR_UPSTREAM [VPG]: drm/i915: Enable and disable phy channels
 correctly

In Cherryview, there are 2 display PHY instances supporting 2 display channels
(ch#0 and ch#1) and 1 display channel (ch#0) respectively. To save power, We
should disable unused PHY instance.
GOP/VBIOS keeps the unused phy lanes turned off and hence driver has to override
the status and enable/disable phy so we can use any display connected to it

Change-Id: Ie85ffeac9e6a1bb7cec1865903ed15f8efab0ac8
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-8749
Signed-off-by: Makarand R Muley <makarand.r.muley@intel.com>
---
 drivers/gpu/drm/i915/i915_reg.h |  6 ++++++
 drivers/gpu/drm/i915/intel_pm.c | 32 ++++++++++++++++++++++++++++++++
 2 files changed, 38 insertions(+)

diff --git a/drivers/gpu/drm/i915/i915_reg.h b/drivers/gpu/drm/i915/i915_reg.h
index 1b377e8..7650ee1 100644
--- a/drivers/gpu/drm/i915/i915_reg.h
+++ b/drivers/gpu/drm/i915/i915_reg.h
@@ -1933,6 +1933,12 @@ enum punit_power_well {
 #define DPIO_PHY_STATUS			(VLV_DISPLAY_BASE + 0x6240)
 #define   DPLL_PORTD_READY_MASK		(0xf)
 #define DISPLAY_PHY_CONTROL (VLV_DISPLAY_BASE + 0x60100)
+#define   PHY_CHN0_SINGLE_CHANNEL_POWERDOWN_LANE_MASK  (0xF << 19)
+#define   PHY_CHN0_SINGLE_CHANNEL_POWERDOWN_OVERRIDE  (1 << 29)
+#define   PHY_CHN0_DOUBLE_CHANNEL_POWERDOWN_LANE_MASK   (0xF << 11)
+#define   PHY_CHN0_DOUBLE_CHANNEL_POWERDOWN_OVERRIDE (1 << 27)
+#define   PHY_CHN1_DOUBLE_CHANNEL_POWERDOWN_LANE_MASK   (0xF << 15)
+#define   PHY_CHN1_DOUBLE_CHANNEL_POWERDOWN_OVERRIDE (1 << 28)
 #define   PHY_COM_LANE_RESET_DEASSERT(phy) (1 << (phy))
 #define DISPLAY_PHY_STATUS (VLV_DISPLAY_BASE + 0x60104)
 #define   PHY_POWERGOOD(phy)	(((phy) == DPIO_PHY0) ? (1<<31) : (1<<30))
diff --git a/drivers/gpu/drm/i915/intel_pm.c b/drivers/gpu/drm/i915/intel_pm.c
index 0624988..8693fbe 100644
--- a/drivers/gpu/drm/i915/intel_pm.c
+++ b/drivers/gpu/drm/i915/intel_pm.c
@@ -7154,10 +7154,26 @@ static void chv_dpio_cmn_power_well_enable(struct drm_i915_private *dev_priv,
 			   DPLL_REFA_CLK_ENABLE_VLV);
 		I915_WRITE(DPLL(PIPE_B), I915_READ(DPLL(PIPE_B)) |
 			   DPLL_REFA_CLK_ENABLE_VLV | DPLL_INTEGRATED_CRI_CLK_VLV);
+
+		/* Enable Powerdown/mode signals from driver configuration */
+		I915_WRITE(DISPLAY_PHY_CONTROL, I915_READ(DISPLAY_PHY_CONTROL) |
+			  PHY_CHN0_DOUBLE_CHANNEL_POWERDOWN_OVERRIDE);
+		I915_WRITE(DISPLAY_PHY_CONTROL, I915_READ(DISPLAY_PHY_CONTROL) &
+			  ~(PHY_CHN0_DOUBLE_CHANNEL_POWERDOWN_LANE_MASK));
+		I915_WRITE(DISPLAY_PHY_CONTROL, I915_READ(DISPLAY_PHY_CONTROL) |
+			  PHY_CHN1_DOUBLE_CHANNEL_POWERDOWN_OVERRIDE);
+		I915_WRITE(DISPLAY_PHY_CONTROL, I915_READ(DISPLAY_PHY_CONTROL) &
+			  ~(PHY_CHN1_DOUBLE_CHANNEL_POWERDOWN_LANE_MASK));
 	} else {
 		phy = DPIO_PHY1;
 		I915_WRITE(DPLL(PIPE_C), I915_READ(DPLL(PIPE_C)) |
 			   DPLL_REFA_CLK_ENABLE_VLV | DPLL_INTEGRATED_CRI_CLK_VLV);
+
+		/* Enable Powerdown/mode signals from driver configuration */
+		I915_WRITE(DISPLAY_PHY_CONTROL, I915_READ(DISPLAY_PHY_CONTROL) |
+			  PHY_CHN0_SINGLE_CHANNEL_POWERDOWN_OVERRIDE);
+		I915_WRITE(DISPLAY_PHY_CONTROL, I915_READ(DISPLAY_PHY_CONTROL) &
+			  ~(PHY_CHN0_SINGLE_CHANNEL_POWERDOWN_LANE_MASK));
 	}
 	udelay(1); /* >10ns for cmnreset, >0ns for sidereset */
 	vlv_set_power_well(dev_priv, power_well, true);
@@ -7180,8 +7196,24 @@ static void chv_dpio_cmn_power_well_disable(struct drm_i915_private *dev_priv,
 
 	if (power_well->data == PUNIT_POWER_WELL_DPIO_CMN_BC) {
 		phy = DPIO_PHY0;
+
+		/* Disable Powerdown/mode signals from driver configuration */
+		I915_WRITE(DISPLAY_PHY_CONTROL, I915_READ(DISPLAY_PHY_CONTROL) |
+			  PHY_CHN0_DOUBLE_CHANNEL_POWERDOWN_LANE_MASK);
+		I915_WRITE(DISPLAY_PHY_CONTROL, I915_READ(DISPLAY_PHY_CONTROL) &
+			  ~(PHY_CHN0_DOUBLE_CHANNEL_POWERDOWN_OVERRIDE));
+		I915_WRITE(DISPLAY_PHY_CONTROL, I915_READ(DISPLAY_PHY_CONTROL) |
+			  PHY_CHN1_DOUBLE_CHANNEL_POWERDOWN_LANE_MASK);
+		I915_WRITE(DISPLAY_PHY_CONTROL, I915_READ(DISPLAY_PHY_CONTROL) &
+			  ~(PHY_CHN1_DOUBLE_CHANNEL_POWERDOWN_OVERRIDE));
 	} else {
 		phy = DPIO_PHY1;
+
+		/* Disable Powerdown/mode signals from driver configuration */
+		I915_WRITE(DISPLAY_PHY_CONTROL, I915_READ(DISPLAY_PHY_CONTROL) |
+			  PHY_CHN0_SINGLE_CHANNEL_POWERDOWN_LANE_MASK);
+		I915_WRITE(DISPLAY_PHY_CONTROL, I915_READ(DISPLAY_PHY_CONTROL) &
+			 ~(PHY_CHN0_SINGLE_CHANNEL_POWERDOWN_OVERRIDE));
 	}
 
 	I915_WRITE(DISPLAY_PHY_CONTROL, I915_READ(DISPLAY_PHY_CONTROL) &
-- 
1.9.1

