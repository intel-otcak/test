From 8135e0de303723efc3b49e48f02e574e73869869 Mon Sep 17 00:00:00 2001
From: Hans Holmberg <hans.holmberg@intel.com>
Date: Thu, 15 May 2014 12:26:18 +0200
Subject: [PATCH 046/117] ov5693: Add ACPI probing support

Change-Id: I521ea3c3d5bac9cd9e25b2fcd35e184a97a71bc8
Signed-off-by: Hans Holmberg <hans.holmberg@intel.com>
---
 .../intel-mid/device_libs/platform_ov5693.c        |  2 ++
 .../camera/drivers/media/i2c/ov5693/ov5693.c       | 22 ++++++++++++++++++++--
 .../camera/drivers/media/i2c/ov5693/ov5693.h       |  2 ++
 3 files changed, 24 insertions(+), 2 deletions(-)

diff --git a/arch/x86/platform/intel-mid/device_libs/platform_ov5693.c b/arch/x86/platform/intel-mid/device_libs/platform_ov5693.c
index 9282f38..310178a 100644
--- a/arch/x86/platform/intel-mid/device_libs/platform_ov5693.c
+++ b/arch/x86/platform/intel-mid/device_libs/platform_ov5693.c
@@ -205,3 +205,5 @@ void *ov5693_platform_data(void *info)
 	camera_reset = -1;
 	return &ov5693_sensor_platform_data;
 }
+
+EXPORT_SYMBOL_GPL(ov5693_platform_data);
diff --git a/drivers/external_drivers/camera/drivers/media/i2c/ov5693/ov5693.c b/drivers/external_drivers/camera/drivers/media/i2c/ov5693/ov5693.c
index 1459571..8ca1ab5 100644
--- a/drivers/external_drivers/camera/drivers/media/i2c/ov5693/ov5693.c
+++ b/drivers/external_drivers/camera/drivers/media/i2c/ov5693/ov5693.c
@@ -25,6 +25,7 @@
 #include <linux/gpio.h>
 #include <linux/init.h>
 #include <linux/i2c.h>
+#include <linux/acpi.h>
 #include <linux/io.h>
 #include <linux/kernel.h>
 #include <linux/kmod.h>
@@ -1385,6 +1386,7 @@ static int ov5693_probe(struct i2c_client *client,
 	struct ov5693_device *dev;
 	int i;
 	int ret;
+	void *pdata = client->dev.platform_data;
 
 	dev = devm_kzalloc(&client->dev, sizeof(*dev), GFP_KERNEL);
 	if (!dev) {
@@ -1403,9 +1405,17 @@ static int ov5693_probe(struct i2c_client *client,
 
 	v4l2_i2c_subdev_init(&(dev->sd), client, &ov5693_ops);
 
-	if (client->dev.platform_data) {
+	if (!pdata && ACPI_COMPANION(&client->dev)) {
+		/*
+		 * If no SFI firmware, try to grab the platform struct
+		 * directly and configure via ACPI/EFIvars instead
+		 */
+		pdata = ov5693_platform_data(NULL);
+	}
+
+	if(pdata) {
 		ret = ov5693_s_config(&dev->sd, client->irq,
-				       client->dev.platform_data);
+				       pdata);
 		if (ret)
 			goto out_free;
 	}
@@ -1456,11 +1466,19 @@ out_free:
 	return ret;
 }
 
+static struct acpi_device_id ov5693_acpi_match[] = {
+	{"INT33BE"},
+	{},
+};
+
+MODULE_DEVICE_TABLE(acpi, ov5693_acpi_match);
 MODULE_DEVICE_TABLE(i2c, ov5693_id);
+
 static struct i2c_driver ov5693_driver = {
 	.driver = {
 		.owner = THIS_MODULE,
 		.name = OV5693_NAME,
+		.acpi_match_table = ACPI_PTR(ov5693_acpi_match),
 	},
 	.probe = ov5693_probe,
 	.remove = ov5693_remove,
diff --git a/drivers/external_drivers/camera/drivers/media/i2c/ov5693/ov5693.h b/drivers/external_drivers/camera/drivers/media/i2c/ov5693/ov5693.h
index 3a91b60..81f52db 100644
--- a/drivers/external_drivers/camera/drivers/media/i2c/ov5693/ov5693.h
+++ b/drivers/external_drivers/camera/drivers/media/i2c/ov5693/ov5693.h
@@ -114,6 +114,8 @@
 #define OV5693_START_STREAMING			0x01
 #define OV5693_STOP_STREAMING			0x00
 
+void *ov5693_platform_data(void *info);
+
 struct ov5693_vcm {
 	int (*power_up)(struct v4l2_subdev *sd);
 	int (*power_down)(struct v4l2_subdev *sd);
-- 
1.9.3

