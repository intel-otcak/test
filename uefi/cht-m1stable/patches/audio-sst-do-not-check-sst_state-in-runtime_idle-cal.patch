From d3ff00c2ec5dded2e846d01ef637307a23761f96 Mon Sep 17 00:00:00 2001
From: Mian Yousaf Kaukab <yousaf.kaukab@intel.com>
Date: Wed, 16 Jul 2014 12:27:42 +0200
Subject: audio: sst: do not check sst_state in runtime_idle callback

sst_state is set to SST_RESET in runtime_suspend callback. Checking it
in runtime_idle callback is not correct.
This makes intel_sst_runtime_idle an empty function so get rid of it.

Issue: GMIN-1544
Change-Id: Idd1d99fd91bb64820d91aca9489f213980be8c17
Signed-off-by: Mian Yousaf Kaukab <yousaf.kaukab@intel.com>
---
 sound/soc/intel/sst/sst.c      | 18 ++----------------
 sound/soc/intel/sst/sst.h      |  3 ++-
 sound/soc/intel/sst/sst_acpi.c |  2 ++
 3 files changed, 6 insertions(+), 17 deletions(-)

diff --git a/sound/soc/intel/sst/sst.c b/sound/soc/intel/sst/sst.c
index 6cdffb5..5a7d992 100644
--- a/sound/soc/intel/sst/sst.c
+++ b/sound/soc/intel/sst/sst.c
@@ -877,6 +877,8 @@ static int intel_sst_probe(struct pci_dev *pci,
 			sst_set_gpio_conf(&sst_drv_ctx->pdata->ssp_data->gpio);
 	}
 	pci_set_drvdata(pci, sst_drv_ctx);
+	pm_runtime_set_autosuspend_delay(sst_drv_ctx->dev, SST_SUSPEND_DELAY);
+	pm_runtime_use_autosuspend(sst_drv_ctx->dev);
 	pm_runtime_allow(sst_drv_ctx->dev);
 	pm_runtime_put_noidle(sst_drv_ctx->dev);
 	register_sst(sst_drv_ctx->dev);
@@ -1137,21 +1139,6 @@ static int intel_sst_suspend(struct device *dev)
 	return retval;
 }
 
-static int intel_sst_runtime_idle(struct device *dev)
-{
-	struct intel_sst_drv *ctx = dev_get_drvdata(dev);
-
-	pr_info("runtime_idle called\n");
-	if (ctx->sst_state != SST_RESET) {
-		pm_schedule_suspend(dev, SST_SUSPEND_DELAY);
-		return -EBUSY;
-	} else {
-		return 0;
-	}
-	return -EBUSY;
-
-}
-
 static void sst_do_shutdown(struct intel_sst_drv *ctx)
 {
 	int retval = 0;
@@ -1229,7 +1216,6 @@ static const struct dev_pm_ops intel_sst_pm = {
 	.resume = intel_sst_runtime_resume,
 	.runtime_suspend = intel_sst_runtime_suspend,
 	.runtime_resume = intel_sst_runtime_resume,
-	.runtime_idle = intel_sst_runtime_idle,
 };
 
 static const struct acpi_device_id sst_acpi_ids[];
diff --git a/sound/soc/intel/sst/sst.h b/sound/soc/intel/sst/sst.h
index 6154197..a52afe6 100644
--- a/sound/soc/intel/sst/sst.h
+++ b/sound/soc/intel/sst/sst.h
@@ -696,7 +696,8 @@ static inline int sst_pm_runtime_put(struct intel_sst_drv *sst_drv)
 {
 	int ret;
 
-	ret = pm_runtime_put_sync(sst_drv->dev);
+	pm_runtime_mark_last_busy(sst_drv->dev);
+	ret = pm_runtime_put_autosuspend(sst_drv->dev);
 	if (ret < 0)
 		return ret;
 	atomic_dec(&sst_drv->pm_usage_count);
diff --git a/sound/soc/intel/sst/sst_acpi.c b/sound/soc/intel/sst/sst_acpi.c
index 9ecfc9f..6074b33 100644
--- a/sound/soc/intel/sst/sst_acpi.c
+++ b/sound/soc/intel/sst/sst_acpi.c
@@ -645,6 +645,8 @@ int sst_acpi_probe(struct platform_device *pdev)
 	}
 
 	platform_set_drvdata(pdev, ctx);
+	pm_runtime_set_autosuspend_delay(dev, SST_SUSPEND_DELAY);
+	pm_runtime_use_autosuspend(dev);
 	pm_runtime_set_active(dev);
 	pm_runtime_enable(dev);
 	register_sst(dev);
-- 
2.0.1

