From 09deb9642438d274e7feb6018ab37c43aa31b3bd Mon Sep 17 00:00:00 2001
Message-Id: <09deb9642438d274e7feb6018ab37c43aa31b3bd.1424979244.git.feitong.yi@intel.com>
In-Reply-To: <d8466aca83b11ab8b0870e775536306782d73e9f.1424979244.git.feitong.yi@intel.com>
References: <d8466aca83b11ab8b0870e775536306782d73e9f.1424979244.git.feitong.yi@intel.com>
From: Nabendu Maiti <nabendu.bikash.maiti@intel.com>
Date: Wed, 28 Jan 2015 09:08:04 +0530
Subject: [PATCH 16/28] MUST_REBASE [VPG]: adf/intel/vlv: keep planes enabled
 for dual display

ADF framework disables all the planes if no objects posting done from
userspace.But This patch keep planes enabled for non related pipeline.

MUST_REBASE: Since Google ADF framework is not in upstream and also
we cannot have two display drivers, other one being i915, we need to
work on i915 and ADF convergence path before it can be upstreamed

Issue: GMINL-5588
Change-Id: Iec4cc013e53717f87db0fe035394b05b196bf91b
Signed-off-by: Nabendu Maiti <nabendu.bikash.maiti@intel.com>
Signed-off-by: Arun R Murthy <arun.r.murthy@intel.com>
---
 drivers/video/adf/intel/intel_adf_device.c |   28 ++++++++++++++++++----------
 1 file changed, 18 insertions(+), 10 deletions(-)

diff --git a/drivers/video/adf/intel/intel_adf_device.c b/drivers/video/adf/intel/intel_adf_device.c
index b891ba8..7f91a04 100644
--- a/drivers/video/adf/intel/intel_adf_device.c
+++ b/drivers/video/adf/intel/intel_adf_device.c
@@ -450,19 +450,23 @@ static struct sync_fence *intel_adf_device_complete_fence(
 }
 
 static void disable_unused_overlay_engines(struct list_head *active_engs,
-	struct post_obj_set *post_engs)
+					   struct intel_adf_interface *intf,
+					   struct post_obj_set *post_engs)
 {
 	struct intel_adf_overlay_engine *eng;
 
 	list_for_each_entry(eng, active_engs, active_list) {
 		if (post_obj_set_find_obj(post_engs, eng))
 			continue;
-		/*disable this engine*/
+
 		/*
-		 * FIXME: temp removed to avoid plane disable in dual display
-		 * scenarnario
-		 * eng->plane->ops->disable(eng->plane);
+		 * Disable engine only on current interface if not posted
+		 * objects
 		 */
+		if (eng->plane->pipe != NULL) {
+			if (eng->plane->pipe->base.idx == intf->pipe->base.idx)
+				eng->plane->ops->disable(eng->plane);
+		}
 	}
 }
 
@@ -511,16 +515,20 @@ static void intel_adf_device_post(struct adf_device *dev,
 	struct post_obj *po;
 	struct flip *f;
 
-	/* To forbid DSR */
 	for_each_post_obj(po, &state->post_intfs) {
 		intf = po->obj;
+
+		/* To forbid DSR */
 		if (intf->pipe && intf->pipe->ops && intf->pipe->ops->pre_post)
 			intf->pipe->ops->pre_post(intf->pipe);
-	}
 
-	/*disable unused overlay engines*/
-	disable_unused_overlay_engines(&i_dev->active_engs,
-		&state->post_engs);
+		/*
+		 * Disable engine only on current interface if not posted
+		 * objects
+		 */
+		disable_unused_overlay_engines(&i_dev->active_engs, intf,
+			&state->post_engs);
+	}
 
 	/*flip planes*/
 	list_for_each_entry(f, &state->post_flips, list) {
-- 
1.7.9.5

