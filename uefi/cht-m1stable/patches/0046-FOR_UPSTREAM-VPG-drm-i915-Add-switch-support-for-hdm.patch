From 6653ec01e7a68149898aa49c6387821116e76c4f Mon Sep 17 00:00:00 2001
Message-Id: <6653ec01e7a68149898aa49c6387821116e76c4f.1413837856.git.chang-joon.lee@intel.com>
In-Reply-To: <006497b7323eca32c2f489a1a9f662743c0d16d2.1413837855.git.chang-joon.lee@intel.com>
References: <006497b7323eca32c2f489a1a9f662743c0d16d2.1413837855.git.chang-joon.lee@intel.com>
From: Kiran Kumar S <kiran.s.kumar@intel.com>
Date: Wed, 2 Apr 2014 10:04:05 +0530
Subject: [PATCH 046/312] FOR_UPSTREAM [VPG]: drm/i915: Add switch support for
 hdmi
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Patch registers a new 'switch device' per hdmi connector and sets
the state accordingly when hdmi cable is plugged in and out. This
state can be listened by Android HAL using uevent interface.

v1: Pulled patch from JB

v2: modified to work on Kitkat. Switch name populate is not required in
ddi init.

Pulled from ABT/kernel-internal to GMin/gmin.
Conflicts:
	drivers/gpu/drm/i915/intel_hdmi.c

ISSUE: APDEV-2621
Signed-off-by: "Tapani Pälli" <tapani.palli@intel.com>"
Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Signed-off-by: Kulkarni, Vandita <vandita.kulkarni@intel.com>
Signed-off-by: Kiran Kumar S <kiran.s.kumar@intel.com>
Reviewed-on: https://android.intel.com/188063
Reviewed-by: Bloomfield, Jon <jon.bloomfield@intel.com>
Tested-by: Bloomfield, Jon <jon.bloomfield@intel.com>
Change-Id: I2e280c109216d4042dab9e1fcbf7e48830b27e46
Signed-off-by: Oscar Mateo <oscar.mateo@intel.com>
---
 drivers/gpu/drm/i915/intel_drv.h  |    6 ++++++
 drivers/gpu/drm/i915/intel_hdmi.c |   34 ++++++++++++++++++++++++++++++++++
 2 files changed, 40 insertions(+)

diff --git a/drivers/gpu/drm/i915/intel_drv.h b/drivers/gpu/drm/i915/intel_drv.h
index 41e64c9..4ef86c2 100644
--- a/drivers/gpu/drm/i915/intel_drv.h
+++ b/drivers/gpu/drm/i915/intel_drv.h
@@ -26,6 +26,7 @@
 #define __INTEL_DRV_H__
 
 #include <linux/i2c.h>
+#include <linux/switch.h>
 #include <linux/hdmi.h>
 #include <drm/i915_drm.h>
 #include "i915_drv.h"
@@ -186,6 +187,11 @@ struct intel_connector {
 	 */
 	struct intel_encoder *new_encoder;
 
+#ifdef CONFIG_SWITCH
+	/* Android uses switch to inform userspace about hotplug events. */
+	struct switch_dev hotplug_switch;
+#endif
+
 	/* Reads out the current hw, returning true if the connector is enabled
 	 * and active (i.e. dpms ON state). */
 	bool (*get_hw_state)(struct intel_connector *);
diff --git a/drivers/gpu/drm/i915/intel_hdmi.c b/drivers/gpu/drm/i915/intel_hdmi.c
index ff03a8d..5782b6f 100644
--- a/drivers/gpu/drm/i915/intel_hdmi.c
+++ b/drivers/gpu/drm/i915/intel_hdmi.c
@@ -1048,6 +1048,20 @@ intel_hdmi_detect(struct drm_connector *connector, bool force)
 		intel_encoder->type = INTEL_OUTPUT_HDMI;
 	}
 
+	if (IS_ENABLED(CONFIG_SWITCH)) {
+		struct intel_connector *intel_connector =
+				to_intel_connector(connector);
+		if (intel_connector->hotplug_switch.name &&
+                    *intel_connector->hotplug_switch.name) {
+			if (status == connector_status_connected)
+				switch_set_state(
+					&intel_connector->hotplug_switch, 1);
+			else
+				switch_set_state(
+					&intel_connector->hotplug_switch, 0);
+		}
+	}
+
 	intel_display_power_put(dev_priv, power_domain);
 
 	return status;
@@ -1445,6 +1459,12 @@ static void chv_hdmi_pre_enable(struct intel_encoder *encoder)
 
 static void intel_hdmi_destroy(struct drm_connector *connector)
 {
+	if (IS_ENABLED(CONFIG_SWITCH)) {
+		struct intel_connector *intel_connector =
+				to_intel_connector(connector);
+		switch_dev_unregister(&intel_connector->hotplug_switch);
+		kfree(intel_connector->hotplug_switch.name);
+	}
 	drm_connector_cleanup(connector);
 	kfree(connector);
 }
@@ -1546,6 +1566,20 @@ void intel_hdmi_init_connector(struct intel_digital_port *intel_dig_port,
 	intel_connector_attach_encoder(intel_connector, intel_encoder);
 	drm_connector_register(connector);
 
+	if (IS_ENABLED(CONFIG_SWITCH)) {
+		intel_connector->hotplug_switch.name =
+			kasprintf(GFP_KERNEL, "hdmi_%c", 'a' + port);
+		if (!intel_connector->hotplug_switch.name) {
+			DRM_ERROR("%s failed to allocate memory", __func__);
+			kfree(intel_connector);
+			kfree(intel_dig_port);
+			return;
+		}
+	}
+
+	if (IS_ENABLED(CONFIG_SWITCH))
+		switch_dev_register(&intel_connector->hotplug_switch);
+
 	/* For G4X desktop chip, PEG_BAND_GAP_DATA 3:0 must first be written
 	 * 0xd.  Failure to do so will result in spurious interrupts being
 	 * generated on the port when a cable is not attached.
-- 
1.7.9.5

