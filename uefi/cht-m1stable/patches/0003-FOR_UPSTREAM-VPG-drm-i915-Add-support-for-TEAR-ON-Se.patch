From e2eb080ac71c9208bebbe922cf2d18b15f50ecc2 Mon Sep 17 00:00:00 2001
Message-Id: <e2eb080ac71c9208bebbe922cf2d18b15f50ecc2.1421830308.git.chang-joon.lee@intel.com>
In-Reply-To: <49dde4951ccd12ce81e60aed3b24793e0ac12fed.1421830308.git.chang-joon.lee@intel.com>
References: <49dde4951ccd12ce81e60aed3b24793e0ac12fed.1421830308.git.chang-joon.lee@intel.com>
From: Yogesh Mohan Marimuthu <yogesh.mohan.marimuthu@intel.com>
Date: Tue, 21 Oct 2014 12:04:40 +0530
Subject: [PATCH 03/17] FOR_UPSTREAM [VPG]: drm/i915: Add support for TEAR ON
 Sequence

For command mode panel, panel's fb enabling and tearing configuration
is done as part of TEAR ON sequence. This patch parses and executes
TEAR ON sequence for MIPI command mode.

Issue: GMINL-1644
Change-Id: Ia27fff5c9699d7e3d2adf36c1b22c1dae7a68074
Signed-off-by: Shobhit Kumar <shobhit.kumar@intel.com>
Signed-off-by: Yogesh Mohan Marimuthu <yogesh.mohan.marimuthu@intel.com>
---
 drivers/gpu/drm/i915/intel_dsi.c           |    3 +++
 drivers/gpu/drm/i915/intel_dsi.h           |    2 ++
 drivers/gpu/drm/i915/intel_dsi_panel_vbt.c |   12 ++++++++++++
 3 files changed, 17 insertions(+)

diff --git a/drivers/gpu/drm/i915/intel_dsi.c b/drivers/gpu/drm/i915/intel_dsi.c
index e45a4da..4b31c6b 100644
--- a/drivers/gpu/drm/i915/intel_dsi.c
+++ b/drivers/gpu/drm/i915/intel_dsi.c
@@ -325,6 +325,9 @@ static void intel_dsi_pre_enable(struct intel_encoder *encoder)
 	if (intel_dsi->dev.dev_ops->send_otp_cmds)
 		intel_dsi->dev.dev_ops->send_otp_cmds(&intel_dsi->dev);
 
+	if (is_cmd_mode(intel_dsi) && intel_dsi->dev.dev_ops->tear_on)
+		intel_dsi->dev.dev_ops->tear_on(&intel_dsi->dev);
+
 	wait_for_dsi_fifo_empty(intel_dsi);
 
 	/* Enable port in pre-enable phase itself because as per hw team
diff --git a/drivers/gpu/drm/i915/intel_dsi.h b/drivers/gpu/drm/i915/intel_dsi.h
index 24c622c..8cf90c1 100644
--- a/drivers/gpu/drm/i915/intel_dsi.h
+++ b/drivers/gpu/drm/i915/intel_dsi.h
@@ -418,6 +418,8 @@ struct intel_dsi_dev_ops {
 	/* This callback must be able to assume DSI commands can be sent */
 	void (*enable)(struct intel_dsi_device *dsi);
 
+	void (*tear_on)(struct intel_dsi_device *dsi);
+
 	/* This callback must be able to assume DSI commands can be sent */
 	void (*disable)(struct intel_dsi_device *dsi);
 
diff --git a/drivers/gpu/drm/i915/intel_dsi_panel_vbt.c b/drivers/gpu/drm/i915/intel_dsi_panel_vbt.c
index 4df243d..9ea6091 100644
--- a/drivers/gpu/drm/i915/intel_dsi_panel_vbt.c
+++ b/drivers/gpu/drm/i915/intel_dsi_panel_vbt.c
@@ -640,6 +640,17 @@ static void generic_get_panel_info(int pipe, struct drm_connector *connector)
 	return;
 }
 
+void generic_tear_on(struct intel_dsi_device *dsi)
+{
+	struct intel_dsi *intel_dsi = container_of(dsi, struct intel_dsi, dev);
+	struct drm_device *dev = intel_dsi->base.base.dev;
+	struct drm_i915_private *dev_priv = dev->dev_private;
+
+	char *sequence = dev_priv->vbt.dsi.sequence[MIPI_SEQ_TEAR_ON];
+
+	generic_exec_sequence(intel_dsi, sequence);
+}
+
 static bool generic_init(struct intel_dsi_device *dsi)
 {
 	struct intel_dsi *intel_dsi = container_of(dsi, struct intel_dsi, dev);
@@ -1071,6 +1082,7 @@ struct intel_dsi_dev_ops vbt_generic_dsi_display_ops = {
 	.disable_panel_power = generic_disable_panel_power,
 	.send_otp_cmds = generic_send_otp_cmds,
 	.enable = generic_enable,
+	.tear_on = generic_tear_on,
 	.disable = generic_disable,
 	.enable_backlight = generic_enable_bklt,
 	.disable_backlight = generic_disable_bklt,
-- 
1.7.9.5

