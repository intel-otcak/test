From 6fcda4e7c14bf04197fd2211c8045970d824bd5f Mon Sep 17 00:00:00 2001
From: "Subhransu S. Prusty" <subhransu.s.prusty@intel.com>
Date: Wed, 20 Aug 2014 11:16:08 +0530
Subject: Use mrfld recovery

Remove the dummpy (sst_do_recovery) function (call stack & HW registers dump).
The sst->ops->do_recovery is already set to sst_do_recovery_mrfld (mrfld_ops) to
perform the full DSP reset.

Remove the debug logs from sst_stall_lpe_n_wait, because DMA regs are not initialized

Change-Id: Ie7a2847f163f4c97ac8fc7709212159614a57c87
Signed-off-by: Subhransu S. Prusty <subhransu.s.prusty@intel.com>
---
 sound/soc/intel/sst/sst.c     |  1 -
 sound/soc/intel/sst/sst_pvt.c | 11 +++++++----
 2 files changed, 7 insertions(+), 5 deletions(-)

diff --git a/sound/soc/intel/sst/sst.c b/sound/soc/intel/sst/sst.c
index 106cb1e..3ca683a 100644
--- a/sound/soc/intel/sst/sst.c
+++ b/sound/soc/intel/sst/sst.c
@@ -443,7 +443,6 @@ int sst_driver_ops(struct intel_sst_drv *sst)
 #ifdef CONFIG_SST_DPCM
 		sst->tstamp = SST_TIME_STAMP_MRFLD;
 		sst->ops = &mrfld_ops;
-		sst->ops->do_recovery = sst_do_recovery;
 		sst->ops->post_download = sst_post_download_byt;
 #endif
 
diff --git a/sound/soc/intel/sst/sst_pvt.c b/sound/soc/intel/sst/sst_pvt.c
index d58fab0..87d8efc 100644
--- a/sound/soc/intel/sst/sst_pvt.c
+++ b/sound/soc/intel/sst/sst_pvt.c
@@ -42,6 +42,7 @@
 #define SST_EXCE_DUMP_LEN	32
 #define SST_EXCE_DUMP_SIZE	((SST_EXCE_DUMP_LEN)*(SST_EXCE_DUMP_WORD))
 #define SST_EXCE_DUMP_OFFSET	0xA00
+
 /*
  * sst_wait_interruptible - wait on event
  *
@@ -302,14 +303,16 @@ static void dump_buffer_fromio(void __iomem *from,
 static void sst_stall_lpe_n_wait(struct intel_sst_drv *sst)
 {
 	union config_status_reg_mrfld csr;
+#if 0
 	void __iomem *dma_reg0 = sst->debugfs.dma_reg[0];
 	void __iomem *dma_reg1 = sst->debugfs.dma_reg[1];
 	int offset = 0x3A0; /* ChEnReg of DMA */
+#endif
 
 
-	pr_err("Before stall: DMA_0 Ch_EN %#llx DMA_1 Ch_EN %#llx\n",
+/*	pr_err("Before stall: DMA_0 Ch_EN %#llx DMA_1 Ch_EN %#llx\n",
 				sst_reg_read64(dma_reg0, offset),
-				sst_reg_read64(dma_reg1, offset));
+				sst_reg_read64(dma_reg1, offset)); */
 
 	/* Stall LPE */
 	csr.full = sst_shim_read64(sst->shim, SST_CSR);
@@ -319,9 +322,9 @@ static void sst_stall_lpe_n_wait(struct intel_sst_drv *sst)
 	/* A 5ms delay, before resetting the LPE */
 	usleep_range(5000, 5100);
 
-	pr_err("After stall: DMA_0 Ch_EN %#llx DMA_1 Ch_EN %#llx\n",
+/*	pr_err("After stall: DMA_0 Ch_EN %#llx DMA_1 Ch_EN %#llx\n",
 				sst_reg_read64(dma_reg0, offset),
-				sst_reg_read64(dma_reg1, offset));
+				sst_reg_read64(dma_reg1, offset)); */
 }
 
 #if IS_ENABLED(CONFIG_INTEL_SCU_IPC)
-- 
2.1.0

