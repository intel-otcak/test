From ec7f0c2933e6f848172af3efe5627bdda4c2fd96 Mon Sep 17 00:00:00 2001
From: "Du, Changbin" <changbin.du@intel.com>
Date: Mon, 23 Mar 2015 14:27:52 +0800
Subject: [PATCH] usb/android.c: fix missing ctrlrequest callback of ptp
 function

The ctrlrequest callback of ptp function is not set in android gadget.
Thus some ptp use case do not work since ptp control request isn't
handled. For example, cancel a ptp transfer. This patch reuse and modify
the mtp's callback mtp_ctrlrequest. PTP mode has no OS descriptor.

Change-Id: I4e1812bf615a0497f26e909fb36de10aae436ebc
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-25152
Signed-off-by: Du, Changbin <changbin.du@intel.com>
Signed-off-by: jzhuan5 <jin.can.zhuang@intel.com>
---
 drivers/usb/gadget/android.c | 10 +++++++++-
 drivers/usb/gadget/f_mtp.c   | 11 ++++++-----
 2 files changed, 15 insertions(+), 6 deletions(-)

diff --git a/drivers/usb/gadget/android.c b/drivers/usb/gadget/android.c
index 41904d2..7e9e483 100644
--- a/drivers/usb/gadget/android.c
+++ b/drivers/usb/gadget/android.c
@@ -622,7 +622,14 @@ static int mtp_function_ctrlrequest(struct android_usb_function *f,
 					struct usb_composite_dev *cdev,
 					const struct usb_ctrlrequest *c)
 {
-	return mtp_ctrlrequest(cdev, c);
+	return mtp_ctrlrequest(cdev, c, 0);
+}
+
+static int ptp_function_ctrlrequest(struct android_usb_function *f,
+					struct usb_composite_dev *cdev,
+					const struct usb_ctrlrequest *c)
+{
+	return mtp_ctrlrequest(cdev, c, 1);
 }
 
 static struct android_usb_function mtp_function = {
@@ -639,6 +646,7 @@ static struct android_usb_function ptp_function = {
 	.init		= ptp_function_init,
 	.cleanup	= ptp_function_cleanup,
 	.bind_config	= ptp_function_bind_config,
+	.ctrlrequest	= ptp_function_ctrlrequest,
 };
 
 
diff --git a/drivers/usb/gadget/f_mtp.c b/drivers/usb/gadget/f_mtp.c
index 4efa3f7..d58d010 100644
--- a/drivers/usb/gadget/f_mtp.c
+++ b/drivers/usb/gadget/f_mtp.c
@@ -1185,7 +1185,7 @@ static struct miscdevice mtp_device = {
 };
 
 static int mtp_ctrlrequest(struct usb_composite_dev *cdev,
-				const struct usb_ctrlrequest *ctrl)
+				const struct usb_ctrlrequest *ctrl, int ptp)
 {
 	struct mtp_dev *dev = _mtp_dev;
 	int	value = -EOPNOTSUPP;
@@ -1199,8 +1199,8 @@ static int mtp_ctrlrequest(struct usb_composite_dev *cdev,
 			ctrl->bRequestType, ctrl->bRequest,
 			w_value, w_index, w_length);
 
-	/* Handle MTP OS string */
-	if (ctrl->bRequestType ==
+	/* Handle MTP OS string, ignore this request if running in ptp mode. */
+	if (!ptp && ctrl->bRequestType ==
 			(USB_DIR_IN | USB_TYPE_STANDARD | USB_RECIP_DEVICE)
 			&& ctrl->bRequest == USB_REQ_GET_DESCRIPTOR
 			&& (w_value >> 8) == USB_DT_STRING
@@ -1208,7 +1208,8 @@ static int mtp_ctrlrequest(struct usb_composite_dev *cdev,
 		value = (w_length < sizeof(mtp_os_string)
 				? w_length : sizeof(mtp_os_string));
 		memcpy(cdev->req->buf, mtp_os_string, value);
-	} else if ((ctrl->bRequestType & USB_TYPE_MASK) == USB_TYPE_VENDOR) {
+	} else if ((ctrl->bRequestType & USB_TYPE_MASK) == USB_TYPE_VENDOR
+			&& !ptp) {
 		/* Handle MTP OS descriptor */
 		DBG(cdev, "vendor request: %d index: %d value: %d length: %d\n",
 			ctrl->bRequest, w_index, w_value, w_length);
@@ -1650,7 +1651,7 @@ static struct usb_function_instance *mtp_alloc_inst(void)
 static int mtp_ctrlreq_configfs(struct usb_function *f,
 				const struct usb_ctrlrequest *ctrl)
 {
-	return mtp_ctrlrequest(f->config->cdev, ctrl);
+	return mtp_ctrlrequest(f->config->cdev, ctrl, 0);
 }
 
 static void mtp_free(struct usb_function *f)
-- 
1.9.1

