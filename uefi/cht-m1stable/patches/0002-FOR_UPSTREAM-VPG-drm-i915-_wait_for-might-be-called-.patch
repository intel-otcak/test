From f2f7eebf18cf0bbeae544b964f913262489d7d25 Mon Sep 17 00:00:00 2001
Message-Id: <f2f7eebf18cf0bbeae544b964f913262489d7d25.1424222301.git.chang-joon.lee@intel.com>
In-Reply-To: <544bc8239c02b7975f1c2b572598450d11535d39.1424222301.git.chang-joon.lee@intel.com>
References: <544bc8239c02b7975f1c2b572598450d11535d39.1424222301.git.chang-joon.lee@intel.com>
From: Deepak S <deepak.s@intel.com>
Date: Thu, 12 Feb 2015 18:27:40 +0530
Subject: [PATCH 2/4] FOR_UPSTREAM [VPG]: drm/i915: _wait_for might be called
 when irq is off

Sometimes, i915 might call _wait_for when irq is disabled.
If the cpu is the main cpu to process jiffies, jiffies
wouldn't be increased as this cpu disables irq. Then,
time_after(jiffies, timeout__) becomes meaningless. If
gunit doesn't work now, kernel wouldn't exit as the timeout
doesn't work.

The patch fixes it by using sched_clock instead of jiffies.

Issue: GMIN-3640
Change-Id: I341c83996e7b7977dfb618d0f2522eb3f55ffad0
Signed-off-by: Zhang Yanmin <yanmin.zhang@intel.com>
Signed-off-by: Deepak S <deepak.s@intel.com>
---
 drivers/gpu/drm/i915/intel_drv.h |   10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_drv.h b/drivers/gpu/drm/i915/intel_drv.h
index 23c1eb7..2454553 100644
--- a/drivers/gpu/drm/i915/intel_drv.h
+++ b/drivers/gpu/drm/i915/intel_drv.h
@@ -43,17 +43,19 @@
  * having timed out, since the timeout could be due to preemption or similar and
  * we've never had a chance to check the condition before the timeout.
  */
-#define _wait_for(COND, MS, W) ({ \
-	unsigned long timeout__ = jiffies + msecs_to_jiffies(MS) + 1;	\
+#define _wait_for(COND, MS, W) ({					\
+	u64 timeout_ = sched_clock() + MS * ((u64) NSEC_PER_MSEC);	\
+	u64 clock;							\
 	int ret__ = 0;							\
 	while (!(COND)) {						\
-		if (time_after(jiffies, timeout__)) {			\
+		clock = sched_clock();					\
+		if (clock >= timeout_) {				\
 			if (!(COND))					\
 				ret__ = -ETIMEDOUT;			\
 			break;						\
 		}							\
 		if (W && drm_can_sleep())  {				\
-			usleep_range(W*1000, W*2*1000);	\
+			usleep_range(W*1000, W*2*1000);			\
 		} else {						\
 			cpu_relax();					\
 		}							\
-- 
1.7.9.5

