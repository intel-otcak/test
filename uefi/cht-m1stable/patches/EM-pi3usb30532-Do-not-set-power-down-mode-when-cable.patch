From fa55a59ac4165947740d9807ee1f6b35fa6c5e73 Mon Sep 17 00:00:00 2001
From: Albin B <albin.bala.krishnan@intel.com>
Date: Tue, 22 Sep 2015 18:14:22 +0530
Subject: [PATCH] [EM/pi3usb30532]: Do not set power down mode when cable
 attached

When platform goes to suspend state with usb3.0 device attached
and if the mux sets to power down, the peripheral device
connected toggles between device connect and disconnect state and
also mux driver resume frequently. So platform is not allowing to
enter into S0ix state. In case if nothing is connected to the
platform, the mux will be already in power down mode, so do not
required any extra settting's in suspend state and not setting
into power down mode if any cable is attached.

Change-Id: I8049b0097d574d823533d49976c1f03248edd04f
Tracked-On: https://jira01.devtools.intel.com/browse/GMINL-18873
Signed-off-by: Albin B <albin.bala.krishnan@intel.com>
---
 drivers/misc/pi3usb30532_mux.c | 16 +---------------
 1 file changed, 1 insertion(+), 15 deletions(-)

diff --git a/drivers/misc/pi3usb30532_mux.c b/drivers/misc/pi3usb30532_mux.c
index 8b4b1d1..3ff4396 100644
--- a/drivers/misc/pi3usb30532_mux.c
+++ b/drivers/misc/pi3usb30532_mux.c
@@ -57,7 +57,6 @@ struct pi3usb30532_mux {
 	struct work_struct mux_work;
 	struct mutex event_lock;
 	struct typec_phy *phy;
-	u8 cur_config;
 	struct extcon_dev *edev;
 	int dp_cbl_state;
 };
@@ -180,8 +179,6 @@ static void pi3usb30532_mux_event_worker(struct work_struct *work)
 		break;
 	}
 
-	chip->cur_config = conf;
-
 	pi3usb30532_mux_sel_ctrl(chip, conf);
 	if (chip->dp_cbl_state != dp_state) {
 		hpd_trigger(dp_state);
@@ -306,25 +303,14 @@ static int pi3usb30532_suspend(struct device *dev)
 {
 	struct pi3usb30532_mux *chip = dev_get_drvdata(dev);
 
-	int ret;
-
-	mutex_lock(&chip->event_lock);
-	ret = pi3usb30532_mux_write_reg(chip->client,
-				PI3USB30532_SEL_CTRL_REG,
-				PI3USBMUX_OPEN_WITHPD);
-	mutex_unlock(&chip->event_lock);
 	dev_dbg(&chip->client->dev, "pi3usb30532 suspend\n");
-	return ret;
+	return 0;
 }
 
 static int pi3usb30532_resume(struct device *dev)
 {
 	struct pi3usb30532_mux *chip = dev_get_drvdata(dev);
 
-	mutex_lock(&chip->event_lock);
-	pi3usb30532_mux_sel_ctrl(chip, chip->cur_config);
-	mutex_unlock(&chip->event_lock);
-
 	dev_dbg(&chip->client->dev, "pi3usb30532 resume\n");
 	return 0;
 }
-- 
1.9.1

