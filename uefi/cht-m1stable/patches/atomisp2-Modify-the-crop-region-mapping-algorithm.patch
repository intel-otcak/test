From 367be12d4cb853fd80b93dc59d0fed6bd48bbca7 Mon Sep 17 00:00:00 2001
From: haiqiang yao <haiqiangx.yao@intel.com>
Date: Wed, 10 Jun 2015 15:33:16 +0800
Subject: [PATCH] atomisp2: Modify the crop region mapping algorithm

the patch will modify the crop region mapping algorithm.
It will fix the preview centre offset issue when run crop
region to use camera APP.

Change-Id: I5316b4bcf5c21073be1485abcdad57decf6a7901
Tracked-On: https://jira01.devtools.intel.com/browse/GMINL-14109
Signed-off-by: haiqiang yao <haiqiangx.yao@intel.com>
Reviewed-on: https://icggerrit.ir.intel.com/59965
Validation-Android: Wei Tao <wei.tao@intel.com>
Build: IMIN (SC)
Approver: Jing Tao <jing.tao@intel.com>
Integrator: WeiX Meng <weix.meng@intel.com>
Build: WeiX Meng <weix.meng@intel.com>
Reviewed-by: WeiX Meng <weix.meng@intel.com>
Maintainer: WeiX Meng <weix.meng@intel.com>
---
 .../pci/atomisp2/atomisp_driver/atomisp_cmd.c      | 57 ++++++++++++++++------
 1 file changed, 43 insertions(+), 14 deletions(-)

diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c
index 8c14ed7104d7..3e29014d7e12 100755
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c
@@ -2902,6 +2902,7 @@ int atomisp_calculate_real_zoom_region(struct atomisp_sub_device *asd,
 	struct atomisp_stream_env *stream_env =
 			&asd->stream_env[ATOMISP_INPUT_STREAM_GENERAL];
 	struct atomisp_resolution  eff_res, out_res;
+	int w_offset, h_offset;
 
 	memset(&eff_res, 0, sizeof(eff_res));
 	memset(&out_res, 0, sizeof(out_res));
@@ -2943,37 +2944,65 @@ int atomisp_calculate_real_zoom_region(struct atomisp_sub_device *asd,
 	 * to firmware limitation.
 	 * map real crop region base on above calculating base max crop region.
 	 */
+	out_res.width =
+		stream_env->pipe_configs[css_pipe_id].output_info[0].res.width;
+	out_res.height =
+		stream_env->pipe_configs[css_pipe_id].output_info[0].res.height;
+	if (out_res.width == 0 || out_res.height == 0) {
+		dev_err(asd->isp->dev, "%s err current pipe output resolution"
+				, __func__);
+		return -EINVAL;
+	}
+
+	if (asd->sensor_array_res.width * out_res.height
+			< out_res.width * asd->sensor_array_res.height) {
+		h_offset = asd->sensor_array_res.height -
+				asd->sensor_array_res.width
+				* out_res.height / out_res.width;
+		h_offset = h_offset / 2;
+		if (dz_config->zoom_region.origin.y < h_offset)
+			dz_config->zoom_region.origin.y = 0;
+		else
+			dz_config->zoom_region.origin.y =
+				dz_config->zoom_region.origin.y - h_offset;
+		w_offset = 0;
+	} else {
+		w_offset = asd->sensor_array_res.width -
+				asd->sensor_array_res.height
+				* out_res.width / out_res.height;
+		w_offset = w_offset / 2;
+		if (dz_config->zoom_region.origin.x < w_offset)
+			dz_config->zoom_region.origin.x = 0;
+		else
+			dz_config->zoom_region.origin.x =
+				dz_config->zoom_region.origin.x - w_offset;
+		h_offset = 0;
+	}
 	dz_config->zoom_region.origin.x =
 			dz_config->zoom_region.origin.x
 			* eff_res.width
-			/ asd->sensor_array_res.width;
+			/ (asd->sensor_array_res.width -
+			2 * w_offset);
 	dz_config->zoom_region.origin.y =
 			dz_config->zoom_region.origin.y
 			* eff_res.height
-			/ asd->sensor_array_res.height;
+			/ (asd->sensor_array_res.height -
+			2 * h_offset);
 	dz_config->zoom_region.resolution.width =
 			dz_config->zoom_region.resolution.width
 			* eff_res.width
-			/ asd->sensor_array_res.width;
+			/ (asd->sensor_array_res.width -
+			2 * w_offset);
 	dz_config->zoom_region.resolution.height =
 			dz_config->zoom_region.resolution.height
 			* eff_res.height
-			/ asd->sensor_array_res.height;
+			/ (asd->sensor_array_res.height -
+			2 * h_offset);
 
 	/*
 	  * Set same ratio of crop region resolution and current pipe output
 	  * resolution
 	  */
-	out_res.width =
-		stream_env->pipe_configs[css_pipe_id].output_info[0].res.width;
-	out_res.height =
-		stream_env->pipe_configs[css_pipe_id].output_info[0].res.height;
-	if (out_res.width == 0 || out_res.height == 0) {
-		dev_err(asd->isp->dev, "%s err current pipe output resolution"
-				, __func__);
-		return -EINVAL;
-	}
-
 	if (out_res.width * dz_config->zoom_region.resolution.height
 		> dz_config->zoom_region.resolution.width * out_res.height) {
 		dz_config->zoom_region.resolution.height =
-- 
1.9.1

