From ba4b5594d964f20e1ee61ed5b1e888be8e12e794 Mon Sep 17 00:00:00 2001
Message-Id: <ba4b5594d964f20e1ee61ed5b1e888be8e12e794.1426574757.git.chang-joon.lee@intel.com>
In-Reply-To: <eba22108096acc90a0516b200c616db90ae0cb5f.1426574757.git.chang-joon.lee@intel.com>
References: <eba22108096acc90a0516b200c616db90ae0cb5f.1426574757.git.chang-joon.lee@intel.com>
From: Deepak S <deepak.s@intel.com>
Date: Wed, 11 Mar 2015 21:03:20 +0530
Subject: [PATCH 5/8] Revert "REVERTME [VPG]: drm/i915: Power gating display
 wells at the end of runtime & system suspend"

This workaround patch was keeping unused power domains on resulting more power
consumption Reverting this patch and adding a simplified version of the workaround to allow
unused power domains to be power gated.

This patch reverts commit:
commit b49e1c09685560690402a87dd2b71ddcf9d9aa7d
Author: Sagar Kamble <sagar.a.kamble@intel.com>
Date:   Tue Sep 16 23:03:36 2014 +0530

    REVERTME [VPG]: drm/i915: Power gating display wells at the end of
    runtime & system suspend

For: GMINL-6977
Change-Id: Ifabfb55feda2c56a1ec2ff1bce445e8e3a76a4dc
Signed-off-by: Deepak S <deepak.s@intel.com>
---
 drivers/gpu/drm/i915/i915_drv.c      |   45 ++--------------------------------
 drivers/gpu/drm/i915/intel_display.c |   17 +++----------
 drivers/gpu/drm/i915/intel_drv.h     |    4 ---
 drivers/gpu/drm/i915/intel_pm.c      |   26 +++++---------------
 4 files changed, 11 insertions(+), 81 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_drv.c b/drivers/gpu/drm/i915/i915_drv.c
index b5a9e5b..0c878cf 100644
--- a/drivers/gpu/drm/i915/i915_drv.c
+++ b/drivers/gpu/drm/i915/i915_drv.c
@@ -565,13 +565,7 @@ static int i915_drm_freeze(struct drm_device *dev)
 
 	/* We do a lot of poking in a lot of registers, make sure they work
 	 * properly. */
-	if (IS_VALLEYVIEW(dev))
-		WARN_ON(!dev_priv->power_domains.init_power_on);
-	else {
-		/* We do a lot of poking in a lot of registers, make sure they
-		 * work properly. */
-		intel_display_set_init_power(dev_priv, true);
-	}
+	intel_display_set_init_power(dev_priv, true);
 
 	drm_kms_helper_poll_disable(dev);
 
@@ -588,12 +582,6 @@ static int i915_drm_freeze(struct drm_device *dev)
 			return error;
 		}
 
-		if (IS_VALLEYVIEW(dev)) {
-			spin_lock_irq(&dev_priv->irq_lock);
-			valleyview_disable_display_irqs(dev_priv);
-			spin_unlock_irq(&dev_priv->irq_lock);
-		}
-
 		/* Clear any pending reset requests. They should be picked up
 		* after resume when new work is submitted */
 		for (i = 0; i < I915_NUM_RINGS; i++)
@@ -637,8 +625,7 @@ static int i915_drm_freeze(struct drm_device *dev)
 	if (ret)
 		WARN(1, "Suspend complete failed: %d\n", ret);
 
-	if (!IS_VALLEYVIEW(dev))
-		intel_display_set_init_power(dev_priv, false);
+	intel_display_set_init_power(dev_priv, false);
 
 	return 0;
 }
@@ -1802,8 +1789,6 @@ static int vlv_suspend_complete(struct drm_i915_private *dev_priv)
 	u32 mask;
 	int err;
 
-	WARN_ON(!dev_priv->power_domains.init_power_on);
-
 	/*
 	 * Bspec defines the following GT well on flags as debug only, so
 	 * don't treat them as hard failures.
@@ -1830,8 +1815,6 @@ static int vlv_suspend_complete(struct drm_i915_private *dev_priv)
 	if (err)
 		goto err2;
 
-	intel_display_set_init_power(dev_priv, false);
-
 	return 0;
 
 err2:
@@ -1881,8 +1864,6 @@ static int vlv_resume_prepare(struct drm_i915_private *dev_priv,
 		i915_gem_restore_fences(dev);
 	}
 
-	intel_display_set_init_power(dev_priv, true);
-
 	return ret;
 }
 
@@ -1927,11 +1908,6 @@ static int intel_runtime_suspend(struct device *device)
 	i915_gem_release_all_mmaps(dev_priv);
 	mutex_unlock(&dev->struct_mutex);
 
-	if (IS_VALLEYVIEW(dev)) {
-		spin_lock_irq(&dev_priv->irq_lock);
-		valleyview_disable_display_irqs(dev_priv);
-		spin_unlock_irq(&dev_priv->irq_lock);
-	}
 	/*
 	 * rps.work can't be rearmed here, since we get here only after making
 	 * sure the GPU is idle and the RPS freq is set to the minimum. See
@@ -1966,29 +1942,12 @@ static int intel_runtime_suspend(struct device *device)
 	return 0;
 }
 
-#define __raw_i915_read32(dev_priv__, reg__) \
-		readl((dev_priv__)->regs + (reg__))
-#define __raw_i915_write32(dev_priv__, reg__, val__) \
-		writel(val__, (dev_priv__)->regs + (reg__))
-
 static int intel_runtime_resume(struct device *device)
 {
 	struct pci_dev *pdev = to_pci_dev(device);
 	struct drm_device *dev = pci_get_drvdata(pdev);
 	struct drm_i915_private *dev_priv = dev->dev_private;
 	int ret;
-	u32 gtfifodbg;
-
-	/*
-	 * FIXME: GTFIFODBG registers gets set to 0x10 post resume from S0iX.
-	 * This leads to warning to be hit in gen6_gt_check_fifodbg from
-	 * __vlv_force_wake_put called from register read first time post
-	 * resume. Clearing it here.
-	*/
-	if (IS_VALLEYVIEW(dev)) {
-		gtfifodbg = __raw_i915_read32(dev_priv, GTFIFODBG);
-		__raw_i915_write32(dev_priv, GTFIFODBG, gtfifodbg);
-	}
 
 	if (WARN_ON_ONCE(!HAS_RUNTIME_PM(dev)))
 		return -ENODEV;
diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index 4b8d5d3..d96e053 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -5076,23 +5076,13 @@ static unsigned long get_crtc_power_domains(struct drm_crtc *crtc)
 void intel_display_set_init_power(struct drm_i915_private *dev_priv,
 				  bool enable)
 {
-	struct drm_device *dev = dev_priv->dev;
-
 	if (dev_priv->power_domains.init_power_on == enable)
 		return;
 
 	if (enable)
-		if (IS_VALLEYVIEW(dev))
-			intel_display_power_rpm_get(dev_priv,
-					POWER_DOMAIN_INIT, false);
-		else
-			intel_display_power_get(dev_priv, POWER_DOMAIN_INIT);
+		intel_display_power_get(dev_priv, POWER_DOMAIN_INIT);
 	else
-		if (IS_VALLEYVIEW(dev))
-			intel_display_power_rpm_put(dev_priv,
-					POWER_DOMAIN_INIT, false);
-		else
-			intel_display_power_put(dev_priv, POWER_DOMAIN_INIT);
+		intel_display_power_put(dev_priv, POWER_DOMAIN_INIT);
 
 	dev_priv->power_domains.init_power_on = enable;
 }
@@ -5128,8 +5118,7 @@ static void modeset_update_crtc_power_domains(struct drm_device *dev)
 		crtc->enabled_power_domains = pipe_domains[crtc->pipe];
 	}
 
-	if (!IS_VALLEYVIEW(dev))
-		intel_display_set_init_power(dev_priv, false);
+	intel_display_set_init_power(dev_priv, false);
 }
 
 int valleyview_get_vco(struct drm_i915_private *dev_priv)
diff --git a/drivers/gpu/drm/i915/intel_drv.h b/drivers/gpu/drm/i915/intel_drv.h
index de25f89..1f0b5fc 100644
--- a/drivers/gpu/drm/i915/intel_drv.h
+++ b/drivers/gpu/drm/i915/intel_drv.h
@@ -1114,10 +1114,6 @@ bool intel_display_power_enabled(struct drm_i915_private *dev_priv,
 				 enum intel_display_power_domain domain);
 bool intel_display_power_enabled_unlocked(struct drm_i915_private *dev_priv,
 					  enum intel_display_power_domain domain);
-void intel_display_power_rpm_get(struct drm_i915_private *dev_priv,
-			     enum intel_display_power_domain domain, bool rpm);
-void intel_display_power_rpm_put(struct drm_i915_private *dev_priv,
-			     enum intel_display_power_domain domain, bool rpm);
 void intel_display_power_get(struct drm_i915_private *dev_priv,
 			     enum intel_display_power_domain domain);
 void intel_display_power_put(struct drm_i915_private *dev_priv,
diff --git a/drivers/gpu/drm/i915/intel_pm.c b/drivers/gpu/drm/i915/intel_pm.c
index c2c99f9..3741e6e 100644
--- a/drivers/gpu/drm/i915/intel_pm.c
+++ b/drivers/gpu/drm/i915/intel_pm.c
@@ -7066,15 +7066,14 @@ mismatch:
 		  power_well->count, i915.disable_power_well);
 }
 
-void intel_display_power_rpm_get(struct drm_i915_private *dev_priv,
-			     enum intel_display_power_domain domain, bool rpm)
+void intel_display_power_get(struct drm_i915_private *dev_priv,
+			     enum intel_display_power_domain domain)
 {
 	struct i915_power_domains *power_domains;
 	struct i915_power_well *power_well;
 	int i;
 
-	if (rpm)
-		intel_runtime_pm_get(dev_priv);
+	intel_runtime_pm_get(dev_priv);
 
 	power_domains = &dev_priv->power_domains;
 
@@ -7100,8 +7099,8 @@ void intel_display_power_rpm_get(struct drm_i915_private *dev_priv,
 	mutex_unlock(&power_domains->lock);
 }
 
-void intel_display_power_rpm_put(struct drm_i915_private *dev_priv,
-			     enum intel_display_power_domain domain, bool rpm)
+void intel_display_power_put(struct drm_i915_private *dev_priv,
+			     enum intel_display_power_domain domain)
 {
 	struct i915_power_domains *power_domains;
 	struct i915_power_well *power_well;
@@ -7133,20 +7132,7 @@ void intel_display_power_rpm_put(struct drm_i915_private *dev_priv,
 
 	mutex_unlock(&power_domains->lock);
 
-	if (rpm)
-		intel_runtime_pm_put(dev_priv);
-}
-
-void intel_display_power_get(struct drm_i915_private *dev_priv,
-				enum intel_display_power_domain domain)
-{
-	intel_display_power_rpm_get(dev_priv, domain, true);
-}
-
-void intel_display_power_put(struct drm_i915_private *dev_priv,
-				enum intel_display_power_domain domain)
-{
-	intel_display_power_rpm_put(dev_priv, domain, true);
+	intel_runtime_pm_put(dev_priv);
 }
 
 static struct i915_power_domains *hsw_pwr;
-- 
1.7.9.5

