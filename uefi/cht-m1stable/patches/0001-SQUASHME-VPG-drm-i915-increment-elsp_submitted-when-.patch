From df5ead8e61489a426950126c0cc1908eff1f635c Mon Sep 17 00:00:00 2001
Message-Id: <df5ead8e61489a426950126c0cc1908eff1f635c.1443561619.git.yunwei.zhang@intel.com>
From: Michel Thierry <michel.thierry@intel.com>
Date: Fri, 11 Sep 2015 16:19:43 +0100
Subject: [PATCH 1/2] SQUASHME! [VPG]: drm/i915: increment elsp_submitted when
 sending force_resubmit requests

Otherwise the number of submitted requests can be less than the number
of received ctx status events.

SQUASHME! - This patch should be squashed into the following existing patch:
    Author: Tomas Elf <tomas.elf@intel.com>
    Date:   Thu Nov 13 20:21:47 2014 +0000
    Change-Id: Iaaa6082398e3751f8fd733c04098a3ba0be93d07
    REVERTME [VPG]: drm/i915: Lock-up workaround: Forced context resubmission

Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-43793
Change-Id: I40b6ac586957d72620b062dc72f6a8679787270e
Signed-off-by: Michel Thierry <michel.thierry@intel.com>
---
 drivers/gpu/drm/i915/intel_lrc.c | 18 +++++++++++++++---
 1 file changed, 15 insertions(+), 3 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_lrc.c b/drivers/gpu/drm/i915/intel_lrc.c
index 8ce88c5..5d44d5d 100644
--- a/drivers/gpu/drm/i915/intel_lrc.c
+++ b/drivers/gpu/drm/i915/intel_lrc.c
@@ -838,7 +838,8 @@ static void execlists_context_unqueue(struct intel_engine_cs *ring)
  * the elsp_counter in this special case the execlist state machine would
  * expect a corresponding lite restore interrupt, which is never produced.
  */
-static void execlists_TDR_context_unqueue(struct intel_engine_cs *ring)
+static void execlists_TDR_context_unqueue(struct intel_engine_cs *ring,
+					  bool from_force_resubmit)
 {
 	struct intel_ctx_submit_request *req0 = NULL, *req1 = NULL;
 
@@ -864,6 +865,17 @@ static void execlists_TDR_context_unqueue(struct intel_engine_cs *ring)
 	WARN_ON(execlists_submit_context(ring, req0->ctx, req0->tail,
 					 req1 ? req1->ctx : NULL,
 					 req1 ? req1->tail : 0));
+
+	/*
+	 * force_resubmit is not sent during a hang, so increment the elsp
+	 * resubmit counter to keep it in sync with the number of ctx events
+	 * we'll get from hw.
+	 */
+	if (from_force_resubmit) {
+		req0->elsp_submitted++;
+		if (req1)
+			req1->elsp_submitted++;
+	}
 }
 
 /**
@@ -1240,7 +1252,7 @@ int intel_execlists_TDR_context_queue(struct intel_engine_cs *ring,
 		    (unsigned int) c_ctxid, ring->name,
 		    (unsigned int) to_ctxid);
 
-		execlists_TDR_context_unqueue(ring);
+		execlists_TDR_context_unqueue(ring, false);
 
 		spin_unlock_irqrestore(&ring->execlist_lock, flags);
 	}
@@ -3575,7 +3587,7 @@ void intel_execlists_TDR_force_resubmit(struct drm_i915_private *dev_priv,
 		goto exit;
 	}
 
-	execlists_TDR_context_unqueue(ring);
+	execlists_TDR_context_unqueue(ring, true);
 
 exit:
 	if (ctx)
-- 
1.9.1

