From 3ccad8c88d475b09c7a94de8d1d4816db2753c7e Mon Sep 17 00:00:00 2001
From: Jeremy Compostella <jeremy.compostella@intel.com>
Date: Fri, 31 Oct 2014 14:35:55 +0100
Subject: [PATCH 1/2] x86: mark tsc as stable for Atom processors with
 suspend-nonstop tsc

New Intel Atom processors (Baytrail, Tangier, Cherryview and
Anniedale), have a TSC that won't stop in suspend state state, say the
tsc won't be reset to 0 after resume.  This feature makes TSC a more
reliable clocksource and could benefit the timekeeping code during
system suspend/resume cycle.

These x86 models have runtime power management that is managed by the
hardware.  The kernel is not aware of some runtime PM state
transitions.  In S0i3 power state, the other clocksources like the
HPET and ACPI_PM clocksource are stopped while the tsc is still
running.  This situation leads to an inconsistency between the tsc
clocksource and the other clocksources.  For those platforms, we mark
the tsc as reliable to ensure it won't be verified against any other
clocksources and wrongly marked unstable while it is actually the best
clocksource available.

Change-Id: I1e148d6cf798a5c2ee3df47849eca15963e629bf
Signed-off-by: Jeremy Compostella <jeremy.compostella@intel.com>
---
 arch/x86/kernel/cpu/intel.c | 14 +++++++++++++-
 1 file changed, 13 insertions(+), 1 deletion(-)

diff --git a/arch/x86/kernel/cpu/intel.c b/arch/x86/kernel/cpu/intel.c
index 5cd9bfabd645..9a6be88e74a8 100644
--- a/arch/x86/kernel/cpu/intel.c
+++ b/arch/x86/kernel/cpu/intel.c
@@ -95,12 +95,24 @@ static void early_init_intel(struct cpuinfo_x86 *c)
 			set_sched_clock_stable();
 	}
 
-	/* Penwell and Cloverview have the TSC which doesn't sleep on S3 */
+	/*
+	 * The following x86 models have the TSC which doesn't sleep
+	 * in suspend state.  On those platforms, the tsc clocksource
+	 * is very reliable while the other clocksources like HPET or
+	 * ACPI_PM are stopped in some low power states.  We mark the
+	 * tsc as reliable to ensure it won't be verified against any
+	 * other clocksource.
+	 */
 	if (c->x86 == 6) {
 		switch (c->x86_model) {
 		case 0x27:	/* Penwell */
 		case 0x35:	/* Cloverview */
+		case 0x37:	/* Baytrail */
+		case 0x4a:	/* Tangier */
+		case 0x4c:	/* Cherryview */
+		case 0x5a:	/* Anniedale */
 			set_cpu_cap(c, X86_FEATURE_NONSTOP_TSC_S3);
+			tsc_clocksource_reliable = 1;
 			break;
 		default:
 			break;
-- 
1.9.1

