From 497c2c915d77706ed0a3c2f421c8e35108ca263c Mon Sep 17 00:00:00 2001
Message-Id: <497c2c915d77706ed0a3c2f421c8e35108ca263c.1431284209.git.chang-joon.lee@intel.com>
In-Reply-To: <89460f3fc3d6c0659d44897a6adec3c3fecc5564.1431284209.git.chang-joon.lee@intel.com>
References: <89460f3fc3d6c0659d44897a6adec3c3fecc5564.1431284209.git.chang-joon.lee@intel.com>
From: John Harrison <John.C.Harrison@Intel.com>
Date: Fri, 27 Mar 2015 18:27:40 +0000
Subject: [PATCH 45/68] SQUASHME! [VPG]: drm/i915: Fix for stalling on
 cancelled fences

The scheduler supports batch buffers being dependent upon native sync
points. If a sync point is not yet signalled then that batch buffer
will not be submitted. If all remaining buffers are blocked by sync
points then the scheduler will sleep on those sync points.

Unfortunately, the test for whether a given batch buffer's sync point
was signaled or not did not take errored sync points into account.
This patch corrects the test so that it no longer waits forever if a
sync point fails for any reason.

This patch could be squashed in to the one that originally added the
scheduler:
  commit c64b5c1f236ee9c9362f06a675b4bc906ad3cb04
  Author: John Harrison <John.C.Harrison@Intel.com>
  Date:   Thu Apr 10 10:58:56 2014 +0100
  Subject: FOR_UPSTREAM [VPG]: drm/i915: Added trace points to scheduler
  Change-Id: I9886390cfc7897bc1faf50a104bc651d8baed8a5

Change-Id: Ib9d3cb86c3f9d184645b5cd57f76e8bb3266ae78
For: VIZ-1587
For: VIZ-4741
Signed-off-by: John Harrison <John.C.Harrison@Intel.com>
---
 drivers/gpu/drm/i915/i915_scheduler.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/i915/i915_scheduler.c b/drivers/gpu/drm/i915/i915_scheduler.c
index e0eb583..0357915 100644
--- a/drivers/gpu/drm/i915/i915_scheduler.c
+++ b/drivers/gpu/drm/i915/i915_scheduler.c
@@ -1306,7 +1306,7 @@ static int i915_scheduler_pop_from_queue_locked(struct intel_engine_cs *ring,
 
 #ifdef CONFIG_SYNC
 		if (node->params.fence_wait)
-			signalled = node->params.fence_wait->status;
+			signalled = node->params.fence_wait->status != 0;
 		else
 			signalled = true;
 #endif
-- 
1.7.9.5

