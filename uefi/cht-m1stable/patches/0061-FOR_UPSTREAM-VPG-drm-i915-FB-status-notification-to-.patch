From a69eb0449cbd153fd3b1cb5165ed33a859df5d39 Mon Sep 17 00:00:00 2001
Message-Id: <a69eb0449cbd153fd3b1cb5165ed33a859df5d39.1431284209.git.chang-joon.lee@intel.com>
In-Reply-To: <89460f3fc3d6c0659d44897a6adec3c3fecc5564.1431284209.git.chang-joon.lee@intel.com>
References: <89460f3fc3d6c0659d44897a6adec3c3fecc5564.1431284209.git.chang-joon.lee@intel.com>
From: Ramalingam C <ramalingam.c@intel.com>
Date: Mon, 13 Apr 2015 10:54:05 +0530
Subject: [PATCH 61/68] FOR_UPSTREAM [VPG]: drm/i915: FB status notification
 to Idleness DRRS

Whenever there is a FB status change, Idleness DRRS will be notified
with the same info through below two function calls:

intel_disable_idleness_drrs()
intel_restart_idleness_drrs()

Corresponding fucntion calls are placed in i915 driver.

Issue: GMINL-8115
Change-Id: I55057c0e47e55113ef3dba44523c41bf4e3b55c4
Signed-off-by: Ramalingam C <ramalingam.c@intel.com>
---
 drivers/gpu/drm/i915/intel_display.c |   15 +++++++++++++++
 drivers/gpu/drm/i915/intel_sprite.c  |    6 ++++++
 2 files changed, 21 insertions(+)

Index: b/drivers/gpu/drm/i915/intel_display.c
===================================================================
--- a/drivers/gpu/drm/i915/intel_display.c	2016-03-08 15:14:48.684598772 -0800
+++ b/drivers/gpu/drm/i915/intel_display.c	2016-03-08 15:19:53.467717758 -0800
@@ -3523,6 +3523,7 @@
 	else
 		intel_edp_psr_update(dev, false);
 	intel_update_fbc(dev);
+	intel_restart_idleness_drrs(intel_crtc);
 	mutex_unlock(&dev->struct_mutex);
 
 	return 0;
@@ -4738,6 +4739,7 @@
 
 	mutex_lock(&dev->struct_mutex);
 	intel_update_fbc(dev);
+	intel_restart_idleness_drrs(intel_crtc);
 
 	if (IS_VALLEYVIEW(dev))
 		intel_vlv_edp_psr_update(dev);
@@ -4760,6 +4762,7 @@
 	if (dev_priv->fbc.plane == plane)
 		intel_disable_fbc(dev);
 
+	intel_disable_idleness_drrs(intel_crtc);
 	hsw_disable_ips(intel_crtc);
 
 	intel_crtc_dpms_overlay(intel_crtc, false);
@@ -5050,6 +5053,7 @@
 
 	mutex_lock(&dev->struct_mutex);
 	intel_update_fbc(dev);
+	intel_restart_idleness_drrs(intel_crtc);
 	intel_edp_psr_update(dev, false);
 	mutex_unlock(&dev->struct_mutex);
 }
@@ -5105,6 +5109,7 @@
 
 	mutex_lock(&dev->struct_mutex);
 	intel_update_fbc(dev);
+	intel_restart_idleness_drrs(intel_crtc);
 	intel_edp_psr_update(dev, false);
 	mutex_unlock(&dev->struct_mutex);
 }
@@ -5922,6 +5927,7 @@
 
 	mutex_lock(&dev->struct_mutex);
 	intel_update_fbc(dev);
+	intel_restart_idleness_drrs(intel_crtc);
 	if (IS_VALLEYVIEW(dev))
 		intel_vlv_edp_psr_reset(dev);
 	else
@@ -10201,6 +10207,11 @@
 	if (IS_VALLEYVIEW(dev))
 		intel_vlv_edp_psr_update(dev);
 
+	/*
+	 * disable current DRRS work scheduled and restart
+	 * to push work by another x seconds
+	 */
+	intel_restart_idleness_drrs(to_intel_crtc(work->crtc));
 	intel_update_fbc(dev);
 	mutex_unlock(&dev->struct_mutex);
 
@@ -10919,6 +10930,7 @@
 		goto cleanup_unpin;
 
 	intel_disable_fbc(dev);
+	intel_disable_idleness_drrs(intel_crtc);
 	intel_mark_fb_busy(obj, NULL);
 	mutex_unlock(&dev->struct_mutex);
 
@@ -14338,6 +14350,8 @@
 		if (!crtc->active)
 			continue;
 
+		intel_disable_idleness_drrs(crtc);
+
 		/*
 		 * Note that reserving the BIOS fb up front prevents us
 		 * from stuffing other stolen allocations like the ring
@@ -14843,6 +14857,7 @@
 	}
 
 	intel_disable_fbc(dev);
+	intel_disable_idleness_drrs(to_intel_crtc(crtc));
 
 	intel_disable_gt_powersave(dev);
 
Index: b/drivers/gpu/drm/i915/intel_sprite.c
===================================================================
--- a/drivers/gpu/drm/i915/intel_sprite.c	2016-03-08 15:14:48.684598772 -0800
+++ b/drivers/gpu/drm/i915/intel_sprite.c	2016-03-08 15:15:53.045255985 -0800
@@ -509,6 +509,11 @@
 
 	sprctl |= SP_ENABLE;
 
+	/* disable current DRRS work scheduled and restart
+	 * to push work by another x seconds
+	 */
+	intel_restart_idleness_drrs(intel_crtc);
+
 	if (!intel_crtc->atomic_update) {
 		intel_update_sprite_watermarks(dplane, crtc, src_w, pixel_size,
 				true, src_w != crtc_w || src_h != crtc_h);
@@ -1301,6 +1306,7 @@
 
 	mutex_lock(&dev->struct_mutex);
 	intel_update_fbc(dev);
+	intel_restart_idleness_drrs(intel_crtc);
 	mutex_unlock(&dev->struct_mutex);
 }
 
