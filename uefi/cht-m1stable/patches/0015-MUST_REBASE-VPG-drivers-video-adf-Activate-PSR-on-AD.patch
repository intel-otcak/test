From fb2b8231c71425f47540c325b9b0159e7f2cc97c Mon Sep 17 00:00:00 2001
Message-Id: <fb2b8231c71425f47540c325b9b0159e7f2cc97c.1424394676.git.feitong.yi@intel.com>
In-Reply-To: <00f4430a265007e8e2c016cc7926bf530835ea30.1424394676.git.feitong.yi@intel.com>
References: <00f4430a265007e8e2c016cc7926bf530835ea30.1424394676.git.feitong.yi@intel.com>
From: Durgadoss R <durgadoss.r@intel.com>
Date: Mon, 2 Feb 2015 19:30:48 +0530
Subject: [PATCH 15/61] MUST_REBASE [VPG]: drivers/video/adf: Activate PSR on
 ADF

This patch adds methods to control PSR:
* init_psr:    Called during pipe_init, once during boot
* disable_psr: Called during vlv_pipeline_off()
* exit_psr:    Called in the pre_post() before flip()
* update_psr:  Called whenever PSR can be enabled. Only
               when all the 'required conditions' are met,
               PSR is activated.
* conditions:  Single pipe with only primary plane enabled

MUST_REBASE: Since Google ADF framework is not in upstream and also
we cannot have two display drivers, other one being i915, we need to
work on i915 and ADF convergence path before it can be upstreamed.

Issue: GMINL-5357
Change-Id: I32cec12971fdd63888f0cc43214f5ee2739d5563
Signed-off-by: Durgadoss R <durgadoss.r@intel.com>
---
 .../video/adf/intel/core/common/dp/gen_dp_pipe.c   |    9 +++++++++
 drivers/video/adf/intel/core/vlv/vlv_pipeline.c    |    4 ++++
 2 files changed, 13 insertions(+)

diff --git a/drivers/video/adf/intel/core/common/dp/gen_dp_pipe.c b/drivers/video/adf/intel/core/common/dp/gen_dp_pipe.c
index d557c21..ad5a983 100644
--- a/drivers/video/adf/intel/core/common/dp/gen_dp_pipe.c
+++ b/drivers/video/adf/intel/core/common/dp/gen_dp_pipe.c
@@ -414,6 +414,9 @@ static void dp_pipe_on_post(struct intel_pipe *pipe)
 	struct intel_dc_config *intel_config = &vlv_pipeline->config->base;
 
 	vlv_pm_on_post(intel_config, pipe);
+
+	/* Re-enable PSR, if possible */
+	vlv_edp_psr_update(pipeline);
 }
 
 static void dp_pipe_pre_validate(struct intel_pipe *pipe,
@@ -434,6 +437,9 @@ static void dp_pipe_pre_post(struct intel_pipe *pipe)
 	struct vlv_pipeline *vlv_pipeline = to_vlv_pipeline(pipeline);
 	struct intel_dc_config *intel_config = &vlv_pipeline->config->base;
 
+	/* Exit eDP PSR */
+	vlv_edp_psr_exit(pipeline, false);
+
 	vlv_pm_pre_post(intel_config, pipeline, pipe);
 }
 
@@ -538,6 +544,9 @@ u32 dp_pipe_init(struct dp_pipe *dp_pipe, struct device *dev,
 		err = intel_pipe_init(intel_pipe, dev, idx, true,
 			INTEL_PIPE_EDP, primary_plane, &edp_base_ops,
 			"edp_pipe");
+
+		/* Initialize PSR for eDP */
+		vlv_edp_psr_init(pipeline);
 	}
 
 	pr_debug("%s: exit :%x\n", __func__, (unsigned int)err);
diff --git a/drivers/video/adf/intel/core/vlv/vlv_pipeline.c b/drivers/video/adf/intel/core/vlv/vlv_pipeline.c
index 7b00afa..866966e 100644
--- a/drivers/video/adf/intel/core/vlv/vlv_pipeline.c
+++ b/drivers/video/adf/intel/core/vlv/vlv_pipeline.c
@@ -618,6 +618,10 @@ u32 chv_pipeline_off(struct intel_pipeline *pipeline)
 	/* Disable DPST */
 	/* FIXME: vlv_dpst_pipeline_off(); */
 
+	/* Disable PSR */
+	if (disp->type == INTEL_PIPE_EDP)
+		vlv_edp_psr_disable(pipeline);
+
 	for (i = 0; i < 2; i++) {
 		splane = &disp->splane[0];
 		splane->base.ops->disable(&splane->base);
-- 
1.7.9.5

