From 891edfd10c6a322601d4cbebb361e032e261bb14 Mon Sep 17 00:00:00 2001
From: JS Park <aitdark.park@samsung.com>
Date: Wed, 12 Feb 2014 13:29:28 +0000
Subject: [PATCH 115/351] ASoC: wm_adsp: Fix memory leak in wm_adsp_setup_algs

Change-Id: Id916046c9c9a56f04bb7f9c248a9e3f74b95ad9a
Signed-off-by: JS Park <aitdark.park@samsung.com>
Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Signed-off-by: Nikesh Oswal <Nikesh.Oswal@wolfsonmicro.com>
---
 sound/soc/codecs/wm_adsp.c |   30 ++++++++++++++++++++----------
 1 file changed, 20 insertions(+), 10 deletions(-)

diff --git a/sound/soc/codecs/wm_adsp.c b/sound/soc/codecs/wm_adsp.c
index ebec890..1cac9fa 100644
--- a/sound/soc/codecs/wm_adsp.c
+++ b/sound/soc/codecs/wm_adsp.c
@@ -1460,8 +1460,10 @@ static int wm_adsp_setup_algs(struct wm_adsp *dsp)
 				}
 			} else {
 				region = kzalloc(sizeof(*region), GFP_KERNEL);
-				if (!region)
-					return -ENOMEM;
+				if (!region) {
+					ret = -ENOMEM;
+					goto out;
+				}
 				region->type = WMFW_ADSP1_DM;
 				region->alg = be32_to_cpu(adsp1_alg[i].alg.id);
 				region->base = be32_to_cpu(adsp1_alg[i].dm);
@@ -1478,8 +1480,10 @@ static int wm_adsp_setup_algs(struct wm_adsp *dsp)
 				}
 
 				region = kzalloc(sizeof(*region), GFP_KERNEL);
-				if (!region)
-					return -ENOMEM;
+				if (!region) {
+					ret = -ENOMEM;
+					goto out;
+				}
 				region->type = WMFW_ADSP1_ZM;
 				region->alg = be32_to_cpu(adsp1_alg[i].alg.id);
 				region->base = be32_to_cpu(adsp1_alg[i].zm);
@@ -1516,8 +1520,10 @@ static int wm_adsp_setup_algs(struct wm_adsp *dsp)
 				}
 			} else {
 				region = kzalloc(sizeof(*region), GFP_KERNEL);
-				if (!region)
-					return -ENOMEM;
+				if (!region) {
+					ret = -ENOMEM;
+					goto out;
+				}
 				region->type = WMFW_ADSP2_XM;
 				region->alg = be32_to_cpu(adsp2_alg[i].alg.id);
 				region->base = be32_to_cpu(adsp2_alg[i].xm);
@@ -1534,8 +1540,10 @@ static int wm_adsp_setup_algs(struct wm_adsp *dsp)
 				}
 
 				region = kzalloc(sizeof(*region), GFP_KERNEL);
-				if (!region)
-					return -ENOMEM;
+				if (!region) {
+					ret = -ENOMEM;
+					goto out;
+				}
 				region->type = WMFW_ADSP2_YM;
 				region->alg = be32_to_cpu(adsp2_alg[i].alg.id);
 				region->base = be32_to_cpu(adsp2_alg[i].ym);
@@ -1552,8 +1560,10 @@ static int wm_adsp_setup_algs(struct wm_adsp *dsp)
 				}
 
 				region = kzalloc(sizeof(*region), GFP_KERNEL);
-				if (!region)
-					return -ENOMEM;
+				if (!region) {
+					ret = -ENOMEM;
+					goto out;
+				}
 				region->type = WMFW_ADSP2_ZM;
 				region->alg = be32_to_cpu(adsp2_alg[i].alg.id);
 				region->base = be32_to_cpu(adsp2_alg[i].zm);
-- 
1.7.9.5

