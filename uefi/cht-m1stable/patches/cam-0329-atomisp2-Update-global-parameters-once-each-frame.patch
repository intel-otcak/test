From e476108568500c0b7ea7fa1a8b8c91980f566cb0 Mon Sep 17 00:00:00 2001
From: Tianshu Qiu <tian.shu.qiu@intel.com>
Date: Fri, 13 Mar 2015 14:45:46 +0800
Subject: [PATCH 330/338] atomisp2: Update global parameters once each frame

This patch removes the immediate update for global
parameters and trigger global parameter update once
for each frame. This will reduce the frequency of
parameter updating and avoid CSS parameter queue
overflow.

Change-Id: I3208e90afd32ac37c13ac9acfff67e2c471573ab
Signed-off-by: Tianshu Qiu <tian.shu.qiu@intel.com>
Fixes-Issue: #H1503936301
Reviewed-on: https://icggerrit.ir.intel.com/46220
Approver: Bin B Han <bin.b.han@intel.com>
Reviewed-by: Bin B Han <bin.b.han@intel.com>
Approver: Jing Tao <jing.tao@intel.com>
Build: IMIN-legacy (SC)
Validation-Android: Wei Tao <wei.tao@intel.com>
Integrator: Wei Tao <wei.tao@intel.com>
Build: Wei Tao <wei.tao@intel.com>
Reviewed-by: Wei Tao <wei.tao@intel.com>
Maintainer: Wei Tao <wei.tao@intel.com>
---
 .../media/pci/atomisp2/atomisp_driver/atomisp_cmd.c | 21 +++++++--------------
 .../pci/atomisp2/atomisp_driver/atomisp_ioctl.c     | 11 ++++-------
 2 files changed, 11 insertions(+), 21 deletions(-)

diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c
index 29a8f29..4600240 100755
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c
@@ -1701,6 +1701,11 @@ irqreturn_t atomisp_isr_thread(int irq, void *isp_ptr)
 			continue;
 		if (frame_done_found[asd->index] &&
 		    asd->params.css_update_params_needed) {
+			atomisp_apply_css_parameters(asd,
+				&asd->params.css_param);
+			if (asd->params.css_param.update_flag.dz_config)
+				atomisp_css_set_dz_config(asd,
+					&asd->params.css_param.dz_config);
 			atomisp_css_update_isp_params(asd);
 			asd->params.css_update_params_needed = false;
 			frame_done_found[asd->index] = false;
@@ -3699,15 +3704,8 @@ int atomisp_set_parameters(struct video_device *vdev,
 		goto apply_parameter_failed;
 
 	if (!(arg->per_frame_setting && !atomisp_is_vf_pipe(pipe))) {
-		atomisp_apply_css_parameters(asd, css_param);
 		/* indicate to CSS that we have parameters to be updated */
 		asd->params.css_update_params_needed = true;
-
-		if (asd->stream_env[ATOMISP_INPUT_STREAM_GENERAL].stream &&
-		    asd->streaming == ATOMISP_DEVICE_STREAMING_ENABLED) {
-			atomisp_css_update_isp_params(asd);
-			asd->params.css_update_params_needed = false;
-		}
 	} else {
 		list_add_tail(&param->list, &pipe->per_frame_params);
 		atomisp_handle_parameter_and_buffer(pipe);
@@ -4225,13 +4223,8 @@ int atomisp_digital_zoom(struct atomisp_sub_device *asd, int flag,
 		zoom = max_zoom - min_t(u32, max_zoom - 1, *value);
 		atomisp_css_set_zoom_factor(asd, zoom);
 
-		if (asd->stream_env[ATOMISP_INPUT_STREAM_GENERAL].stream &&
-		    asd->streaming == ATOMISP_DEVICE_STREAMING_ENABLED) {
-			dev_dbg(isp->dev, "%s, zoom: %d\n", __func__, zoom);
-			atomisp_css_update_isp_params(asd);
-		} else {
-			asd->params.css_update_params_needed = true;
-		}
+		dev_dbg(isp->dev, "%s, zoom: %d\n", __func__, zoom);
+		asd->params.css_update_params_needed = true;
 	}
 
 	return 0;
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_ioctl.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_ioctl.c
index 5fc9939..0291fd9 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_ioctl.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_ioctl.c
@@ -2753,18 +2753,15 @@ static long atomisp_vidioc_default(struct file *file, void *fh,
 		break;
 	case ATOMISP_IOC_S_DIS_COEFS:
 		err = atomisp_set_dis_coefs(asd, arg);
-		if (!err && arg) {
-			atomisp_css_update_isp_params(asd);
-			asd->params.css_update_params_needed = false;
-		}
 		break;
 
 	case ATOMISP_IOC_S_DIS_VECTOR:
 		err = atomisp_cp_dvs_6axis_config(asd, arg, &asd->params.css_param);
 		if (!err && arg) {
-			atomisp_css_set_dvs_6axis(asd, asd->params.css_param.dvs_6axis);
-			atomisp_css_update_isp_params(asd);
-			asd->params.css_update_params_needed = false;
+			asd->params.css_param.update_flag.dvs_6axis_config =
+				(struct atomisp_dvs_6axis_config *)
+				asd->params.css_param.dvs_6axis;
+			asd->params.css_update_params_needed = true;
 		}
 		break;
 
-- 
1.9.1

