From a88de2776c9e68458e7eadc1eedc6c8f6961c4f8 Mon Sep 17 00:00:00 2001
Message-Id: <a88de2776c9e68458e7eadc1eedc6c8f6961c4f8.1413837857.git.chang-joon.lee@intel.com>
In-Reply-To: <006497b7323eca32c2f489a1a9f662743c0d16d2.1413837855.git.chang-joon.lee@intel.com>
References: <006497b7323eca32c2f489a1a9f662743c0d16d2.1413837855.git.chang-joon.lee@intel.com>
From: Vidya Srinivas <vidya.srinivas@intel.com>
Date: Sat, 5 Jul 2014 00:44:15 +0530
Subject: [PATCH 087/312] FOR_UPSTREAM [VPG]: drm/i915: Program the PFI
 credits

The following changes have been ported:
	drm/i915: Program the PFI credits
	(OriginalChangeID - I8e76736a9f8081c0cc53914b621cf0d2bd674d67)
	Description: Program the PFI credits based on cd and cz clk.

Issue: GMIN-1461
Change-Id: Icb02162dcda4d3547fca649a3ae478ba8a14bcdf
Signed-off-by: Gajanan Bhat <gajanan.bhat@intel.com>
Signed-off-by: Vidya Srinivas <vidya.srinivas@intel.com>
---
 drivers/gpu/drm/i915/i915_dma.c      |    1 +
 drivers/gpu/drm/i915/i915_drv.h      |    3 ++
 drivers/gpu/drm/i915/i915_reg.h      |    1 +
 drivers/gpu/drm/i915/intel_display.c |    7 +++++
 drivers/gpu/drm/i915/intel_drv.h     |    2 ++
 drivers/gpu/drm/i915/intel_i2c.c     |   53 ++++++++++++++++++++++++++++++++++
 drivers/gpu/drm/i915/intel_pm.c      |   19 ++++++++++++
 7 files changed, 86 insertions(+)

diff --git a/drivers/gpu/drm/i915/i915_dma.c b/drivers/gpu/drm/i915/i915_dma.c
index 2b480f3..b6d263d 100644
--- a/drivers/gpu/drm/i915/i915_dma.c
+++ b/drivers/gpu/drm/i915/i915_dma.c
@@ -1765,6 +1765,7 @@ int i915_driver_load(struct drm_device *dev, unsigned long flags)
 	}
 
 	i915_setup_sysfs(dev);
+	dev_priv->is_first_modeset = true;
 
 	if (INTEL_INFO(dev)->num_pipes) {
 		/* Must be done after probing outputs */
diff --git a/drivers/gpu/drm/i915/i915_drv.h b/drivers/gpu/drm/i915/i915_drv.h
index df4a6e3..03f9d21 100644
--- a/drivers/gpu/drm/i915/i915_drv.h
+++ b/drivers/gpu/drm/i915/i915_drv.h
@@ -1495,6 +1495,8 @@ struct drm_i915_private {
 		struct intel_connector *connector;
 	} dpst;
 
+	bool is_first_modeset;
+
 	/* PCH chipset type */
 	enum intel_pch pch_type;
 	unsigned short pch_id;
@@ -2128,6 +2130,7 @@ extern struct i915_params i915 __read_mostly;
 
 				/* i915_dma.c */
 void i915_update_dri1_breadcrumb(struct drm_device *dev);
+extern void program_pfi_credits(struct drm_i915_private *dev_priv, bool flag);
 extern void i915_kernel_lost_context(struct drm_device * dev);
 extern int i915_driver_load(struct drm_device *, unsigned long flags);
 extern int i915_driver_unload(struct drm_device *);
diff --git a/drivers/gpu/drm/i915/i915_reg.h b/drivers/gpu/drm/i915/i915_reg.h
index 1026826..34441c0 100644
--- a/drivers/gpu/drm/i915/i915_reg.h
+++ b/drivers/gpu/drm/i915/i915_reg.h
@@ -419,6 +419,7 @@
 #define COLOR_BLT     ((0x2<<29)|(0x40<<22))
 #define SRC_COPY_BLT  ((0x2<<29)|(0x43<<22))
 
+#define GCI_CONTROL	(dev_priv->info.display_mmio_offset + 0x650C)
 /*
  * Registers used only by the command parser
  */
diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index b1e42c2..26646b1 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -11302,6 +11302,13 @@ static int __intel_set_mode(struct drm_crtc *crtc,
 			dev_priv->display.crtc_disable(&intel_crtc->base);
 	}
 
+	/* DO it only once */
+	if (IS_VALLEYVIEW(dev))
+		if (dev_priv->is_first_modeset) {
+			program_pfi_credits(dev_priv, true);
+			dev_priv->is_first_modeset = false;
+		}
+
 	/* crtc->mode is already used by the ->mode_set callbacks, hence we need
 	 * to set it here already despite that we pass it down the callchain.
 	 */
diff --git a/drivers/gpu/drm/i915/intel_drv.h b/drivers/gpu/drm/i915/intel_drv.h
index 58b97ca..d99b160 100644
--- a/drivers/gpu/drm/i915/intel_drv.h
+++ b/drivers/gpu/drm/i915/intel_drv.h
@@ -984,6 +984,8 @@ void intel_panel_disable_backlight(struct intel_connector *connector);
 void intel_panel_destroy_backlight(struct drm_connector *connector);
 void intel_panel_init_backlight_funcs(struct drm_device *dev);
 enum drm_connector_status intel_panel_detect(struct drm_device *dev);
+extern void intel_get_cd_cz_clk(struct drm_i915_private *dev_priv, int *cd_clk,
+				int *cz_clk);
 extern struct drm_display_mode *intel_find_panel_downclock(
 				struct drm_device *dev,
 				struct drm_display_mode *fixed_mode,
diff --git a/drivers/gpu/drm/i915/intel_i2c.c b/drivers/gpu/drm/i915/intel_i2c.c
index 8c3dba4..7ceafdf 100644
--- a/drivers/gpu/drm/i915/intel_i2c.c
+++ b/drivers/gpu/drm/i915/intel_i2c.c
@@ -634,6 +634,59 @@ err:
 	return ret;
 }
 
+void intel_get_cd_cz_clk(struct drm_i915_private *dev_priv, int *cd_clk,
+				int *cz_clk)
+{
+	u32 cck_fuse, clk_index, cd_clk_index, cz_clk_index;
+
+	u16  m_cd_clk_vco_800_tbl[] = {0, 800, 533, 400, 320, 267, 0, 200, 178,
+				160, 0, 133, 0, 0, 107, 100, 0, 89, 0,
+				80, 0, 0, 0, 67, 0, 0, 0, 0, 0, 53, 0, 50};
+	u16  m_cd_clk_vco_1600_tbl[] = {0, 1600, 1067, 800, 640, 533, 0, 400,
+				356, 320, 0, 267, 0, 0, 213, 200, 0, 178, 0,
+				160, 0, 0, 0, 133, 0, 0, 0, 0, 0, 107, 0, 100};
+	u16  m_cd_clk_vco_2000_tbl[] = {0, 2000, 1333, 1000, 800, 667, 0, 500,
+				444, 400, 0, 333, 0, 0, 267, 250, 0,  222, 0,
+				200, 0, 0, 0, 167, 0, 0, 0, 0, 0, 133, 0, 125};
+
+	/* print cdclock speed */
+	cck_fuse = vlv_cck_read(dev_priv, 0x08);
+	cck_fuse = cck_fuse & 0x03;
+
+	clk_index = I915_READ(CZCLK_CDCLK_FREQ_RATIO);
+
+	/* Get the CD Clock Index */
+	cd_clk_index = (clk_index & 0x1F0) >> 4;
+	/* Get the CZ Clock Index */
+	cz_clk_index = (clk_index & 0xF);
+
+	switch (cck_fuse) {
+	case 0:
+		*cd_clk = m_cd_clk_vco_800_tbl[cd_clk_index];
+		*cz_clk = m_cd_clk_vco_800_tbl[cz_clk_index];
+		break;
+	case 1:
+		*cd_clk = m_cd_clk_vco_1600_tbl[cd_clk_index];
+		*cz_clk = m_cd_clk_vco_1600_tbl[cz_clk_index];
+		break;
+	case 2:
+		*cd_clk = m_cd_clk_vco_2000_tbl[cd_clk_index];
+		*cz_clk = m_cd_clk_vco_2000_tbl[cz_clk_index];
+		break;
+	default:
+		break;
+	}
+}
+
+void intel_set_gmbus_frequency(struct drm_i915_private *dev_priv)
+{
+	int cd_clk, cz_clk;
+
+	intel_get_cd_cz_clk(dev_priv, &cd_clk, &cz_clk);
+
+	I915_WRITE(GMBUSFREQ_VLV, cd_clk);
+}
+
 struct i2c_adapter *intel_gmbus_get_adapter(struct drm_i915_private *dev_priv,
 					    unsigned port)
 {
diff --git a/drivers/gpu/drm/i915/intel_pm.c b/drivers/gpu/drm/i915/intel_pm.c
index a8509ff..fb355e8 100644
--- a/drivers/gpu/drm/i915/intel_pm.c
+++ b/drivers/gpu/drm/i915/intel_pm.c
@@ -6928,6 +6928,25 @@ int vlv_freq_opcode(struct drm_i915_private *dev_priv, int val)
 	return DIV_ROUND_CLOSEST(4 * mul * val, dev_priv->mem_freq) + 0xbd - 6;
 }
 
+void program_pfi_credits(struct drm_i915_private *dev_priv, bool flag)
+{
+	int cd_clk, cz_clk;
+
+	if (!flag) {
+		I915_WRITE(GCI_CONTROL, 0x00004000);
+		return;
+	}
+
+	intel_get_cd_cz_clk(dev_priv, &cd_clk, &cz_clk);
+
+	if (cd_clk >= cz_clk) {
+		/* Disable before enabling */
+		I915_WRITE(GCI_CONTROL, 0x00004000);
+		I915_WRITE(GCI_CONTROL, 0x78004000);
+	} else
+		DRM_ERROR("cd clk < cz clk");
+}
+
 void intel_pm_setup(struct drm_device *dev)
 {
 	struct drm_i915_private *dev_priv = dev->dev_private;
-- 
1.7.9.5

