From 6f38d982e7d97717c1ca077e7a6bd7e46baafff8 Mon Sep 17 00:00:00 2001
Message-Id: <6f38d982e7d97717c1ca077e7a6bd7e46baafff8.1423872525.git.feitong.yi@intel.com>
In-Reply-To: <3062c7e6b919c393846ff0e13558e7f648b352ca.1423872525.git.feitong.yi@intel.com>
References: <3062c7e6b919c393846ff0e13558e7f648b352ca.1423872525.git.feitong.yi@intel.com>
From: Gaurav K Singh <gaurav.k.singh@intel.com>
Date: Sat, 31 Jan 2015 03:34:00 +0530
Subject: [PATCH 61/95] MUST_REBASE [VPG]: drivers/video/adf: Fix MIPI DSI
 disable sequence

This patch has the following fixes:
1. Disable MIPI Port after plane and pipe.
2. Send SHUTDOWN after disabling the pipe, else it can cause
   split screen.

MUST_REBASE: Since Google ADF framework is not in upstream and also
we cannot have two display drivers, other one being i915, we need to
work on i915 and ADF convergence path before it can be upstreamed.

Issue: GMINL-5348
Change-Id: I0b9a79ce87508f0f9d23396814289f33380993d9
Signed-off-by: Gaurav K Singh <gaurav.k.singh@intel.com>
---
 .../video/adf/intel/core/common/dsi/gen_dsi_pipe.c |    9 --
 drivers/video/adf/intel/core/vlv/Makefile          |    2 +-
 drivers/video/adf/intel/core/vlv/vlv_pipeline.c    |  108 ++++++++++++--------
 3 files changed, 64 insertions(+), 55 deletions(-)

diff --git a/drivers/video/adf/intel/core/common/dsi/gen_dsi_pipe.c b/drivers/video/adf/intel/core/common/dsi/gen_dsi_pipe.c
index c4dd5a0..6e29112 100644
--- a/drivers/video/adf/intel/core/common/dsi/gen_dsi_pipe.c
+++ b/drivers/video/adf/intel/core/common/dsi/gen_dsi_pipe.c
@@ -266,7 +266,6 @@ static int dsi_display_off(struct intel_pipe *pipe)
 		pr_err("%s: DSI device already disabled\n", __func__);
 		goto out;
 	}
-
 	intel_disable_backlight(&dsi_pipe->base);
 
 	if (intel_dsi->backlight_off_delay >= 20)
@@ -275,14 +274,6 @@ static int dsi_display_off(struct intel_pipe *pipe)
 		usleep_range(intel_dsi->backlight_off_delay * 1000,
 				(intel_dsi->backlight_off_delay * 1000) + 500);
 
-
-	if (vlv_is_vid_mode(pipeline)) {
-		/* Send Shutdown command to the panel in LP mode */
-		adf_dpi_send_cmd(dsi_pipe, SHUTDOWN, DPI_LP_MODE_EN);
-		usleep_range(10000, 10500);
-		pr_err("ADF: %s: Sent DPI_SHUTDOWN\n", __func__);
-	}
-
 	/* disable vsyncs */
 	pipe->ops->set_event(pipe, INTEL_PIPE_EVENT_VSYNC, false);
 
diff --git a/drivers/video/adf/intel/core/vlv/Makefile b/drivers/video/adf/intel/core/vlv/Makefile
index 5c2eb15..acdd5fe 100644
--- a/drivers/video/adf/intel/core/vlv/Makefile
+++ b/drivers/video/adf/intel/core/vlv/Makefile
@@ -1,6 +1,6 @@
 # Makefile for intel vlv display driver
 
-ccflags-y := -Iarch/ia64/ -Idrivers/staging/ -Iinclude/adf -Iinclude/uapi/adf -Idrivers/video/adf/intel/include -Werror
+ccflags-y := -Iarch/ia64/ -Idrivers/staging/ -Iinclude/adf -Iinclude/uapi/adf -Idrivers/video/adf/intel/include -Idrivers/video/adf/intel/core/common/dsi -Werror
 
 obj-y := vlv_dc_config.o \
 	vlv_pri_plane.o \
diff --git a/drivers/video/adf/intel/core/vlv/vlv_pipeline.c b/drivers/video/adf/intel/core/vlv/vlv_pipeline.c
index c323886..e7f4913 100644
--- a/drivers/video/adf/intel/core/vlv/vlv_pipeline.c
+++ b/drivers/video/adf/intel/core/vlv/vlv_pipeline.c
@@ -27,6 +27,7 @@
 #include <core/vlv/vlv_pm.h>
 #include <core/vlv/vlv_pll.h>
 #include <core/vlv/dpio.h>
+#include <intel_dsi_cmd.h>
 
 #define LINK_TO_DOT_CLK(x) ((x) * 27 * 100)
 
@@ -397,47 +398,6 @@ u32 vlv_dsi_pre_pipeline_on(struct intel_pipeline *pipeline,
 	return err;
 }
 
-u32 vlv_dsi_post_pipeline_off(struct intel_pipeline *pipeline)
-{
-	struct vlv_pipeline *disp = to_vlv_pipeline(pipeline);
-	struct vlv_pll *pll = &disp->pll;
-	struct vlv_dsi_port *dsi_port = NULL;
-	struct dsi_pipe *dsi_pipe = NULL;
-	struct dsi_context *dsi_ctx = NULL;
-	enum port port;
-
-	dsi_pipe = &disp->gen.dsi;
-	dsi_ctx = &dsi_pipe->config.ctx;
-	for_each_dsi_port(port, dsi_ctx->ports) {
-		dsi_port = &disp->port.dsi_port[port];
-		vlv_dsi_port_wait_for_fifo_empty(dsi_port);
-		vlv_dsi_port_clear_device_ready(dsi_port);
-	}
-	vlv_dsi_pll_disable(pll);
-
-	return 0;
-}
-
-/* generic function to be called for any operations after disable is done */
-u32 vlv_post_pipeline_off(struct intel_pipeline *pipeline)
-{
-	struct vlv_pipeline *disp = to_vlv_pipeline(pipeline);
-	u32 err = 0;
-
-	switch (disp->type) {
-	case INTEL_PIPE_DSI:
-		err = vlv_dsi_post_pipeline_off(pipeline);
-		break;
-	case INTEL_PIPE_EDP:
-	case INTEL_PIPE_DP:
-	default:
-		err = -EINVAL;
-		break;
-	}
-
-	return err;
-}
-
 static inline u32 vlv_port_disable(struct intel_pipeline *pipeline)
 {
 	struct vlv_pipeline *disp = to_vlv_pipeline(pipeline);
@@ -482,6 +442,62 @@ static inline u32 vlv_port_disable(struct intel_pipeline *pipeline)
 	return err;
 }
 
+u32 vlv_dsi_post_pipeline_off(struct intel_pipeline *pipeline)
+{
+	struct vlv_pipeline *disp = to_vlv_pipeline(pipeline);
+	struct vlv_pll *pll = &disp->pll;
+	struct vlv_dsi_port *dsi_port = NULL;
+	struct dsi_pipe *dsi_pipe = NULL;
+	struct dsi_context *dsi_ctx = NULL;
+	enum port port;
+	u32 err = 0;
+
+	dsi_pipe = &disp->gen.dsi;
+	dsi_ctx = &dsi_pipe->config.ctx;
+
+	if (vlv_is_vid_mode(pipeline)) {
+		/* Send Shutdown command to the panel in LP mode */
+		adf_dpi_send_cmd(dsi_pipe, SHUTDOWN, DPI_LP_MODE_EN);
+		usleep_range(10000, 10500);
+		pr_err("ADF: %s: Sent DPI_SHUTDOWN\n", __func__);
+	}
+
+	err = vlv_port_disable(pipeline);
+	if (err != 0) {
+		pr_err("ADF: %s: port disable failed\n", __func__);
+		goto out;
+	}
+
+	for_each_dsi_port(port, dsi_ctx->ports) {
+		dsi_port = &disp->port.dsi_port[port];
+		vlv_dsi_port_wait_for_fifo_empty(dsi_port);
+		vlv_dsi_port_clear_device_ready(dsi_port);
+	}
+	vlv_dsi_pll_disable(pll);
+out:
+	return err;
+}
+
+/* generic function to be called for any operations after disable is done */
+u32 vlv_post_pipeline_off(struct intel_pipeline *pipeline)
+{
+	struct vlv_pipeline *disp = to_vlv_pipeline(pipeline);
+	u32 err = 0;
+
+	switch (disp->type) {
+	case INTEL_PIPE_DSI:
+		err = vlv_dsi_post_pipeline_off(pipeline);
+		break;
+	case INTEL_PIPE_EDP:
+	case INTEL_PIPE_DP:
+	default:
+		err = -EINVAL;
+		break;
+	}
+
+	return err;
+}
+
 u32 vlv_pipeline_off(struct intel_pipeline *pipeline)
 {
 	struct vlv_pipeline *disp = to_vlv_pipeline(pipeline);
@@ -516,10 +532,12 @@ u32 vlv_pipeline_off(struct intel_pipeline *pipeline)
 	}
 
 	/* port disable */
-	err = vlv_port_disable(pipeline);
-	if (err != 0) {
-		pr_err("ADF: %s: port disable failed\n", __func__);
-		goto out;
+	if (disp->type != INTEL_PIPE_DSI) {
+		err = vlv_port_disable(pipeline);
+		if (err != 0) {
+			pr_err("ADF: %s: port disable failed\n", __func__);
+			goto out;
+		}
 	}
 
 	err = vlv_pipe_disable(pipe);
-- 
1.7.9.5

