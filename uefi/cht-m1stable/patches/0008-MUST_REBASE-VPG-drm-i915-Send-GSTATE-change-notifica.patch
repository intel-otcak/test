From 5c231e426a79164be1dc9ff1539e373edd825386 Mon Sep 17 00:00:00 2001
Message-Id: <5c231e426a79164be1dc9ff1539e373edd825386.1427265330.git.chang-joon.lee@intel.com>
In-Reply-To: <b4c66aa6a04d2be0fca9fa4448c7188a581a57a5.1427265330.git.chang-joon.lee@intel.com>
References: <b4c66aa6a04d2be0fca9fa4448c7188a581a57a5.1427265330.git.chang-joon.lee@intel.com>
From: Hong Liu <hong.liu@intel.com>
Date: Wed, 11 Mar 2015 10:41:59 +0800
Subject: [PATCH 08/22] MUST_REBASE [VPG]: drm/i915: Send GSTATE change
 notification

This patch adds kernel notification for GSTATE change. This notification
will be sent during suspend/resume cycles.

MUST_REBASE condition: This change is specific to hdcpd process in
android.

Issue: GMINL-7107
Change-Id: I0f0057098536feb27bf5f45fe307a8e73fb98766
Signed-off-by: Ivan Chen <ivan.chen@intel.com>
Signed-off-by: Deepak S <deepak.s@intel.com>
---
 drivers/gpu/drm/i915/i915_drv.c |   11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/drivers/gpu/drm/i915/i915_drv.c b/drivers/gpu/drm/i915/i915_drv.c
index e7de30c..821cb9a 100644
--- a/drivers/gpu/drm/i915/i915_drv.c
+++ b/drivers/gpu/drm/i915/i915_drv.c
@@ -558,6 +558,7 @@ static int i915_drm_freeze(struct drm_device *dev)
 	struct drm_crtc *crtc;
 	int ret;
 	u32 i;
+	char *envp[] = { "GSTATE=3", NULL };
 
 	/* ignore lid events during suspend */
 	mutex_lock(&dev_priv->modeset_restore_lock);
@@ -628,6 +629,8 @@ static int i915_drm_freeze(struct drm_device *dev)
 
 	intel_display_set_init_power(dev_priv, false);
 
+	kobject_uevent_env(&dev->primary->kdev->kobj, KOBJ_CHANGE, envp);
+
 	return 0;
 }
 
@@ -717,6 +720,7 @@ static int __i915_drm_thaw(struct drm_device *dev, bool restore_gtt_mappings)
 {
 	struct drm_i915_private *dev_priv = dev->dev_private;
 	int ret;
+	char *envp[] = { "GSTATE=0", NULL };
 
 	if (IS_VALLEYVIEW(dev) && !IS_CHERRYVIEW(dev)) {
 		intel_uncore_early_sanitize(dev);
@@ -801,6 +805,7 @@ static int __i915_drm_thaw(struct drm_device *dev, bool restore_gtt_mappings)
 	mutex_unlock(&dev_priv->modeset_restore_lock);
 
 	sysfs_notify(&dev->primary->kdev->kobj, NULL, "thaw");
+	kobject_uevent_env(&dev->primary->kdev->kobj, KOBJ_CHANGE, envp);
 
 	return 0;
 }
@@ -1877,6 +1882,7 @@ static int intel_runtime_suspend(struct device *device)
 	struct drm_device *dev = pci_get_drvdata(pdev);
 	struct drm_i915_private *dev_priv = dev->dev_private;
 	int ret, i;
+	char *envp[] = { "GSTATE=3", NULL };
 
 	if (WARN_ON_ONCE(!(dev_priv->rps.enabled && intel_enable_rc6(dev))))
 		return -ENODEV;
@@ -1942,6 +1948,8 @@ static int intel_runtime_suspend(struct device *device)
 	 */
 	intel_opregion_notify_adapter(dev, PCI_D1);
 
+	kobject_uevent_env(&dev->primary->kdev->kobj, KOBJ_CHANGE, envp);
+
 	DRM_DEBUG_KMS("Device suspended\n");
 	return 0;
 }
@@ -1958,6 +1966,7 @@ static int intel_runtime_resume(struct device *device)
 	struct drm_i915_private *dev_priv = dev->dev_private;
 	int ret;
 	u32 gtfifodbg;
+	char *envp[] = { "GSTATE=0", NULL };
 
 	if (WARN_ON_ONCE(!HAS_RUNTIME_PM(dev)))
 		return -ENODEV;
@@ -1994,6 +2003,8 @@ static int intel_runtime_resume(struct device *device)
 	else
 		DRM_DEBUG_KMS("Device resumed\n");
 
+	kobject_uevent_env(&dev->primary->kdev->kobj, KOBJ_CHANGE, envp);
+
 	return ret;
 }
 
-- 
1.7.9.5

