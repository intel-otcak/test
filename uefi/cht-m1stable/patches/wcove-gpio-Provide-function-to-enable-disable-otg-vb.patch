From d8ec46414b3b365e3bd74594a89e0b4a21876986 Mon Sep 17 00:00:00 2001
From: Venkataramana Kotakonda <venkataramana.kotakonda@intel.com>
Date: Fri, 11 Dec 2015 13:15:35 +0530
Subject: [PATCH 2/8] wcove-gpio: Provide function to enable/disable otg vbus
 for DPM.

Device policy manager needs an interface to enable/disable reverse
boost vbus to usb typec during reset and pw_swap. This patch will
provide a fucntion to control the otg vbus.

Change-Id: I7071880097321470715ccffca013e0081e8fec3f
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-12097
Signed-off-by: Venkataramana Kotakonda <venkataramana.kotakonda@intel.com>
Reviewed-on: https://android.intel.com:443/447409
---
 drivers/misc/intel_wcove_gpio.c | 19 +++++++++++++++++++
 1 file changed, 19 insertions(+)

diff --git a/drivers/misc/intel_wcove_gpio.c b/drivers/misc/intel_wcove_gpio.c
index 6b1be4f..0d7e6bd 100644
--- a/drivers/misc/intel_wcove_gpio.c
+++ b/drivers/misc/intel_wcove_gpio.c
@@ -62,6 +62,7 @@ struct wcove_gpio_event {
 	bool is_src_connected;
 };
 
+static struct wcove_gpio_info *wc_info;
 static inline struct power_supply *wcove_gpio_get_psy_charger(void)
 {
 	struct class_dev_iter iter;
@@ -119,6 +120,23 @@ static int wcgpio_update_vbus_state(struct wcove_gpio_info *info, bool state)
 	return ret;
 }
 
+int wcgpio_set_vbus_state(bool state)
+{
+	int ret;
+	if (!wc_info)
+		return -EINVAL;
+	ret = wcgpio_update_vbus_state(wc_info, state);
+
+	/* enable/disable vbus based on the provider(source) event */
+	if (!ret) {
+		dev_info(&wc_info->pdev->dev, "%s: VBUS=%d\n",
+						__func__, state);
+		gpiod_set_value_cansleep(wc_info->gpio_otg, state);
+	}
+	return ret;
+}
+EXPORT_SYMBOL(wcgpio_set_vbus_state);
+
 static void wcgpio_ctrl_worker(struct work_struct *work)
 {
 	struct wcove_gpio_info *info =
@@ -304,6 +322,7 @@ static int wcove_gpio_probe(struct platform_device *pdev)
 
 	/* Enable vconn always to typec chip */
 	gpiod_set_value_cansleep(info->gpio_vconn, 1);
+	wc_info = info;
 
 	return 0;
 
-- 
1.9.1

