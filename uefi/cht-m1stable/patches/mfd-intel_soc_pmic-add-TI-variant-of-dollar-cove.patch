From b4ea120791fa9febaaf4af844f7e1e778b3c3c75 Mon Sep 17 00:00:00 2001
From: Fei Yang <fei.yang@intel.com>
Date: Thu, 5 Jun 2014 16:26:40 +0200
Subject: [PATCH] mfd/intel_soc_pmic: add TI variant of dollar cove

Adds support for the the TI variant of dollar cove

Forklifted from MCG.

Change-Id: Ib964f0f8dca3192bb8b96d77833aac64c84cc490
Signed-off-by: Fei Yang <fei.yang@intel.com>
---
 drivers/mfd/Makefile               |   3 +-
 drivers/mfd/intel_soc_pmic_core.h  |   1 +
 drivers/mfd/intel_soc_pmic_dc_ti.c | 153 +++++++++++++++++++++++++++++++++++++
 drivers/mfd/intel_soc_pmic_i2c.c   |   2 +
 4 files changed, 158 insertions(+), 1 deletion(-)
 create mode 100644 drivers/mfd/intel_soc_pmic_dc_ti.c

diff --git a/drivers/mfd/Makefile b/drivers/mfd/Makefile
index 3be433a..3b129f2 100644
--- a/drivers/mfd/Makefile
+++ b/drivers/mfd/Makefile
@@ -167,5 +167,6 @@ obj-$(CONFIG_MFD_AS3711)	+= as3711.o
 obj-$(CONFIG_MFD_AS3722)	+= as3722.o
 obj-$(CONFIG_MFD_STW481X)	+= stw481x.o
 
-intel-soc-pmic-objs		:= intel_soc_pmic_core.o intel_soc_pmic_crc.o intel_soc_pmic_i2c.o intel_soc_pmic_opregion.o  intel_soc_pmic_dc.o
+intel-soc-pmic-objs		:= intel_soc_pmic_core.o intel_soc_pmic_i2c.o intel_soc_pmic_opregion.o
+intel-soc-pmic-objs 		+= intel_soc_pmic_crc.o intel_soc_pmic_dc.o intel_soc_pmic_dc_ti.o
 obj-$(CONFIG_INTEL_SOC_PMIC)	+= intel-soc-pmic.o
diff --git a/drivers/mfd/intel_soc_pmic_core.h b/drivers/mfd/intel_soc_pmic_core.h
index 6526d21..a98e417 100644
--- a/drivers/mfd/intel_soc_pmic_core.h
+++ b/drivers/mfd/intel_soc_pmic_core.h
@@ -87,5 +87,6 @@ void intel_pmic_install_handlers(struct intel_soc_pmic *);
 
 extern struct intel_soc_pmic crystal_cove_pmic;
 extern struct intel_soc_pmic dollar_cove_pmic;
+extern struct intel_soc_pmic dollar_cove_ti_pmic;
 
 #endif	/* __INTEL_SOC_PMIC_CORE_H__ */
diff --git a/drivers/mfd/intel_soc_pmic_dc_ti.c b/drivers/mfd/intel_soc_pmic_dc_ti.c
new file mode 100644
index 0000000..e1cf63a
--- /dev/null
+++ b/drivers/mfd/intel_soc_pmic_dc_ti.c
@@ -0,0 +1,153 @@
+/*
+ * Dollar Cove  TI --  Device access for Intel PMIC for CR
+ *
+ * Copyright (c) 2014, Intel Corporation.
+ *
+ * Author: Ramakrishna Pallala <ramakrishna.pallala@intel.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; version 2
+ * of the License.
+ */
+
+#include <linux/kernel.h>
+#include <linux/module.h>
+#include <linux/delay.h>
+#include <linux/mfd/core.h>
+#include <linux/err.h>
+#include <linux/i2c.h>
+#include <linux/irq.h>
+#include <linux/interrupt.h>
+#include <linux/mfd/intel_soc_pmic.h>
+#include <linux/acpi.h>
+#include <linux/version.h>
+
+#include "intel_soc_pmic_core.h"
+
+#define IRQLVL1		0x01
+#define MIRQLVL1	0x02
+
+enum {
+	PWRBTN = 0,
+	DIETMPWARN,
+	ADCCMPL,
+	VBATLOW = 4,
+	VBUSDET,
+	CCEOCAL = 7,
+};
+
+static struct resource power_button_resources[] = {
+	{
+		.start	= PWRBTN,
+		.end	= PWRBTN,
+		.flags	= IORESOURCE_IRQ,
+	},
+};
+
+static struct resource thermal_resources[] = {
+	{
+		.start = DIETMPWARN,
+		.end   = DIETMPWARN,
+		.flags = IORESOURCE_IRQ,
+	},
+};
+
+static struct resource adc_resources[] = {
+	{
+		.start = ADCCMPL,
+		.end   = ADCCMPL,
+		.flags = IORESOURCE_IRQ,
+	},
+};
+
+static struct resource pwrsrc_resources[] = {
+	{
+		.start = VBUSDET,
+		.end   = VBUSDET,
+		.flags = IORESOURCE_IRQ,
+	},
+};
+
+static struct resource battery_resources[] = {
+	{
+		.start = VBATLOW,
+		.end   = VBATLOW,
+		.flags = IORESOURCE_IRQ,
+	},
+	{
+		.start = CCEOCAL,
+		.end   = CCEOCAL,
+		.flags = IORESOURCE_IRQ,
+	},
+};
+
+static struct mfd_cell dollar_cove_ti_dev[] = {
+	{
+		.name = "dollar_cove_ti_adc",
+		.id = 0,
+		.num_resources = ARRAY_SIZE(adc_resources),
+		.resources = adc_resources,
+	},
+	{
+		.name = "dollar_cove_ti_power_button",
+		.id = 0,
+		.num_resources = ARRAY_SIZE(power_button_resources),
+		.resources = power_button_resources,
+	},
+	{
+		.name = "dollar_cove_ti_pwrsrc",
+		.id = 0,
+		.num_resources = ARRAY_SIZE(pwrsrc_resources),
+		.resources = pwrsrc_resources,
+	},
+	{
+		.name = "dollar_cove_ti_cc",
+		.id = 0,
+		.num_resources = ARRAY_SIZE(battery_resources),
+		.resources = battery_resources,
+	},
+	{
+		.name = "intel_fuel_gauge",
+		.id = 0,
+	},
+	{
+		.name = "intel_fg_iface",
+		.id = 0,
+	},
+	{NULL, },
+};
+
+#define DOLLAR_COVE_IRQREGMAP(irq) \
+	[irq] = { \
+		{MIRQLVL1, irq, 1, 0}, \
+		{IRQLVL1, irq, 1, INTEL_PMIC_REG_W1C}, \
+		{IRQLVL1, irq, 1, INTEL_PMIC_REG_W1C}, \
+	}
+
+struct intel_pmic_irqregmap dollar_cove_ti_irqregmap[] = {
+	DOLLAR_COVE_IRQREGMAP(PWRBTN),
+	DOLLAR_COVE_IRQREGMAP(DIETMPWARN),
+	DOLLAR_COVE_IRQREGMAP(ADCCMPL),
+	DOLLAR_COVE_IRQREGMAP(VBATLOW),
+	DOLLAR_COVE_IRQREGMAP(VBUSDET),
+	DOLLAR_COVE_IRQREGMAP(CCEOCAL),
+};
+
+static int dollar_cove_ti_init(void)
+{
+	pr_info("Dollar Cove(TI: IC_TYPE 0x%02X\n", intel_soc_pmic_readb(0x00));
+	return 0;
+}
+
+struct intel_soc_pmic dollar_cove_ti_pmic = {
+	.label		= "dollar cove_ti",
+	.irq_flags	= IRQF_TRIGGER_RISING | IRQF_ONESHOT,
+	.init		= dollar_cove_ti_init,
+	.cell_dev	= dollar_cove_ti_dev,
+	.irq_regmap	= dollar_cove_ti_irqregmap,
+	.irq_num	= 8,
+};
+
+MODULE_LICENSE("GPL");
+MODULE_AUTHOR("Ramakrishna Pallala <ramakrishna.pallala@intel.com");
diff --git a/drivers/mfd/intel_soc_pmic_i2c.c b/drivers/mfd/intel_soc_pmic_i2c.c
index a0aa086..d334e39 100644
--- a/drivers/mfd/intel_soc_pmic_i2c.c
+++ b/drivers/mfd/intel_soc_pmic_i2c.c
@@ -113,6 +113,8 @@ static const struct i2c_device_id pmic_i2c_id[] = {
 	{ "dollar_cove", (kernel_ulong_t)&dollar_cove_pmic},
 	{ "INT33F4", (kernel_ulong_t)&dollar_cove_pmic},
 	{ "INT33F4:00", (kernel_ulong_t)&dollar_cove_pmic},
+	{ "INT33F5", (kernel_ulong_t)&dollar_cove_ti_pmic},
+	{ "INT33F5:00", (kernel_ulong_t)&dollar_cove_ti_pmic},
 	{ "INT33FD", (kernel_ulong_t)&crystal_cove_pmic},
 	{ "INT33FD:00", (kernel_ulong_t)&crystal_cove_pmic},
 	{ }
-- 
2.0.4

