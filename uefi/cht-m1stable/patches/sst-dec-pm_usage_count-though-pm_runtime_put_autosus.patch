From 36a9ab475f3e0ef030745e53019aaa044204fa63 Mon Sep 17 00:00:00 2001
From: Zhang Yanmin <yanmin.zhang@intel.com>
Date: Mon, 25 Jan 2016 10:46:52 +0800
Subject: [PATCH 2/6] sst: dec pm_usage_count though pm_runtime_put_autosuspend
 return errors

sst runtime pm can protect sst device. If pm_runtime_put_autosuspend
returns errors, such like -EAGAIN, -EINPROGRESS, or -EBUSY,
pm_usage_count is not decreased and it loses balance. later on, even
runtime pm of sst is called again, the unbalanced pm_usage_count would
block s3 forever.

The patch fixes it by always decreasing pm_usage_count.

Change-Id: Ia363dc917d49bdbfbe6f7edc0cf2875a118737d8
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-20643
Signed-off-by: Zhang Yanmin <yanmin.zhang@intel.com>
Reviewed-on: https://android.intel.com:443/469730
---
 sound/soc/intel/sst/sst.h | 6 +-----
 1 file changed, 1 insertion(+), 5 deletions(-)

diff --git a/sound/soc/intel/sst/sst.h b/sound/soc/intel/sst/sst.h
index f1474bb..72b378f 100644
--- a/sound/soc/intel/sst/sst.h
+++ b/sound/soc/intel/sst/sst.h
@@ -732,12 +732,8 @@ void sst_stream_recovery(struct intel_sst_drv *sst);
 
 static inline int sst_pm_runtime_put(struct intel_sst_drv *sst_drv)
 {
-	int ret;
-
 	pm_runtime_mark_last_busy(sst_drv->dev);
-	ret = pm_runtime_put_autosuspend(sst_drv->dev);
-	if (ret < 0)
-		return ret;
+	pm_runtime_put_autosuspend(sst_drv->dev);
 	atomic_dec(&sst_drv->pm_usage_count);
 
 	pr_debug("%s: count is %d now..\n", __func__,
-- 
1.9.1

