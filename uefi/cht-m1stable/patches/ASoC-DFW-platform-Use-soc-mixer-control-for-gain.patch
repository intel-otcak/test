From d8810ff94938fc3bd2c512be1ef252b6489e6246 Mon Sep 17 00:00:00 2001
From: Mythri P K <mythri.p.k@intel.com>
Date: Sat, 17 May 2014 03:06:57 +0530
Subject: [PATCH 24/39] ASoC: DFW: platform: Use soc-mixer control for gain

Issue: GMINL-3680

Instead of using a custom struct use soc-mixer control
and make the custom struct as the pvt data of soc-mixer
control struct.

Change-Id: Id3c54bd31ce4aae79889536bc9e75b646f6c210e
Signed-off-by: Mythri P K <mythri.p.k@intel.com>
---
 sound/soc/intel/platform-libs/controls_v2_dpcm.c | 19 +++++++++++-----
 sound/soc/intel/platform-libs/sst_widgets.h      | 29 ++++++++++++++----------
 2 files changed, 30 insertions(+), 18 deletions(-)

diff --git a/sound/soc/intel/platform-libs/controls_v2_dpcm.c b/sound/soc/intel/platform-libs/controls_v2_dpcm.c
index 85566d9..6b5b638 100644
--- a/sound/soc/intel/platform-libs/controls_v2_dpcm.c
+++ b/sound/soc/intel/platform-libs/controls_v2_dpcm.c
@@ -476,7 +476,8 @@ static int sst_algo_control_set(struct snd_kcontrol *kcontrol,
 static int sst_gain_ctl_info(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_info *uinfo)
 {
-	struct sst_gain_mixer_control *mc = (void *)kcontrol->private_value;
+	struct soc_mixer_control *sm = (void *) kcontrol->private_value;
+	struct sst_gain_mixer_control *mc = (struct sst_gain_mixer_control *)sm->pvt_data;
 
 	uinfo->type = SNDRV_CTL_ELEM_TYPE_INTEGER;
 	uinfo->count = mc->stereo ? 2 : 1;
@@ -529,7 +530,8 @@ static void sst_send_gain_cmd(struct sst_data *sst, struct sst_gain_value *gv,
 static int sst_gain_get(struct snd_kcontrol *kcontrol,
 			struct snd_ctl_elem_value *ucontrol)
 {
-	struct sst_gain_mixer_control *mc = (void *)kcontrol->private_value;
+	struct soc_mixer_control *sm = (void *) kcontrol->private_value;
+	struct sst_gain_mixer_control *mc = (struct sst_gain_mixer_control *)sm->pvt_data;
 	struct sst_gain_value *gv = mc->gain_val;
 
 	switch (mc->type) {
@@ -555,7 +557,8 @@ static int sst_gain_put(struct snd_kcontrol *kcontrol,
 {
 	struct snd_soc_platform *platform = snd_kcontrol_chip(kcontrol);
 	struct sst_data *sst = snd_soc_platform_get_drvdata(platform);
-	struct sst_gain_mixer_control *mc = (void *)kcontrol->private_value;
+	struct soc_mixer_control *sm = (void *) kcontrol->private_value;
+	struct sst_gain_mixer_control *mc = (struct sst_gain_mixer_control *)sm->pvt_data;
 	struct sst_gain_value *gv = mc->gain_val;
 
 	switch (mc->type) {
@@ -668,6 +671,7 @@ static int fill_swm_input(struct swm_input_ids *swm_input, unsigned int reg)
 
 static void sst_set_pipe_gain(struct sst_ids *ids, struct sst_data *sst, int mute)
 {
+	struct soc_mixer_control *sm;
 	struct sst_gain_mixer_control *mc;
 	struct sst_gain_value *gv;
 	struct module *gain = NULL;
@@ -676,7 +680,8 @@ static void sst_set_pipe_gain(struct sst_ids *ids, struct sst_data *sst, int mut
 		struct snd_kcontrol *kctl = gain->kctl;
 
 		pr_debug("control name=%s\n", kctl->id.name);
-		mc = (void *)kctl->private_value;
+		sm = (void *)kctl->private_value;
+		mc = (struct sst_gain_mixer_control *)sm->pvt_data;
 		gv = mc->gain_val;
 
 		sst_send_gain_cmd(sst, gv, mc->task_id,
@@ -1887,7 +1892,8 @@ static int sst_fill_module_list(struct snd_kcontrol *kctl,
 	}
 
 	if (type == SST_MODULE_GAIN) {
-		struct sst_gain_mixer_control *mc = (void *)kctl->private_value;
+		struct soc_mixer_control *sm = (void *) kctl->private_value;
+		struct sst_gain_mixer_control *mc = (struct sst_gain_mixer_control *)sm->pvt_data;
 
 		mc->w = w;
 		module->kctl = kctl;
@@ -1934,7 +1940,8 @@ static int sst_fill_widget_module_info(struct snd_soc_dapm_widget *w,
 			ret = sst_fill_module_list(kctl, w, SST_MODULE_ALGO);
 		else if (strstr(kctl->id.name, "mute") &&
 			 !strncmp(kctl->id.name, w->name, index)) {
-			struct sst_gain_mixer_control *mc = (void *)kctl->private_value;
+			struct soc_mixer_control *sm = (void *) kctl->private_value;
+			struct sst_gain_mixer_control *mc = (struct sst_gain_mixer_control *)sm->pvt_data;
 			mc->w = w;
 		} else if (strstr(kctl->id.name, "interleaver") &&
 			 !strncmp(kctl->id.name, w->name, index)) {
diff --git a/sound/soc/intel/platform-libs/sst_widgets.h b/sound/soc/intel/platform-libs/sst_widgets.h
index 00aecd9..be63971 100644
--- a/sound/soc/intel/platform-libs/sst_widgets.h
+++ b/sound/soc/intel/platform-libs/sst_widgets.h
@@ -182,10 +182,12 @@ struct sst_gain_value {
 	.tlv.p = (tlv_array), \
 	.info = sst_gain_ctl_info,\
 	.get = xhandler_get, .put = xhandler_put, \
-	.private_value = (unsigned long)&(struct sst_gain_mixer_control) \
-	{ .stereo = true, .max = xmax, .min = xmin, .type = SST_GAIN_TLV, \
-	  .module_id = xmod, .pipe_id = xpipe, .task_id = xtask,\
-	  .instance_id = xinstance, .gain_val = xgain_val, .pname = xpname}
+	.private_value = (unsigned long)&(struct soc_mixer_control) \
+	{ .reg = xmin, .rreg = xmax, .min = xmin, .max = xmax,\
+		.pvt_data = (char *)&(struct sst_gain_mixer_control)\
+		{ .stereo = true, .max = xmax, .min = xmin, .type = SST_GAIN_TLV, \
+		.module_id = xmod, .pipe_id = xpipe, .task_id = xtask,\
+		.instance_id = xinstance, .gain_val = xgain_val, .pname = xpname} }
 
 #define SST_GAIN_KCONTROL_INT(xname, xhandler_get, xhandler_put, \
 			      xmod, xpipe, xinstance, xtask, xtype, xgain_val, \
@@ -193,20 +195,23 @@ struct sst_gain_value {
 	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
 	.info = sst_gain_ctl_info, \
 	.get = xhandler_get, .put = xhandler_put, \
-	.private_value = (unsigned long)&(struct sst_gain_mixer_control) \
-	{ .stereo = false, .max = xmax, .min = xmin, .type = xtype, \
-	  .module_id = xmod, .pipe_id = xpipe, .task_id = xtask,\
-	  .instance_id = xinstance, .gain_val = xgain_val, .pname =  xpname}
+	.private_value = (unsigned long)&(struct soc_mixer_control) \
+	{ .min = xmin, .max = xmax,\
+		.pvt_data = (char *)&(struct sst_gain_mixer_control)\
+		{ .stereo = false, .max = xmax, .min = xmin, .type = xtype, \
+		.module_id = xmod, .pipe_id = xpipe, .task_id = xtask,\
+		.instance_id = xinstance, .gain_val = xgain_val, .pname =  xpname} }
 
 #define SST_GAIN_KCONTROL_BOOL(xname, xhandler_get, xhandler_put,\
 			       xmod, xpipe, xinstance, xtask, xgain_val, xpname) \
 	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
 	.info = snd_soc_info_bool_ext, \
 	.get = xhandler_get, .put = xhandler_put, \
-	.private_value = (unsigned long)&(struct sst_gain_mixer_control) \
-	{ .stereo = false, .type = SST_GAIN_MUTE, \
-	  .module_id = xmod, .pipe_id = xpipe, .task_id = xtask,\
-	  .instance_id = xinstance, .gain_val = xgain_val, .pname = xpname}
+	.private_value = (unsigned long)&(struct soc_mixer_control) \
+	{ .pvt_data = (char *)&(struct sst_gain_mixer_control)\
+		{ .stereo = false, .type = SST_GAIN_MUTE, \
+		.module_id = xmod, .pipe_id = xpipe, .task_id = xtask,\
+		.instance_id = xinstance, .gain_val = xgain_val, .pname = xpname} }
 
 #define SST_CONTROL_NAME(xpname, xmname, xinstance, xtype) \
 	xpname " " xmname " " #xinstance " " xtype
-- 
1.9.1

