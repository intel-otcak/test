From 580649d6359b508cfaa392f588f4107c6ca40e76 Mon Sep 17 00:00:00 2001
From: Bin Han <bin.b.han@intel.com>
Date: Fri, 6 Mar 2015 14:29:28 +0800
Subject: [PATCH 288/307] atomisp2: check if hits list head when merging bo

When doing free bo merging, the SW should check if the
prev and next bo are the list head, if so, it should
just bypass the merging because list head is only for
list management.

Tracked-On: #H1503934199
Change-Id: Icc8bcb42d22bc888c94dffa6a1e906e260b889e5
Signed-off-by: Bin Han <bin.b.han@intel.com>
Reviewed-on: https://icggerrit.ir.intel.com/44988
Reviewed-by: Tian Shu Qiu <tian.shu.qiu@intel.com>
Validation-Android: Wei Tao <wei.tao@intel.com>
Build: viefandr
Integrator: Wei Tao <wei.tao@intel.com>
Approver: Wei Tao <wei.tao@intel.com>
Build: Wei Tao <wei.tao@intel.com>
Reviewed-by: Wei Tao <wei.tao@intel.com>
Maintainer: Wei Tao <wei.tao@intel.com>
---
 .../camera/drivers/media/pci/atomisp2/atomisp_driver/hmm/hmm_bo.c   | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/hmm/hmm_bo.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/hmm/hmm_bo.c
index 1099b56..b493f19 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/hmm/hmm_bo.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/hmm/hmm_bo.c
@@ -525,13 +525,15 @@ void hmm_bo_release(struct hmm_buffer_object *bo)
 	prev_bo = list_entry(bo->list.prev, struct hmm_buffer_object, list);
 	next_bo = list_entry(bo->list.next, struct hmm_buffer_object, list);
 
-	if (prev_bo->end == bo->start &&
+	if (bo->list.prev != &bdev->entire_bo_list &&
+		prev_bo->end == bo->start &&
 		(prev_bo->status & HMM_BO_MASK) == HMM_BO_FREE) {
 		__bo_take_off_handling(prev_bo);
 		bo = __bo_merge(prev_bo, bo);
 	}
 
-	if (next_bo->start == bo->end &&
+	if (bo->list.next != &bdev->entire_bo_list &&
+		next_bo->start == bo->end &&
 		(next_bo->status & HMM_BO_MASK) == HMM_BO_FREE) {
 		__bo_take_off_handling(next_bo);
 		bo = __bo_merge(bo, next_bo);
-- 
1.9.1

