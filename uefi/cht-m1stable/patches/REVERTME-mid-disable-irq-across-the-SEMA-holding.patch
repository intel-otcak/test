From 856c8e42163bda7de13d6714f6a710d483491bb1 Mon Sep 17 00:00:00 2001
From: Zhang Yanmin <yanmin.zhang@intel.com>
Date: Tue, 27 Jan 2015 08:12:43 +0800
Subject: [PATCH] mid: disable irq across the SEMA holding

Change-Id: I76d7c2bb99ac68278b0f1d7978336a4ad099eddb
Tracked-On: https://jira01.devtools.intel.com/browse/AKP-960
Signed-off-by: Zhang Yanmin <yanmin.zhang@intel.com>
---
 arch/x86/platform/intel-mid/intel_mid_pcihelpers.c | 15 +++++++++++++--
 1 file changed, 13 insertions(+), 2 deletions(-)

diff --git a/arch/x86/platform/intel-mid/intel_mid_pcihelpers.c b/arch/x86/platform/intel-mid/intel_mid_pcihelpers.c
index 45a7e5b..de48698 100644
--- a/arch/x86/platform/intel-mid/intel_mid_pcihelpers.c
+++ b/arch/x86/platform/intel-mid/intel_mid_pcihelpers.c
@@ -211,7 +211,16 @@ int intel_mid_dw_i2c_acquire_ownership(void)
 	u32 data = 0; /* data sent to PUNIT */
 	u32 cmd;
 	u32 cmdext;
-	int timeout = 100;
+	int timeout = 1000;
+
+	/*
+	 * We need disable irq. Otherwise, the main thread
+	 * might be preempted and the other thread jumps to
+	 * disable irq for a long time. Another case is
+	 * some irq handlers might trigger power voltage change
+	 */
+	BUG_ON(irqs_disabled());
+	local_irq_disable();
 
 	/* host driver writes 0x2 to side band register 0x7 */
 	intel_mid_msgbus_write32(PUNIT_PORT, PUNIT_SEMAPHORE, 0x2);
@@ -229,7 +238,7 @@ int intel_mid_dw_i2c_acquire_ownership(void)
 
 	/* host driver waits for bit 0 to be set in side band 0x7 */
 	while (GET_SEM() != 0x1) {
-		usleep_range(1000, 2000);
+		udelay(100);
 		timeout--;
 		if (timeout <= 0) {
 			pr_err("Timeout: semaphore timed out, reset sem\n");
@@ -238,6 +247,7 @@ int intel_mid_dw_i2c_acquire_ownership(void)
 			pr_err("PUNIT SEM: %d\n",
 					intel_mid_msgbus_read32(PUNIT_PORT,
 						PUNIT_SEMAPHORE));
+			local_irq_enable();
 			return ret;
 		}
 	}
@@ -250,6 +260,7 @@ EXPORT_SYMBOL(intel_mid_dw_i2c_acquire_ownership);
 int intel_mid_dw_i2c_release_ownership(void)
 {
 	reset_semaphore();
+	local_irq_enable();
 
 	return 0;
 }
-- 
1.9.1

