From e4892416da2fd5918952039b47378bdf0c7bb26a Mon Sep 17 00:00:00 2001
From: "Bhakte, GurudattaX" <gurudattax.bhakte@intel.com>
Date: Wed, 4 Mar 2015 20:57:15 +0530
Subject: [PATCH] LPSS1_F2_PWM2 is blocking S0ix.

Enable/disable of vibra was controlled with DUTY_CYCLE, so PWM chip
used to remain enabled. Which caused LPSS1_F2_PWM2 to be in D0 state
even after disabling vibra using the above method.

This patch disables PWM after disabling vibra, so that LPSS1_F2_PWM2
enters D3 state.

Issue: GMINL-6816

Change-Id: I64a54b1bdcfbe8e8eac2e5d3ad85bb222215900f
Signed-off-by: Bhakte, GurudattaX <gurudattax.bhakte@intel.com>
---
 drivers/input/misc/intel_mid_vibra_acpi.c | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/drivers/input/misc/intel_mid_vibra_acpi.c b/drivers/input/misc/intel_mid_vibra_acpi.c
index f8b3652..beee07f 100644
--- a/drivers/input/misc/intel_mid_vibra_acpi.c
+++ b/drivers/input/misc/intel_mid_vibra_acpi.c
@@ -83,8 +83,7 @@ static int vibra_pwm_configure(struct vibra_info *info, bool enable)
 		chip->ops->enable(chip,  pwm);
 	} else {
 		pr_info("%s: disable  vibra device\n", __func__);
-		chip->ops->config(chip,  pwm,  DUTY_NS_OFF,  PERIOD_NS);
-		chip->ops->enable(chip,  pwm);
+		chip->ops->disable(chip,  pwm);
 	}
 	return 0;
 }
-- 
1.9.1

