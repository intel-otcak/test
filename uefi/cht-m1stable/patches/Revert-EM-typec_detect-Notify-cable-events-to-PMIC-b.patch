From 56a1a7892ccfc6210f23464fd969085d8efdaa3f Mon Sep 17 00:00:00 2001
From: "M, Kumar K" <kumar.k.m@intel.com>
Date: Mon, 4 Apr 2016 09:30:43 +0100
Subject: [PATCH 5/6] Revert "[EM/typec_detect]: Notify cable events to PMIC by
 private interface"

This patch is causing IPANIC while reporting/processing the type of
cable notification.

This reverts commit 2e95de0f0e389a21a0f80d443b8cea8cf9abcf39.

Change-Id: I4d73d0c8332f4208d2d2a76b211ce6b19734f9e6
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-29323
Signed-off-by: Syed Rafiuddin <syed.rafiuddin@intel.com>
Signed-off-by: M, Kumar K <kumar.k.m@intel.com>
Reviewed-on: https://android.intel.com:443/495067
---
 drivers/usb/typec/usb_typec_detect.c | 12 +-----------
 1 file changed, 1 insertion(+), 11 deletions(-)

diff --git a/drivers/usb/typec/usb_typec_detect.c b/drivers/usb/typec/usb_typec_detect.c
index 0080d98..8406b8e 100644
--- a/drivers/usb/typec/usb_typec_detect.c
+++ b/drivers/usb/typec/usb_typec_detect.c
@@ -38,7 +38,6 @@
 #include <linux/mfd/intel_soc_pmic.h>
 #include <linux/usb_typec_phy.h>
 #include "usb_typec_detect.h"
-#include "../../power/intel_pmic_ccsm.h"
 
 #define CC_OPEN(x)		(x == USB_TYPEC_CC_VRD_UNKNOWN)
 #define CC_RD(x)		(x > USB_TYPEC_CC_VRA)
@@ -73,6 +72,7 @@ static void detect_update_ufp_state(struct typec_detect *detect);
 static int detect_measure_cc(struct typec_detect *detect,
 				enum typec_cc_pin pin_id);
 
+
 static const char *pd_extcon_cable[] = {
 	TYPEC_CABLE_USB,
 	TYPEC_CABLE_USB_HOST,
@@ -200,7 +200,6 @@ static void typec_detect_notify_extcon(struct typec_detect *detect,
 						char *type, bool state)
 {
 	enum typec_cable_type cbl_type;
-	enum cable_type pmic_ctype;
 
 	dev_dbg(detect->phy->dev, "%s: type = %s state = %d\n",
 				 __func__, type, state);
@@ -209,7 +208,6 @@ static void typec_detect_notify_extcon(struct typec_detect *detect,
 
 	switch (cbl_type) {
 	case E_TYPEC_CABLE_USB_SNK:
-		pmic_ctype = CABLE_TYPE_SINK;
 		if (detect->snk_state == state)
 			break;
 		detect->snk_state = state;
@@ -222,7 +220,6 @@ static void typec_detect_notify_extcon(struct typec_detect *detect,
 		break;
 
 	case E_TYPEC_CABLE_USB_SRC:
-		pmic_ctype = CABLE_TYPE_SOURCE;
 		if (detect->src_state == state)
 			break;
 
@@ -234,7 +231,6 @@ static void typec_detect_notify_extcon(struct typec_detect *detect,
 		break;
 
 	case E_TYPEC_CABLE_USB_HOST:
-		pmic_ctype = CABLE_TYPE_HOST;
 		if (detect->usb_host_state == state)
 			break;
 
@@ -242,7 +238,6 @@ static void typec_detect_notify_extcon(struct typec_detect *detect,
 		break;
 
 	case E_TYPEC_CABLE_USB:
-		pmic_ctype = CABLE_TYPE_USB;
 		if (detect->usb_state == state)
 			break;
 
@@ -256,11 +251,6 @@ static void typec_detect_notify_extcon(struct typec_detect *detect,
 		goto notify_ext_err;
 	}
 
-	if (cbl_type != E_TYPEC_CABLE_DP_SRC) {
-		dev_dbg(detect->phy->dev,
-			"%s: cable status change notify to pmic\n", __func__);
-		pmic_set_cable_state(pmic_ctype, state);
-	}
 	extcon_set_cable_state(detect->edev, type, state);
 
 notify_ext_err:
-- 
1.9.1

