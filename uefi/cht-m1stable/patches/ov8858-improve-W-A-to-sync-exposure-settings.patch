From 3fb9eb1802bec52e3b0d5b203de3c83afd17347f Mon Sep 17 00:00:00 2001
From: "Lopez Esparza, Ricardo" <ricardo.lopez.esparza@intel.com>
Date: Tue, 19 Apr 2016 19:18:46 -0500
Subject: [PATCH 3/3] ov8858: improve W/A to sync exposure settings.

The previous fix uses a sleep function not accurate for
the time needed, a better solution is provided.

Change-Id: I9d7d31a3096c88258c6383ae1a6f50cc8326903b
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-30244
Signed-off-by: Lopez Esparza, Ricardo <ricardo.lopez.esparza@intel.com>
Reviewed-on: https://android.intel.com:443/498781
---
 drivers/external_drivers/camera/drivers/media/i2c/ov8858.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/drivers/external_drivers/camera/drivers/media/i2c/ov8858.c b/drivers/external_drivers/camera/drivers/media/i2c/ov8858.c
index e50c5ff..399ae47 100644
--- a/drivers/external_drivers/camera/drivers/media/i2c/ov8858.c
+++ b/drivers/external_drivers/camera/drivers/media/i2c/ov8858.c
@@ -368,11 +368,6 @@ static int __ov8858_set_exposure(struct v4l2_subdev *sd, int exposure, int gain,
 	int exp_val, ret;
 	dev_dbg(&client->dev, "%s, exposure = %d, gain=%d, dig_gain=%d\n",
 		__func__, exposure, gain, dig_gain);
-	/* W/A: In CHT_MRD there is a sync problem between the new exposure,
-	 * and the statistics being reported to AE. This delay allows the old
-	 * statistics to be correctly reported before applying a new exposure */
-	if (strcmp(dmi_get_system_info(DMI_BOARD_NAME), CHT_HR_DEV_NAME) != 0)
-		msleep(5);
 
 	/* dig_gain is not applied to sensor. OTP WB data is used instead */
 
@@ -424,6 +419,11 @@ static int ov8858_set_exposure(struct v4l2_subdev *sd, int exposure, int gain,
 	const struct ov8858_resolution *res;
 	u16 hts, vts;
 	int ret;
+	/* W/A: In CHT_MRD there is a sync problem between the new exposure,
+	 * and the statistics being reported to AE. This delay allows the old
+	 * statistics to be correctly reported before applying a new exposure */
+	if (strcmp(dmi_get_system_info(DMI_BOARD_NAME), CHT_HR_DEV_NAME) != 0)
+		usleep_range(4000, 6000);
 
 	mutex_lock(&dev->input_lock);
 
-- 
1.9.1

