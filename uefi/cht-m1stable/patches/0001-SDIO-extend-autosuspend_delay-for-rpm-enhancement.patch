From abff47938b6b6ad1624b51de3b068127bc2e2779 Mon Sep 17 00:00:00 2001
From: Hetian Fang <hetian.fang@intel.com>
Date: Tue, 23 Sep 2014 20:32:39 +0800
Subject: [PATCH] SDIO: extend autosuspend_delay for rpm enhancement

byt-cr is not able to connect as P2P GO to any P2P client
Increasing the autosuspend_delay is fixing the issue.
This is a idea backport from sdhci-pci IAFW implementation.

Change-Id: I8f62a589885a48f76cd279643e1892d613f71482
Signed-off-by: Jonathan DE CESCO <jonathan.de.cesco@intel.com>
Signed-off-by: Hetian Fang <hetian.fang@intel.com>
---
 drivers/mmc/host/sdhci-acpi.c |   26 ++++++++++++++++++++++++--
 1 file changed, 24 insertions(+), 2 deletions(-)

diff --git a/drivers/mmc/host/sdhci-acpi.c b/drivers/mmc/host/sdhci-acpi.c
index f37781e..cdbeb61 100644
--- a/drivers/mmc/host/sdhci-acpi.c
+++ b/drivers/mmc/host/sdhci-acpi.c
@@ -77,6 +77,7 @@ struct sdhci_acpi_host {
 	const struct sdhci_acpi_slot	*slot;
 	struct platform_device		*pdev;
 	bool				use_runtime_pm;
+	unsigned int			autosuspend_delay;
 };
 
 static inline bool sdhci_acpi_flag(struct sdhci_acpi_host *c, unsigned int flag)
@@ -140,6 +141,23 @@ static int sdhci_acpi_probe_slot(struct platform_device *pdev)
 
 	return 0;
 }
+
+static int sdhci_acpi_sdio_probe_slot(struct platform_device *pdev)
+{
+	struct sdhci_acpi_host *c = platform_get_drvdata(pdev);
+	struct sdhci_host *host;
+
+	if (!c || !c->host)
+		return 0;
+
+	/* increase the auto suspend delay for SDIO to be 500ms.
+	 * It can fix some latency issues after enabling rpm.
+	 */
+	c->autosuspend_delay = 500;
+
+	return sdhci_acpi_probe_slot(pdev);
+}
+
 static int sdhci_acpi_remove_slot(struct platform_device *pdev)
 {
 	struct sdhci_acpi_host *c = platform_get_drvdata(pdev);
@@ -175,7 +193,7 @@ static const struct sdhci_acpi_slot sdhci_acpi_slot_int_sdio = {
 	.caps    = MMC_CAP_NONREMOVABLE | MMC_CAP_POWER_OFF_CARD,
 	.flags   = SDHCI_ACPI_RUNTIME_PM,
 	.pm_caps = MMC_PM_KEEP_POWER,
-	.probe_slot = sdhci_acpi_probe_slot,
+	.probe_slot = sdhci_acpi_sdio_probe_slot,
 	.remove_slot = sdhci_acpi_remove_slot,
 };
 
@@ -331,6 +349,7 @@ static int sdhci_acpi_probe(struct platform_device *pdev)
 	c->slot = sdhci_acpi_get_slot(handle, hid);
 	c->pdev = pdev;
 	c->use_runtime_pm = sdhci_acpi_flag(c, SDHCI_ACPI_RUNTIME_PM);
+	c->autosuspend_delay = 0;
 
 	platform_set_drvdata(pdev, c);
 
@@ -390,7 +409,10 @@ static int sdhci_acpi_probe(struct platform_device *pdev)
 	if (c->use_runtime_pm) {
 		pm_runtime_set_active(dev);
 		pm_suspend_ignore_children(dev, 1);
-		pm_runtime_set_autosuspend_delay(dev, 50);
+		if (c->autosuspend_delay)
+			pm_runtime_set_autosuspend_delay(dev, c->autosuspend_delay);
+		else
+			pm_runtime_set_autosuspend_delay(dev, 50);
 		pm_runtime_use_autosuspend(dev);
 		pm_runtime_enable(dev);
 	}
-- 
1.7.9.5

