From 598af59eda42fb6b9553f4f9e1888ed48b059e58 Mon Sep 17 00:00:00 2001
From: Rik van Riel <riel@redhat.com>
Date: Sat, 26 Apr 2014 23:15:35 -0700
Subject: [PATCH 4/4] fix rcu stall issues while sysrc runs

this patch includes two patches from upstream

commit: 61f38db3e3c0e4c3be0858750e2cabeadaecac0c
    rcu: Provide API to suppress stall warnings while sysrc runs

    Some sysrq handlers can run for a long time, because they dump a lot
    of data onto a serial console. Having RCU stall warnings pop up in
    the middle of them only makes the problem worse.

    This commit provides rcu_sysrq_start() and rcu_sysrq_end() APIs to
    temporarily suppress RCU CPU stall warnings while a sysrq request is
    handled.

    Signed-off-by: Rik van Riel <riel@redhat.com>
    [ paulmck: Fix TINY_RCU build error. ]
    Signed-off-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>

commit: 722773afd83209d4088d30946bc274f547528a0b
    sysrq,rcu: suppress RCU stall warnings while sysrq runs

    Some sysrq handlers can run for a long time, because they dump a lot of
    data onto a serial console.  Having RCU stall warnings pop up in the
    middle of them only makes the problem worse.

    This patch temporarily disables RCU stall warnings while a sysrq request
    is handled.

    Signed-off-by: Rik van Riel <riel@redhat.com>
    Suggested-by: Paul McKenney <paulmck@linux.vnet.ibm.com>
    Signed-off-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Madper Xie <cxie@redhat.com>
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Cc: Richard Weinberger <richard@nod.at>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

Change-Id: Ibfb52daa79b25b2c836696781cb97cd88ae3cc1d
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-28133
Signed-off-by: LongX Zhang <longx.zhang@intel.com>
Reviewed-on: https://android.intel.com:443/491583
---
 drivers/tty/sysrq.c      |  3 +++
 include/linux/rcupdate.h | 12 ++++++++++++
 kernel/rcu/update.c      | 12 ++++++++++++
 3 files changed, 27 insertions(+)

diff --git a/drivers/tty/sysrq.c b/drivers/tty/sysrq.c
index fc67a89..38d5f9a 100644
--- a/drivers/tty/sysrq.c
+++ b/drivers/tty/sysrq.c
@@ -46,6 +46,7 @@
 #include <linux/jiffies.h>
 #include <linux/syscalls.h>
 #include <linux/of.h>
+#include <linux/rcupdate.h>
 
 #include <asm/ptrace.h>
 #include <asm/irq_regs.h>
@@ -511,6 +512,7 @@ void __handle_sysrq(int key, bool check_mask)
 	int orig_log_level;
 	int i;
 
+	rcu_sysrq_start();
 	rcu_read_lock();
 	/*
 	 * Raise the apparent loglevel to maximum so that the sysrq header
@@ -554,6 +556,7 @@ void __handle_sysrq(int key, bool check_mask)
 		console_loglevel = orig_log_level;
 	}
 	rcu_read_unlock();
+	rcu_sysrq_end();
 }
 
 void handle_sysrq(int key)
diff --git a/include/linux/rcupdate.h b/include/linux/rcupdate.h
index 72bf3a0..f279fe0 100644
--- a/include/linux/rcupdate.h
+++ b/include/linux/rcupdate.h
@@ -226,6 +226,18 @@ void rcu_idle_exit(void);
 void rcu_irq_enter(void);
 void rcu_irq_exit(void);
 
+#ifdef CONFIG_RCU_STALL_COMMON
+void rcu_sysrq_start(void);
+void rcu_sysrq_end(void);
+#else /* #ifdef CONFIG_RCU_STALL_COMMON */
+static inline void rcu_sysrq_start(void)
+{
+}
+static inline void rcu_sysrq_end(void)
+{
+}
+#endif /* #else #ifdef CONFIG_RCU_STALL_COMMON */
+
 #ifdef CONFIG_RCU_USER_QS
 void rcu_user_enter(void);
 void rcu_user_exit(void);
diff --git a/kernel/rcu/update.c b/kernel/rcu/update.c
index c54609f..f64d452 100644
--- a/kernel/rcu/update.c
+++ b/kernel/rcu/update.c
@@ -321,6 +321,18 @@ int rcu_jiffies_till_stall_check(void)
 	return till_stall_check * HZ + RCU_STALL_DELAY_DELTA;
 }
 
+void rcu_sysrq_start(void)
+{
+	if (!rcu_cpu_stall_suppress)
+		rcu_cpu_stall_suppress = 2;
+}
+
+void rcu_sysrq_end(void)
+{
+	if (rcu_cpu_stall_suppress == 2)
+		rcu_cpu_stall_suppress = 0;
+}
+
 static int rcu_panic(struct notifier_block *this, unsigned long ev, void *ptr)
 {
 	rcu_cpu_stall_suppress = 1;
-- 
1.9.1

