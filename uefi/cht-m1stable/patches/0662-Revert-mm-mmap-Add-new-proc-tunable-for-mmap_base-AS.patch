From 0497dc1e52cec5d9adc6579c1eaa0d1321ffa164 Mon Sep 17 00:00:00 2001
From: dcashman <dcashman@google.com>
Date: Tue, 29 Dec 2015 13:36:20 -0800
Subject: [PATCH 662/687] Revert "mm: mmap: Add new /proc tunable for mmap_base
 ASLR."

This reverts commit edd32cd3cf7dd55d979b93bcd76771b035158429.

Bug: 25973686
Signed-off-by: Daniel Cashman <dcashman@google.com>
Change-Id: Ie38299a7f917df16494ef722e3fa0070a6b4de4d
---
 Documentation/sysctl/kernel.txt | 14 --------------
 include/linux/mm.h              |  6 ------
 kernel/sysctl.c                 | 11 -----------
 3 files changed, 31 deletions(-)

diff --git a/Documentation/sysctl/kernel.txt b/Documentation/sysctl/kernel.txt
index ee09dec..e55124e 100644
--- a/Documentation/sysctl/kernel.txt
+++ b/Documentation/sysctl/kernel.txt
@@ -41,7 +41,6 @@ show up in /proc/sys/kernel:
 - kptr_restrict
 - kstack_depth_to_print       [ X86 only ]
 - l2cr                        [ PPC only ]
-- mmap_rnd_bits
 - modprobe                    ==> Documentation/debugging-modules.txt
 - modules_disabled
 - msg_next_id		      [ sysv ipc ]
@@ -381,19 +380,6 @@ This flag controls the L2 cache of G3 processor boards. If
 
 ==============================================================
 
-mmap_rnd_bits:
-
-This value can be used to select the number of bits to use to
-determine the random offset to the base address of vma regions
-resulting from mmap allocations on architectures which support
-tuning address space randomization.  This value will be bounded
-by the architecture's minimum and maximum supported values.
-
-This value can be changed after boot using the
-/proc/sys/kernel/mmap_rnd_bits tunable
-
-==============================================================
-
 modules_disabled:
 
 A toggle value indicating if modules are allowed to be loaded
diff --git a/include/linux/mm.h b/include/linux/mm.h
index 6815721..045f8f5 100644
--- a/include/linux/mm.h
+++ b/include/linux/mm.h
@@ -47,12 +47,6 @@ extern int sysctl_legacy_va_layout;
 #define sysctl_legacy_va_layout 0
 #endif
 
-#ifdef CONFIG_ARCH_MMAP_RND_BITS
-extern int mmap_rnd_bits_min;
-extern int mmap_rnd_bits_max;
-extern int mmap_rnd_bits;
-#endif
-
 #include <asm/page.h>
 #include <asm/pgtable.h>
 #include <asm/processor.h>
diff --git a/kernel/sysctl.c b/kernel/sysctl.c
index 53fb056..797bfa0 100644
--- a/kernel/sysctl.c
+++ b/kernel/sysctl.c
@@ -1105,17 +1105,6 @@ static struct ctl_table kern_table[] = {
 		.proc_handler	= proc_dointvec,
 	},
 #endif
-#ifdef CONFIG_ARCH_MMAP_RND_BITS
-	{
-		.procname	= "mmap_rnd_bits",
-		.data		= &mmap_rnd_bits,
-		.maxlen		= sizeof(mmap_rnd_bits),
-		.mode		= 0644,
-		.proc_handler	= proc_dointvec_minmax,
-		.extra1		= &mmap_rnd_bits_min,
-		.extra2		= &mmap_rnd_bits_max,
-	},
-#endif
 	{ }
 };
 
-- 
1.9.1

