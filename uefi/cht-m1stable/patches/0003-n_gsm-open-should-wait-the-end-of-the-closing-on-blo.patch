From cbecfc242fa683b189eb3e8929d8ab2fb22213fd Mon Sep 17 00:00:00 2001
From: Mustapha Ben Zoubeir <mustaphax.ben.zoubeir@intel.com>
Date: Tue, 19 Aug 2014 11:18:43 +0200
Subject: [PATCH 3/8] n_gsm: open should wait the end of the closing on
 blocking mode

If an open is performed on blocking mode when the DLCI is in
the DLCI_BLOCKING state, we must wait the end of the closing
operation to perform the open.

In the current implementation, the MUX driver immediately returns
the EAGAIN error.

This patch fix the code in such way that the EAGAIN error is no
more returned on blocking mode if we are in the closing state.
Instead, we wait the end of the closing sequence.

Change-Id: Icbad1fcae218867c871d48fa73ecf0e5e2a37be3
Orig-Change-Id: I4bca99b8740ae842a92e888afc4be12179fad64f
Signed-off-by: Guillaume Lucas <guillaume.lucas@intel.com>
Signed-off-by: Nicolas LOUIS <nicolasx.louis@intel.com>
Reviewed-on: http://android.intel.com:8080/128581
Reviewed-by: Ravindran, Arun <arun.ravindran@intel.com>
Reviewed-by: cactus <cactus@intel.com>
Tested-by: cactus <cactus@intel.com>
---
 drivers/tty/n_gsm.c | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/drivers/tty/n_gsm.c b/drivers/tty/n_gsm.c
index 738b9eaabccb..43d2574b1566 100644
--- a/drivers/tty/n_gsm.c
+++ b/drivers/tty/n_gsm.c
@@ -3193,6 +3193,17 @@ static int gsmtty_open(struct tty_struct *tty, struct file *filp)
 	struct ktermios save;
 	int t;
 
+	if (dlci->state == DLCI_CLOSING) {
+		/* if we are in blocking mode, wait the end of the closing */
+		if (!(filp->f_flags & O_NONBLOCK)) {
+			t = wait_event_timeout(gsm->event,
+					dlci->state == DLCI_CLOSED,
+					gsm->n2 * gsm->t1 * HZ / 100);
+			if (!t)
+				return -ENXIO;
+		} else
+			return -EAGAIN;
+	}
 	port->count++;
 	tty_port_tty_set(port, tty);
 	gsmtty_attach_dlci(tty, dlci);
-- 
1.9.1

