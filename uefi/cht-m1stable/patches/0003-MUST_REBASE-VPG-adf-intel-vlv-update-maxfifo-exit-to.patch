From 03761fa49b06bb22b3792e6ce5deb9010d2888a3 Mon Sep 17 00:00:00 2001
Message-Id: <03761fa49b06bb22b3792e6ce5deb9010d2888a3.1421897934.git.chang-joon.lee@intel.com>
In-Reply-To: <149a6863e085e113eb3c4f75ec994895411447d6.1421897934.git.chang-joon.lee@intel.com>
References: <149a6863e085e113eb3c4f75ec994895411447d6.1421897934.git.chang-joon.lee@intel.com>
From: Arun R Murthy <arun.r.murthy@intel.com>
Date: Mon, 1 Dec 2014 15:31:33 +0530
Subject: [PATCH 3/7] MUST_REBASE [VPG]: adf/intel/vlv: update maxfifo exit to
 ver-3 intel-adf.h

In ver-3 of intel_adf.h n_configs include panel fitter and color.
Hence n_configs cant be used to find the number of planes enabled
and hence read the appropiate flags and get the plane status.

MUST_REBASE: Since Google ADF framework is not in upstream and also
we cannot have two display drivers, other one being i915, we need to
work on i915 and ADF convergence path before it can be upstreamed.

Issue: GMINL-4646
Change-Id: I55c8ddb7927d5498889f21d4d24e97403d27d52c
Signed-off-by: Arun R Murthy <arun.r.murthy@intel.com>
---
 .../video/adf/intel/core/common/dsi/gen_dsi_pipe.c |   14 +++++++++++++-
 1 file changed, 13 insertions(+), 1 deletion(-)

diff --git a/drivers/video/adf/intel/core/common/dsi/gen_dsi_pipe.c b/drivers/video/adf/intel/core/common/dsi/gen_dsi_pipe.c
index 063cc7b..a7d25f8 100644
--- a/drivers/video/adf/intel/core/common/dsi/gen_dsi_pipe.c
+++ b/drivers/video/adf/intel/core/common/dsi/gen_dsi_pipe.c
@@ -283,7 +283,19 @@ static void dsi_on_post(struct intel_pipe *pipe)
 static void dsi_pre_validate(struct intel_pipe *pipe,
 		struct intel_adf_post_custom_data *custom)
 {
-	if (custom->n_configs > 1 && pipe->status.maxfifo_enabled) {
+	struct intel_adf_config *custom_config;
+	u8 i = 0, planes_enabled = 0;
+
+	for (i = 0; i < custom->n_configs; i++) {
+		custom_config = &custom->configs[i];
+
+		/* Get the number of planes enabled */
+		if (custom_config->type == INTEL_ADF_CONFIG_PLANE)
+			planes_enabled++;
+	}
+
+	/* If we are moving to multiple plane then disable maxfifo */
+	if (planes_enabled > 1 && pipe->status.maxfifo_enabled) {
 		REG_WRITE(FW_BLC_SELF_VLV, ~FW_CSPWRDWNEN);
 		pipe->status.maxfifo_enabled = false;
 		pipe->status.wait_vblank = true;
-- 
1.7.9.5

