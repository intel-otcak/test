From fa6914fb7a641a6921d592a79c477257eea00795 Mon Sep 17 00:00:00 2001
Message-Id: <fa6914fb7a641a6921d592a79c477257eea00795.1413837857.git.chang-joon.lee@intel.com>
In-Reply-To: <006497b7323eca32c2f489a1a9f662743c0d16d2.1413837855.git.chang-joon.lee@intel.com>
References: <006497b7323eca32c2f489a1a9f662743c0d16d2.1413837855.git.chang-joon.lee@intel.com>
From: Sagar Kamble <sagar.a.kamble@intel.com>
Date: Sun, 17 Aug 2014 16:56:53 +0530
Subject: [PATCH 258/312] REVERTME [VPG]: drm/i915: Forcibly disabling power
 wells at the end of freeze

With following sequence of events Disp2D power well is staying on since CRTC
is disabled at the second suspend time.
DPMS OFF -> Suspend -> Resume(Well Turned ON) -> Suspend(CRTC Disabled so well
not turned OFF)
With this change power well is turned of independent of CRTC state during
__i915_drm_thaw. Ideally, power well should not get turned on in Resume.
Fix for not disabling power well in Resume is under development so marking this
interim solution as REVERTME.

Issue: GMIN-3179
Change-Id: I2c55168af40a52275a3393562af32d02f709ab6d
Signed-off-by: Sagar Kamble <sagar.a.kamble@intel.com>
---
 drivers/gpu/drm/i915/intel_display.c |   16 ++++++++++------
 1 file changed, 10 insertions(+), 6 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index f40b0e8..b6705a8 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -5485,14 +5485,18 @@ void intel_crtc_control(struct drm_crtc *crtc, bool enable)
 			dev_priv->display.crtc_enable(crtc);
 		}
 	} else {
-		if (intel_crtc->active) {
+		if (intel_crtc->active)
 			dev_priv->display.crtc_disable(crtc);
 
-			domains = intel_crtc->enabled_power_domains;
-			for_each_power_domain(domain, domains)
-				intel_display_power_put(dev_priv, domain);
-			intel_crtc->enabled_power_domains = 0;
-		}
+		/*
+		 * Disabling wells unconditionally independent of CRTC state.
+		 * In scenario where suspend happens without DPMS OFF call,
+		 * Power wells remain ON if CRTC is disabled.
+		 */
+		domains = intel_crtc->enabled_power_domains;
+		for_each_power_domain(domain, domains)
+			intel_display_power_put(dev_priv, domain);
+		intel_crtc->enabled_power_domains = 0;
 	}
 }
 
-- 
1.7.9.5

