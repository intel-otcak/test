From 86a5aed13d291321a00dbb2533f1c72deff4725f Mon Sep 17 00:00:00 2001
From: Samreen Nilofer <samreen.nilofer@intel.com>
Date: Thu, 12 Jun 2014 22:19:17 +0530
Subject: Audio: Add debugfs for dumping LPE stack

BZ: 209334

LPE stack segment needs to be dumped during recovery
and i/o error. Add debugfs to dump LPE stack segment
during i/o error

Change-Id: I8b723a9bf5c2c83c10558291b3c386ad61c35396
Signed-off-by: Hardik T Shah <hardik.t.shah@intel.com>
Signed-off-by: Subhransu S. Prusty <subhransu.s.prusty@intel.com>
---
 sound/soc/intel/sst/sst.h       |  2 ++
 sound/soc/intel/sst/sst_debug.c | 35 ++++++++++++++++++++++++++++++++++-
 2 files changed, 36 insertions(+), 1 deletion(-)

diff --git a/sound/soc/intel/sst/sst.h b/sound/soc/intel/sst/sst.h
index 888d8ff..bc3798c 100644
--- a/sound/soc/intel/sst/sst.h
+++ b/sound/soc/intel/sst/sst.h
@@ -97,6 +97,8 @@ enum sst_algo_ops {
 #define SST_SHIM_SIZE		0xD0
 
 #define FW_SIGNATURE_SIZE	4
+#define SST_LPE_STACK_OFFSET      0x27000
+#define SST_LPE_STACK_SIZE        4096
 
 /* stream states */
 enum sst_stream_states {
diff --git a/sound/soc/intel/sst/sst_debug.c b/sound/soc/intel/sst/sst_debug.c
index 40f68142..837da70 100644
--- a/sound/soc/intel/sst/sst_debug.c
+++ b/sound/soc/intel/sst/sst_debug.c
@@ -637,7 +637,9 @@ static ssize_t sst_debug_readme_read(struct file *file, char __user *user_buf,
 					"dma single block mode\n"
 		"7. iram_dump, dram_dump, interfaces provide mmap support to\n"
 		"get the iram and dram dump, these buffers will have data only\n"
-		"after the recovery is triggered\n";
+		"after the recovery is triggered\n"
+		"8. lpe_stack, dumps lpe stack area."
+		"Valid only when LPE is active\n";
 
 	const char *ctp_buf =
 		"8. Enable input clock by 'echo enable > osc_clk0'.\n"
@@ -1082,6 +1084,36 @@ static const struct file_operations sst_debug_dma_reg = {
 		.read = sst_debug_dma_reg_read,
 };
 
+static ssize_t sst_debug_lpe_stack_read(struct file *file,
+		char __user *user_buf, size_t count, loff_t *ppos)
+{
+	int retval = 0;
+	struct intel_sst_drv *sst = file->private_data;
+	void __iomem *addr;
+
+
+	retval = is_fw_running(sst);
+	if (retval)
+		return retval;
+
+	addr = sst->dram + SST_LPE_STACK_OFFSET;
+
+	pr_debug("Dumping DCCM from %p, num_dwrds %d...\n",
+		 (u32 *)addr, SST_LPE_STACK_SIZE);
+
+	retval = copy_sram_to_user_buffer(user_buf, count, ppos,
+			SST_LPE_STACK_SIZE/(sizeof(u32)), (u32 *)(addr), 0);
+	sst_pm_runtime_put(sst);
+
+
+	return retval;
+}
+
+static const struct file_operations sst_debug_lpe_stack_dump = {
+		.open = simple_open,
+		.read = sst_debug_lpe_stack_read,
+};
+
 /**
  * sst_debug_remap - function remaps the iram/dram buff to userspace
  *
@@ -1290,6 +1322,7 @@ static const struct sst_debug sst_common_dbg_entries[] = {
 	{"sram_ia_lpe_mailbox", &sst_debug_sram_ia_lpe_mbox_ops, 0400},
 	{"sram_lpe_ia_mailbox", &sst_debug_sram_lpe_ia_mbox_ops, 0400},
 	{"README", &sst_debug_readme_ops, 0400},
+	{"lpe_stack", &sst_debug_lpe_stack_dump, 0400},
 };
 
 static const struct sst_debug ctp_dbg_entries[] = {
-- 
2.1.0

