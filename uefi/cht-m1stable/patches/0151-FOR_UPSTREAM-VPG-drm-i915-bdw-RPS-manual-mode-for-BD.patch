From f8d3ae452a24ff75fc3efa1d6a6274cb43981584 Mon Sep 17 00:00:00 2001
Message-Id: <f8d3ae452a24ff75fc3efa1d6a6274cb43981584.1413837857.git.chang-joon.lee@intel.com>
In-Reply-To: <006497b7323eca32c2f489a1a9f662743c0d16d2.1413837855.git.chang-joon.lee@intel.com>
References: <006497b7323eca32c2f489a1a9f662743c0d16d2.1413837855.git.chang-joon.lee@intel.com>
From: Jeff McGee <jeff.mcgee@intel.com>
Date: Mon, 9 Jun 2014 11:57:21 -0500
Subject: [PATCH 151/312] FOR_UPSTREAM [VPG]: drm/i915/bdw: RPS manual mode
 for BDW

This patch adds Broadwell support to:

Author: Jeff McGee <jeff.mcgee@intel.com>
Date:   Mon Dec 16 14:30:22 2013 -0600

    FOR_UPSTREAM [VPG]: drm/i915: Add RPS debugfs manual mode

Change-Id: I72ddd95d7fa64249b181f5daa38054ea7bdec302
For: VIZ-3345
Signed-off-by: Jeff McGee <jeff.mcgee@intel.com>
[torourke: rebased and resubmitted]
Signed-off-by: Tom O'Rourke <Tom.O'Rourke@intel.com>
---
 drivers/gpu/drm/i915/i915_debugfs.c |   14 ++++----------
 drivers/gpu/drm/i915/intel_pm.c     |   23 +++++++++++------------
 2 files changed, 15 insertions(+), 22 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_debugfs.c b/drivers/gpu/drm/i915/i915_debugfs.c
index 76a7ebc..b2679ee 100644
--- a/drivers/gpu/drm/i915/i915_debugfs.c
+++ b/drivers/gpu/drm/i915/i915_debugfs.c
@@ -4506,8 +4506,7 @@ static int i915_cur_freq_get(void *data, u64 *val)
 	struct drm_device *dev = data;
 	struct drm_i915_private *dev_priv = dev->dev_private;
 
-	if ((INTEL_INFO(dev)->gen < 6) ||
-	     IS_BROADWELL(dev))
+	if (INTEL_INFO(dev)->gen < 6)
 		return -ENODEV;
 
 	flush_delayed_work(&dev_priv->rps.delayed_resume_work);
@@ -4524,8 +4523,7 @@ static int i915_cur_freq_set(void *data, u64 val)
 	u64 freq = val;
 	int ret;
 
-	if ((INTEL_INFO(dev)->gen < 6) ||
-	     IS_BROADWELL(dev))
+	if (INTEL_INFO(dev)->gen < 6)
 		return -ENODEV;
 
 	flush_delayed_work(&dev_priv->rps.delayed_resume_work);
@@ -4604,9 +4602,7 @@ static int i915_rps_manual_get(void *data, u64 *val)
 	struct drm_device *dev = data;
 	struct drm_i915_private *dev_priv = dev->dev_private;
 
-	if ((INTEL_INFO(dev)->gen < 6) ||
-	     IS_VALLEYVIEW(dev) ||
-	     IS_BROADWELL(dev))
+	if ((INTEL_INFO(dev)->gen < 6) || IS_VALLEYVIEW(dev))
 		return -ENODEV;
 
 	flush_delayed_work(&dev_priv->rps.delayed_resume_work);
@@ -4622,9 +4618,7 @@ static int i915_rps_manual_set(void *data, u64 val)
 	struct drm_i915_private *dev_priv = dev->dev_private;
 	int ret;
 
-	if ((INTEL_INFO(dev)->gen < 6) ||
-	     IS_VALLEYVIEW(dev) ||
-	     IS_BROADWELL(dev))
+	if ((INTEL_INFO(dev)->gen < 6) || IS_VALLEYVIEW(dev))
 		return -ENODEV;
 
 	flush_delayed_work(&dev_priv->rps.delayed_resume_work);
diff --git a/drivers/gpu/drm/i915/intel_pm.c b/drivers/gpu/drm/i915/intel_pm.c
index 84c4867..5b9d2b6 100644
--- a/drivers/gpu/drm/i915/intel_pm.c
+++ b/drivers/gpu/drm/i915/intel_pm.c
@@ -3546,6 +3546,15 @@ void gen6_set_rps_mode(struct drm_device *dev, bool manual)
 		I915_WRITE(GEN6_RP_CONTROL,
 			   GEN6_RP_MEDIA_HW_NORMAL_MODE);
 		delay = (I915_READ(GEN6_GT_PERF_STATUS) & 0xff00) >> 8;
+	} else if (IS_BROADWELL(dev)) {
+		I915_WRITE(GEN6_RP_CONTROL,
+			   GEN6_RP_MEDIA_TURBO |
+			   GEN6_RP_MEDIA_HW_NORMAL_MODE |
+			   GEN6_RP_MEDIA_IS_GFX |
+			   GEN6_RP_ENABLE |
+			   GEN6_RP_UP_BUSY_AVG |
+			   GEN6_RP_DOWN_IDLE_AVG);
+		delay = (I915_READ(GEN6_GT_PERF_STATUS) & 0xff00) >> 8;
 	} else {
 		/* Force a reset */
 		dev_priv->rps.power = HIGH_POWER;
@@ -3921,18 +3930,8 @@ static void gen8_enable_rps(struct drm_device *dev)
 
 	I915_WRITE(GEN6_RP_IDLE_HYSTERSIS, 10);
 
-	/* 5: Enable RPS */
-	I915_WRITE(GEN6_RP_CONTROL,
-		   GEN6_RP_MEDIA_TURBO |
-		   GEN6_RP_MEDIA_HW_NORMAL_MODE |
-		   GEN6_RP_MEDIA_IS_GFX |
-		   GEN6_RP_ENABLE |
-		   GEN6_RP_UP_BUSY_AVG |
-		   GEN6_RP_DOWN_IDLE_AVG);
-
-	/* 6: Ring frequency + overclocking (our driver does this later */
-
-	gen6_set_rps(dev, (I915_READ(GEN6_GT_PERF_STATUS) & 0xff00) >> 8);
+	/* 5: Enable RPS and 6: set ring frequency */
+	gen6_set_rps_mode(dev, dev_priv->rps.manual_mode);
 
 	gen8_enable_rps_interrupts(dev);
 
-- 
1.7.9.5

