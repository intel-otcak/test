From a3a36e9f2e42ff939866d328ea1a5c69396fc451 Mon Sep 17 00:00:00 2001
From: "Subhransu S. Prusty" <subhransu.s.prusty@intel.com>
Date: Mon, 12 May 2014 06:38:32 +0530
Subject: [PATCH 13/39] ASoC: soc-fw: Add support to register widget event
 handler

Issue: GMINL-3679

Bind function to map the register widget event handler
based on the event type is added.

Change-Id: If7b3fb940a11b81efba5ec4b92a00c0d72f2d4da
Signed-off-by: Mythri P K <mythri.p.k@intel.com>
---
 include/sound/soc-fw.h    |  9 +++++++++
 include/uapi/sound/asoc.h |  3 +++
 sound/soc/soc-fw.c        | 25 +++++++++++++++++++++++++
 3 files changed, 37 insertions(+)

diff --git a/include/sound/soc-fw.h b/include/sound/soc-fw.h
index 3928a0b..8a087b0f 100644
--- a/include/sound/soc-fw.h
+++ b/include/sound/soc-fw.h
@@ -39,6 +39,12 @@ struct snd_soc_fw_dai_ops {
 	struct snd_soc_dai_ops *ops;
 };
 
+struct snd_soc_fw_widget_events {
+	u16 type;
+	int (*event_handler)(struct snd_soc_dapm_widget *w,
+			struct snd_kcontrol *k, int event);
+};
+
 /*
  * Public API - Used by component drivers to load new mixers, DAPM, vendor
  * specific data.
@@ -125,6 +131,9 @@ static inline const void *snd_soc_fw_get_data(struct snd_soc_fw_hdr *hdr)
 	return ptr + sizeof(*hdr);
 }
 
+int snd_soc_fw_widget_bind_event(u16 event_type, struct snd_soc_dapm_widget *w,
+		const struct snd_soc_fw_widget_events *events, int num_events);
+
 /* Firmware loading for component drivers */
 int snd_soc_fw_load_card(struct snd_soc_card *card,
 	struct snd_soc_fw_card_ops *ops, const struct firmware *fw,
diff --git a/include/uapi/sound/asoc.h b/include/uapi/sound/asoc.h
index 0a7df81..89ec6ec 100644
--- a/include/uapi/sound/asoc.h
+++ b/include/uapi/sound/asoc.h
@@ -889,6 +889,9 @@ struct snd_soc_fw_dapm_widget {
 	__u8 ignore_suspend;	/* kept enabled over suspend */
 	__u8 padding[2];
 
+	__u16 event_flags;
+	__u16 event_type;
+
 	/* kcontrols that relate to this widget */
 	struct snd_soc_fw_kcontrol kcontrol;
 	/* controls follow here */
diff --git a/sound/soc/soc-fw.c b/sound/soc/soc-fw.c
index 8ae3870..2de4b1f 100644
--- a/sound/soc/soc-fw.c
+++ b/sound/soc/soc-fw.c
@@ -359,6 +359,30 @@ static int soc_fw_kcontrol_bind_io(u32 io_type, struct snd_kcontrol_new *k,
 	return 0;
 }
 
+int snd_soc_fw_widget_bind_event(u16 event_type, struct snd_soc_dapm_widget *w,
+		const struct snd_soc_fw_widget_events *events, int num_events)
+{
+	int i;
+
+	w->event = NULL;
+
+	if (event_type == 0) {
+		pr_debug("ASoC: No event type registered\n");
+		return 0;
+	}
+
+	for (i = 0; i < num_events; i++) {
+		if (event_type == events[i].type) {
+			w->event = events[i].event_handler;
+			break;
+		}
+	}
+	if (!w->event)
+		return 1;
+	return 0;
+}
+EXPORT_SYMBOL_GPL(snd_soc_fw_widget_bind_event);
+
 /* optionally pass new dynamic kcontrol to component driver. */
 static int soc_fw_init_kcontrol(struct soc_fw *sfw, struct snd_kcontrol_new *k)
 {
@@ -1093,6 +1117,7 @@ static int soc_fw_dapm_widget_create(struct soc_fw *sfw,
 	widget.on_val = w->invert ? 0 : 1;
 	widget.off_val = w->invert ? 1 : 0;
 	widget.ignore_suspend = w->ignore_suspend;
+	widget.event_flags = w->event_flags;
 	widget.index = sfw->index;
 
 	sfw->pos += sizeof(struct snd_soc_fw_dapm_widget);
-- 
1.9.1

