From 1c777123dc8905317f9d54ddae03fc03dad7d338 Mon Sep 17 00:00:00 2001
From: Alexey Chekmarev <alexey.chekmarev@intel.com>
Date: Tue, 4 Nov 2014 11:01:56 +0100
Subject: [PATCH 1/1] nfc: integrate fdp drop
 fieldspeak_bx_gmin_android_l_2015_01_06

Change log:

4e84e79 2014-12-08 13:26:47 +0100 | Fixed reset duration.
(fieldspeak_bx_gmin_android_l_2015_01_06) [Alexey Chekmarev]
The generated reset was too short (2 us). Datasheet duration 100us.
25526af 2014-11-17 13:58:37 +0100 | fix mistyping for pr_err
(fieldspeak_bx_gmin_android_l_2014_12_05) [Alexey Chekmarev]
c97c052 2014-11-04 11:01:56 +0100 | Increase number of RX buffers
in driver [Alexey Chekmarev]
 On slow devices, stack is not able to consume the NCI notifications
sent by FDP
This typically occurs during HCI network discovery procedure
The number of RX buffers has been raised to 16 to avoid this loss
of data
(cherry picked from commit 63faf607a07ada8dbbf4bd60ba2a1dc8145d8cb3)

Change-Id: I7557d3ff27b7397ca5a96a3a417b88dc1531b023
Tracked-On: https://jira01.devtools.intel.com/browse/AKP-834
Signed-off-by: Sebastian Niciarz <sebastian.niciarz@intel.com>
---
 drivers/staging/fdp/fdp_custom.c | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

diff --git a/drivers/staging/fdp/fdp_custom.c b/drivers/staging/fdp/fdp_custom.c
index 76ba636d..e6c6849 100644
--- a/drivers/staging/fdp/fdp_custom.c
+++ b/drivers/staging/fdp/fdp_custom.c
@@ -75,7 +75,7 @@ enum custom_state {
 	CUSTOM_OPENED,
 };
 
-#define RCV_BUFFER_NB		2
+#define RCV_BUFFER_NB		16
 
 #define IOH_PHONE_ON		0
 #define IOH_PHONE_OFF		1
@@ -188,9 +188,9 @@ static void fdp_reset(struct fdp_custom_device *p_device)
 		return;
 	}
 
-	/* Reset RST/WakeUP for at least 2 micro-second */
+	/* Reset RST/WakeUP for at least 120 micro-second */
 	gpiod_set_value(p_device->rst_gpio, RST_RESET);
-	udelay(2);
+	udelay(120);
 	gpiod_set_value(p_device->rst_gpio, RST_NO_RESET);
 }
 
@@ -521,6 +521,9 @@ static void fdp_irqout_read(struct fdp_custom_device *p_device)
 			rx_data_length[p_device->next_to_write])) {
 			p_buffer = p_device->rx_buffer[p_device->next_to_write];
 		} else {
+			if (p_device->state == CUSTOM_OPENED)
+				pr_err("fdp_irqout_read: no buffer to store received data\n");
+
 			/* The buffer pool is full - use scratch buffer */
 			p_buffer = p_device->rx_scratch_buffer;
 		}
-- 
1.9.1

