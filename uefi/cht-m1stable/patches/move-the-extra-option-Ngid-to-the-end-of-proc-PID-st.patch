From 57ade43ab7e630740029742e27fd4c6560596b70 Mon Sep 17 00:00:00 2001
From: Wang Xiaoming <xiaoming.wang@intel.com>
Date: Mon, 11 May 2015 14:23:44 +0800
Subject: [PATCH] move the extra option Ngid to the end of proc/PID/status
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Move debugging has been done on the SoFIA project and the
following Kernel issue was found with a number of applications.
Take a look at: (even though the comments are for Weibo.browser
they also pertain to other apps that use Libsecuritysdk-x.x.x.so

SoFIA’s kernel(3.14) is a little different than others,
it will generate /proc/PID/status in this way:
Name: a.weibo.browser
State: T (stopped)
Tgid: 8487
Ngid: 0     ------add by commit e29cf08b05dc0b8151d65704d96d525a9e179a6b from upstream
Pid: 8487
PPid: 139
TracerPid: 0 ---------------------=> line 7
……
But on other kernel, it normally like that:
Name: a.weibo.browser
State: S (sleeping)
Tgid: 2109
Pid: 2109
PPid: 231
TracerPid: 0 -----------------------=> line 6
……

WeiBo always assume the “TracePid” is in line 6 of the status.
And it will read “PPid: 139” instead of “TracePid: 0” in SoFIA,
which will made Weibo to kill the process because there is attached debugger.

CHT has same linux kernel(3.14) as SoFIA.

Change-Id: I97e18217d87d30241aee0e056b67f90c0e9d7fc8
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-25167
Signed-off-by: Schallberger, Timothy M <timothy.m.schallberger@intel.com>
Signed-off-by: Dongxing Zhang <dongxing.zhang@intel.com>
Signed-off-by: Wang Xiaoming <xiaoming.wang@intel.com>
---
 fs/proc/array.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/fs/proc/array.c b/fs/proc/array.c
index baf3464bbce0..91a666eb64eb 100644
--- a/fs/proc/array.c
+++ b/fs/proc/array.c
@@ -174,15 +174,14 @@ static inline void task_state(struct seq_file *m, struct pid_namespace *ns,
 	seq_printf(m,
 		"State:\t%s\n"
 		"Tgid:\t%d\n"
-		"Ngid:\t%d\n"
 		"Pid:\t%d\n"
 		"PPid:\t%d\n"
 		"TracerPid:\t%d\n"
 		"Uid:\t%d\t%d\t%d\t%d\n"
-		"Gid:\t%d\t%d\t%d\t%d\n",
+		"Gid:\t%d\t%d\t%d\t%d\n"
+		"Ngid:\t%d\n",
 		get_task_state(p),
 		task_tgid_nr_ns(p, ns),
-		task_numa_group_id(p),
 		pid_nr_ns(pid, ns),
 		ppid, tpid,
 		from_kuid_munged(user_ns, cred->uid),
@@ -192,7 +191,8 @@ static inline void task_state(struct seq_file *m, struct pid_namespace *ns,
 		from_kgid_munged(user_ns, cred->gid),
 		from_kgid_munged(user_ns, cred->egid),
 		from_kgid_munged(user_ns, cred->sgid),
-		from_kgid_munged(user_ns, cred->fsgid));
+		from_kgid_munged(user_ns, cred->fsgid),
+		task_numa_group_id(p));
 
 	task_lock(p);
 	if (p->files)
-- 
1.9.1

