From f6fe215405a649127a17181f127758a63548efa0 Mon Sep 17 00:00:00 2001
From: Jeremy Rocher <jeremy.rocher@intel.com>
Date: Tue, 14 Apr 2015 18:30:40 +0200
Subject: [PATCH] TCO, intel_warn_int: let the watchdog reboot the platform

TCO watchdog warning interrupt, enabled by CONFIG_INTEL_WARN_INT, will
trigger a panic. Current reboot flow after a panic depends on
"panic_timeout" ("panic" kernel parameter) value.

This is not something we want as reboot flow should not depend on
CONFIG_INTEL_WARN_INT value. This config should only provide more data
in case of watchdog.

Set "panic_timeout" to 0 in order to let the kernel wait forever, let
the watchdog fire and reboot the platform.

Change-Id: Ic5227631c7a9c31497f5b42b0b1b9b47240a30a7
Signed-off-by: Jeremy Rocher <jeremy.rocher@intel.com>
---
 drivers/platform/x86/intel_warn_int.c | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/drivers/platform/x86/intel_warn_int.c b/drivers/platform/x86/intel_warn_int.c
index 024b1da02dd1..aba1ceaa7cab 100644
--- a/drivers/platform/x86/intel_warn_int.c
+++ b/drivers/platform/x86/intel_warn_int.c
@@ -41,6 +41,11 @@ static u32 warn_irq_handler(acpi_handle gpe_device, u32 gpe, void *context)
 	pr_warn("[SHTDWN] %s, WATCHDOG TIMEOUT HANDLER!\n", __func__);
 
 	trigger_all_cpu_backtrace();
+
+	/* Let the tco watchdog reboot the platform */
+	if (panic_timeout)
+		panic_timeout = 0;
+
 	panic("Kernel Watchdog");
 
 	/* This code should not be reached */
-- 
1.9.1

