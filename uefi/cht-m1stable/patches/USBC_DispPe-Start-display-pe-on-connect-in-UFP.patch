From ded14c1e89b38ca1f9aecd546af2109aa467fc6d Mon Sep 17 00:00:00 2001
From: Venkataramana Kotakonda <venkataramana.kotakonda@intel.com>
Date: Mon, 5 Oct 2015 19:23:13 +0530
Subject: [PATCH] USBC_DispPe: Start display pe on connect in UFP

The display policy engine should be started on connect in UFP mode
(port partner is DFP) to provide response to VDMs initiated by
port partner.

Change-Id: I4f98b67940912384463c1cbbdf0c4e9af17b8c9c
Signed-off-by: Venkataramana Kotakonda <venkataramana.kotakonda@intel.com>
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-6025
Reviewed-on: https://android.intel.com:443/419740
---
 drivers/usb/typec/pd/policy_engine.c | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/drivers/usb/typec/pd/policy_engine.c b/drivers/usb/typec/pd/policy_engine.c
index 8582e9d..d802cc7 100644
--- a/drivers/usb/typec/pd/policy_engine.c
+++ b/drivers/usb/typec/pd/policy_engine.c
@@ -720,6 +720,7 @@ static void pe_handle_dpm_event(struct policy_engine *pe,
 {
 	struct policy *p;
 	enum pe_event pevt = PE_EVT_SEND_NONE;
+	int ret;
 
 	pr_info("PE: %s event - %d\n", __func__, evt);
 	switch (evt) {
@@ -736,6 +737,13 @@ static void pe_handle_dpm_event(struct policy_engine *pe,
 			p->start(p);
 		else
 			pr_warn("PE: SINK policy is already active!!!\n");
+
+		/* Start display pe on connect in UFP mode as NAK the
+		 * port partner's DI irrespective of PD status.*/
+		ret = pe_start_policy(pe, POLICY_TYPE_DISPLAY);
+		if (ret)
+			pr_warn("PE:%s: Failed to start disp policy\n",
+					__func__);
 		break;
 	case DEVMGR_EVENT_DFP_CONNECTED:
 		pe_set_power_role(pe, POWER_ROLE_SOURCE);
-- 
1.9.1

