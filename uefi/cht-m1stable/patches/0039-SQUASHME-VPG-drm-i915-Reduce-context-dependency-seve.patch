From daf27e7676a0ce7f6dddfff761e15930d79e46fd Mon Sep 17 00:00:00 2001
Message-Id: <daf27e7676a0ce7f6dddfff761e15930d79e46fd.1431284209.git.chang-joon.lee@intel.com>
In-Reply-To: <89460f3fc3d6c0659d44897a6adec3c3fecc5564.1431284209.git.chang-joon.lee@intel.com>
References: <89460f3fc3d6c0659d44897a6adec3c3fecc5564.1431284209.git.chang-joon.lee@intel.com>
From: John Harrison <John.C.Harrison@Intel.com>
Date: Wed, 1 Apr 2015 13:34:48 +0100
Subject: [PATCH 39/68] SQUASHME! [VPG]: drm/i915: Reduce context dependency
 severity in scheduler

The scheduler keeps batches within the same context in order. However,
it was doing this based on the application level context (which can
span multiple rings) not the hardware level context (which is per
ring). That is, it was forcing in order execution even when batch
buffers were submitted across different rings. This is a change of
behaviour. Before the scheduler, only intra-ring ordering was
enforced. Some of the validation tests started failing or complaining
of unexpected stalls due to this change of behvaiour.

This patch adds in a ring test to the context dependency check, thus
restoring the original behaviour.

This patch could be squashed in to the original scheduler patch that
added the dependency checking:
  commit 130244eba1ea2e5744455be5b6f06afdeece095e
  Author: John Harrison <John.C.Harrison@Intel.com>
  Date:   Tue Apr 1 16:27:39 2014 +0100
  Subject: FOR_UPSTREAM [VPG]: drm/i915: Start of GPU scheduler
  Change-Id: I1e08f59e650a3c2bbaaa9de7627da33849b06106

Change-Id: I42e94d2ae1c22cfa5a030103dd1863d6790a1ec2
For: VIZ-1587
For: VIZ-4741
Signed-off-by: John Harrison <John.C.Harrison@Intel.com>
---
 drivers/gpu/drm/i915/i915_scheduler.c |   13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_scheduler.c b/drivers/gpu/drm/i915/i915_scheduler.c
index a25ff00..e0eb583 100644
--- a/drivers/gpu/drm/i915/i915_scheduler.c
+++ b/drivers/gpu/drm/i915/i915_scheduler.c
@@ -329,8 +329,17 @@ int i915_scheduler_queue_execbuffer(struct i915_scheduler_queue_entry *qe)
 				if (I915_SQS_IS_COMPLETE(test))
 					continue;
 
-				found = (node->params.ctx == test->params.ctx);
-
+				/*
+				 * Batches on the same ring for the same
+				 * context must be kept in order.
+				 */
+				found = (node->params.ctx == test->params.ctx) &&
+					(node->params.ring == test->params.ring);
+
+				/*
+				 * Batches working on the same objects must
+				 * be kept in order.
+				 */
 				for (i = 0; (i < node->num_objs) && !found; i++) {
 					for (j = 0; j < test->num_objs; j++) {
 						if (node->saved_objects[i].obj !=
-- 
1.7.9.5

