From 3077252d9269fa50e345efdda3637bf4d68f11d4 Mon Sep 17 00:00:00 2001
From: "Cao,Bing Bu" <bingbu.cao@intel.com>
Date: Thu, 16 Jul 2015 11:57:40 +0000
Subject: [PATCH 453/462] atomisp2: correct userspace access in
 atomisp_compat_ioctl32

In get_atomisp_parameters32(), the driver will access
the userspace address by up->xxxx directly.

This patch fix this issue.

Change-Id: Ia41b92d6f1e4d942c97b08fd753b46724bba7de0
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-40936
Signed-off-by: Cao,Bing Bu <bingbu.cao@intel.com>
Reviewed-on: https://icggerrit.ir.intel.com/65260
Build: IMIN (SC)
Approver: Jian Xu Zheng <jian.xu.zheng@intel.com>
Reviewed-by: Jian Xu Zheng <jian.xu.zheng@intel.com>
Integrator: WeiX Meng <weix.meng@intel.com>
Build: WeiX Meng <weix.meng@intel.com>
Reviewed-by: WeiX Meng <weix.meng@intel.com>
Maintainer: WeiX Meng <weix.meng@intel.com>
---
 .../atomisp_driver/atomisp_compat_ioctl32.c        | 24 ++++++++++++++--------
 1 file changed, 15 insertions(+), 9 deletions(-)

diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_compat_ioctl32.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_compat_ioctl32.c
index 64de0b0..1da90d9 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_compat_ioctl32.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_compat_ioctl32.c
@@ -695,6 +695,8 @@ static int get_atomisp_parameters32(struct atomisp_parameters *kp,
 				sizeof(compat_uptr_t);
 	unsigned int size, offset = 0;
 	void  __user *user_ptr;
+	unsigned int stp, mtp, dcp, dscp = 0;
+
 	if (!access_ok(VERIFY_READ, up, sizeof(struct atomisp_parameters32)))
 			return -EFAULT;
 
@@ -707,7 +709,11 @@ static int get_atomisp_parameters32(struct atomisp_parameters *kp,
 		n--;
 	}
 	if (get_user(kp->isp_config_id, &up->isp_config_id) ||
-	    get_user(kp->per_frame_setting, &up->per_frame_setting))
+	    get_user(kp->per_frame_setting, &up->per_frame_setting) ||
+	    get_user(stp, &up->shading_table) ||
+	    get_user(mtp, &up->morph_table) ||
+	    get_user(dcp, &up->dvs2_coefs) ||
+	    get_user(dscp, &up->dvs_6axis_config))
 		return -EFAULT;
 
 	{
@@ -725,10 +731,10 @@ static int get_atomisp_parameters32(struct atomisp_parameters *kp,
 		user_ptr = compat_alloc_user_space(size);
 
 		/* handle shading table */
-		if (up->shading_table != 0) {
+		if (stp != 0) {
 			if (get_atomisp_shading_table32(&karg.shading_table,
 				(struct atomisp_shading_table32 __user *)
-						(uintptr_t)up->shading_table))
+						(uintptr_t)stp))
 				return -EFAULT;
 
 			kp->shading_table = user_ptr + offset;
@@ -743,10 +749,10 @@ static int get_atomisp_parameters32(struct atomisp_parameters *kp,
 		}
 
 		/* handle morph table */
-		if (up->morph_table != 0) {
+		if (mtp != 0) {
 			if (get_atomisp_morph_table32(&karg.morph_table,
 					(struct atomisp_morph_table32 __user *)
-						(uintptr_t)up->morph_table))
+						(uintptr_t)mtp))
 				return -EFAULT;
 
 			kp->morph_table = user_ptr + offset;
@@ -760,10 +766,10 @@ static int get_atomisp_parameters32(struct atomisp_parameters *kp,
 		}
 
 		/* handle dvs2 coefficients */
-		if (up->dvs2_coefs != 0) {
+		if (dcp != 0) {
 			if (get_atomisp_dis_coefficients32(&karg.dvs2_coefs,
 				(struct atomisp_dis_coefficients32 __user *)
-						(uintptr_t)up->dvs2_coefs))
+						(uintptr_t)dcp))
 				return -EFAULT;
 
 			kp->dvs2_coefs = user_ptr + offset;
@@ -776,10 +782,10 @@ static int get_atomisp_parameters32(struct atomisp_parameters *kp,
 				return -EFAULT;
 		}
 		/* handle dvs 6axis configuration */
-		if (up->dvs_6axis_config != 0) {
+		if (dscp != 0) {
 			if (get_atomisp_dvs_6axis_config32(&karg.dvs_6axis_config,
 				(struct atomisp_dvs_6axis_config32 __user *)
-						(uintptr_t)up->dvs_6axis_config))
+						(uintptr_t)dscp))
 				return -EFAULT;
 
 			kp->dvs_6axis_config = user_ptr + offset;
-- 
1.9.1

