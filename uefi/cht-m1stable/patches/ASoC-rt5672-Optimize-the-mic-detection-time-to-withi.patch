From e67d0242649041f9f2a971cd4b22958a779cd030 Mon Sep 17 00:00:00 2001
From: Bard Liao <bardliao@realtek.com>
Date: Thu, 12 Feb 2015 16:00:58 +0530
Subject: [PATCH] ASoC: rt5672: Optimize the mic detection time to within 30 ms

Issue: GMINL-6915

The mic detection delay time is now optimized
to within 30 ms for rt5670 codec

Change-Id: I84f65b409fe34ceef6b20b26ad9d28a6818b47db
Signed-off-by: Divya Prakash <divya1.prakash@intel.com>
---
 sound/soc/codecs/rt5670.c                  | 49 ++++++++++++++++++++++--------
 sound/soc/codecs/rt5670.h                  |  8 +++++
 sound/soc/intel/board/cht_bl_dpcm_rt5672.c |  9 ++++++
 3 files changed, 54 insertions(+), 12 deletions(-)

diff --git a/sound/soc/codecs/rt5670.c b/sound/soc/codecs/rt5670.c
index 5bb1535..c854b1d 100644
--- a/sound/soc/codecs/rt5670.c
+++ b/sound/soc/codecs/rt5670.c
@@ -502,13 +502,14 @@ static int rt5670_readable_register(
 int rt5670_headset_detect(struct snd_soc_codec *codec, int jack_insert)
 {
 	int val;
+	int i = 0, sleep_time[5] = {10, 5, 5, 5, 5};
 	struct rt5670_priv *rt5670 = snd_soc_codec_get_drvdata(codec);
 
 	if (jack_insert) {
-		snd_soc_update_bits(codec, RT5670_GEN_CTRL3, 0x4, 0x0);
-		snd_soc_update_bits(codec, RT5670_CJ_CTRL2,
-			RT5670_CBJ_DET_MODE | RT5670_CBJ_MN_JD,
-			RT5670_CBJ_MN_JD);
+		rt5670_index_update_bits(codec, RT5670_REC_R2_MIXER, 0x40, 0x0);
+		snd_soc_update_bits(codec, RT5670_MICBIAS, 0x10, 0x10);
+		snd_soc_update_bits(codec, RT5670_GEN_CTRL3, 0x4, 0x4);
+
 		snd_soc_update_bits(codec, RT5670_PWR_ANLG2,
 			RT5670_PWR_JD1, RT5670_PWR_JD1);
 		snd_soc_update_bits(codec, RT5670_DIG_MISC, 0x1, 0x1);
@@ -517,16 +518,28 @@ int rt5670_headset_detect(struct snd_soc_codec *codec, int jack_insert)
 			RT5670_GP1_PIN_MASK, RT5670_GP1_PIN_IRQ);
 		snd_soc_update_bits(codec, RT5670_CJ_CTRL1,
 			RT5670_CBJ_BST1_EN, RT5670_CBJ_BST1_EN);
+		if (rt5670->hs_type == RT5670_HS_RING4_MICBIAS2)
+			snd_soc_write(codec, RT5670_CJ_CTRL2, 0x0b27);
+		else
+			snd_soc_write(codec, RT5670_CJ_CTRL2, 0x0d27);
+
 		snd_soc_write(codec, RT5670_JD_CTRL3, 0x00f0);
-		snd_soc_update_bits(codec, RT5670_CJ_CTRL2,
-			RT5670_CBJ_MN_JD, RT5670_CBJ_MN_JD);
-		snd_soc_update_bits(codec, RT5670_CJ_CTRL2,
-			RT5670_CBJ_MN_JD, 0);
-		msleep(300);
-		val = snd_soc_read(codec, RT5670_CJ_CTRL3) & 0x7;
-		pr_debug("val = %d\n", val);
-		if (val == 0x1 || val == 0x2) {
+		snd_soc_write(codec, RT5670_IL_CMD, 0x0059);
+		val = snd_soc_read(codec, RT5670_IL_CMD);
+		snd_soc_write(codec, RT5670_IL_CMD, val);
+		while (i < 5) {
+			msleep(sleep_time[i]);
+			val = snd_soc_read(codec, RT5670_IL_CMD);
+			snd_soc_write(codec, RT5670_IL_CMD, val);
+			pr_debug("%d sleep %d\n", i, sleep_time[i]);
+			i++;
+			if (val == 0x0059) /* Headset is detected */
+				break;
+		}
+
+		if (val == 0x0059) {
 			rt5670->jack_type = SND_JACK_HEADSET;
+			/* for push button */
 			snd_soc_update_bits(codec, RT5670_INT_IRQ_ST, 0x8, 0x8);
 			snd_soc_update_bits(codec, RT5670_IL_CMD, 0x40, 0x40);
 			snd_soc_read(codec, RT5670_IL_CMD);
@@ -534,6 +547,9 @@ int rt5670_headset_detect(struct snd_soc_codec *codec, int jack_insert)
 			snd_soc_update_bits(codec, RT5670_GEN_CTRL3, 0x4, 0x4);
 			rt5670->jack_type = SND_JACK_HEADPHONE;
 		}
+		rt5670_index_update_bits(codec, 0x3e, 0x40, 0x40);
+		snd_soc_update_bits(codec, RT5670_MICBIAS, 0x10, 0x0);
+		snd_soc_update_bits(codec, RT5670_IL_CMD, 0x1f, 0x0);
 	} else {
 		snd_soc_update_bits(codec, RT5670_INT_IRQ_ST, 0x8, 0x0);
 		rt5670->jack_type = 0;
@@ -623,6 +639,15 @@ int rt5670_check_bp_status(struct snd_soc_codec *codec)
 }
 EXPORT_SYMBOL(rt5670_check_bp_status);
 
+void rt5670_supported_hs_type(struct snd_soc_codec *codec, int type)
+{
+	struct rt5670_priv *rt5670 = snd_soc_codec_get_drvdata(codec);
+
+	rt5670->hs_type = type;
+}
+EXPORT_SYMBOL(rt5670_supported_hs_type);
+
+
 static const DECLARE_TLV_DB_SCALE(out_vol_tlv, -4650, 150, 0);
 static const DECLARE_TLV_DB_SCALE(dac_vol_tlv, -65625, 375, 0);
 static const DECLARE_TLV_DB_SCALE(in_vol_tlv, -3450, 150, 0);
diff --git a/sound/soc/codecs/rt5670.h b/sound/soc/codecs/rt5670.h
index 35cff82..56b2697dfb 100644
--- a/sound/soc/codecs/rt5670.h
+++ b/sound/soc/codecs/rt5670.h
@@ -1967,6 +1967,11 @@ enum {
 };
 
 enum {
+	RT5670_HS_RING4_MICBIAS2,
+	RT5670_HS_RING4_MICBIAS1,
+};
+
+enum {
 	RT5670_BTN_EVENT = BIT(0), /* Jack evulse */
 	RT5670_BR_EVENT = BIT(1), /* Button Release */
 	RT5670_J_IN_EVENT = BIT(2), /* Jack insert */
@@ -2000,6 +2005,9 @@ struct rt5670_priv {
 	bool combo_jack_en;
 	int dsp_sw; /* expected parameter setting */
 	int jack_type;
+	int hs_type;
 };
 
+void rt5670_supported_hs_type(struct snd_soc_codec *codec, int type);
+
 #endif /* __RT5670_H__ */
diff --git a/sound/soc/intel/board/cht_bl_dpcm_rt5672.c b/sound/soc/intel/board/cht_bl_dpcm_rt5672.c
index e1109cf..5d22a2d 100644
--- a/sound/soc/intel/board/cht_bl_dpcm_rt5672.c
+++ b/sound/soc/intel/board/cht_bl_dpcm_rt5672.c
@@ -127,6 +127,7 @@ static int cht_check_jack_type(struct snd_soc_jack *jack,
 					struct snd_soc_codec *codec)
 {
 	int status, jack_type = 0;
+	const char *board_name;
 	struct cht_mc_private *ctx = container_of(jack,
 					struct cht_mc_private, jack);
 
@@ -138,6 +139,14 @@ static int cht_check_jack_type(struct snd_soc_jack *jack,
 		accessory is detected as headset*/
 		ctx->process_button_events = false;
 		cht_set_codec_power(codec, SND_JACK_HEADSET);
+		board_name = dmi_get_system_info(DMI_BOARD_NAME);
+		if (strcmp(board_name, "Cherry Trail Tablet") == 0) {
+			rt5670_supported_hs_type(codec,
+					RT5670_HS_RING4_MICBIAS2);
+		} else if (strcmp(board_name, "Cherry Trail FFD") == 0) {
+			rt5670_supported_hs_type(codec,
+					RT5670_HS_RING4_MICBIAS1);
+		}
 		jack_type = rt5670_headset_detect(codec, true);
 		if (jack_type == SND_JACK_HEADSET) {
 			ctx->process_button_events = true;
-- 
1.9.1

