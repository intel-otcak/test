From fb3f6ccd5b6bdae7a25311721e1f7a15495f8b62 Mon Sep 17 00:00:00 2001
From: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@intel.com>
Date: Mon, 30 Jun 2014 17:36:07 -0700
Subject: [REVERTME] power: use acpi id pointer for driver data.

During the i2c device probe, sometimes i2c_device_id is
set NULL, which causes panic due to missing driver data.
So adding explicit acpi calls to get the acpi_device_id.

Signed-off-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@intel.com>
---
 drivers/power/bq24192_charger.c |   36 +++++++++++++++++++++---------------
 1 file changed, 21 insertions(+), 15 deletions(-)

diff --git a/drivers/power/bq24192_charger.c b/drivers/power/bq24192_charger.c
index 977b453..0480bbd 100644
--- a/drivers/power/bq24192_charger.c
+++ b/drivers/power/bq24192_charger.c
@@ -1037,9 +1037,14 @@ EXPORT_SYMBOL(bq24192_vbus_disable);
 
 int bq24192_vbus_status(void)
 {
-	struct bq24192_chip *chip = i2c_get_clientdata(bq24192_client);
+	struct bq24192_chip *chip;;
 	int val;
 
+	if (!bq24192_client)
+		return -ENODEV;
+
+	chip = i2c_get_clientdata(bq24192_client);
+
 	val = bq24192_read_reg(chip->client, BQ24192_SYSTEM_STAT_REG);
 	if (val < 0) {
 		dev_warn(&chip->client->dev, "System Status reg read fail\n");
@@ -2072,7 +2077,20 @@ static int bq24192_probe(struct i2c_client *client,
 
 	chip->client = client;
 #ifdef CONFIG_ACPI
-	chip->pdata = (struct bq24192_platform_data *)id->driver_data;
+	dev = &client->dev;
+	if (!ACPI_HANDLE(dev)) {
+		i2c_set_clientdata(client, NULL);
+		kfree(chip);
+		return -ENODEV;
+	}
+	acpi_id = acpi_match_device(dev->driver->acpi_match_table, dev);
+	if (!acpi_id) {
+		i2c_set_clientdata(client, NULL);
+		kfree(chip);
+		return -ENODEV;
+	}
+
+	chip->pdata = (struct bq24192_platform_data *)acpi_id->driver_data;
 #else
 	chip->pdata = client->dev.platform_data;
 #endif
@@ -2120,19 +2138,7 @@ static int bq24192_probe(struct i2c_client *client,
 	 * interrupts
 	 */
 #ifdef CONFIG_ACPI
-	dev = &client->dev;
-	if (!ACPI_HANDLE(dev)) {
-		i2c_set_clientdata(client, NULL);
-		kfree(chip);
-		return -ENODEV;
-	}
-	acpi_id = acpi_match_device(dev->driver->acpi_match_table, dev);
-	if (!acpi_id) {
-		i2c_set_clientdata(client, NULL);
-		kfree(chip);
-		return -ENODEV;
-	}
-	gpio = devm_gpiod_get_index(dev, "jsa1212_int", 0);
+	gpio = devm_gpiod_get_index(dev, "bq24192_int", 0);
 	if (IS_ERR(gpio)) {
 		dev_err(dev, "acpi gpio get index failed\n");
 		i2c_set_clientdata(client, NULL);
-- 
1.7.9.5

