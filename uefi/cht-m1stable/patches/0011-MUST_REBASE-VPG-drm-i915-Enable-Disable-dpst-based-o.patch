From d9e11f5e8f6c27c5cb543509071c76aa20f6a76e Mon Sep 17 00:00:00 2001
Message-Id: <d9e11f5e8f6c27c5cb543509071c76aa20f6a76e.1423872525.git.feitong.yi@intel.com>
In-Reply-To: <3062c7e6b919c393846ff0e13558e7f648b352ca.1423872525.git.feitong.yi@intel.com>
References: <3062c7e6b919c393846ff0e13558e7f648b352ca.1423872525.git.feitong.yi@intel.com>
From: Deepak S <deepak.s@intel.com>
Date: Sat, 27 Dec 2014 16:07:10 +0530
Subject: [PATCH 11/95] MUST_REBASE [VPG]: drm/i915: Enable/Disable dpst based
 on encoder type

DPST is only supported on internal panels. With current design, we call
dpst on/off even for HDMI modeset (external display) This patch checks
encoder type and all dpst on/off only for Local Panel otherwise ignore

MUST_REBASE: DPST feature will not be upstreamed.

v2: Check for supported display (Jon)

Issue: GMIN-3621
Change-Id: I64c0becb3901806808d2f7c21790e9136c23e06d
Signed-off-by: Deepak S <deepak.s@intel.com>
---
 drivers/gpu/drm/i915/intel_display.c |   37 +++++++++++++++++++++++++---------
 1 file changed, 28 insertions(+), 9 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index 2d2d85e..8766954 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -4836,8 +4836,13 @@ static void haswell_crtc_enable(struct drm_crtc *crtc)
 
 	drm_crtc_vblank_on(crtc);
 
-	if (I915_HAS_DPST(dev))
-		i915_dpst_display_on(dev);
+	if (I915_HAS_DPST(dev)) {
+		for_each_encoder_on_crtc(dev, crtc, encoder) {
+			if (encoder->type == INTEL_OUTPUT_EDP ||
+			    encoder->type == INTEL_OUTPUT_DSI)
+				i915_dpst_display_on(dev);
+		}
+	}
 }
 
 static void ironlake_pfit_disable(struct intel_crtc *crtc)
@@ -4932,9 +4937,13 @@ static void haswell_crtc_disable(struct drm_crtc *crtc)
 	if (!intel_crtc->active)
 		return;
 
-	if (I915_HAS_DPST(dev))
-		i915_dpst_display_off(dev);
-
+	if (I915_HAS_DPST(dev)) {
+		for_each_encoder_on_crtc(dev, crtc, encoder) {
+			if (encoder->type == INTEL_OUTPUT_EDP ||
+			    encoder->type == INTEL_OUTPUT_DSI)
+				i915_dpst_display_off(dev);
+		}
+	}
 	intel_crtc_disable_planes(crtc);
 
 	for_each_encoder_on_crtc(dev, crtc, encoder) {
@@ -5456,8 +5465,13 @@ static void valleyview_crtc_enable(struct drm_crtc *crtc)
 	drm_crtc_vblank_on(crtc);
 
 	/* Update DPST context after mode change */
-	if (I915_HAS_DPST(dev))
-		i915_dpst_display_on(dev);
+	if (I915_HAS_DPST(dev)) {
+		for_each_encoder_on_crtc(dev, crtc, encoder) {
+			if (encoder->type == INTEL_OUTPUT_EDP ||
+			    encoder->type == INTEL_OUTPUT_DSI)
+				i915_dpst_display_on(dev);
+		}
+	}
 
 	/* Underruns don't raise interrupts, so check manually. */
 	i9xx_check_fifo_underruns(dev);
@@ -5665,8 +5679,13 @@ static void i9xx_crtc_disable(struct drm_crtc *crtc)
 	if (IS_VALLEYVIEW(dev))
 		intel_vlv_edp_psr_disable(dev);
 
-	if (I915_HAS_DPST(dev))
-		i915_dpst_display_off(dev);
+	if (I915_HAS_DPST(dev)) {
+		for_each_encoder_on_crtc(dev, crtc, encoder) {
+			if (encoder->type == INTEL_OUTPUT_EDP ||
+			    encoder->type == INTEL_OUTPUT_DSI)
+				i915_dpst_display_off(dev);
+		}
+	}
 
 	for_each_encoder_on_crtc(dev, crtc, encoder)
 		encoder->disable(encoder);
-- 
1.7.9.5

