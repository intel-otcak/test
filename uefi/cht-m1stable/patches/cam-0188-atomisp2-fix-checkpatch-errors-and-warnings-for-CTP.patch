From 89603aec9a4bb5e00f298a5ed1c4a57dd485d520 Mon Sep 17 00:00:00 2001
From: Bin Han <bin.b.han@intel.com>
Date: Fri, 26 Dec 2014 17:00:32 +0800
Subject: [PATCH 188/196] atomisp2: fix checkpatch errors and warnings for CTP

This patch intends to fix most of the checkpatch errors and warnings
for the CTP specific driver.

Change-Id: I941c8d97fdbec5ca3804fb7305ba1cc219d057ae
Tracked-On: https://hsdes.intel.com/home/default.html#article?id=1503901208
Signed-off-by: Bin Han <bin.b.han@intel.com>
Reviewed-on: https://icggerrit.ir.intel.com/34313
Approver: Wei Tao <wei.tao@intel.com>
Reviewed-by: Wei Tao <wei.tao@intel.com>
---
 .../atomisp2/atomisp_driver_css15/atomisp_acc.c    |   3 +-
 .../atomisp2/atomisp_driver_css15/atomisp_cmd.c    | 275 ++++++++++-----------
 .../atomisp_driver_css15/atomisp_compat_css15.h    |   5 +-
 .../atomisp_driver_css15/atomisp_compat_css20.c    | 113 +--------
 .../atomisp_driver_css15/atomisp_compat_css20.h    |   3 +-
 .../atomisp_driver_css15/atomisp_compat_ioctl32.c  |   2 +-
 .../atomisp_driver_css15/atomisp_compat_ioctl32.h  |   2 +-
 .../atomisp2/atomisp_driver_css15/atomisp_fops.c   |  27 +-
 .../atomisp_driver_css15/atomisp_internal.h        |   7 +-
 .../atomisp2/atomisp_driver_css15/atomisp_ioctl.c  |  17 +-
 .../atomisp_driver_css15/atomisp_trace_event.h     |   2 +-
 .../atomisp2/atomisp_driver_css15/atomisp_v4l2.c   |  18 +-
 .../pci/atomisp2/atomisp_driver_css15/hmm/hmm_bo.c |   6 +-
 .../atomisp2/atomisp_driver_css15/hmm/hmm_bo_dev.c |   5 +-
 .../atomisp_driver_css15/hrt/memory_access.c       |   6 +-
 .../atomisp_driver_css15/include/hmm/hmm_bo_dev.h  |   2 +-
 .../atomisp_driver_css15/include/hmm/hmm_pool.h    |   4 +-
 .../atomisp2/atomisp_driver_css15/mmu/isp_mmu.c    |   1 -
 18 files changed, 183 insertions(+), 315 deletions(-)

diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_acc.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_acc.c
index 039c014..5872ac5 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_acc.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_acc.c
@@ -456,7 +456,8 @@ int atomisp_acc_load_extensions(struct atomisp_sub_device *asd)
 		for (i = 0; i < ARRAY_SIZE(acc_flag_to_pipe); i++) {
 			if (acc_fw->flags & acc_flag_to_pipe[i].flag) {
 				ret = atomisp_css_load_acc_extension(asd,
-					acc_fw->fw,acc_flag_to_pipe[i].pipe_id,
+					acc_fw->fw,
+					acc_flag_to_pipe[i].pipe_id,
 					acc_fw->type);
 				if (ret) {
 					i--;
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_cmd.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_cmd.c
index 5d6d688..0130f64a 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_cmd.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_cmd.c
@@ -292,8 +292,8 @@ static int write_target_freq_to_hw(struct atomisp_device *isp,
 	timeout = 10;
 	while (((isp_sspm1 >> ISP_FREQ_STAT_OFFSET) != ratio) && timeout) {
 		isp_sspm1 = intel_mid_msgbus_read32(PUNIT_PORT, ISPSSPM1);
-		dev_dbg(isp->dev, "waiting for ISPSSPM1 status bit to be "
-				"0x%x.\n", new_freq);
+		dev_dbg(isp->dev, "waiting for ISPSSPM1 status bit to be 0x%x.\n",
+			new_freq);
 		udelay(100);
 		timeout--;
 	}
@@ -928,153 +928,148 @@ void atomisp_buf_done(struct atomisp_sub_device *asd, int error,
 	}
 
 	switch (buf_type) {
-		case CSS_BUFFER_TYPE_3A_STATISTICS:
-			/* ignore error in case of 3a statistics for now */
-			if (isp->sw_contex.invalid_s3a) {
-				requeue = true;
-				isp->sw_contex.invalid_s3a = 0;
-				break;
-			}
-			/* update the 3A data to ISP context */
-			if (!error)
-				atomisp_css_get_3a_statistics(asd, &buffer);
+	case CSS_BUFFER_TYPE_3A_STATISTICS:
+		/* ignore error in case of 3a statistics for now */
+		if (isp->sw_contex.invalid_s3a) {
+			requeue = true;
+			isp->sw_contex.invalid_s3a = 0;
+			break;
+		}
+		/* update the 3A data to ISP context */
+		if (!error)
+			atomisp_css_get_3a_statistics(asd, &buffer);
 
-			asd->s3a_bufs_in_css[css_pipe_id]--;
+		asd->s3a_bufs_in_css[css_pipe_id]--;
 
-			atomisp_3a_stats_ready_event(asd);
+		atomisp_3a_stats_ready_event(asd);
+		break;
+	case CSS_BUFFER_TYPE_DIS_STATISTICS:
+		/* ignore error in case of dis statistics for now */
+		if (isp->sw_contex.invalid_dis) {
+			requeue = true;
+			isp->sw_contex.invalid_dis = 0;
 			break;
-		case CSS_BUFFER_TYPE_DIS_STATISTICS:
-			/* ignore error in case of dis statistics for now */
-			if (isp->sw_contex.invalid_dis) {
-				requeue = true;
-				isp->sw_contex.invalid_dis = 0;
-				break;
-			}
-			if (!error)
-				atomisp_css_get_dis_statistics(asd, &buffer);
+		}
+		if (!error)
+			atomisp_css_get_dis_statistics(asd, &buffer);
 
-			asd->dis_bufs_in_css--;
-			break;
-		case CSS_BUFFER_TYPE_VF_OUTPUT_FRAME:
-			if (isp->sw_contex.invalid_vf_frame) {
-				error = true;
-				isp->sw_contex.invalid_vf_frame = 0;
-				dev_dbg(isp->dev, "%s css has marked this "
-					"vf frame as invalid\n", __func__);
-			}
+		asd->dis_bufs_in_css--;
+		break;
+	case CSS_BUFFER_TYPE_VF_OUTPUT_FRAME:
+		if (isp->sw_contex.invalid_vf_frame) {
+			error = true;
+			isp->sw_contex.invalid_vf_frame = 0;
+			dev_dbg(isp->dev, "%s css has marked this vf frame as invalid\n",
+				__func__);
+		}
 
-			pipe->buffers_in_css--;
-			frame = buffer.css_buffer.data.frame;
-			if (!frame) {
-				WARN_ON(1);
-				break;
-			}
+		pipe->buffers_in_css--;
+		frame = buffer.css_buffer.data.frame;
+		if (!frame) {
+			WARN_ON(1);
+			break;
+		}
 #ifdef CSS20
-			if (!frame->valid)
-				error = true;
+		if (!frame->valid)
+			error = true;
 #endif
 
-			if (asd->params.flash_state ==
-			    ATOMISP_FLASH_ONGOING) {
-				if (frame->flash_state
-				    == CSS_FRAME_FLASH_STATE_PARTIAL)
-					dev_dbg(isp->dev, "%s thumb partially "
-						"flashed\n", __func__);
-				else if (frame->flash_state
-					 == CSS_FRAME_FLASH_STATE_FULL)
-					dev_dbg(isp->dev, "%s thumb completely "
-						"flashed\n", __func__);
-				else
-					dev_dbg(isp->dev, "%s thumb no flash "
-						"in this frame\n", __func__);
-			}
-			vb = atomisp_css_frame_to_vbuf(pipe, frame);
-			WARN_ON(!vb);
+		if (asd->params.flash_state ==
+		    ATOMISP_FLASH_ONGOING) {
+			if (frame->flash_state
+			    == CSS_FRAME_FLASH_STATE_PARTIAL)
+				dev_dbg(isp->dev, "%s thumb partially flashed\n",
+					__func__);
+			else if (frame->flash_state
+				 == CSS_FRAME_FLASH_STATE_FULL)
+				dev_dbg(isp->dev, "%s thumb completely flashed\n",
+					__func__);
+			else
+				dev_dbg(isp->dev, "%s thumb no flash in this frame\n",
+					__func__);
+		}
+		vb = atomisp_css_frame_to_vbuf(pipe, frame);
+		WARN_ON(!vb);
+		break;
+	case CSS_BUFFER_TYPE_OUTPUT_FRAME:
+		if (isp->sw_contex.invalid_frame) {
+			error = true;
+			isp->sw_contex.invalid_frame = 0;
+			dev_dbg(isp->dev, "%s css has marked this frame as invalid\n",
+				__func__);
+		}
+		pipe->buffers_in_css--;
+		frame = buffer.css_buffer.data.frame;
+		if (!frame) {
+			WARN_ON(1);
 			break;
-		case CSS_BUFFER_TYPE_OUTPUT_FRAME:
-			if (isp->sw_contex.invalid_frame) {
-				error = true;
-				isp->sw_contex.invalid_frame = 0;
-				dev_dbg(isp->dev, "%s css has marked this "
-					"frame as invalid\n", __func__);
-			}
-			pipe->buffers_in_css--;
-			frame = buffer.css_buffer.data.frame;
-			if (!frame) {
-				WARN_ON(1);
-				break;
-			}
+		}
 
 #ifdef CSS20
-			if (!frame->valid)
-				error = true;
+		if (!frame->valid)
+			error = true;
 #endif
-			vb = atomisp_css_frame_to_vbuf(pipe, frame);
-			if (!vb) {
-				WARN_ON(1);
-				break;
-			}
+		vb = atomisp_css_frame_to_vbuf(pipe, frame);
+		if (!vb) {
+			WARN_ON(1);
+			break;
+		}
 
-			if (asd->params.flash_state ==
-			    ATOMISP_FLASH_ONGOING) {
-				if (frame->flash_state
-				    == CSS_FRAME_FLASH_STATE_PARTIAL) {
-					asd->frame_status[vb->i] =
-						ATOMISP_FRAME_STATUS_FLASH_PARTIAL;
-					dev_dbg(isp->dev,
-						 "%s partially flashed\n",
-						 __func__);
-				} else if (frame->flash_state
-					   == CSS_FRAME_FLASH_STATE_FULL) {
-					asd->frame_status[vb->i] =
-						ATOMISP_FRAME_STATUS_FLASH_EXPOSED;
-					asd->params.num_flash_frames--;
-					dev_dbg(isp->dev,
-						 "%s completely flashed\n",
+		if (asd->params.flash_state ==
+		    ATOMISP_FLASH_ONGOING) {
+			if (frame->flash_state
+			    == CSS_FRAME_FLASH_STATE_PARTIAL) {
+				asd->frame_status[vb->i] =
+					ATOMISP_FRAME_STATUS_FLASH_PARTIAL;
+				dev_dbg(isp->dev, "%s partially flashed\n",
+					 __func__);
+			} else if (frame->flash_state
+				   == CSS_FRAME_FLASH_STATE_FULL) {
+				asd->frame_status[vb->i] =
+					ATOMISP_FRAME_STATUS_FLASH_EXPOSED;
+				asd->params.num_flash_frames--;
+				dev_dbg(isp->dev, "%s completely flashed\n",
 						 __func__);
 				} else {
 					asd->frame_status[vb->i] =
 						ATOMISP_FRAME_STATUS_OK;
-					dev_dbg(isp->dev,
-						 "%s no flash in this frame\n",
+					dev_dbg(isp->dev, "%s no flash in this frame\n",
 						 __func__);
 				}
 
-				/* Check if flashing sequence is done */
-				if (asd->frame_status[vb->i] ==
-					ATOMISP_FRAME_STATUS_FLASH_EXPOSED)
-					asd->params.flash_state =
-						ATOMISP_FLASH_DONE;
-			} else {
-				asd->frame_status[vb->i] =
-					ATOMISP_FRAME_STATUS_OK;
-			}
+			/* Check if flashing sequence is done */
+			if (asd->frame_status[vb->i] ==
+				ATOMISP_FRAME_STATUS_FLASH_EXPOSED)
+				asd->params.flash_state =
+					ATOMISP_FLASH_DONE;
+		} else {
+			asd->frame_status[vb->i] =
+				ATOMISP_FRAME_STATUS_OK;
+		}
 
-			asd->params.last_frame_status =
-				asd->frame_status[vb->i];
-
-			if (asd->continuous_mode->val) {
-				unsigned int exp_id = frame->exp_id;
-
-				if (css_pipe_id == CSS_PIPE_ID_PREVIEW ||
-				    css_pipe_id == CSS_PIPE_ID_VIDEO) {
-					asd->latest_preview_exp_id = exp_id;
-				} else if (css_pipe_id ==
-						CSS_PIPE_ID_CAPTURE) {
-					if (asd->run_mode->val ==
-					    ATOMISP_RUN_MODE_VIDEO)
-					    dev_dbg(isp->dev,
-						    "SDV capture raw buffer id: %u\n",
-						    exp_id);
-					else
-					    dev_dbg(isp->dev,
-						    "ZSL capture raw buffer id: %u\n",
-						    exp_id);
-				}
+		asd->params.last_frame_status =
+			asd->frame_status[vb->i];
+
+		if (asd->continuous_mode->val) {
+			unsigned int exp_id = frame->exp_id;
+
+			if (css_pipe_id == CSS_PIPE_ID_PREVIEW ||
+			    css_pipe_id == CSS_PIPE_ID_VIDEO) {
+				asd->latest_preview_exp_id = exp_id;
+			} else if (css_pipe_id ==
+					CSS_PIPE_ID_CAPTURE) {
+				if (asd->run_mode->val ==
+				    ATOMISP_RUN_MODE_VIDEO)
+					dev_dbg(isp->dev, "SDV capture raw buffer id: %u\n",
+						exp_id);
+				else
+					dev_dbg(isp->dev, "ZSL capture raw buffer id: %u\n",
+						exp_id);
 			}
-			break;
-		default:
-			break;
+		}
+		break;
+	default:
+		break;
 	}
 	if (vb) {
 		get_buf_timestamp(&vb->ts);
@@ -3918,13 +3913,13 @@ int atomisp_set_fmt(struct video_device *vdev, struct v4l2_format *f)
 			r.height = f->fmt.pix.height;
 
 			if (source_pad == ATOMISP_SUBDEV_PAD_SOURCE_PREVIEW)
-			    capture_comp = atomisp_subdev_get_rect(
+				capture_comp = atomisp_subdev_get_rect(
 					&asd->subdev, NULL,
 					V4L2_SUBDEV_FORMAT_ACTIVE,
 					ATOMISP_SUBDEV_PAD_SOURCE_VIDEO,
 					V4L2_SEL_TGT_COMPOSE);
 			else
-			    capture_comp = atomisp_subdev_get_rect(
+				capture_comp = atomisp_subdev_get_rect(
 					&asd->subdev, NULL,
 					V4L2_SUBDEV_FORMAT_ACTIVE,
 					ATOMISP_SUBDEV_PAD_SOURCE_CAPTURE,
@@ -4472,17 +4467,17 @@ int atomisp_source_pad_to_stream_id(struct atomisp_sub_device *asd,
 		stream_id = ATOMISP_INPUT_STREAM_VIDEO;
 	else {
 		switch (source_pad) {
-			case ATOMISP_SUBDEV_PAD_SOURCE_CAPTURE:
-				stream_id = ATOMISP_INPUT_STREAM_CAPTURE;
-				break;
-			case ATOMISP_SUBDEV_PAD_SOURCE_VF:
-				stream_id = ATOMISP_INPUT_STREAM_POSTVIEW;
-				break;
-			case ATOMISP_SUBDEV_PAD_SOURCE_PREVIEW:
-				stream_id = ATOMISP_INPUT_STREAM_PREVIEW;
-				break;
-			default:
-				stream_id = ATOMISP_INPUT_STREAM_GENERAL;
+		case ATOMISP_SUBDEV_PAD_SOURCE_CAPTURE:
+			stream_id = ATOMISP_INPUT_STREAM_CAPTURE;
+			break;
+		case ATOMISP_SUBDEV_PAD_SOURCE_VF:
+			stream_id = ATOMISP_INPUT_STREAM_POSTVIEW;
+			break;
+		case ATOMISP_SUBDEV_PAD_SOURCE_PREVIEW:
+			stream_id = ATOMISP_INPUT_STREAM_PREVIEW;
+			break;
+		default:
+			stream_id = ATOMISP_INPUT_STREAM_GENERAL;
 		}
 	}
 
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_compat_css15.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_compat_css15.h
index 3a6dde0..65599eb 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_compat_css15.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_compat_css15.h
@@ -57,7 +57,6 @@
 #define atomisp_css_shading_table	sh_css_shading_table
 #define atomisp_css_morph_table	sh_css_morph_table
 #define atomisp_css_fw_info	sh_css_fw_info
-typedef union sh_css_s3a_data atomisp_css_3a_data;
 
 #define CSS_PIPE_ID_PREVIEW	SH_CSS_PREVIEW_PIPELINE
 #define CSS_PIPE_ID_COPY	SH_CSS_COPY_PIPELINE
@@ -110,7 +109,7 @@ struct atomisp_css_env {
 };
 
 struct atomisp_s3a_buf {
-	atomisp_css_3a_data s3a_data;
+	union sh_css_s3a_data s3a_data;
 	struct list_head list;
 };
 
@@ -122,7 +121,7 @@ struct atomisp_dis_buf {
 struct atomisp_css_buffer {
 	struct sh_css_buffer css_buffer;
 	struct atomisp_css_dis_data *dis_data;
-	atomisp_css_3a_data *s3a_data;
+	union sh_css_s3a_data *s3a_data;
 };
 
 struct atomisp_css_event_type {
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_compat_css20.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_compat_css20.c
index d03db42..ffd2016 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_compat_css20.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_compat_css20.c
@@ -56,7 +56,6 @@
  * #4684168, if concurrency access happened, system may hard hang.
  */
 static DEFINE_SPINLOCK(mmio_lock);
-extern raw_spinlock_t pci_config_lock;
 
 enum frame_info_type {
 	ATOMISP_CSS_VF_FRAME,
@@ -1960,15 +1959,7 @@ static void __configure_preview_pp_input(struct atomisp_sub_device *asd,
 				 enum ia_css_pipe_id pipe_id)
 {
 	struct atomisp_device *isp = asd->isp;
-#if 0
-	/*
-	 * FIXME, this is workaround to disable YUV decimation which caused
-	 * vied BZ:1075
-	 */
-	int out_width, out_height, yuv_ds_in_width, yuv_ds_in_height;
-#else
 	int out_width, out_height;
-#endif
 	struct atomisp_stream_env *stream_env =
 		&asd->stream_env[ATOMISP_INPUT_STREAM_GENERAL];
 	struct ia_css_stream_config *stream_config = &stream_env->stream_config;
@@ -1976,14 +1967,6 @@ static void __configure_preview_pp_input(struct atomisp_sub_device *asd,
 		&stream_env->pipe_configs[pipe_id];
 	struct ia_css_pipe_extra_config *pipe_extra_configs =
 		&stream_env->pipe_extra_configs[pipe_id];
-#if 0
-	/*
-	 * FIXME, this is workaround to disable bayer downscaling which caused
-	 * vied BZ:1075
-	 */
-	struct ia_css_resolution *bayer_ds_out_res =
-		&pipe_configs->bayer_ds_out_res;
-#endif
 	struct ia_css_resolution *vf_pp_in_res =
 		&pipe_configs->vf_pp_in_res;
 	struct ia_css_resolution  *effective_res =
@@ -2003,99 +1986,9 @@ static void __configure_preview_pp_input(struct atomisp_sub_device *asd,
 	out_width = pipe_configs->output_info.res.width;
 	out_height = pipe_configs->output_info.res.height;
 
-	/*
-	 * The ISP could do bayer decimation, yuv decimation and yuv
-	 * downscaling:
-	 * 1: Bayer Decimimation: between effective resolution and
-	 * bayer_ds_res_out;
-	 * 2: YUV Decimation: between bayer_ds_res_out and vf_pp_in_res;
-	 * 3: YUV downscaling: between vf_pp_in_res and final vf output
-	 *
-	 * Rule for Bayer Decimation: support factor 2, 1.5 and 1.25
-	 * Rule for YUV Decimation: support factor 1,2,4
-	 * Rule for YUV Downscaling: arbitary value below 2
-	 *
-	 * General rule of factor distribution among these stages:
-	 * 1: try to do 2, 1.5, 1.25 in order for Bayer decimation if not in
-	 * online mode.
-	 * 2: try to do maximum of 2 for YUV downscaling
-	 * 3: the remainling for YUV decimation
-	 *
-	 * Note:
-	 * Do not configure bayer_ds_out_res if:
-	 * online == 1 or continuous == 0 or raw_binning = 0
-	 */
-
-	/*
-	 * calculate bayer decimate factor:
-	 * 1: only 2, 1.5, 1.25 get supported
-	 * 2: Do not configure bayer_ds_out_res if:
-	 * online == 1 or continuous == 0 or raw_binning = 0
-	 */
-#if 0
-	/*
-	 * FIXME, this is workaround to disable bayer downscaling which caused
-	 * vied BZ:1075
-	 */
-	if (stream_config->online || !stream_config->continuous ||
-			!pipe_extra_configs->enable_raw_binning) {
-		bayer_ds_out_res->width = 0;
-		bayer_ds_out_res->height = 0;
-	} else if (effective_res->width > out_width * 2 &&
-			effective_res->height > out_height * 2) {
-		bayer_ds_out_res->width = effective_res->width / 2;
-		bayer_ds_out_res->height = effective_res->height / 2;
-	} else if (effective_res->width > out_width * 3 / 2 &&
-			effective_res->height > out_height * 3 / 2) {
-		bayer_ds_out_res->width = effective_res->width * 2 / 3;
-		bayer_ds_out_res->height = effective_res->height * 2 / 3;
-	} else if (effective_res->width > out_width * 5 / 4 &&
-			effective_res->height > out_height * 5 / 4) {
-		bayer_ds_out_res->width = effective_res->width * 4 / 5;
-		bayer_ds_out_res->height = effective_res->height * 4 / 5;
-
-	} else {
-		bayer_ds_out_res->width = effective_res->width;
-		bayer_ds_out_res->height = effective_res->height;
-	}
-#endif
-	/*
-	 * calculate YUV Decimation, YUV downscaling facor:
-	 * YUV Downscaling factor must not exceed 2.
-	 * YUV Decimation factor could be 1, 2 ,4.
-	 */
-	/* first decide the yuv_ds input resolution */
-#if 0
-	/*
-	 * FIXME, this is workaround to disable YUV decimation which caused
-	 * vied BZ:1075
-	 */
-	if (bayer_ds_out_res->width == 0) {
-		yuv_ds_in_width = effective_res->width;
-		yuv_ds_in_height = effective_res->height;
-	} else {
-		yuv_ds_in_width = bayer_ds_out_res->width;
-		yuv_ds_in_height = bayer_ds_out_res->height;
-	}
-	if (yuv_ds_in_width > out_width * 4 &&
-			yuv_ds_in_height > out_height * 4) {
-		/* YUV Decimation factor 4 */
-		vf_pp_in_res->width = yuv_ds_in_width / 4;
-		vf_pp_in_res->height = yuv_ds_in_height / 4;
-	} else 	if (yuv_ds_in_width > out_width * 2 &&
-			yuv_ds_in_height > out_height * 2) {
-		/* YUV Decimation factor 2 */
-		vf_pp_in_res->width = yuv_ds_in_width / 2;
-		vf_pp_in_res->height = yuv_ds_in_height / 2;
-	} else {
-		/* YUV Decimation not needed */
-		vf_pp_in_res->width = yuv_ds_in_width;
-		vf_pp_in_res->height = yuv_ds_in_height;
-	}
-#else
 	vf_pp_in_res->width = effective_res->width;
 	vf_pp_in_res->height = effective_res->height;
-#endif
+
 	dev_dbg(isp->dev, "configuring pipe[%d]capture pp input w=%d.h=%d.\n",
 		pipe_id, width, height);
 }
@@ -2121,8 +2014,8 @@ static void __configure_video_pp_input(struct atomisp_sub_device *asd,
 		&pipe_configs->bayer_ds_out_res;
 	struct ia_css_resolution  *effective_res =
 		&stream_config->effective_res;
-	const struct bayer_ds_factor bds_factors[] =
-		{{8, 1}, {4, 1}, {2, 1}, {3, 2}, {5, 4}};
+	const struct bayer_ds_factor bds_factors[] = {
+		{8, 1}, {4, 1}, {2, 1}, {3, 2}, {5, 4} };
 	unsigned int i;
 
 	if (width == 0 && height == 0)
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_compat_css20.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_compat_css20.h
index 44aa49f..c0d43ee 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_compat_css20.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_compat_css20.h
@@ -80,7 +80,6 @@
 #define atomisp_css_morph_table	ia_css_morph_table
 #define atomisp_css_dvs_6axis_config	ia_css_dvs_6axis_config
 #define atomisp_css_fw_info	ia_css_fw_info
-typedef struct ia_css_isp_3a_statistics atomisp_css_3a_data;
 
 #define CSS_PIPE_ID_PREVIEW	IA_CSS_PIPE_ID_PREVIEW
 #define CSS_PIPE_ID_COPY	IA_CSS_PIPE_ID_COPY
@@ -160,7 +159,7 @@ struct atomisp_css_env {
 };
 
 struct atomisp_s3a_buf {
-	atomisp_css_3a_data *s3a_data;
+	struct ia_css_isp_3a_statistics *s3a_data;
 	struct list_head list;
 };
 
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_compat_ioctl32.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_compat_ioctl32.c
index 3d8da7c..242d155 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_compat_ioctl32.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_compat_ioctl32.c
@@ -681,7 +681,7 @@ static int get_atomisp_parameters32(struct atomisp_parameters *kp,
 	if (!access_ok(VERIFY_READ, up, sizeof(struct atomisp_parameters32)))
 			return -EFAULT;
 
-	while(n-- > 0) {
+	while (n-- > 0) {
 		compat_uptr_t *src = (compat_uptr_t *)up + n;
 		uintptr_t *dst = (uintptr_t *)kp + n;
 
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_compat_ioctl32.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_compat_ioctl32.h
index 9767b33..10e02f7 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_compat_ioctl32.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_compat_ioctl32.h
@@ -95,7 +95,7 @@ struct atomisp_morph_table32 {
 struct v4l2_framebuffer32 {
 	__u32			capability;
 	__u32			flags;
-	compat_uptr_t 		base;
+	compat_uptr_t		base;
 	struct v4l2_pix_format	fmt;
 };
 
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_fops.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_fops.c
index 3804d52..0f49697 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_fops.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_fops.c
@@ -58,11 +58,13 @@
 #define	ISP_PARAM_MMAP_OFFSET	0xfffff000
 
 #define MAGIC_CHECK(is, should)	\
-	if (unlikely((is) != (should))) { \
-		printk(KERN_ERR "magic mismatch: %x (expected %x)\n", \
-			is, should); \
-		BUG(); \
-	}
+	do { \
+		if (unlikely((is) != (should))) { \
+			pr_err("magic mismatch: %x (expected %x)\n", \
+				is, should); \
+			BUG(); \
+		} \
+	} while (0)
 
 /*
  * Videobuf ops
@@ -759,8 +761,7 @@ int atomisp_videobuf_mmap_mapper(struct videobuf_queue *q,
 
 	MAGIC_CHECK(q->int_ops->magic, MAGIC_QTYPE_OPS);
 	if (!(vma->vm_flags & VM_WRITE) || !(vma->vm_flags & VM_SHARED)) {
-		dev_err(isp->dev, "map appl bug: PROT_WRITE and MAP_SHARED "
-				  "are required\n");
+		dev_err(isp->dev, "map appl bug: PROT_WRITE and MAP_SHARED are required\n");
 		return -EINVAL;
 	}
 
@@ -785,11 +786,7 @@ int atomisp_videobuf_mmap_mapper(struct videobuf_queue *q,
 		    buf->boff == offset) {
 			vm_mem = buf->priv;
 			ret = frame_mmap(isp, vm_mem->vaddr, vma);
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 10, 0))
 			vma->vm_flags |= VM_IO|VM_DONTEXPAND|VM_DONTDUMP;
-#else
-			vma->vm_flags |= VM_DONTEXPAND | VM_RESERVED;
-#endif
 			break;
 		}
 	}
@@ -817,7 +814,6 @@ static int remove_pad_from_frame(struct atomisp_device *isp,
 		return -ENOMEM;
 	}
 
-//#define ISP_LEFT_PAD			128	/* equal to 2*NWAY */
 	load += ISP_LEFT_PAD;
 	for (i = 0; i < height; i++) {
 		ret = hrt_isp_css_mm_load(load, buffer, width*sizeof(load));
@@ -884,8 +880,7 @@ static int atomisp_mmap(struct file *file, struct vm_area_struct *vma)
 		raw_virt_addr->data_bytes = new_size;
 
 		if (size != PAGE_ALIGN(new_size)) {
-			dev_err(isp->dev, "incorrect size for mmap ISP"
-				 " Raw Frame\n");
+			dev_err(isp->dev, "incorrect size for mmap ISP Raw Frame\n");
 			ret = -EINVAL;
 			goto error;
 		}
@@ -897,11 +892,7 @@ static int atomisp_mmap(struct file *file, struct vm_area_struct *vma)
 			goto error;
 		}
 		raw_virt_addr->data_bytes = origin_size;
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 10, 0))
 		vma->vm_flags |= VM_IO|VM_DONTEXPAND|VM_DONTDUMP;
-#else
-		vma->vm_flags |= VM_RESERVED;
-#endif
 		mutex_unlock(&isp->mutex);
 		return 0;
 	}
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_internal.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_internal.h
index 3f6f6fe..6100c2c 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_internal.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_internal.h
@@ -55,7 +55,7 @@
 #define IS_BYT (INTEL_MID_BOARD(1, PHONE, BYT) || \
 	INTEL_MID_BOARD(1, TABLET, BYT))
 #define IS_MFLD (INTEL_MID_BOARD(1, PHONE, MFLD) || \
-        INTEL_MID_BOARD(1, TABLET, MFLD))
+	INTEL_MID_BOARD(1, TABLET, MFLD))
 
 #define MAX_STREAM_NUM	2
 
@@ -132,6 +132,11 @@
  */
 #define ATOMISP_MAX_ISR_LATENCY	1000
 
+/* Declared in hmm.c. */
+extern bool atomisp_hmm_is_2400;
+
+extern raw_spinlock_t pci_config_lock;
+
 struct atomisp_input_subdev {
 	unsigned int type;
 	enum atomisp_camera_port port;
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_ioctl.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_ioctl.c
index ba75443..ee3453b 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_ioctl.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_ioctl.c
@@ -965,9 +965,8 @@ int __atomisp_reqbufs(struct file *file, void *fh,
 
 	if (req->count == 0) {
 		mutex_lock(&pipe->capq.vb_lock);
-		if (!list_empty(&pipe->capq.stream)) {
+		if (!list_empty(&pipe->capq.stream))
 			videobuf_queue_cancel(&pipe->capq);
-		}
 		atomisp_videobuf_free_queue(&pipe->capq);
 		mutex_unlock(&pipe->capq.vb_lock);
 		return 0;
@@ -1386,13 +1385,11 @@ static int atomisp_streamon(struct file *file, void *fh,
 		    atomisp_subdev_source_pad(vdev)
 		    == ATOMISP_SUBDEV_PAD_SOURCE_CAPTURE) {
 			if (asd->run_mode->val == ATOMISP_RUN_MODE_VIDEO)
-			    dev_dbg(isp->dev,
-				"SDV last video raw buffer id: %u\n",
-				asd->latest_preview_exp_id);
+				dev_dbg(isp->dev, "SDV last video raw buffer id: %u\n",
+					asd->latest_preview_exp_id);
 			else
-			    dev_dbg(isp->dev,
-				"ZSL last preview raw buffer id: %u\n",
-				asd->latest_preview_exp_id);
+				dev_dbg(isp->dev, "ZSL last preview raw buffer id: %u\n",
+					asd->latest_preview_exp_id);
 
 			if (asd->delayed_init != ATOMISP_DELAYED_INIT_DONE) {
 				flush_work(&asd->delayed_init_work);
@@ -2216,11 +2213,7 @@ static int atomisp_s_parm_file(struct file *file, void *fh,
 }
 
 static long atomisp_vidioc_default(struct file *file, void *fh,
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 10, 0))
 	bool valid_prio, unsigned int cmd, void *arg)
-#else
-	bool valid_prio, int cmd, void *arg)
-#endif
 {
 	struct video_device *vdev = video_devdata(file);
 	struct atomisp_device *isp = video_get_drvdata(vdev);
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_trace_event.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_trace_event.h
index 5889287..60c1845 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_trace_event.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_trace_event.h
@@ -87,7 +87,7 @@ TRACE_EVENT(camera_debug,
 
 #undef TRACE_INCLUDE_PATH
 #undef TRACE_INCLUDE_FILE
-#define TRACE_INCLUDE_PATH .
+#define TRACE_INCLUDE_PATH (.)
 #define TRACE_INCLUDE_FILE   atomisp_trace_event
 /* This part must be outside protection */
 #include <trace/define_trace.h>
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_v4l2.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_v4l2.c
index 19d2541..f49cd12 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_v4l2.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/atomisp_v4l2.c
@@ -66,7 +66,7 @@ MODULE_PARM_DESC(dypool_enable,
 		"dynamic memory pool enable/disable (default:disable)");
 
 /* cross componnet debug message flag */
-int dbg_level = 0;
+int dbg_level;
 module_param(dbg_level, int, 0644);
 MODULE_PARM_DESC(dbg_level, "debug message on/off (default:off)");
 
@@ -603,8 +603,9 @@ static int atomisp_csi_lane_config(struct atomisp_device *isp)
 	u32 port_config_mask;
 	int port3_lanes_shift;
 
- 	if (isp->media_dev.hw_revision <
-	    ATOMISP_HW_REVISION_ISP2401_LEGACY << ATOMISP_HW_REVISION_SHIFT) {
+	if (isp->media_dev.hw_revision <
+		ATOMISP_HW_REVISION_ISP2401_LEGACY <<
+		ATOMISP_HW_REVISION_SHIFT) {
 		/* Merrifield */
 		port_config_mask = MRFLD_PORT_CONFIG_MASK;
 		port3_lanes_shift = MRFLD_PORT3_LANES_SHIFT;
@@ -615,7 +616,8 @@ static int atomisp_csi_lane_config(struct atomisp_device *isp)
 	}
 
 	if (isp->media_dev.hw_revision <
-	    ATOMISP_HW_REVISION_ISP2401 << ATOMISP_HW_REVISION_SHIFT) {
+		ATOMISP_HW_REVISION_ISP2401 <<
+		ATOMISP_HW_REVISION_SHIFT) {
 		/* Merrifield / Moorefield legacy input system */
 		nportconfigs = MRFLD_PORT_CONFIG_NUM;
 	} else {
@@ -752,7 +754,7 @@ static int atomisp_subdev_probe(struct atomisp_device *isp)
 			 * pixel_format.
 			 */
 			isp->inputs[isp->input_cnt].frame_size.pixel_format = 0;
-			sensor_pdata = (struct camera_sensor_platform_data*)
+			sensor_pdata = (struct camera_sensor_platform_data *)
 					board_info->platform_data;
 			if (sensor_pdata->get_camera_caps)
 				isp->inputs[isp->input_cnt].camera_caps =
@@ -1130,9 +1132,6 @@ static bool is_valid_device(struct pci_dev *dev,
 #endif /* ISP2400 */
 }
 
-/* Declared in hmm.c. */
-extern bool atomisp_hmm_is_2400;
-
 #define ATOM_ISP_PCI_BAR	0
 
 static int atomisp_pci_probe(struct pci_dev *dev,
@@ -1157,9 +1156,8 @@ static int atomisp_pci_probe(struct pci_dev *dev,
 	atomisp_dev = &dev->dev;
 
 	pdata = atomisp_get_platform_data();
-	if (pdata == NULL) {
+	if (pdata == NULL)
 		dev_warn(&dev->dev, "no platform data available\n");
-	}
 
 	err = pcim_enable_device(dev);
 	if (err) {
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/hmm/hmm_bo.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/hmm/hmm_bo.c
index 6849519..f270108 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/hmm/hmm_bo.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/hmm/hmm_bo.c
@@ -987,7 +987,7 @@ int hmm_bo_bind(struct hmm_buffer_object *bo)
 map_err:
 	/* unbind the physical pages with related virtual address space */
 	virt = bo->vm_node->start;
-	for ( ; i > 0; i--) {
+	for (; i > 0; i--) {
 		isp_mmu_unmap(&bdev->mmu, virt, 1);
 		virt += pgnr_to_size(1);
 	}
@@ -1232,11 +1232,7 @@ int hmm_bo_mmap(struct vm_area_struct *vma, struct hmm_buffer_object *bo)
 	vma->vm_private_data = bo;
 
 	vma->vm_ops = &hmm_bo_vm_ops;
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 10, 0))
 	vma->vm_flags |= VM_IO|VM_DONTEXPAND|VM_DONTDUMP;
-#else
-	vma->vm_flags |= (VM_RESERVED | VM_IO);
-#endif
 
 	/*
 	 * call hmm_bo_vm_open explictly.
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/hmm/hmm_bo_dev.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/hmm/hmm_bo_dev.c
index e842fb1..79ac4fd 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/hmm/hmm_bo_dev.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/hmm/hmm_bo_dev.c
@@ -59,9 +59,8 @@ int hmm_bo_device_init(struct hmm_bo_device *bdev,
 
 	ret = hmm_vm_init(&bdev->vaddr_space, vaddr_start, size);
 	if (ret) {
-		dev_err(atomisp_dev, "hmm_vm_init falied. "
-			     "vaddr_start = 0x%x, size = %d\n", vaddr_start,
-			     size);
+		dev_err(atomisp_dev, "hmm_vm_init falied. vaddr_start = 0x%x, size = %d\n",
+			vaddr_start, size);
 		goto vm_init_err;
 	}
 
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/hrt/memory_access.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/hrt/memory_access.c
index b10bfb5..d778b2d 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/hrt/memory_access.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/hrt/memory_access.c
@@ -21,7 +21,7 @@
  */
 
 static sys_address	page_table_base_address = (sys_address)-1;
-const ia_css_ptr	mmgr_NULL = 0;
+const ia_css_ptr       mmgr_NULL;
 
 #ifndef SH_CSS_MEMORY_GUARDING
 /* Choose default in case not defined */
@@ -220,7 +220,7 @@ void mmgr_free(
 	ia_css_ptr			vaddr)
 {
 /* "free()" should accept NULL, "hrt_isp_css_mm_free()" may not */
-	if (vaddr != mmgr_NULL) {
+	if (vaddr) {
 #if SH_CSS_MEMORY_GUARDING
 		alloc_admin_remove(vaddr);
 		/* Reconstruct the "original" address used with the alloc */
@@ -313,7 +313,7 @@ assert(0);
 (void)vaddr;
 (void)size;
 (void)attribute;
-return mmgr_NULL;
+return 0;
 }
 
 ia_css_ptr mmgr_mmap(const void *ptr, const size_t size, uint16_t attribute,
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/include/hmm/hmm_bo_dev.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/include/hmm/hmm_bo_dev.h
index 6e844e3..4655ea8 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/include/hmm/hmm_bo_dev.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/include/hmm/hmm_bo_dev.h
@@ -61,7 +61,7 @@ struct hmm_bo_device {
 	struct list_head	active_bo_list;
 
 	/* list lock is used to protect both of the buffer object lists */
-	struct spinlock		list_lock;
+	spinlock_t		list_lock;
 #ifdef CONFIG_ION
 	struct ion_client	*iclient;
 #endif
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/include/hmm/hmm_pool.h b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/include/hmm/hmm_pool.h
index 9b0d29e..57c3cf9 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/include/hmm/hmm_pool.h
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/include/hmm/hmm_pool.h
@@ -83,7 +83,7 @@ struct hmm_reserved_pool_info {
 
 	unsigned int		index;
 	unsigned int		pgnr;
-	struct spinlock		list_lock;
+	spinlock_t		list_lock;
 	bool			initialized;
 };
 
@@ -100,7 +100,7 @@ struct hmm_dynamic_pool_info {
 	struct list_head	pages_list;
 
 	/* list lock is used to protect the free pages block lists */
-	struct spinlock		list_lock;
+	spinlock_t		list_lock;
 
 #ifdef USE_KMEM_CACHE
 	struct kmem_cache	*pgptr_cache;
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/mmu/isp_mmu.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/mmu/isp_mmu.c
index 2040160..e9f2924 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/mmu/isp_mmu.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver_css15/mmu/isp_mmu.c
@@ -533,7 +533,6 @@ int isp_mmu_init(struct isp_mmu *mmu, struct isp_mmu_client *driver)
 
 #ifdef USE_KMEM_CACHE
 	mmu->tbl_cache = kmem_cache_create("iopte_cache", ISP_PAGE_SIZE,
-						//ISP_L1PT_PTES, SLAB_HWCACHE_ALIGN,
 					   ISP_PAGE_SIZE, SLAB_HWCACHE_ALIGN,
 					   NULL);
 	if (!mmu->tbl_cache)
-- 
1.9.1

