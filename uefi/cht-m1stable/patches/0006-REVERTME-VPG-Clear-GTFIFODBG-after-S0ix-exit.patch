From 0c38c48cfcf2a7bdda15a091eb1331e85cfcc023 Mon Sep 17 00:00:00 2001
Message-Id: <0c38c48cfcf2a7bdda15a091eb1331e85cfcc023.1426574757.git.chang-joon.lee@intel.com>
In-Reply-To: <eba22108096acc90a0516b200c616db90ae0cb5f.1426574757.git.chang-joon.lee@intel.com>
References: <eba22108096acc90a0516b200c616db90ae0cb5f.1426574757.git.chang-joon.lee@intel.com>
From: Deepak S <deepak.s@intel.com>
Date: Wed, 11 Mar 2015 21:21:19 +0530
Subject: [PATCH 6/8] REVERTME [VPG]: Clear GTFIFODBG after S0ix exit.
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

If there are any GT FIFO access during the S0ix sequence this will be
flagged up as an error using bit 4 of that register. Whenener this bit is
set the i915 driver issues a run-time warning indicating to the user what
happened. Unfortunately this is happening a lot more frequently than we
can account for. So for now while we debug the issue we will clear up the
error during resume while we root cause who, i915 kernel driver or p-unit,
is accessing the GT fifo during the S0ix sequence.

Revert Condition: Until we fully debug and understand where this sideband
access is common from we need to carry this patch to reduce the number of
run-time warnings.Â 

For: GMINL-6977
Change-Id: I5b2acf324b0c3bf0e7d201c2ec98b4861feed88b
Signed-off-by: Deepak S <deepak.s@intel.com>
---
 drivers/gpu/drm/i915/i915_drv.c |   17 +++++++++++++++++
 1 file changed, 17 insertions(+)

diff --git a/drivers/gpu/drm/i915/i915_drv.c b/drivers/gpu/drm/i915/i915_drv.c
index 0c878cf..220b306 100644
--- a/drivers/gpu/drm/i915/i915_drv.c
+++ b/drivers/gpu/drm/i915/i915_drv.c
@@ -1942,18 +1942,35 @@ static int intel_runtime_suspend(struct device *device)
 	return 0;
 }
 
+#define __raw_i915_read32(dev_priv__, reg__) \
+		readl((dev_priv__)->regs + (reg__))
+#define __raw_i915_write32(dev_priv__, reg__, val__) \
+		writel(val__, (dev_priv__)->regs + (reg__))
+
 static int intel_runtime_resume(struct device *device)
 {
 	struct pci_dev *pdev = to_pci_dev(device);
 	struct drm_device *dev = pci_get_drvdata(pdev);
 	struct drm_i915_private *dev_priv = dev->dev_private;
 	int ret;
+	u32 gtfifodbg;
 
 	if (WARN_ON_ONCE(!HAS_RUNTIME_PM(dev)))
 		return -ENODEV;
 
 	DRM_DEBUG_KMS("Resuming device\n");
 
+	/*
+	 * GTFIFODBG registers gets set to 0x10 post resume from S0iX.
+	 * This leads to warning to be hit in gen6_gt_check_fifodbg from
+	 * __vlv_force_wake_put called from register read first time post
+	 * resume. Clearing it here.
+	*/
+	if (IS_VALLEYVIEW(dev) && !IS_CHERRYVIEW(dev)) {
+		gtfifodbg = __raw_i915_read32(dev_priv, GTFIFODBG);
+		__raw_i915_write32(dev_priv, GTFIFODBG, gtfifodbg);
+	}
+
 	intel_opregion_notify_adapter(dev, PCI_D0);
 	dev_priv->pm.suspended = false;
 
-- 
1.7.9.5

