From fcb750dd255b1a8a0a16c6a1f82ab5d683195644 Mon Sep 17 00:00:00 2001
From: Tianshu Qiu <tian.shu.qiu@intel.com>
Date: Wed, 18 Mar 2015 17:00:06 +0800
Subject: [PATCH 333/338] atomisp2: Re-queue per-frame parameters in recovery

This patch re-queues pre-frame parameters in recovery

Change-Id: I2d620dd0e8d3c14ad1012a158cd6022e7b1e1611
Fixes-Issue: #H1503936301
Signed-off-by: Tianshu Qiu <tian.shu.qiu@intel.com>
Reviewed-on: https://icggerrit.ir.intel.com/46799
Approver: Bin B Han <bin.b.han@intel.com>
Reviewed-by: Bin B Han <bin.b.han@intel.com>
Build: IMIN-legacy (SC)
Validation-Android: Wei Tao <wei.tao@intel.com>
Integrator: Wei Tao <wei.tao@intel.com>
Build: Wei Tao <wei.tao@intel.com>
Reviewed-by: Wei Tao <wei.tao@intel.com>
Maintainer: Wei Tao <wei.tao@intel.com>
---
 .../pci/atomisp2/atomisp_driver/atomisp_cmd.c      | 28 ++++++++++++++++++++++
 .../pci/atomisp2/atomisp_driver/atomisp_fops.c     |  4 ----
 2 files changed, 28 insertions(+), 4 deletions(-)

diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c
index 4600240..e9726f9 100755
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c
@@ -778,6 +778,21 @@ void atomisp_flush_params_queue(struct atomisp_video_pipe *pipe)
 	}
 }
 
+/* Re-queue per-frame parameters */
+static void atomisp_recover_params_queue(struct atomisp_video_pipe *pipe)
+{
+	struct atomisp_css_params_with_list *param;
+	int i;
+
+	for (i = 0; i < VIDEO_MAX_FRAME; i++) {
+		param = pipe->frame_params[i];
+		if (param)
+			list_add_tail(&param->list, &pipe->per_frame_params);
+		pipe->frame_params[i] = NULL;
+	}
+	atomisp_handle_parameter_and_buffer(pipe);
+}
+
 /* find atomisp_video_pipe with css pipe id, buffer type and atomisp run_mode */
 static struct atomisp_video_pipe *__atomisp_get_pipe(
 		struct atomisp_sub_device *asd,
@@ -1095,6 +1110,14 @@ void atomisp_buf_done(struct atomisp_sub_device *asd, int error,
 			break;
 		}
 
+		/* free the parameters */
+		if (pipe->frame_params[vb->i]) {
+			atomisp_free_css_parameters(
+				&pipe->frame_params[vb->i]->params);
+			atomisp_kernel_free(pipe->frame_params[vb->i]);
+			pipe->frame_params[vb->i] = NULL;
+		}
+
 		pipe->frame_config_id[vb->i] = frame->isp_config_id;
 		ctrl.id = V4L2_CID_FLASH_MODE;
 		if (asd->params.flash_state == ATOMISP_FLASH_ONGOING) {
@@ -1382,6 +1405,11 @@ static void __atomisp_css_recover(struct atomisp_device *isp, bool isp_timeout)
 		 */
 		atomisp_flush_bufs_and_wakeup(asd);
 
+		/* Requeue unprocessed per-frame parameters. */
+		atomisp_recover_params_queue(&asd->video_out_capture);
+		atomisp_recover_params_queue(&asd->video_out_preview);
+		atomisp_recover_params_queue(&asd->video_out_video_capture);
+
 		if ((asd->depth_mode->val) &&
 			(depth_cnt == ATOMISP_DEPTH_SENSOR_STREAMON_COUNT)) {
 			depth_mode = true;
diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_fops.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_fops.c
index 2f195c7..331dbf3 100644
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_fops.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_fops.c
@@ -283,10 +283,6 @@ int atomisp_q_video_buffers_to_css(struct atomisp_sub_device *asd,
 					&asd->params.css_param.dz_config;
 				asd->params.css_update_params_needed = true;
 			}
-			/* free the parameters */
-			atomisp_free_css_parameters(&param->params);
-			atomisp_kernel_free(param);
-			pipe->frame_params[vb->i] = NULL;
 		}
 		/* Enqueue buffer */
 		err = atomisp_q_video_buffer_to_css(asd, vm_mem, stream_id,
-- 
1.9.1

