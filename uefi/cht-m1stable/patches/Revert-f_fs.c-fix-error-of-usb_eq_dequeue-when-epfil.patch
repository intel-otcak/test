From 4a7a5c8e077cb62ed26c37e5a6f62d8c509e3bcb Mon Sep 17 00:00:00 2001
From: Marcin Walewski <marcin.walewski@intel.com>
Date: Wed, 13 Apr 2016 13:46:18 +0200
Subject: [PATCH 1/6] Revert "f_fs.c: fix error of usb_eq_dequeue when
 epfile_io interrupted"

This reverts commit c70cc9e81b5a095a041ec417055b4ecfa8d30d33.

Change-Id: Idc6fc9f1582e960c6fdcf098eeb99d12bc2a0c23
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-17245
Signed-off-by: Marcin Walewski <marcin.walewski@intel.com>
Reviewed-on: https://android.intel.com:443/494135
---
 drivers/usb/gadget/f_fs.c | 45 +++++++++++++++------------------------------
 1 file changed, 15 insertions(+), 30 deletions(-)

diff --git a/drivers/usb/gadget/f_fs.c b/drivers/usb/gadget/f_fs.c
index dc13409..c090d06 100644
--- a/drivers/usb/gadget/f_fs.c
+++ b/drivers/usb/gadget/f_fs.c
@@ -675,37 +675,22 @@ static ssize_t ffs_epfile_io(struct file *file,
 
 		if (unlikely(ret < 0)) {
 			/* nop */
+		} else if (unlikely(wait_for_completion_interruptible(&done))) {
+			ret = -EINTR;
+			usb_ep_dequeue(ep->ep, req);
 		} else {
-			ret = wait_for_completion_interruptible(&done);
-			if (ret) {
-				/*
-				 * Hardware can't process END command
-				 * clearly if req has been START. We
-				 * can't force End command.
-				 */
-				ret = usb_ep_dequeue_forced(ep->ep, req, 0);
-				if (ret < 0) {
-					wait_for_completion(&done);
-					ret = 0;
-				} else
-					ret = -EINTR;
-			}
-
-			if (!ret) {
-				/*
-				 * XXX We may end up silently droping data
-				 * here. Since data_len (i.e. req->length)
-				 * may be bigger than len (after being
-				 * rounded up to maxpacketsize), we may end
-				 * up with more data then user space has
-				 * space for.
-				 */
-				ret = ep->status;
-				if (read && ret > 0 &&
-					unlikely(copy_to_user(buf, data,
-						min_t(size_t, ret, len))))
-					ret = -EFAULT;
-			}
+			/*
+			 * XXX We may end up silently droping data here.
+			 * Since data_len (i.e. req->length) may be bigger
+			 * than len (after being rounded up to maxpacketsize),
+			 * we may end up with more data then user space has
+			 * space for.
+			 */
+			ret = ep->status;
+			if (read && ret > 0 &&
+			    unlikely(copy_to_user(buf, data,
+						  min_t(size_t, ret, len))))
+				ret = -EFAULT;
 		}
 	}
 
-- 
1.9.1

