From 3ca7e0b682d69af5d9c3482c20d8201214fc8b4f Mon Sep 17 00:00:00 2001
Message-Id: <3ca7e0b682d69af5d9c3482c20d8201214fc8b4f.1421709247.git.chang-joon.lee@intel.com>
In-Reply-To: <3650eb44734ad4fbe098313349da8185595a20d8.1421709247.git.chang-joon.lee@intel.com>
References: <3650eb44734ad4fbe098313349da8185595a20d8.1421709247.git.chang-joon.lee@intel.com>
From: Deepak S <deepak.s@intel.com>
Date: Tue, 21 Oct 2014 08:59:47 +0530
Subject: [PATCH 04/75] MUST_REBASE [VPG]: drm/i915/adf: Add a function to
 sanitize intel adf enable

Adding a "intel_sanitize_enable_adf" function to sanitize if the required kernel
parameter & CONFIG is enabled to load adf related functions.

MUST_REBASE: Since Google ADF framework is not in upstream and also
we cannot have two display drivers, other one being i915, we need to
work on i915 and ADF convergence path before it can be upstreamed

v2: Use one kernel parameter to enable ADF & disable display in i915.

For: GMINL-3547
Change-Id: I921029f9015d858cce74bbdb5975348ad3bbdfd1
Signed-off-by: Deepak S <deepak.s@intel.com>
---
 drivers/gpu/drm/i915/i915_dma.c      |   10 ++++++++++
 drivers/gpu/drm/i915/intel_display.c |   28 ++++++++++++++++++++++++++++
 drivers/gpu/drm/i915/intel_drv.h     |    1 +
 3 files changed, 39 insertions(+)

diff --git a/drivers/gpu/drm/i915/i915_dma.c b/drivers/gpu/drm/i915/i915_dma.c
index 9ef6f89..13494bc 100644
--- a/drivers/gpu/drm/i915/i915_dma.c
+++ b/drivers/gpu/drm/i915/i915_dma.c
@@ -1553,6 +1553,16 @@ static void intel_device_info_runtime_init(struct drm_device *dev)
 		for_each_pipe(pipe)
 			info->num_sprites[pipe] = 1;
 
+	/* Sanitize i915.enable_intel_adf module parameter */
+	i915.enable_intel_adf = intel_sanitize_enable_adf(dev,
+						i915.enable_intel_adf);
+
+	/* Let's use one kernel paramter to handle ADF enable/disable_display
+	 * If ADF is enabled, force disable_display to skip display in i915
+	 */
+	if (i915.enable_intel_adf)
+		i915.disable_display = 1;
+
 	if (i915.disable_display) {
 		DRM_INFO("Display disabled (module parameter)\n");
 		info->num_pipes = 0;
diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index b077c9d..9d6f149 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -73,6 +73,34 @@ static void haswell_set_pipeconf(struct drm_crtc *crtc);
 static void intel_set_pipe_csc(struct drm_crtc *crtc);
 static void vlv_prepare_pll(struct intel_crtc *crtc);
 
+/**
+ * intel_sanitize_enable_adf() - sanitize i915.enable_intel_adf
+ * @dev: DRM device.
+ * @enable_intel_adf: value of i915.enable_intel_adf module parameter.
+ *
+ * Only certain configuration support adf(the prerequisites being
+ * i915.disable_display & CONFIG_ADF_INTEL),
+ * and only when enabled via module parameter.
+ *
+ * Return: 1 if ADF is supported and has to be enabled.
+ */
+
+int intel_sanitize_enable_adf(struct drm_device *dev, int enable_intel_adf)
+{
+	if (enable_intel_adf == 0)
+		return 0;
+
+#ifndef CONFIG_ADF_INTEL
+	return 0;
+#endif
+
+	/* Current ADF support only for VLV */
+	if (IS_VALLEYVIEW(dev) && IS_GEN7(dev))
+		return 1;
+
+	return 0;
+}
+
 typedef struct {
 	int	min, max;
 } intel_range_t;
diff --git a/drivers/gpu/drm/i915/intel_drv.h b/drivers/gpu/drm/i915/intel_drv.h
index 4a85b2b..57bb457 100644
--- a/drivers/gpu/drm/i915/intel_drv.h
+++ b/drivers/gpu/drm/i915/intel_drv.h
@@ -849,6 +849,7 @@ void intel_ddi_get_config(struct intel_encoder *encoder,
 
 /* intel_display.c */
 const char *intel_output_name(int output);
+int intel_sanitize_enable_adf(struct drm_device *dev, int enable_intel_adf);
 bool intel_has_pending_fb_unpin(struct drm_device *dev);
 int intel_pch_rawclk(struct drm_device *dev);
 int valleyview_cur_cdclk(struct drm_i915_private *dev_priv);
-- 
1.7.9.5

