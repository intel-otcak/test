From 8cf8a6180f07e5a6d3527b82b3bad330893136c6 Mon Sep 17 00:00:00 2001
From: Eliot Lee <eliot.lee@intel.com>
Date: Tue, 10 Feb 2015 23:48:22 -0800
Subject: [PATCH 294/307] atomisp2: [ACC] HAL hanging workaround when WDT
 recovery

Sending "V4L2_EVENT_ATOMISP_ACC_COMPLETE" messages to hal
for releasing the blocked waitStageUpdate calls when the driver
enters a recovery process.

Change-Id: Id8e79eac55696a1092efeb1369f2f9ac425fa44c
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-17169
Signed-off-by: Eliot Lee <eliot.lee@intel.com>
Reviewed-on: https://icggerrit.ir.intel.com/40945
Reviewed-by: Tuukka Toivonen <tuukka.toivonen@intel.com>
Reviewed-by: Soren Friis <soren.friis@intel.com>
Validation-Android: Wei Tao <wei.tao@intel.com>
Integrator: Wei Tao <wei.tao@intel.com>
Build: Wei Tao <wei.tao@intel.com>
Reviewed-by: Wei Tao <wei.tao@intel.com>
Maintainer: Wei Tao <wei.tao@intel.com>
---
 .../media/pci/atomisp2/atomisp_driver/atomisp_cmd.c   | 19 +++++++++++++++++++
 1 file changed, 19 insertions(+)
 mode change 100644 => 100755 drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c

diff --git a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c
old mode 100644
new mode 100755
index 17859dc..66f4e82
--- a/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c
+++ b/drivers/external_drivers/camera/drivers/media/pci/atomisp2/atomisp_driver/atomisp_cmd.c
@@ -1245,11 +1245,30 @@ static void __atomisp_css_recover(struct atomisp_device *isp, bool isp_timeout)
 
 	for (i = 0; i < isp->num_of_streams; i++) {
 		struct atomisp_sub_device *asd = &isp->asd[i];
+		struct ia_css_pipeline *acc_pipeline;
 
 		if (asd->streaming != ATOMISP_DEVICE_STREAMING_ENABLED &&
 		    !asd->stream_prepared)
 			continue;
 
+		/*
+		* AtomISP::waitStageUpdate is blocked when WDT happens.
+		* By calling acc_done() for all loaded fw_handles,
+		* HAL will be unblocked.
+		*/
+		acc_pipeline =
+			ia_css_pipe_get_pipeline(
+			asd->stream_env[i].pipes[CSS_PIPE_ID_ACC]);
+		if (acc_pipeline) {
+			struct ia_css_pipeline_stage *stage;
+			for (stage = acc_pipeline->stages; stage;
+				stage = stage->next) {
+				const struct ia_css_fw_info *fw;
+				fw = stage->firmware;
+				atomisp_acc_done(asd, fw->handle);
+			}
+		}
+
 		depth_cnt++;
 
 		if (asd->delayed_init == ATOMISP_DELAYED_INIT_QUEUED)
-- 
1.9.1

