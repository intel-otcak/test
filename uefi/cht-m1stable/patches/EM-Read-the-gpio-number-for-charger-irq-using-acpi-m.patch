From 5ee227a72be7866d45c3a5059f96fbd3b801b15b Mon Sep 17 00:00:00 2001
From: Albin B <albin.bala.krishnan@intel.com>
Date: Wed, 30 Sep 2015 15:34:24 +0530
Subject: [PATCH 24/28] [EM]: Read the gpio number for charger irq using acpi
 method

To receive the charger interrupts, read the soc charger irq gpio
number from the bios using acpi method and configure it.

Change-Id: Ia28310ee267d481c329b82b15064370ad86b3b46
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-9421
Signed-off-by: Albin B <albin.bala.krishnan@intel.com>
Reviewed-on: https://android.intel.com:443/429502
(cherry picked from commit b1eb9690917f9ceada8258e5a8fa227a7f3e12b3)
Reviewed-on: https://android.intel.com:443/438672
---
 drivers/mfd/intel_soc_pmic_wc.c | 29 ++++++++++++++++++++++++++++-
 1 file changed, 28 insertions(+), 1 deletion(-)

diff --git a/drivers/mfd/intel_soc_pmic_wc.c b/drivers/mfd/intel_soc_pmic_wc.c
index 15dacd7..a581e2b 100644
--- a/drivers/mfd/intel_soc_pmic_wc.c
+++ b/drivers/mfd/intel_soc_pmic_wc.c
@@ -801,6 +801,29 @@ static acpi_handle pmic_handle(void)
 	return ACPI_HANDLE(intel_soc_pmic_dev());
 }
 
+static int acpi_get_chgr_irq(int *irq)
+{
+	struct gpio_desc *gpiod;
+	struct device *dev = intel_soc_pmic_dev();
+	int ret;
+
+	gpiod = devm_gpiod_get_index(dev, KBUILD_MODNAME, 1);
+	if (IS_ERR(gpiod)) {
+		dev_err(dev, "Unable to get the gpio 1 %d\n", PTR_ERR(gpiod));
+		return -EINVAL;
+	}
+
+	ret = gpiod_direction_input(gpiod);
+	if (ret < 0) {
+		dev_err(dev, "Cannot configure chgr_irq as input %d\n",
+			ret);
+		return ret;
+	}
+
+	*irq = gpiod_to_irq(gpiod);
+	return 0;
+}
+
 static int acpi_get_lpat_table(int **lpat)
 {
 	struct acpi_buffer buffer = { ACPI_ALLOCATE_BUFFER, NULL };
@@ -949,13 +972,17 @@ static u8 pmic_read_tt(u8 addr)
 static void __init register_external_charger(void)
 {
 	static struct i2c_board_info i2c_info;
+	int irq;
 
 	if (!wcove_init_done)
 		return;
 
 	strncpy(i2c_info.type, "ext-charger", I2C_NAME_SIZE);
 	i2c_info.addr = pmic_read_tt(TT_I2CDADDR_ADDR);
-	i2c_info.irq = whiskey_cove_pmic.irq_base + CHGR_IRQ;
+	if (acpi_get_chgr_irq(&irq))
+		i2c_info.irq = whiskey_cove_pmic.irq_base + CHGR_IRQ;
+	else
+		i2c_info.irq = irq;
 	i2c_new_device(wcove_pmic_i2c_adapter, &i2c_info);
 }
 late_initcall(register_external_charger);
-- 
1.9.1

