From 56fb054a2d2a143898bf41ba8ec5651622115077 Mon Sep 17 00:00:00 2001
From: Jonathan DE CESCO <jonathan.de.cesco@intel.com>
Date: Wed, 5 Nov 2014 16:14:59 +0100
Subject: [PATCH 3/3] bcmdhd: Disable Wifi PCIe runtime PM on CHT

PCIe pm runtime has been enabled on CHT.
Bcmdhd driver is not ready for this and this
prevents device probing.
Fix this by disabling pm runtime on wifi chip
PCI bus

Change-Id: I5333a0de89091d31001e9b132a365cf8559f99c3
Signed-off-by: Jonathan DE CESCO <jonathan.de.cesco@intel.com>
---
 drivers/net/wireless/bcmdhd/dhd_pcie_linux.c | 25 +++++++++++++++++++++++++
 1 file changed, 25 insertions(+)

diff --git a/drivers/net/wireless/bcmdhd/dhd_pcie_linux.c b/drivers/net/wireless/bcmdhd/dhd_pcie_linux.c
index 3a01f913df02..c3c34747e75e 100644
--- a/drivers/net/wireless/bcmdhd/dhd_pcie_linux.c
+++ b/drivers/net/wireless/bcmdhd/dhd_pcie_linux.c
@@ -50,6 +50,7 @@
 #if defined (CONFIG_ARCH_MSM)
 #include <mach/msm_pcie.h>
 #endif
+#include <linux/pm_runtime.h>
 
 #define PCI_CFG_RETRY 		10
 #define OS_HANDLE_MAGIC		0x1234abcd	/* Magic # to recognize osh */
@@ -251,6 +252,28 @@ int dhdpcie_pci_suspend_resume(struct pci_dev *dev, bool state)
 }
 
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 0))
+static int dhdpcie_pci_disable_pm_runtime(struct device *dev, void *data)
+{
+	struct pci_dev *pcidev;
+	int *cnt = data;
+
+	pcidev = container_of(dev, struct pci_dev, dev);
+	if (pcidev->device == 0x22c8) {
+		DHD_ERROR(("PCI bridge pm runtime off: 0x%04x, 0x%04x, %s\n",
+			   pcidev->vendor, pcidev->device, dev_name(dev)));
+		if (pm_runtime_enabled(dev))
+			pm_runtime_forbid(dev);
+		pci_rescan_bus(pcidev->bus);
+	}
+
+	*cnt += 1;
+
+	return 0;
+}
+#endif /* LINUX_VERSION >= 2.6.0 */
+
+
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 0))
 static int dhdpcie_device_scan(struct device *dev, void *data)
 {
 	struct pci_dev *pcidev;
@@ -283,6 +306,8 @@ dhdpcie_bus_register(void)
 	DHD_ERROR(("%s: pci_module_init failed 0x%x\n", __FUNCTION__, error));
 #else
 	if (!(error = pci_register_driver(&dhdpcie_driver))) {
+		bus_for_each_dev(dhdpcie_driver.driver.bus, NULL, &error,
+				 dhdpcie_pci_disable_pm_runtime);
 		bus_for_each_dev(dhdpcie_driver.driver.bus, NULL, &error, dhdpcie_device_scan);
 		if (!error) {
 			DHD_ERROR(("No Broadcom PCI device enumerated!\n"));
-- 
2.0.3

