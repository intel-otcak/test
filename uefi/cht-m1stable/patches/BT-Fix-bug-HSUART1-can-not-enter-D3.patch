From f673db85fb6804622289d3dfe4bbe002f1ad0a1a Mon Sep 17 00:00:00 2001
From: b883 <b883@borqs.com>
Date: Tue, 1 Dec 2015 09:14:44 +0800
Subject: [PATCH 4/4] [BT] Fix bug, HSUART1 can not enter D3

Check the UART status before enable/disable it

Change-Id: Ib1b8dd5db0bc128e22db5866fc2a468e67d19f04
Borig-Change-Id: Ie53d292d98091ab95548667343784f050e58bd86
Reviewed-on: http://192.168.1.79/gerrit/15603
Reviewed-by: b225 <b225@borqs.com>
Reviewed-on: https://android.intel.com:443/444782
Signed-off-by: Marco Chiotti <marcox.chiotti@intel.com>
Tracked-On: https://jira01.devtools.intel.com/browse/OAM-20208
Reviewed-on: https://android.intel.com:443/471655
---
 drivers/misc/bt_lpm/bt_lpm.c | 19 ++++++++++++++++---
 1 file changed, 16 insertions(+), 3 deletions(-)

diff --git a/drivers/misc/bt_lpm/bt_lpm.c b/drivers/misc/bt_lpm/bt_lpm.c
index 7205541..f70d003 100644
--- a/drivers/misc/bt_lpm/bt_lpm.c
+++ b/drivers/misc/bt_lpm/bt_lpm.c
@@ -80,15 +80,27 @@ struct bluetooth_low_power_mode {
 #ifndef DBG_DISABLE_BT_LOW_POWER
 static void uart_enable(struct device *tty)
 {
+	if (wake_uart_enabled) {
+		pr_debug("%s: uart already enabled\n", __func__);
+		return;
+	}
+
 	pr_debug("%s: runtime get\n", __func__);
 	/* Tell PM runtime to power on the tty device and block s0i3 */
+	wake_uart_enabled = true;
 	pm_runtime_get(tty);
 }
 
 static void uart_disable(struct device *tty)
 {
+	if (!wake_uart_enabled) {
+		pr_debug("%s: uart already disabled\n", __func__);
+		return;
+	}
+
 	pr_debug("%s: runtime put\n", __func__);
 	/* Tell PM runtime to release tty device and allow s0i3 */
+	wake_uart_enabled = false;
 	pm_runtime_put(tty);
 }
 #endif /* !DBG_DISABLE_BT_LOW_POWER */
@@ -213,18 +225,17 @@ static void set_wake_locked(int wake)
 		}
 	}
 
-	if (!wake_uart_enabled && wake) {
+	if (wake) {
 		WARN_ON(!bt_lpm.tty_dev);
 		uart_enable(bt_lpm.tty_dev);
 	}
 
 	gpio_set_value(bt_lpm.gpio_wake, wake);
 
-	if (wake_uart_enabled && !wake) {
+	if (!wake) {
 		WARN_ON(!bt_lpm.tty_dev);
 		uart_disable(bt_lpm.tty_dev);
 	}
-	wake_uart_enabled = wake;
 }
 
 static enum hrtimer_restart enter_lpm(struct hrtimer *timer)
@@ -379,6 +390,8 @@ static int bluetooth_lpm_init(struct platform_device *pdev)
 	bt_lpm.wake_lock_status = 0;
 
 	bt_lpm_wake_peer(tty_dev);
+	set_wake_locked(0);
+
 	return 0;
 }
 #endif /* !DBG_DISABLE_BT_LOW_POWER */
-- 
1.9.1

