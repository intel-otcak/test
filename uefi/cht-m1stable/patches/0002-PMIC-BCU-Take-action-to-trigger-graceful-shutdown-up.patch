From 7a899daf681d7ee69b4e47d3fc6d29b341e1379f Mon Sep 17 00:00:00 2001
From: Albin B <albin.bala.krishnan@intel.com>
Date: Wed, 12 Nov 2014 15:52:04 +0530
Subject: [PATCH 2/2] PMIC-BCU: Take action to trigger graceful shutdown upon
 VWARNA event

To initiate the graceful shutdown from kernel, set the battery capacity to 0%
via battery driver upon receiving WARNA voltage drop event from PMIC BCU. Then
notify power supply subsystem to read the capacity has changed externally. So
the battery service will read the battery level and does graceful shutdown due
to low battery level.

Tracked-on: https://jira01.devtools.intel.com/browse/IMINAN-8961
Change-Id: I2082aea75a262a118aaa5043a4be3cb28bc5229e
Signed-off-by: Albin B <albin.bala.krishnan@intel.com>
---
 drivers/hwmon/intel_wcove_bcu.c | 49 +++++++++++++++++++++++++++++++++++++++++
 1 file changed, 49 insertions(+)

diff --git a/drivers/hwmon/intel_wcove_bcu.c b/drivers/hwmon/intel_wcove_bcu.c
index cf68373..91687d9 100644
--- a/drivers/hwmon/intel_wcove_bcu.c
+++ b/drivers/hwmon/intel_wcove_bcu.c
@@ -314,6 +314,30 @@ static inline int wcove_bcu_get_battery_voltage(int *volt)
 	return ret;
 }
 
+/**
+ * Initiate Graceful Shutdown by setting the SOC to 0% via battery driver and
+ * post the power supply changed event to indicate the change in battery level.
+ */
+static inline int wcove_bcu_action_voltage_drop(void)
+{
+	struct power_supply *psy;
+	union power_supply_propval val;
+	int ret;
+
+	psy = wcove_bcu_get_psy_battery();
+	if (!psy)
+		return -EINVAL;
+
+	/* setting battery capacity to 0 */
+	val.intval = 0;
+	ret = psy->set_property(psy, POWER_SUPPLY_PROP_CAPACITY, &val);
+	if (ret < 0)
+		return ret;
+
+	power_supply_changed(psy);
+	return 0;
+}
+
 static void wcove_bcu_handle_vwarnb_event(void *dev_data, u8 status)
 {
 	int beh_data, ret;
@@ -342,6 +366,30 @@ fail:
 	return;
 }
 
+static void wcove_bcu_handle_vwarna_event(void *dev_data)
+{
+	int ret;
+	struct wcpmic_bcu_info *info = (struct wcpmic_bcu_info *)dev_data;
+
+	/* Trigger graceful shutdown via battery driver by setting SOC to 0% */
+	dev_info(info->dev, "Triggering Graceful Shutdown\n");
+	ret = wcove_bcu_action_voltage_drop();
+	if (ret) {
+		dev_err(info->dev,
+			"Error in Triggering Graceful Shutdown\n");
+		return;
+	}
+
+	/**
+	 * Masking the BCU MVWARNA and MVWARNB Interrupt, since software does
+	 * graceful shutdown once VWARNA interrupt occurs. So we never expect
+	 * another VWARNA or VWARNB interrupt.
+	 */
+	ret = intel_soc_pmic_setb(MBCUIRQ_REG, (u8)(MVWARNA | MVWARNB));
+	if (ret)
+		dev_err(info->dev, "Error in masking vwarna and vwarnb intr\n");
+}
+
 static void wcove_bcu_handle_vwarn_event(void *dev_data, int event)
 {
 	u8 irq_status;
@@ -360,6 +408,7 @@ static void wcove_bcu_handle_vwarn_event(void *dev_data, int event)
 		wcove_bcu_handle_vwarnb_event(dev_data, irq_status);
 	} else if (event == VWARNA) {
 		dev_info(info->dev, "VWARNA Event has occured\n");
+		wcove_bcu_handle_vwarna_event(dev_data);
 	}
 }
 
-- 
1.9.1

