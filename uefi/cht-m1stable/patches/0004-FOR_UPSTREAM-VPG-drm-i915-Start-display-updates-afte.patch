From 967e627513869a47846ba66e56ab70b162f89c8a Mon Sep 17 00:00:00 2001
Message-Id: <967e627513869a47846ba66e56ab70b162f89c8a.1417465742.git.chang-joon.lee@intel.com>
In-Reply-To: <664d811e547fec51f0453c5acda92012de288ecd.1417465742.git.chang-joon.lee@intel.com>
References: <664d811e547fec51f0453c5acda92012de288ecd.1417465742.git.chang-joon.lee@intel.com>
From: Vijay Purushothaman <vijay.a.purushothaman@intel.com>
Date: Tue, 23 Sep 2014 22:43:28 +0530
Subject: [PATCH 04/11] FOR_UPSTREAM [VPG]: drm/i915: Start display updates
 after the vsync

This patch adds a part of required code from the nuclear page flip work.
from upstream commit cf66897269562661297b9bf41a50ea213ad4c626
drm/i915: Add atomic page flip support.
Author: Ville syrjala <ville.syrjala@linux.intel.com>
Reference:
http://lists.freedesktop.org/archives/intel-gfx/2012-December/023106.html

Issue: GMIN-2035
Change-Id: I48924c71630c4b4b378fd1b41f61ac803161d117
Signed-off-by: Vijay Purushothaman <vijay.a.purushothaman@intel.com>
Signed-off-by: Vidya Srinivas <vidya.srinivas@intel.com>
Signed-off-by: Sangani, Suryanarayana R <suryanarayana.r.sangani@intel.com>
---
 drivers/gpu/drm/i915/intel_display.c |   44 ++++++++++++++++++++++++++++++++++
 1 file changed, 44 insertions(+)

diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index fc671a96..595bb8b 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -10772,6 +10772,48 @@ int intel_set_disp_commit_regs(struct drm_mode_set_display *disp,
 	return ret;
 }
 
+static unsigned int usecs_to_scanlines(struct drm_crtc *crtc,
+				       unsigned int usecs)
+{
+	/* paranoia */
+	if (!crtc->hwmode.crtc_htotal)
+		return 1;
+
+	return DIV_ROUND_UP(usecs * crtc->hwmode.clock,
+			    1000 * crtc->hwmode.crtc_htotal);
+}
+
+static void intel_pipe_vblank_evade(struct drm_crtc *crtc)
+{
+	struct drm_device *dev = crtc->dev;
+	struct drm_i915_private *dev_priv = dev->dev_private;
+	struct intel_crtc *intel_crtc = to_intel_crtc(crtc);
+	int pipe = intel_crtc->pipe;
+	/* FIXME needs to be calibrated sensibly */
+	u32 min = crtc->hwmode.crtc_vdisplay - usecs_to_scanlines(crtc, 50);
+	u32 max = crtc->hwmode.crtc_vdisplay - 1;
+	long timeout = msecs_to_jiffies(3);
+	u32 val;
+
+	local_irq_disable();
+	val = I915_READ(PIPEDSL(pipe));
+	local_irq_enable();
+
+	while (val >= min && val <= max && timeout > 0) {
+
+		intel_wait_for_vblank(dev_priv->dev, intel_crtc->pipe);
+		local_irq_disable();
+		val = I915_READ(PIPEDSL(pipe));
+		local_irq_enable();
+		dev_priv->wait_vbl = false;
+	}
+
+	if (val >= min && val <= max)
+		dev_warn(dev->dev,
+			 "Page flipping close to vblank start (DSL=%u, VBL=%u)\n",
+			 val, crtc->hwmode.crtc_vdisplay);
+}
+
 static int intel_crtc_set_display(struct drm_crtc *crtc,
 				struct drm_mode_set_display *disp,
 				struct drm_file *file_priv)
@@ -10830,6 +10872,8 @@ static int intel_crtc_set_display(struct drm_crtc *crtc,
 		dev_priv->wait_vbl = false;
 	}
 
+	intel_pipe_vblank_evade(crtc);
+
 	/* Commit to registers */
 	ret = intel_set_disp_commit_regs(disp, dev, intel_crtc);
 
-- 
1.7.9.5

