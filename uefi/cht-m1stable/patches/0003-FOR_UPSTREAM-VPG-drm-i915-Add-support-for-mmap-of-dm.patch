From 418fe346bb39436787102efe40c41612707515a3 Mon Sep 17 00:00:00 2001
Message-Id: <418fe346bb39436787102efe40c41612707515a3.1424979244.git.feitong.yi@intel.com>
In-Reply-To: <d8466aca83b11ab8b0870e775536306782d73e9f.1424979244.git.feitong.yi@intel.com>
References: <d8466aca83b11ab8b0870e775536306782d73e9f.1424979244.git.feitong.yi@intel.com>
From: Gajanan Bhat <gajanan.bhat@intel.com>
Date: Fri, 30 Jan 2015 09:29:38 +0530
Subject: [PATCH 03/28] FOR_UPSTREAM [VPG]: drm/i915: Add support for mmap of
 dma_buf

Once GEM buffers are exported as DMABUF, from user space they expect mmap
operation to write data. Add support for mmap of dma_buf.

Issue: GMINL-5535
Change-Id: If74f3bd2bb80bce2f43e93d5a7557f0a33c1edc1
Signed-off-by: Gajanan Bhat <gajanan.bhat@intel.com>
---
 drivers/gpu/drm/i915/i915_gem_dmabuf.c |   16 +++++++++++++++-
 1 file changed, 15 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/i915/i915_gem_dmabuf.c b/drivers/gpu/drm/i915/i915_gem_dmabuf.c
index f79c10b..5ab77a0 100644
--- a/drivers/gpu/drm/i915/i915_gem_dmabuf.c
+++ b/drivers/gpu/drm/i915/i915_gem_dmabuf.c
@@ -248,7 +248,21 @@ static void i915_gem_dmabuf_kunmap(struct dma_buf *dma_buf, unsigned long page_n
 
 static int i915_gem_dmabuf_mmap(struct dma_buf *dma_buf, struct vm_area_struct *vma)
 {
-	return -EINVAL;
+	int ret = 0;
+	struct drm_i915_gem_object *obj = dma_buf_to_obj(dma_buf);
+	struct drm_device *dev = obj->base.dev;
+
+	if (!obj->base.filp) {
+		ret = -EINVAL;
+		goto out;
+	}
+
+	mutex_lock(&dev->struct_mutex);
+	ret = drm_gem_mmap_obj(&obj->base, obj->base.size, vma);
+	mutex_unlock(&dev->struct_mutex);
+
+out:
+	return ret;
 }
 
 static int i915_gem_begin_cpu_access(struct dma_buf *dma_buf, size_t start, size_t length, enum dma_data_direction direction)
-- 
1.7.9.5

